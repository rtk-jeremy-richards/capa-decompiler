{
    "0040109d": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_2h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0040109d(void)\n\n{\n    int32_t *arg_8h;\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    uint var_42ch;\n    uint lpPathName;\n    uint var_14h;\n    int32_t var_8h;\n    uint var_2h;\n    \n    var_2h._0_1_ = '\\0';\n    var_2h._1_1_ = '\\0';\n    (**0x459314)(0x104, &lpPathName);\n    fcn.004013e2(in_EAX);\n    arg_8h = in_EAX + 0x10;\n    if (*arg_8h == 0) {\n        fcn.0040fb68(1, *(in_EAX + 0x18), 0xffffffff);\n    }\n    else {\n        cVar1 = fcn.0040fff3(arg_8h, &var_2h);\n        if (cVar1 == '\\0') {\n            *0x4679dc = 1;\n            goto code_r0x0040126b;\n        }\n        *(in_EAX + 0x14) = *0x47bd40;\n        var_2h._1_1_ = *0x47bd41;\n        (*_sym.imp.KERNEL32.DLL_GetFullPathNameW)(in_EAX + 0x24, 0x104, &var_42ch, in_EAX + 0xc);\n    }\n    fcn.0040ffc1();\n    var_8h = in_EAX + 0x24;\n    iVar2 = fcn.004201a0(var_8h, *arg_8h);\n    if (iVar2 != 0) {\n        fcn.0040fd10();\n        (**0x459310)(&lpPathName);\n        *0x4679dc = 1;\n        return;\n    }\n    if (((var_2h._1_1_ == '\\x01') && (*0x479bbd == '\\x01')) && (cVar1 = fcn.00416422(),  cVar1 == '\\0')) {\n        (**0x459308)(0, &var_42ch, 0x104);\n        if (var_2h == '\\0') {\n            uVar3 = (*_sym.imp.USER32.dll_GetForegroundWindow)(0x45beb8, &var_42ch, *0x47bd08, &lpPathName, 1);\n            (**0x45940c)(uVar3);\n        }\n        else {\n            fcn.00416d81(0x45bec4);\n            fcn.00417064(var_8h);\n            fcn.00417064(0x45bec4);\n            uVar3 = (*_sym.imp.USER32.dll_GetForegroundWindow)(0x45beb8, &var_42ch, var_14h, &lpPathName, 1);\n            (**0x45940c)(uVar3);\n            fcn.0044951c(var_14h);\n        }\n    }\n    else {\n        fcn.0040127d();\n        fcn.00401371();\n        if (*(in_EAX + 0x14) == '\\0') {\n            fcn.00412a78();\n        }\n        fcn.004203f1(1);\n    }\n    fcn.0040fd10();\ncode_r0x0040126b:\n    (**0x459310)(&lpPathName);\n    return;\n}\n",
        "token_count": 807
    },
    "0040127d": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0040127d(void)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    uint uVar3;\n    uint *unaff_EBX;\n    uint ARG_0;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_8h = (*_sym.imp.USER32.dll_GetSysColorBrush)(0xf);\n    var_4h = (*_sym.imp.USER32.dll_LoadCursorW)(0, 0x7f00);\n    pcVar1 = _sym.imp.USER32.dll_LoadIconW;\n    uVar2 = (*_sym.imp.USER32.dll_LoadIconW)(*0x467a08, 0xa1);\n    uVar3 = *0x467a08;\n    *unaff_EBX = uVar2;\n    uVar3 = (*pcVar1)(uVar3, 0xa4);\n    unaff_EBX[2] = uVar3;\n    if ((*0x479bb9 == '\\0') && (*0x479bc7 == '\\0')) {\n        uVar3 = fcn.004162eb(0xa1);\n    }\n    else {\n        uVar3 = (*_sym.imp.USER32.dll_LoadImageW)(*0x467a08, 0xa1, 1, 0x10, 0x10, 0);\n    }\n    var_24h = *0x467a08;\n    unaff_EBX[1] = uVar3;\n    var_2ch = 0;\n    var_28h = 0;\n    var_14h = 0;\n    var_20h = *unaff_EBX;\n    var_ch = unaff_EBX[1];\n    var_1ch = var_4h;\n    ARG_0 = 0x30;\n    var_34h = 0x23;\n    var_18h = var_8h;\n    var_10h = 0x45bea4;\n    var_30h = 0x40161d;\n    (*_sym.imp.USER32.dll_RegisterClassExW)(&ARG_0);\n    fcn.00404166(*unaff_EBX, unaff_EBX[1]);\n    return;\n}\n",
        "token_count": 556
    },
    "004018b3": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "link function at runtime on Windows"
        ],
        "decompiled_code": "\nvoid fcn.004018b3(void)\n\n{\n    int32_t iVar1;\n    int32_t *unaff_ESI;\n    \n    if (unaff_ESI[2] == 0) {\n        iVar1 = (*_sym.imp.KERNEL32.DLL_LoadLibraryA)(0x45bfd0);\n        *unaff_ESI = iVar1;\n        if (iVar1 != 0) {\n            iVar1 = (*_sym.imp.KERNEL32.DLL_GetProcAddress)(iVar1, 0x45bfc0);\n            unaff_ESI[2] = iVar1;\n        }\n    }\n    return;\n}\n",
        "token_count": 135
    },
    "00401910": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Variable defined which should be unmapped: var_8h\n\nvoid __cdecl fcn.00401910(int32_t arg_8h, uint arg_ch)\n\n{\n    bool bVar1;\n    bool bVar2;\n    int16_t iVar3;\n    int16_t *piVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int16_t aiStack8220 [4090];\n    uint uStack40;\n    int32_t iStack36;\n    uint *puStack32;\n    uchar *puStack28;\n    int32_t var_14h;\n    uint uStack20;\n    int32_t var_8h;\n    uint var_1h;\n    \n    fcn.0044c510();\n    uStack20 = 0x401928;\n    fcn.00401ad0();\n    uStack20 = arg_ch;\n    var_14h = arg_8h + 4;\n    puStack28 = 0x401934;\n    fcn.00416e83();\n    iVar6 = 0;\n    bVar1 = false;\n    var_8h = 0;\n    bVar2 = false;\n    do {\n        do {\n            puStack28 = 0x40194a;\n            piVar4 = fcn.00416e60();\n        } while (*piVar4 == 0x20);\n    } while (*piVar4 == 9);\n    puStack28 = 0x401965;\n    piVar4 = fcn.00416e60();\n    iVar3 = *piVar4;\n    if (iVar3 != 0) {\n        do {\n            if (0xfff < iVar6) break;\n            if ((iVar3 == 0x20) || (iVar3 == 9)) {\n                if (bVar1) goto code_r0x00401a07;\n                *(&stack0xffffdfe4 + iVar6 * 2) = 0;\n                puStack28 = &stack0xffffdfe4;\n                puStack32 = 0x401a30;\n                fcn.00416d81();\n                iStack36 = 0x401a3b;\n                puStack32 = &fcn.00401910::var_14h;\n                fcn.00401abc();\n                iStack36 = var_14h;\n                uStack40 = 0x401a43;\n                fcn.0044951c();\n                iVar6 = 0;\n                bVar2 = false;\n                do {\n                    do {\n                        iStack36 = 0x401a53;\n                        piVar4 = fcn.00416e60();\n                    } while (*piVar4 == 0x20);\n                } while (*piVar4 == 9);\n            }\n            else if (iVar3 == 0x22) {\n                puStack28 = 0x40199d;\n                piVar4 = fcn.00416e60();\n                if (*piVar4 == 0x22) {\n                    if (bVar1) {\n                        *(&stack0xffffdfe4 + iVar6 * 2) = 0x22;\n                        iVar6 = iVar6 + 1;\n                    }\n                    else {\n                        bVar2 = true;\n                    }\n                }\n                else {\n                    bVar1 = !bVar1;\n                }\n                if (bVar1) {\n                    var_8h = iVar6;\n                }\n            }\n            else {\ncode_r0x00401a07:\n                *(&stack0xffffdfe4 + iVar6 * 2) = iVar3;\n                iVar6 = iVar6 + 1;\n            }\n            puStack28 = 0x4019d9;\n            piVar4 = fcn.00416e60();\n            iVar3 = *piVar4;\n        } while (iVar3 != 0);\n        if (((iVar6 != 0) || (bVar2)) || (bVar1)) {\n            iVar5 = iVar6;\n            if (bVar1) {\n                while (iVar5 = iVar5 + -1,  var_8h <= iVar5) {\n                    *(&stack0xffffdfe6 + iVar5 * 2) = *(&stack0xffffdfe4 + iVar5 * 2);\n                }\n                iVar6 = iVar6 + 1;\n                *(&stack0xffffdfe4 + var_8h * 2) = 0x22;\n            }\n            *(&stack0xffffdfe4 + iVar6 * 2) = 0;\n            puStack28 = &stack0xffffdfe4;\n            puStack32 = 0x401aa1;\n            fcn.00416d81();\n            iStack36 = 0x401aac;\n            puStack32 = &fcn.00401910::var_14h;\n            fcn.00401abc();\n            iStack36 = var_14h;\n            uStack40 = 0x401ab4;\n            fcn.0044951c();\n        }\n    }\n    return;\n}\n",
        "token_count": 1103
    },
    "00401e55": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint32_t __cdecl fcn.00401e55(uint *arg_8h)\n\n{\n    char cVar1;\n    uint32_t in_EAX;\n    uint uVar2;\n    uint32_t uVar3;\n    int32_t *unaff_EBX;\n    uint var_10h;\n    uint var_1h;\n    \n    if (*unaff_EBX == 0) {\n        uVar3 = in_EAX & 0xffffff00;\n    }\n    else {\n        fcn.00416d81(0x45c068);\n        cVar1 = fcn.00403133(0);\n        fcn.0044951c(var_10h);\n        if (cVar1 == '\\0') {\n            fcn.00416d81(0x45c058);\n            cVar1 = fcn.00403133(0);\n            uVar3 = fcn.0044951c(var_10h);\n            if (cVar1 == '\\0') {\n                return uVar3 & 0xffffff00;\n            }\n            uVar2 = 0x180;\n        }\n        else {\n            uVar2 = 0x143;\n        }\n        uVar3 = (*_sym.imp.USER32.dll_SendMessageW)(*unaff_EBX, uVar2, 0, *arg_8h);\n        uVar3 = uVar3 & 0xffffff00 | uVar3 != 0;\n    }\n    return uVar3;\n}\n",
        "token_count": 335
    },
    "00401ee5": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint32_t __cdecl fcn.00401ee5(uint wParam)\n\n{\n    char cVar1;\n    uint32_t in_EAX;\n    uint uVar2;\n    uint32_t uVar3;\n    int32_t *unaff_EBX;\n    uint var_10h;\n    uint var_1h;\n    \n    if (*unaff_EBX == 0) {\n        uVar3 = in_EAX & 0xffffff00;\n    }\n    else {\n        fcn.00416d81(0x45c068);\n        cVar1 = fcn.00403133(0);\n        fcn.0044951c(var_10h);\n        if (cVar1 == '\\0') {\n            fcn.00416d81(0x45c058);\n            cVar1 = fcn.00403133(0);\n            uVar3 = fcn.0044951c(var_10h);\n            if (cVar1 == '\\0') {\n                return uVar3 & 0xffffff00;\n            }\n            uVar2 = 0x182;\n        }\n        else {\n            uVar2 = 0x144;\n        }\n        uVar3 = (*_sym.imp.USER32.dll_SendMessageW)(*unaff_EBX, uVar2, wParam, 0);\n        uVar3 = uVar3 & 0xffffff00 | uVar3 != 0;\n    }\n    return uVar3;\n}\n",
        "token_count": 327
    },
    "00401f73": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint32_t __cdecl fcn.00401f73(uint *lParam, uint32_t *arg_ch)\n\n{\n    char cVar1;\n    uint32_t in_EAX;\n    uint uVar2;\n    uint32_t uVar3;\n    int32_t *unaff_EBX;\n    uint var_10h;\n    uint var_1h;\n    \n    if (*unaff_EBX == 0) {\n        uVar3 = in_EAX & 0xffffff00;\n    }\n    else {\n        fcn.00416d81(0x45c068);\n        cVar1 = fcn.00403133(0);\n        fcn.0044951c(var_10h);\n        if (cVar1 == '\\0') {\n            fcn.00416d81(0x45c058);\n            cVar1 = fcn.00403133(0);\n            uVar3 = fcn.0044951c(var_10h);\n            if (cVar1 == '\\0') {\n                return uVar3 & 0xffffff00;\n            }\n            uVar2 = 0x1a2;\n        }\n        else {\n            uVar2 = 0x158;\n        }\n        uVar3 = (*_sym.imp.USER32.dll_SendMessageW)(*unaff_EBX, uVar2, 1, *lParam);\n        *arg_ch = uVar3;\n        uVar3 = uVar3 & 0xffffff00 | uVar3 != 0xffffffff;\n    }\n    return uVar3;\n}\n",
        "token_count": 350
    },
    "0040200c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint __cdecl fcn.0040200c(uint arg_8h)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    char cVar3;\n    uint uVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    int32_t *unaff_EBX;\n    uint var_14h;\n    int32_t var_8h;\n    uint var_1h;\n    \n    if (*unaff_EBX == 0) {\n        return 0;\n    }\n    fcn.00416d81(0x45c068);\n    cVar3 = fcn.00403133(0);\n    fcn.0044951c(var_14h);\n    if (cVar3 == '\\0') {\n        fcn.00416d81(0x45c058);\n        cVar3 = fcn.00403133(0);\n        fcn.0044951c(var_14h);\n        if (cVar3 == '\\0') {\n            return 0;\n        }\n        uVar4 = 0x186;\n        var_8h = 2;\n    }\n    else {\n        uVar4 = 0x14e;\n        var_8h = 9;\n    }\n    pcVar2 = _sym.imp.USER32.dll_SendMessageW;\n    iVar5 = (*_sym.imp.USER32.dll_SendMessageW)(*unaff_EBX, uVar4, arg_8h, 0);\n    pcVar1 = _sym.imp.USER32.dll_GetDlgCtrlID;\n    if (iVar5 == -1) {\n        return 0;\n    }\n    uVar6 = (*_sym.imp.USER32.dll_GetDlgCtrlID)(*unaff_EBX, *unaff_EBX);\n    uVar4 = (*_sym.imp.USER32.dll_GetParent)(*unaff_EBX, 0x111, uVar6 & 0xffff | 0x10000);\n    (*pcVar2)(uVar4);\n    uVar6 = (*pcVar1)(*unaff_EBX, *unaff_EBX);\n    uVar4 = (*_sym.imp.USER32.dll_GetParent)(*unaff_EBX, 0x111, uVar6 & 0xffff | var_8h << 0x10);\n    (*pcVar2)(uVar4);\n    return 1;\n}\n",
        "token_count": 524
    },
    "004020f7": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint32_t __cdecl fcn.004020f7(uint arg_8h)\n\n{\n    code *pcVar1;\n    char cVar2;\n    int32_t *in_EAX;\n    uint uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    uint var_18h;\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    if (*in_EAX == 0) {\n        return in_EAX & 0xffffff00;\n    }\n    fcn.00416d81(0x45c068);\n    cVar2 = fcn.00403133(0);\n    fcn.0044951c(var_18h);\n    if (cVar2 == '\\0') {\n        fcn.00416d81(0x45c058);\n        cVar2 = fcn.00403133(0);\n        uVar5 = fcn.0044951c(var_18h);\n        if (cVar2 == '\\0') goto code_r0x004021fd;\n        uVar3 = 0x188;\n        var_8h = 0x18a;\n        var_ch = 0x189;\n    }\n    else {\n        uVar3 = 0x147;\n        var_8h = 0x149;\n        var_ch = 0x148;\n    }\n    pcVar1 = _sym.imp.USER32.dll_SendMessageW;\n    uVar4 = (*_sym.imp.USER32.dll_SendMessageW)(*in_EAX, uVar3, 0, 0);\n    uVar5 = uVar4;\n    if ((uVar4 != 0xffffffff) && (uVar5 = (*pcVar1)(*in_EAX, var_8h, uVar4, 0),  uVar5 != 0xffffffff)) {\n        uVar3 = fcn.00449614(uVar5 * 2 + 0x202);\n        iVar6 = (*pcVar1)(*in_EAX, var_ch, uVar4, uVar3);\n        if (iVar6 != -1) {\n            fcn.00416e83(arg_8h, uVar3);\n        }\n        else {\n            fcn.00416e83(arg_8h, 0x45bfe0);\n        }\n        uVar5 = fcn.0044951c(uVar3);\n        return uVar5 & 0xffffff00 | iVar6 != -1;\n    }\ncode_r0x004021fd:\n    return uVar5 & 0xffffff00;\n}\n",
        "token_count": 583
    },
    "00402206": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint __cdecl fcn.00402206(uint *arg_8h)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    char cVar3;\n    uint uVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    int32_t *unaff_EBX;\n    uint var_14h;\n    int32_t var_8h;\n    uint var_1h;\n    \n    if (*unaff_EBX == 0) {\n        return 0;\n    }\n    fcn.00416d81(0x45c068);\n    cVar3 = fcn.00403133(0);\n    fcn.0044951c(var_14h);\n    if (cVar3 == '\\0') {\n        fcn.00416d81(0x45c058);\n        cVar3 = fcn.00403133(0);\n        fcn.0044951c(var_14h);\n        if (cVar3 == '\\0') {\n            return 0;\n        }\n        uVar4 = 0x18c;\n        var_8h = 2;\n    }\n    else {\n        uVar4 = 0x14d;\n        var_8h = 9;\n    }\n    pcVar2 = _sym.imp.USER32.dll_SendMessageW;\n    iVar5 = (*_sym.imp.USER32.dll_SendMessageW)(*unaff_EBX, uVar4, 1, *arg_8h);\n    pcVar1 = _sym.imp.USER32.dll_GetDlgCtrlID;\n    if (iVar5 == -1) {\n        return 0;\n    }\n    uVar6 = (*_sym.imp.USER32.dll_GetDlgCtrlID)(*unaff_EBX, *unaff_EBX);\n    uVar4 = (*_sym.imp.USER32.dll_GetParent)(*unaff_EBX, 0x111, uVar6 & 0xffff | 0x10000);\n    (*pcVar2)(uVar4);\n    uVar6 = (*pcVar1)(*unaff_EBX, *unaff_EBX);\n    uVar4 = (*_sym.imp.USER32.dll_GetParent)(*unaff_EBX, 0x111, uVar6 & 0xffff | var_8h << 0x10);\n    (*pcVar2)(uVar4);\n    return 1;\n}\n",
        "token_count": 526
    },
    "00402314": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00402314(char param_1)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t *unaff_ESI;\n    bool bVar3;\n    \n    if (*unaff_ESI == 0) {\n        uVar2 = 0;\n    }\n    else {\n        cVar1 = fcn.004022f3();\n        if (param_1 == '\\0') {\n            bVar3 = cVar1 == '\\x01';\n        }\n        else {\n            bVar3 = cVar1 == '\\0';\n        }\n        if (bVar3) {\n            fcn.00401c55(unaff_ESI, 0, 1);\n        }\n        uVar2 = 1;\n    }\n    return uVar2;\n}\n",
        "token_count": 170
    },
    "00402503": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00402503(int32_t param_1, int32_t param_2)\n\n{\n    char in_AL;\n    uint uVar1;\n    int32_t *unaff_EDI;\n    uchar auStack44 [12];\n    uint32_t uStack32;\n    uint uStack28;\n    \n    if (*unaff_EDI == 0) {\n        uVar1 = 0;\n    }\n    else {\n        fcn.00412469();\n        uStack28 = 2;\n        uStack32 = -(in_AL != '\\0') & 2;\n        uVar1 = fcn.0041252f(0x28, *unaff_EDI);\n        fcn.004125c1(auStack44, 0x28);\n        if (param_1 == -1) {\n            (*_sym.imp.USER32.dll_SendMessageW)(*unaff_EDI, 0x102b, 0xffffffff, uVar1);\n        }\n        else {\n            for (; param_1 <= param_2; param_1 = param_1 + 1) {\n                (*_sym.imp.USER32.dll_SendMessageW)(*unaff_EDI, 0x102b, param_1, uVar1);\n            }\n        }\n        fcn.004124b7();\n        uVar1 = 1;\n    }\n    return uVar1;\n}\n",
        "token_count": 296
    },
    "00402614": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nbool fcn.00402614(uint param_1, uint param_2, uint param_3)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t *unaff_EDI;\n    uchar auStack2256 [2204];\n    uchar auStack52 [8];\n    uint uStack44;\n    uint uStack32;\n    uint uStack28;\n    uint uStack12;\n    uint uStack8;\n    \n    iVar1 = *unaff_EDI;\n    if (iVar1 != 0) {\n        fcn.00412469();\n        uStack8 = fcn.0041252f(0x28, *unaff_EDI);\n        uStack32 = fcn.0041252f(0x800, *unaff_EDI);\n        uVar2 = uStack8;\n        uStack28 = 0x400;\n        uStack44 = param_2;\n        uStack12 = uStack32;\n        fcn.004125c1(auStack52, 0x28);\n        (*_sym.imp.USER32.dll_SendMessageW)(*unaff_EDI, 0x1073, param_1, uVar2);\n        fcn.00412609(auStack2256, 0x800);\n        fcn.00416e83(param_3, auStack2256);\n        fcn.004124b7();\n    }\n    return iVar1 != 0;\n}\n",
        "token_count": 311
    },
    "004026f4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004026f4(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t unaff_EBX;\n    int32_t *unaff_ESI;\n    int32_t arg_8h_00;\n    uint uVar2;\n    uint var_28h;\n    int32_t var_4h;\n    \n    arg_8h_00 = 0;\n    if (*unaff_ESI == 0) {\n        uVar2 = 0;\n    }\n    else {\n        var_4h = fcn.004025d4();\n        uVar2 = 0x45bfe0;\n        fcn.00416e83();\n        if (arg_8h == '\\0') {\n            if (0 < var_4h) {\n                do {\n                    iVar1 = (*_sym.imp.USER32.dll_SendMessageW)(*unaff_ESI, 0x102c, arg_8h_00, 2);\n                    if (iVar1 != 0) {\n                        fcn.0044967e(arg_8h_00, &var_28h, 10);\n                        fcn.00416e83();\n                        break;\n                    }\n                    arg_8h_00 = arg_8h_00 + 1;\n                } while (arg_8h_00 < var_4h);\n            }\n        }\n        else if (0 < var_4h) {\n            do {\n                iVar1 = (*_sym.imp.USER32.dll_SendMessageW)(*unaff_ESI, 0x102c, arg_8h_00, 2);\n                if (iVar1 != 0) {\n                    fcn.0044967e(arg_8h_00, &var_28h, 10);\n                    if (*(unaff_EBX + 4) != 0) {\n                        uVar2 = 0x45c054;\n                        fcn.00417064();\n                    }\n                    fcn.00417064(&var_28h, uVar2);\n                }\n                arg_8h_00 = arg_8h_00 + 1;\n            } while (arg_8h_00 < var_4h);\n        }\n        uVar2 = 1;\n    }\n    return uVar2;\n}\n",
        "token_count": 493
    },
    "004027bd": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.004027bd(uint *param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t *unaff_EDI;\n    uchar auStack2260 [2204];\n    uchar auStack56 [8];\n    uint uStack48;\n    uint uStack36;\n    uint uStack32;\n    uint uStack16;\n    uint uStack12;\n    int32_t iStack8;\n    \n    if (*unaff_EDI == 0) {\n        param_2 = -1;\n    }\n    else {\n        iStack8 = fcn.004025d4();\n        fcn.00412469();\n        uStack12 = fcn.0041252f(0x28, *unaff_EDI);\n        uStack36 = fcn.0041252f(0x800, *unaff_EDI);\n        uStack32 = 0x400;\n        uStack48 = param_2;\n        uStack16 = uStack36;\n        fcn.004125c1(auStack56, 0x28);\n        param_2 = 0;\n        if (0 < iStack8) {\n            do {\n                (*_sym.imp.USER32.dll_SendMessageW)(*unaff_EDI, 0x1073, param_2, uStack12);\n                fcn.00412609(auStack2260, 0x800);\n                iVar1 = fcn.00449521(auStack2260, *param_1);\n                if (iVar1 == 0) break;\n                param_2 = param_2 + 1;\n            } while (param_2 < iStack8);\n        }\n        if (param_2 == iStack8) {\n            param_2 = -1;\n        }\n        fcn.004124b7();\n    }\n    return param_2;\n}\n",
        "token_count": 404
    },
    "00402e82": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00402e82(uint hWnd)\n\n{\n    uint arg_8h;\n    code *pcVar1;\n    int32_t iVar2;\n    uint arg_10h;\n    int32_t unaff_ESI;\n    uint lpString;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_8h = 0;\n    var_4h = 0;\n    if (*(unaff_ESI + 8) != '\\0') {\n        iVar2 = (*_sym.imp.USER32.dll_GetDlgCtrlID)(hWnd);\n        if (*(unaff_ESI + 0x30) == iVar2) {\n            *(unaff_ESI + 0x3c) = hWnd;\n            return 0;\n        }\n        var_4h = 1;\n    }\n    pcVar1 = _sym.imp.USER32.dll_GetClassNameW;\n    if (*(unaff_ESI + 4) != '\\0') {\n        (*_sym.imp.USER32.dll_GetClassNameW)(hWnd, &lpString, 0x100);\n        iVar2 = fcn.00449703(*(unaff_ESI + 0xc), &lpString);\n        if (iVar2 == 0) {\n            var_8h = 1;\n        }\n        var_4h = var_4h + 1;\n    }\n    if (*(unaff_ESI + 7) != '\\0') {\n        (*pcVar1)(hWnd, &lpString, 0x100);\n        arg_8h = *(unaff_ESI + 0x18);\n        arg_10h = fcn.0044985c(&lpString);\n        iVar2 = fcn.00449827(arg_8h, &lpString, arg_10h);\n        if (iVar2 == 0) {\n            *(unaff_ESI + 0x40) = *(unaff_ESI + 0x40) + 1;\n            fcn.00449872(&lpString, 0x45c088, &lpString);\n            iVar2 = fcn.00449703(&lpString, *(unaff_ESI + 0x18));\n            if (iVar2 == 0) goto code_r0x00402f5f;\n        }\n        var_4h = var_4h + 1;\n    }\n    if (*(unaff_ESI + 6) != '\\0') {\n        (*_sym.imp.USER32.dll_GetWindowTextW)(hWnd, &lpString, 0x400);\n        iVar2 = fcn.00449703(*(unaff_ESI + 0x24), &lpString);\n        if (iVar2 == 0) goto code_r0x00402f5f;\n        var_4h = var_4h + 1;\n    }\n    if (*(unaff_ESI + 5) != '\\0') {\n        if ((var_8h == var_4h) &&\n           (*(unaff_ESI + 0x40) = *(unaff_ESI + 0x40) + 1,  *(unaff_ESI + 0x40) == *(unaff_ESI + 0x34))) {\n            var_8h = var_8h + 1;\n        }\n        var_4h = var_4h + 1;\n    }\n    if (var_8h != var_4h) {\n        return 1;\n    }\ncode_r0x00402f5f:\n    *(unaff_ESI + 0x3c) = hWnd;\n    return 0;\n}\n",
        "token_count": 781
    },
    "00403227": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00403227(uint *param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t *unaff_ESI;\n    char cVar3;\n    \n    if (*unaff_ESI != 0) {\n        cVar3 = '\\f';\n        iVar1 = (*_sym.imp.USER32.dll_SendMessageW)(*unaff_ESI, 0xc, 0, *param_1);\n        if (iVar1 != 0) {\n            if (cVar3 != '\\0') {\n                uVar2 = (*_sym.imp.USER32.dll_GetParent)(*unaff_ESI, 0, 1);\n                (*_sym.imp.USER32.dll_InvalidateRect)(uVar2);\n            }\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 179
    },
    "004032d4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004032d4(uint arg_8h)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *unaff_ESI;\n    int32_t iVar3;\n    int32_t lpPoint;\n    int32_t var_4h;\n    \n    if ((*in_EAX != 0) && (iVar1 = (*_sym.imp.USER32.dll_GetWindowRect)(*in_EAX),  iVar1 != 0)) {\n        if (arg_8h != '\\0') {\n            iVar1 = fcn.004031e9();\n            if (iVar1 == 0) {\n                return 0;\n            }\n            lpPoint = *unaff_ESI;\n            var_4h = unaff_ESI[1];\n            iVar3 = unaff_ESI[2] - lpPoint;\n            iVar2 = unaff_ESI[3] - var_4h;\n            (*_sym.imp.USER32.dll_ScreenToClient)(iVar1, &lpPoint);\n            unaff_ESI[3] = iVar2 + var_4h;\n            *unaff_ESI = lpPoint;\n            unaff_ESI[1] = var_4h;\n            unaff_ESI[2] = iVar3 + lpPoint;\n        }\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 300
    },
    "0040336c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nbool fcn.0040336c(char param_1)\n\n{\n    int32_t iVar1;\n    int32_t *in_EAX;\n    \n    iVar1 = *in_EAX;\n    if (iVar1 != 0) {\n        (*_sym.imp.USER32.dll_EnableWindow)(iVar1, param_1 != '\\0');\n    }\n    return iVar1 != 0;\n}\n",
        "token_count": 83
    },
    "0040338f": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0040338f(char param_1)\n\n{\n    int32_t *in_EAX;\n    uint uVar1;\n    \n    if (*in_EAX == 0) {\n        uVar1 = 0;\n    }\n    else {\n        if (param_1 == '\\0') {\n            uVar1 = 0;\n        }\n        else {\n            uVar1 = 4;\n        }\n        (*_sym.imp.USER32.dll_ShowWindow)(*in_EAX, uVar1);\n        uVar1 = 1;\n    }\n    return uVar1;\n}\n",
        "token_count": 125
    },
    "0040347f": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0040347f(void)\n\n{\n    int32_t iVar1;\n    uint *unaff_EDI;\n    uint uVar2;\n    uint var_24h;\n    uint var_18h;\n    uint var_ch;\n    \n    fcn.00416d61();\n    fcn.00416d61();\n    if (unaff_EDI[1] == 0) {\ncode_r0x00403594:\n        uVar2 = 0x45c1c0;\ncode_r0x00403599:\n        fcn.00416e83(&var_ch, uVar2);\n    }\n    else {\n        iVar1 = fcn.00449521(*unaff_EDI, 0x45c1cc);\n        if (iVar1 == 0) goto code_r0x00403594;\n        iVar1 = fcn.00449521(*unaff_EDI, 0x45c1b0);\n        if (iVar1 == 0) {\n            uVar2 = 0x45c1a0;\n            goto code_r0x00403599;\n        }\n        iVar1 = fcn.004498e1(*unaff_EDI, 0x45c190, 7);\n        if (iVar1 == 0) {\n            uVar2 = 0x45c17c;\ncode_r0x004034f1:\n            fcn.00416e83(&var_ch, uVar2);\n        }\n        else {\n            iVar1 = fcn.004498e1(*unaff_EDI, 0x45c16c, 7);\n            if (iVar1 == 0) {\n                uVar2 = 0x45c150;\n                goto code_r0x004034f1;\n            }\n            iVar1 = fcn.004498e1(*unaff_EDI, 0x45c138, 10);\n            if (iVar1 != 0) {\n                iVar1 = fcn.00449521(*unaff_EDI, 0x45c120);\n                if (iVar1 != 0) goto code_r0x004035bc;\n                uVar2 = 0x45c114;\n                goto code_r0x00403599;\n            }\n            fcn.00416e83(&var_ch, 0x45c128);\n        }\n        fcn.0041744d(&var_24h);\n        fcn.00416e71();\n        fcn.0044951c(var_24h);\n        fcn.004035d3();\n        fcn.00416ebe(&var_18h);\n    }\n    fcn.00417064(0x45c110);\n    fcn.00416e71();\ncode_r0x004035bc:\n    fcn.0044951c(var_18h);\n    fcn.0044951c(var_ch);\n    return;\n}\n",
        "token_count": 626
    },
    "004035d3": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004035d3(void)\n\n{\n    int16_t *piVar1;\n    uint uVar2;\n    uint var_ch;\n    \n    fcn.00416d61();\n    do {\n        piVar1 = fcn.00416e60();\n        if (*piVar1 == 0) {\n            fcn.00416e71();\n            fcn.0044951c(var_ch);\n            return;\n        }\n        piVar1 = fcn.00416e60();\n        if (*piVar1 == 0x3a) {\n            uVar2 = 0x3a;\ncode_r0x00403635:\n            fcn.00416f01(uVar2);\n        }\n        else {\n            piVar1 = fcn.00416e60();\n            if (*piVar1 == 0x3b) {\n                uVar2 = 0x3b;\n                goto code_r0x00403635;\n            }\n            piVar1 = fcn.00416e60();\n            if (*piVar1 == 0x5b) {\n                uVar2 = 0x5b;\n                goto code_r0x00403635;\n            }\n            piVar1 = fcn.00416e60();\n            if (*piVar1 == 0x5d) {\n                uVar2 = 0x5d;\n                goto code_r0x00403635;\n            }\n        }\n        fcn.00416e60();\n        fcn.00416f01();\n    } while( true );\n}\n",
        "token_count": 334
    },
    "00403677": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl\nfcn.00403677(int32_t *arg_8h, uint arg_ch, uint arg_10h, int32_t arg_14h, int32_t arg_18h, uint arg_1ch, uint arg_20h, \n            uint32_t hWnd)\n\n{\n    code *pcVar1;\n    char cVar2;\n    uint8_t uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint var_1ch;\n    uint var_10h;\n    int32_t *var_4h;\n    \n    fcn.00410987();\n    var_4h = arg_8h + 0x1a;\n    fcn.00410987();\n    *(arg_8h + 1) = hWnd;\n    *(arg_8h + 5) = arg_20h;\n    fcn.00416e71();\n    fcn.00416e71();\n    fcn.00416e83(arg_8h + 0x12, 0x45bfe0);\n    arg_8h[4] = arg_18h;\n    arg_8h[0x15] = 1;\n    *(arg_8h + 6) = 0;\n    *(arg_8h + 7) = 0;\n    *(arg_8h + 2) = 0;\n    *(arg_8h + 9) = 0;\n    *(arg_8h + 10) = 0;\n    *(arg_8h + 0xb) = 0;\n    *(arg_8h + 3) = 1;\n    arg_8h[0x16] = 0;\n    arg_8h[0x17] = 0;\n    arg_8h[0x19] = 0;\n    fcn.00416d61();\n    if (arg_8h[4] < 0) {\n        iVar4 = fcn.004499a1(arg_8h[4]);\n        arg_8h[4] = iVar4;\n        *(arg_8h + 3) = 0;\n    }\n    if (arg_8h[4] == 4) {\n        fcn.0040347f(arg_8h);\n        arg_8h[4] = 1;\n    }\n    if ((arg_8h[6] == 0) && (arg_8h[9] == 0)) {\ncode_r0x004037b7:\n        hWnd = (*_sym.imp.USER32.dll_GetForegroundWindow)();\ncode_r0x004037be:\n        fcn.00402a4f(hWnd);\n    }\n    else {\n        fcn.00416d81(0x45c1cc);\n        cVar2 = fcn.00402a79(&var_1ch, &var_10h);\n        fcn.0044951c(var_1ch);\n        if (cVar2 == '\\0') {\n            fcn.00416d81(0x45c1b0);\n            cVar2 = fcn.00402a79(&var_1ch, &var_10h);\n            fcn.0044951c(var_1ch);\n            if (cVar2 != '\\0') goto code_r0x004037b7;\n            fcn.00416d81(0x45c100);\n            uVar3 = fcn.00402a79(&var_1ch, &var_10h);\n            hWnd = hWnd & 0xffffff | uVar3 << 0x18;\n            fcn.0044951c(var_1ch);\n            if (uVar3 == 0) {\n                fcn.00416d81(0x45c0e8);\n                cVar2 = fcn.00402a79(&var_1ch, &var_10h);\n                fcn.0044951c(var_1ch);\n                if (cVar2 != '\\0') {\n                    arg_8h[0x19] = arg_8h[0x19] + 1;\n                    *(arg_8h + 7) = 1;\n                    fcn.0040f290();\n                    iVar4 = fcn.0040f2c4(&var_10h);\n                    if (iVar4 != 0) {\n                        iVar4 = -1;\n                        goto code_r0x004039f4;\n                    }\n                }\n                fcn.00416d81(0x45c0cc);\n                cVar2 = fcn.00402a79(&var_1ch, &var_10h);\n                fcn.0044951c(var_1ch);\n                if (cVar2 != '\\0') {\n                    *(arg_8h + 9) = 1;\n                    fcn.00416e71();\n                    arg_8h[0x19] = arg_8h[0x19] + 1;\n                }\n                fcn.00416d81(0x45c0a0);\n                cVar2 = fcn.00402a79(&var_1ch, &var_10h);\n                fcn.0044951c(var_1ch);\n                if (cVar2 != '\\0') {\n                    *(arg_8h + 10) = 1;\n                    iVar4 = fcn.00449794(var_10h);\n                    arg_8h[0x19] = arg_8h[0x19] + 1;\n                    arg_8h[0x15] = iVar4;\n                }\n                fcn.00416d81(0x45c120);\n                cVar2 = fcn.00402a79(&var_1ch, &var_10h);\n                fcn.0044951c(var_1ch);\n                if (cVar2 != '\\0') {\n                    arg_8h[0x19] = arg_8h[0x19] + 1;\n                    *(arg_8h + 0xb) = 1;\n                }\n                fcn.00416d81(0x45c0dc);\n                cVar2 = fcn.00402a79(&var_1ch, &var_10h);\n                fcn.0044951c(var_1ch);\n                if (cVar2 != '\\0') {\n                    *(arg_8h + 6) = 1;\n                    fcn.00416e71();\n                    arg_8h[0x19] = arg_8h[0x19] + 1;\n                }\n                if (arg_8h[0x19] == 0) {\n                    *(arg_8h + 6) = 1;\n                    arg_8h[0x19] = 1;\n                }\n                pcVar1 = _sym.imp.USER32.dll_CharUpperBuffW;\n                *(arg_8h + 2) = 1;\n                if (*(arg_8h + 3) == '\\0') {\n                    (*pcVar1)(arg_8h[8], arg_8h[9]);\n                }\n                arg_8h[0x19] = arg_8h[0x19] + 1;\n                if ((*(arg_8h + 6) != '\\0') && (*(arg_8h + 3) == '\\0')) {\n                    (*pcVar1)(arg_8h[5], arg_8h[6]);\n                }\n                if (arg_1ch == '\\0') {\n                    (*_sym.imp.USER32.dll_EnumWindows)(0x403a06, arg_8h);\n                }\n                else {\n                    uVar5 = (*_sym.imp.USER32.dll_GetDesktopWindow)();\n                    (*_sym.imp.USER32.dll_EnumChildWindows)(uVar5);\n                }\n                fcn.00403d44();\n                fcn.00410987();\n                if (0 < arg_8h[0x17]) {\n                    fcn.00402a4f();\n                }\n                iVar4 = arg_8h[0x17];\n                goto code_r0x004039f4;\n            }\n            fcn.004167a5();\n            iVar4 = (*_sym.imp.USER32.dll_IsWindow)(hWnd);\n            if (iVar4 == 0) goto code_r0x00403783;\n            goto code_r0x004037be;\n        }\n        if (*arg_8h == 0) {\ncode_r0x00403783:\n            iVar4 = 0;\n            goto code_r0x004039f4;\n        }\n    }\n    fcn.00403ccb();\n    iVar4 = 1;\ncode_r0x004039f4:\n    fcn.0044951c(var_10h);\n    return iVar4;\n}\n",
        "token_count": 1912
    },
    "00403a18": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00403a18(uint hWnd)\n\n{\n    code *pcVar1;\n    char cVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t unaff_EDI;\n    bool bVar5;\n    uint lpClassName;\n    uint var_14h;\n    uint32_t var_8h;\n    uint32_t var_4h;\n    \n    bVar5 = *(unaff_EDI + 0xb) != '\\0';\n    var_4h = bVar5;\n    var_8h = bVar5;\n    if (*(unaff_EDI + 9) != '\\0') {\n        (*_sym.imp.USER32.dll_GetClassNameW)(hWnd, &lpClassName, 0x400);\n        iVar3 = fcn.00449703(*(unaff_EDI + 0x48), &lpClassName);\n        if (iVar3 == 0) {\n            var_4h = var_4h + 1;\n        }\n        var_8h = var_8h + 1;\n    }\n    pcVar1 = _sym.imp.USER32.dll_GetWindowTextW;\n    if (*(unaff_EDI + 6) == '\\0') goto code_r0x00403b07;\n    (*_sym.imp.USER32.dll_GetWindowTextW)(hWnd, &lpClassName, 0x400);\n    if (*(unaff_EDI + 0xc) == '\\0') {\n        uVar4 = fcn.0044985c(&lpClassName);\n        (*_sym.imp.USER32.dll_CharUpperBuffW)(&lpClassName, uVar4);\n    }\n    iVar3 = *(unaff_EDI + 0x10);\n    if (iVar3 == 1) {\n        iVar3 = fcn.00449827(*(unaff_EDI + 0x14), &lpClassName, *(unaff_EDI + 0x18));\ncode_r0x00403afd:\n        if (iVar3 == 0) {\ncode_r0x00403b01:\n            var_4h = var_4h + 1;\n        }\n    }\n    else if (iVar3 == 2) {\n        iVar3 = fcn.004499ac(&lpClassName, *(unaff_EDI + 0x14));\n        if (iVar3 != 0) goto code_r0x00403b01;\n    }\n    else if (iVar3 == 3) {\n        iVar3 = fcn.00449703(&lpClassName, *(unaff_EDI + 0x14));\n        goto code_r0x00403afd;\n    }\n    var_8h = var_8h + 1;\ncode_r0x00403b07:\n    if (*(unaff_EDI + 7) != '\\0') {\n        (*pcVar1)(hWnd, &lpClassName, 0x400);\n        fcn.00416d81(&lpClassName);\n        cVar2 = fcn.0040f336();\n        fcn.0044951c(var_14h);\n        if (cVar2 != '\\0') {\n            var_4h = var_4h + 1;\n        }\n        var_8h = var_8h + 1;\n    }\n    if (*(unaff_EDI + 8) != '\\0') {\n        if ((var_4h == var_8h) && (cVar2 = fcn.00403bb4(hWnd),  cVar2 != '\\0')) {\n            var_4h = var_4h + 1;\n        }\n        var_8h = var_8h + 1;\n    }\n    if (*(unaff_EDI + 10) != '\\0') {\n        if ((var_4h == var_8h) &&\n           (*(unaff_EDI + 0x58) = *(unaff_EDI + 0x58) + 1,  *(unaff_EDI + 0x58) == *(unaff_EDI + 0x54))) {\n            var_4h = var_4h + 1;\n        }\n        var_8h = var_8h + 1;\n    }\n    if (var_4h == var_8h) {\n        fcn.00403ccb(&hWnd);\n        *(unaff_EDI + 0x5c) = *(unaff_EDI + 0x5c) + 1;\n        bVar5 = *(unaff_EDI + 4) == '\\0';\n    }\n    else {\n        bVar5 = true;\n    }\n    return bVar5;\n}\n",
        "token_count": 996
    },
    "00403bb4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nbool fcn.00403bb4(uint param_1)\n\n{\n    bool bVar1;\n    char cVar2;\n    int32_t unaff_ESI;\n    uint unaff_retaddr;\n    \n    if (*(unaff_ESI + 0x24) == 0) {\n        bVar1 = true;\n    }\n    else {\n        cVar2 = fcn.00403c8c(param_1);\n        if (cVar2 == '\\0') {\n            *(unaff_ESI + 0x60) = 0;\n            (*_sym.imp.USER32.dll_EnumChildWindows)(unaff_retaddr, 0x403bed);\n            bVar1 = *(unaff_ESI + 0x60) != '\\0';\n        }\n        else {\n            bVar1 = false;\n        }\n    }\n    return bVar1;\n}\n",
        "token_count": 185
    },
    "00403bff": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_2h\n\nuint __cdecl fcn.00403bff(uint32_t hWnd)\n\n{\n    int32_t iVar1;\n    int32_t unaff_ESI;\n    ushort uStack65540;\n    uint uStack36;\n    uchar *puStack32;\n    uchar *puStack28;\n    uint32_t uStack24;\n    uint uStack20;\n    uint uStack16;\n    uchar *puStack12;\n    uchar auStack8 [2];\n    uint var_2h;\n    \n    _auStack8 = 0x403c0c;\n    fcn.0044c510();\n    _auStack8 = hWnd;\n    puStack12 = 0x403c15;\n    iVar1 = (*_sym.imp.USER32.dll_IsWindowVisible)();\n    if ((iVar1 != 0) || (*(unaff_ESI + 5) == '\\x01')) {\n        uStack65540 = 0;\n        puStack12 = &stack0xfffefffc;\n        uStack16 = 0x7fff;\n        uStack20 = 0xd;\n        uStack24 = hWnd;\n        puStack28 = 0x403c3e;\n        iVar1 = (*_sym.imp.USER32.dll_SendMessageW)();\n        _auStack8 = _auStack8 & 0xffff;\n        if (0 < iVar1) {\n            if (*(unaff_ESI + 0xc) == '\\0') {\n                puStack28 = &stack0xfffefffc;\n                puStack32 = 0x403c59;\n                puStack28 = fcn.0044985c();\n                puStack32 = &stack0xfffefffc;\n                uStack36 = 0x403c68;\n                (*_sym.imp.USER32.dll_CharUpperBuffW)();\n            }\n            puStack28 = *(unaff_ESI + 0x20);\n            puStack32 = &stack0xfffefffc;\n            uStack36 = 0x403c77;\n            iVar1 = fcn.004499ac();\n            if (iVar1 != 0) {\n                *(unaff_ESI + 0x60) = 1;\n                return 0;\n            }\n        }\n    }\n    return 1;\n}\n",
        "token_count": 492
    },
    "00404018": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00404018(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    int32_t *piVar2;\n    \n    piVar2 = param_1 + 0x50 + in_EAX * 4;\n    iVar1 = *piVar2;\n    if (iVar1 != 0) {\n        fcn.00404066();\n        fcn.0044951c(iVar1);\n    }\n    *piVar2 = 0;\n    if (in_EAX != *(param_1 + 0x14)) {\n        return;\n    }\n    if (2 < in_EAX) {\n        do {\n            if (*piVar2 != 0) break;\n            in_EAX = in_EAX + -1;\n            piVar2 = piVar2 + -1;\n        } while (2 < in_EAX);\n        if (2 < in_EAX) goto code_r0x0040405d;\n    }\n    in_EAX = 0;\ncode_r0x0040405d:\n    *(param_1 + 0x14) = in_EAX;\n    return;\n}\n",
        "token_count": 252
    },
    "00404081": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __thiscall fcn.00404081(int32_t param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    int32_t *in_EAX;\n    int32_t **unaff_ESI;\n    int32_t unaff_EDI;\n    \n    if (param_1 < 0) {\n        if ((*(unaff_EDI + 0x115c) == 0xffffffff) || (in_EAX = unaff_EDI + 0x1158,  *in_EAX == -1))\n        goto code_r0x004040eb;\n        *unaff_ESI = *(unaff_EDI + 0x115c);\n        *param_2 = *in_EAX;\n    }\n    else {\n        in_EAX = param_1 / 0x1003;\n        *unaff_ESI = in_EAX;\n        if (0x400 < in_EAX) goto code_r0x004040eb;\n        *param_2 = param_1 % 0x1003;\n    }\n    in_EAX = *(unaff_EDI + 0x54 + *unaff_ESI * 4);\n    if ((((in_EAX != NULL) && (iVar1 = *param_2,  2 < iVar1)) && (iVar1 <= in_EAX[5])) && (in_EAX[iVar1 + 0x14] != 0)) {\n        return CONCAT31(in_EAX >> 8, 1);\n    }\ncode_r0x004040eb:\n    return in_EAX & 0xffffff00;\n}\n",
        "token_count": 347
    },
    "004040f0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004040f0(uint *hWnd, uint bErase)\n\n{\n    code *pcVar1;\n    uint *unaff_ESI;\n    uint lpRect;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (*(unaff_ESI + 0x39) == '\\0') {\n        (*_sym.imp.USER32.dll_GetWindowRect)(*hWnd, &lpRect);\n        pcVar1 = _sym.imp.USER32.dll_ScreenToClient;\n        var_8h = lpRect;\n        var_4h = var_14h;\n        (*_sym.imp.USER32.dll_ScreenToClient)(*unaff_ESI, &var_8h);\n        lpRect = var_8h;\n        var_14h = var_4h;\n        var_8h = var_10h;\n        var_4h = var_ch;\n        (*pcVar1)(*unaff_ESI, &var_8h);\n        var_10h = var_8h;\n        var_ch = var_4h;\n        (*_sym.imp.USER32.dll_InvalidateRect)(*unaff_ESI, &lpRect, bErase);\n    }\n    return;\n}\n",
        "token_count": 281
    },
    "00404229": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00404229(uint *lpMsg)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    int32_t unaff_EDI;\n    uint lpClassName;\n    int32_t var_4h;\n    \n    iVar2 = 0;\n    var_4h = 0;\n    piVar3 = unaff_EDI + 0x54;\n    do {\n        if (*(unaff_EDI + 0x18) <= iVar2) {\n            return 0;\n        }\n        if (*piVar3 != 0) {\n            iVar1 = *(*piVar3 + 0x418c);\n            iVar2 = iVar2 + 1;\n            if ((iVar1 != 0) && (*(iVar1 + 0x10) != 0)) {\n                iVar1 = (**(**(iVar1 + 0x10) + 0x14))(*(iVar1 + 0x10), lpMsg);\n                if (iVar1 == 0) {\n                    return 1;\n                }\n                iVar1 = (*_sym.imp.USER32.dll_GetClassNameW)(*lpMsg, &lpClassName, 0x7f);\n                if (((iVar1 != 0) && (iVar1 = fcn.00449703(&lpClassName, 0x45c444),  iVar1 != 0)) &&\n                   (iVar1 = fcn.00449703(&lpClassName, 0x45bea4),  iVar1 != 0)) {\n                    return 0;\n                }\n            }\n            iVar1 = (*_sym.imp.USER32.dll_IsDialogMessageW)(**piVar3, lpMsg);\n            if (iVar1 != 0) {\n                return 1;\n            }\n        }\n        var_4h = var_4h + 1;\n        piVar3 = piVar3 + 1;\n        if (0x3ff < var_4h) {\n            return 0;\n        }\n    } while( true );\n}\n",
        "token_count": 436
    },
    "004042e6": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004042e6(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    int32_t *piVar2;\n    \n    iVar1 = *(in_EAX + 0x20);\n    while (iVar1 != 0) {\n        piVar2 = *(in_EAX + 0x24);\n        if (piVar2 == NULL) {\n            piVar2 = in_EAX + 0x2c;\n        }\n        iVar1 = *piVar2;\n        fcn.00421aef();\n        if (iVar1 != 0) {\n            fcn.0044951c(*(iVar1 + 4));\n            fcn.0044951c(iVar1);\n        }\n        iVar1 = *(in_EAX + 0x20);\n    }\n    return;\n}\n",
        "token_count": 180
    },
    "00405972": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00405afb)\n\nuint fcn.00405972(int32_t param_1)\n\n{\n    uint *puVar1;\n    code *pcVar2;\n    code *pcVar3;\n    uint *puVar4;\n    int32_t in_EAX;\n    uint uVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    int32_t unaff_ESI;\n    uint uVar8;\n    uint uVar9;\n    uint uVar10;\n    uint uVar11;\n    uint *puVar12;\n    uint *puStack160;\n    int32_t iStack156;\n    uint uStack152;\n    uint uStack148;\n    uint uStack144;\n    uchar *puStack140;\n    uint uStack136;\n    uint uStack132;\n    uint *puStack128;\n    uint uStack124;\n    uint *puStack120;\n    uint uStack116;\n    uint *puStack112;\n    uint uStack108;\n    uint uStack104;\n    uint uStack100;\n    uint uStack96;\n    uint *puStack92;\n    int32_t iStack88;\n    uint *puStack84;\n    uint *puStack80;\n    int32_t iStack76;\n    int32_t iStack8;\n    \n    puVar1 = *(in_EAX + 0x18);\n    if ((*(in_EAX + 0x10) & 6) == 0) {\n        iStack76 = *(param_1 + 0x3c);\n        if (iStack76 == -1) {\n            iStack76 = 0x12;\n            puStack80 = 0x4059bd;\n            iStack76 = (*_sym.imp.USER32.dll_GetSysColor)();\n        }\n        puStack84 = 0x4059c5;\n        puStack80 = puVar1;\n        (**0x45910c)();\n        iStack8 = param_1;\n    }\n    else {\n        iStack76 = 0xe;\n        puStack80 = 0x40599b;\n        puStack80 = (*_sym.imp.USER32.dll_GetSysColor)();\n        iStack88 = 0x4059a3;\n        puStack84 = puVar1;\n        (**0x45910c)();\n    }\n    iStack88 = *(iStack8 + 0x38);\n    if (iStack88 == -1) {\n        iStack88 = 0xf;\n        puStack92 = 0x4059d9;\n        (*_sym.imp.USER32.dll_GetSysColorBrush)();\n        puStack92 = 0xf;\n        uStack96 = 0x4059e5;\n        uVar5 = (*_sym.imp.USER32.dll_GetSysColor)();\n    }\n    else {\n        puStack92 = 0x4059f0;\n        iStack76 = (**0x459104)();\n        uVar5 = *(iStack8 + 0x38);\n    }\n    if (unaff_ESI == 0) {\n        uStack96 = 0x743c00;\n    }\n    else {\n        uStack96 = 0x11;\n        uStack100 = 0x405a06;\n        uStack96 = (*_sym.imp.USER32.dll_GetSysColor)();\n    }\n    uStack100 = 1;\n    uStack104 = 0;\n    uStack108 = 0x405a18;\n    uStack108 = (**0x459100)();\n    pcVar2 = _sym.imp.GDI32.dll_SelectObject;\n    uStack116 = 0x405a26;\n    puStack112 = puVar1;\n    (*_sym.imp.GDI32.dll_SelectObject)();\n    uStack124 = 0x405a32;\n    puStack120 = puVar1;\n    uStack116 = uVar5;\n    (*_sym.imp.GDI32.dll_SetBkColor)();\n    uStack124 = uStack104;\n    uStack132 = 0x405a3d;\n    puStack128 = puVar1;\n    iStack88 = (*pcVar2)();\n    puStack92 = in_EAX + 0x1c;\n    uStack152 = *puStack92;\n    uStack132 = 0xffffffff;\n    uStack136 = 0xffffffff;\n    puStack140 = &stack0xffffffb8;\n    uStack144 = 0x405a5f;\n    (*_sym.imp.USER32.dll_InflateRect)();\n    uStack144 = 5;\n    uStack148 = 5;\n    iStack156 = iStack76;\n    puStack160 = puStack80;\n    puVar12 = puVar1;\n    (*_sym.imp.GDI32.dll_RoundRect)(puVar1, puStack84);\n    puVar4 = puStack92;\n    uVar5 = *puStack92;\n    puStack140 = 0x105;\n    uVar6 = (*_sym.imp.USER32.dll_GetWindowLongW)(uVar5);\n    if ((uVar6 & 0x2000) == 0) {\n        uStack148 = 0x125;\n    }\n    uVar11 = 0;\n    uVar10 = *puVar4;\n    iVar7 = (*_sym.imp.USER32.dll_SendMessageW)(uVar10, 0xe, 0);\n    iVar7 = iVar7 + 1;\n    uStack116 = fcn.00449614(iVar7 * 2);\n    uVar9 = *puVar4;\n    (*_sym.imp.USER32.dll_GetWindowTextW)(uVar9, uStack116, iVar7);\n    uStack148 = *puVar12;\n    uStack144 = puVar12[1];\n    puStack140 = puVar12[2];\n    uStack136 = puVar12[3];\n    (*_sym.imp.USER32.dll_InflateRect)(&stack0xffffff6c, 0xfffffffd, 0xfffffffd);\n    (*_sym.imp.USER32.dll_DrawFocusRect)(puVar1, &stack0xffffff60);\n    uVar8 = 0xffffffff;\n    (*_sym.imp.USER32.dll_DrawTextW)(puVar1, puStack128, 0xffffffff, &stack0xffffff6c, uVar5);\n    fcn.0044951c(uStack148);\n    (*pcVar2)(puVar1, uVar11);\n    pcVar3 = *0x459108;\n    (**0x459108)(uVar8);\n    (*pcVar2)(puVar1, uVar10);\n    (*pcVar3)(iVar7);\n    (**0x45910c)(puVar1, uVar11);\n    (*_sym.imp.GDI32.dll_SetBkColor)(puVar1, uVar9);\n    return 1;\n}\n",
        "token_count": 1467
    },
    "00405b6e": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00405b6e(uint noname_0, uint *lpchText)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    int32_t ARG_1;\n    int32_t var_2ch;\n    int32_t iStack44;\n    int32_t iStack40;\n    uint var_20h;\n    uint var_1ch;\n    uint32_t var_18h;\n    uint crColor;\n    int32_t *var_10h;\n    uint32_t var_ch;\n    uint32_t format;\n    uint hgdiobj;\n    \n    if (*0x467a04 == 0) {\n        format = *(in_EAX + 0x10);\n        var_ch = format & 0x10;\n        var_18h = format & 6;\n        uVar1 = *(in_EAX + 0x18);\n        format = format & 1;\n        if (var_18h == 0) {\n            iVar4 = lpchText[0xf];\n            if (iVar4 == -1) {\n                iVar4 = (*_sym.imp.USER32.dll_GetSysColor)(0x12);\n            }\n            crColor = (**0x45910c)(uVar1, iVar4);\n        }\n        else {\n            uVar2 = (*_sym.imp.USER32.dll_GetSysColor)(0xe);\n            crColor = (**0x45910c)(uVar1, uVar2);\n        }\n        if (lpchText[0xe] == -1) {\n            hgdiobj = (*_sym.imp.USER32.dll_GetSysColorBrush)(0xf);\n            uVar2 = (*_sym.imp.USER32.dll_GetSysColor)(0xf);\n        }\n        else {\n            hgdiobj = (**0x459104)(lpchText[0xe]);\n            uVar2 = lpchText[0xe];\n        }\n        var_20h = (*_sym.imp.GDI32.dll_SetBkColor)(uVar1, uVar2);\n        var_1ch = (*_sym.imp.GDI32.dll_SelectObject)(uVar1, hgdiobj);\n        var_10h = in_EAX + 0x1c;\n        ARG_1 = *var_10h;\n        var_2ch = *(in_EAX + 0x20);\n        iStack44 = *(in_EAX + 0x24);\n        iStack40 = *(in_EAX + 0x28);\n        if (format == 0) {\n            if (var_ch != 0) {\n                (*_sym.imp.USER32.dll_InflateRect)(&ARG_1, 0xffffffff, 0xffffffff);\n            }\n            (*_sym.imp.USER32.dll_DrawFrameControl)(uVar1, &ARG_1, 4, 0x10);\n        }\n        else {\n            (*_sym.imp.USER32.dll_InflateRect)(&ARG_1, 0xffffffff, 0xffffffff);\n            uVar2 = (*_sym.imp.USER32.dll_GetSysColor)(0x10);\n            uVar2 = (**0x459104)(uVar2);\n            (*_sym.imp.USER32.dll_FrameRect)(uVar1, &ARG_1, uVar2);\n            (**0x459108)(uVar2);\n        }\n        ARG_1 = *var_10h;\n        var_2ch = var_10h[1];\n        iStack44 = var_10h[2];\n        iStack40 = var_10h[3];\n        if (format == 0) {\n            if (var_ch == 0) {\n                uVar5 = 0xfffffffe;\n                uVar2 = 0xfffffffe;\n            }\n            else {\n                uVar5 = 0xfffffffd;\n                uVar2 = 0xfffffffd;\n            }\n            (*_sym.imp.USER32.dll_InflateRect)(&ARG_1, uVar2, uVar5);\n            ARG_1 = ARG_1 + -1;\n            var_2ch = var_2ch + -1;\n        }\n        else {\n            (*_sym.imp.USER32.dll_InflateRect)(&ARG_1, 0xfffffffe, 0xfffffffe);\n        }\n        (*_sym.imp.USER32.dll_FillRect)(uVar1, &ARG_1, hgdiobj);\n        if ((format != 0) || (var_18h != 0)) {\n            ARG_1 = ARG_1 + 2;\n            var_2ch = var_2ch + 2;\n        }\n        format = 0x105;\n        uVar3 = (*_sym.imp.USER32.dll_GetWindowLongW)(*lpchText, 0xfffffff0);\n        if ((uVar3 & 0x2000) == 0) {\n            format = 0x125;\n        }\n        iVar4 = (*_sym.imp.USER32.dll_SendMessageW)(*lpchText, 0xe, 0, 0);\n        uVar2 = fcn.00449614((iVar4 + 1) * 2);\n        (*_sym.imp.USER32.dll_GetWindowTextW)(*lpchText, uVar2, iVar4 + 1);\n        (*_sym.imp.USER32.dll_DrawTextW)(uVar1, uVar2, 0xffffffff, &ARG_1, format);\n        if (var_18h != 0) {\n            var_2ch = var_10h[1];\n            iStack44 = var_10h[2];\n            iStack40 = var_10h[3];\n            ARG_1 = *var_10h + -1;\n            uVar5 = (*_sym.imp.USER32.dll_GetSysColor)(0x11);\n            (**0x45910c)(uVar1, uVar5);\n            (*_sym.imp.USER32.dll_DrawTextW)(uVar1, uVar2, 0xffffffff, &ARG_1, 0x125);\n        }\n        if (var_ch != 0) {\n            ARG_1 = *var_10h;\n            var_2ch = var_10h[1];\n            iStack44 = var_10h[2];\n            iStack40 = var_10h[3];\n            uVar5 = (**0x459104)(0);\n            (*_sym.imp.USER32.dll_FrameRect)(uVar1, &ARG_1, uVar5);\n            (**0x459108)(uVar5);\n            (*_sym.imp.USER32.dll_InflateRect)(&ARG_1, 0xfffffffc, 0xfffffffc);\n            (*_sym.imp.USER32.dll_DrawFocusRect)(uVar1, &ARG_1);\n        }\n        fcn.0044951c(uVar2);\n        (*_sym.imp.GDI32.dll_SelectObject)(uVar1, var_1ch);\n        (**0x459108)(hgdiobj);\n        (**0x45910c)(uVar1, crColor);\n        (*_sym.imp.GDI32.dll_SetBkColor)(uVar1, var_20h);\n        uVar1 = 1;\n    }\n    else {\n        uVar1 = fcn.00405972(lpchText);\n    }\n    return uVar1;\n}\n",
        "token_count": 1589
    },
    "00405dfc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00405dfc(uint lpPoint, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    int32_t *piVar4;\n    int32_t *unaff_EDI;\n    uint lpRect;\n    int32_t *var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_ch = -1;\n    var_10h = -1;\n    (*_sym.imp.USER32.dll_ClientToScreen)(**(in_EAX + 0x54 + *unaff_EDI * 4), &lpPoint);\n    var_8h = 0;\n    var_14h = in_EAX + 0x54;\n    do {\n        iVar1 = *var_14h;\n        if ((iVar1 != 0) && (var_4h = 3,  2 < *(iVar1 + 0x14))) {\n            piVar4 = iVar1 + 0x5c;\n            do {\n                puVar2 = *piVar4;\n                if (((puVar2 != NULL) && ((*(puVar2 + 0x72) & 0x20) == 0)) &&\n                   ((*(puVar2 + 0x73) == 0xff || (*(puVar2 + 0x73) == *(iVar1 + 0x4150))))) {\n                    (*_sym.imp.USER32.dll_GetWindowRect)(*puVar2, &lpRect);\n                    iVar3 = (*_sym.imp.USER32.dll_PtInRect)(&lpRect, lpPoint, arg_ch);\n                    if (iVar3 != 0) {\n                        if (*unaff_EDI != var_8h) {\n                            var_10h = var_8h;\n                        }\n                        if ((*(*piVar4 + 0x72) & 8) != 0) {\n                            if (*unaff_EDI == var_8h) {\n                                return var_4h;\n                            }\n                            *unaff_EDI = var_10h;\n                            return var_4h;\n                        }\n                        if (var_ch < 0) {\n                            var_ch = var_4h;\n                        }\n                    }\n                }\n                var_4h = var_4h + 1;\n                piVar4 = piVar4 + 1;\n            } while (var_4h <= *(iVar1 + 0x14));\n        }\n        var_8h = var_8h + 1;\n        var_14h = var_14h + 1;\n        if (0x3ff < var_8h) {\n            if (var_ch < 0) {\n                (*_sym.imp.USER32.dll_MessageBeep)(0);\n                var_ch = -1;\n            }\n            else if (-1 < var_10h) {\n                *unaff_EDI = var_10h;\n            }\n            return var_ch;\n        }\n    } while( true );\n}\n",
        "token_count": 675
    },
    "00405ef5": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405ef5(uint arg_8h, int32_t arg_ch)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint16_t uVar3;\n    int32_t *unaff_ESI;\n    int32_t unaff_EDI;\n    uint arg_8h_00;\n    int32_t *arg_ch_00;\n    int32_t arg_14h;\n    int32_t lpPoint;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    arg_14h = *unaff_ESI;\n    (*_sym.imp.USER32.dll_GetCursorPos)(&lpPoint);\n    unaff_ESI[0x104b] = lpPoint;\n    unaff_ESI[0x104c] = var_ch;\n    (*_sym.imp.USER32.dll_ScreenToClient)(arg_14h, &lpPoint);\n    if ((lpPoint != unaff_ESI[0x104d]) || (var_ch != unaff_ESI[0x104e])) {\n        unaff_ESI[0x104d] = lpPoint;\n        unaff_ESI[0x104e] = var_ch;\n        if (arg_ch == 1) {\n            fcn.004043cb(arg_8h, unaff_ESI, lpPoint, var_ch);\n        }\n    }\n    pcVar1 = _sym.imp.USER32.dll_GetAsyncKeyState;\n    arg_ch_00 = 0x1;\n    uVar3 = (*_sym.imp.USER32.dll_GetAsyncKeyState)();\n    if (((uVar3 & 0x8000) == 0) && (uVar3 = (*_sym.imp.USER32.dll_GetKeyState)(1),  (uVar3 & 0x8000) == 0)) {\n        var_8h = 0;\n    }\n    else {\n        var_8h = 1;\n    }\n    arg_8h_00 = 2;\n    uVar3 = (*pcVar1)();\n    if (((uVar3 & 0x8000) == 0) && (uVar3 = (*_sym.imp.USER32.dll_GetKeyState)(2),  (uVar3 & 0x8000) == 0)) {\n        var_4h = 0;\n    }\n    else {\n        var_4h = 1;\n    }\n    iVar2 = var_8h;\n    if ((var_8h == unaff_ESI[0x104f]) || (arg_ch != 1)) {\ncode_r0x00406016:\n        if (arg_ch != 0) goto code_r0x0040601c;\n    }\n    else {\n        if (*(unaff_ESI + 0x105a) != '\\0') {\n            if (var_8h == 0) {\n                fcn.004043cb(arg_8h, unaff_ESI, lpPoint, var_ch);\n                if (*(unaff_ESI + 0x1051) != '\\0') {\n                    (*_sym.imp.USER32.dll_GetWindowLongW)(*unaff_ESI, 0xfffffff0);\n                    arg_8h_00 = arg_8h;\n                    arg_ch_00 = unaff_ESI;\n                    unaff_EDI = lpPoint;\n                    arg_14h = var_ch;\n                    goto code_r0x00406009;\n                }\n            }\n            else {\ncode_r0x00406009:\n                fcn.004043cb(arg_8h_00, arg_ch_00, unaff_EDI, arg_14h);\n            }\n            *(unaff_ESI + 0x1051) = 0;\n            goto code_r0x00406016;\n        }\ncode_r0x0040601c:\n        unaff_ESI[0x104f] = iVar2;\n    }\n    if ((var_4h != unaff_ESI[0x1050]) && (arg_ch == 1)) {\n        if (var_4h != 0) {\n            fcn.004043cb(arg_8h, unaff_ESI, lpPoint, var_ch);\n            goto code_r0x0040605a;\n        }\n        fcn.004043cb(arg_8h, unaff_ESI, lpPoint, var_ch);\n    }\n    if (arg_ch == 0) {\n        return;\n    }\ncode_r0x0040605a:\n    unaff_ESI[0x1050] = var_4h;\n    return;\n}\n",
        "token_count": 989
    },
    "00406068": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00406068(int32_t param_1, int32_t param_2)\n\n{\n    uint *puVar1;\n    uint *puVar2;\n    uint uVar3;\n    code *pcVar4;\n    int32_t in_EAX;\n    uint var_4h;\n    \n    if ((in_EAX != -1) && (param_2 != -1)) {\n        puVar1 = *(param_1 + 0x54 + in_EAX * 4);\n        puVar2 = puVar1[param_2 + 0x14];\n        if (puVar1[0x1063] != 0) {\n            fcn.0040e502();\n        }\n        if (puVar1[param_2 + 0x14] == 0) {\n            puVar1[6] = 0xffffffff;\n        }\n        else {\n            uVar3 = *puVar2;\n            puVar1[6] = param_2;\n            pcVar4 = _sym.imp.USER32.dll_PostMessageW;\n            (*_sym.imp.USER32.dll_PostMessageW)(*puVar1, 0x28, uVar3, 1);\n            if (*(puVar2 + 0x1c) == '\\x02') {\n                (*pcVar4)(uVar3, 0xb1, puVar1[0x105f], puVar1[0x1060]);\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 319
    },
    "00406c05": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00406c05(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t unaff_ESI;\n    \n    if (param_1 != 0) {\n        uVar2 = fcn.00403eaf(param_1);\n        *(unaff_ESI + 0x1c) = uVar2;\n    }\n    if (*(unaff_ESI + 0x1c) == -1) {\n        uVar2 = 0;\n    }\n    else {\n        iVar1 = *(*(unaff_ESI + 0x54 + *(unaff_ESI + 0x1c) * 4) + 0x28);\n        if (iVar1 != 0) {\n            (*_sym.imp.USER32.dll_DestroyIcon)(iVar1);\n        }\n        fcn.0040c4de(0);\n        (*_sym.imp.USER32.dll_DestroyWindow)(**(unaff_ESI + 0x54 + *(unaff_ESI + 0x1c) * 4));\n        uVar2 = 1;\n    }\n    return uVar2;\n}\n",
        "token_count": 250
    },
    "00407034": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.00407034(int32_t arg_8h, int32_t *arg_ch, int32_t *arg_10h, int32_t *arg_14h, int32_t *arg_18h, int32_t *arg_1ch)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t unaff_EDI;\n    \n    iVar2 = *(unaff_EDI + 0x1c);\n    if (arg_8h != 0) {\n        iVar2 = fcn.00403eaf(arg_8h);\n    }\n    if (iVar2 != -1) {\n        piVar1 = *(unaff_EDI + 0x54 + iVar2 * 4);\n        if ((arg_8h == 0) && (iVar2 = (*_sym.imp.USER32.dll_GetActiveWindow)(),  *piVar1 != iVar2)) {\n            return 0;\n        }\n        fcn.00405ef5(unaff_EDI, 0xffffffff);\n        *arg_ch = piVar1[0x104d];\n        *arg_10h = piVar1[0x104e];\n        *arg_14h = piVar1[0x104f];\n        *arg_18h = piVar1[0x1050];\n        *(unaff_EDI + 0x1160) = 0;\n        *(unaff_EDI + 0x1164) = 0x7fffffff;\n        *(unaff_EDI + 0x1168) = piVar1[0x104b];\n        *(unaff_EDI + 0x116c) = piVar1[0x104c];\n        (*_sym.imp.USER32.dll_EnumChildWindows)(*piVar1, 0x40711f, 0);\n        *arg_1ch = -1;\n        iVar2 = *(unaff_EDI + 0x1160);\n        if ((iVar2 != 0) && (iVar2 != *piVar1)) {\n            uVar3 = fcn.00403ee1(iVar2);\n            iVar2 = fcn.00403f19(uVar3);\n            *arg_1ch = iVar2;\n            if (iVar2 != -1) {\n                return 1;\n            }\n        }\n        *arg_1ch = 0;\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 535
    },
    "004071a5": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004071a5(uint noname_0, uint noname_1, uint arg_10h, int32_t arg_14h)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t unaff_EBX;\n    int32_t unaff_EDI;\n    \n    if (arg_14h != 0) {\n        uVar2 = fcn.00403eaf(arg_14h);\n        *(in_EAX + 0x1c) = uVar2;\n    }\n    if (*(in_EAX + 0x1c) == -1) {\n        uVar2 = 0;\n    }\n    else {\n        iVar1 = *(in_EAX + 0x54 + *(in_EAX + 0x1c) * 4);\n        if (CONCAT44(noname_1, noname_0) != *0x462078) {\n            uVar2 = fcn.00458664();\n            *(iVar1 + 0x407c) = uVar2;\n        }\n        if (unaff_EDI != -1) {\n            *(iVar1 + 0x4080) = unaff_EDI;\n        }\n        if (unaff_EBX != -1) {\n            *(iVar1 + 0x4084) = unaff_EBX;\n        }\n        fcn.00416e83(iVar1 + 0x4070, arg_10h);\n        uVar2 = 1;\n    }\n    return uVar2;\n}\n",
        "token_count": 342
    },
    "00407351": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.00407351(int32_t param_1, uint32_t param_2, int32_t param_3)\n\n{\n    ushort *puVar1;\n    uint8_t uVar2;\n    ushort uVar3;\n    uint *puVar4;\n    code *pcVar5;\n    char cVar6;\n    uint32_t *in_EAX;\n    uint32_t uVar7;\n    int32_t iVar8;\n    int32_t iVar9;\n    int32_t extraout_ECX;\n    ulong uVar10;\n    uint uVar11;\n    uint auStack204 [6];\n    uint32_t uStack180;\n    uint auStack176 [2];\n    uint32_t uStack168;\n    uint uStack152;\n    uint uStack148;\n    uint32_t uStack140;\n    int32_t iStack116;\n    uint uStack112;\n    ushort uStack108;\n    ushort uStack106;\n    ushort uStack102;\n    uint uStack92;\n    int32_t iStack88;\n    uint32_t uStack84;\n    uint uStack80;\n    int32_t iStack76;\n    uint uStack72;\n    uint32_t uStack56;\n    uint uStack52;\n    uint32_t uStack48;\n    int32_t iStack44;\n    uint32_t uStack40;\n    uint uStack36;\n    int32_t iStack32;\n    int32_t iStack28;\n    uint32_t uStack20;\n    uint uStack12;\n    uint32_t uStack8;\n    \n    cVar6 = fcn.00404081(&param_2);\n    if (cVar6 == '\\0') {\ncode_r0x00407752:\n        *in_EAX = 0;\n        return 0;\n    }\n    uVar10 = fcn.00403f19(param_2);\n    param_2 = uVar10;\n    iVar8 = *(param_1 + 0x54 + (uVar10 >> 0x20) * 4);\n    puVar4 = *(iVar8 + 0x50 + extraout_ECX * 4);\n    *in_EAX = 0xffffffff;\n    pcVar5 = _sym.imp.USER32.dll_SendMessageW;\n    uStack8 = *puVar4;\n    uVar2 = *(puVar4 + 0x1c);\n    if (uVar2 < 0x12) {\n        if (uVar2 == 0x11) {\n            iStack88 = puVar4[2];\n            *in_EAX = 0;\n            param_2 = (*_sym.imp.USER32.dll_GetWindowLongW)(puVar4[9], 0xfffffff0);\n            uStack92 = 8;\n            uStack80 = 0xf000;\n            if (param_3 == '\\0') {\n                iVar8 = (*_sym.imp.USER32.dll_SendMessageW)(puVar4[9], 0x113e, 0, &uStack92);\n                if (iVar8 == 0) {\n                    return 0;\n                }\n                if ((param_2 & 0x100) != 0) {\n                    *in_EAX = (-(uStack84 >> 0xc != 1) & 0xfffffffd) + 4;\n                }\n                if ((uStack84 & 2) != 0) {\n                    *in_EAX = *in_EAX | 0x100;\n                }\n                if ((uStack84 & 0x20) != 0) {\n                    *(in_EAX + 1) = *(in_EAX + 1) | 4;\n                }\n                if ((uStack84 & 0x10) == 0) {\n                    return 0;\n                }\n                *(in_EAX + 1) = *(in_EAX + 1) | 2;\n                return 0;\n            }\n            iVar8 = fcn.00449614(0x2000);\n            uStack92 = 1;\n            uStack72 = 0xfff;\n            iStack76 = iVar8;\n            iVar9 = (*_sym.imp.USER32.dll_SendMessageW)(puVar4[9], 0x113e, 0, &uStack92);\n        }\n        else {\n            if (uVar2 < 0xb) {\n                if (uVar2 == 10) {\n                    uVar7 = (*_sym.imp.USER32.dll_SendMessageW)(uStack8, 0x130b, 0, 0);\n                    *in_EAX = uVar7;\n                    if (param_3 == '\\0') {\n                        return 0;\n                    }\n                    auStack204[0] = 8;\n                    (*pcVar5)(uStack8, 0x133c, uVar7, auStack204);\n                    goto code_r0x004079a7;\n                }\n                if (uVar2 == 0) {\n                    iVar8 = (*_sym.imp.USER32.dll_SendMessageW)(uStack8, 0x147, 0, 0);\n                    if (iVar8 != -1) {\n                        iVar9 = (*pcVar5)(uStack8, 0x149, iVar8, 0);\n                        iVar9 = fcn.00449614(iVar9 * 2 + 2);\n                        uVar11 = 0x148;\ncode_r0x0040741b:\n                        (*pcVar5)(uStack8, uVar11, iVar8, iVar9);\n                        return iVar9;\n                    }\ncode_r0x004077c0:\n                    iVar8 = (*pcVar5)(uStack8, 0xe, 0, 0);\n                    iVar9 = fcn.00449614((iVar8 + 1) * 2);\n                    (*_sym.imp.USER32.dll_GetWindowTextW)(uStack8, iVar9, iVar8 + 1);\n                    return iVar9;\n                }\n                if (uVar2 == 1) {\n                    iVar8 = (*_sym.imp.USER32.dll_SendMessageW)(uStack8, 0x188, 0, 0);\n                    if (iVar8 != -1) {\n                        iVar9 = (*pcVar5)(uStack8, 0x18a, iVar8, 0);\n                        iVar9 = fcn.00449614(iVar9 * 2 + 2);\n                        uVar11 = 0x189;\n                        goto code_r0x0040741b;\n                    }\n                    goto code_r0x004077c0;\n                }\n                if (uVar2 != 8) goto code_r0x004077c0;\n                uVar11 = 0x408;\n                goto code_r0x0040799e;\n            }\n            if (uVar2 == 0xc) goto code_r0x00407752;\n            if (uVar2 < 0xe) goto code_r0x004077c0;\n            if (uVar2 < 0x10) {\n                if ((*(iVar8 + 0x415c) == 0) && (*(iVar8 + 0x4160) != 0)) {\n                    return 0;\n                }\n                iVar8 = (*_sym.imp.USER32.dll_IsMenu)(puVar4[1]);\n                if (iVar8 == 0) {\n                    return 0;\n                }\n                iVar8 = fcn.00449614(0x208);\n                uStack152 = 0x2c;\n                if (param_3 == '\\0') {\n                    uStack148 = 1;\n                    iVar9 = (*_sym.imp.USER32.dll_GetMenuItemInfoW)(puVar4[1], param_2, 0, &uStack152);\n                    if (iVar9 != 0) {\n                        fcn.0044951c(iVar8);\n                        *in_EAX = uStack140;\n                        uVar7 = (-((uStack140 & 3) != 0) & 0x40) + 0x40;\n                        if ((uStack140 & 0x8080) != 0) {\n                            uVar7 = uVar7 | 0x100;\n                        }\n                        if ((uStack140 & 8) == 0) {\n                            uVar7 = uVar7 | 4;\n                        }\n                        else {\n                            uVar7 = uVar7 | 1;\n                        }\n                        if ((uStack140 & 0x1000) != 0) {\n                            uVar7 = uVar7 | 0x200;\n                        }\n                        *in_EAX = uVar7;\n                        return 0;\n                    }\n                    goto code_r0x00407790;\n                }\n                uStack148 = 0x10;\n                uStack112 = 0x104;\n                iStack116 = iVar8;\n                iVar9 = (*_sym.imp.USER32.dll_GetMenuItemInfoW)();\n                goto code_r0x00407789;\n            }\n            if (uVar2 != 0x10) goto code_r0x004077c0;\n            *in_EAX = 0;\n            iStack88 = (*pcVar5)(uStack8, 0x110a, 9, 0);\n            if (iStack88 == 0) {\n                return 0;\n            }\n            uStack92 = 4;\n            if (param_3 == '\\0') {\n                iVar8 = (*pcVar5)(uStack8, 0x113e, 0, &uStack92);\n                uStack180 = uStack56;\n                if (iVar8 == 0) {\n                    return 0;\n                }\n                goto code_r0x004079a7;\n            }\n            iVar8 = fcn.00449614(0x2000);\n            uStack92 = 1;\n            uStack72 = 0xfff;\n            iStack76 = iVar8;\n            iVar9 = (*pcVar5)(uStack8, 0x113e, 0, &uStack92);\n        }\n        if (iVar9 != 0) {\n            return iVar8;\n        }\ncode_r0x00407790:\n        fcn.0044951c(iVar8);\n        return 0;\n    }\n    if (uVar2 != 0x12) {\n        if (uVar2 == 0x13) {\n            uVar7 = (*_sym.imp.USER32.dll_SendMessageW)(uStack8, 0x100c, 0xffffffff, 2);\n            *in_EAX = uVar7;\n            fcn.00449b00(&uStack52, 0, 0x28);\n            uStack48 = *in_EAX;\n            uStack52 = 4;\n            iVar8 = (*pcVar5)(uStack8, 0x104b, 0, &uStack52);\n            uStack180 = -(iVar8 != 0) & uStack20;\n            goto code_r0x004079a7;\n        }\n        if (uVar2 == 0x14) {\n            uVar11 = puVar4[9];\n            *in_EAX = 0xffffffff;\n            uStack12 = uVar11;\n            uStack8 = (*_sym.imp.USER32.dll_GetWindowLongW)(uVar11, 0xffffffec);\n            fcn.00449b00(&uStack52, 0, 0x28);\n            pcVar5 = _sym.imp.USER32.dll_SendMessageW;\n            uStack168 = param_2;\n            auStack176[0] = 1;\n            uStack48 = (*_sym.imp.USER32.dll_SendMessageW)(uVar11, 0x1053, 0xffffffff, auStack176);\n            if (uStack48 == -1) {\n                return 0;\n            }\n            if (((uStack8 & 4) == 0) || (param_3 == '\\0')) {\n                param_2 = fcn.00449614(0x2000);\n                iVar8 = 0;\n                uStack52 = 1;\n                iStack28 = 0xfff;\n                param_3 = param_2;\n                if (0 < *(puVar4 + 0x1d)) {\n                    do {\n                        iStack32 = param_3;\n                        iStack44 = iVar8;\n                        (*pcVar5)(puVar4[9], 0x104b, 0, &uStack52);\n                        iStack28 = fcn.0044985c(param_3);\n                        iStack28 = 0xffe - iStack28;\n                        if (iStack28 < 1) {\n                            return param_2;\n                        }\n                        iVar9 = fcn.0044985c(param_2);\n                        puVar1 = param_2 + iVar9 * 2;\n                        uVar3 = *(param_1 + 0x14);\n                        puVar1[1] = 0;\n                        *puVar1 = uVar3;\n                        param_3 = (*_sym.imp.USER32.dll_CharNextW)(puVar1);\n                        iVar8 = iVar8 + 1;\n                    } while (iVar8 < *(puVar4 + 0x1d));\n                }\n                iStack32 = param_3;\n                iStack44 = iVar8;\n                (*pcVar5)(puVar4[9], 0x104b, 0, &uStack52);\n                return param_2;\n            }\n            uStack52 = 8;\n            uStack36 = 0xf000;\n            iVar8 = (*pcVar5)(uStack12, 0x104b, 0, &uStack52);\n            if (iVar8 == 0) {\n                return 0;\n            }\n            uStack180 = (-(uStack40 >> 0xc != 1) & 0xfffffffd) + 4;\n            goto code_r0x004079a7;\n        }\n        if (uVar2 == 0x15) {\n            if (puVar4[0x16] == 4) {\n                iVar8 = fcn.00418641();\n                return iVar8;\n            }\n            uStack180 = fcn.00418733();\n            goto code_r0x004079a7;\n        }\n        if (uVar2 < 0x19) goto code_r0x004077c0;\n        if (0x1a < uVar2) {\n            if (uVar2 == 0x1c) {\n                iVar8 = (*_sym.imp.USER32.dll_SendMessageW)(uStack8, 0x1001, 0, &uStack108);\n                if (iVar8 != 0) {\n                    iVar8 = fcn.00449614(0x16);\n                    (*_sym.imp.USER32.dll_wsprintfW)(iVar8, 0x45c3d4, uStack108, uStack106, uStack102);\n                    return iVar8;\n                }\n                goto code_r0x00407752;\n            }\n            goto code_r0x004077c0;\n        }\n        if (param_3 == '\\0') {\n            uVar7 = (*_sym.imp.USER32.dll_SendMessageW)(uStack8, 0xf0, 0, 0);\n            *in_EAX = uVar7;\n            if (uVar7 != 0) {\n                return 0;\n            }\n            *in_EAX = 4;\n            return 0;\n        }\n        iVar9 = (*_sym.imp.USER32.dll_SendMessageW)(uStack8, 0xe);\n        iVar8 = fcn.00449614((iVar9 + 1) * 2);\n        iVar9 = (*_sym.imp.USER32.dll_GetWindowTextW)(uStack8, iVar8, iVar9 + 1);\ncode_r0x00407789:\n        if (iVar9 != 0) {\n            return iVar8;\n        }\n        *in_EAX = 0;\n        goto code_r0x00407790;\n    }\n    uVar11 = 0x400;\ncode_r0x0040799e:\n    uStack180 = (*_sym.imp.USER32.dll_SendMessageW)(uStack8, uVar11, 0, 0);\ncode_r0x004079a7:\n    *in_EAX = uStack180;\n    return 0;\n}\n",
        "token_count": 3523
    },
    "00407ab7": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl\nfcn.00407ab7(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, uint arg_14h, uint noname_4, uint noname_5, uint noname_6\n            , uint32_t arg_24h)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    char cVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t extraout_ECX;\n    int32_t *piVar7;\n    code *pcVar8;\n    bool bVar9;\n    uint *arg_ch_00;\n    uint in_stack_fffffd48;\n    uint uVar10;\n    uint lpszFile;\n    uint var_84h;\n    int32_t var_80h;\n    uint var_7ch;\n    uint var_68h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_44h;\n    uint var_40h;\n    uint lParam;\n    uint var_30h;\n    int32_t lprcUpdate;\n    uint var_20h;\n    uint var_18h;\n    int32_t phiconLarge;\n    int32_t nIconIndex;\n    int32_t phiconSmall;\n    int32_t hWnd;\n    uint var_1h;\n    \n    nIconIndex = fcn.00418733();\n    iVar5 = arg_8h;\n    cVar3 = fcn.00404081(&fcn.00407ab7::arg_ch);\n    iVar4 = arg_ch;\n    if (cVar3 == '\\0') {\ncode_r0x00408038:\n        uVar10 = 0;\n    }\n    else {\n        arg_ch = fcn.00403f19(arg_ch);\n        iVar5 = *(iVar5 + 0x54 + extraout_ECX * 4);\n        piVar7 = *(iVar5 + 0x50 + iVar4 * 4);\n        hWnd = *piVar7;\n        var_1h._0_1_ = *(piVar7 + 0x1c);\n        uVar10 = 0x407b1d;\n        fcn.004495f8(&fcn.00407ab7::lpszFile, arg_10h);\n        if (var_1h < 0x12) {\n            if (var_1h < 0x10) {\n                if (var_1h == 6) {\n                    arg_8h = *(piVar7 + 0x1b);\n                    arg_24h = *(piVar7 + 0x6e);\n                    iVar5 = fcn.0040aea4(piVar7, &fcn.00407ab7::arg_8h, &fcn.00407ab7::arg_24h);\n                    bVar9 = iVar5 == 0;\n                }\n                else {\n                    if (var_1h != 7) {\n                        if ((var_1h != 0xb) ||\n                           (iVar4 = (**0x4593fc)(&fcn.00407ab7::lpszFile, nIconIndex, 0, &fcn.00407ab7::phiconSmall, 1)\n                           ,  iVar4 < 1)) goto code_r0x00408038;\n                        hWnd = *(iVar5 + 0x4148);\n                        iVar4 = fcn.00403ee1(hWnd);\n                        piVar1 = iVar5 + 0x50 + iVar4 * 4;\n                        iVar5 = *(*piVar1 + 0x30);\n                        if (iVar5 == 0) {\n                            iVar5 = (*_sym.imp.COMCTL32.dll_ImageList_Create)(0x10, 0x10, 0x21, 1, 1);\n                            *(*piVar1 + 0x30) = iVar5;\n                            (*_sym.imp.USER32.dll_SendMessageW)(hWnd, 0x1303, 0, iVar5);\n                            if (iVar5 != 0) goto code_r0x00407bbc;\n                        }\n                        else {\ncode_r0x00407bbc:\n                            uVar10 = (*_sym.imp.COMCTL32.dll_ImageList_ReplaceIcon)\n                                               (iVar5, *(piVar7 + 0x1a), phiconSmall);\n                            lParam = 2;\n                            var_20h = uVar10;\n                            (*_sym.imp.USER32.dll_SendMessageW)(hWnd, 0x133d, *(piVar7 + 0x73), &fcn.00407ab7::lParam);\n                            *(piVar7 + 0x1a) = uVar10;\n                        }\n                        goto code_r0x00407bf2;\n                    }\n                    arg_ch_00 = &fcn.00407ab7::arg_14h;\n                    fcn.0041835f();\n                    cVar3 = fcn.0040b0ad(arg_10h, arg_ch_00, in_stack_fffffd48, uVar10);\n                    bVar9 = cVar3 == '\\0';\n                }\n                if (bVar9) goto code_r0x00408038;\n                fcn.004040f0(piVar7, 0);\n            }\n            else {\n                iVar6 = (**0x4593fc)(&fcn.00407ab7::lpszFile, nIconIndex, 0, &fcn.00407ab7::phiconSmall, 1);\n                if (iVar6 < 1) goto code_r0x00408038;\n                if (var_1h == 0x10) {\n                    arg_8h = *(iVar5 + 0x14);\n                    arg_ch = hWnd;\n                    arg_10h = 3;\n                    iVar6 = iVar4;\n                }\n                else {\n                    arg_ch = piVar7[9];\n                    iVar6 = fcn.00403ee1(arg_ch);\n                    arg_10h = iVar4;\n                    arg_8h = iVar4;\n                }\n                piVar7 = iVar5 + 0x50 + iVar6 * 4;\n                iVar4 = *(*piVar7 + 0x30);\n                if (iVar4 == 0) {\n                    iVar4 = (*_sym.imp.COMCTL32.dll_ImageList_Create)(0x10, 0x10, 0x21, 1, 1);\n                    *(*piVar7 + 0x30) = iVar4;\n                    (*_sym.imp.USER32.dll_SendMessageW)(arg_ch, 0x1109, 0, iVar4);\n                    if (iVar4 != 0) goto code_r0x00407ce0;\n                }\n                else {\ncode_r0x00407ce0:\n                    uVar10 = (*_sym.imp.COMCTL32.dll_ImageList_ReplaceIcon)(iVar4, 0xffffffff, phiconSmall);\n                    if (var_1h == 0x10) {\n                        if ((arg_24h & 2) != 0) {\n                            *(iVar5 + 0x4174) = uVar10;\n                        }\n                        if ((arg_24h & 4) != 0) {\n                            *(iVar5 + 0x4178) = uVar10;\n                        }\n                    }\n                    if (arg_10h <= arg_8h) {\n                        arg_8h = (arg_8h - arg_10h) + 1;\n                        piVar7 = iVar5 + 0x50 + arg_10h * 4;\n                        do {\n                            iVar4 = arg_ch;\n                            iVar5 = *piVar7;\n                            if (((iVar5 != 0) && (*(iVar5 + 0x70) == '\\x11')) && (*(iVar5 + 0x24) == arg_ch)) {\n                                var_58h = *(iVar5 + 8);\n                                var_5ch = 0x32;\n                                (*_sym.imp.USER32.dll_SendMessageW)(arg_ch, 0x113e, 0, &fcn.00407ab7::var_5ch);\n                                if ((arg_24h & 2) != 0) {\n                                    var_40h = uVar10;\n                                }\n                                if ((arg_24h & 4) != 0) {\n                                    var_44h = uVar10;\n                                }\n                                (*_sym.imp.USER32.dll_SendMessageW)(iVar4, 0x113f, 0, &fcn.00407ab7::var_5ch);\n                            }\n                            piVar7 = piVar7 + 1;\n                            arg_8h = arg_8h + -1;\n                        } while (arg_8h != 0);\n                    }\n                }\n                (*_sym.imp.USER32.dll_GetClientRect)(arg_ch, &fcn.00407ab7::lprcUpdate);\n                (*_sym.imp.USER32.dll_RedrawWindow)(arg_ch, &fcn.00407ab7::lprcUpdate, 0, 0);\ncode_r0x00407bf2:\n                (*_sym.imp.USER32.dll_DestroyIcon)(phiconSmall);\n            }\n        }\n        else {\n            if (var_1h < 0x13) goto code_r0x00408038;\n            if (var_1h < 0x15) {\n                iVar6 = (**0x4593fc)(&fcn.00407ab7::lpszFile, nIconIndex, &fcn.00407ab7::phiconLarge, \n                                     &fcn.00407ab7::phiconSmall, 1);\n                pcVar8 = _sym.imp.USER32.dll_SendMessageW;\n                if (0 < iVar6) {\n                    if (var_1h == 0x13) {\n                        arg_10h = 0;\n                        iVar6 = (*_sym.imp.USER32.dll_SendMessageW)(hWnd, 0x1004, 0, 0);\n                    }\n                    else {\n                        iVar6 = piVar7[9];\n                        hWnd = iVar6;\n                        iVar4 = fcn.00403ee1(iVar6);\n                        pcVar8 = _sym.imp.USER32.dll_SendMessageW;\n                        lprcUpdate = arg_ch;\n                        var_30h = 1;\n                        iVar6 = (*_sym.imp.USER32.dll_SendMessageW)(iVar6, 0x1053, 0xffffffff, &fcn.00407ab7::var_30h);\n                        arg_10h = iVar6;\n                        if (iVar6 == -1) goto code_r0x00408038;\n                    }\n                    piVar7 = iVar5 + 0x50 + iVar4 * 4;\n                    iVar5 = *(*piVar7 + 0x28);\n                    arg_24h = *(*piVar7 + 0x2c);\n                    arg_8h = iVar6;\n                    if (iVar5 == 0) {\n                        iVar5 = (*_sym.imp.COMCTL32.dll_ImageList_Create)(0x10, 0x10, 0x21, 0, 1);\n                        *(*piVar7 + 0x28) = iVar5;\n                        (*pcVar8)(hWnd, 0x1003, 1, iVar5);\n                    }\n                    if (arg_24h == 0) {\n                        arg_24h = (*_sym.imp.COMCTL32.dll_ImageList_Create)(0x20, 0x20, 0x21, 0, 1);\n                        *(*piVar7 + 0x2c) = arg_24h;\n                        (*pcVar8)(hWnd, 0x1003, 0, arg_24h);\n                    }\n                    pcVar2 = _sym.imp.COMCTL32.dll_ImageList_ReplaceIcon;\n                    if ((iVar5 != 0) && (arg_24h != 0)) {\n                        uVar10 = (*_sym.imp.COMCTL32.dll_ImageList_ReplaceIcon)(iVar5, 0xffffffff, phiconSmall);\n                        (*pcVar2)(arg_24h, 0xffffffff, phiconLarge);\n                        for (iVar5 = arg_10h; iVar5 <= arg_8h; iVar5 = iVar5 + 1) {\n                            var_7ch = 0;\n                            var_84h = 2;\n                            var_80h = iVar5;\n                            var_68h = uVar10;\n                            (*pcVar8)(hWnd, 0x104c, 0, &fcn.00407ab7::var_84h);\n                        }\n                        (*pcVar8)(hWnd, 0x1015, arg_10h, arg_8h);\n                    }\n                    pcVar8 = _sym.imp.USER32.dll_DestroyIcon;\n                    (*_sym.imp.USER32.dll_DestroyIcon)(phiconSmall);\n                    (*pcVar8)(phiconLarge);\n                }\n            }\n            else {\n                if ((var_1h < 0x18) || (0x1a < var_1h)) goto code_r0x00408038;\n                cVar3 = (*_sym.imp.USER32.dll_GetWindowLongW)(hWnd, 0xfffffff0);\n                if (cVar3 < '\\0') {\n                    iVar4 = 0;\n                    iVar5 = (*_sym.imp.USER32.dll_LoadImageW)(0, &fcn.00407ab7::lpszFile, 0, 0, 0, 0x2010);\n                    if (iVar5 == 0) goto code_r0x00408033;\n                    (*_sym.imp.USER32.dll_SendMessageW)(hWnd, 0xf7, 0, iVar5);\n                    if (piVar7[0x11] != 0) {\n                        (**0x459108)(piVar7[0x11]);\n                    }\n                    iVar6 = piVar7[0x12];\n                }\n                else {\n                    iVar5 = 0;\n                    if (var_1h == 0x18) {\n                        if (nIconIndex < 0) {\n                            nIconIndex = -1 - nIconIndex;\n                            goto code_r0x00407e3c;\n                        }\ncode_r0x00407e9a:\n                        iVar4 = (**0x4593fc)(&fcn.00407ab7::lpszFile, nIconIndex, &fcn.00407ab7::phiconLarge, \n                                             &fcn.00407ab7::phiconSmall, 1);\n                        if (iVar4 < 1) goto code_r0x00408033;\n                        iVar4 = phiconSmall;\n                        if (arg_24h != 0) {\n                            iVar4 = phiconLarge;\n                            phiconLarge = phiconSmall;\n                        }\n                        (*_sym.imp.USER32.dll_DestroyIcon)(phiconLarge);\n                    }\n                    else {\ncode_r0x00407e3c:\n                        if (-1 < nIconIndex) goto code_r0x00407e9a;\n                        iVar4 = (*_sym.imp.USER32.dll_LoadImageW)(0, &fcn.00407ab7::lpszFile, 1, 0, 0, 0x2010);\n                        if (iVar4 == 0) goto code_r0x00408033;\n                    }\n                    (*_sym.imp.USER32.dll_SendMessageW)(hWnd, 0xf7, 1, iVar4);\n                    if (piVar7[0x11] != 0) {\n                        (**0x459108)(piVar7[0x11]);\n                    }\n                    iVar6 = piVar7[0x12];\n                }\n                if (iVar6 != 0) {\n                    (*_sym.imp.USER32.dll_DestroyIcon)(iVar6);\n                }\n                piVar7[0x11] = iVar5;\n                piVar7[0x12] = iVar4;\n            }\n        }\ncode_r0x00408033:\n        uVar10 = 1;\n    }\n    fcn.0041858e();\n    return uVar10;\n}\n",
        "token_count": 3483
    },
    "004080fa": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004080fa(int32_t param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = param_1;\n    cVar1 = fcn.00404081(&var_4h);\n    if ((cVar1 == '\\0') || (0x3ff < in_EAX)) {\n        uVar2 = 0;\n    }\n    else {\n        iVar3 = in_EAX;\n        if (in_EAX < 0) {\n            iVar3 = 0;\n        }\n        if ((0 < in_EAX) && (iVar3 < 0x400)) {\n            *(*(*(param_2 + 0x54 + param_1 * 4) + 0x50 + var_4h * 4) + 0x66) = iVar3;\n        }\n        if (*(*(param_2 + 0x54 + param_1 * 4) + 0x3a) == '\\0') {\n            fcn.00409ae3(0);\n        }\n        uVar2 = 1;\n    }\n    return uVar2;\n}\n",
        "token_count": 286
    },
    "004083ee": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004083ee(uint arg_8h, int32_t arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint *puVar1;\n    code *pcVar2;\n    char in_AL;\n    char cVar3;\n    uint uVar4;\n    int32_t iVar5;\n    int32_t in_EDX;\n    uint var_44h;\n    uint32_t var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_24h;\n    uint var_20h;\n    uint var_18h;\n    uint var_10h;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    cVar3 = fcn.00404081(&var_8h);\n    if (cVar3 == '\\0') {\n        uVar4 = 0;\n    }\n    else {\n        puVar1 = *(*(in_EDX + 0x54 + var_4h * 4) + 0x50 + var_8h * 4);\n        var_44h = 0x2c;\n        var_40h = -(in_AL != '\\0') & 2 | 0x11;\n        var_3ch = *puVar1;\n        var_24h = *(in_EDX + 0x48);\n        var_38h = *puVar1;\n        var_20h = arg_8h;\n        if (puVar1[0x10] != 0) {\n            (*_sym.imp.USER32.dll_DestroyWindow)(puVar1[0x10]);\n        }\n        iVar5 = (*_sym.imp.USER32.dll_CreateWindowExW)\n                          (8, 0x45c3b0, 0, -(arg_14h != '\\0') & 0x40 | 0x80000003, 0x80000000, 0x80000000, 0x80000000, \n                           0x80000000, *puVar1, 0, *(in_EDX + 0x48), 0);\n        pcVar2 = _sym.imp.USER32.dll_SendMessageW;\n        if (iVar5 != 0) {\n            (*_sym.imp.USER32.dll_SendMessageW)(iVar5, 0x432, 0, &var_44h);\n            puVar1[0x10] = iVar5;\n            uVar4 = (*_sym.imp.USER32.dll_GetDesktopWindow)(&var_18h);\n            (*_sym.imp.USER32.dll_GetWindowRect)(uVar4);\n            (*pcVar2)(iVar5, 0x418, 0, var_10h);\n            if (arg_ch != 0) {\n                (*pcVar2)(iVar5, 0x421, arg_10h, arg_ch);\n            }\n        }\n        uVar4 = 1;\n    }\n    return uVar4;\n}\n",
        "token_count": 642
    },
    "004084e1": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.004084e1(int32_t arg_8h, int32_t arg_ch, uint noname_2, uint noname_3, int32_t arg_18h, int32_t arg_1ch, \n            int32_t arg_20h)\n\n{\n    int32_t arg_ch_00;\n    char cVar1;\n    uint uVar2;\n    uint var_ch;\n    int32_t var_8h;\n    \n    fcn.00416d81(arg_1ch);\n    cVar1 = fcn.00404081(&arg_ch);\n    if (cVar1 == '\\0') {\n        uVar2 = 0;\n    }\n    else {\n        arg_ch_00 = *(arg_8h + 0x54 + arg_1ch * 4);\n        if ((*(*(arg_ch_00 + 0x50 + arg_ch * 4) + 0x71) & 1) == 0) {\n            if (CONCAT44(noname_3, noname_2) == *0x462078) {\n                arg_1ch = *(arg_ch_00 + 0x407c);\n            }\n            else {\n                arg_1ch = fcn.00458664();\n            }\n            if (arg_18h == -1) {\n                arg_18h = *(arg_ch_00 + 0x4080);\n            }\n            if (arg_20h == -1) {\n                arg_20h = *(arg_ch_00 + 0x4084);\n            }\n            if (var_8h == 0) {\n                fcn.00416e71();\n            }\n            uVar2 = 1;\n            fcn.004085b5(arg_8h, arg_ch_00, &var_ch, arg_1ch, arg_18h, 1);\n        }\n        else {\n            uVar2 = 0;\n        }\n    }\n    fcn.0044951c(var_ch);\n    return uVar2;\n}\n",
        "token_count": 439
    },
    "0040867d": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0040867d(int32_t param_1, uint param_2, int16_t *param_3)\n\n{\n    uint8_t uVar1;\n    uint *hWnd;\n    code *pcVar2;\n    char cVar3;\n    uint uVar4;\n    int32_t iVar5;\n    int16_t *unaff_EBX;\n    int32_t unaff_ESI;\n    int32_t unaff_EDI;\n    int16_t iStackY8444;\n    uint8_t uStackY151;\n    uchar *noname_1;\n    \n    fcn.0044c510();\n    noname_1 = &stack0xfffffff4;\n    cVar3 = fcn.00404081();\n    pcVar2 = _sym.imp.USER32.dll_SendMessageW;\n    if (cVar3 == '\\0') {\n        return 0;\n    }\n    iVar5 = *(param_1 + 0x54 + unaff_ESI * 4);\n    hWnd = *(iVar5 + 0x50 + unaff_EDI * 4);\n    uVar1 = *(hWnd + 0x1c);\n    if (uVar1 == 0) {\n        noname_1 = 0x14e;\n    }\n    else if (uVar1 == 1) {\n        noname_1 = 0x186;\n    }\n    else if ((((uVar1 < 2) || (3 < uVar1)) && (param_3 != NULL)) && (*param_3 != 0)) {\n        return 0;\n    }\n    // switch table (29 cases) at 0x408b81\n    switch(uVar1) {\n    case 0:\n    case 1:\n        if (unaff_EBX == NULL) {\n            return 0xffffffff;\n        }\n        iVar5 = (*_sym.imp.USER32.dll_SendMessageW)();\n        if (iVar5 != -1) {\n            (*pcVar2)();\n            fcn.004040f0(hWnd, 1);\n            return 0;\n        }\n        if ((*unaff_EBX == *(param_1 + 0x14)) || (*unaff_EBX == 0)) {\n            (*_sym.imp.USER32.dll_CharNextW)();\n            (*pcVar2)();\n        }\n        while (cVar3 = fcn.00408bd2(),  cVar3 != '\\0') {\n            (*pcVar2)();\n        }\n        if ((param_3 != NULL) && (iVar5 = (*pcVar2)(),  iVar5 != -1)) {\n            (*pcVar2)();\n        }\n        break;\n    case 2:\n    case 3:\n        if ((param_3 == NULL) || (*param_3 == 0)) {\n            (*_sym.imp.USER32.dll_SetWindowTextW)();\n            (*_sym.imp.USER32.dll_SendMessageW)();\n            *(iVar5 + 0x4184) = 0xffffffff;\n            return 1;\n        }\n        goto code_r0x0040885e;\n    default:\n        if (unaff_EBX == NULL) {\n            return 0xffffffff;\n        }\n        iVar5 = (*_sym.imp.USER32.dll_SetWindowTextW)();\n        if (iVar5 == 0) {\n            return 0;\n        }\n        fcn.004040f0(hWnd, 1);\n        break;\n    case 5:\n    case 0x1c:\n        fcn.00416868(1, 1);\n        goto code_r0x004088b2;\n    case 6:\n    case 7:\n    case 0x16:\n        return 0xffffffff;\n    case 8:\n        fcn.00449b60(unaff_EBX, 0, noname_1);\n        fcn.00458664();\n        goto code_r0x0040885e;\n    case 0xb:\n        iVar5 = (*_sym.imp.USER32.dll_SendMessageW)();\n        if (iVar5 == 0) {\n            return 0;\n        }\n        if (*(hWnd + 0x73) != -1) {\n            (*_sym.imp.USER32.dll_InvalidateRect)();\n        }\n        break;\n    case 0xe:\n    case 0xf:\n        fcn.00449614();\n        iVar5 = (*_sym.imp.USER32.dll_GetMenuItemInfoW)();\n        if (((iVar5 == 0) || ((uStackY151 & 8) != 0)) ||\n           (iVar5 = (*_sym.imp.USER32.dll_SetMenuItemInfoW)(),  iVar5 == 0)) {\n            fcn.0044951c();\n            return 0;\n        }\n        (*_sym.imp.USER32.dll_DrawMenuBar)();\n        fcn.0044951c();\n        break;\n    case 0x11:\n        goto code_r0x004088b2;\n    case 0x12:\n        fcn.00449b60(unaff_EBX, noname_1, *hWnd);\n        fcn.00458664();\ncode_r0x0040885e:\n        (*_sym.imp.USER32.dll_SendMessageW)();\n        break;\n    case 0x13:\n        if (unaff_EBX == NULL) {\n            return 0xffffffff;\n        }\n        fcn.00449b00();\n        while (cVar3 = fcn.00408bd2(),  cVar3 != '\\0') {\n            if ((iStackY8444 != 0) && (iVar5 = (*_sym.imp.USER32.dll_SendMessageW)(),  iVar5 == 0)) {\n                return 0;\n            }\n        }\n        iVar5 = fcn.0044985c();\n        if ((iVar5 != 0) && (iVar5 = fcn.0044985c(),  unaff_EBX[iVar5 + -1] != *(param_1 + 0x14))) {\n            return 1;\n        }\ncode_r0x004088b2:\n        iVar5 = (*_sym.imp.USER32.dll_SendMessageW)();\ncode_r0x004088b8:\n        if (iVar5 == 0) {\n            return 0;\n        }\n        break;\n    case 0x14:\n        if (unaff_EBX == NULL) {\n            return 0xffffffff;\n        }\n        fcn.00449b00();\n        pcVar2 = _sym.imp.USER32.dll_SendMessageW;\n        iVar5 = (*_sym.imp.USER32.dll_SendMessageW)();\n        if (iVar5 == -1) {\n            return 0;\n        }\n        while (cVar3 = fcn.00408bd2(),  cVar3 != '\\0') {\n            if ((iStackY8444 != 0) && (iVar5 = (*pcVar2)(),  iVar5 == 0)) {\n                return 0;\n            }\n        }\n        iVar5 = fcn.0044985c();\n        if ((iVar5 != 0) && (iVar5 = fcn.0044985c(),  unaff_EBX[iVar5 + -1] != *(param_1 + 0x14))) {\n            return 1;\n        }\n        iVar5 = (*pcVar2)();\n        goto code_r0x004088b8;\n    case 0x15:\n        fcn.00449b60(unaff_EBX, noname_1, *hWnd);\n        uVar4 = fcn.00458664();\n        hWnd[0xf] = uVar4;\n    }\n    return 1;\n}\n",
        "token_count": 1616
    },
    "00408c31": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00408c31(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t unaff_ESI;\n    \n    if (param_1 != 0) {\n        uVar2 = fcn.00403eaf(param_1);\n        *(unaff_ESI + 0x1c) = uVar2;\n    }\n    iVar1 = *(unaff_ESI + 0x54 + *(unaff_ESI + 0x1c) * 4);\n    *(iVar1 + 0x406d) = 0;\n    *(iVar1 + 0x406c) = 0;\n    return;\n}\n",
        "token_count": 152
    },
    "00408c5e": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.00408c5e(uint32_t param_1)\n\n{\n    char *pcVar1;\n    int32_t iVar2;\n    int32_t in_EAX;\n    uint32_t unaff_retaddr;\n    \n    iVar2 = *(in_EAX + 0x54 + *(in_EAX + 0x1c) * 4);\n    if ((param_1 & 0x20000) != 0) {\n        fcn.00408c31(0);\n    }\n    pcVar1 = iVar2 + 0x406c;\n    if (*pcVar1 == '\\0') {\n        unaff_retaddr = unaff_retaddr | 0x20000;\n        *pcVar1 = '\\x01';\n    }\n    return unaff_retaddr;\n}\n",
        "token_count": 174
    },
    "00408d93": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00408d93(uint param_1, uint param_2, int32_t param_3)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t unaff_EBX;\n    int32_t unaff_ESI;\n    int32_t unaff_EDI;\n    \n    if (param_3 != 0) {\n        uVar2 = fcn.00403eaf(param_3);\n        *(unaff_ESI + 0x1c) = uVar2;\n    }\n    if (*(unaff_ESI + 0x1c) == -1) {\n        uVar2 = 0;\n    }\n    else {\n        iVar1 = *(unaff_ESI + 0x54 + *(unaff_ESI + 0x1c) * 4);\n        *(iVar1 + 0x405c) = param_1;\n        *(iVar1 + 0x4060) = param_2;\n        if (0 < unaff_EDI) {\n            *(iVar1 + 0x4064) = unaff_EDI;\n        }\n        if (0 < unaff_EBX) {\n            *(iVar1 + 0x4068) = unaff_EBX;\n        }\n        uVar2 = 1;\n    }\n    return uVar2;\n}\n",
        "token_count": 287
    },
    "004093a3": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.004093a3(int32_t arg_8h, uint32_t arg_ch, int16_t *arg_10h, int32_t arg_14h, int32_t arg_18h, int32_t arg_1ch, \n            int32_t arg_20h, int32_t arg_24h, int32_t arg_28h, uint arg_2ch, uint noname_10, uint noname_11, \n            uint noname_12, uint32_t arg_3ch)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    char cVar4;\n    uchar uVar5;\n    int32_t iVar6;\n    uint uVar7;\n    uint uVar8;\n    int32_t *arg_ch_00;\n    uint *puVar9;\n    uint *arg_2ch_00;\n    uint32_t var_28h;\n    int32_t var_24h;\n    int32_t var_20h;\n    int32_t hWnd;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint *var_10h;\n    int32_t *var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    iVar6 = *(arg_8h + 0x1c);\n    if (iVar6 != -1) {\n        if (((arg_ch == 0xc) || ((0xd < arg_ch && (((arg_ch < 0x10 || (arg_ch == 0x11)) || (arg_ch == 0x14)))))) &&\n           ((arg_14h != -1 && (cVar4 = fcn.00404081(&var_28h),  cVar4 != '\\0')))) {\n            iVar6 = var_20h;\n        }\n        arg_ch_00 = *(arg_8h + 0x54 + iVar6 * 4);\n        hWnd = *arg_ch_00;\n        var_ch = arg_ch_00;\n        var_20h = fcn.00403f36();\n        if (var_20h != -1) {\n            puVar9 = arg_ch_00[var_20h + 0x14];\n            var_10h = puVar9;\n            var_4h = fcn.00403f19(var_20h);\n            if ((arg_ch == 0xe) || (arg_ch == 0xf)) {\n                piVar1 = arg_ch_00 + 0x1057;\n                if (*piVar1 == 0) {\n                    iVar6 = (*_sym.imp.USER32.dll_CreateMenu)();\n                    *piVar1 = iVar6;\n                    (*_sym.imp.USER32.dll_SetMenu)(hWnd, iVar6);\n                    arg_ch_00[0x1059] = *piVar1;\n                }\n                *(puVar9 + 0x72) = 0;\n            }\n            else {\n                *(puVar9 + 0x72) = 0x50;\n                *(puVar9 + 0x66) = *(arg_8h + 8);\n            }\n            var_8h = arg_20h;\n            var_28h = arg_3ch & 2;\n            var_18h = arg_14h;\n            var_14h = arg_18h;\n            hWnd = arg_1ch;\n            if (var_28h == 0) {\n                fcn.00408de6(arg_8h, arg_14h);\n                var_18h = var_ch[0x1017];\n                var_14h = var_ch[0x1018];\n                hWnd = var_ch[0x1019];\n                var_8h = var_ch[0x101a];\n                arg_ch_00 = var_ch;\n                puVar9 = var_10h;\n            }\n            iVar6 = var_18h;\n            if (arg_ch < 0x1e) {\n    // switch table (30 cases) at 0x409a6b\n                switch(*(arg_ch * 4 + 0x409a6b)) {\n                case 0x4094ea:\n                    cVar4 = fcn.0040aa66(arg_8h, arg_ch_00, var_4h, arg_10h, var_18h, var_14h, hWnd, var_8h, arg_28h);\n                    break;\n                case 0x40950c:\n                    cVar4 = fcn.0040ab15(arg_8h, arg_ch_00, var_4h, arg_10h, var_18h, var_14h, hWnd, var_8h, arg_28h);\n                    break;\n                case 0x40952c:\n                    cVar4 = fcn.0040a7a9(arg_ch_00, var_4h, arg_10h, var_18h, var_14h, hWnd, var_8h, arg_28h);\n                    break;\n                case 0x40954c:\n                    cVar4 = fcn.0040a850(arg_ch_00, var_4h, arg_10h, var_18h, var_14h, hWnd, var_8h, arg_28h);\n                    break;\n                case 0x40956c:\n                    cVar4 = fcn.0040a8e1(arg_ch_00, var_4h, arg_10h, var_18h, var_14h, hWnd, var_8h, arg_28h);\n                    break;\n                case 0x40958c:\n                    cVar4 = fcn.0040abd9(arg_8h, arg_ch_00, var_4h, arg_10h, var_18h, var_14h, hWnd, var_8h, arg_28h);\n                    break;\n                case 0x4095ae:\n                    cVar4 = fcn.0040ac94(arg_8h, arg_ch_00, var_4h, arg_10h, var_18h, var_14h, var_8h, arg_28h);\n                    break;\n                case 0x4095d1:\n                    cVar4 = fcn.0040ad6d(arg_8h, arg_ch_00, var_4h, arg_10h, var_18h, var_14h, arg_1ch, arg_20h, arg_28h\n                                        );\n                    break;\n                case 0x4095f5:\n                    arg_2ch_00 = &arg_2ch;\n                    fcn.0041835f();\n                    cVar4 = fcn.0040afdf(arg_8h, arg_ch_00, var_4h, arg_10h, var_18h, var_14h, arg_1ch, arg_20h, arg_28h\n                                         , arg_2ch_00);\n                    break;\n                case 0x40962b:\n                    cVar4 = fcn.0040b2cd(arg_8h, arg_ch_00, var_4h, var_18h, var_14h, hWnd, var_8h, arg_24h, arg_28h);\n                    break;\n                case 0x409648:\n                    cVar4 = fcn.0040b380(arg_8h, arg_ch_00, var_4h, var_18h, var_14h, hWnd, var_8h, arg_24h, arg_28h);\n                    break;\n                case 0x409667:\n                    uVar7 = fcn.00418733();\n                    cVar4 = fcn.0040b422(arg_8h, puVar9, var_4h, arg_10h, iVar6, var_14h, hWnd, var_8h, uVar7);\n                    break;\n                case 0x409693:\n                    cVar4 = fcn.0040b4dd(arg_8h, arg_ch_00, puVar9, var_4h, arg_10h);\n                    break;\n                case 0x4096ab:\n                    cVar4 = fcn.0040b5c4(arg_8h, var_4h, var_18h, var_14h, hWnd, var_8h, arg_28h);\n                    break;\n                case 0x4096c9:\n                    cVar4 = fcn.0040b6b1(arg_8h, puVar9, var_4h);\n                    break;\n                case 0x4096df:\n                    cVar4 = fcn.0040b85a(arg_8h, var_4h, arg_14h, arg_10h, arg_18h);\n                    break;\n                case 0x4096fc:\n                    cVar4 = fcn.0040bfa8(arg_8h);\n                    break;\n                case 0x409710:\n                    cVar4 = fcn.0040b944(arg_8h, var_4h, arg_14h, arg_10h, arg_18h, arg_1ch);\n                    break;\n                case 0x409730:\n                    cVar4 = fcn.0040ba5d(arg_8h, var_4h, var_18h, var_14h, hWnd, var_8h, arg_28h);\n                    break;\n                case 0x409750:\n                    cVar4 = fcn.0040bb77(puVar9, var_4h, arg_10h);\n                    break;\n                case 0x409767:\n                    cVar4 = fcn.0040c418(arg_8h, var_4h, arg_14h, arg_18h, arg_1ch, arg_20h, arg_24h, arg_28h);\n                    break;\n                case 0x40978b:\n                    cVar4 = fcn.0040a73b(var_4h, arg_10h, var_18h, var_14h, hWnd, var_8h, arg_28h);\n                    arg_ch_00 = var_ch;\n                    puVar9 = var_10h;\n                    break;\n                case 0x4097a7:\n                    cVar4 = fcn.0040a6a9(var_4h, arg_10h, var_18h, var_14h, hWnd, var_8h, arg_28h);\n                    break;\n                case 0x4097c8:\n                    cVar4 = fcn.0040a96d(var_4h, arg_10h, var_18h, var_14h, hWnd, var_8h, arg_28h);\n                    arg_ch_00 = var_ch;\n                    puVar9 = var_10h;\n                    break;\n                case 0x4097ea:\n                    cVar4 = fcn.0040a9e3(var_4h, arg_10h, var_18h, var_14h, hWnd, var_8h, arg_28h);\n                    break;\n                case 0x409808:\n                    cVar4 = fcn.0040bc83(arg_8h, arg_ch_00, var_4h, arg_10h, var_18h, var_14h, hWnd, var_8h, arg_24h, \n                                         arg_28h);\n                    break;\n                case 0x409827:\n                    cVar4 = fcn.0040bdf0(var_4h, arg_10h);\n                    break;\n                case 0x40983c:\n                    cVar4 = fcn.0040d12c(arg_8h, arg_ch_00, arg_10h, var_18h, var_14h, arg_24h, arg_28h);\n                    break;\n                case 0x409859:\n                    *(puVar9 + 0x66) = 0;\n                    cVar4 = '\\x01';\n                    break;\n                case 0x409a4c:\n                    goto code_r0x00409a4c;\n                }\n                if (cVar4 == '\\0') {\n                    fcn.00404018(arg_ch_00);\n                    uVar7 = 0;\n                    if ((arg_ch == 0xb) && (*arg_10h == 0)) {\n                        uVar7 = 1;\n                    }\n                }\n                else {\n                    *(puVar9 + 0x1c) = arg_ch;\n                    *(puVar9 + 0x71) = arg_3ch;\n                    *(arg_8h + 0x115c) = *(arg_8h + 0x1c);\n                    *(arg_8h + 0x1158) = var_20h;\n                    if (((arg_3ch & 1) == 0) &&\n                       ((((arg_ch_00[0x101d] != 0 || (arg_ch_00[0x101f] != 0x55)) || (arg_ch_00[0x1020] != 400)) ||\n                        (arg_ch_00[0x1021] != 0)))) {\n                        fcn.004085b5(arg_8h, arg_ch_00, arg_ch_00 + 0x101c, arg_ch_00[0x101f], arg_ch_00[0x1020], arg_8h\n                                    );\n                    }\n                    if (((arg_3ch & 4) == 0) && ((arg_1ch == -1 || (arg_20h == -1)))) {\n                        uVar7 = (*_sym.imp.USER32.dll_GetDC)(*puVar9);\n                        arg_24h = 0;\n                        arg_28h = 0;\n                        uVar8 = (*_sym.imp.USER32.dll_SendMessageW)(*puVar9, 0x31, 0, 0);\n                        pcVar2 = _sym.imp.GDI32.dll_SelectObject;\n                        uVar8 = (*_sym.imp.GDI32.dll_SelectObject)(uVar7, uVar8);\n                        fcn.0041633d(uVar7);\n                        (*pcVar2)(uVar7, uVar8);\n                        puVar9 = var_10h;\n                        (*_sym.imp.USER32.dll_ReleaseDC)(*var_10h, uVar7);\n                        iVar6 = var_20h;\n                        iVar3 = var_24h;\n                        if (arg_ch != 0x17) {\n                            if (arg_ch == 0x18) {\n                                iVar6 = var_20h + 4;\n                                iVar3 = var_24h;\n                            }\n                            else if (arg_ch == 0x19) {\n                                arg_24h = var_20h;\n                                iVar6 = arg_24h;\n                                iVar3 = var_24h + 0xc;\n                            }\n                            else {\n                                iVar6 = arg_24h;\n                                iVar3 = arg_28h;\n                                if (arg_ch == 0x1a) {\n                                    arg_24h = var_20h;\n                                    iVar6 = arg_24h;\n                                    iVar3 = var_24h + 8;\n                                }\n                            }\n                        }\n                        arg_28h = iVar3;\n                        arg_24h = iVar6;\n                        if ((arg_20h == -1) && ((var_ch[0x101a] == -1 || (*(arg_8h + 4) != 2)))) {\n                            var_ch[0x101a] = arg_24h + 8;\n                        }\n                        if ((arg_1ch == -1) && ((var_ch[0x1019] == -1 || (*(arg_8h + 4) != 2)))) {\n                            var_ch[0x1019] = arg_28h + 8;\n                        }\n                        (*_sym.imp.USER32.dll_MoveWindow)\n                                  (*puVar9, var_ch[0x1017], var_ch[0x1018], var_ch[0x1019], var_ch[0x101a], 1);\n                        arg_ch_00 = var_ch;\n                        puVar9 = var_10h;\n                    }\n                    if (var_28h == 0) {\n                        fcn.00409ae3(0);\n                        arg_ch_00 = var_ch;\n                        puVar9 = var_10h;\n                    }\n                    uVar7 = var_4h;\n                    if (*(arg_ch_00 + 0x1056) != '\\0') {\n                        if (arg_ch_00[0x1054] == -1) {\n                            uVar5 = *(arg_ch_00 + 0x1053);\n                        }\n                        else {\n                            uVar5 = *(arg_ch_00 + 0x1054);\n                        }\n                        *(puVar9 + 0x73) = uVar5;\n                    }\n                }\n            }\n            else {\ncode_r0x00409a4c:\n                fcn.00404018(arg_ch_00);\n                uVar7 = 0xffffffff;\n            }\n            goto code_r0x00409a58;\n        }\n    }\n    uVar7 = 0;\ncode_r0x00409a58:\n    fcn.0041858e();\n    return uVar7;\n}\n",
        "token_count": 3779
    },
    "00409ae3": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00409ae3(int32_t arg_8h)\n\n{\n    int16_t iVar1;\n    int16_t iVar2;\n    int16_t iVar3;\n    int16_t iVar4;\n    uint *in_EAX;\n    int16_t iVar5;\n    uint *unaff_ESI;\n    int32_t var_34h;\n    int32_t var_30h;\n    int32_t var_2ch;\n    int32_t var_28h;\n    uint lpRect;\n    uint var_20h;\n    int32_t lpPoint;\n    int32_t var_18h;\n    uint32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    if (*(in_EAX + 0x3a) == '\\0') {\n        var_14h = var_14h & 0xffff0000 | *(unaff_ESI + 0x66);\n        (*_sym.imp.USER32.dll_GetClientRect)(*in_EAX, &var_34h);\n        var_8h = *(in_EAX + 0x11);\n        var_ch = *(in_EAX + 0x46);\n        arg_8h = var_2ch;\n        var_4h = var_28h;\n        if ((var_2ch == 0) && (arg_8h = 1,  var_8h != 0)) {\n            arg_8h = var_8h;\n        }\n        if ((var_28h == 0) && (var_4h = 1,  var_ch != 0)) {\n            var_4h = var_ch;\n        }\n        (*_sym.imp.USER32.dll_GetWindowRect)(*unaff_ESI, &var_34h);\n        var_10h = var_28h - var_30h;\n        var_2ch = var_2ch - var_34h;\n        lpPoint = var_34h;\n        var_18h = var_30h;\n        (*_sym.imp.USER32.dll_ScreenToClient)(*in_EAX, &lpPoint);\n        *(unaff_ESI + 0x1a) = (lpPoint * var_8h) / arg_8h;\n        *(unaff_ESI + 0x6a) = (var_18h * var_ch) / var_4h;\n        *(unaff_ESI + 0x1b) = (var_2ch * var_8h) / arg_8h;\n        *(unaff_ESI + 0x6e) = (var_10h * var_ch) / var_4h;\n        if (var_14h != 0) {\n            iVar1 = lpPoint;\n            iVar5 = var_2ch;\n            iVar2 = var_8h;\n            if (((var_14h & 0x100) != 0) && (*(unaff_ESI + 0x1b) = iVar5,  (var_14h & 6) == 0)) {\n                if ((var_14h & 8) == 0) {\n                    if (arg_8h / 2 < lpPoint) {\n                        *(unaff_ESI + 0x1a) = ((((lpPoint - arg_8h) + var_2ch) * var_8h) / arg_8h - iVar5) + iVar2;\n                    }\n                }\n                else {\n                    *(unaff_ESI + 0x1a) = iVar1 - (var_8h - arg_8h) / 2;\n                }\n            }\n            iVar3 = var_18h;\n            iVar4 = var_ch;\n            if (((var_14h & 0x200) != 0) && (*(unaff_ESI + 0x6e) = var_10h,  (var_14h & 0x60) == 0)) {\n                if ((var_14h & 0x80) == 0) {\n                    if (var_4h / 2 < var_18h) {\n                        *(unaff_ESI + 0x6a) = ((((var_18h - var_4h) + var_10h) * var_ch) / var_4h - var_10h) + iVar4;\n                    }\n                }\n                else {\n                    *(unaff_ESI + 0x6a) = iVar3 - (var_ch - var_4h) / 2;\n                }\n            }\n            if ((var_14h & 2) != 0) {\n                *(unaff_ESI + 0x1a) = iVar1;\n            }\n            if ((var_14h & 4) != 0) {\n                if ((var_14h & 2) == 0) {\n                    *(unaff_ESI + 0x1a) = ((iVar1 - arg_8h) - *(unaff_ESI + 0x1b)) + iVar2 + iVar5;\n                }\n                else {\n                    *(unaff_ESI + 0x1b) = ((iVar1 - *(unaff_ESI + 0x1a)) - arg_8h) + iVar2 + iVar5;\n                }\n            }\n            if ((var_14h & 0x20) != 0) {\n                *(unaff_ESI + 0x6a) = iVar3;\n            }\n            if ((var_14h & 0x40) != 0) {\n                if ((var_14h & 0x20) == 0) {\n                    *(unaff_ESI + 0x6a) = ((iVar3 - *(unaff_ESI + 0x6e)) - var_4h) + iVar4 + var_10h;\n                }\n                else {\n                    *(unaff_ESI + 0x6e) = ((iVar3 - *(unaff_ESI + 0x6a)) - var_4h) + iVar4 + var_10h;\n                }\n            }\n        }\n    }\n    else {\n        *(unaff_ESI + 0x1a) = *(in_EAX + 0x1017);\n        *(unaff_ESI + 0x6a) = *(in_EAX + 0x1018);\n        if ((*(unaff_ESI + 0x1c) != '\\a') || (arg_8h != '\\0')) {\n            *(unaff_ESI + 0x1b) = *(in_EAX + 0x1019);\n            *(unaff_ESI + 0x6e) = *(in_EAX + 0x101a);\n        }\n        (*_sym.imp.USER32.dll_GetClientRect)(*unaff_ESI, &lpRect);\n        if (in_EAX[0x1017] == -1) {\n            *(unaff_ESI + 0x1a) = lpRect;\n        }\n        if (in_EAX[0x1018] == -1) {\n            *(unaff_ESI + 0x6a) = var_20h;\n        }\n        (*_sym.imp.USER32.dll_GetWindowRect)(*unaff_ESI, &lpRect);\n        if (in_EAX[0x1019] == -1) {\n            *(unaff_ESI + 0x1b) = lpPoint - lpRect;\n        }\n        if ((in_EAX[0x101a] == -1) || (*(unaff_ESI + 0x1c) == '\\0')) {\n            *(unaff_ESI + 0x6e) = var_18h - var_20h;\n        }\n    }\n    return;\n}\n",
        "token_count": 1701
    },
    "00409e03": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00409e03(uint param_1, int32_t param_2)\n\n{\n    uint uVar1;\n    int32_t unaff_ESI;\n    int32_t unaff_EDI;\n    \n    if (param_2 != 0) {\n        uVar1 = fcn.00403eaf(param_2);\n        *(unaff_EDI + 0x1c) = uVar1;\n    }\n    if (((*(unaff_EDI + 0x1c) == -1) || (0 < unaff_ESI)) || (unaff_ESI < -0xd)) {\n        uVar1 = 0;\n    }\n    else {\n        fcn.00416e83(*(unaff_EDI + 0x54 + *(unaff_EDI + 0x1c) * 4) + 0x4124 + unaff_ESI * 0xc, param_1);\n        uVar1 = 1;\n    }\n    return uVar1;\n}\n",
        "token_count": 219
    },
    "00409e8b": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00409e8b(uint arg_8h)\n\n{\n    uint8_t uVar1;\n    uint *hWnd_00;\n    char cVar2;\n    int32_t in_EAX;\n    uint32_t uVar3;\n    uint uVar4;\n    int32_t var_8h;\n    int32_t hWnd;\n    \n    cVar2 = fcn.00404081(&var_8h);\n    if (cVar2 == '\\0') {\n        return 0;\n    }\n    hWnd_00 = *(*(in_EAX + 0x54 + hWnd * 4) + 0x50 + var_8h * 4);\n    hWnd = *hWnd_00;\n    if (*(in_EAX + 1) == '\\0') {\n        fcn.0041683d();\n    }\n    uVar1 = *(hWnd_00 + 0x1c);\n    if (uVar1 < 0x14) {\n        if (uVar1 == 0x13) {\n            uVar4 = 0x1024;\n        }\n        else {\n            if (uVar1 == 0) {\n                return 0;\n            }\n            if (uVar1 < 5) goto code_r0x00409f6e;\n            if (uVar1 == 8) {\n                uVar4 = 0x409;\n            }\n            else {\n                if (uVar1 != 0x10) {\n                    if (uVar1 != 0x11) {\n                        return 0;\n                    }\n                    goto code_r0x00409ef4;\n                }\n                uVar4 = 0x111e;\n            }\n        }\n        (*_sym.imp.USER32.dll_SendMessageW)(hWnd, uVar4, 0, arg_8h);\n    }\n    else {\n        if (uVar1 == 0x14) {\ncode_r0x00409ef4:\n            hWnd_00[0xf] = arg_8h;\n            (*_sym.imp.USER32.dll_InvalidateRect)(hWnd_00[9], 0, 1);\n            return 1;\n        }\n        if (uVar1 != 0x17) {\n            if (uVar1 == 0x18) {\n                uVar3 = (*_sym.imp.USER32.dll_GetWindowLongW)(hWnd, 0xfffffff0);\n                (*_sym.imp.USER32.dll_SetWindowLongW)(hWnd, 0xfffffff0, uVar3 | 0xb);\n            }\n            else {\n                if (uVar1 < 0x19) {\n                    return 0;\n                }\n                if (0x1b < uVar1) {\n                    return 0;\n                }\n            }\n        }\ncode_r0x00409f6e:\n        hWnd_00[0xf] = arg_8h;\n        fcn.004040f0(hWnd_00, 1);\n    }\n    return 1;\n}\n",
        "token_count": 647
    },
    "00409fd1": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00409fd1(int32_t arg_8h)\n\n{\n    uint8_t uVar1;\n    uint *hWnd;\n    code *pcVar2;\n    char cVar3;\n    uint32_t uVar4;\n    uint uVar5;\n    int32_t unaff_EBX;\n    uint uVar6;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    cVar3 = fcn.00404081(&var_8h);\n    if (cVar3 == '\\0') {\ncode_r0x0040a0fe:\n        uVar5 = 0;\n    }\n    else {\n        var_4h = *(unaff_EBX + 0x54 + var_4h * 4);\n        hWnd = *(var_4h + 0x50 + var_8h * 4);\n        uVar5 = *hWnd;\n        if (*(unaff_EBX + 1) == '\\0') {\n            fcn.0041683d();\n        }\n        pcVar2 = _sym.imp.USER32.dll_SendMessageW;\n        uVar1 = *(hWnd + 0x1c);\n        if (uVar1 < 0x14) {\n            if (uVar1 == 0x13) {\n                if (arg_8h == -0x2000000) {\n                    hWnd[0xe] = 0xfe000000;\n                }\n                else {\n                    (*_sym.imp.USER32.dll_SendMessageW)(uVar5, 0x1001, 0, arg_8h);\n                    (*pcVar2)(uVar5, 0x1026, 0, arg_8h);\n                }\n            }\n            else {\n                if (uVar1 == 0) goto code_r0x0040a0fe;\n                if (uVar1 < 5) goto code_r0x0040a118;\n                if (uVar1 == 8) {\n                    uVar6 = 0x2001;\n                }\n                else {\n                    if (uVar1 != 0x10) {\n                        if (uVar1 == 0x11) goto code_r0x0040a12b;\n                        if ((uVar1 == 0x12) && (-2 < arg_8h)) {\n                            hWnd[0xe] = arg_8h;\n                            pcVar2 = _sym.imp.USER32.dll_ShowWindow;\n                            if ((*(hWnd + 0x72) & 0x20) == 0) {\n                                (*_sym.imp.USER32.dll_ShowWindow)(uVar5, 0);\n                                (*pcVar2)(*hWnd, 5);\n                                fcn.0040d845();\n                                (*_sym.imp.USER32.dll_SetFocus)(*hWnd);\n                                fcn.0040d868();\n                            }\n                            goto code_r0x0040a13e;\n                        }\n                        goto code_r0x0040a0fe;\n                    }\n                    uVar6 = 0x111d;\n                }\n                (*_sym.imp.USER32.dll_SendMessageW)(uVar5, uVar6, 0, arg_8h);\n            }\n        }\n        else if (uVar1 == 0x14) {\ncode_r0x0040a12b:\n            hWnd[0xe] = arg_8h;\n            (*_sym.imp.USER32.dll_InvalidateRect)(hWnd[9], 0, 1);\n        }\n        else {\n            if (uVar1 != 0x17) {\n                if (uVar1 == 0x18) {\n                    uVar4 = (*_sym.imp.USER32.dll_GetWindowLongW)(uVar5, 0xfffffff0);\n                    (*_sym.imp.USER32.dll_SetWindowLongW)(uVar5, 0xfffffff0, uVar4 | 0xb);\n                }\n                else if ((uVar1 < 0x19) || (0x1b < uVar1)) goto code_r0x0040a0fe;\n            }\ncode_r0x0040a118:\n            hWnd[0xe] = arg_8h;\n            fcn.004040f0(hWnd, 1);\n        }\ncode_r0x0040a13e:\n        uVar5 = 1;\n    }\n    return uVar5;\n}\n",
        "token_count": 942
    },
    "0040a6a9": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint __cdecl\nfcn.0040a6a9(uint wParam, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, int32_t arg_20h)\n\n{\n    uint32_t in_EAX;\n    uint32_t arg_14h_00;\n    int32_t iVar1;\n    uint uVar2;\n    uint *in_ECX;\n    int32_t unaff_EBX;\n    int32_t *unaff_EDI;\n    bool bVar3;\n    uint var_1h;\n    \n    if (in_EAX == 0xffffffff) {\n        in_EAX = 0;\n    }\n    arg_14h_00 = fcn.00408c5e(in_EAX | 0x10000);\n    bVar3 = (arg_14h_00 & 1) != 0;\n    if (bVar3) {\n        arg_14h_00 = arg_14h_00 ^ 1;\n    }\n    if (arg_20h == -1) {\n        arg_20h = 0x100;\n    }\n    iVar1 = fcn.00409d87(arg_20h, 0x45c3a0, arg_ch, arg_14h_00, arg_10h, arg_14h, arg_18h, arg_1ch, wParam, 0, 1);\n    *unaff_EDI = iVar1;\n    if (iVar1 == 0) {\n        uVar2 = 0;\n    }\n    else {\n        if (bVar3) {\n            (*_sym.imp.USER32.dll_SendMessageW)(*in_ECX, 0x401, wParam, 0);\n        }\n        if (*(unaff_EBX + 8) == 0) {\n            *(unaff_EDI + 0x66) = 0x300;\n        }\n        uVar2 = 1;\n    }\n    return uVar2;\n}\n",
        "token_count": 447
    },
    "0040a73b": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.0040a73b(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, int32_t arg_20h)\n\n{\n    uint32_t in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    int32_t unaff_EBX;\n    int32_t *unaff_EDI;\n    \n    if (in_EAX == 0xffffffff) {\n        in_EAX = 0;\n    }\n    uVar1 = fcn.00408c5e(in_EAX | 0x100);\n    if (arg_20h == -1) {\n        arg_20h = 0;\n    }\n    iVar2 = fcn.00409d87(arg_20h, 0x45c390, arg_ch, uVar1, arg_10h, arg_14h, arg_18h, arg_1ch, arg_8h, 0, 1);\n    *unaff_EDI = iVar2;\n    if (iVar2 == 0) {\n        uVar1 = 0;\n    }\n    else {\n        iVar2 = (*_sym.imp.USER32.dll_GetSysColor)(0x12);\n        unaff_EDI[0xf] = iVar2;\n        if (*(unaff_EBX + 8) == 0) {\n            *(unaff_EDI + 0x66) = 1;\n        }\n        uVar1 = 1;\n    }\n    return uVar1;\n}\n",
        "token_count": 340
    },
    "0040a7a9": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.0040a7a9(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, int32_t arg_1ch, int32_t arg_20h, \n            int32_t arg_24h)\n\n{\n    uint32_t in_EAX;\n    uint32_t uVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t unaff_EBX;\n    int32_t *unaff_EDI;\n    \n    if (in_EAX == 0xffffffff) {\n        in_EAX = 0x3010c0;\n    }\n    if ((in_EAX & 0x800) == 0) {\n        uVar1 = in_EAX | 0x10004;\n    }\n    else {\n        uVar1 = in_EAX | 4;\n    }\n    uVar2 = fcn.00408c5e(uVar1);\n    if (arg_24h == -1) {\n        arg_24h = 0x200;\n    }\n    if (arg_1ch == -1) {\n        arg_1ch = 200;\n    }\n    if (arg_20h == -1) {\n        arg_20h = 0x96;\n    }\n    iVar3 = fcn.00409d87(arg_24h, 0x45be98, arg_10h, uVar2, arg_14h, arg_18h, arg_1ch, arg_20h, arg_ch, 0, 1);\n    *unaff_EDI = iVar3;\n    if (iVar3 == 0) {\n        uVar2 = 0;\n    }\n    else {\n        uVar2 = (*_sym.imp.USER32.dll_GetWindowTextLengthW)(iVar3);\n        (*_sym.imp.USER32.dll_SendMessageW)(*unaff_EDI, 0xb1, uVar2, uVar2);\n        if (*(unaff_EBX + 8) == 0) {\n            *(unaff_EDI + 0x66) = 1;\n        }\n        uVar2 = 1;\n    }\n    return uVar2;\n}\n",
        "token_count": 480
    },
    "0040a850": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.0040a850(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, int32_t arg_1ch, int32_t arg_20h, \n            int32_t arg_24h)\n\n{\n    uint32_t in_EAX;\n    uint32_t uVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t unaff_EBX;\n    int32_t *unaff_EDI;\n    \n    if (in_EAX == 0xffffffff) {\n        in_EAX = 0x80;\n    }\n    if ((in_EAX & 0x800) == 0) {\n        uVar1 = in_EAX | 0x10000;\n    }\n    else {\n        uVar1 = in_EAX & 0xfffffffb;\n    }\n    uVar2 = fcn.00408c5e(uVar1);\n    if (arg_24h == -1) {\n        arg_24h = 0x200;\n    }\n    if (arg_1ch == -1) {\n        arg_1ch = 200;\n    }\n    if (arg_20h == -1) {\n        arg_20h = 0x14;\n    }\n    iVar3 = fcn.00409d87(arg_24h, 0x45be98, arg_10h, uVar2, arg_14h, arg_18h, arg_1ch, arg_20h, arg_ch, 0, 1);\n    *unaff_EDI = iVar3;\n    if (iVar3 == 0) {\n        uVar2 = 0;\n    }\n    else {\n        if (*(unaff_EBX + 8) == 0) {\n            *(unaff_EDI + 0x66) = 0x200;\n        }\n        uVar2 = 1;\n    }\n    return uVar2;\n}\n",
        "token_count": 429
    },
    "0040a8e1": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.0040a8e1(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, int32_t arg_1ch, int32_t arg_20h, \n            int32_t arg_24h)\n\n{\n    uint32_t in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    int32_t unaff_EBX;\n    int32_t *unaff_EDI;\n    \n    if (in_EAX == 0xffffffff) {\n        in_EAX = 0;\n    }\n    uVar1 = fcn.00408c5e(in_EAX | 0x20007);\n    if (arg_24h == -1) {\n        arg_24h = 0;\n    }\n    if (arg_1ch == -1) {\n        arg_1ch = 200;\n    }\n    if (arg_20h == -1) {\n        arg_20h = 0x96;\n    }\n    iVar2 = fcn.00409d87(arg_24h, 0x45c3a0, arg_10h, uVar1, arg_14h, arg_18h, arg_1ch, arg_20h, arg_ch, 0, 1);\n    *unaff_EDI = iVar2;\n    if (iVar2 == 0) {\n        uVar1 = 0;\n    }\n    else {\n        iVar2 = (*_sym.imp.USER32.dll_GetSysColor)(0x12);\n        unaff_EDI[0xf] = iVar2;\n        if (*(unaff_EBX + 8) == 0) {\n            *(unaff_EDI + 0x66) = 1;\n        }\n        uVar1 = 1;\n    }\n    return uVar1;\n}\n",
        "token_count": 404
    },
    "0040a96d": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.0040a96d(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, int32_t arg_20h)\n\n{\n    uint32_t in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    int32_t unaff_EBX;\n    int32_t *unaff_EDI;\n    \n    if (in_EAX == 0xffffffff) {\n        in_EAX = 3;\n    }\n    if ((in_EAX & 7) == 0) {\n        in_EAX = in_EAX | 3;\n    }\n    uVar1 = fcn.00408c5e(in_EAX | 0x10000);\n    if (arg_20h == -1) {\n        arg_20h = 0;\n    }\n    iVar2 = fcn.00409d87(arg_20h, 0x45c3a0, arg_ch, uVar1, arg_10h, arg_14h, arg_18h, arg_1ch, arg_8h, 0, 1);\n    *unaff_EDI = iVar2;\n    if (iVar2 == 0) {\n        uVar1 = 0;\n    }\n    else {\n        iVar2 = (*_sym.imp.USER32.dll_GetSysColor)(0x12);\n        unaff_EDI[0xf] = iVar2;\n        if (*(unaff_EBX + 8) == 0) {\n            *(unaff_EDI + 0x66) = 0x200;\n        }\n        uVar1 = 1;\n    }\n    return uVar1;\n}\n",
        "token_count": 374
    },
    "0040a9e3": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.0040a9e3(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, int32_t arg_20h)\n\n{\n    uint32_t in_EAX;\n    uint32_t arg_14h_00;\n    int32_t iVar1;\n    uint uVar2;\n    int32_t in_ECX;\n    int32_t unaff_EBX;\n    int32_t *unaff_EDI;\n    \n    if (in_EAX == 0xffffffff) {\n        in_EAX = 0;\n    }\n    arg_14h_00 = fcn.00408c5e(in_EAX | 9);\n    if (*(in_ECX + 0x406d) == '\\0') {\n        arg_14h_00 = arg_14h_00 | 0x10000;\n        *(in_ECX + 0x406d) = '\\x01';\n    }\n    if (arg_20h == -1) {\n        arg_20h = 0;\n    }\n    iVar1 = fcn.00409d87(arg_20h, 0x45c3a0, arg_ch, arg_14h_00, arg_10h, arg_14h, arg_18h, arg_1ch, arg_8h, 0, 1);\n    *unaff_EDI = iVar1;\n    if (iVar1 == 0) {\n        uVar2 = 0;\n    }\n    else {\n        iVar1 = (*_sym.imp.USER32.dll_GetSysColor)(0x12);\n        unaff_EDI[0xf] = iVar1;\n        if (*(unaff_EBX + 8) == 0) {\n            *(unaff_EDI + 0x66) = 0x200;\n        }\n        uVar2 = 1;\n    }\n    return uVar2;\n}\n",
        "token_count": 426
    },
    "0040abd9": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.0040abd9(int32_t arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, int32_t arg_20h, \n            int32_t arg_24h, int32_t arg_28h)\n\n{\n    uint32_t in_EAX;\n    uint32_t arg_14h_00;\n    int32_t iVar1;\n    uint uVar2;\n    int32_t *unaff_EBX;\n    uint var_10h;\n    \n    if (in_EAX == 0xffffffff) {\n        in_EAX = 4;\n    }\n    arg_14h_00 = fcn.00408c5e(in_EAX | 0x10000);\n    if (arg_28h == -1) {\n        arg_28h = 0x200;\n    }\n    if (arg_20h == -1) {\n        arg_20h = 200;\n    }\n    if (arg_24h == -1) {\n        arg_24h = 0x14;\n    }\n    iVar1 = fcn.00409d87(arg_28h, 0x45c348, 0, arg_14h_00, arg_18h, arg_1ch, arg_20h, arg_24h, arg_10h, 0, 1);\n    *unaff_EBX = iVar1;\n    if (iVar1 == 0) {\n        uVar2 = 0;\n    }\n    else {\n        fcn.00416868(arg_14h_00 & 0xffffff00 | (arg_14h_00 & 8) != 8, 1);\n        (*_sym.imp.USER32.dll_SendMessageW)(*unaff_EBX, 0x1002, 0, &var_10h);\n        if (*(arg_8h + 8) == 0) {\n            *(unaff_EBX + 0x66) = 0x200;\n        }\n        uVar2 = 1;\n    }\n    return uVar2;\n}\n",
        "token_count": 464
    },
    "0040ac94": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.0040ac94(int32_t arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, int32_t arg_20h, \n            int32_t arg_24h)\n\n{\n    code *pcVar1;\n    uint32_t in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t in_ECX;\n    int32_t *unaff_EBX;\n    uint var_20h;\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    if (in_EAX == 0xffffffff) {\n        in_EAX = 0;\n    }\n    uVar2 = fcn.00408c5e(in_EAX | 0x10000);\n    if (arg_24h == -1) {\n        arg_24h = 0x200;\n    }\n    if (in_ECX == -1) {\n        in_ECX = 0;\n    }\n    if (arg_20h == -1) {\n        arg_20h = 0;\n    }\n    iVar3 = fcn.00409d87(arg_24h, 0x45c32c, 0, uVar2, arg_18h, arg_1ch, in_ECX, arg_20h, arg_10h, 0, 1);\n    *unaff_EBX = iVar3;\n    pcVar1 = _sym.imp.USER32.dll_SendMessageW;\n    if (iVar3 == 0) {\n        uVar2 = 0;\n    }\n    else {\n        if ((in_ECX == 0) || (arg_20h == 0)) {\n            (*_sym.imp.USER32.dll_SendMessageW)(iVar3, 0x1009, 0, &var_10h);\n            (*_sym.imp.USER32.dll_SetWindowPos)(*unaff_EBX, 0, arg_18h, arg_1ch, var_8h, var_4h, 4);\n        }\n        fcn.00416868(1, 1);\n        (*pcVar1)(*unaff_EBX, 0x1002, 0, &var_20h);\n        if (*(arg_8h + 8) == 0) {\n            *(unaff_EBX + 0x66) = 0x300;\n        }\n        uVar2 = 1;\n    }\n    return uVar2;\n}\n",
        "token_count": 552
    },
    "0040b756": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040b756(int32_t wParam)\n\n{\n    uint *puVar1;\n    code *pcVar2;\n    int32_t unaff_ESI;\n    int32_t *piVar3;\n    int32_t var_4h;\n    \n    pcVar2 = _sym.imp.USER32.dll_ShowWindow;\n    if (*(unaff_ESI + 0x4150) != wParam) {\n        var_4h = 3;\n        if (2 < *(unaff_ESI + 0x14)) {\n            piVar3 = unaff_ESI + 0x5c;\n            do {\n                puVar1 = *piVar3;\n                if (((puVar1 != NULL) && (*(puVar1 + 0x1c) != '\\v')) &&\n                   ((*(puVar1 + 0x73) == *(unaff_ESI + 0x4150) ||\n                    (((*(unaff_ESI + 0x4158) != '\\0' && (*(puVar1 + 0x73) != 0xff)) && (*(puVar1 + 0x1c) != '\\n')))))) {\n                    (*pcVar2)(*puVar1, 0);\n                    puVar1 = *piVar3;\n                    if (((*(puVar1 + 0x72) & 0x40) != 0) && (*(puVar1 + 0x1c) == '\\x1a')) {\n                        (*_sym.imp.USER32.dll_EnableWindow)(*puVar1, 0);\n                    }\n                }\n                var_4h = var_4h + 1;\n                piVar3 = piVar3 + 1;\n            } while (var_4h <= *(unaff_ESI + 0x14));\n        }\n        *(unaff_ESI + 0x4150) = wParam;\n    }\n    var_4h = 3;\n    if (2 < *(unaff_ESI + 0x14)) {\n        piVar3 = unaff_ESI + 0x5c;\n        do {\n            puVar1 = *piVar3;\n            if (((puVar1 != NULL) && (*(puVar1 + 0x1c) != '\\v')) &&\n               ((*(puVar1 + 0x73) == *(unaff_ESI + 0x4150) && ((*(puVar1 + 0x72) & 0x20) == 0)))) {\n                (*pcVar2)(*puVar1, 0);\n                (*pcVar2)(**piVar3, 4);\n                puVar1 = *piVar3;\n                if (((*(puVar1 + 0x72) & 0x40) != 0) && (*(puVar1 + 0x1c) == '\\x1a')) {\n                    (*_sym.imp.USER32.dll_EnableWindow)(*puVar1, 1);\n                }\n            }\n            var_4h = var_4h + 1;\n            piVar3 = piVar3 + 1;\n        } while (var_4h <= *(unaff_ESI + 0x14));\n    }\n    (*_sym.imp.USER32.dll_SendMessageW)(*(unaff_ESI + 0x4148), 0x130c, wParam, 0);\n    return;\n}\n",
        "token_count": 720
    },
    "0040ba5d": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint __cdecl\nfcn.0040ba5d(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, int32_t arg_18h, int32_t arg_1ch, int32_t arg_20h)\n\n{\n    uint32_t in_EAX;\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t *in_ECX;\n    int32_t unaff_EBX;\n    bool bVar4;\n    uint var_1h;\n    \n    if (in_EAX == 0xffffffff) {\n        in_EAX = 0x37;\n    }\n    uVar1 = fcn.00408c5e(in_EAX | 0x10000);\n    bVar4 = (uVar1 & 0x100) != 0;\n    if (bVar4) {\n        uVar1 = uVar1 ^ 0x100;\n    }\n    if (arg_20h == -1) {\n        arg_20h = 0;\n    }\n    if (arg_18h == -1) {\n        arg_18h = 0x96;\n    }\n    if (arg_1ch == -1) {\n        arg_1ch = 0x96;\n    }\n    iVar2 = fcn.00409d87(arg_20h, 0x45c248, 0x45bfe0, uVar1, arg_10h, arg_14h, arg_18h, arg_1ch, arg_ch, 0, 0);\n    *in_ECX = iVar2;\n    if (iVar2 == 0) {\n        uVar3 = 0;\n    }\n    else {\n        if (*(unaff_EBX + 0x4148) != 0) {\n            (*_sym.imp.USER32.dll_SetWindowPos)(iVar2, 0, 0, 0, 0, 0, 0x13);\n        }\n        *(unaff_EBX + 0x416c) = *in_ECX;\n        if (bVar4) {\n            *(in_ECX + 0x1c) = 0x10;\n            uVar1 = (*_sym.imp.USER32.dll_GetWindowLongW)(*in_ECX, 0xfffffff0);\n            (*_sym.imp.USER32.dll_SetWindowLongW)(*in_ECX, 0xfffffff0, uVar1 | 0x100);\n        }\n        arg_20h = *(unaff_EBX + 0x18);\n        fcn.00404081(&arg_18h);\n        fcn.00406068();\n        if (arg_20h != -1) {\n            fcn.00406068();\n        }\n        *(unaff_EBX + 0x4174) = 0xffffffff;\n        *(unaff_EBX + 0x4178) = 0xffffffff;\n        uVar3 = 1;\n    }\n    return uVar3;\n}\n",
        "token_count": 670
    },
    "0040bdf0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_8h\n\nuint __cdecl fcn.0040bdf0(uint arg_8h, int32_t arg_ch)\n\n{\n    code *pcVar1;\n    char cVar2;\n    int32_t iVar3;\n    int32_t extraout_EDX;\n    int32_t unaff_EBX;\n    int32_t unaff_EDI;\n    uint32_t uVar4;\n    int16_t iStackY8264;\n    uint uStackY108;\n    int32_t iStackY104;\n    uint uStackY100;\n    int32_t iStackY96;\n    uint uStackY92;\n    int32_t iStackY88;\n    uint uStackY84;\n    uchar *var_44h;\n    uint32_t var_40h;\n    int32_t var_3ch;\n    uint uStack60;\n    uint uStack56;\n    uint *var_30h;\n    uchar *puStack48;\n    int32_t iStack44;\n    int32_t var_24h;\n    uint *puStack36;\n    int32_t **var_1ch;\n    int32_t var_18h;\n    int32_t hWnd;\n    uint32_t var_10h;\n    uint *var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_4h = 0x40bdfd;\n    fcn.0044c510();\n    var_ch = &fcn.0040bdf0::var_8h;\n    var_10h = 0x40be0d;\n    var_8h = unaff_EDI;\n    cVar2 = fcn.00404081();\n    if (cVar2 != '\\0') {\n        var_1ch = *(extraout_EDX + 0x54 + var_ch * 4) + 0x50 + var_8h * 4;\n        iVar3 = **var_1ch;\n        *(unaff_EBX + 0x24) = iVar3;\n        *(unaff_EBX + 0x74) = *(*var_1ch + 0x1d);\n        *(unaff_EBX + 0x73) = *(*var_1ch + 0x73);\n        var_10h = 0xfffffff0;\n        var_18h = 0x40be54;\n        hWnd = iVar3;\n        var_4h = iVar3;\n        var_10h = (*_sym.imp.USER32.dll_GetWindowLongW)();\n        var_18h = 0x28;\n        puStack36 = &fcn.0040bdf0::var_44h;\n        var_1ch = NULL;\n        var_24h = 0x40be64;\n        fcn.00449b00();\n        pcVar1 = _sym.imp.USER32.dll_SendMessageW;\n        var_18h = 0;\n        var_1ch = NULL;\n        puStack36 = 0x1004;\n        iStack44 = 0x40be79;\n        var_24h = iVar3;\n        var_40h = (*_sym.imp.USER32.dll_SendMessageW)();\n        var_3ch = 0;\n        *(unaff_EBX + 0x68) = var_40h;\n        var_8h = arg_ch;\n        puStack48 = &stack0xffffdfb8;\n        var_24h = arg_8h;\n        arg_ch = 1;\n        var_44h = 0x5;\n        var_30h = 0x40beb9;\n        iStack44 = extraout_EDX + 0x14;\n        fcn.00408bd2();\n        var_30h = &fcn.0040bdf0::var_44h;\n        uStack56 = 0;\n        uStack60 = 0x104d;\n        var_3ch = var_4h;\n        var_40h = 0x40bec9;\n        var_ch = (*pcVar1)();\n        if (var_ch != 0xffffffff) {\n            while( true ) {\n                var_44h = &stack0xffffdfb8;\n                var_40h = extraout_EDX + 0x14;\n                cVar2 = fcn.00408bd2();\n                if (cVar2 == '\\0') {\n                    if (*(unaff_EBX + 0x73) != -1) {\n                        uStackY84 = 0x40bf8b;\n                        fcn.004040f0(*var_1ch, 1);\n                    }\n                    return 1;\n                }\n                var_3ch = arg_ch;\n                if (var_18h < arg_ch) break;\n                if (iStackY8264 != 0) {\n                    uStackY84 = 0x1074;\n                    iStackY88 = var_4h;\n                    uStackY92 = 0x40bf04;\n                    iVar3 = (*pcVar1)();\n                    if (iVar3 == 0) {\n                        return 0;\n                    }\n                }\n                if ((var_10h & 1) != 0) {\n                    uStackY84 = 0x1057;\n                    iStackY88 = var_4h;\n                    uStackY92 = 0x40bf25;\n                    iVar3 = (*pcVar1)();\n                    uVar4 = iVar3 + 0xc;\n                    if (0x96 < uVar4) {\n                        uVar4 = 0x96;\n                    }\n                    uStackY92 = 0;\n                    iStackY96 = arg_ch;\n                    uStackY100 = 0x101d;\n                    iStackY104 = var_4h;\n                    uStackY108 = 0x40bf44;\n                    iVar3 = (*pcVar1)();\n                    if (iVar3 <= uVar4) {\n                        var_40h = uVar4 & 0xffff;\n                        var_44h = arg_ch;\n                        uStackY84 = 0x40bf59;\n                        (*pcVar1)();\n                    }\n                }\n                arg_ch = arg_ch + 1;\n            }\n            uStackY84 = 0x1008;\n            iStackY88 = var_4h;\n            uStackY92 = 0x40bfa4;\n            (*pcVar1)();\n        }\n    }\n    return 0;\n}\n",
        "token_count": 1409
    },
    "0040bfa8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040bfa8(int32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    char cVar3;\n    int32_t in_EAX;\n    int32_t iVar4;\n    uint uVar5;\n    int32_t in_ECX;\n    int32_t unaff_EBX;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    if (in_ECX == -1) {\n        piVar1 = in_EAX + 0x4160;\n        if (*piVar1 == 0) {\n            iVar4 = (*_sym.imp.USER32.dll_CreatePopupMenu)();\n            *piVar1 = iVar4;\n            *(in_EAX + 0x4164) = iVar4;\n            *(unaff_EBX + 4) = iVar4;\n            if (*piVar1 == 0) goto code_r0x0040bfd7;\n        }\ncode_r0x0040c03e:\n        *(unaff_EBX + 0x72) = 0;\n        uVar5 = 1;\n    }\n    else {\n        var_8h = in_ECX;\n        var_4h = in_ECX;\n        cVar3 = fcn.00404081(&var_8h);\n        if (cVar3 != '\\0') {\n            iVar4 = *(arg_8h + 0x54 + var_4h * 4);\n            piVar1 = iVar4 + 0x50 + var_8h * 4;\n            iVar2 = *piVar1;\n            cVar3 = *(iVar2 + 0x70);\n            if ((((cVar3 != '\\x0e') && (cVar3 != '\\x0f')) && (cVar3 != '\\x02')) &&\n               ((cVar3 != '\\x03' && (*(iVar2 + 4) == 0)))) {\n                uVar5 = (*_sym.imp.USER32.dll_CreatePopupMenu)();\n                *(unaff_EBX + 4) = uVar5;\n                *(iVar4 + 0x4164) = uVar5;\n                *(*piVar1 + 4) = *(unaff_EBX + 4);\n                if (*(unaff_EBX + 4) != 0) goto code_r0x0040c03e;\n            }\n        }\ncode_r0x0040bfd7:\n        uVar5 = 0;\n    }\n    return uVar5;\n}\n",
        "token_count": 544
    },
    "0040c046": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_2h\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.0040c046(int32_t arg_8h, uint *arg_ch, int32_t arg_10h)\n\n{\n    int32_t *piVar1;\n    uint *arg_ch_00;\n    uint *puVar2;\n    uint arg_14h;\n    uint *arg_8h_00;\n    int32_t *piVar3;\n    uint32_t uVar4;\n    uint *puVar5;\n    uint in_stack_ffffffd0;\n    uint arg_18h;\n    int32_t *var_ch;\n    int32_t var_8h;\n    uint var_2h;\n    \n    uVar4 = fcn.00404081(&var_ch);\n    if (uVar4 == '\\0') {\n        return uVar4;\n    }\n    arg_ch_00 = *(arg_8h + 0x54 + var_8h * 4);\n    piVar1 = arg_ch_00 + var_ch + 0x14;\n    puVar2 = *piVar1;\n    var_2h._0_1_ = *(puVar2 + 0x1c);\n    piVar3 = piVar1;\n    if ((((arg_10h == 6) || (arg_10h == 4)) || (arg_10h == 3)) || (uVar4 = var_ch,  arg_10h == 0x100)) {\n        arg_ch_00[6] = var_ch;\n        uVar4 = arg_ch_00[0x1063];\n        if (uVar4 != 0) {\n            var_ch = piVar1;\n            uVar4 = fcn.0040e502();\n            piVar3 = var_ch;\n        }\n    }\n    var_ch = piVar3;\n    if ((*(arg_ch_00 + 0xe) == '\\0') ||\n       ((*(*piVar1 + 0x73) != 0xff && (uVar4 = *(*piVar1 + 0x73),  uVar4 != arg_ch_00[0x1054])))) {\n        return uVar4 & 0xffffff00;\n    }\n    fcn.00405ef5(arg_8h, 0);\n    puVar5 = var_2h;\n    var_8h = arg_ch_00[0x104e];\n    arg_14h = arg_ch_00[0x104d];\n    var_2h._1_1_ = 0;\n    if (0x1c < puVar5) goto code_r0x0040c216;\n    puVar5 = *(puVar5 + 0x40c23e);\n    // switch table (29 cases) at 0x40c222\n    arg_18h = var_8h;\n    switch(*(puVar5 * 4 + 0x40c222)) {\n    case 0x40c109:\n        arg_18h = in_stack_ffffffd0;\n        if (arg_10h != 1) goto code_r0x0040c216;\n        break;\n    case 0x40c115:\n        arg_18h = in_stack_ffffffd0;\n        if (arg_10h != 0) {\n            if (arg_10h == 0x300) {\n                puVar5 = arg_ch_00[0x1061];\n                if ((puVar5 != 0xffffffff) && (puVar5 != arg_ch)) {\n                    arg_ch_00[0x1061] = 0xffffffff;\n                    fcn.0040431f(puVar5, arg_ch_00, *puVar2, arg_14h, var_8h);\n                }\n                arg_ch_00[0x1061] = arg_ch;\n                puVar5 = arg_ch;\n            }\n            else if (arg_10h == 0x200) {\n                if (*(puVar2 + 0x1c) == '\\x02') {\n                    (*_sym.imp.USER32.dll_SendMessageW)(*puVar2, 0xb0, arg_ch_00 + 0x105f, arg_ch_00 + 0x1060);\n                }\n                puVar5 = arg_ch_00 + 0x1061;\n                arg_8h_00 = *puVar5;\n                if ((arg_8h_00 != 0xffffffff) && (arg_8h_00 == arg_ch)) {\n                    *puVar5 = 0xffffffff;\n                    puVar5 = fcn.0040431f(arg_8h_00, arg_ch_00, *puVar2, arg_14h, var_8h);\n                }\n            }\n            goto code_r0x0040c216;\n        }\n        break;\n    case 0x40c1b2:\n        puVar5 = (*_sym.imp.USER32.dll_GetWindowLongW)(*puVar2, 0xffffffec);\n        if ((puVar5 & 0x100000) != 0) {\n            puVar5 = (*_sym.imp.USER32.dll_SendMessageW)(*arg_ch_00, 0xa1, 2, 0);\n        }\n    case 0x40c1d4:\n        arg_18h = var_8h;\n        if (arg_10h != 0) goto code_r0x0040c216;\n        break;\n    case 0x40c1dc:\n        fcn.0040b756(arg_10h);\n        arg_18h = var_8h;\n        break;\n    case 0x40c216:\n        goto code_r0x0040c216;\n    }\n    fcn.0040431f(arg_ch, arg_ch_00, *puVar2, arg_14h, arg_18h);\n    puVar5 = *(*var_ch + 0x40);\n    var_2h._1_1_ = 1;\n    if (puVar5 != NULL) {\n        puVar5 = (*_sym.imp.USER32.dll_SendMessageW)(puVar5, 0x41c, 0, 0);\n    }\ncode_r0x0040c216:\n    return puVar5 & 0xffffff00 | var_2h._1_1_;\n}\n",
        "token_count": 1390
    },
    "0040c4de": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040c4de(int32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t **ppiVar2;\n    int32_t **ppiVar3;\n    int32_t **ppiVar4;\n    uint *unaff_EBX;\n    int32_t *piVar5;\n    uint var_4h;\n    \n    ppiVar4 = unaff_EBX[0x1062];\n    ppiVar3 = unaff_EBX[0x1062];\n    while (ppiVar2 = ppiVar4,  ppiVar2 != NULL) {\n        if ((arg_8h == 0) || (ppiVar2 == *(arg_8h + 0x60))) {\n            piVar5 = ppiVar2[1];\n            while (piVar5 != NULL) {\n                piVar1 = piVar5[1];\n                fcn.0044951c(piVar5);\n                piVar5 = piVar1;\n            }\n            if ((*ppiVar3 == unaff_EBX[0x1062]) || (ppiVar2 == unaff_EBX[0x1062])) {\n                unaff_EBX[0x1062] = *ppiVar2;\n            }\n            else {\n                *ppiVar3 = *ppiVar2;\n            }\n            fcn.0044951c(ppiVar2);\n            if (arg_8h != 0) break;\n        }\n        if (arg_8h == 0) {\n            ppiVar4 = unaff_EBX[0x1062];\n            ppiVar3 = unaff_EBX[0x1062];\n        }\n        else {\n            ppiVar4 = *ppiVar2;\n            ppiVar3 = ppiVar2;\n        }\n    }\n    (*_sym.imp.USER32.dll_InvalidateRect)(*unaff_EBX, 0, 1);\n    return;\n}\n",
        "token_count": 418
    },
    "0040c56a": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: lpPaint\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __cdecl fcn.0040c56a(uint hWnd, int32_t arg_ch)\n\n{\n    int32_t arg_ch_00;\n    int32_t iVar1;\n    char cVar2;\n    int32_t in_EAX;\n    uint hdc_00;\n    int32_t iVar3;\n    int32_t *piVar4;\n    uint lpPaint;\n    uint var_ch;\n    uint hdc;\n    uint var_1h;\n    \n    piVar4 = *(arg_ch + 0x4188);\n    if (piVar4 != NULL) {\n        hdc_00 = (*_sym.imp.USER32.dll_BeginPaint)(hWnd, &lpPaint);\n        do {\n            if ((*(piVar4[2] + 0x73) == 0xff) || (*(piVar4[2] + 0x73) == *(arg_ch + 0x4150))) {\n                *(in_EAX + 0x117c) = 0;\n                *(in_EAX + 0x1178) = 0;\n                *(in_EAX + 0x1188) = 0xffffffff;\n                *(in_EAX + 0x118c) = 0xffffffff;\n                *(in_EAX + 0x1180) = 0;\n                *(in_EAX + 0x1184) = 1;\n                (*_sym.imp.GDI32.dll_SetViewportOrgEx)(hdc_00, *(piVar4[2] + 0x68), *(piVar4[2] + 0x6a), 0);\n                arg_ch_00 = *(piVar4[2] + 0x38);\n                iVar1 = *(piVar4[2] + 0x3c);\n                iVar3 = iVar1;\n                if (((-1 < arg_ch_00) && (iVar3 = arg_ch_00,  iVar1 != -1)) || ((iVar3 != -1 || (-1 < arg_ch_00)))) {\n                    fcn.0040cda5(hdc_00, arg_ch_00, 0, 1);\n                    if (*0x479bb4 == '\\0') {\n                        fcn.0040d0e7(0, 0, *(piVar4[2] + 0x6c), *(piVar4[2] + 0x6e));\n                    }\n                    else {\n                        (*_sym.imp.GDI32.dll_Rectangle)(hdc_00);\n                    }\n                    lpPaint = hdc_00;\n                    fcn.0040cd34(hdc_00, arg_ch_00);\n                }\n                cVar2 = fcn.0040c9aa(hdc_00);\n                fcn.0040c6a8(in_EAX, hdc_00);\n                if (cVar2 != '\\0') {\n                    fcn.0040c86f(in_EAX, hdc_00);\n                }\n            }\n            piVar4 = *piVar4;\n        } while (piVar4 != NULL);\n        (*_sym.imp.USER32.dll_EndPaint)(hWnd, &lpPaint);\n    }\n    return;\n}\n",
        "token_count": 702
    },
    "0040c6a8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __cdecl fcn.0040c6a8(int32_t arg_8h, uint hdc)\n\n{\n    uint8_t *puVar1;\n    uint8_t uVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    uint8_t *puVar4;\n    uint8_t *puVar5;\n    bool bVar6;\n    uint var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t *var_8h;\n    uint var_1h;\n    \n    var_10h = 0;\n    var_ch = -2;\n    var_14h = 1;\n    bVar6 = true;\n    (*_sym.imp.GDI32.dll_BeginPath)(hdc);\n    *(arg_8h + 0x1180) = 1;\n    for (; puVar4 = NULL,  in_EAX != 0; in_EAX = *(in_EAX + 4)) {\n        fcn.0040cda5(hdc, var_ch, 0, var_14h);\n        if (0 < *(in_EAX + 0xc)) {\n            var_8h = in_EAX + 0x10;\n            puVar5 = in_EAX + 0x810;\n            iVar3 = -in_EAX;\n            do {\n                if (7 < *puVar5) {\n                    puVar1 = puVar5 + iVar3 + -0x810;\n                    if (puVar4 != puVar1) {\n                        if ((*0x479bb4 == '\\0') || (!bVar6)) {\n                            fcn.0040ce86(hdc, puVar4 + in_EAX + 0x810, puVar1 - puVar4);\n                        }\n                        else {\n                            (*_sym.imp.GDI32.dll_PolyDraw)\n                                      (hdc, puVar4 * 8 + 0x10 + in_EAX, puVar4 + in_EAX + 0x810, puVar1 - puVar4);\n                        }\n                    }\n                    puVar4 = puVar5 + iVar3 + -0x80f;\n                    uVar2 = *puVar5;\n                    if (uVar2 == 0x14) {\n                        bVar6 = var_8h[1] != 1;\n                    }\n                    else if (uVar2 == 8) {\n                        if (var_10h != -1) {\n                            fcn.0040cd34(hdc, var_ch);\n                        }\n                        if (*var_8h != -1) {\n                            var_10h = *var_8h;\n                        }\n                        if (var_8h[1] != -1) {\n                            var_ch = var_8h[1];\n                        }\n                        fcn.0040cda5(hdc, var_ch, 0, var_14h);\n                    }\n                    else if (uVar2 == 0x18) {\n                        var_14h = *var_8h;\n                    }\n                }\n                var_8h = var_8h + 2;\n                puVar5 = puVar5 + 1;\n            } while (puVar5 + iVar3 + -0x810 < *(in_EAX + 0xc));\n        }\n        puVar5 = *(in_EAX + 0xc);\n        if (puVar4 != puVar5) {\n            if ((*0x479bb4 == '\\0') || (!bVar6)) {\n                fcn.0040ce86(hdc, puVar4 + in_EAX + 0x810, puVar5 - puVar4);\n            }\n            else {\n                (*_sym.imp.GDI32.dll_PolyDraw)\n                          (hdc, in_EAX + 0x10 + puVar4 * 8, puVar4 + in_EAX + 0x810, puVar5 - puVar4);\n            }\n        }\n    }\n    fcn.0040cd34(hdc, var_ch);\n    return;\n}\n",
        "token_count": 898
    },
    "0040c9aa": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.0040c9aa(int32_t hdc)\n\n{\n    uint8_t uVar1;\n    int32_t *piVar2;\n    int32_t in_EAX;\n    uint32_t uVar3;\n    int32_t *piVar4;\n    int32_t Y;\n    int32_t X;\n    int32_t arg_10h;\n    int32_t arg_14h;\n    int32_t var_20h;\n    int32_t crColor;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t *nRightRect;\n    int32_t *var_8h;\n    uint var_1h;\n    \n    crColor = 0;\n    var_1h._0_1_ = 0;\n    var_14h = -2;\n    var_18h = 1;\n    var_20h = in_EAX;\n    if (in_EAX != 0) {\n        do {\n            var_10h = 0;\n            fcn.0040cda5(hdc, var_14h, 0, var_18h);\n            if (0 < *(var_20h + 0xc)) {\n                var_8h = var_20h + 0x14;\n                nRightRect = var_20h + 0x10;\n                do {\n                    X = *nRightRect;\n                    Y = *var_8h;\n                    uVar1 = *(var_20h + 0x810 + var_10h);\n                    if (uVar1 < 0x11) {\n                        if (uVar1 == 0x10) {\n                            arg_14h = Y + 1 + var_18h;\n                            arg_10h = X + 1 + var_18h;\n                            Y = Y - var_18h;\n                            X = X - var_18h;\ncode_r0x0040cbc7:\n                            if (*0x479bb4 == '\\0') {\n                                fcn.0040d0e7(X, Y, arg_10h, arg_14h);\n                            }\n                            else {\n                                (*_sym.imp.GDI32.dll_Rectangle)(hdc);\n                            }\n                        }\n                        else if (uVar1 == 8) {\n                            if (crColor != -1) {\n                                fcn.0040cd34(hdc, var_14h);\n                            }\n                            if (*nRightRect != -1) {\n                                crColor = *nRightRect;\n                            }\n                            if (*var_8h != -1) {\n                                var_14h = *var_8h;\n                            }\n                            fcn.0040cda5(hdc, var_14h, 0, var_18h);\n                        }\n                        else {\n                            if (uVar1 == 10) {\n                                var_10h = var_10h + 1;\n                                nRightRect = nRightRect + 2;\n                                var_8h = var_8h + 2;\n                                arg_10h = hdc;\n                                arg_14h = var_14h;\n                                fcn.0040cd34(hdc, var_14h);\n                                fcn.0040cda5(hdc, var_14h, 0, var_18h);\n                                goto code_r0x0040cbc7;\n                            }\n                            if (uVar1 == 0xc) {\n                                var_10h = var_10h + 1;\n                                nRightRect = nRightRect + 2;\n                                var_8h = var_8h + 2;\n                                fcn.0040cd34(hdc, var_14h);\n                                fcn.0040cda5(hdc, var_14h, 0, var_18h);\n                                if (*0x479bb4 == '\\0') {\n                                    fcn.0040d024(hdc, X, Y, *nRightRect + X);\n                                }\n                                else {\n                                    (*_sym.imp.GDI32.dll_Ellipse)(hdc, X, Y, *nRightRect + X, *var_8h + Y);\n                                }\n                            }\n                            else if (uVar1 == 0xe) {\n                                (*_sym.imp.GDI32.dll_MoveToEx)(hdc, X, Y, 0);\n                                piVar2 = var_8h + 2;\n                                var_8h = var_8h + 4;\n                                piVar4 = nRightRect + 2;\n                                var_10h = var_10h + 2;\n                                nRightRect = nRightRect + 4;\n                                if (*0x479bb4 == '\\0') {\n                                    fcn.0040cf12(hdc, X, Y, *piVar4, *piVar2, *nRightRect);\n                                }\n                                else {\n                                    (*_sym.imp.GDI32.dll_AngleArc)();\n                                }\n                                (*_sym.imp.GDI32.dll_LineTo)(hdc, X, Y);\n                                (*_sym.imp.GDI32.dll_CloseFigure)(hdc);\n                            }\n                        }\n                    }\n                    else if (uVar1 == 0x12) {\n                        (*_sym.imp.GDI32.dll_SetPixel)(hdc, X, Y, crColor);\n                    }\n                    else if (uVar1 == 0x14) {\n                        if (X != 0) {\n                            var_1h._0_1_ = 1;\n                        }\n                    }\n                    else if (uVar1 == 0x18) {\n                        var_18h = X;\n                    }\n                    var_10h = var_10h + 1;\n                    nRightRect = nRightRect + 2;\n                    var_8h = var_8h + 2;\n                } while (var_10h < *(var_20h + 0xc));\n            }\n            var_20h = *(var_20h + 4);\n        } while (var_20h != 0);\n    }\n    uVar3 = fcn.0040cd34(hdc, var_14h);\n    return uVar3 & 0xffffff00 | var_1h;\n}\n",
        "token_count": 1359
    },
    "0040cc51": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040cc51(uint X, uint Y, uint nXEnd, uint nYEnd, uint32_t arg_18h)\n\n{\n    int32_t in_EAX;\n    uint unaff_EDI;\n    \n    if ((arg_18h & 2) != 0) {\n        fcn.0040cda5(unaff_EDI, 0xffffffff, 2, 1);\n        (*_sym.imp.GDI32.dll_MoveToEx)();\n        (*_sym.imp.GDI32.dll_LineTo)();\n        if (*(in_EAX + 0x1180) != '\\0') {\n            (*_sym.imp.GDI32.dll_EndPath)();\n            *(in_EAX + 0x1180) = '\\0';\n        }\n        (*_sym.imp.GDI32.dll_StrokePath)();\n    }\n    return;\n}\n",
        "token_count": 184
    },
    "0040ccaa": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040ccaa(int32_t arg_8h, uint arg_ch, int32_t arg_10h, uint32_t arg_14h)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    int32_t in_EAX;\n    \n    if ((arg_14h & 1) != 0) {\n        fcn.0040cda5(arg_ch, 0xffffffff, 0, 1);\n        pcVar2 = _sym.imp.GDI32.dll_MoveToEx;\n        (*_sym.imp.GDI32.dll_MoveToEx)(arg_ch, arg_10h + -2);\n        pcVar1 = _sym.imp.GDI32.dll_LineTo;\n        (*_sym.imp.GDI32.dll_LineTo)(arg_ch, arg_10h + 3);\n        (*pcVar2)(arg_ch, arg_10h, in_EAX + -2, 0);\n        (*pcVar1)(arg_ch, arg_10h, in_EAX + 3);\n        if (*(arg_8h + 0x1180) != '\\0') {\n            (*_sym.imp.GDI32.dll_EndPath)(arg_ch);\n            *(arg_8h + 0x1180) = '\\0';\n        }\n        (*_sym.imp.GDI32.dll_StrokePath)(arg_ch);\n    }\n    return;\n}\n",
        "token_count": 299
    },
    "0040cd34": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040cd34(uint hdc, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t unaff_ESI;\n    \n    if (*(unaff_ESI + 0x1180) != '\\0') {\n        (*_sym.imp.GDI32.dll_EndPath)(hdc);\n        *(unaff_ESI + 0x1180) = '\\0';\n        if ((arg_ch == -1) || (arg_ch == -2)) {\n            (*_sym.imp.GDI32.dll_StrokePath)(hdc);\n        }\n        else {\n            (*_sym.imp.GDI32.dll_StrokeAndFillPath)(hdc);\n        }\n    }\n    iVar1 = *(unaff_ESI + 0x117c);\n    if (iVar1 != 0) {\n        (*_sym.imp.GDI32.dll_SelectObject)(hdc, iVar1);\n        *(unaff_ESI + 0x117c) = 0;\n        (**0x459108)(*(unaff_ESI + 0x1178));\n        *(unaff_ESI + 0x1178) = 0;\n        *(unaff_ESI + 0x1188) = 0xffffffff;\n    }\n    return;\n}\n",
        "token_count": 271
    },
    "0040d12c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.0040d12c(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, uint arg_14h, uint arg_18h, uint32_t arg_1ch, \n            uint32_t arg_20h)\n\n{\n    code *pcVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t in_ECX;\n    int32_t *unaff_EBX;\n    \n    if (arg_10h != 0) {\n        if (arg_1ch == 0xffffffff) {\n            arg_1ch = 0;\n        }\n        if (arg_20h == 0xffffffff) {\n            arg_20h = 0;\n        }\n        if (in_EAX == -1) {\n            in_EAX = 0x96;\n        }\n        if (in_ECX == -1) {\n            in_ECX = 0x96;\n        }\n        *(unaff_EBX + 0x1a) = arg_14h;\n        *(unaff_EBX + 0x6a) = arg_18h;\n        *(unaff_EBX + 0x1b) = in_EAX;\n        *(unaff_EBX + 0x6e) = in_ECX;\n        if (*(arg_ch + 0x418c) == 0) {\n            iVar2 = fcn.00449614(0x1c);\n            if (iVar2 == 0) {\n                uVar3 = 0;\n            }\n            else {\n                uVar3 = fcn.0040e328();\n            }\n            *(arg_ch + 0x418c) = uVar3;\n        }\n        iVar2 = fcn.0040e3f9(arg_10h);\n        unaff_EBX[0x18] = iVar2;\n        if (*unaff_EBX != 0) {\n            if (*(arg_8h + 8) == 0) {\n                *(unaff_EBX + 0x66) = 0x300;\n            }\n            pcVar1 = _sym.imp.USER32.dll_SetWindowLongW;\n            (*_sym.imp.USER32.dll_SetWindowLongW)(*unaff_EBX, 0xfffffff0, arg_1ch | 0x50010000);\n            (*pcVar1)(*unaff_EBX, 0xffffffec, arg_20h | 0x10000);\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 555
    },
    "0040d245": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040d245(int32_t arg_8h, int16_t *arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t *piVar3;\n    int32_t **ppiVar4;\n    \n    iVar1 = *(in_EAX + 0x1590);\n    iVar2 = 0;\n    if (-1 < iVar1) {\n        ppiVar4 = in_EAX + 0x1190;\n        do {\n            if ((*ppiVar4 != NULL) && (**ppiVar4 == arg_8h)) {\n                if (*arg_ch == 0) {\n                    if (iVar2 == iVar1) {\n                        *(in_EAX + 0x1590) = iVar1 + -1;\n                    }\n                    piVar3 = in_EAX + 0x1190 + iVar2 * 4;\n                    iVar1 = *piVar3;\n                    if (iVar1 != 0) {\n                        fcn.0044951c(*(iVar1 + 4));\n                        fcn.0044951c(iVar1);\n                    }\n                    *piVar3 = 0;\n                    return 1;\n                }\n                piVar3 = *(in_EAX + 0x1190 + iVar2 * 4);\n                goto code_r0x0040d32a;\n            }\n            iVar2 = iVar2 + 1;\n            ppiVar4 = ppiVar4 + 1;\n        } while (iVar2 <= *(in_EAX + 0x1590));\n    }\n    if (*arg_ch != 0) {\n        iVar2 = 0;\n        piVar3 = in_EAX + 0x1190;\n        do {\n            if (*piVar3 == 0) {\n                *(in_EAX + 0x1590) = iVar1 + 1;\n                if (iVar1 + 1 == 0x100) {\n                    *(in_EAX + 0x1590) = 0xff;\n                    return 0;\n                }\n                piVar3 = fcn.00449614(0x10);\n                if (piVar3 == NULL) {\n                    piVar3 = NULL;\n                }\n                else {\n                    fcn.00416d61();\n                }\n                ppiVar4 = in_EAX + 0x1190 + iVar2 * 4;\n                *ppiVar4 = piVar3;\n                *piVar3 = arg_8h;\n                piVar3 = *ppiVar4;\ncode_r0x0040d32a:\n                fcn.00416e83(piVar3 + 1, arg_ch);\n                return 1;\n            }\n            iVar2 = iVar2 + 1;\n            piVar3 = piVar3 + 1;\n        } while (iVar2 < 0x100);\n    }\n    return 0;\n}\n",
        "token_count": 628
    },
    "0040d3e7": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0040d3e7(uint hWnd, uint32_t Msg, int32_t wParam, int32_t lParam)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    int16_t iVar3;\n    int32_t in_EAX;\n    int32_t iVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    uint uVar7;\n    uint uVar8;\n    uint lprcDst;\n    int32_t lprcSrc2;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t lprcSrc1;\n    int32_t nHeight;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    iVar6 = wParam;\n    iVar4 = fcn.00403eaf(hWnd);\n    pcVar1 = *0x4592b4;\n    if (iVar4 == -1) {\n        uVar5 = (*_sym.imp.USER32.dll_DefWindowProcW)(hWnd, Msg, wParam, lParam);\n        return uVar5;\n    }\n    uVar8 = *(in_EAX + 0x54 + iVar4 * 4);\n    if (Msg < 0x3a) {\n        if (Msg == 0x39) {\n            return 0;\n        }\n        if (0x18 < Msg) {\n            if (Msg == 0x28) {\n                if (lParam != 1) {\n                    uVar7 = (*_sym.imp.USER32.dll_GetFocus)(wParam != 0);\n                    wParam = (*_sym.imp.USER32.dll_GetNextDlgTabItem)(hWnd, uVar7);\n                }\n                fcn.0040d8a9(in_EAX, uVar8, wParam, 1);\n                return 0;\n            }\n            if (0x2d < Msg) {\n                if (Msg < 0x30) {\n                    return 0;\n                }\n                if (Msg == 0x31) {\n                    return 0;\n                }\n            }\n            goto code_r0x0040d753;\n        }\n        if (Msg != 0x18) {\n            if (Msg == 6) {\n                if (wParam == 0) {\n                    fcn.0040d97b();\n                    return 0;\n                }\n            }\n            else if (Msg != 7) {\n                if (Msg == 0x10) {\n                    iVar6 = (*_sym.imp.USER32.dll_GetDlgItem)(hWnd, 2);\n                    if ((iVar6 != 0) && (iVar6 = (*_sym.imp.USER32.dll_IsWindowEnabled)(iVar6),  iVar6 == 0)) {\n                        (*_sym.imp.USER32.dll_MessageBeep)(0xffffffff);\n                        return 0;\n                    }\n                    (*_sym.imp.USER32.dll_PostMessageW)(hWnd, 0x111, 2, 0);\n                    return 0;\n                }\n                if (Msg == 0x14) {\n                    wParam = (*_sym.imp.USER32.dll_SendMessageW)(hWnd, 0x136, wParam, hWnd);\n                    if (wParam == 0) {\n                        wParam = (*_sym.imp.USER32.dll_GetSysColorBrush)(5);\n                    }\n                    (*_sym.imp.USER32.dll_GetClientRect)(hWnd, &lprcSrc2);\n                    pcVar1 = _sym.imp.GDI32.dll_SetViewportOrgEx;\n                    (*_sym.imp.GDI32.dll_SetViewportOrgEx)(iVar6, 0, 0, &var_8h);\n                    (*_sym.imp.USER32.dll_FillRect)(iVar6, &lprcSrc2, wParam);\n                    (*pcVar1)(iVar6, var_8h, var_4h, 0);\n                    return 1;\n                }\n                goto code_r0x0040d753;\n            }\n            fcn.0040d868();\n            return 0;\n        }\ncode_r0x0040d519:\n        if (iVar6 == 0) {\n            fcn.0040d97b();\n        }\n    }\n    else {\n        if (Msg != 0xa1) {\n            if (Msg == 0x110) {\n                return 0;\n            }\n            if (Msg == 0x112) {\n                iVar6 = wParam + -0xf020;\n                goto code_r0x0040d519;\n            }\n            if (Msg != 0x201) {\n                if (Msg == 0x400) {\n                    uVar5 = fcn.0040d76a();\n                    if (uVar5 == 0) {\n                        return 0;\n                    }\n                    return uVar5 & 0xffff | 0x534b0000;\n                }\n                if (Msg == 0x401) {\n                    fcn.0040d7c0();\n                    return 1;\n                }\n                if (Msg == 0x402) {\n                    (*_sym.imp.USER32.dll_SystemParametersInfoW)(0x30, 0, &lprcSrc2, 0);\n                    (*_sym.imp.USER32.dll_GetWindowRect)(hWnd, &lprcSrc1);\n                    iVar6 = (*_sym.imp.USER32.dll_SubtractRect)(&lprcDst, &lprcSrc1, &lprcSrc2);\n                    pcVar1 = _sym.imp.USER32.dll_OffsetRect;\n                    if (iVar6 == 0) {\n                        return 0;\n                    }\n                    if (lprcSrc1 < lprcSrc2) {\n                        (*_sym.imp.USER32.dll_OffsetRect)(&lprcSrc1, lprcSrc2 - lprcSrc1, 0);\n                    }\n                    if (var_18h < var_8h) {\n                        (*pcVar1)(&lprcSrc1, var_18h - var_8h, 0);\n                    }\n                    if (nHeight < var_1ch) {\n                        (*pcVar1)(&lprcSrc1, 0, var_1ch - nHeight);\n                    }\n                    if (var_14h < var_4h) {\n                        (*pcVar1)(&lprcSrc1, 0, (var_14h - var_4h) + -4);\n                    }\n                    (*_sym.imp.USER32.dll_MoveWindow)(hWnd, lprcSrc1, nHeight, var_8h - lprcSrc1, var_4h - nHeight, 1);\n                    return 0;\n                }\n                goto code_r0x0040d753;\n            }\n        }\n        if (*0x47c79c == 0) {\n            *0x47c79c = (**0x4592b4)(0x45c20c);\n        }\n        if (*0x47c798 == 0) {\n            *0x47c798 = (*pcVar1)(0x45c200);\n        }\n        pcVar1 = _sym.imp.USER32.dll_GetClassWord;\n        if (*0x47c79c != 0) {\n            iVar3 = (*_sym.imp.USER32.dll_GetClassWord)(hWnd, 0xffffffe0);\n            if (iVar3 == *0x47c79c) {\n                (*_sym.imp.USER32.dll_SendMessageW)(hWnd, 0x14f, 0, 0);\n            }\n            else {\n                iVar3 = (*pcVar1)(hWnd, 0xffffffe0);\n                pcVar2 = _sym.imp.USER32.dll_GetParent;\n                if (iVar3 == *0x47c798) {\n                    uVar8 = (*_sym.imp.USER32.dll_GetParent)(hWnd, 0xffffffe0);\n                    iVar3 = (*pcVar1)(uVar8);\n                    if (iVar3 == *0x47c79c) {\n                        uVar8 = (*pcVar2)(hWnd, 0x14f, 0, 0);\n                        (*_sym.imp.USER32.dll_SendMessageW)(uVar8);\n                    }\n                }\n            }\n        }\n    }\ncode_r0x0040d753:\n    uVar5 = (*_sym.imp.USER32.dll_DefWindowProcW)(hWnd, Msg, wParam, lParam);\n    return uVar5;\n}\n",
        "token_count": 1810
    },
    "0040d7c0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0040d7c0(char param_1, uint param_2)\n\n{\n    code *pcVar1;\n    uint *in_EAX;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    \n    if ((in_EAX != NULL) &&\n       ((iVar2 = (*_sym.imp.USER32.dll_GetDlgItem)(*in_EAX, param_2),  pcVar1 = _sym.imp.USER32.dll_SendMessageW, \n        iVar2 == 0 || (uVar3 = (*_sym.imp.USER32.dll_SendMessageW)(iVar2, 0x87, 0, 0),  (uVar3 & 0x20) != 0)))) {\n        iVar4 = fcn.0040d76a();\n        if ((iVar4 != 0) && (uVar3 = (*pcVar1)(in_EAX[8], 0x87, 0, 0),  (uVar3 & 0x10) != 0)) {\n            (*pcVar1)(in_EAX[8], 0xf4, 0, 1);\n        }\n        if (iVar2 == 0) {\n            in_EAX[8] = 0;\n        }\n        else {\n            (*pcVar1)(iVar2, 0xf4, 1, 1);\n            in_EAX[8] = iVar2;\n        }\n        if (param_1 != '\\0') {\n            in_EAX[7] = in_EAX[8];\n        }\n    }\n    return;\n}\n",
        "token_count": 344
    },
    "0040d9b0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "link function at runtime on Windows"
        ],
        "decompiled_code": "\nvoid fcn.0040d9b0(void)\n\n{\n    int32_t iVar1;\n    int32_t *unaff_ESI;\n    \n    if (unaff_ESI[2] == 0) {\n        iVar1 = (*_sym.imp.KERNEL32.DLL_LoadLibraryA)(0x45c1f4);\n        *unaff_ESI = iVar1;\n        if (iVar1 != 0) {\n            iVar1 = (*_sym.imp.KERNEL32.DLL_GetProcAddress)(iVar1, 0x45c1d8);\n            unaff_ESI[2] = iVar1;\n        }\n    }\n    return;\n}\n",
        "token_count": 140
    },
    "0040d9f1": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0040d9f1(uint *param_1)\n\n{\n    uint *puVar1;\n    int32_t *unaff_ESI;\n    \n    puVar1 = fcn.00449614(8);\n    puVar1[1] = 0;\n    *puVar1 = *param_1;\n    if (unaff_ESI[1] == 0) {\n        unaff_ESI[1] = puVar1;\n    }\n    else {\n        *(unaff_ESI[2] + 4) = puVar1;\n    }\n    *unaff_ESI = *unaff_ESI + 1;\n    unaff_ESI[2] = puVar1;\n    return;\n}\n",
        "token_count": 158
    },
    "0040dcf2": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040dcf2(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint var_10h;\n    \n    if (arg_ch != 0) {\n        (*_sym.imp.USER32.dll_GetClientRect)(*(arg_8h + 8), &var_10h);\n    }\n    return 0;\n}\n",
        "token_count": 79
    },
    "0040e3f9": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.0040e3f9(uint param_1, uint param_2, uint param_3)\n\n{\n    int32_t iVar1;\n    int32_t unaff_ESI;\n    int32_t unaff_retaddr;\n    \n    if (*(unaff_ESI + 0x14) != 0) {\n        iVar1 = fcn.00449614(0x40);\n        if (iVar1 == 0) {\n            iVar1 = 0;\n        }\n        else {\n            iVar1 = fcn.0040def8(unaff_ESI, param_1, param_3);\n        }\n        if (iVar1 != 0) {\n            if (unaff_retaddr != 0) {\n                return iVar1;\n            }\n            fcn.0040e123();\n            fcn.0044951c(iVar1);\n        }\n    }\n    return 0;\n}\n",
        "token_count": 196
    },
    "0040e465": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0040e465(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    \n    iVar2 = 0;\n    if (2 < *(param_2 + 0x14)) {\n        piVar3 = param_2 + 0x5c;\n        iVar4 = *(param_2 + 0x14) + -2;\n        do {\n            iVar1 = *piVar3;\n            if (((iVar1 != 0) && (*(iVar1 + 0x70) == '\\x1d')) && (*(iVar1 + 0x60) != 0)) {\n                iVar2 = iVar2 + 1;\n            }\n            piVar3 = piVar3 + 1;\n            iVar4 = iVar4 + -1;\n        } while (iVar4 != 0);\n    }\n    return iVar2;\n}\n",
        "token_count": 217
    },
    "0040e61a": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint fcn.0040e61a(void)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t *unaff_EDI;\n    int32_t lpRect;\n    int32_t var_28h;\n    int32_t var_24h;\n    int32_t var_20h;\n    uint var_1ch;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t nWidth;\n    uint var_1h;\n    \n    uVar2 = (*_sym.imp.USER32.dll_LoadIconW)(*0x467a08, 0xa1);\n    (*_sym.imp.USER32.dll_SendMessageW)(unaff_EDI[0x12], 0x80, 0, uVar2);\n    if (unaff_EDI[10] != 0) {\n        (*_sym.imp.USER32.dll_SetWindowTextW)(unaff_EDI[0x12], unaff_EDI[9]);\n    }\n    pcVar1 = _sym.imp.USER32.dll_GetDlgItem;\n    if (unaff_EDI[0x10] != 0) {\n        uVar2 = (*_sym.imp.USER32.dll_GetDlgItem)(unaff_EDI[0x12], 0x3ea);\n        (*_sym.imp.USER32.dll_SetWindowTextW)(uVar2, unaff_EDI[0xf]);\n    }\n    if (unaff_EDI[0xd] != 0) {\n        uVar2 = (*pcVar1)(unaff_EDI[0x12], 0x3e9);\n        (*_sym.imp.USER32.dll_SetWindowTextW)(uVar2, unaff_EDI[0xc]);\n    }\n    pcVar1 = _sym.imp.USER32.dll_SendDlgItemMessageW;\n    if (*(unaff_EDI + 8) != 0) {\n        (*_sym.imp.USER32.dll_SendDlgItemMessageW)(unaff_EDI[0x12], 0x3e9, 0xcc, *(unaff_EDI + 8), 0);\n    }\n    if (0 < unaff_EDI[5]) {\n        (*pcVar1)(unaff_EDI[0x12], 0x3e9, 0xc5, unaff_EDI[5], 0);\n    }\n    (*_sym.imp.USER32.dll_GetWindowRect)(unaff_EDI[0x12], &lpRect);\n    fcn.0040e58c();\n    var_ch = lpRect;\n    var_10h = var_28h;\n    if (-1 < unaff_EDI[2]) {\n        var_ch = unaff_EDI[2];\n    }\n    if (-1 < unaff_EDI[3]) {\n        var_10h = unaff_EDI[3];\n    }\n    nWidth = var_24h - lpRect;\n    if (0 < *unaff_EDI) {\n        nWidth = *unaff_EDI;\n    }\n    iVar4 = var_20h - var_28h;\n    if (0 < unaff_EDI[1]) {\n        iVar4 = unaff_EDI[1];\n    }\n    fcn.00416d81(0x45bfe0);\n    var_1h._0_1_ = fcn.00416fb3();\n    fcn.0044951c(var_1ch);\n    if (var_1h != '\\0') {\n        (*_sym.imp.USER32.dll_SetWindowTextW)(unaff_EDI[0x12], unaff_EDI[9]);\n    }\n    uVar2 = (*_sym.imp.USER32.dll_GetDesktopWindow)(&lpRect);\n    (*_sym.imp.USER32.dll_GetWindowRect)(uVar2);\n    fcn.0040e58c();\n    iVar5 = var_ch;\n    if ((unaff_EDI[4] & 0x40U) != 0) {\n        iVar5 = ((var_24h - nWidth) - lpRect) / 2;\n    }\n    iVar3 = var_10h;\n    if (unaff_EDI[4] < '\\0') {\n        iVar3 = ((var_20h - iVar4) - var_28h) / 2;\n    }\n    (*_sym.imp.USER32.dll_MoveWindow)(unaff_EDI[0x12], iVar5, iVar3, nWidth, iVar4, 0);\n    (*_sym.imp.USER32.dll_GetClientRect)(unaff_EDI[0x12], &lpRect);\n    fcn.0040e58c();\n    (*_sym.imp.USER32.dll_PostMessageW)(unaff_EDI[0x12], 5, 0, ((var_20h - var_28h) * 0x10000 - lpRect) + var_24h);\n    if (((*(unaff_EDI + 6) < *0x462048) << 8 | (*(unaff_EDI + 6) == *0x462048) << 0xe) == 0) {\n        uVar2 = fcn.00458664(0);\n        iVar4 = (*_sym.imp.USER32.dll_SetTimer)(unaff_EDI[0x12], 0x40a, uVar2);\n        unaff_EDI[0x13] = iVar4;\n    }\n    return 1;\n}\n",
        "token_count": 1207
    },
    "0040e9dd": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0040e9dd(void)\n\n{\n    int32_t iVar1;\n    int32_t unaff_ESI;\n    uint lpString;\n    \n    iVar1 = (*_sym.imp.USER32.dll_GetDlgItem)(*(unaff_ESI + 0x48), 0x3e9);\n    if (iVar1 != 0) {\n        (*_sym.imp.USER32.dll_GetWindowTextW)(iVar1, &lpString, 0x100);\n        if (((*(unaff_ESI + 0x10) & 1) != 0) && (lpString == 0)) {\n            (*_sym.imp.USER32.dll_MessageBeep)(0);\n            return;\n        }\n        if (((*(unaff_ESI + 0x18) < *0x462048) << 8 | (*(unaff_ESI + 0x18) == *0x462048) << 0xe) == 0) {\n            (*_sym.imp.USER32.dll_KillTimer)(*(unaff_ESI + 0x48), 0x40a);\n        }\n        fcn.00416e83(unaff_ESI + 0x30, &lpString);\n        (*_sym.imp.USER32.dll_EndDialog)(*(unaff_ESI + 0x48), 1);\n    }\n    return;\n}\n",
        "token_count": 298
    },
    "0040eb4d": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0040eb4d(void)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    int16_t iVar3;\n    int32_t iVar4;\n    uint uVar5;\n    code *pcVar6;\n    code *pcVar7;\n    int32_t iVar8;\n    int32_t *unaff_EBX;\n    uint *puVar9;\n    uint uStack344;\n    int32_t iStack340;\n    int32_t iStack336;\n    uint32_t uStack332;\n    int32_t iStack328;\n    int16_t aiStack324 [128];\n    uint32_t uStack68;\n    uint auStack64 [8];\n    int32_t iStack32;\n    uint uStack24;\n    int32_t iStack20;\n    int32_t iStack12;\n    int32_t iStack8;\n    \n    uStack344 = 0x114;\n    (*_sym.imp.KERNEL32.DLL_GetVersionExW)(&uStack344);\n    *unaff_EBX = iStack340;\n    unaff_EBX[1] = iStack336;\n    unaff_EBX[2] = uStack332;\n    iVar4 = fcn.0044985c(aiStack324);\n    if (iVar4 < 1) {\n        *(unaff_EBX + 3) = 0;\n    }\n    else {\n        while ((iVar4 = iVar4 + -1,  0 < iVar4 && (aiStack324[iVar4] == 0x20))) {\n            aiStack324[iVar4] = 0;\n        }\n        iVar8 = 0;\n        if (0 < iVar4) {\n            do {\n                if (aiStack324[iVar8] != 0x20) break;\n                iVar8 = iVar8 + 1;\n            } while (iVar8 < iVar4);\n        }\n        fcn.004495f8(unaff_EBX + 3, aiStack324 + iVar8);\n    }\n    *(unaff_EBX + 0x83) = 0;\n    *(unaff_EBX + 0x20d) = 0;\n    *(unaff_EBX + 0x88) = 0;\n    *(unaff_EBX + 0x20e) = 0;\n    *(unaff_EBX + 0x20f) = 0;\n    *(unaff_EBX + 0x85) = 0;\n    *(unaff_EBX + 0x215) = 0;\n    *(unaff_EBX + 0x84) = 0;\n    *(unaff_EBX + 0x211) = 0;\n    *(unaff_EBX + 0x216) = 0;\n    *(unaff_EBX + 0x217) = 0;\n    *(unaff_EBX + 0x86) = 0;\n    *(unaff_EBX + 0x219) = 0;\n    *(unaff_EBX + 0x212) = 0;\n    *(unaff_EBX + 0x213) = 0;\n    *(unaff_EBX + 0x87) = 0;\n    *(unaff_EBX + 0x21d) = 0;\n    *(unaff_EBX + 0x21a) = 0;\n    *(unaff_EBX + 0x21b) = 0;\n    *(unaff_EBX + 0x21e) = 0;\n    *(unaff_EBX + 0x21f) = 0;\n    if (iStack328 == 2) {\n        iVar4 = *unaff_EBX;\n        *(unaff_EBX + 0x83) = 1;\n        if (iVar4 == 4) {\n            *(unaff_EBX + 0x20f) = 1;\n            *(unaff_EBX + 0x20e) = 1;\n        }\n        else if (iVar4 == 5) {\n            uVar2 = unaff_EBX[1];\n            *(unaff_EBX + 0x20f) = 1;\n            if (uVar2 == 0) {\n                *(unaff_EBX + 0x215) = 1;\n                *(unaff_EBX + 0x85) = 1;\n            }\n            else if (uVar2 == 1) {\n                *(unaff_EBX + 0x215) = 1;\n                *(unaff_EBX + 0x211) = 1;\n                *(unaff_EBX + 0x84) = 1;\n            }\n            else if (1 < uVar2) {\n                *(unaff_EBX + 0x215) = 1;\n                *(unaff_EBX + 0x211) = 1;\n                *(unaff_EBX + 0x217) = 1;\n                *(unaff_EBX + 0x216) = 1;\n            }\n        }\n        else if (iVar4 == 6) {\n            *(unaff_EBX + 0x20f) = 1;\n            if (unaff_EBX[1] == 0) {\n                *(unaff_EBX + 0x215) = 1;\n                *(unaff_EBX + 0x211) = 1;\n                *(unaff_EBX + 0x219) = 1;\n                *(unaff_EBX + 0x86) = 1;\n            }\n            else if (unaff_EBX[1] == 1) {\n                *(unaff_EBX + 0x211) = 1;\n                *(unaff_EBX + 0x217) = 1;\n                *(unaff_EBX + 0x215) = 1;\n                *(unaff_EBX + 0x219) = 1;\n                *(unaff_EBX + 0x213) = 1;\n                *(unaff_EBX + 0x212) = 1;\n            }\n        }\n    }\n    else {\n        unaff_EBX[2] = uStack332 & 0xffff;\n        iVar4 = unaff_EBX[1];\n        *(unaff_EBX + 0x20d) = 1;\n        *(unaff_EBX + 0x21d) = 1;\n        if (iVar4 == 0) {\n            *(unaff_EBX + 0x87) = 1;\n        }\n        else if (iVar4 == 10) {\n            *(unaff_EBX + 0x21b) = 1;\n            *(unaff_EBX + 0x21a) = 1;\n        }\n        else if (iVar4 == 0x5a) {\n            *(unaff_EBX + 0x21b) = 1;\n            *(unaff_EBX + 0x21f) = 1;\n            *(unaff_EBX + 0x21e) = 1;\n        }\n    }\n    iStack32 = 0;\n    uStack24 = 0;\n    iStack8 = 0;\n    uVar5 = (**0x4592ac)(&iStack8);\n    pcVar6 = fcn.0040eeab(uVar5);\n    (*pcVar6)();\n    if (iStack8 == 1) {\n        *(unaff_EBX + 0x88) = 1;\n    }\n    pcVar6 = _sym.imp.KERNEL32.DLL_FreeLibrary;\n    cVar1 = *(unaff_EBX + 0x88);\n    uStack68 = 0;\n    puVar9 = auStack64;\n    for (iVar4 = 8; iVar4 != 0; iVar4 = iVar4 + -1) {\n        *puVar9 = 0;\n        puVar9 = puVar9 + 1;\n    }\n    if (cVar1 == '\\0') {\n        (**0x4591d4)(&uStack68);\n    }\n    else {\n        iStack20 = 0;\n        iStack12 = 0;\n        fcn.0040eed7();\n        if (iStack12 != 0) {\n            pcVar7 = fcn.0040eec1(&uStack68);\n            (*pcVar7)();\n        }\n        if (iStack20 != 0) {\n            (*pcVar6)(iStack20);\n        }\n    }\n    iVar3 = uStack68;\n    if (iVar3 == 0) {\n        unaff_EBX[0x89] = 1;\n    }\n    else if (iVar3 == 6) {\n        unaff_EBX[0x89] = 2;\n    }\n    else if (iVar3 == 9) {\n        unaff_EBX[0x89] = 3;\n    }\n    else {\n        unaff_EBX[0x89] = -(uStack68 & 0xffff);\n    }\n    if (iStack32 != 0) {\n        (*pcVar6)(iStack32);\n    }\n    return;\n}\n",
        "token_count": 1962
    },
    "0040eed7": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "link function at runtime on Windows"
        ],
        "decompiled_code": "\nvoid fcn.0040eed7(void)\n\n{\n    int32_t iVar1;\n    int32_t *unaff_ESI;\n    \n    if (unaff_ESI[2] == 0) {\n        iVar1 = (*_sym.imp.KERNEL32.DLL_LoadLibraryA)(0x45c5d8);\n        *unaff_ESI = iVar1;\n        if (iVar1 != 0) {\n            iVar1 = (*_sym.imp.KERNEL32.DLL_GetProcAddress)(iVar1, 0x45c5b4);\n            unaff_ESI[2] = iVar1;\n        }\n    }\n    return;\n}\n",
        "token_count": 138
    },
    "0040eefe": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "link function at runtime on Windows"
        ],
        "decompiled_code": "\nvoid fcn.0040eefe(void)\n\n{\n    int32_t iVar1;\n    int32_t *unaff_ESI;\n    \n    if (unaff_ESI[2] == 0) {\n        iVar1 = (*_sym.imp.KERNEL32.DLL_LoadLibraryA)(0x45c5d8);\n        *unaff_ESI = iVar1;\n        if (iVar1 != 0) {\n            iVar1 = (*_sym.imp.KERNEL32.DLL_GetProcAddress)(iVar1, 0x45c5c8);\n            unaff_ESI[2] = iVar1;\n        }\n    }\n    return;\n}\n",
        "token_count": 138
    },
    "0040ef59": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040ef59(int32_t lpLibFileName)\n\n{\n    int32_t *in_EAX;\n    int32_t *piVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    int32_t *unaff_EBX;\n    int32_t iVar4;\n    uint uVar5;\n    int32_t var_4h;\n    \n    *unaff_EBX = -1;\n    iVar4 = 0;\n    piVar1 = in_EAX;\n    do {\n        if (*piVar1 == 0) break;\n        iVar4 = iVar4 + 1;\n        piVar1 = piVar1 + 3;\n    } while (iVar4 < 0x40);\n    if (iVar4 == 0x40) {\n        uVar5 = 2;\n    }\n    else {\n        iVar2 = (*_sym.imp.KERNEL32.DLL_LoadLibraryA)(lpLibFileName);\n        piVar1 = in_EAX + iVar4 * 3;\n        *piVar1 = iVar2;\n        if (iVar2 != 0) {\n            pcVar3 = (*_sym.imp.KERNEL32.DLL_GetProcAddress)(iVar2, 0x45c5f4);\n            if (pcVar3 != NULL) {\n                lpLibFileName = 0;\n                var_4h = 0;\n                (*pcVar3)(&lpLibFileName, &var_4h);\n                piVar1[1] = lpLibFileName;\n                piVar1[2] = var_4h;\n                *unaff_EBX = iVar4;\n                return 0;\n            }\n            (*_sym.imp.KERNEL32.DLL_FreeLibrary)(*piVar1);\n            *piVar1 = 0;\n        }\n        uVar5 = 3;\n    }\n    return uVar5;\n}\n",
        "token_count": 399
    },
    "0040f005": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.0040f005(int32_t arg_8h, uint arg_ch, int32_t arg_10h, uint arg_14h, uint arg_18h, uint *arg_1ch, uint *arg_20h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t *arg_8h_00;\n    uint uVar3;\n    uint uVar4;\n    int32_t iVar5;\n    int32_t *piVar6;\n    int32_t iVar7;\n    float10 fVar8;\n    ulong uVar9;\n    code *var_10h;\n    int32_t *var_ch;\n    int32_t var_8h;\n    code *var_4h;\n    \n    *arg_20h = 0;\n    *arg_1ch = 0;\n    fcn.00418bb9(1);\n    var_4h = NULL;\n    var_10h = NULL;\n    var_8h = 0;\n    piVar6 = arg_8h + 8;\n    do {\n        if (var_4h != NULL) goto code_r0x0040f0b9;\n        if ((piVar6[-2] != 0) && (iVar7 = 0,  0 < piVar6[-1])) {\n            iVar5 = 0;\n            do {\n                iVar2 = fcn.004564ce(arg_ch, *(*piVar6 + iVar5));\n                pcVar1 = _sym.imp.KERNEL32.DLL_GetProcAddress;\n                if (iVar2 == 0) {\n                    iVar7 = *piVar6 + iVar7 * 0xc;\n                    if ((arg_10h < *(iVar7 + 4)) || (*(iVar7 + 8) < arg_10h)) {\n                        return 7;\n                    }\n                    var_4h = (*_sym.imp.KERNEL32.DLL_GetProcAddress)();\n                    var_10h = (*pcVar1)(piVar6[-2], 0x45c5e8);\n                    break;\n                }\n                iVar7 = iVar7 + 1;\n                iVar5 = iVar5 + 0xc;\n            } while (iVar7 < piVar6[-1]);\n        }\n        var_8h = var_8h + 1;\n        piVar6 = piVar6 + 3;\n    } while (var_8h < 0x40);\n    if (var_4h == NULL) {\n        uVar4 = 6;\n    }\n    else {\ncode_r0x0040f0b9:\n        iVar7 = 0;\n        arg_8h_00 = fcn.00449f7f();\n        piVar6 = arg_8h_00;\n        if (0 < arg_10h) {\n            do {\n                iVar5 = fcn.0040f269();\n                iVar5 = *(iVar5 + 8);\n                if (iVar5 == 2) {\n                    *piVar6 = 2;\n                    fcn.0040f269();\n                    uVar9 = fcn.004187bd();\n                    iVar5 = uVar9;\n                    piVar6[3] = uVar9 >> 0x20;\ncode_r0x0040f195:\n                    piVar6[2] = iVar5;\n                }\n                else if (iVar5 == 3) {\n                    *piVar6 = 3;\n                    fcn.0040f269();\n                    fVar8 = fcn.00418692();\n                    *(piVar6 + 2) = fVar8;\n                }\n                else {\n                    if (iVar5 != 4) {\n                        if (iVar5 == 7) {\n                            *piVar6 = 5;\n                            fcn.0040f269();\n                            iVar5 = fcn.00418850();\n                        }\n                        else {\n                            *piVar6 = 1;\n                            fcn.0040f269();\n                            iVar5 = fcn.00418733();\n                        }\n                        goto code_r0x0040f195;\n                    }\n                    *piVar6 = 4;\n                    fcn.0040f269();\n                    fcn.00418641();\n                    uVar4 = fcn.00416a25();\n                    iVar5 = fcn.00449fa0();\n                    iVar5 = fcn.00449f7f(iVar5 + 1);\n                    piVar6[2] = iVar5;\n                    fcn.0044a030(iVar5, uVar4);\n                    fcn.0044951c(uVar4);\n                }\n                iVar7 = iVar7 + 1;\n                piVar6 = piVar6 + 4;\n            } while (iVar7 < arg_10h);\n        }\n        var_ch = NULL;\n        (*var_4h)(arg_10h, arg_8h_00, &var_ch);\n        if (var_ch != NULL) {\n            iVar7 = *var_ch;\n            if (iVar7 == 2) {\n                fcn.00418c2c(var_ch[2], var_ch[3]);\n            }\n            else if (iVar7 == 3) {\n                fcn.00418c65(*(var_ch + 2));\n            }\n            else if (iVar7 == 4) {\n                uVar3 = fcn.004169d1(var_ch[2]);\n                uVar4 = uVar3;\n                fcn.00418c7e();\n                fcn.0044951c(uVar3, uVar4);\n            }\n            else if (iVar7 == 5) {\n                fcn.00418c4c();\n            }\n            else {\n                fcn.00418bb9();\n            }\n            piVar6 = arg_8h_00;\n            if (0 < arg_10h) {\n                do {\n                    if (*piVar6 == 4) {\n                        fcn.0044a128(piVar6[2]);\n                    }\n                    arg_10h = arg_10h + -1;\n                    piVar6 = piVar6 + 4;\n                } while (arg_10h != 0);\n            }\n            fcn.0044a128(arg_8h_00);\n            if (var_10h != NULL) {\n                (*var_10h)(var_ch);\n            }\n        }\n        uVar4 = 0;\n    }\n    return uVar4;\n}\n",
        "token_count": 1384
    },
    "0040f388": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.0040f388(uint *param_1, uchar param_2)\n\n{\n    uint *in_EAX;\n    int32_t iVar1;\n    int32_t *unaff_ESI;\n    int32_t *unaff_EDI;\n    \n    if (*unaff_ESI != 0) {\n        *(unaff_ESI + 6) = param_2;\n        if (*unaff_EDI == 0) {\n            iVar1 = fcn.00416a25(*in_EAX);\n            *unaff_EDI = iVar1;\n        }\n        iVar1 = fcn.00448bba(*unaff_ESI, 0, *unaff_EDI, in_EAX[1], *param_1, unaff_ESI[4] | unaff_ESI[5], unaff_ESI[1], \n                             unaff_ESI[2]);\n        unaff_ESI[3] = iVar1;\n        if (0 < iVar1) {\n            unaff_ESI[5] = 0;\n            if ((*(unaff_ESI + 6) != '\\0') && (*unaff_ESI[1] == unaff_ESI[1][1])) {\n                unaff_ESI[5] = 0x410;\n            }\n            *param_1 = *(unaff_ESI[1] + 4);\n            return unaff_ESI[3];\n        }\n    }\n    return 0;\n}\n",
        "token_count": 315
    },
    "0040f475": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040f475(uint *arg_8h, uint arg_ch)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    int32_t in_ECX;\n    int32_t unaff_EBX;\n    \n    if (unaff_EBX < *(in_ECX + 0xc)) {\n        if (*in_EAX == 0) {\n            iVar1 = fcn.00416a25(*arg_8h);\n            *in_EAX = iVar1;\n        }\n        fcn.00449298(*in_EAX, *(in_ECX + 4), *(in_ECX + 0xc), unaff_EBX, &arg_8h);\n        uVar2 = fcn.004169d1(arg_8h);\n        fcn.00416e83(arg_ch, uVar2);\n        fcn.0044951c(uVar2);\n        fcn.004492f1(arg_8h);\n    }\n    else {\n        fcn.004171ba();\n    }\n    return;\n}\n",
        "token_count": 236
    },
    "0040f4e8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.0040f4e8(int32_t *arg_8h, uint arg_ch, uint arg_10h, int32_t arg_14h, uint arg_18h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint var_28h;\n    uint var_1ch;\n    uint var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_1h;\n    \n    if (*arg_8h == 0) {\n        var_ch = 0;\n    }\n    else {\n        var_1h._0_1_ = '\\0';\n        var_ch = 0;\n        fcn.004171ba();\n        if (arg_14h == 0) {\n            var_1h._0_1_ = '\\x01';\n        }\n        var_10h = 0;\n        fcn.00416d61();\n        var_8h = 0;\n        for (; (var_1h != '\\0' || (arg_14h != 0)); arg_14h = arg_14h + -1) {\n            iVar1 = fcn.0040f388(&var_10h, 1);\n            if (iVar1 == 0) break;\n            uVar2 = fcn.0041744d(&var_28h);\n            fcn.00416ebe(uVar2);\n            fcn.0044951c(var_28h);\n            iVar1 = fcn.0040f5e8(arg_8h, arg_ch, &var_8h);\n            var_ch = var_ch + iVar1;\n            fcn.00416ebe(&var_1ch);\n        }\n        if (var_8h != 0) {\n            fcn.0044951c(var_8h);\n        }\n        uVar2 = fcn.0041744d(&var_28h);\n        fcn.00416ebe(uVar2);\n        fcn.0044951c(var_28h);\n        fcn.0044951c(var_1ch);\n    }\n    return var_ch;\n}\n",
        "token_count": 496
    },
    "0040f5e8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040f5e8(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t in_EAX;\n    int16_t *piVar1;\n    ushort *puVar2;\n    int32_t iVar3;\n    uint arg_8h_00;\n    uint var_20h;\n    uint var_14h;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    fcn.00416d61();\n    var_4h = 0;\n    var_8h = 0;\n    fcn.00416e83();\n    iVar3 = *(in_EAX + 4);\n    if (0 < iVar3) {\n        do {\n            piVar1 = fcn.00416e60();\n            if (*piVar1 == 0x5c) {\n                var_4h = var_4h + 1;\n                if (var_4h != iVar3) {\n                    piVar1 = fcn.00416e60();\n                    if (*piVar1 != 0x5c) {\n                        piVar1 = fcn.00416e60();\n                        if (*piVar1 != 0x24) {\n                            puVar2 = fcn.00416e60();\n                            iVar3 = fcn.0044a199(*puVar2);\n                            if (iVar3 != 0) {\n                                var_4h = var_4h + -1;\n                                fcn.0040f71c(0);\n                                goto code_r0x0040f675;\n                            }\n                            goto code_r0x0040f6cf;\n                        }\n                    }\n                    goto code_r0x0040f6b7;\n                }\n            }\n            else {\n                piVar1 = fcn.00416e60();\n                if (*piVar1 == 0x24) {\n                    iVar3 = fcn.0040f71c(1);\n                    if (-1 < iVar3) {\ncode_r0x0040f675:\n                        fcn.0040f475(arg_ch, &var_14h);\n                        fcn.00416ebe(&var_14h);\n                        var_8h = var_8h + 1;\n                        goto code_r0x0040f6cf;\n                    }\n                }\ncode_r0x0040f6b7:\n                var_4h = var_4h + 1;\n                puVar2 = fcn.00416e60();\n                fcn.00416f01(*puVar2);\n            }\ncode_r0x0040f6cf:\n            iVar3 = *(in_EAX + 4);\n        } while (var_4h < iVar3);\n    }\n    arg_8h_00 = fcn.0041744d(&var_20h);\n    fcn.00416ebe(arg_8h_00);\n    fcn.0044951c(var_20h);\n    if (var_8h == 0) {\n        var_8h = 1;\n    }\n    fcn.0044951c(var_14h);\n    return var_8h;\n}\n",
        "token_count": 687
    },
    "0040f71c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040f71c(uint arg_8h)\n\n{\n    bool bVar1;\n    bool bVar2;\n    int32_t *in_EAX;\n    ushort *puVar3;\n    int32_t iVar4;\n    uint uVar5;\n    int32_t unaff_EDI;\n    ulong uVar6;\n    uint var_14h;\n    int32_t var_8h;\n    uint var_4h;\n    \n    fcn.00416d61();\n    var_8h = *in_EAX;\n    *in_EAX = var_8h + 1;\n    if (*(unaff_EDI + 4) <= var_8h + 1) {\n        *in_EAX = var_8h;\n        fcn.0044951c(var_14h);\n        return 0xffffffff;\n    }\n    if (arg_8h == '\\0') {\ncode_r0x0040f75e:\n        bVar2 = false;\n    }\n    else {\n        uVar6 = fcn.00416e60();\n        if (*uVar6 != 0x7b) goto code_r0x0040f75e;\n        bVar2 = true;\n        *in_EAX = (uVar6 >> 0x20) + 1;\n    }\n    fcn.00416e83(&var_14h, 0x45bfe0);\n    bVar1 = false;\n    while (*in_EAX < *(unaff_EDI + 4)) {\n        puVar3 = fcn.00416e60();\n        iVar4 = fcn.0044a199(*puVar3);\n        if (iVar4 == 0) break;\n        *in_EAX = *in_EAX + 1;\n        bVar1 = true;\n        fcn.00416e60();\n        fcn.00416f01();\n    }\n    var_4h = fcn.00449794(var_14h);\n    if (bVar1) {\n        uVar5 = var_4h;\n        if (!bVar2) goto code_r0x0040f7ea;\n        if (*in_EAX != *(unaff_EDI + 4)) {\n            uVar6 = fcn.00416e60();\n            if (*uVar6 == 0x7d) {\n                *in_EAX = (uVar6 >> 0x20) + 1;\n                uVar5 = var_4h;\n                goto code_r0x0040f7ea;\n            }\n        }\n    }\n    *in_EAX = var_8h;\n    uVar5 = 0xffffffff;\ncode_r0x0040f7ea:\n    fcn.0044951c(var_14h);\n    return uVar5;\n}\n",
        "token_count": 608
    },
    "0040fa7c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040fa7c(int32_t arg_8h, int32_t arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint hWnd)\n\n{\n    uchar auStackY8712 [8192];\n    uint lpCaption;\n    uint uStackY60;\n    uchar *puStackY56;\n    uint uStackY52;\n    \n    fcn.0044c510();\n    (*_sym.imp.KERNEL32.DLL_GetModuleHandleW)();\n    (*_sym.imp.USER32.dll_LoadStringW)();\n    if (*(arg_8h + 3) == '\\0') {\n        if (arg_ch == 0) {\n            fcn.00449872(&stack0xffffddf8, 0x45c95c, arg_10h);\n        }\n        else {\n            fcn.00449872(&stack0xffffddf8, 0x45c92c, arg_10h);\n        }\n        fcn.004495ce();\n        fcn.004495ce();\n        uStackY52 = 0x40fb34;\n        fcn.004495ce();\n        puStackY56 = &stack0xffffddf8;\n        uStackY52 = 0x45c910;\n        uStackY60 = 0x40fb45;\n        fcn.004495ce();\n        (*_sym.imp.USER32.dll_MessageBoxW)();\n    }\n    else {\n        uStackY52 = 0x40faca;\n        fcn.0044a48f(0x45c974, arg_ch);\n    }\n    return;\n}\n",
        "token_count": 349
    },
    "0040fb68": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0040fb68(uint param_1, uint param_2, uint param_3)\n\n{\n    uint uVar1;\n    int32_t unaff_ESI;\n    \n    if (*(unaff_ESI + 4) == 0) {\n        uVar1 = fcn.00449614(0x10);\n        *(unaff_ESI + 4) = uVar1;\n        *(unaff_ESI + 8) = uVar1;\n    }\n    else if (***(unaff_ESI + 8) == 0) {\n        fcn.0044951c(**(unaff_ESI + 8));\n        *(unaff_ESI + 0xc) = *(unaff_ESI + 0xc) + -1;\n    }\n    else {\n        uVar1 = fcn.00449614(0x10);\n        *(*(unaff_ESI + 8) + 0xc) = uVar1;\n        *(unaff_ESI + 8) = uVar1;\n    }\n    *(*(unaff_ESI + 8) + 0xc) = 0;\n    uVar1 = fcn.004161b7(param_2);\n    **(unaff_ESI + 8) = uVar1;\n    *(*(unaff_ESI + 8) + 4) = param_1;\n    *(*(unaff_ESI + 8) + 8) = param_3;\n    *(unaff_ESI + 0xc) = *(unaff_ESI + 0xc) + 1;\n    return;\n}\n",
        "token_count": 348
    },
    "0040fbd5": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0040fbd5(uint param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t unaff_ESI;\n    \n    if (*(unaff_ESI + 0xc) != 0) {\n        iVar1 = fcn.0044985c(**(unaff_ESI + 8));\n        iVar2 = fcn.0044985c(param_1);\n        iVar1 = fcn.00449614((iVar1 + iVar2) * 2 + 2);\n        fcn.004495f8(iVar1, **(unaff_ESI + 8));\n        fcn.004495ce(iVar1, param_1);\n        uVar3 = fcn.0044985c(iVar1);\n        if (0xfff < uVar3) {\n            *(iVar1 + 0x1ffe) = 0;\n        }\n        fcn.0044951c(**(unaff_ESI + 8));\n        **(unaff_ESI + 8) = iVar1;\n    }\n    return;\n}\n",
        "token_count": 245
    },
    "0040fdb0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint __cdecl fcn.0040fdb0(int32_t arg_8h)\n\n{\n    int16_t iVar1;\n    bool bVar2;\n    char cVar3;\n    int32_t iVar4;\n    uint uVar5;\n    int32_t in_EDX;\n    int32_t unaff_EBX;\n    int32_t iVar6;\n    uint32_t uVar7;\n    int16_t iVar8;\n    uint var_8h;\n    uint var_1h;\n    \n    for (iVar4 = 0; (iVar1 = *(in_EDX + iVar4 * 2),  iVar1 == 0x20 || (iVar1 == 9)); iVar4 = iVar4 + 1) {\n    }\n    iVar1 = *(in_EDX + iVar4 * 2);\n    iVar8 = 0x22;\n    if ((iVar1 == 0x22) || (iVar8 = 0x27,  iVar1 == 0x27)) {\n        bVar2 = true;\n    }\n    else {\n        if (iVar1 != 0x3c) {\n            return 0;\n        }\n        iVar8 = 0x3e;\n        bVar2 = false;\n    }\n    iVar6 = 0;\n    while( true ) {\n        iVar4 = iVar4 + 1;\n        iVar1 = *(in_EDX + iVar4 * 2);\n        if ((iVar1 == iVar8) || (iVar1 == 0)) break;\n        *(unaff_EBX + iVar6 * 2) = iVar1;\n        iVar6 = iVar6 + 1;\n    }\n    if (*(in_EDX + iVar4 * 2) != iVar8) {\n        return 0;\n    }\n    *(unaff_EBX + iVar6 * 2) = 0;\n    uVar5 = fcn.004161b7();\n    fcn.0040ff05();\n    fcn.0040fed6();\n    if (bVar2) {\n        cVar3 = fcn.00414fbc();\n        if (cVar3 == '\\0') {\n            iVar4 = *(arg_8h + 0x40);\n            while (iVar4 = iVar4 + -1,  -1 < iVar4) {\n                fcn.004495f8();\n                fcn.004495ce();\n                cVar3 = fcn.00414fbc();\n                if (cVar3 != '\\0') break;\n                fcn.004495f8();\n            }\n        }\n    }\n    else {\n        uVar7 = 0;\n        if (*(arg_8h + 0x40) != 0) {\n            do {\n                fcn.004495f8();\n                fcn.004495ce();\n                cVar3 = fcn.00414fbc();\n                if (cVar3 != '\\0') break;\n                fcn.004495f8();\n                uVar7 = uVar7 + 1;\n            } while (uVar7 < *(arg_8h + 0x40));\n        }\n    }\n    fcn.0044951c(uVar5);\n    return 1;\n}\n",
        "token_count": 699
    },
    "0040ff3e": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0040ff3e(void)\n\n{\n    int16_t iVar1;\n    int16_t *in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar3 = 0;\n    if (in_EAX != NULL) {\n        if ((*in_EAX == 0x23) && (iVar2 = fcn.004498e1(in_EAX, 0x45c8fc, 8),  iVar2 != 0)) {\n            iVar3 = 3;\n            in_EAX = in_EAX + 1;\n        }\n        for (; *in_EAX != 0; in_EAX = in_EAX + 1) {\n            iVar1 = *in_EAX;\n            if (iVar1 == 0x22) {\n                if (iVar3 == 2) {\ncode_r0x0040ff94:\n                    iVar3 = 0;\n                }\n                else if (iVar3 == 0) {\n                    iVar3 = 2;\n                }\n            }\n            else if (iVar1 == 0x27) {\n                if (iVar3 == 1) goto code_r0x0040ff94;\n                if (iVar3 == 0) {\n                    iVar3 = 1;\n                }\n            }\n            else if ((iVar1 == 0x3b) && ((iVar3 == 0 || (iVar3 == 3)))) {\n                *in_EAX = 0;\n                return 1;\n            }\n        }\n        if ((iVar3 == 0) || (iVar3 == 3)) {\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 356
    },
    "0040fff3": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_30h\n\nuint __cdecl fcn.0040fff3(uint arg_8h, uchar *arg_ch)\n\n{\n    uchar in_AL;\n    int32_t iVar1;\n    uint uVar2;\n    int32_t in_ECX;\n    int16_t *unaff_ESI;\n    uint var_854h;\n    uint var_64ch;\n    uint var_44ch;\n    uint var_24ch;\n    uint var_4ch;\n    uint var_48h;\n    uint var_40h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_1ch;\n    uint var_18h;\n    uint var_10h;\n    \n    *(in_ECX + 3) = in_AL;\n    if (*unaff_ESI == 0) {\n        *arg_ch = 1;\n        fcn.00449b00(&var_4ch, 0, 0x4c);\n        var_48h = 0;\n        var_4ch = 0x4c;\n        var_1ch = 0x45c8e0;\n        var_2ch = 0x104;\n        var_40h = 0x45c858;\n        var_34h = 1;\n        var_18h = 0x1804;\n        var_10h = 0x45c850;\n        iVar1 = (*_sym.imp.comdlg32.dll_GetOpenFileNameW)(&var_4ch);\n        if (iVar1 == 0) {\n            return 0;\n        }\n    }\n    fcn.00415029(unaff_ESI);\n    fcn.00415052(unaff_ESI, unaff_ESI);\n    fcn.0044a246(unaff_ESI, &var_854h, &var_44ch, &var_24ch, &var_64ch);\n    uVar2 = fcn.0040fc40(unaff_ESI);\n    uVar2 = fcn.00410674(in_ECX, unaff_ESI, uVar2);\n    return uVar2;\n}\n",
        "token_count": 473
    },
    "00410305": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nbool __cdecl fcn.00410305(uchar *arg_8h, uchar *arg_ch, int32_t *arg_10h, uint arg_14h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    int32_t *piVar4;\n    uint arg_ch_00;\n    int16_t *arg_8h_00;\n    uint32_t uVar5;\n    uchar auStackY8200 [8152];\n    uint uStackY48;\n    uchar *puVar6;\n    int16_t *piVar7;\n    int16_t *arg_18h;\n    uchar *hWnd;\n    int32_t var_4h;\n    \n    fcn.0044c510();\n    if (*arg_8h_00 != 0x23) {\n        return 3;\n    }\n    iVar2 = fcn.004498e1(arg_8h_00, 0x45c754, 0xb);\n    if (iVar2 == 0) {\n        *arg_8h = 1;\n    }\n    else {\n        iVar2 = fcn.004498e1(arg_8h_00, 0x45c738, 0xd);\n        if (iVar2 != 0) {\n            iVar2 = fcn.004498e1(arg_8h_00, 0x45c71c, 0xd);\n            if (iVar2 == 0) {\n                uVar5 = 0;\n                if (*(arg_8h + 0x1c) != 0) {\n                    do {\n                        puVar3 = fcn.00421a8a();\n                        iVar2 = fcn.00449521(*puVar3, arg_ch);\n                        if (iVar2 == 0) {\n                            piVar4 = fcn.00421a8a();\n                            return ((*piVar4 < 2) - 1U & 3) + 1;\n                        }\n                        uVar5 = uVar5 + 1;\n                    } while (uVar5 < *(arg_8h + 0x1c));\n                }\n                return true;\n            }\n            iVar2 = fcn.004498e1(arg_8h_00, 0x45c8fc, 8);\n            if (iVar2 == 0) {\n                cVar1 = fcn.0040fdb0(arg_8h);\n                if (cVar1 == '\\x01') {\n                    puVar6 = &stack0xffffdff8;\n                    piVar7 = arg_8h_00;\n                    arg_ch_00 = fcn.0040fc40(&stack0xffffdff8);\n                    uStackY48 = 0x41040c;\n                    cVar1 = fcn.004100b2(&stack0xffffdff8, arg_ch_00, puVar6, arg_ch, piVar7);\n                    return cVar1 != '\\0';\n                }\n                arg_18h = NULL;\n                iVar2 = 0x45c6f0;\n                puVar6 = arg_ch;\n                arg_ch = *arg_10h;\n                piVar7 = arg_8h_00;\n                hWnd = arg_8h;\n            }\n            else {\n                iVar2 = fcn.004498e1(arg_8h_00, 0x45c6d0, 0xf);\n                if ((iVar2 != 0) && (iVar2 = fcn.004498e1(arg_8h_00, 0x45c6c8, 3),  iVar2 != 0)) {\n                    return true;\n                }\n                var_4h = 1;\n                cVar1 = fcn.0041435f();\n                if (cVar1 != '\\0') {\n                    do {\n                        *arg_10h = *arg_10h + 1;\n                        fcn.0040fed6();\n                        fcn.0040ff05();\n                        iVar2 = fcn.004498e1(arg_8h_00, 0x45c6d0, 0xf);\n                        if ((iVar2 == 0) || (iVar2 = fcn.004498e1(arg_8h_00, 0x45c6c8, 3),  iVar2 == 0)) {\n                            var_4h = var_4h + 1;\n                        }\n                        else {\n                            iVar2 = fcn.004498e1(arg_8h_00, 0x45c66c, 0xd);\n                            if (((iVar2 == 0) || (iVar2 = fcn.004498e1(arg_8h_00, 0x45c664, 3),  iVar2 == 0)) &&\n                               (var_4h = var_4h + -1,  var_4h < 1)) {\n                                return true;\n                            }\n                        }\n                        cVar1 = fcn.0041435f();\n                    } while (cVar1 != '\\0');\n                    if (var_4h < 1) {\n                        return true;\n                    }\n                }\n                hWnd = NULL;\n                piVar7 = 0x45c688;\n                iVar2 = *arg_10h;\n                puVar6 = arg_8h;\n                arg_18h = arg_8h_00;\n            }\n            fcn.0040fa7c(puVar6, arg_ch, iVar2, piVar7, arg_18h, hWnd);\n            return false;\n        }\n        arg_8h[1] = 1;\n    }\n    return true;\n}\n",
        "token_count": 1235
    },
    "00410526": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00410526(uint arg_8h, uint32_t *arg_ch, uint32_t arg_10h)\n\n{\n    char cVar1;\n    uchar uVar2;\n    uchar uVar3;\n    uint32_t uVar4;\n    bool bVar5;\n    uint uVar6;\n    int16_t iVar7;\n    int32_t extraout_ECX;\n    int32_t extraout_EDX;\n    uint32_t uVar8;\n    int16_t aiStackY8196 [2048];\n    uint var_1000h;\n    uint uStackY36;\n    uint uStackY32;\n    uint uStackY28;\n    uint uStackY24;\n    \n    fcn.0044c510();\n    if (*(extraout_ECX + 2) == '\\0') {\n        if (arg_10h <= *arg_ch) {\n            return 0;\n        }\n        uVar8 = 0;\n        bVar5 = true;\n        do {\n            if ((0xffe < uVar8) || (!bVar5)) break;\n            uVar4 = *arg_ch;\n            cVar1 = *(uVar4 + extraout_EDX);\n            if ((cVar1 == '\\r') || (cVar1 == '\\n')) {\n                bVar5 = false;\n            }\n            else {\n                *(&fcn.00410526::var_1000h + uVar8) = cVar1;\n                uVar8 = uVar8 + 1;\n                *arg_ch = uVar4 + 1;\n            }\n        } while (*arg_ch < arg_10h);\n        *(&fcn.00410526::var_1000h + uVar8) = 0;\n        while (*arg_ch < arg_10h) {\n            cVar1 = *(*arg_ch + extraout_EDX);\n            if ((cVar1 != '\\r') && (cVar1 != '\\n')) break;\n            *arg_ch = *arg_ch + 1;\n        }\n        uStackY24 = 0x410657;\n        uVar6 = fcn.004169d1(&fcn.00410526::var_1000h);\n        uStackY28 = arg_8h;\n        uStackY32 = 0x410662;\n        uStackY24 = uVar6;\n        fcn.004495f8();\n        uStackY36 = 0x410668;\n        uStackY32 = uVar6;\n        fcn.0044951c();\n    }\n    else {\n        if (arg_10h <= *arg_ch + 1) {\n            return 0;\n        }\n        uVar8 = 0;\n        bVar5 = true;\n        do {\n            if ((0xffe < uVar8) || (!bVar5)) break;\n            uVar4 = *arg_ch;\n            uVar2 = *(uVar4 + extraout_EDX);\n            *arg_ch = uVar4 + 1;\n            uVar3 = *(uVar4 + 1 + extraout_EDX);\n            *arg_ch = uVar4 + 2;\n            iVar7 = CONCAT11(uVar3, uVar2);\n            if ((iVar7 == 0xd) || (iVar7 == 10)) {\n                bVar5 = false;\n            }\n            else {\n                *(&stack0xffffdffc + uVar8 * 2) = iVar7;\n                uVar8 = uVar8 + 1;\n            }\n        } while (*arg_ch + 1 < arg_10h);\n        *(&stack0xffffdffc + uVar8 * 2) = 0;\n        while (*arg_ch + 1 < arg_10h) {\n            uVar8 = *arg_ch;\n            iVar7 = CONCAT11(*(uVar8 + 1 + extraout_EDX), *(uVar8 + extraout_EDX));\n            if ((iVar7 != 0xd) && (iVar7 != 10)) break;\n            *arg_ch = uVar8 + 2;\n        }\n        uStackY24 = arg_8h;\n        uStackY28 = 0x4105de;\n        fcn.004495f8();\n    }\n    return 1;\n}\n",
        "token_count": 920
    },
    "00410674": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.00410674(int32_t arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uchar uVar1;\n    char cVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t *extraout_ECX;\n    unkuint3 unaff_EBX;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    int16_t iStackY8222;\n    uchar auStackY8220 [8128];\n    uint uStackY92;\n    uint uStackY88;\n    uchar *puStackY84;\n    uint uStackY80;\n    uint var_18h;\n    uint var_ch;\n    uint var_8h;\n    uchar auStack8 [3];\n    uint var_1h;\n    \n    _auStack8 = 0x410681;\n    fcn.0044c510();\n    auStack8 = unaff_EBX & 0xffff;\n    _auStack8 = CONCAT13(1, auStack8);\n    var_ch = unaff_EDI;\n    var_8h = unaff_ESI;\n    iVar3 = fcn.004430a9(arg_ch, 0x45bfe0);\n    if (iVar3 == 0) {\n        iVar3 = fcn.004435ef(0x45c634, &fcn.00410674::arg_ch, &fcn.00410674::var_8h);\n        if (iVar3 == 0) {\n            *(arg_8h + 2) = 1;\n            var_ch = 2;\n        }\n        else {\n            iVar3 = fcn.004435ef(0x45c614, &fcn.00410674::arg_ch, &fcn.00410674::var_8h);\n            if (iVar3 != 0) {\n                if (&fcn.00410674::var_8h != NULL) {\n                    fcn.0044acf5(&fcn.00410674::var_8h);\n                }\n                goto code_r0x0041070c;\n            }\n        }\n        do {\n            cVar2 = fcn.00410526(&stack0xffffdfe4, &fcn.00410674::var_ch, var_8h);\n            if (cVar2 == '\\0') break;\n            cVar2 = fcn.0040ff3e();\n            if (cVar2 == '\\0') {\n                _auStack8 = _auStack8 & 0xffffff;\n                break;\n            }\n            fcn.0040ff05();\n            fcn.0040fed6();\n            uVar1 = 0;\n            iVar3 = fcn.0044985c();\n            if (((2 < iVar3) && (iVar5 = fcn.0044a22c(),  iVar5 != 0)) && (*(&stack0xffffdfe2 + iVar3 * 2) == 0x5f)) {\n                *(&stack0xffffdfe2 + iVar3 * 2) = 0;\n                uVar1 = 1;\n            }\n            if (auStack8[2] == '\\x01') {\n                fcn.0040fbd5();\n            }\n            else {\n                uStackY80 = 0x4107ed;\n                iVar3 = fcn.0041084e(arg_8h, arg_ch, &fcn.00410674::var_ch, var_8h);\n                if (iVar3 == 0) {\n                    _auStack8 = _auStack8 & 0xffffff;\n                }\n                else if ((1 < iVar3) && (iVar3 < 4)) {\n                    uStackY80 = arg_10h;\n                    puStackY84 = &stack0xffffdfe4;\n                    uStackY88 = 0;\n                    uStackY92 = 0x41080e;\n                    fcn.0040fb68();\n                }\n            }\n            auStack8 = CONCAT12(uVar1, auStack8._0_2_);\n            uVar4 = _auStack8 & 0xff000000;\n            _auStack8 = uVar4 | auStack8;\n            var_1h._0_1_ = uVar4 >> 0x18;\n        } while (var_1h == '\\x01');\n        uVar4 = fcn.0044a128(arg_ch);\n        if (&fcn.00410674::var_8h != NULL) {\n            uVar4 = fcn.0044acf5(&fcn.00410674::var_8h);\n        }\n        uVar4 = uVar4 & 0xffffff00 | _auStack8 >> 0x18;\n    }\n    else {\n        if (*extraout_ECX != 3) {\n            *extraout_ECX = 1;\n            uVar4 = fcn.004100b2(arg_ch, arg_10h, arg_ch, 0x45bfe0, 0);\n            return uVar4;\n        }\ncode_r0x0041070c:\n        uVar4 = fcn.0041461b(0x66, 0x68, 0, *(arg_8h + 3));\n        uVar4 = uVar4 & 0xffffff00;\n    }\n    return uVar4;\n}\n",
        "token_count": 1231
    },
    "00410d91": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00410d91(int32_t arg_8h, uint arg_ch)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t iVar5;\n    int32_t unaff_EBX;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    if ((unaff_EBX != 0) || (*(arg_8h + 9) != '\\0')) {\n        var_8h = 0;\n        var_ch = 0;\n        iVar3 = (*_sym.imp.KERNEL32.DLL_GetCurrentThreadId)();\n        pcVar1 = _sym.imp.USER32.dll_AttachThreadInput;\n        if (arg_ch == '\\0') {\n            if ((unaff_EBX != 0) &&\n               ((*_sym.imp.USER32.dll_AttachThreadInput)(iVar3, *0x47e7b0, 0),  *0x47e7b4 != *0x47e7b0)) {\n                (*pcVar1)(*0x47e7b4, *0x47e7b0, 0);\n            }\n            (*pcVar1)(iVar3, *0x47e7b4, 0);\n        }\n        else {\n            uVar4 = (*_sym.imp.USER32.dll_GetForegroundWindow)(0);\n            pcVar1 = _sym.imp.USER32.dll_GetWindowThreadProcessId;\n            *0x47e7b4 = (*_sym.imp.USER32.dll_GetWindowThreadProcessId)(uVar4);\n            pcVar2 = _sym.imp.USER32.dll_AttachThreadInput;\n            iVar5 = (*_sym.imp.USER32.dll_AttachThreadInput)(iVar3, *0x47e7b4, 1);\n            if (unaff_EBX != 0) {\n                *0x47e7b0 = (*pcVar1)();\n                if (*0x47e7b4 != *0x47e7b0) {\n                    var_8h = (*pcVar2)(*0x47e7b4, *0x47e7b0, 1);\n                }\n                var_ch = (*pcVar2)(iVar3, *0x47e7b0, 1);\n            }\n            if ((((iVar5 == 0) && (var_8h == 0)) && (var_ch == 0)) && ((iVar3 == *0x47e7b4 && (*0x47e7b4 == *0x47e7b0)))\n               ) {\n                *(arg_8h + 0x248) = 0;\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 594
    },
    "00410e88": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00410e88(uint bVk, uint bScan, uint dwExtraInfo)\n\n{\n    int32_t in_EAX;\n    code *pcVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint var_1ch;\n    uint var_18h;\n    \n    fcn.004122af();\n    if (*(in_EAX + 0x240) == 0) {\n        (*_sym.imp.USER32.dll_keybd_event)(bVk, bScan);\n    }\n    else {\n        puVar3 = &var_18h;\n        for (iVar2 = 6; iVar2 != 0; iVar2 = iVar2 + -1) {\n            *puVar3 = 0;\n            puVar3 = puVar3 + 1;\n        }\n        var_18h._0_2_ = bVk;\n        var_18h._2_2_ = bScan;\n        var_1ch = 1;\n        pcVar1 = fcn.00412299(1, &var_1ch, 0x1c);\n        (*pcVar1)();\n    }\n    return;\n}\n",
        "token_count": 261
    },
    "00411098": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00411098(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    code *pcVar2;\n    uint16_t uVar3;\n    uint32_t in_EAX;\n    uchar auStack256 [12];\n    uchar uStack244;\n    uchar uStack243;\n    uchar uStack242;\n    uchar uStack169;\n    uchar uStack100;\n    \n    if ((in_EAX & 0x200) != 0) {\n        *(param_1 + 0x244) = *(param_1 + 0x244) | 8;\n    }\n    if ((in_EAX & 0x400) != 0) {\n        *(param_1 + 0x244) = *(param_1 + 0x244) | 1;\n    }\n    if ((in_EAX & 0x100) != 0) {\n        *(param_1 + 0x244) = *(param_1 + 0x244) | 2;\n    }\n    uVar1 = *(param_1 + 0x244);\n    if (((uVar1 & 8) != 0) && ((uVar1 & 0x800) != 0)) {\n        *(param_1 + 0x244) = uVar1 ^ 8;\n    }\n    uVar1 = *(param_1 + 0x244);\n    if (((uVar1 & 1) != 0) && ((uVar1 & 0x100) != 0)) {\n        *(param_1 + 0x244) = uVar1 ^ 1;\n    }\n    uVar1 = *(param_1 + 0x244);\n    if (((uVar1 & 2) != 0) && ((uVar1 & 0x600) != 0)) {\n        *(param_1 + 0x244) = uVar1 ^ 2;\n    }\n    uVar1 = *(param_1 + 0x244);\n    if (((uVar1 & 0x10) != 0) && ((uVar1 & 0x1000) != 0)) {\n        *(param_1 + 0x244) = uVar1 ^ 0x10;\n    }\n    pcVar2 = _sym.imp.USER32.dll_GetAsyncKeyState;\n    if (*(param_1 + 0x248) != 0) {\n        (*_sym.imp.USER32.dll_GetKeyboardState)(auStack256);\n        uVar1 = *(param_1 + 0x244);\n        if ((uVar1 & 0x800) == 0) {\n            uStack243 = 0;\n        }\n        if ((uVar1 & 0x100) == 0) {\n            uStack242 = 0;\n        }\n        if ((uVar1 & 0x200) == 0) {\n            uStack244 = 0;\n            uStack100 = 0;\n        }\n        if ((uVar1 & 0x400) == 0) {\n            uStack244 = 0;\n            uStack100 = 0;\n        }\n        if ((uVar1 & 0x1000) == 0) {\n            uStack169 = 0;\n        }\n        (*_sym.imp.USER32.dll_SetKeyboardState)(&stack0xfffffefc);\n        return;\n    }\n    uVar3 = (*_sym.imp.USER32.dll_GetAsyncKeyState)(0x11);\n    if ((((uVar3 & 0x8000) != 0) || (uVar3 = (*_sym.imp.USER32.dll_GetKeyState)(0x11),  (uVar3 & 0x8000) != 0)) &&\n       ((*(param_1 + 0x244) & 0x800) == 0)) {\n        fcn.00411aac(0);\n    }\n    uVar3 = (*pcVar2)(0x12);\n    if ((((uVar3 & 0x8000) != 0) || (uVar3 = (*_sym.imp.USER32.dll_GetKeyState)(0x12),  (uVar3 & 0x8000) != 0)) &&\n       ((*(param_1 + 0x245) & 1) == 0)) {\n        fcn.00411aac(0);\n    }\n    uVar3 = (*pcVar2)(*(param_1 + 0x254));\n    if ((((uVar3 & 0x8000) != 0) ||\n        (uVar3 = (*_sym.imp.USER32.dll_GetKeyState)(*(param_1 + 0x254)),  (uVar3 & 0x8000) != 0)) &&\n       ((*(param_1 + 0x245) & 2) == 0)) {\n        fcn.00411aac(0);\n    }\n    uVar3 = (*pcVar2)(0xa1);\n    if ((((uVar3 & 0x8000) != 0) || (uVar3 = (*_sym.imp.USER32.dll_GetKeyState)(0xa1),  (uVar3 & 0x8000) != 0)) &&\n       ((*(param_1 + 0x245) & 4) == 0)) {\n        fcn.00411aac(0);\n    }\n    uVar3 = (*pcVar2)(0x5b);\n    if (((uVar3 & 0x8000) == 0) && (uVar3 = (*_sym.imp.USER32.dll_GetKeyState)(0x5b),  (uVar3 & 0x8000) == 0)) {\n        return;\n    }\n    if ((*(param_1 + 0x245) & 0x10) == 0) {\n        fcn.00411aac(0);\n    }\n    return;\n}\n",
        "token_count": 1278
    },
    "0041129b": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.0041129b(int32_t param_1)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    uint16_t uVar3;\n    uint32_t unaff_EBX;\n    int32_t unaff_retaddr;\n    uchar auStack256 [12];\n    char cStack244;\n    char cStack243;\n    char cStack242;\n    char cStack169;\n    char cStack100;\n    char cStack99;\n    \n    pcVar1 = _sym.imp.USER32.dll_GetAsyncKeyState;\n    if (*(param_1 + 0x248) == 0) {\n        uVar3 = (*_sym.imp.USER32.dll_GetAsyncKeyState)(0x11);\n        pcVar2 = _sym.imp.USER32.dll_GetKeyState;\n        if ((((uVar3 & 0x8000) != 0) || (uVar3 = (*_sym.imp.USER32.dll_GetKeyState)(0x11),  (uVar3 & 0x8000) != 0)) &&\n           ((*(param_1 + 0x245) & 8) == 0)) {\n            unaff_EBX = 8;\n        }\n        uVar3 = (*pcVar1)(0x12);\n        if ((uVar3 & 0x8000) == 0) {\n            (*pcVar2)(0x12);\n        }\n        uVar3 = (*pcVar1)(*(param_1 + 0x254));\n        if ((uVar3 & 0x8000) == 0) {\n            (*pcVar2)(*(param_1 + 0x254));\n        }\n        uVar3 = (*pcVar1)(0xa1);\n        if ((uVar3 & 0x8000) == 0) {\n            (*pcVar2)(0xa1);\n        }\n        uVar3 = (*pcVar1)(0x5b);\n        if ((((uVar3 & 0x8000) != 0) || (uVar3 = (*pcVar2)(0x5b),  (uVar3 & 0x8000) != 0)) &&\n           ((*(unaff_retaddr + 0x245) & 0x10) == 0)) {\n            unaff_EBX = unaff_EBX | 0x10;\n        }\n    }\n    else {\n        (*_sym.imp.USER32.dll_GetKeyboardState)(auStack256);\n        if ((cStack243 == -0x80) && ((*(param_1 + 0x245) & 8) == 0)) {\n            unaff_EBX = 8;\n        }\n        if ((cStack242 == -0x80) && ((*(param_1 + 0x245) & 1) == 0)) {\n            unaff_EBX = unaff_EBX | 1;\n        }\n        if (((cStack100 == -0x80) || (cStack244 == -0x80)) && ((*(param_1 + 0x245) & 2) == 0)) {\n            unaff_EBX = unaff_EBX | 2;\n        }\n        if ((cStack99 == -0x80) && ((*(param_1 + 0x245) & 4) == 0)) {\n            unaff_EBX = unaff_EBX | 4;\n        }\n        if ((cStack169 == -0x80) && ((*(param_1 + 0x245) & 0x10) == 0)) {\n            unaff_EBX = unaff_EBX | 0x10;\n        }\n    }\n    return unaff_EBX;\n}\n",
        "token_count": 797
    },
    "0041154e": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0041154e(uint32_t arg_8h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t unaff_ESI;\n    uint uVar4;\n    uint lpKeyState;\n    uint8_t var_100h;\n    uint8_t var_ffh;\n    uint var_feh;\n    uint var_b5h;\n    uint8_t var_70h;\n    uint var_6fh;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    uint32_t var_8h;\n    uint32_t var_4h;\n    \n    if ((arg_8h & 0x1f) == 0) {\n        return;\n    }\n    if ((*(unaff_ESI + 0x248) == 0) || (iVar2 = (*_sym.imp.USER32.dll_GetParent)(*(unaff_ESI + 0x248)),  iVar2 == 0)) {\n        if ((arg_8h & 0x10) != 0) {\n            fcn.00410e88(0x5b, *(unaff_ESI + 0x250), 0);\n        }\n        if ((arg_8h & 2) != 0) {\n            fcn.00410e88(*(unaff_ESI + 0x254), *(unaff_ESI + 0x24e), 0);\n        }\n        if ((arg_8h & 4) != 0) {\n            fcn.00410e88(0xa1, *(unaff_ESI + 0x24f), 0);\n        }\n        if ((arg_8h & 8) != 0) {\n            fcn.00410e88(0x11, *(unaff_ESI + 0x24c), 0);\n        }\n        if ((arg_8h & 1) != 0) {\n            fcn.00410e88(0x12, *(unaff_ESI + 0x24d), 0);\n        }\n    }\n    else {\n        (*_sym.imp.USER32.dll_GetKeyboardState)(&lpKeyState);\n        if ((arg_8h & 0x10) != 0) {\n            var_b5h._0_1_ = var_b5h | 0x80;\n        }\n        var_ch = arg_8h & 2;\n        if (var_ch != 0) {\n            var_100h = var_100h | 0x80;\n            var_70h = var_70h | 0x80;\n        }\n        var_10h = arg_8h & 4;\n        if (var_10h != 0) {\n            var_100h = var_100h | 0x80;\n            var_6fh._0_1_ = var_6fh | 0x80;\n        }\n        var_4h = arg_8h & 8;\n        if (var_4h != 0) {\n            var_ffh = var_ffh | 0x80;\n        }\n        var_8h = arg_8h & 1;\n        if (var_8h != 0) {\n            var_feh._0_1_ = var_feh | 0x80;\n        }\n        (*_sym.imp.USER32.dll_SetKeyboardState)(&lpKeyState);\n        pcVar1 = _sym.imp.USER32.dll_PostMessageW;\n        if ((arg_8h & 0x10) != 0) {\n            (*_sym.imp.USER32.dll_PostMessageW)(*(unaff_ESI + 0x248), 0x100, 0x5b, *(unaff_ESI + 0x250) << 0x10 | 1);\n        }\n        if (var_ch != 0) {\n            (*pcVar1)(*(unaff_ESI + 0x248), 0x100, 0x10, *(unaff_ESI + 0x24e) << 0x10 | 1);\n        }\n        if (var_10h != 0) {\n            (*pcVar1)(*(unaff_ESI + 0x248), 0x100, 0x10, *(unaff_ESI + 0x24f) << 0x10 | 1);\n        }\n        if (var_4h != 0) {\n            (*pcVar1)(*(unaff_ESI + 0x248), 0x100, 0x11, *(unaff_ESI + 0x24c) << 0x10 | 1);\n        }\n        if (var_8h != 0) {\n            if ((var_4h == 0) && ((arg_8h & 0x800) == 0)) {\n                uVar3 = *(unaff_ESI + 0x24d) << 0x10 | 0x20000001;\n                uVar4 = 0x104;\n            }\n            else {\n                if (var_8h == 0) goto code_r0x0041175b;\n                uVar3 = *(unaff_ESI + 0x24d) << 0x10 | 1;\n                uVar4 = 0x100;\n            }\n            (*pcVar1)(*(unaff_ESI + 0x248), uVar4, 0x12, uVar3);\n        }\n    }\ncode_r0x0041175b:\n    fcn.00412048(unaff_ESI);\n    return;\n}\n",
        "token_count": 1234
    },
    "00411baf": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Variable defined which should be unmapped: var_2h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00411baf(char *arg_8h)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t in_EAX;\n    int32_t iVar4;\n    char *arg_ch;\n    char *arg_8h_00;\n    int32_t iVar5;\n    uint32_t uVar6;\n    uint unaff_EBX;\n    char *pcVar7;\n    uint unaff_EBP;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    uint unaff_retaddr;\n    uint in_stack_00000008;\n    uint in_stack_0000000c;\n    uint in_stack_00000010;\n    uint in_stack_00000014;\n    uint in_stack_00000018;\n    uint in_stack_0000001c;\n    uint in_stack_00000020;\n    uint in_stack_00000024;\n    uint in_stack_00000028;\n    uint in_stack_0000002c;\n    uint in_stack_00000030;\n    uint in_stack_00000034;\n    uint in_stack_00000038;\n    uint in_stack_0000003c;\n    uint in_stack_00000040;\n    uint in_stack_00000044;\n    uint in_stack_00000048;\n    uint in_stack_0000004c;\n    uint uVar8;\n    char *arg_8h_01;\n    uint uVar9;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    uchar var_4h [2];\n    uint var_2h;\n    \n    var_8h = 0;\n    var_18h = 0;\n    _var_4h = 0;\n    iVar4 = fcn.00449fa0();\n    arg_ch = fcn.00449614(iVar4 + 1);\n    iVar4 = fcn.00449fa0();\n    arg_8h_00 = fcn.00449614(iVar4 * 2 + 1);\n    iVar4 = fcn.0041200b();\n    if (iVar4 == 0) {\n        for (; (*(var_8h + in_EAX) == ' ' || (*(var_8h + in_EAX) == '\\t')); var_8h = var_8h + 1) {\n        }\n        fcn.0041200b();\n        iVar4 = fcn.004564ce(arg_8h_00, 0x45ca14);\n        if (iVar4 == 0) {\n            _var_4h = 0x10000;\n            goto code_r0x00411c41;\n        }\n        iVar4 = fcn.004564ce(arg_8h_00, 0x45ca0c);\n        if (iVar4 == 0) {\n            _var_4h = 0x1000000;\n            goto code_r0x00411c41;\n        }\n        iVar4 = fcn.004564ce(arg_8h_00, 0x45ca08);\n        if (iVar4 == 0) {\n            _var_4h = 0x100;\n            goto code_r0x00411c41;\n        }\n        iVar4 = fcn.004564ce(arg_8h_00, 0x45ca04);\n        if (iVar4 == 0) {\n            _var_4h = 1;\n            goto code_r0x00411c41;\n        }\n        if ((*arg_8h_00 == '0') && ((arg_8h_00[1] == 'x' || (arg_8h_00[1] == 'X')))) {\n            fcn.0041222f();\n            fcn.0044a5c9(arg_8h_00, 0x45ca00, 1);\n            goto code_r0x00411c41;\n        }\n        iVar4 = fcn.0044a6a9(arg_8h_00);\n        if (iVar4 < 1) {\n            iVar4 = 1;\n        }\n    }\n    else {\ncode_r0x00411c41:\n        iVar4 = 1;\n    }\n    do {\n        arg_8h_01 = arg_ch;\n        iVar5 = fcn.004564ce(*(var_18h * 4 + 0x466518), arg_ch);\n        if (iVar5 == 0) break;\n        var_18h = var_18h + 1;\n    } while (var_18h < 0x62);\n    if (var_18h == 0x62) {\n        iVar5 = *arg_ch;\n        if (var_2h._1_1_ == '\\0') {\n            if (var_2h == '\\0') {\n                fcn.00410f54(iVar5, iVar4);\n                goto code_r0x00411fbb;\n            }\n            arg_8h_01 = NULL;\n            (*_sym.imp.USER32.dll_VkKeyScanA)(iVar5);\n            goto code_r0x00411fb6;\n        }\n        uVar8 = 0;\n        (*_sym.imp.USER32.dll_VkKeyScanA)(iVar5);\n        goto code_r0x00411e1b;\n    }\n    if (*(var_18h + 0x4666a0) == '\\0') {\n        if (var_2h._1_1_ == '\\0') {\n            if (var_2h == '\\0') {\n                if (var_4h[1] == '\\0') {\n                    uVar9 = 0;\n                    uVar8 = *(var_18h * 4 + 0x466708);\n                    if (var_4h[0] == '\\0') {\n                        fcn.00410fb7();\n                        goto code_r0x00411fbb;\n                    }\n                }\n                else {\n                    uVar9 = 1;\n                    uVar8 = *(var_18h * 4 + 0x466708);\n                }\n                fcn.00410eee(uVar8, uVar9);\n                goto code_r0x00411fbb;\n            }\n            arg_8h_01 = NULL;\n            goto code_r0x00411fb6;\n        }\n        uVar8 = 0;\n        goto code_r0x00411e1b;\n    }\n    uVar2 = *(var_18h * 4 + 0x466708);\n    if (0xc < uVar2) goto code_r0x00411fbb;\n    // switch table (13 cases) at 0x411fd7\n    switch(*(uVar2 * 4 + 0x411fd7)) {\n    case 0x411dce:\n        if (var_2h._1_1_ == '\\0') {\n            if (var_2h == '\\0') {\n                uVar9 = 0;\n                uVar8 = 0x12;\n                goto code_r0x00411e01;\n            }\n            goto code_r0x00411e3c;\n        }\ncode_r0x00411dd4:\n        uVar2 = *(arg_8h + 0x244);\n        if ((uVar2 & 0x100) != 0) goto code_r0x00411fbb;\n        *(arg_8h + 0x244) = uVar2 | 0x100;\n        goto code_r0x00411f47;\n    case 0x411dd4:\n        goto code_r0x00411dd4;\n    case 0x411e0e:\n        if (var_2h._1_1_ == '\\0') {\n            if (var_2h == '\\0') {\n                uVar9 = 1;\n                uVar8 = 0xd;\ncode_r0x00411e01:\n                fcn.00411987(arg_8h, uVar8, uVar9);\n                goto code_r0x00411fbb;\n            }\n            arg_8h_01 = NULL;\n            break;\n        }\n        uVar8 = 0;\n        goto code_r0x00411e1b;\n    case 0x411e3c:\ncode_r0x00411e3c:\n        uVar2 = *(arg_8h + 0x244);\n        if ((uVar2 & 0x100) == 0) goto code_r0x00411fbb;\n        *(arg_8h + 0x244) = uVar2 ^ 0x100;\n        break;\n    case 0x411e5d:\n        uVar2 = *(arg_8h + 0x244);\n        if ((uVar2 & 0x200) != 0) goto code_r0x00411fbb;\n        *(arg_8h + 0x244) = uVar2 | 0x200;\n        uVar8 = 0;\n        goto code_r0x00411e1b;\n    case 0x411e82:\n        uVar2 = *(arg_8h + 0x244);\n        if ((uVar2 & 0x200) == 0) goto code_r0x00411fbb;\n        *(arg_8h + 0x244) = uVar2 ^ 0x200;\n        arg_8h_01 = NULL;\n        break;\n    case 0x411eaa:\n        uVar2 = *(arg_8h + 0x244);\n        uVar6 = 0x800;\n        uVar3 = uVar2 & 0x800;\n        goto joined_r0x00411f3e;\n    case 0x411ec7:\n        uVar2 = *(arg_8h + 0x244);\n        if ((uVar2 & 0x800) == 0) goto code_r0x00411fbb;\n        arg_8h_01 = NULL;\n        *(arg_8h + 0x244) = uVar2 ^ 0x800;\n        break;\n    case 0x411eeb:\n        uVar2 = *(arg_8h + 0x244);\n        uVar6 = 0x1000;\n        uVar3 = uVar2 & 0x1000;\n        goto joined_r0x00411f3e;\n    case 0x411f08:\n        uVar2 = *(arg_8h + 0x244);\n        if ((uVar2 & 0x1000) == 0) goto code_r0x00411fbb;\n        arg_8h_01 = NULL;\n        *(arg_8h + 0x244) = uVar2 ^ 0x1000;\n        break;\n    case 0x411f2c:\n        uVar2 = *(arg_8h + 0x244);\n        uVar6 = 0x2000;\n        uVar3 = uVar2 & 0x2000;\njoined_r0x00411f3e:\n        if (uVar3 == 0) {\n            *(arg_8h + 0x244) = uVar2 | uVar6;\ncode_r0x00411f47:\n            uVar8 = 0;\ncode_r0x00411e1b:\n            fcn.004119aa(uVar8, unaff_EDI, unaff_ESI, unaff_EBX, var_18h, 1, arg_8h_00, arg_ch, var_8h, _var_4h, \n                         unaff_EBP, unaff_retaddr, arg_8h, in_stack_00000008, in_stack_0000000c, in_stack_00000010, \n                         in_stack_00000014, in_stack_00000018, in_stack_0000001c, in_stack_00000020, in_stack_00000024, \n                         in_stack_00000028, in_stack_0000002c, in_stack_00000030, in_stack_00000034, in_stack_00000038, \n                         in_stack_0000003c, in_stack_00000040, in_stack_00000044, in_stack_00000048, in_stack_0000004c);\n        }\n        goto code_r0x00411fbb;\n    case 0x411f4d:\n        uVar2 = *(arg_8h + 0x244);\n        if ((uVar2 & 0x2000) == 0) goto code_r0x00411fbb;\n        arg_8h_01 = NULL;\n        *(arg_8h + 0x244) = uVar2 ^ 0x2000;\n        break;\n    case 0x411f6a:\n        if ((*(arg_8h + 0x244) & 0x100) == 0) {\n            arg_8h_01 = NULL;\n            fcn.004119aa(0, unaff_EDI, unaff_ESI, unaff_EBX, var_18h, 1, arg_8h_00, arg_ch, var_8h, _var_4h, unaff_EBP, \n                         unaff_retaddr, arg_8h, in_stack_00000008, in_stack_0000000c, in_stack_00000010, \n                         in_stack_00000014, in_stack_00000018, in_stack_0000001c, in_stack_00000020, in_stack_00000024, \n                         in_stack_00000028, in_stack_0000002c, in_stack_00000030, in_stack_00000034, in_stack_00000038, \n                         in_stack_0000003c, in_stack_00000040, in_stack_00000044, in_stack_00000048, in_stack_0000004c);\n        }\n        cVar1 = *arg_8h_00;\n        pcVar7 = arg_8h_00;\n        while (cVar1 != '\\0') {\n            arg_8h_01 = arg_8h;\n            fcn.00411987(arg_8h, cVar1 + 0x30, 0);\n            pcVar7 = pcVar7 + 1;\n            cVar1 = *pcVar7;\n        }\n        if ((*(arg_8h + 0x244) & 0x100) != 0) goto code_r0x00411fbb;\n    }\ncode_r0x00411fb6:\n    fcn.00411aac(arg_8h_01);\ncode_r0x00411fbb:\n    fcn.0044951c(arg_ch);\n    fcn.0044951c(arg_8h_00);\n    return;\n}\n",
        "token_count": 3359
    },
    "004120ec": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.004120ec(uint noname_0, uint32_t *arg_ch, uchar *arg_10h, uchar *arg_14h)\n\n{\n    char cVar1;\n    int16_t iVar2;\n    int16_t *in_EAX;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint arg_ch_00;\n    uchar *puVar5;\n    uint32_t uVar6;\n    uchar *in_ECX;\n    int32_t iVar7;\n    uchar *unaff_EDI;\n    uint32_t ch;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    iVar7 = 0;\n    var_1h._0_1_ = 1;\n    var_ch = 0;\n    if (*in_EAX == 0) {\n        return in_EAX & 0xffffff00;\n    }\n    iVar3 = fcn.00416a25();\n    *unaff_EDI = 0;\n    *arg_14h = 0;\n    *in_ECX = 0;\n    *arg_10h = 0;\n    iVar4 = fcn.00449fa0(iVar3);\n    arg_ch_00 = fcn.00449614(iVar4 + 1);\n    do {\n        cVar1 = *(iVar3 + iVar7);\n        puVar5 = arg_10h;\n        if (cVar1 == '+') {\ncode_r0x00412155:\n            *puVar5 = 1;\n        }\n        else {\n            if (((cVar1 != '^') && (cVar1 != '!')) && (cVar1 != '#')) break;\n            if (cVar1 == '+') goto code_r0x00412155;\n            if (cVar1 == '^') {\n                *in_ECX = 1;\n            }\n            else {\n                puVar5 = arg_14h;\n                if (cVar1 == '!') goto code_r0x00412155;\n                if (cVar1 == '#') {\n                    *unaff_EDI = 1;\n                }\n            }\n        }\n        iVar7 = iVar7 + 1;\n    } while( true );\n    ch = ch & 0xffffff00 | *(iVar3 + iVar7);\n    if (*(iVar3 + iVar7) == 0x7b) {\n        iVar7 = fcn.0041200b();\n        if (iVar7 == 0) {\n            do {\n                iVar7 = fcn.004564ce(*(var_ch * 4 + 0x466518), arg_ch_00);\n                if (iVar7 == 0) break;\n                var_ch = var_ch + 1;\n            } while (var_ch < 0x62);\n            if ((var_ch != 0x62) && (*(var_ch + 0x4666a0) == '\\0')) {\n                *arg_ch = *(var_ch * 4 + 0x466708);\n                goto code_r0x0041220b;\n            }\n        }\n        var_1h._0_1_ = 0;\n    }\n    else {\n        iVar2 = (*_sym.imp.USER32.dll_VkKeyScanA)(ch);\n        *arg_ch = iVar2;\n        if ((iVar2 & 0x200U) != 0) {\n            *in_ECX = 1;\n        }\n        if ((*(arg_ch + 1) & 4) != 0) {\n            *arg_14h = 1;\n        }\n        if ((*(arg_ch + 1) & 1) != 0) {\n            *arg_10h = 1;\n        }\n    }\ncode_r0x0041220b:\n    *arg_ch = *arg_ch & 0xff;\n    fcn.0044951c(iVar3);\n    uVar6 = fcn.0044951c(arg_ch_00);\n    return uVar6 & 0xffffff00 | var_1h;\n}\n",
        "token_count": 909
    },
    "004122af": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "link function at runtime on Windows"
        ],
        "decompiled_code": "\nvoid fcn.004122af(void)\n\n{\n    int32_t iVar1;\n    int32_t *unaff_ESI;\n    \n    if (unaff_ESI[2] == 0) {\n        iVar1 = (*_sym.imp.KERNEL32.DLL_LoadLibraryA)(0x45c1f4);\n        *unaff_ESI = iVar1;\n        if (iVar1 != 0) {\n            iVar1 = (*_sym.imp.KERNEL32.DLL_GetProcAddress)(iVar1, 0x45c9f4);\n            unaff_ESI[2] = iVar1;\n        }\n    }\n    return;\n}\n",
        "token_count": 137
    },
    "0041267d": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "link function at runtime on Windows"
        ],
        "decompiled_code": "\nvoid fcn.0041267d(void)\n\n{\n    int32_t iVar1;\n    int32_t *unaff_ESI;\n    \n    if (unaff_ESI[2] == 0) {\n        iVar1 = (*_sym.imp.KERNEL32.DLL_LoadLibraryA)(0x45c5d8);\n        *unaff_ESI = iVar1;\n        if (iVar1 != 0) {\n            iVar1 = (*_sym.imp.KERNEL32.DLL_GetProcAddress)(iVar1, 0x45ce04);\n            unaff_ESI[2] = iVar1;\n        }\n    }\n    return;\n}\n",
        "token_count": 136
    },
    "004126a4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "link function at runtime on Windows"
        ],
        "decompiled_code": "\nvoid fcn.004126a4(void)\n\n{\n    int32_t iVar1;\n    int32_t *unaff_ESI;\n    \n    if (unaff_ESI[2] == 0) {\n        iVar1 = (*_sym.imp.KERNEL32.DLL_LoadLibraryA)(0x45c5d8);\n        *unaff_ESI = iVar1;\n        if (iVar1 != 0) {\n            iVar1 = (*_sym.imp.KERNEL32.DLL_GetProcAddress)(iVar1, 0x45cdf4);\n            unaff_ESI[2] = iVar1;\n        }\n    }\n    return;\n}\n",
        "token_count": 136
    },
    "0041279c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0041279c(uint param_1)\n\n{\n    char *pcVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t unaff_ESI;\n    uint *puVar3;\n    uint uStack156;\n    uint auStack152 [4];\n    uint uStack136;\n    \n    if (in_EAX != 1) {\n        return;\n    }\n    uStack156 = 0x98;\n    puVar3 = auStack152;\n    for (iVar2 = 0x25; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar3 = 0;\n        puVar3 = puVar3 + 1;\n    }\n    fcn.00412ddb();\n    if (*0x4679c6 == '\\0') goto code_r0x0041284a;\n    auStack152[0] = param_1;\n    auStack152[1] = 1;\n    auStack152[2] = 2;\n    if (*0x4679c8 == '\\0') {\n        if (*(unaff_ESI + 9) == '\\0') {\n            if (*(unaff_ESI + 0xe10) != '\\x01') goto code_r0x0041284a;\n            goto code_r0x00412833;\n        }\n        pcVar1 = unaff_ESI + 0xe11;\n        if (*pcVar1 == '\\0') {\n            uStack136 = *(unaff_ESI + 0xe24);\n            *pcVar1 = '\\x01';\n        }\n        else {\n            uStack136 = *(unaff_ESI + 0xe18);\n            *pcVar1 = '\\0';\n        }\n    }\n    else if (*(unaff_ESI + 0xe10) == '\\x01') {\ncode_r0x00412833:\n        *(unaff_ESI + 0xe10) = 0;\n        uStack136 = *(unaff_ESI + 0xe18);\n    }\n    else {\n        *(unaff_ESI + 0xe10) = '\\x01';\n        uStack136 = *(unaff_ESI + 0xe20);\n    }\n    (**0x4593f8)(1, &uStack156);\ncode_r0x0041284a:\n    (*_sym.imp.USER32.dll_KillTimer)(param_1, 1);\n    (*_sym.imp.USER32.dll_SetTimer)(param_1, 1, 0x2ee, 0);\n    return;\n}\n",
        "token_count": 555
    },
    "0041286e": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041286e(int32_t arg_8h)\n\n{\n    uint uVar1;\n    code *pcVar2;\n    char cVar3;\n    uint in_EAX;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint *unaff_ESI;\n    uint *puVar6;\n    uint lpmii;\n    uint var_40h;\n    uint32_t var_38h;\n    int32_t first;\n    uint var_14h;\n    int32_t check;\n    int32_t var_ch;\n    uint hmenu;\n    int32_t item;\n    \n    item = -1;\n    lpmii = 0x2c;\n    puVar6 = &var_40h;\n    for (iVar4 = 10; iVar4 != 0; iVar4 = iVar4 + -1) {\n        *puVar6 = 0;\n        puVar6 = puVar6 + 1;\n    }\n    var_40h = 1;\n    cVar3 = fcn.00413365();\n    if (cVar3 == '\\0') {\n        return 0;\n    }\n    puVar6 = unaff_ESI[item + 0x38a];\n    if (item == 3) {\n        *0x4679d8 = 2;\n        *0x4679c2 = 1;\n    }\n    else if (item == 4) {\n        iVar4 = (*_sym.imp.USER32.dll_GetMenuItemInfoW)(*unaff_ESI, 4, 0, &lpmii);\n        if (iVar4 == 0) {\n            return 0;\n        }\n        *0x4679c8 = (var_38h & 8) == 0;\n        if (*0x4679c8) {\n            var_38h = var_38h | 8;\n        }\n        else {\n            var_38h = var_38h ^ 8;\n        }\n        (*_sym.imp.USER32.dll_SetMenuItemInfoW)(*unaff_ESI, 4, 0, &lpmii);\n        fcn.00412ddb();\n        (*_sym.imp.KERNEL32.DLL_Sleep)(500);\n    }\n    else {\n        if (in_EAX >> 0x10 != 0) {\n            return 0;\n        }\n        iVar4 = 0;\n        if (arg_8h != 0) {\n            return 0;\n        }\n        if (*0x4679c8 != '\\0') {\n            return 0;\n        }\n        uVar1 = *puVar6;\n        hmenu = uVar1;\n        if ((*(unaff_ESI + 7) == '\\0') || (*(puVar6 + 6) == '\\0')) {\n            if ((*(unaff_ESI + 5) != '\\0') && (*(puVar6 + 5) != '\\0')) {\n                (*_sym.imp.USER32.dll_GetMenuItemInfoW)(uVar1, item, 0, &lpmii);\n                if ((var_38h & 8) == 0) {\n                    var_38h = var_38h | 8;\n                }\n                else {\n                    var_38h = var_38h ^ 8;\n                }\n                (*_sym.imp.USER32.dll_SetMenuItemInfoW)(uVar1, item, 0, &lpmii);\n            }\n        }\n        else {\n            var_ch = -1;\n            arg_8h = (*_sym.imp.USER32.dll_GetMenuItemCount)(uVar1);\n            pcVar2 = _sym.imp.USER32.dll_GetMenuItemID;\n            if (*(unaff_ESI + 1) != '\\0') {\n                arg_8h = arg_8h + -4;\n            }\n            if (0 < arg_8h) {\n                do {\n                    var_ch = (*pcVar2)(hmenu, iVar4);\n                    iVar5 = iVar4;\n                    if (var_ch == item) goto code_r0x004129d8;\n                    iVar4 = iVar4 + 1;\n                } while (iVar4 < arg_8h);\n            }\n            iVar5 = iVar4;\n            if (var_ch == item) {\ncode_r0x004129d8:\n                do {\n                    check = iVar5;\n                    first = iVar4;\n                    iVar4 = first + -1;\n                    iVar5 = check;\n                    if (iVar4 < 0) break;\n                    var_ch = (*pcVar2)(hmenu, iVar4);\n                    cVar3 = fcn.00413365();\n                    iVar5 = check;\n                } while ((cVar3 == '\\0') || (*(unaff_ESI[var_ch + 0x38a] + 6) != '\\0'));\n                do {\n                    iVar4 = iVar5;\n                    iVar5 = iVar4 + 1;\n                    if (arg_8h <= iVar5) break;\n                    var_ch = (*pcVar2)(hmenu, iVar5);\n                    cVar3 = fcn.00413365();\n                } while ((cVar3 == '\\0') || (*(unaff_ESI[var_ch + 0x38a] + 6) != '\\0'));\n                (*_sym.imp.USER32.dll_CheckMenuRadioItem)(hmenu, first, iVar4, check, 0x400);\n            }\n        }\n        fcn.00413443(unaff_ESI);\n    }\n    return 1;\n}\n",
        "token_count": 1177
    },
    "00412b72": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00412b72(void)\n\n{\n    uint uVar1;\n    int32_t unaff_EDI;\n    uint lpbANDbits;\n    uint lpbXORbits;\n    \n    if (*(unaff_EDI + 0xe24) == 0) {\n        fcn.00449b00(&lpbANDbits, 0xff, 0x80);\n        fcn.00449b00(&lpbXORbits, 0, 0x80);\n        uVar1 = (*_sym.imp.USER32.dll_CreateIcon)(*0x467a08, 0x20, 0x20, 1, 1, &lpbANDbits, &lpbXORbits);\n        *(unaff_EDI + 0xe24) = uVar1;\n    }\n    return *(unaff_EDI + 0xe24);\n}\n",
        "token_count": 190
    },
    "00412ddb": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00412ddb(int32_t param_1)\n\n{\n    uint uVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    uint uStack1360;\n    uint auStack1356 [5];\n    uchar auStack1336 [912];\n    ushort auStack424 [128];\n    uint uStack168;\n    uint auStack164 [5];\n    uchar auStack144 [128];\n    uint auStack16 [3];\n    \n    if (*0x4679c6 == '\\0') {\n        return;\n    }\n    fcn.00416db5();\n    if (*0x4679c8 == '\\x01') {\n        (*_sym.imp.USER32.dll_LoadStringW)(*0x467a08, 0x65, auStack424, 0x7f);\n    }\n    else {\n        auStack424[0] = 0;\n    }\n    fcn.00416e83(auStack16, auStack424);\n    if (*0x4679c5 == '\\0') {\n        if (*(param_1 + 0x83c) != 0) {\n            fcn.00416e83(auStack16, param_1 + 0x83c);\n            goto code_r0x00412eb8;\n        }\n    }\n    else {\n        fcn.00417064(*0x479be4);\n        iVar3 = fcn.0040fd7d();\n        if (iVar3 == 0) goto code_r0x00412eb8;\n        fcn.00417064(0x45ce14);\n        fcn.0040fd7d();\n    }\n    fcn.00417064();\ncode_r0x00412eb8:\n    uVar1 = auStack16[0];\n    if ((*0x479bbd == '\\0') && (*0x479bc7 == '\\0')) {\n        uStack168 = 0x98;\n        puVar2 = auStack164;\n        for (iVar3 = 0x25; iVar3 != 0; iVar3 = iVar3 + -1) {\n            *puVar2 = 0;\n            puVar2 = puVar2 + 1;\n        }\n        auStack164[0] = *0x467a00;\n        auStack164[1] = 1;\n        auStack164[2] = 4;\n        fcn.0041610a(uVar1);\n        fcn.004495f8(auStack144, auStack424);\n        puVar2 = &uStack168;\n    }\n    else {\n        uStack1360 = 0x3a8;\n        puVar2 = auStack1356;\n        for (iVar3 = 0xe9; iVar3 != 0; iVar3 = iVar3 + -1) {\n            *puVar2 = 0;\n            puVar2 = puVar2 + 1;\n        }\n        auStack1356[0] = *0x467a00;\n        auStack1356[1] = 1;\n        auStack1356[2] = 4;\n        fcn.0041610a(uVar1);\n        fcn.004495f8(auStack1336, auStack424);\n        puVar2 = &uStack1360;\n    }\n    (**0x4593f8)(1, puVar2);\n    fcn.0044951c(auStack16[0]);\n    return;\n}\n",
        "token_count": 748
    },
    "0041325b": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.0041325b(void)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    int32_t *piVar3;\n    int32_t unaff_ESI;\n    int32_t iVar4;\n    \n    iVar1 = *(unaff_ESI + 0x1644);\n    if (iVar1 < 0x206) {\n        puVar2 = fcn.00449614(0x14);\n        if (puVar2 == NULL) {\n            puVar2 = NULL;\n        }\n        else {\n            fcn.00416d61();\n        }\n        if (*(unaff_ESI + 0x1644) == 0) {\n            *(unaff_ESI + 0x1644) = 7;\n        }\n        else {\n            *(unaff_ESI + 0x1644) = *(unaff_ESI + 0x1644) + 1;\n        }\n        iVar4 = *(unaff_ESI + 0x1644);\ncode_r0x004132eb:\n        *(unaff_ESI + 0xe28 + iVar4 * 4) = puVar2;\n        *puVar2 = 0;\n        *(puVar2 + 1) = 0xff;\n        *(puVar2 + 5) = 0;\n        *(puVar2 + 6) = 0;\n        return iVar4;\n    }\n    iVar4 = 7;\n    if (6 < iVar1) {\n        piVar3 = unaff_ESI + 0xe44;\n        do {\n            if (*piVar3 == 0) break;\n            iVar4 = iVar4 + 1;\n            piVar3 = piVar3 + 1;\n        } while (iVar4 <= *(unaff_ESI + 0x1644));\n        if (iVar4 <= iVar1) {\n            puVar2 = fcn.00449614(0x14);\n            if (puVar2 == NULL) {\n                puVar2 = NULL;\n            }\n            else {\n                fcn.00416d61();\n            }\n            goto code_r0x004132eb;\n        }\n    }\n    return -1;\n}\n",
        "token_count": 473
    },
    "0041330a": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0041330a(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    int32_t *piVar2;\n    \n    piVar2 = param_1 + 0xe28 + in_EAX * 4;\n    iVar1 = *piVar2;\n    if (iVar1 != 0) {\n        fcn.0044951c(*(iVar1 + 8));\n        fcn.0044951c(iVar1);\n    }\n    *piVar2 = 0;\n    if (in_EAX != *(param_1 + 0x1644)) {\n        return;\n    }\n    if (6 < in_EAX) {\n        do {\n            if (*piVar2 != 0) break;\n            in_EAX = in_EAX + -1;\n            piVar2 = piVar2 + -1;\n        } while (6 < in_EAX);\n        if (6 < in_EAX) goto code_r0x00413359;\n    }\n    in_EAX = 0;\ncode_r0x00413359:\n    *(param_1 + 0x1644) = in_EAX;\n    return;\n}\n",
        "token_count": 260
    },
    "00413365": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00413365(uint32_t param_1, int32_t param_2)\n\n{\n    uint32_t *in_EAX;\n    \n    *in_EAX = 0xffffffff;\n    if ((param_1 < 0) && (param_1 = *(param_2 + 0x1648),  param_1 == 0xffffffff)) {\n        return in_EAX & 0xffffff00;\n    }\n    *in_EAX = param_1;\n    return param_1 & 0xffffff00 | *(param_2 + 0xe28 + param_1 * 4) != 0;\n}\n",
        "token_count": 140
    },
    "0041338a": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0041338a(uint *param_1)\n\n{\n    uint *puVar1;\n    int32_t in_EAX;\n    int32_t *piVar2;\n    uint uVar3;\n    \n    if (*(in_EAX + 0xd4c) != 0) {\n        piVar2 = *(in_EAX + 0xd50);\n        if (piVar2 == NULL) {\n            piVar2 = in_EAX + 0xd58;\n        }\n        puVar1 = *piVar2;\n        *param_1 = *puVar1;\n        fcn.00416e71();\n        fcn.00421aef();\n        fcn.0044951c(puVar1[1]);\n        fcn.0044951c(puVar1);\n        *0x47c7a8 = 0;\n        return 1;\n    }\n    if (*(in_EAX + 0xd64) == '\\0') {\n        if ((*0x478430 == 0) && (*0x47c7a8 < 100)) {\n            *0x47c7a8 = *0x47c7a8 + 1;\n            uVar3 = 0;\n        }\n        else {\n            uVar3 = 10;\n        }\n        (*_sym.imp.KERNEL32.DLL_Sleep)(uVar3);\n    }\n    return 0;\n}\n",
        "token_count": 307
    },
    "0041355f": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0041355f(uint arg_8h, int16_t *arg_ch, int32_t arg_10h, int32_t item, int32_t arg_18h)\n\n{\n    int32_t *piVar1;\n    char cVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t *unaff_EBX;\n    uint *puVar5;\n    uint lpmi;\n    uint32_t var_2ch;\n    uint var_28h;\n    int32_t var_20h;\n    int32_t hMenu;\n    int32_t var_10h;\n    int16_t *var_ch;\n    int32_t var_4h;\n    \n    iVar3 = fcn.0041325b();\n    if (iVar3 == -1) {\n        return 0;\n    }\n    piVar1 = unaff_EBX[iVar3 + 0x38a];\n    lpmi = 0x2c;\n    puVar5 = &var_2ch;\n    var_4h = iVar3;\n    for (iVar4 = 10; iVar4 != 0; iVar4 = iVar4 + -1) {\n        *puVar5 = 0;\n        puVar5 = puVar5 + 1;\n    }\n    if (arg_10h == -1) {\n        *piVar1 = *unaff_EBX;\n    }\n    else {\n        if (arg_10h < 7) {\n            return 0;\n        }\n        if (0x207 < arg_10h) {\n            return 0;\n        }\n        cVar2 = fcn.00413365();\n        if (cVar2 == '\\0') {\n            return 0;\n        }\n        var_2ch = 4;\n        iVar3 = *unaff_EBX[0x389];\n        *piVar1 = iVar3;\n        iVar3 = (*_sym.imp.USER32.dll_GetMenuItemInfoW)(iVar3, 0xffffffff, 0, &lpmi);\n        if (iVar3 == 0) {\n            return 0;\n        }\n        *piVar1 = hMenu;\n        iVar4 = (*_sym.imp.USER32.dll_IsMenu)(hMenu);\n        iVar3 = var_4h;\n        if (iVar4 == 0) {\n            return 0;\n        }\n    }\n    *(piVar1 + 6) = 0;\n    *(piVar1 + 5) = 0;\n    var_28h = 0;\n    var_2ch = 0x32;\n    var_ch = arg_ch;\n    var_20h = iVar3;\n    var_10h = iVar3;\n    if (arg_8h == 0) {\n        if (*arg_ch == 0) {\n            var_28h = 0x800;\n        }\n        else if (arg_18h == 1) {\n            var_28h = 0x200;\n            *(piVar1 + 6) = 1;\n        }\n        *(piVar1 + 1) = 0;\n    }\n    else if (arg_8h == 1) {\n        hMenu = (*_sym.imp.USER32.dll_CreatePopupMenu)();\n        if (hMenu == 0) {\n            return 0;\n        }\n        var_2ch = var_2ch | 4;\n        *(piVar1 + 1) = 1;\n        iVar3 = var_4h;\n    }\n    if ((((*(unaff_EBX + 1) != '\\0') && (*(unaff_EBX + 2) != '\\0')) && (6 < iVar3)) &&\n       ((*piVar1 == *unaff_EBX &&\n        ((iVar3 = (*_sym.imp.USER32.dll_GetMenuItemCount)(*unaff_EBX),  item == -1 || (iVar3 + -4 < item + 1)))))) {\n        item = iVar3 + -4;\n    }\n    iVar3 = (*_sym.imp.USER32.dll_InsertMenuItemW)(*piVar1, item, 1, &lpmi);\n    if (iVar3 == 0) {\n        unaff_EBX[0x591] = unaff_EBX[0x591] + -1;\n        return 0;\n    }\n    unaff_EBX[0x592] = var_4h;\n    return var_4h;\n}\n",
        "token_count": 955
    },
    "0041390f": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041390f(uint *arg_8h)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint *in_EDX;\n    uint *extraout_EDX;\n    int32_t unaff_ESI;\n    uint *puVar4;\n    uint var_30h;\n    uint var_2ch;\n    uint var_1ch;\n    int32_t var_4h;\n    \n    var_4h = -1;\n    if (unaff_ESI == 0) {\n        var_1ch = *in_EDX;\ncode_r0x00413991:\n        *arg_8h = var_1ch;\n        uVar2 = 1;\n    }\n    else {\n        if ((((unaff_ESI != 5) && (unaff_ESI != 6)) &&\n            ((unaff_ESI == 3 ||\n             ((unaff_ESI == 4 || (cVar1 = fcn.00413365(),  unaff_ESI = var_4h,  in_EDX = extraout_EDX,  cVar1 != '\\0')))\n             ))) && (*(in_EDX[unaff_ESI + 0x38a] + 4) != '\\0')) {\n            puVar4 = &var_2ch;\n            for (iVar3 = 10; iVar3 != 0; iVar3 = iVar3 + -1) {\n                *puVar4 = 0;\n                puVar4 = puVar4 + 1;\n            }\n            var_2ch = 4;\n            iVar3 = (*_sym.imp.USER32.dll_GetMenuItemInfoW)(*in_EDX[unaff_ESI + 0x38a]);\n            if (iVar3 != 0) goto code_r0x00413991;\n        }\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 412
    },
    "0041399b": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0041399b(uint arg_8h, uint32_t arg_ch)\n\n{\n    uint *puVar1;\n    uint32_t uVar2;\n    char cVar3;\n    int32_t in_EAX;\n    int16_t *piVar4;\n    uint32_t uVar5;\n    int32_t in_ECX;\n    int32_t iVar6;\n    uint *puVar7;\n    int16_t *piVar8;\n    uint lpmii;\n    uint fByPosition;\n    uint32_t var_2fh;\n    uint var_2bh;\n    int16_t *var_14h;\n    uint var_10h;\n    uint32_t var_ch;\n    int16_t *var_8h;\n    int32_t item;\n    \n    piVar4 = fcn.004161b7(arg_8h);\n    item = -1;\n    if (in_EAX == 5) {\n        return 0;\n    }\n    if (in_EAX == 6) {\n        return 0;\n    }\n    var_8h = piVar4;\n    if ((in_EAX == 3) || (in_EAX == 4)) {\n        arg_ch = 0xffffffff;\n        piVar8 = piVar4;\n        item = in_EAX;\n        if (in_EAX == 3) {\n            if (*piVar4 == 0) {\n                iVar6 = in_ECX + 0x93c;\n                piVar8 = in_ECX + 0x1c;\n            }\n            else {\n                iVar6 = in_ECX + 0x93c;\n            }\ncode_r0x00413a32:\n            fcn.004495f8(iVar6, piVar8);\n        }\n        else if (in_EAX == 4) {\n            if (*piVar4 == 0) {\n                iVar6 = in_ECX + 0xb44;\n                piVar8 = in_ECX + 0x224;\n            }\n            else {\n                iVar6 = in_ECX + 0xb44;\n            }\n            goto code_r0x00413a32;\n        }\n        if (*(in_ECX + 0xe28 + in_EAX * 4) == 0) {\n            return 0;\n        }\n        if (*piVar4 == 0) {\n            return 0;\n        }\n    }\n    else {\n        cVar3 = fcn.00413365();\n        if (cVar3 == '\\0') {\n            return 0;\n        }\n    }\n    puVar1 = *(in_ECX + 0xe28 + item * 4);\n    piVar4 = fcn.00449614(0x208);\n    var_ch = 0;\n    lpmii = 0x2c;\n    puVar7 = &fByPosition;\n    for (iVar6 = 10; iVar6 != 0; iVar6 = iVar6 + -1) {\n        *puVar7 = 0;\n        puVar7 = puVar7 + 1;\n    }\n    fByPosition = 0x11;\n    var_10h = 0x104;\n    var_14h = piVar4;\n    iVar6 = (*_sym.imp.USER32.dll_GetMenuItemInfoW)(*puVar1, item, 0, &lpmii);\n    if ((iVar6 == 0) || ((var_2fh & 8) != 0)) {\n        fcn.0044951c(piVar4);\n    }\n    else {\n        fcn.0044951c(piVar4);\n        piVar4 = var_8h;\n        uVar2 = stack0xffffffd0 & 0x1000;\n        if (arg_ch < 0) {\n            if (*var_8h == 0) {\n                return 0;\n            }\n            arg_ch = 0;\n            fByPosition = 0x10;\n            var_14h = var_8h;\n            var_10h = fcn.0044985c(var_8h);\n        }\n        else {\n            uVar5 = var_ch;\n            if (arg_ch < '\\0') {\n                uVar5 = 3;\n            }\n            if (((arg_ch & 1) != 0) && (uVar5 = uVar5 | 8,  *(puVar1 + 6) == '\\0')) {\n                *(puVar1 + 5) = 1;\n            }\n            if (((arg_ch & 4) != 0) && (*(puVar1 + 6) == '\\0')) {\n                *(puVar1 + 5) = 0;\n            }\n            if ((arg_ch & 0x100) != 0) {\n                uVar5 = uVar5 | 0x80;\n            }\n            if (((stack0xffffffd0 & 8) != 0) && ((arg_ch & 4) == 0)) {\n                uVar5 = uVar5 | 8;\n            }\n            fByPosition = 1;\n            unique0x10000181 = uVar5;\n        }\n        iVar6 = (*_sym.imp.USER32.dll_SetMenuItemInfoW)(*puVar1, item, 0, &lpmii);\n        if (iVar6 != 0) {\n            if (0 < arg_ch) {\n                iVar6 = item;\n                if ((arg_ch & 0x200) == 0) {\n                    if (uVar2 == 0) goto code_r0x00413b76;\n                    iVar6 = -1;\n                }\n                iVar6 = (*_sym.imp.USER32.dll_SetMenuDefaultItem)(*puVar1, iVar6, 0);\n                if (iVar6 == 0) {\n                    return 0;\n                }\n            }\ncode_r0x00413b76:\n            fcn.0044951c(piVar4);\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 1297
    },
    "00413c3a": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00413c3a(void)\n\n{\n    uint *puVar1;\n    uint *unaff_EBX;\n    \n    if (unaff_EBX[2] == 0) {\n        puVar1 = fcn.00449614(0x20);\n        if (puVar1 == NULL) {\n            puVar1 = NULL;\n        }\n        else {\n            fcn.00416d61();\n        }\n        fcn.00413c86();\n        (*_sym.imp.USER32.dll_CharUpperBuffW)(*puVar1, puVar1[1]);\n        puVar1[7] = 0;\n        if (unaff_EBX[1] == 0) {\n            *unaff_EBX = puVar1;\n        }\n        else {\n            *(unaff_EBX[1] + 0x1c) = puVar1;\n        }\n        unaff_EBX[3] = unaff_EBX[3] + 1;\n        unaff_EBX[1] = puVar1;\n    }\n    return;\n}\n",
        "token_count": 229
    },
    "00413d5a": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __fastcall fcn.00413d5a(uint param_1)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    uint uVar3;\n    bool bVar4;\n    char cVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    int32_t *unaff_ESI;\n    int32_t var_8h;\n    uint var_1h;\n    \n    if (5 < unaff_ESI[3]) {\n        iVar6 = fcn.00449614(unaff_ESI[3] << 2, param_1);\n        iVar7 = 0;\n        unaff_ESI[2] = iVar6;\n        iVar6 = *unaff_ESI;\n        if (0 < unaff_ESI[3]) {\n            do {\n                *(unaff_ESI[2] + iVar7 * 4) = iVar6;\n                iVar6 = *(iVar6 + 0x1c);\n                iVar7 = iVar7 + 1;\n            } while (iVar7 < unaff_ESI[3]);\n        }\n        do {\n            var_8h = 0;\n            bVar4 = false;\n            if (unaff_ESI[3] == 1 || unaff_ESI[3] + -1 < 0) {\n                return;\n            }\n            do {\n                puVar1 = unaff_ESI[2] + var_8h * 4;\n                uVar2 = puVar1[1];\n                cVar5 = fcn.00416fd0();\n                if (cVar5 != '\\0') {\n                    uVar3 = *puVar1;\n                    *puVar1 = uVar2;\n                    bVar4 = true;\n                    *(unaff_ESI[2] + 4 + var_8h * 4) = uVar3;\n                }\n                var_8h = var_8h + 1;\n            } while (var_8h < unaff_ESI[3] + -1);\n        } while (bVar4);\n    }\n    return;\n}\n",
        "token_count": 480
    },
    "0041461b": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041461b(uint arg_8h, uint arg_ch, uint hWnd, uint arg_14h)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    uint uVar3;\n    uint lpText;\n    uint lpCaption;\n    \n    pcVar1 = _sym.imp.KERNEL32.DLL_GetModuleHandleW;\n    uVar3 = (*_sym.imp.KERNEL32.DLL_GetModuleHandleW)(0, arg_8h, &lpCaption, 0x100);\n    pcVar2 = _sym.imp.USER32.dll_LoadStringW;\n    (*_sym.imp.USER32.dll_LoadStringW)(uVar3);\n    uVar3 = (*pcVar1)(0, arg_ch, &lpText, 0x100);\n    (*pcVar2)(uVar3);\n    if (arg_14h != '\\0') {\n        fcn.0044a48f(0x45d220, &lpCaption);\n        return;\n    }\n    (*_sym.imp.USER32.dll_MessageBoxW)(hWnd, &lpText, &lpCaption, 0x11010);\n    return;\n}\n",
        "token_count": 250
    },
    "00414778": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00414778(uint param_1, uint param_2)\n\n{\n    if ((*0x479bb6 == '\\0') && (*0x479bbc == '\\0')) {\n        fcn.004147b3(param_1, param_2);\n        return;\n    }\n    fcn.00414932(param_1, param_2);\n    return;\n}\n",
        "token_count": 82
    },
    "00414932": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Removing unreachable block (ram,0x0041496c)\n// WARNING: Removing unreachable block (ram,0x0041497e)\n// WARNING: Removing unreachable block (ram,0x00414b06)\n// WARNING: Removing unreachable block (ram,0x00414b0b)\n// WARNING: Removing unreachable block (ram,0x00414b10)\n// WARNING: Removing unreachable block (ram,0x00414b16)\n// WARNING: Removing unreachable block (ram,0x00414991)\n// WARNING: Removing unreachable block (ram,0x004149da)\n// WARNING: Removing unreachable block (ram,0x004149fb)\n// WARNING: Removing unreachable block (ram,0x00414a04)\n// WARNING: Removing unreachable block (ram,0x00414a55)\n// WARNING: Removing unreachable block (ram,0x00414ab2)\n// WARNING: Removing unreachable block (ram,0x00414ab8)\n// WARNING: Removing unreachable block (ram,0x00414abf)\n// WARNING: Removing unreachable block (ram,0x00414aa6)\n// WARNING: Removing unreachable block (ram,0x00414ac7)\n// WARNING: Removing unreachable block (ram,0x00414adc)\n// WARNING: Removing unreachable block (ram,0x00414ae9)\n// WARNING: Removing unreachable block (ram,0x00414aee)\n// WARNING: Removing unreachable block (ram,0x00414af3)\n// WARNING: Removing unreachable block (ram,0x00414af8)\n// WARNING: Removing unreachable block (ram,0x00414afd)\n// WARNING: Removing unreachable block (ram,0x00414b02)\n// WARNING: Removing unreachable block (ram,0x004149af)\n// WARNING: Removing unreachable block (ram,0x004149b6)\n// WARNING: Removing unreachable block (ram,0x004149bb)\n// WARNING: Removing unreachable block (ram,0x004149c1)\n// WARNING: Removing unreachable block (ram,0x004149c6)\n// WARNING: Removing unreachable block (ram,0x004149d0)\n// WARNING: Removing unreachable block (ram,0x00414b21)\n\nuint32_t __cdecl fcn.00414932(uint arg_8h, uint arg_ch)\n\n{\n    uint32_t uVar1;\n    uint var_1274h;\n    uint var_a74h;\n    uint var_868h;\n    uint var_65ch;\n    uint var_450h;\n    uint var_244h;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint hObject;\n    uint var_28h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_14h;\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.0044c510();\n    uVar1 = fcn.0041656a();\n    return uVar1 & 0xffffff00;\n}\n",
        "token_count": 689
    },
    "00415110": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.00415110(uint arg_8h, uint arg_ch)\n\n{\n    uint *arg_8h_00;\n    uint32_t uVar1;\n    uint *arg_ch_00;\n    uint var_c38h;\n    uint var_a2ch;\n    uint var_828h;\n    uint var_61ch;\n    uint var_418h;\n    uint var_214h;\n    uint var_10h;\n    uint var_8h;\n    \n    fcn.00415029(arg_8h);\n    fcn.00415029(arg_ch);\n    fcn.0044a246(&var_828h, &var_10h, &var_418h, &var_214h, &var_61ch);\n    fcn.0044a246(&var_c38h, &var_8h, &var_a2ch, &var_214h, &var_61ch);\n    if ((var_10h == 0) && (var_8h == 0)) {\n        arg_ch_00 = &var_a2ch;\n        arg_8h_00 = &var_418h;\n    }\n    else {\n        arg_ch_00 = &var_8h;\n        arg_8h_00 = &var_10h;\n    }\n    uVar1 = fcn.00449521(arg_8h_00, arg_ch_00);\n    return uVar1 & 0xffffff00 | uVar1 != 0;\n}\n",
        "token_count": 337
    },
    "004152c8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_2h\n// WARNING: Variable defined which should be unmapped: hFindFile\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.004152c8(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    bool bVar1;\n    code *pcVar2;\n    uint8_t uVar3;\n    char cVar4;\n    char cVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    uint8_t uVar8;\n    uint var_12b8h;\n    uint var_10ach;\n    uint var_ea0h;\n    uint var_c94h;\n    uint lpFindFileData;\n    uint var_a5ch;\n    uint var_838h;\n    uint lpFileName;\n    uint var_420h;\n    uint lpExistingFileName;\n    uint uStackY72;\n    uint *puStackY68;\n    uint *puStackY64;\n    uint *puStackY60;\n    uint *puStackY56;\n    uint *puStackY52;\n    uint *puStackY48;\n    uint *puStackY44;\n    uint hFindFile;\n    uint var_2h;\n    \n    fcn.0044c510();\n    uVar8 = 0;\n    fcn.00415029(arg_8h);\n    fcn.00415029(arg_ch);\n    cVar4 = fcn.00415110(&fcn.004152c8::lpFileName, &fcn.004152c8::var_838h);\n    cVar5 = fcn.00415010();\n    if (cVar5 != '\\0') {\n        fcn.004495ce();\n    }\n    cVar5 = fcn.00415010();\n    if (cVar5 != '\\0') {\n        fcn.004495ce();\n    }\n    fcn.0044a246(&fcn.004152c8::lpFileName, &fcn.004152c8::var_10ach, &fcn.004152c8::var_ea0h, &fcn.004152c8::var_c94h, \n                 &fcn.004152c8::var_12b8h);\n    iVar6 = (*_sym.imp.KERNEL32.DLL_FindFirstFileW)();\n    pcVar2 = *0x459164;\n    bVar1 = true;\n    uVar3 = 0;\n    if (iVar6 != -1) {\n        while (uVar8 = uVar3,  bVar1) {\n            if ((lpFindFileData & 0x10) == 0) {\n                puStackY44 = 0x4153e6;\n                fcn.004154da(&fcn.004152c8::var_a5ch, &fcn.004152c8::var_c94h, &fcn.004152c8::var_12b8h, \n                             &fcn.004152c8::var_838h);\n                puStackY44 = &fcn.004152c8::var_10ach;\n                puStackY48 = &fcn.004152c8::lpExistingFileName;\n                puStackY52 = 0x4153f9;\n                fcn.004495f8();\n                puStackY52 = &fcn.004152c8::var_ea0h;\n                puStackY56 = &fcn.004152c8::lpExistingFileName;\n                puStackY60 = 0x41540c;\n                fcn.004495ce();\n                puStackY60 = &fcn.004152c8::var_a5ch;\n                puStackY64 = &fcn.004152c8::lpExistingFileName;\n                puStackY68 = 0x41541f;\n                fcn.004495ce();\n                uStackY72 = 0x415427;\n                puStackY68 = &fcn.004152c8::var_420h;\n                cVar5 = fcn.00414fbc();\n                if (cVar5 == '\\0') {\ncode_r0x00415455:\n                    if (arg_14h == '\\x01') {\n                        if (cVar4 == '\\0') goto code_r0x00415468;\n                        iVar6 = (*pcVar2)();\n                        if (iVar6 == 0) goto code_r0x004154c8;\n                        iVar6 = (**0x459154)();\n                    }\n                    else {\n                        iVar6 = (*pcVar2)();\n                    }\ncode_r0x00415475:\n                    if (iVar6 != 0) {\n                        uVar8 = 1;\n                        goto code_r0x0041547b;\n                    }\n                }\n                else if (arg_10h != '\\0') {\n                    iVar6 = (*_sym.imp.KERNEL32.DLL_lstrcmpiW)();\n                    if (iVar6 != 0) {\n                        (**0x459154)();\n                        goto code_r0x00415455;\n                    }\ncode_r0x00415468:\n                    iVar6 = (*_sym.imp.KERNEL32.DLL_MoveFileW)();\n                    goto code_r0x00415475;\n                }\ncode_r0x004154c8:\n                uVar8 = 0;\n                break;\n            }\ncode_r0x0041547b:\n            iVar6 = (**0x459158)();\n            uVar3 = uVar8;\n            if (iVar6 == 0) {\n                bVar1 = false;\n            }\n        }\n    }\n    uVar7 = (*_sym.imp.KERNEL32.DLL_FindClose)();\n    return uVar7 & 0xffffff00 | uVar8;\n}\n",
        "token_count": 1232
    },
    "004154da": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.004154da(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    uint var_1060h;\n    uint var_e54h;\n    uint var_c48h;\n    uint var_a3ch;\n    uint var_830h;\n    uint var_624h;\n    uint var_418h;\n    uint var_20ch;\n    uint uStackY52;\n    \n    fcn.0044c510();\n    iVar1 = fcn.0044b5b5();\n    if (iVar1 == 0) {\n        fcn.004495f8();\n        return;\n    }\n    fcn.0044a246(arg_8h, &fcn.004154da::var_830h, &fcn.004154da::var_c48h, &fcn.004154da::var_1060h, \n                 &fcn.004154da::var_20ch);\n    fcn.0044a246(arg_14h, &fcn.004154da::var_830h, &fcn.004154da::var_c48h, &fcn.004154da::var_e54h, \n                 &fcn.004154da::var_624h);\n    if (var_20ch == 0x2e) {\n        fcn.004495f8();\n    }\n    if (var_624h == 0x2e) {\n        fcn.004495f8();\n    }\n    fcn.004495f8();\n    fcn.004495ce();\n    fcn.0041564a(&fcn.004154da::var_20ch, arg_10h, &fcn.004154da::var_624h);\n    uStackY52 = 0x4155e1;\n    fcn.0041564a(&fcn.004154da::var_1060h, arg_ch, &fcn.004154da::var_e54h);\n    if (var_a3ch == 0) {\n        if (var_20ch == 0) goto code_r0x00415639;\n        fcn.004495ce();\n    }\n    else {\n        fcn.004495ce();\n    }\n    fcn.004495ce();\ncode_r0x00415639:\n    fcn.004495ce();\n    return;\n}\n",
        "token_count": 528
    },
    "0041564a": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __cdecl fcn.0041564a(int16_t *arg_8h, uint arg_ch, int16_t *arg_10h)\n\n{\n    bool bVar1;\n    int16_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t unaff_EDI;\n    int32_t var_8h;\n    uint var_1h;\n    \n    iVar5 = 0;\n    bVar1 = false;\n    iVar4 = 0;\n    var_8h = 0;\n    iVar3 = fcn.0044b5b5(arg_10h, 0x2a);\n    if (iVar3 != 0) {\n        iVar2 = *arg_10h;\n        while (iVar2 != 0x2a) {\n            *(unaff_EDI + iVar5 * 2) = iVar2;\n            iVar5 = iVar5 + 1;\n            iVar4 = iVar4 + 1;\n            iVar2 = arg_10h[iVar4];\n        }\n        iVar2 = *arg_8h;\n        while (iVar2 != 0) {\n            *(unaff_EDI + iVar5 * 2) = iVar2;\n            iVar5 = iVar5 + 1;\n            var_8h = var_8h + 1;\n            iVar2 = arg_8h[var_8h];\n        }\n        for (arg_10h = arg_10h + iVar4 + 1; *arg_10h != 0; arg_10h = arg_10h + 1) {\n            if (*arg_10h != 0x2a) {\n                *(unaff_EDI + iVar5 * 2) = *arg_10h;\n                iVar5 = iVar5 + 1;\n            }\n        }\n        *(unaff_EDI + iVar5 * 2) = 0;\n        bVar1 = true;\n    }\n    fcn.00449c37(arg_ch, 0x45d0fc);\n    if (!bVar1) {\n        fcn.004495f8();\n    }\n    return;\n}\n",
        "token_count": 482
    },
    "00415ba5": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00415ba5(uint arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t *piVar4;\n    int32_t iVar5;\n    uint lpWSAData;\n    uint name;\n    uint in;\n    \n    iVar2 = sub.WSOCK32.dll_WSAStartup(0x101, &lpWSAData);\n    if (iVar2 == 0) {\n        sub.WSOCK32.dll_gethostname(&name, 0x100);\n        iVar2 = sub.WSOCK32.dll_gethostbyname(&name);\n        if (iVar2 != 0) {\n            piVar1 = *(iVar2 + 0xc);\n            iVar5 = 0;\n            iVar2 = *piVar1;\n            piVar4 = piVar1;\n            while (iVar2 != 0) {\n                piVar4 = piVar4 + 1;\n                iVar5 = iVar5 + 1;\n                iVar2 = *piVar4;\n            }\n            if (iVar5 < in_EAX) {\n                fcn.004495f8(arg_8h, 0x45d0e8);\n            }\n            else {\n                fcn.0044a6b0(&in, piVar1[in_EAX + -1], 4);\n                uVar3 = sub.WSOCK32.dll_inet_ntoa(in);\n                fcn.0044a030(&name, uVar3);\n                uVar3 = fcn.004169d1(&name);\n                fcn.004495f8(arg_8h, uVar3);\n                fcn.0044951c(uVar3);\n            }\n            sub.WSOCK32.dll_WSACleanup();\n            return;\n        }\n    }\n    fcn.004495f8(arg_8h, 0x45bfe0);\n    return;\n}\n",
        "token_count": 423
    },
    "00415c99": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00415c99(uint arg_8h, uint arg_ch)\n\n{\n    int16_t iStack65540;\n    uint uStack44;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint uStack28;\n    \n    fcn.0044c510();\n    (*_sym.imp.USER32.dll_GetClassNameW)();\n    if (iStack65540 != 0) {\n        puStack32 = &stack0xfffefffc;\n        uStack28 = 0x7fff;\n        uStack36 = 0x415cd8;\n        fcn.00415abd();\n        uStack36 = 0x7fff;\n        uStack40 = 0x45d0f8;\n        uStack44 = 0x415ce3;\n        fcn.00415abd();\n    }\n    return 1;\n}\n",
        "token_count": 193
    },
    "00415db1": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00415db1(void)\n\n{\n    uint32_t in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    uint NewState;\n    uint lpLuid;\n    uint var_8h;\n    uint TokenHandle;\n    \n    if (*0x479bb4 == '\\0') {\ncode_r0x00415e1c:\n        if ((*0x479bb5 != '\\0') && ((in_EAX & 4) != 0)) {\n            in_EAX = in_EAX ^ 4;\n            (*_sym.imp.USER32.dll_EnumWindows)(0x415e60, 0);\n        }\n        if ((in_EAX == 0x20) || (in_EAX == 0x40)) {\n            uVar1 = sub.KERNEL32.DLL_SetSystemPowerState(in_EAX == 0x20, 0);\n        }\n        else {\n            uVar1 = (*_sym.imp.USER32.dll_ExitWindowsEx)(in_EAX, 0);\n        }\n    }\n    else {\n        uVar1 = (**0x4592ac)(0x28, &TokenHandle);\n        iVar2 = (*_sym.imp.ADVAPI32.dll_OpenProcessToken)(uVar1);\n        if (iVar2 != 0) {\n            (*_sym.imp.ADVAPI32.dll_LookupPrivilegeValueW)(0, 0x45d018, &lpLuid);\n            NewState = 1;\n            var_8h = 2;\n            (*_sym.imp.ADVAPI32.dll_AdjustTokenPrivileges)(TokenHandle, 0, &NewState, 0, 0, 0);\n            iVar2 = (*_sym.imp.KERNEL32.DLL_GetLastError)();\n            if (iVar2 == 0) goto code_r0x00415e1c;\n        }\n        uVar1 = 0;\n    }\n    return uVar1;\n}\n",
        "token_count": 416
    },
    "00416022": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.00416022(void)\n\n{\n    int32_t iVar1;\n    int16_t *unaff_ESI;\n    \n    if (*unaff_ESI != 0) {\n        iVar1 = fcn.00449521(unaff_ESI, 0x45cfc0);\n        if (iVar1 != 0) {\n            iVar1 = fcn.00449521(unaff_ESI, 0x45cfb4);\n            if (iVar1 == 0) {\n                iVar1 = 2;\n            }\n            else {\n                iVar1 = fcn.00449521(unaff_ESI, 0x45cfa4);\n                if (iVar1 == 0) {\n                    iVar1 = 3;\n                }\n                else {\n                    iVar1 = fcn.00449521(unaff_ESI, 0x45cf98);\n                    if (iVar1 == 0) {\n                        iVar1 = 4;\n                    }\n                    else {\n                        iVar1 = fcn.00449521(unaff_ESI, 0x45cf8c);\n                        if (iVar1 == 0) {\n                            iVar1 = 5;\n                        }\n                        else {\n                            iVar1 = fcn.00449521(unaff_ESI, 0x45cf7c);\n                            if (iVar1 != 0) {\n                                iVar1 = fcn.00449521(unaff_ESI, 0x45cf68);\n                                return (-(iVar1 != 0) & 0xfffffff9) + 7;\n                            }\n                            iVar1 = 6;\n                        }\n                    }\n                }\n            }\n            return iVar1;\n        }\n    }\n    return 1;\n}\n",
        "token_count": 363
    },
    "004161de": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004161de(uint arg_8h, uint noname_1, uint32_t arg_10h, uint arg_14h)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint uVar5;\n    uint8_t *puVar6;\n    uint var_20h;\n    uint var_14h;\n    int32_t var_8h;\n    uint var_4h;\n    \n    fcn.00449872(&var_14h, 0x45cf4c, arg_10h);\n    fcn.00449872(&var_20h, 0x45cf4c, arg_14h);\n    iVar3 = fcn.00449521(&var_20h, &var_14h);\n    pcVar1 = *0x459178;\n    if (iVar3 == 0) {\n        uVar4 = (**0x459178)(arg_8h, arg_10h, 0xe);\n        pcVar2 = *0x45917c;\n        uVar4 = (**0x45917c)(arg_8h, uVar4);\n        var_8h = (**0x459180)(uVar4);\n        arg_10h = 0;\n        if (*(var_8h + 4) != 0) {\n            puVar6 = var_8h + 6;\n            do {\n                uVar4 = (*pcVar1)(arg_8h, *(puVar6 + 0xc), 3);\n                var_4h = (*pcVar2)(arg_8h, uVar4);\n                uVar4 = (**0x459184)(arg_8h, uVar4);\n                uVar5 = (**0x459180)(var_4h);\n                if (((*puVar6 == *0x467a14) && (puVar6[1] == *0x467a10)) && (*(puVar6 + 6) == *0x467a0c)) {\n                    *0x467a18 = (*_sym.imp.USER32.dll_CreateIconFromResourceEx)\n                                          (uVar5, uVar4, 1, 0x30000, *0x467a14, *0x467a10, 0);\n                    break;\n                }\n                arg_10h = arg_10h + 1;\n                puVar6 = puVar6 + 0xe;\n            } while (arg_10h < *(var_8h + 4));\n        }\n        uVar4 = 0;\n    }\n    else {\n        uVar4 = 1;\n    }\n    return uVar4;\n}\n",
        "token_count": 592
    },
    "004164f5": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "link function at runtime on Windows"
        ],
        "decompiled_code": "\nvoid fcn.004164f5(void)\n\n{\n    int32_t iVar1;\n    int32_t *unaff_ESI;\n    \n    if (unaff_ESI[2] == 0) {\n        iVar1 = (*_sym.imp.KERNEL32.DLL_LoadLibraryA)(0x45c5d8);\n        *unaff_ESI = iVar1;\n        if (iVar1 != 0) {\n            iVar1 = (*_sym.imp.KERNEL32.DLL_GetProcAddress)(iVar1, 0x45cefc);\n            unaff_ESI[2] = iVar1;\n        }\n    }\n    return;\n}\n",
        "token_count": 136
    },
    "0041651c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "link function at runtime on Windows"
        ],
        "decompiled_code": "\nvoid fcn.0041651c(void)\n\n{\n    int32_t iVar1;\n    int32_t *unaff_ESI;\n    \n    if (unaff_ESI[2] == 0) {\n        iVar1 = (*_sym.imp.KERNEL32.DLL_LoadLibraryA)(0x45c5d8);\n        *unaff_ESI = iVar1;\n        if (iVar1 != 0) {\n            iVar1 = (*_sym.imp.KERNEL32.DLL_GetProcAddress)(iVar1, 0x45ceec);\n            unaff_ESI[2] = iVar1;\n        }\n    }\n    return;\n}\n",
        "token_count": 136
    },
    "00416543": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "link function at runtime on Windows"
        ],
        "decompiled_code": "\nvoid fcn.00416543(void)\n\n{\n    int32_t iVar1;\n    int32_t *unaff_ESI;\n    \n    if (unaff_ESI[2] == 0) {\n        iVar1 = (*_sym.imp.KERNEL32.DLL_LoadLibraryA)(0x45c5d8);\n        *unaff_ESI = iVar1;\n        if (iVar1 != 0) {\n            iVar1 = (*_sym.imp.KERNEL32.DLL_GetProcAddress)(iVar1, 0x45cedc);\n            unaff_ESI[2] = iVar1;\n        }\n    }\n    return;\n}\n",
        "token_count": 135
    },
    "0041656a": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "link function at runtime on Windows"
        ],
        "decompiled_code": "\nvoid fcn.0041656a(void)\n\n{\n    int32_t iVar1;\n    int32_t *unaff_ESI;\n    \n    if (unaff_ESI[2] == 0) {\n        iVar1 = (*_sym.imp.KERNEL32.DLL_LoadLibraryA)(0x45cf3c);\n        *unaff_ESI = iVar1;\n        if (iVar1 != 0) {\n            iVar1 = (*_sym.imp.KERNEL32.DLL_GetProcAddress)(iVar1, 0x45cf2c);\n            unaff_ESI[2] = iVar1;\n        }\n    }\n    return;\n}\n",
        "token_count": 136
    },
    "00416591": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "link function at runtime on Windows"
        ],
        "decompiled_code": "\nvoid fcn.00416591(void)\n\n{\n    int32_t iVar1;\n    int32_t *unaff_ESI;\n    \n    if (unaff_ESI[2] == 0) {\n        iVar1 = (*_sym.imp.KERNEL32.DLL_LoadLibraryA)(0x45cf3c);\n        *unaff_ESI = iVar1;\n        if (iVar1 != 0) {\n            iVar1 = (*_sym.imp.KERNEL32.DLL_GetProcAddress)(iVar1, 0x45cf18);\n            unaff_ESI[2] = iVar1;\n        }\n    }\n    return;\n}\n",
        "token_count": 134
    },
    "004165b8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "link function at runtime on Windows"
        ],
        "decompiled_code": "\nvoid fcn.004165b8(void)\n\n{\n    int32_t iVar1;\n    int32_t *unaff_ESI;\n    \n    if (unaff_ESI[2] == 0) {\n        iVar1 = (*_sym.imp.KERNEL32.DLL_LoadLibraryA)(0x45cf3c);\n        *unaff_ESI = iVar1;\n        if (iVar1 != 0) {\n            iVar1 = (*_sym.imp.KERNEL32.DLL_GetProcAddress)(iVar1, 0x45cec8);\n            unaff_ESI[2] = iVar1;\n        }\n    }\n    return;\n}\n",
        "token_count": 135
    },
    "004165df": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t fcn.004165df(void)\n\n{\n    int16_t iVar1;\n    uint32_t uVar2;\n    uint32_t in_EAX;\n    int32_t iVar3;\n    uint32_t *unaff_EBX;\n    int32_t *unaff_ESI;\n    int32_t unaff_EDI;\n    int32_t var_8h;\n    uint var_1h;\n    \n    var_8h = 1;\n    var_1h._0_1_ = 0;\n    if (unaff_EDI == 0) {\n        return in_EAX & 0xffffff00;\n    }\n    while( true ) {\n        iVar3 = fcn.0044a22c(*(unaff_EDI + *unaff_ESI * 2));\n        if (iVar3 == 0) break;\n        *unaff_ESI = *unaff_ESI + 1;\n    }\n    *unaff_EBX = 0;\n    iVar1 = *(unaff_EDI + *unaff_ESI * 2);\n    if (iVar1 != 0x2b) {\n        if (iVar1 != 0x2d) goto code_r0x00416650;\n        var_8h = -1;\n    }\n    *unaff_ESI = *unaff_ESI + 1;\ncode_r0x00416650:\n    while (*(unaff_EDI + *unaff_ESI * 2) != 0) {\n        iVar3 = fcn.0044a199(*(unaff_EDI + *unaff_ESI * 2));\n        if (iVar3 == 0) break;\n        uVar2 = *unaff_EBX;\n        *unaff_EBX = uVar2 * 10;\n        *unaff_EBX = (*(unaff_EDI + *unaff_ESI * 2) - 0x30) + uVar2 * 10;\n        *unaff_ESI = *unaff_ESI + 1;\n        var_1h._0_1_ = 1;\n    }\n    uVar2 = *unaff_EBX;\n    *unaff_EBX = uVar2 * var_8h;\n    return uVar2 * var_8h & 0xffffff00 | var_1h;\n}\n",
        "token_count": 524
    },
    "004166a9": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004166f6)\n\nvoid __cdecl fcn.004166a9(int32_t arg_8h, int32_t arg_ch, uint arg_10h)\n\n{\n    uint8_t *puVar1;\n    ushort uVar2;\n    int32_t iVar3;\n    ushort *puVar4;\n    ushort *unaff_EBX;\n    uint *puVar5;\n    uint *puVar6;\n    uint var_28h;\n    int32_t var_4h;\n    \n    var_4h = 0;\n    puVar5 = 0x45d258;\n    puVar6 = &var_28h;\n    for (iVar3 = 8; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar6 = *puVar5;\n        puVar5 = puVar5 + 1;\n        puVar6 = puVar6 + 1;\n    }\n    *puVar6 = *puVar5;\n    if (arg_10h != '\\0') {\n        *unaff_EBX = 0x30;\n        unaff_EBX[1] = 0x78;\n        var_4h = 2;\n    }\n    iVar3 = arg_ch + -1;\n    if (-1 < iVar3) {\n        puVar4 = unaff_EBX + var_4h + iVar3 * 2;\n        do {\n            puVar1 = iVar3 + arg_8h;\n            iVar3 = iVar3 + -1;\n            uVar2 = *(&var_28h + (*puVar1 / 0x10) * 2);\n            puVar4[1] = *(&var_28h + (*puVar1 % 0x10) * 2);\n            *puVar4 = uVar2;\n            puVar4 = puVar4 + -2;\n        } while (-1 < iVar3);\n    }\n    unaff_EBX[var_4h + arg_ch * 2] = 0;\n    return;\n}\n",
        "token_count": 448
    },
    "00416868": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00416868(uint arg_8h, int32_t arg_ch)\n\n{\n    ushort uVar1;\n    int16_t *in_EAX;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int16_t *piVar4;\n    ushort *unaff_EDI;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    (**0x459190)();\n    if ((*in_EAX != 0) && (uVar2 = fcn.0044985c(),  3 < uVar2)) {\n        if (arg_8h != '\\0') {\n            fcn.00449c77(&var_10h);\n            var_8h._0_2_ = 0;\n            uVar1 = fcn.00449794(&var_10h);\n            *unaff_EDI = uVar1;\n            in_EAX = in_EAX + arg_ch + 4;\n            uVar2 = fcn.0044985c(in_EAX);\n            if (1 < uVar2) {\n                fcn.00449c77(&var_10h, in_EAX, 2);\n                var_ch._0_2_ = 0;\n                uVar1 = fcn.00449794(&var_10h);\n                unaff_EDI[1] = uVar1;\n                in_EAX = in_EAX + arg_ch + 2;\n                uVar2 = fcn.0044985c(in_EAX);\n                if (1 < uVar2) {\n                    fcn.00449c77(&var_10h, in_EAX, 2);\n                    var_ch._0_2_ = 0;\n                    uVar1 = fcn.00449794(&var_10h);\n                    in_EAX = in_EAX + 2;\n                    unaff_EDI[3] = uVar1;\n                    iVar3 = fcn.0044985c(in_EAX);\n                    if (iVar3 != 0) {\n                        in_EAX = in_EAX + arg_ch;\n                    }\n                }\n            }\n        }\n        uVar2 = fcn.0044985c(in_EAX);\n        if (1 < uVar2) {\n            fcn.00449c77(&var_10h, in_EAX, 2);\n            var_ch._0_2_ = 0;\n            uVar1 = fcn.00449794(&var_10h);\n            unaff_EDI[4] = uVar1;\n            var_4h = arg_ch * 2 + 4;\n            piVar4 = in_EAX + arg_ch + 2;\n            uVar2 = fcn.0044985c(piVar4);\n            if (1 < uVar2) {\n                fcn.00449c77(&var_10h, piVar4, 2);\n                var_ch._0_2_ = 0;\n                uVar1 = fcn.00449794(&var_10h);\n                iVar3 = piVar4 + var_4h;\n                unaff_EDI[5] = uVar1;\n                uVar2 = fcn.0044985c(iVar3);\n                if (1 < uVar2) {\n                    fcn.00449c77(&var_10h, iVar3, 2);\n                    var_ch._0_2_ = 0;\n                    uVar1 = fcn.00449794(&var_10h);\n                    unaff_EDI[6] = uVar1;\n                }\n            }\n        }\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 810
    },
    "00416bd9": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00416bd9(int32_t arg_8h, uint lpsz, uint cchLength, uint noname_3, uint arg_18h)\n\n{\n    int32_t in_EAX;\n    uint arg_8h_00;\n    uint32_t uVar1;\n    uint8_t uVar2;\n    uint *arg_ch;\n    \n    (*_sym.imp.USER32.dll_CharUpperBuffW)(lpsz, cchLength);\n    if ((*(arg_8h + 4) == 0) || (in_EAX == 0)) {\n        uVar2 = 0;\n    }\n    else {\n        arg_ch = &lpsz;\n        arg_8h_00 = fcn.004388ea();\n        fcn.0041825b(arg_8h_00, arg_ch);\n        uVar2 = 1;\n    }\n    uVar1 = fcn.0044951c(lpsz);\n    return uVar1 & 0xffffff00 | uVar2;\n}\n",
        "token_count": 224
    },
    "00416c47": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00416c47(uint lpsz, uint cchLength)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    uint var_4h;\n    \n    (*_sym.imp.USER32.dll_CharUpperBuffW)(lpsz, cchLength);\n    if (*(in_EAX + 4) != 0) {\n        fcn.004388ea(&lpsz, &var_4h);\n        iVar1 = fcn.004181a2();\n        if (iVar1 != 0) {\n            uVar2 = 0xffffffff;\n            goto code_r0x00416c93;\n        }\n    }\n    iVar1 = fcn.004181a2(&lpsz, &var_4h);\n    uVar2 = 0;\n    if (iVar1 != 0) {\n        uVar2 = 1;\n    }\ncode_r0x00416c93:\n    fcn.0044951c(lpsz);\n    return uVar2;\n}\n",
        "token_count": 224
    },
    "00417200": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00417200(int16_t *arg_8h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int16_t iVar3;\n    int32_t *unaff_ESI;\n    int32_t iVar4;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    uVar1 = unaff_ESI[1];\n    var_8h = 0;\n    uVar2 = uVar1;\n    if (uVar1 != 0) {\n        do {\n            uVar2 = uVar2 - 1;\n            iVar3 = *arg_8h;\n            iVar4 = 0;\n            var_4h = 0;\n            if (iVar3 == 0) {\n                return uVar2;\n            }\n            do {\n                if (*(*unaff_ESI + uVar2 * 2) == iVar3) {\n                    var_4h = var_4h + 1;\n                }\n                iVar4 = iVar4 + 1;\n                iVar3 = arg_8h[iVar4];\n            } while (iVar3 != 0);\n            if (var_4h == 0) {\n                return uVar2;\n            }\n            var_8h = var_8h + 1;\n        } while (var_8h < uVar1);\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 308
    },
    "004172f4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004172f4(uint arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    uint32_t in_EAX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t *unaff_EDI;\n    \n    iVar1 = arg_10h;\n    if (arg_14h < 0) {\n        arg_14h = fcn.0044985c(arg_8h);\n    }\n    if ((((arg_14h != 0) && (uVar2 = unaff_EDI[1],  uVar2 != 0)) && (in_EAX <= uVar2)) && (-2 < in_EAX)) {\n        if (0 < arg_10h) {\n            uVar4 = -(in_EAX != 0xffffffff) & in_EAX;\n            iVar3 = 0;\n            if (arg_10h < 1) {\n                return uVar4;\n            }\n            do {\n                if (uVar4 < (uVar2 - arg_14h) + 1) {\n                    if (arg_ch == 1) {\n                        iVar1 = fcn.004175f5(arg_14h);\n                    }\n                    else {\n                        iVar1 = fcn.00417566(*unaff_EDI + uVar4 * 2, arg_ch);\n                    }\n                    if (iVar1 == 0) {\n                        iVar3 = iVar3 + 1;\n                        goto code_r0x0041737a;\n                    }\n                    uVar2 = unaff_EDI[1];\n                }\n                else {\ncode_r0x0041737a:\n                    uVar2 = unaff_EDI[1];\n                    if (uVar2 <= uVar4) goto joined_r0x004173fe;\n                    if (arg_10h <= iVar3) {\n                        return uVar4;\n                    }\n                }\n                uVar4 = uVar4 + 1;\n            } while( true );\n        }\n        if (-1 < arg_10h) {\n            return uVar2;\n        }\n        if (in_EAX == 0xffffffff) {\n            uVar4 = uVar2 - arg_14h;\n        }\n        else {\n            uVar4 = in_EAX - arg_14h;\n        }\n        arg_10h = 0;\n        if (-iVar1 == 0 || 0 < iVar1) {\n            return uVar4;\n        }\n        for (; iVar3 = arg_10h,  -1 < uVar4; uVar4 = uVar4 - 1) {\n            do {\n                if (arg_ch == 1) {\n                    iVar3 = fcn.004175f5(arg_14h);\n                }\n                else {\n                    iVar3 = fcn.00417566(*unaff_EDI + uVar4 * 2, arg_ch);\n                }\n                if (iVar3 == 0) {\n                    arg_10h = arg_10h + 1;\n                    break;\n                }\n                uVar4 = uVar4 - 1;\n            } while (-1 < uVar4);\n            iVar3 = arg_10h;\n            if (uVar4 < 0) break;\n            if (SBORROW4(arg_10h, -iVar1) == arg_10h + iVar1 < 0) {\n                return uVar4;\n            }\n        }\njoined_r0x004173fe:\n        if (iVar3 != 0) {\n            return uVar4;\n        }\n    }\n    return unaff_EDI[1];\n}\n",
        "token_count": 798
    },
    "00417566": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00417566(int16_t *arg_8h, int32_t arg_ch)\n\n{\n    uint32_t in_EAX;\n    uint32_t in_ECX;\n    int16_t *in_EDX;\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    \n    if (arg_ch == 2) {\n        uVar2 = 0;\n        uVar1 = 0;\n        if (in_ECX <= in_EAX) {\n            in_ECX = in_EAX;\n        }\n        while (in_ECX != 0) {\n            in_ECX = in_ECX - 1;\n            if (*arg_8h != *in_EDX) {\n                uVar2 = fcn.0044ba27(*arg_8h);\n                uVar2 = uVar2 & 0xffff;\n                uVar1 = fcn.0044ba27(*in_EDX);\n                uVar1 = uVar1 & 0xffff;\n                if (uVar2 != uVar1) break;\n            }\n            arg_8h = arg_8h + 1;\n            in_EDX = in_EDX + 1;\n        }\n        if (uVar2 - uVar1 < 0) {\n            uVar2 = 0xffffffff;\n        }\n        else {\n            uVar2 = uVar2 != uVar1 && -1 < uVar2 - uVar1;\n        }\n    }\n    else {\n        if (arg_ch == 0) {\n            uVar3 = 0x400;\n        }\n        else {\n            uVar3 = 0x409;\n        }\n        uVar2 = (**0x45919c)(uVar3, 1, arg_8h);\n        if (uVar2 != 0) {\n            uVar2 = uVar2 - 2;\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 421
    },
    "004175f5": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.004175f5(uint16_t *param_1, int32_t param_2)\n\n{\n    uint16_t *in_EAX;\n    \n    if (param_2 != 0) {\n        do {\n            if (*in_EAX != *param_1) {\n                return (-(*in_EAX < *param_1) & 0xfffffffe) + 1;\n            }\n            in_EAX = in_EAX + 1;\n            param_1 = param_1 + 1;\n            param_2 = param_2 + -1;\n        } while (param_2 != 0);\n    }\n    return 0;\n}\n",
        "token_count": 147
    },
    "null": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "",
        "token_count": 0
    },
    "00417a7d": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00417a7d(void)\n\n{\n    code *pcVar1;\n    int32_t unaff_ESI;\n    \n    pcVar1 = *0x4593cc;\n    if (*(unaff_ESI + 0x2c) != '\\0') {\n        (**0x4593cc)(unaff_ESI + 0x38);\n        (*pcVar1)(unaff_ESI + 0x58);\n        (*pcVar1)(unaff_ESI + 0x68);\n        (*pcVar1)(unaff_ESI + 0x78);\n        (*pcVar1)(unaff_ESI + 0x88);\n        (*pcVar1)(unaff_ESI + 0x48);\n        (*pcVar1)(unaff_ESI + 0x98);\n        (*pcVar1)(unaff_ESI + 0xa8);\n        if (*(unaff_ESI + 8) != '\\0') {\n            *0x478408 = 0;\n        }\n    }\n    return;\n}\n",
        "token_count": 225
    },
    "00417ad2": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl\nfcn.00417ad2(int32_t arg_8h, int32_t arg_ch, uint noname_2, uint noname_3, uint arg_18h, uint *arg_1ch, uint arg_20h)\n\n{\n    int32_t *piVar1;\n    char cVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint var_10h;\n    uint var_8h;\n    \n    if (*(arg_8h + 8) != '\\0') {\n        return 0x80020001;\n    }\n    if (*(arg_8h + 0x2c) == '\\0') {\n        if (arg_ch == 0xc) {\n            piVar1 = *(arg_8h + 0x10);\n            if (piVar1 != NULL) {\n                (**(*piVar1 + 0x18))(piVar1, *(arg_8h + 0xc));\n                (**(**(arg_8h + 0x10) + 8))(*(arg_8h + 0x10));\n                *(arg_8h + 0x10) = 0;\n            }\n        }\n        else {\n            cVar2 = fcn.00419b83();\n            if (cVar2 != '\\0') {\n                piVar1 = *(arg_8h + 0x28);\n                var_10h._0_2_ = 8;\n                if ((piVar1 != NULL) &&\n                   (iVar3 = (**(*piVar1 + 0x1c))(piVar1, arg_ch, &var_8h, 1, &arg_20h),  -1 < iVar3)) {\n                    uVar4 = fcn.00417c2a(arg_8h, &var_10h, arg_1ch);\n                    return uVar4;\n                }\n            }\n        }\n    }\n    else if (arg_ch - 1U < 0xb) {\n    // switch table (11 cases) at 0x417bfe\n        switch(*((arg_ch - 1U) * 4 + 0x417bfe)) {\n        case 0x417b04:\n            *(arg_8h + 0x2d) = 1;\n            var_10h._0_2_ = 8;\n            var_8h = 0x45bfe0;\n            if (arg_1ch[2] != 0) {\n                (**0x4593d0)(arg_8h + 0x38, *arg_1ch);\n            }\n            uVar4 = fcn.00417c2a(arg_8h, &var_10h, arg_1ch);\n            return uVar4;\n        case 0x417b3c:\n            fcn.00417a7d();\n            return 0;\n        case 0x417b43:\n            arg_8h = arg_8h + 0x38;\n            break;\n        case 0x417b48:\n            arg_8h = arg_8h + 0x68;\n            break;\n        case 0x417b4d:\n            arg_8h = arg_8h + 0x58;\n            break;\n        case 0x417b52:\n            arg_8h = arg_8h + 0x48;\n            break;\n        case 0x417b57:\n            arg_8h = arg_8h + 0x78;\n            break;\n        case 0x417b5c:\n            arg_8h = arg_8h + 0x88;\n            break;\n        case 0x417b64:\n            arg_8h = arg_8h + 0x98;\n            break;\n        case 0x417b6c:\n            arg_8h = arg_8h + 0xa8;\n            break;\n        case 0x417b74:\n            arg_8h = arg_8h + 0xb8;\n        }\n        fcn.00417a5c(arg_18h, arg_8h, *arg_1ch, arg_20h);\n    }\n    return 0;\n}\n",
        "token_count": 928
    },
    "00417c2a": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00417c2a(int32_t arg_8h, int32_t arg_ch, int32_t *arg_10h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint var_14h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    pcVar1 = *0x4591a0;\n    var_14h = 0;\n    var_8h = 0;\n    var_ch = 1;\n    var_4h = 3;\n    (**0x4591a0)(0x4783f4);\n    if (*0x4783f4 != 1) {\n        do {\n            if (var_4h == 0) break;\n            (**0x4591a4)(0x4783f4);\n            (*_sym.imp.KERNEL32.DLL_Sleep)(10);\n            (*pcVar1)(0x4783f4);\n            var_4h = var_4h + -1;\n        } while (*0x4783f4 != 1);\n        iVar2 = *0x4783f8;\n        if (*0x4783f4 != 1) goto code_r0x00417d6d;\n    }\n    fcn.00419289(arg_8h + 0x18);\n    fcn.00417dfb(&var_14h);\n    fcn.00418c7e(*(arg_8h + 0x30));\n    fcn.00417dfb(&var_14h);\n    fcn.00418cde(arg_ch);\n    fcn.00417dfb(&var_14h);\n    arg_ch = arg_10h[2];\n    if (-1 < arg_ch + -1) {\n        iVar2 = (arg_ch + -1) * 0x10;\n        do {\n            fcn.00418cde(*arg_10h + iVar2);\n            fcn.00417dfb();\n            iVar2 = iVar2 + -0x10;\n            arg_ch = arg_ch + -1;\n        } while (arg_ch != 0);\n    }\n    iVar2 = *0x4783f8 + 1;\n    if (*0x4783fc + 0x40 < iVar2) {\n        *0x4783fc = *0x4783f8 + -0x3f;\n    }\ncode_r0x00417d6d:\n    *0x4783f8 = iVar2;\n    (**0x4591a4)(0x4783f4);\n    fcn.0041858e();\n    return 0;\n}\n",
        "token_count": 585
    },
    "00417f34": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00417f34(void)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    code *pcVar3;\n    uint32_t in_EAX;\n    uint *unaff_ESI;\n    uint var_4h;\n    \n    pcVar3 = _sym.imp.KERNEL32.DLL_CloseHandle;\n    if (in_EAX == 0xffffffff) {\n        in_EAX = unaff_ESI[10];\n    }\n    uVar2 = unaff_ESI[10];\n    if ((uVar2 & in_EAX & 2) != 0) {\n        (*_sym.imp.KERNEL32.DLL_CloseHandle)(*unaff_ESI);\n    }\n    if ((unaff_ESI[10] & in_EAX & 4) != 0) {\n        (*pcVar3)(unaff_ESI[3]);\n    }\n    if ((unaff_ESI[10] & in_EAX & 1) != 0) {\n        (*pcVar3)(unaff_ESI[6]);\n    }\n    puVar1 = unaff_ESI + 10;\n    *puVar1 = *puVar1 & ~in_EAX;\n    if ((*puVar1 == 0) && (uVar2 != 0)) {\n        (*pcVar3)(unaff_ESI[9]);\n        unaff_ESI[0xb] = 0;\n    }\n    return;\n}\n",
        "token_count": 310
    },
    "0041811f": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0041811f(uint *param_1)\n\n{\n    if (param_1 != NULL) {\n        if (param_1[5] != 0) {\n            fcn.0041811f(param_1[5]);\n        }\n        if (param_1[6] != 0) {\n            fcn.0041811f(param_1[6]);\n        }\n        if ((*(param_1 + 3) == '\\0') && (param_1[4] != 0)) {\n            fcn.004388f7(param_1[4], 1);\n        }\n        fcn.0044951c(*param_1);\n        fcn.0044951c(param_1);\n    }\n    return;\n}\n",
        "token_count": 164
    },
    "0041835f": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0041835f(ulong *param_1)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint uVar3;\n    ulong *unaff_EBX;\n    uint *puVar4;\n    uint uVar5;\n    uint *puVar6;\n    \n    uVar3 = *(param_1 + 1);\n    uVar5 = 0;\n    *(unaff_EBX + 1) = uVar3;\n    *(unaff_EBX + 0xc) = 0;\n    // switch table (11 cases) at 0x4184c3\n    switch(uVar3) {\n    case 1:\n    case 6:\n    case 7:\n        *unaff_EBX = *param_1;\n        break;\n    case 2:\n        *unaff_EBX = *param_1;\n        *(unaff_EBX + 4) = *(param_1 + 4);\n        break;\n    case 3:\n        *unaff_EBX = *param_1;\n        break;\n    case 4:\n        iVar1 = fcn.00449614(0xc);\n        if (iVar1 == 0) {\n            uVar3 = 0;\n        }\n        else {\n            uVar3 = fcn.00416dcf();\n        }\n        *(unaff_EBX + 0xc) = uVar3;\n        break;\n    case 5:\n        puVar2 = fcn.00449614(0x210);\n        if (puVar2 == NULL) {\n            puVar2 = NULL;\n        }\n        else {\n            puVar4 = *param_1;\n            puVar6 = puVar2;\n            for (iVar1 = 0x84; iVar1 != 0; iVar1 = iVar1 + -1) {\n                *puVar6 = *puVar4;\n                puVar4 = puVar4 + 1;\n                puVar6 = puVar6 + 1;\n            }\n        }\n        *unaff_EBX = puVar2;\n        if (puVar2[1] != 0) {\n            *puVar2[1] = *puVar2[1] + 1;\n        }\n        *(*unaff_EBX + 0x20e) = *(*param_1 + 0x20e);\n        break;\n    case 8:\n        if (*param_1 != 0) {\n            uVar3 = fcn.00449614(0x10);\n            *unaff_EBX = uVar3;\n            (**0x4593d4)(uVar3);\n            iVar1 = (**0x4593d0)(*unaff_EBX, *param_1);\n            if (iVar1 < 0) {\n                (**0x4593cc)(*unaff_EBX);\n                fcn.0044951c(*unaff_EBX);\n                *unaff_EBX = 0;\n            }\n        }\n        break;\n    case 9:\n        *unaff_EBX = *param_1;\n        break;\n    case 10:\n        iVar1 = fcn.00449614(0x14);\n        if (iVar1 != 0) {\n            uVar5 = fcn.004182ff();\n        }\n        *unaff_EBX = uVar5;\n        fcn.0041766a();\n        break;\n    case 0xb:\n        puVar2 = fcn.00449614(8);\n        *unaff_EBX = puVar2;\n        *puVar2 = **param_1;\n        if (**unaff_EBX == 0) {\n            uVar3 = fcn.00449614(1);\n            *(*unaff_EBX + 4) = uVar3;\n            **(*unaff_EBX + 4) = 0;\n        }\n        else {\n            uVar3 = fcn.00449614(**unaff_EBX);\n            *(*unaff_EBX + 4) = uVar3;\n            fcn.0044a6b0((*unaff_EBX)[1], *(*param_1 + 4), **unaff_EBX);\n        }\n    }\n    return;\n}\n",
        "token_count": 903
    },
    "004184ef": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004184ef(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    int32_t *piVar5;\n    int32_t iVar6;\n    uint uVar7;\n    int32_t **unaff_ESI;\n    uint var_4h;\n    \n    if (((unaff_ESI[2] == 0x5) && (piVar5 = (*unaff_ESI)[1],  piVar5 != NULL)) && (1 < *piVar5)) {\n        *piVar5 = *piVar5 + -1;\n        iVar2 = **unaff_ESI;\n        iVar3 = fcn.00449614((*unaff_ESI)[2] << 2);\n        **unaff_ESI = iVar3;\n        puVar4 = fcn.00449614(4);\n        if (puVar4 == NULL) {\n            puVar4 = NULL;\n        }\n        else {\n            *puVar4 = 1;\n        }\n        (*unaff_ESI)[1] = puVar4;\n        piVar5 = *unaff_ESI;\n        iVar3 = 0;\n        if (0 < piVar5[2]) {\n            do {\n                piVar1 = iVar2 + iVar3 * 4;\n                if (*piVar1 == 0) {\n                    *(*piVar5 + iVar3 * 4) = 0;\n                }\n                else {\n                    iVar6 = fcn.00449614(0x10);\n                    if (iVar6 == 0) {\n                        uVar7 = 0;\n                    }\n                    else {\n                        uVar7 = fcn.0041835f(*piVar1);\n                    }\n                    *(**unaff_ESI + iVar3 * 4) = uVar7;\n                }\n                piVar5 = *unaff_ESI;\n                iVar3 = iVar3 + 1;\n            } while (iVar3 < piVar5[2]);\n        }\n    }\n    return;\n}\n",
        "token_count": 444
    },
    "00418641": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00418641(void)\n\n{\n    int32_t unaff_ESI;\n    \n    if (((*(unaff_ESI + 8) != 4) && (*(unaff_ESI + 0xc) == 0)) || (*(unaff_ESI + 8) == 0xb)) {\n        fcn.004188e0();\n    }\n    return **(unaff_ESI + 0xc);\n}\n",
        "token_count": 93
    },
    "00418661": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00418661(void)\n\n{\n    int32_t unaff_ESI;\n    \n    if ((*(unaff_ESI + 8) != 4) && (*(unaff_ESI + 0xc) == 0)) {\n        fcn.004188e0();\n    }\n    return *(unaff_ESI + 0xc);\n}\n",
        "token_count": 77
    },
    "00418692": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nfloat10 __fastcall fcn.00418692(double *param_1)\n\n{\n    int32_t iVar1;\n    int16_t *arg_8h_2;\n    char cVar2;\n    uint unaff_ESI;\n    float10 fVar3;\n    uint var_4h;\n    \n    iVar1 = *(param_1 + 1);\n    if (iVar1 == 1) {\n        fVar3 = *param_1;\n    }\n    else if (iVar1 == 2) {\n        fVar3 = *param_1;\n    }\n    else if (iVar1 == 3) {\n        fVar3 = *param_1;\n    }\n    else {\n        if (iVar1 == 4) {\n            arg_8h_2 = **(param_1 + 0xc);\n            if ((*arg_8h_2 == 0x30) && ((arg_8h_2[1] == 0x78 || (arg_8h_2[1] == 0x58)))) {\n                fcn.004167a5();\n                return param_1;\n            }\n            cVar2 = fcn.00419baa();\n            if (cVar2 != '\\0') {\n                fVar3 = fcn.00449b60(arg_8h_2, unaff_ESI, param_1);\n                return fVar3;\n            }\n        }\n        else if (iVar1 == 9) {\n            if (*param_1 != '\\0') {\n                return *0x462040;\n            }\n        }\n        else if (iVar1 == 10) {\n            return *(*param_1 + 4);\n        }\n        fVar3 = *0x462048;\n    }\n    return fVar3;\n}\n",
        "token_count": 381
    },
    "00418886": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00418886(double *param_1)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    bool bVar3;\n    \n    iVar1 = *(param_1 + 1);\n    piVar2 = iVar1 + -1;\n    if (piVar2 == NULL) {\n        bVar3 = *param_1 == 0;\n    }\n    else if (iVar1 == 2) {\n        piVar2 = *param_1 | *(param_1 + 4);\n        bVar3 = piVar2 == NULL;\n    }\n    else {\n        if (iVar1 == 3) {\n            piVar2 = (*param_1 < *0x462048) << 8 | (*param_1 == *0x462048) << 0xe;\n            if (POPCOUNT(piVar2 >> 8 & 0x44) != '\\0') goto code_r0x004188d1;\n            goto code_r0x004188a9;\n        }\n        if (iVar1 == 4) {\n            piVar2 = *(param_1 + 0xc);\n            bVar3 = piVar2[1] == 0;\n        }\n        else {\n            if (iVar1 == 7) {\n                return *param_1 != 0;\n            }\n            if (iVar1 == 9) {\n                return *param_1;\n            }\n            piVar2 = iVar1 + -0xb;\n            if (piVar2 != NULL) goto code_r0x004188d1;\n            piVar2 = *param_1;\n            bVar3 = *piVar2 == 0;\n        }\n    }\n    if (bVar3) {\ncode_r0x004188d1:\n        return piVar2 & 0xffffff00;\n    }\ncode_r0x004188a9:\n    return CONCAT31(piVar2 >> 8, 1);\n}\n",
        "token_count": 423
    },
    "004188e0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004188e0(void)\n\n{\n    ulong *in_EAX;\n    ushort *arg_8h;\n    int32_t iVar1;\n    uint uVar2;\n    uint unaff_ESI;\n    uint uVar3;\n    \n    if (*(in_EAX + 1) == 4) {\n        return;\n    }\n    arg_8h = fcn.00449614();\n    // switch table (11 cases) at 0x4189d0\n    switch(*(in_EAX + 1)) {\n    case 1:\n        fcn.0044967e(*in_EAX, arg_8h, 10);\n        break;\n    case 2:\n        fcn.004496bf(*in_EAX, *(in_EAX + 4), arg_8h, 10);\n        break;\n    case 3:\n        fcn.00449872(arg_8h, 0x45d528, *in_EAX);\n        break;\n    case 7:\n        fcn.00449872(arg_8h, 0x45d51c, *in_EAX);\n        break;\n    case 9:\n        if (*in_EAX == '\\0') {\n            uVar3 = 0x45d504;\n        }\n        else {\n            uVar3 = 0x45d510;\n        }\n        goto code_r0x0041896f;\n    case 10:\n        uVar3 = *(*in_EAX + 8);\ncode_r0x0041896f:\n        fcn.004495f8(arg_8h, uVar3);\n        break;\n    case 0xb:\n        iVar1 = **in_EAX;\n        if (iVar1 != 0) {\n            fcn.004166a9((*in_EAX)[1], iVar1, 1);\n            break;\n        }\n    default:\n        *arg_8h = 0;\n    }\n    fcn.004189fc();\n    uVar3 = 0xc;\n    iVar1 = fcn.00449614();\n    if (iVar1 == 0) {\n        uVar2 = 0;\n    }\n    else {\n        uVar3 = unaff_ESI;\n        uVar2 = fcn.00416d81(arg_8h, unaff_ESI);\n    }\n    *(in_EAX + 0xc) = uVar2;\n    fcn.0044951c(arg_8h, uVar3);\n    return;\n}\n",
        "token_count": 537
    },
    "00418a19": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00418a19(ulong *param_1)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint uVar3;\n    ulong *unaff_EBX;\n    uint *puVar4;\n    uint *puVar5;\n    \n    if (unaff_EBX != param_1) {\n        fcn.0041858e();\n        uVar3 = *(param_1 + 1);\n        *(unaff_EBX + 1) = uVar3;\n    // switch table (11 cases) at 0x418b8d\n        switch(uVar3) {\n        case 1:\n        case 6:\n        case 7:\n            *unaff_EBX = *param_1;\n            break;\n        case 2:\n            *unaff_EBX = *param_1;\n            *(unaff_EBX + 4) = *(param_1 + 4);\n            break;\n        case 3:\n            *unaff_EBX = *param_1;\n            break;\n        case 4:\n            iVar1 = fcn.00449614(0xc);\n            if (iVar1 == 0) {\n                uVar3 = 0;\n            }\n            else {\n                uVar3 = fcn.00416dcf();\n            }\n            *(unaff_EBX + 0xc) = uVar3;\n            break;\n        case 5:\n            puVar2 = fcn.00449614(0x210);\n            if (puVar2 == NULL) {\n                puVar2 = NULL;\n            }\n            else {\n                puVar4 = *param_1;\n                puVar5 = puVar2;\n                for (iVar1 = 0x84; iVar1 != 0; iVar1 = iVar1 + -1) {\n                    *puVar5 = *puVar4;\n                    puVar4 = puVar4 + 1;\n                    puVar5 = puVar5 + 1;\n                }\n            }\n            *unaff_EBX = puVar2;\n            if (puVar2[1] != 0) {\n                *puVar2[1] = *puVar2[1] + 1;\n            }\n            *(*unaff_EBX + 0x20e) = *(*param_1 + 0x20e);\n            break;\n        case 8:\n            if (*param_1 != 0) {\n                uVar3 = fcn.00449614(0x10);\n                *unaff_EBX = uVar3;\n                (**0x4593d4)(uVar3);\n                iVar1 = (**0x4593d0)(*unaff_EBX, *param_1);\n                if (iVar1 < 0) {\n                    (**0x4593cc)(*unaff_EBX);\n                    fcn.0044951c(*unaff_EBX);\n                    *unaff_EBX = 0;\n                }\n            }\n            break;\n        case 9:\n            *unaff_EBX = *param_1;\n            break;\n        case 10:\n            iVar1 = fcn.00449614(0x14);\n            if (iVar1 == 0) {\n                uVar3 = 0;\n            }\n            else {\n                uVar3 = fcn.004182ff();\n            }\n            *unaff_EBX = uVar3;\n            fcn.0041766a();\n            break;\n        case 0xb:\n            puVar2 = fcn.00449614(8);\n            *unaff_EBX = puVar2;\n            *puVar2 = **param_1;\n            if (**unaff_EBX == 0) {\n                uVar3 = fcn.00449614(1);\n                *(*unaff_EBX + 4) = uVar3;\n                **(*unaff_EBX + 4) = 0;\n            }\n            else {\n                uVar3 = fcn.00449614(**unaff_EBX);\n                *(*unaff_EBX + 4) = uVar3;\n                fcn.0044a6b0((*unaff_EBX)[1], *(*param_1 + 4), **unaff_EBX);\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 911
    },
    "00418cde": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00418cde(uint *arg_8h)\n\n{\n    float fVar1;\n    code *pcVar2;\n    uint *puVar3;\n    uint16_t uVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    int32_t *piVar7;\n    uint *puVar8;\n    int32_t **in_ECX;\n    int32_t iVar9;\n    uint var_4ch;\n    uint wVerMinor;\n    int32_t var_24h;\n    uint var_20h;\n    uint cIn;\n    uint uStack28;\n    int32_t var_10h;\n    double dStack24;\n    int32_t var_ch;\n    float pdblOut;\n    \n    puVar3 = arg_8h;\n    fcn.0041858e();\n    pcVar2 = *0x4593d4;\n    if (arg_8h == NULL) {\n        return;\n    }\n    uVar5 = *arg_8h;\n    if (0x4002 < uVar5) {\n        if (0x10 < uVar5 - 0x4003) goto code_r0x00418f43;\n    // switch table (17 cases) at 0x4191fa\n        switch(*((uVar5 - 0x4003) * 4 + 0x4191fa)) {\n        case 0x418e66:\n            if (arg_8h[2] != 0) {\n                in_ECX[2] = 0x8;\n                piVar7 = fcn.00449614(0x10);\n                *in_ECX = piVar7;\n                (*pcVar2)(piVar7);\n                **in_ECX = 9;\n                (*in_ECX)[2] = *arg_8h[2];\n                (**(*(*in_ECX)[2] + 4))((*in_ECX)[2]);\n            }\n            goto code_r0x00418f43;\n        case 0x418ea1:\n            if (arg_8h[2] == NULL) goto code_r0x00418f43;\n            uVar5 = *arg_8h[2];\n            break;\n        case 0x418eb4:\n            if (arg_8h[2] == NULL) goto code_r0x00418f43;\n            uVar5 = *arg_8h[2];\n            break;\n        case 0x418ec7:\n            if (arg_8h[2] == NULL) goto code_r0x00418f43;\n            uVar5 = *arg_8h[2];\n            break;\n        case 0x418ed6:\n            if (arg_8h[2] == NULL) goto code_r0x00418f43;\n            uVar5 = *arg_8h[2];\n            break;\n        case 0x418ee4:\n            if (arg_8h[2] == NULL) goto code_r0x00418f43;\n            fVar1 = *arg_8h[2];\n            goto code_r0x00418d86;\n        case 0x418ef2:\n            if (arg_8h[2] == NULL) goto code_r0x00418f43;\n            fVar1 = *arg_8h[2];\n            goto code_r0x00418d86;\n        case 0x418f00:\ncode_r0x00418f00:\n            if (arg_8h[2] != 0) {\n                iVar6 = fcn.00449614(0xc);\n                if (iVar6 == 0) {\n                    piVar7 = NULL;\n                }\n                else {\n                    piVar7 = fcn.00416d81(arg_8h[2]);\n                }\n                in_ECX[3] = piVar7;\n                in_ECX[2] = 0x4;\n            }\n            goto code_r0x00418f43;\n        case 0x418f25:\n            goto code_r0x00418f25;\n        case 0x418f34:\n            if (arg_8h[2] != 0) {\n                fcn.00418cde(arg_8h[2]);\n            }\n        case 0x418f43:\n            goto code_r0x00418f43;\n        }\n        goto code_r0x00418d66;\n    }\n    if (uVar5 == 0x4002) {\ncode_r0x00418f25:\n        if (arg_8h[2] == NULL) goto code_r0x00418f43;\n        uVar5 = *arg_8h[2];\n        goto code_r0x00418d66;\n    }\n    if (0x13 < uVar5) goto code_r0x00418f43;\n    // switch table (20 cases) at 0x4191aa\n    switch(*(uVar5 * 4 + 0x4191aa)) {\n    case 0x418d28:\n        in_ECX[2] = 0x8;\n        piVar7 = fcn.00449614(0x10);\n        *in_ECX = piVar7;\n        (*pcVar2)(piVar7);\n        iVar6 = (**0x4593d0)(*in_ECX, arg_8h);\n        if (iVar6 < 0) {\n            (**0x4593cc)(*in_ECX);\n            fcn.0044951c(*in_ECX);\n            *in_ECX = NULL;\n        }\n        goto code_r0x00418f43;\n    case 0x418d61:\n        uVar5 = *(arg_8h + 2);\n        break;\n    case 0x418d72:\n        uVar5 = *(arg_8h + 2);\n        break;\n    case 0x418d78:\n        uVar5 = *(arg_8h + 2);\n        break;\n    case 0x418d7e:\n        uVar5 = arg_8h[2];\n        break;\n    case 0x418d83:\n        fVar1 = arg_8h[2];\n        goto code_r0x00418d86;\n    case 0x418d97:\n        fVar1 = *(arg_8h + 2);\n        goto code_r0x00418d86;\n    case 0x418d9c:\n        dStack24 = *(arg_8h + 2);\n        fVar1 = *(arg_8h + 2) / *0x4620b0;\ncode_r0x00418d86:\n        fcn.00418c65(SUB84(fVar1, 0), fVar1 >> 0x20);\n        goto code_r0x00418f43;\n    case 0x418dbe:\n        uVar5 = *(arg_8h + 2);\n        break;\n    case 0x418dc4:\n        dStack24 = *(arg_8h + 2);\n        (**0x4593c8)(SUB84(dStack24, 0), dStack24 >> 0x20, &wVerMinor);\n        fcn.00449872(&var_4ch, 0x45d4d4, wVerMinor);\n        puVar8 = &var_4ch;\ncode_r0x00418e12:\n        fcn.00418c7e(puVar8);\n        goto code_r0x00418f43;\n    case 0x418e21:\n        cIn = *arg_8h;\n        uStack28 = arg_8h[1];\n        dStack24 = *(arg_8h + 2);\n        (**0x4593c4)(&cIn, &pdblOut);\n        fcn.00418c65(SUB84(pdblOut, 0), pdblOut >> 0x20);\n        goto code_r0x00418f43;\n    case 0x418e4a:\n        puVar8 = 0x45bfe0;\n        goto code_r0x00418e12;\n    case 0x418f00:\n        goto code_r0x00418f00;\n    case 0x418f43:\n        goto code_r0x00418f43;\n    }\ncode_r0x00418d66:\n    fcn.00418bb9(uVar5);\ncode_r0x00418f43:\n    if ((*arg_8h & 0x6000) == 0x6000) {\n        if (arg_8h[2] != 0) {\n            fcn.00418cde(arg_8h[2]);\n        }\n    }\n    else if (((*arg_8h & 0x6000) == 0x2000) && (arg_8h[2] != 0)) {\n        *in_ECX = NULL;\n        fcn.00419ef2();\n        puVar8 = arg_8h + 2;\n        arg_8h = NULL;\n        *(*in_ECX + 0x20d) = **puVar8;\n        if ('\\0' < *(*in_ECX + 0x20d)) {\n            iVar9 = 0x10c;\n            iVar6 = 0x10;\n            do {\n                arg_8h = arg_8h + 1;\n                *(iVar9 + *in_ECX) = *(iVar6 + puVar3[2]);\n                iVar6 = iVar6 + 8;\n                iVar9 = iVar9 + 4;\n            } while (arg_8h < *(*in_ECX + 0x20d));\n        }\n        iVar9 = 0;\n        fcn.0041a000(0);\n        iVar6 = puVar3[2];\n        uVar4 = *(iVar6 + 2) & 0xf00;\n        if (uVar4 == 0x100) {\n            iVar6 = (**0x4593c0)(iVar6, &var_10h);\n            if (iVar6 < 0) {\n                return;\n            }\n            if (0 < (*in_ECX)[2]) {\n                do {\n                    puVar8 = fcn.00449614(0x10);\n                    if (puVar8 == NULL) {\n                        puVar8 = NULL;\n                    }\n                    else {\n                        *puVar8 = 0;\n                        puVar8[3] = 0;\n                        puVar8[2] = 1;\n                    }\n                    *(**in_ECX + iVar9 * 4) = puVar8;\n                    wVerMinor._0_2_ = 8;\n                    var_24h = *(var_10h + iVar9 * 4);\n                    fcn.00418cde(&wVerMinor);\n                    iVar9 = iVar9 + 1;\n                } while (iVar9 < (*in_ECX)[2]);\n            }\n        }\n        else {\n            if (uVar4 == 0x200) {\n                return;\n            }\n            if (uVar4 == 0x400) {\n                iVar6 = (**0x4593c0)(iVar6, &var_ch);\n                if (iVar6 < 0) {\n                    return;\n                }\n                if (0 < (*in_ECX)[2]) {\n                    do {\n                        puVar8 = fcn.00449614(0x10);\n                        if (puVar8 == NULL) {\n                            puVar8 = NULL;\n                        }\n                        else {\n                            *puVar8 = 0;\n                            puVar8[3] = 0;\n                            puVar8[2] = 1;\n                        }\n                        *(**in_ECX + iVar9 * 4) = puVar8;\n                        var_24h = var_ch + iVar9 * 4;\n                        wVerMinor._0_2_ = 9;\n                        fcn.00418cde(&wVerMinor);\n                        iVar9 = iVar9 + 1;\n                    } while (iVar9 < (*in_ECX)[2]);\n                }\n            }\n            else {\n                if (uVar4 != 0x800) {\n                    in_ECX[2] = 0x8;\n                    piVar7 = fcn.00449614(0x10);\n                    *in_ECX = piVar7;\n                    (**0x4593d4)(piVar7);\n                    iVar6 = (**0x4593d0)(*in_ECX, puVar3);\n                    if (-1 < iVar6) {\n                        return;\n                    }\n                    (**0x4593cc)(*in_ECX);\n                    fcn.0044951c(*in_ECX);\n                    *in_ECX = NULL;\n                    return;\n                }\n                iVar6 = (**0x4593c0)(iVar6, &pdblOut);\n                if (iVar6 < 0) {\n                    return;\n                }\n                iVar6 = 0;\n                if (0 < (*in_ECX)[2]) {\n                    arg_8h = NULL;\n                    do {\n                        puVar8 = fcn.00449614(0x10);\n                        if (puVar8 == NULL) {\n                            puVar8 = NULL;\n                        }\n                        else {\n                            *puVar8 = 0;\n                            puVar8[3] = 0;\n                            puVar8[2] = 1;\n                        }\n                        *(**in_ECX + iVar6 * 4) = puVar8;\n                        var_24h = arg_8h + pdblOut;\n                        wVerMinor._0_2_ = 0x400c;\n                        fcn.00418cde(&wVerMinor);\n                        arg_8h = arg_8h + 0x10;\n                        iVar6 = iVar6 + 1;\n                    } while (iVar6 < (*in_ECX)[2]);\n                }\n            }\n        }\n        (**0x4593bc)(puVar3[2]);\n    }\n    return;\n}\n",
        "token_count": 3043
    },
    "004195bc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.004195bc(void)\n\n{\n    int32_t *piVar1;\n    int32_t **in_EAX;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint var_10h;\n    \n    piVar1 = in_EAX[2];\n    if (piVar1 == 0x4) {\n        return in_EAX[3] & 0xffffff00 | in_EAX[3][1] == 0;\n    }\n    if (piVar1 != 0x9) {\n        if (piVar1 != 0xb) {\n            fcn.0041835f();\n            fcn.00419cd9();\n            iVar2 = fcn.00418733();\n            uVar3 = fcn.0041858e();\n            return uVar3 & 0xffffff00 | 1 - (iVar2 != 0);\n        }\n        return *in_EAX & 0xffffff00 | **in_EAX != 0;\n    }\n    return in_EAX & 0xffffff00 | *in_EAX == '\\0';\n}\n",
        "token_count": 238
    },
    "00419a44": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00419a44(double *param_1)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    bool bVar3;\n    \n    iVar1 = *(param_1 + 1);\n    piVar2 = iVar1 + -1;\n    if (piVar2 == NULL) {\ncode_r0x00419a91:\n        bVar3 = *param_1 == 0;\n    }\n    else if (iVar1 == 2) {\n        piVar2 = *param_1 | *(param_1 + 4);\n        bVar3 = piVar2 == NULL;\n    }\n    else {\n        if (iVar1 == 3) {\n            piVar2 = (*param_1 < *0x462048) << 8 | (*param_1 == *0x462048) << 0xe;\n            if (POPCOUNT(piVar2 >> 8 & 0x44) != '\\0') goto code_r0x00419a87;\n            goto code_r0x00419a67;\n        }\n        if (iVar1 == 4) {\n            piVar2 = *(param_1 + 0xc);\n            bVar3 = piVar2[1] == 0;\n        }\n        else {\n            piVar2 = iVar1 + -7;\n            if (piVar2 == NULL) goto code_r0x00419a91;\n            if (iVar1 == 9) {\n                return *param_1;\n            }\n            piVar2 = iVar1 + -0xb;\n            if (piVar2 != NULL) goto code_r0x00419a87;\n            piVar2 = *param_1;\n            bVar3 = *piVar2 == 0;\n        }\n    }\n    if (bVar3) {\ncode_r0x00419a87:\n        return piVar2 & 0xffffff00;\n    }\ncode_r0x00419a67:\n    return CONCAT31(piVar2 >> 8, 1);\n}\n",
        "token_count": 441
    },
    "00419b83": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.00419b83(void)\n\n{\n    int16_t **in_EAX;\n    \n    if ((((in_EAX[2] == 0x8) && (in_EAX = *in_EAX,  in_EAX != NULL)) && ((*in_EAX == 9 || (*in_EAX == 0xd)))) &&\n       (in_EAX[2] != NULL)) {\n        return CONCAT31(in_EAX >> 8, 1);\n    }\n    return in_EAX & 0xffffff00;\n}\n",
        "token_count": 116
    },
    "00419baa": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00419baa(int32_t param_1)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    uint32_t in_EAX;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint16_t uVar5;\n    \n    if (*(param_1 + 8) == 4) {\n        iVar2 = **(param_1 + 0xc);\n        for (in_EAX = 0; (iVar1 = *(iVar2 + in_EAX * 2),  iVar1 == 0x20 || (iVar1 == 9)); in_EAX = in_EAX + 1) {\n        }\n        iVar1 = *(iVar2 + in_EAX * 2);\n        if (iVar1 != 0) {\n            if ((iVar1 == 0x2b) || (iVar1 == 0x2d)) {\n                in_EAX = in_EAX + 1;\n            }\n            uVar5 = *(iVar2 + in_EAX * 2);\n            if (uVar5 != 0) {\n                while ((0x2f < uVar5 && (uVar5 < 0x3a))) {\n                    in_EAX = in_EAX + 1;\n                    uVar5 = *(iVar2 + in_EAX * 2);\n                }\n                iVar1 = *(iVar2 + in_EAX * 2);\n                if (iVar1 == 0) {\ncode_r0x00419ca6:\n                    return CONCAT31(in_EAX >> 8, 1);\n                }\n                if (iVar1 == 0x2e) {\n                    uVar3 = in_EAX + 1;\n                    uVar5 = *(iVar2 + uVar3 * 2);\n                    in_EAX = uVar3;\n                    if (uVar5 != 0) {\n                        while ((0x2f < uVar5 && (uVar5 < 0x3a))) {\n                            uVar5 = *(iVar2 + (in_EAX + 1) * 2);\n                            in_EAX = in_EAX + 1;\n                        }\n                        iVar1 = *(iVar2 + in_EAX * 2);\n                        if (iVar1 != 0) {\n                            if (uVar3 == in_EAX) goto code_r0x00419caa;\n                            if ((((iVar1 == 100) || (iVar1 == 0x44)) || (iVar1 == 0x65)) ||\n                               (uVar4 = in_EAX,  iVar1 == 0x45)) {\n                                uVar4 = in_EAX + 1;\n                            }\n                            uVar3 = uVar4 + 1;\n                            iVar1 = *(iVar2 + uVar3 * 2);\n                            in_EAX = uVar3;\n                            if (iVar1 == 0) goto code_r0x00419caa;\n                            if ((iVar1 == 0x2b) || (iVar1 == 0x2d)) {\n                                uVar3 = uVar4 + 2;\n                            }\n                            uVar5 = *(iVar2 + uVar3 * 2);\n                            in_EAX = uVar3;\n                            if (uVar5 == 0) goto code_r0x00419caa;\n                            while ((0x2f < uVar5 && (uVar5 < 0x3a))) {\n                                uVar5 = *(iVar2 + (in_EAX + 1) * 2);\n                                in_EAX = in_EAX + 1;\n                            }\n                            if (*(iVar2 + in_EAX * 2) != 0) goto code_r0x00419caa;\n                        }\n                        if (uVar3 != in_EAX) goto code_r0x00419ca6;\n                    }\n                }\n            }\n        }\n    }\ncode_r0x00419caa:\n    return in_EAX & 0xffffff00;\n}\n",
        "token_count": 849
    },
    "00419e94": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00419e94(void)\n\n{\n    int32_t *in_EAX;\n    \n    if (*(*in_EAX + 0x20e) == '\\0') {\n        *(*in_EAX + 0x20e) = '\\x01';\n    }\n    return;\n}\n",
        "token_count": 64
    },
    "0041a132": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041a132(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t **unaff_EBX;\n    int32_t var_4h;\n    \n    if (arg_8h != 0) {\n        fcn.00419f46();\n        if (0 < arg_8h) {\n            var_4h = arg_8h;\n            do {\n                fcn.00419f66();\n                var_4h = var_4h + -1;\n            } while (var_4h != 0);\n        }\n    }\n    iVar1 = fcn.0041a0e7();\n    if (iVar1 < 0) {\n        uVar2 = 0;\n    }\n    else {\n        iVar1 = iVar1 * 4;\n        if (*(iVar1 + **unaff_EBX) == 0) {\n            iVar3 = fcn.00449614(0x10);\n            if (iVar3 == 0) {\n                uVar2 = 0;\n            }\n            else {\n                uVar2 = fcn.00418330(0x45bfe0);\n            }\n            *(iVar1 + **unaff_EBX) = uVar2;\n        }\n        uVar2 = *(iVar1 + **unaff_EBX);\n    }\n    return uVar2;\n}\n",
        "token_count": 310
    },
    "0041a214": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0041a214(int32_t **arg_8h)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint32_t *unaff_EDI;\n    int32_t var_4h;\n    \n    uVar2 = *unaff_EDI;\n    cVar1 = *(uVar2 + 0x20c);\n    if ((cVar1 != '\\0') && (cVar1 == *(*arg_8h + 0x83))) {\n        iVar4 = 0;\n        if ('\\0' < cVar1) {\n            iVar3 = 0x10c;\n            do {\n                *(iVar3 + uVar2) = 0;\n                *(iVar3 + *arg_8h) = 0;\n                uVar2 = *unaff_EDI;\n                iVar4 = iVar4 + 1;\n                iVar3 = iVar3 + 4;\n            } while (iVar4 < *(uVar2 + 0x20c));\n        }\n        do {\n            iVar4 = fcn.0041a0e7();\n            if (((-1 < iVar4) && (iVar4 = *(**arg_8h + iVar4 * 4),  iVar4 != 0)) &&\n               (iVar3 = fcn.0041a132(0),  iVar3 != 0)) {\n                fcn.00418a19(iVar4);\n            }\n            uVar2 = *unaff_EDI;\n            var_4h = 0;\n            if ('\\0' < *(uVar2 + 0x20c)) {\n                iVar4 = 0x10c;\n                do {\n                    *(uVar2 + iVar4) = *(uVar2 + iVar4) + 1;\n                    *(*arg_8h + iVar4) = *(*arg_8h + iVar4) + 1;\n                    cVar1 = fcn.0041a1ad();\n                    if ((cVar1 != '\\0') && (cVar1 = fcn.0041a1ad(),  cVar1 != '\\0')) break;\n                    *(iVar4 + *unaff_EDI) = 0;\n                    *(iVar4 + *arg_8h) = 0;\n                    uVar2 = *unaff_EDI;\n                    var_4h = var_4h + 1;\n                    iVar4 = iVar4 + 4;\n                } while (var_4h < *(uVar2 + 0x20c));\n            }\n            uVar2 = *(*unaff_EDI + 0x20c);\n        } while (var_4h < uVar2);\n    }\n    return uVar2 & 0xffffff00;\n}\n",
        "token_count": 602
    },
    "0041fdea": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.0041fdea(int32_t arg_8h, int32_t arg_ch)\n\n{\n    code *pcVar1;\n    uint arg_10h;\n    int32_t arg_ch_00;\n    int32_t unaff_EBX;\n    ushort auStackY65544 [16382];\n    uchar auStackY32780 [32692];\n    uint uStackY88;\n    uchar *puStackY84;\n    uint uStackY80;\n    uchar *puStackY76;\n    uchar *puStackY72;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.0044c510();\n    if ((*0x4679c0 == '\\0') && (fcn.00416e83(),  pcVar1 = _sym.imp.USER32.dll_LoadStringW,  *(unaff_EBX + 0x290) != 1))\n    {\n        (*_sym.imp.USER32.dll_LoadStringW)();\n        (*pcVar1)();\n        fcn.0040fd7d();\n        arg_10h = fcn.0040fd91();\n        fcn.0040fcda();\n        arg_ch_00 = fcn.0040fcf9();\n        if (arg_ch_00 == 0) {\n            fcn.00449872(&stack0xffff7ff4, 0x45c95c, arg_10h);\n        }\n        else {\n            puStackY72 = 0x41febc;\n            fcn.00449872(&stack0xffff7ff4, 0x45c92c, arg_10h);\n        }\n        fcn.004495ce();\n        puStackY72 = 0x41fee0;\n        fcn.004495ce();\n        if (-1 < arg_ch) {\n            fcn.004495f8();\n            *(&stack0xfffefff8 + arg_ch * 2) = 0;\n            puStackY72 = 0x41ff13;\n            fcn.004495ce();\n            puStackY72 = &stack0xfffefff8;\n            puStackY76 = &stack0xffff7ff4;\n            uStackY80 = 0x41ff26;\n            fcn.004495ce();\n            puStackY84 = &stack0xffff7ff4;\n            uStackY80 = 0x45d0f8;\n            uStackY88 = 0x41ff33;\n            fcn.004495ce();\n        }\n        fcn.004495ce();\n        puStackY72 = 0x41ff5a;\n        fcn.004495ce();\n        if (*0x4679c4 == '\\0') {\n            (*_sym.imp.USER32.dll_MessageBoxW)();\n        }\n        else {\n            puStackY72 = 0x41ff89;\n            fcn.0044a48f(0x45d220, arg_ch_00);\n        }\n        *0x4679dc = 1;\n        *(unaff_EBX + 0x290) = 1;\n        if (*(unaff_EBX + 0x2b8) != '\\0') {\n            *0x4679dc = arg_8h + 0x7ffff000;\n        }\n    }\n    return;\n}\n",
        "token_count": 731
    },
    "0041ffd0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041ffd0(int32_t arg_8h, int32_t arg_ch)\n\n{\n    code *pcVar1;\n    uint arg_10h;\n    int32_t arg_ch_00;\n    int32_t unaff_EBX;\n    uchar auStackY40968 [40880];\n    uint uStackY88;\n    uchar *puStackY84;\n    uint uStackY80;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.0044c510();\n    if ((*0x4679c0 == '\\0') && (fcn.00416e83(),  pcVar1 = _sym.imp.USER32.dll_LoadStringW,  *(unaff_EBX + 0x290) != 1))\n    {\n        (*_sym.imp.USER32.dll_LoadStringW)();\n        (*pcVar1)();\n        fcn.0040fd7d();\n        arg_10h = fcn.0040fd91();\n        fcn.0040fcda();\n        arg_ch_00 = fcn.0040fcf9();\n        if (arg_ch_00 == 0) {\n            fcn.00449872(&stack0xffff5ff8, 0x45c95c, arg_10h);\n        }\n        else {\n            fcn.00449872(&stack0xffff5ff8, 0x45c92c, arg_10h);\n        }\n        fcn.004495ce();\n        fcn.004495ce();\n        uStackY80 = 0x4200d1;\n        fcn.004495ce();\n        puStackY84 = &stack0xffff5ff8;\n        uStackY80 = 0x45d618;\n        uStackY88 = 0x4200e2;\n        fcn.004495ce();\n        if (arg_ch != 0) {\n            fcn.004495ce();\n        }\n        if (*0x4679c4 == '\\0') {\n            (*_sym.imp.USER32.dll_MessageBoxW)();\n        }\n        else {\n            uStackY80 = 0x420120;\n            fcn.0044a48f(0x45d220, arg_ch_00);\n        }\n        *0x4679dc = 1;\n        *(unaff_EBX + 0x290) = 1;\n        if (*(unaff_EBX + 0x2b8) != '\\0') {\n            *0x4679dc = arg_8h + 0x7ffff000;\n        }\n    }\n    return;\n}\n",
        "token_count": 559
    },
    "004201a0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.004201a0(uint lpFileName, uint arg_ch)\n\n{\n    int32_t in_EAX;\n    int32_t *piVar1;\n    int32_t *piVar2;\n    uint uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint lpBuffer;\n    uint var_214h;\n    int32_t var_ch;\n    int32_t lpFilePart;\n    int32_t *var_4h;\n    \n    iVar5 = *0x47bd4c;\n    iVar4 = *0x47bd4c + 1;\n    var_ch = 1;\n    piVar1 = fcn.00449614(iVar4 * 0x28 + 4);\n    if (piVar1 == NULL) {\n        piVar2 = NULL;\n        iVar4 = 1;\n    }\n    else {\n        piVar2 = piVar1 + 1;\n        *piVar1 = iVar4;\n        iVar4 = var_ch;\n        var_4h = piVar2;\n        if (-1 < iVar5) {\n            iVar5 = iVar5 + 1;\n            do {\n                fcn.004218f4();\n                var_4h = var_4h + 10;\n                iVar5 = iVar5 + -1;\n                iVar4 = var_ch;\n            } while (iVar5 != 0);\n        }\n    }\n    *(in_EAX + 0x6e4) = piVar2;\n    iVar5 = fcn.0040fd7d();\n    if (iVar5 != 0) {\n        var_4h = 0x28;\n        do {\n            *(in_EAX + 0x28c) = iVar4;\n            iVar5 = fcn.00428899(in_EAX, *(in_EAX + 0x6e4) + var_4h);\n            if (iVar5 != 0) goto code_r0x00420264;\n            var_4h = var_4h + 10;\n            iVar4 = iVar4 + 1;\n            iVar5 = fcn.0040fd7d();\n        } while (iVar5 != 0);\n    }\n    *(in_EAX + 0x6e8) = 1;\n    iVar5 = fcn.00435eb9();\n    if ((iVar5 == 0) && (iVar5 = fcn.00420795(),  iVar5 == 0)) {\n        (*_sym.imp.KERNEL32.DLL_GetFullPathNameW)(lpFileName, 0x104, &lpBuffer, &lpFilePart);\n        fcn.00416e83(in_EAX + 0x268, &lpBuffer);\n        fcn.00416e83(in_EAX + 0x25c, lpFilePart);\n        *(lpFilePart + -2) = 0;\n        if (var_214h == 0) {\n            fcn.004495ce(&lpBuffer, 0x45c9ac);\n        }\n        fcn.00416e83(in_EAX + 0x274, &lpBuffer);\n        *(in_EAX + 600) = arg_ch;\n        uVar3 = 0;\n    }\n    else {\ncode_r0x00420264:\n        uVar3 = 1;\n    }\n    return uVar3;\n}\n",
        "token_count": 735
    },
    "00420336": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint8_t fcn.00420336(void)\n\n{\n    char cVar1;\n    uint8_t uVar2;\n    int32_t iVar3;\n    int32_t unaff_ESI;\n    uint lpMsg;\n    int32_t var_18h;\n    \n    if ((*0x478440 != '\\0') && (*(unaff_ESI + 0x290) == 0)) {\n        return 0;\n    }\n    uVar2 = 1;\n    iVar3 = (**0x45941c)(&lpMsg, 0, 0, 0, 1);\n    do {\n        if (iVar3 == 0) {\ncode_r0x004203ba:\n            cVar1 = *0x4679c8;\n            if (*0x4679c2 == '\\x01') {\n                *0x4679c8 = '\\0';\n                *0x4679c2 = '\\0';\n                *(unaff_ESI + 0x290) = 1;\n                cVar1 = '\\0';\n            }\n            if (*(unaff_ESI + 0x290) != 1) {\n                uVar2 = -(cVar1 != '\\0') & 0xb;\n            }\n            return uVar2;\n        }\n        if (var_18h == 0x12) {\n            *(unaff_ESI + 0x294) = 1;\n            *(unaff_ESI + 0x290) = 1;\n            goto code_r0x004203ba;\n        }\n        iVar3 = fcn.00404229(&lpMsg);\n        if (iVar3 == 0) {\n            (**0x459420)(&lpMsg);\n            (**0x459424)(&lpMsg);\n        }\n        iVar3 = (**0x45941c)(&lpMsg, 0, 0, 0, 1);\n    } while( true );\n}\n",
        "token_count": 413
    },
    "00420795": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00420795(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t unaff_EDI;\n    uint in_stack_ffffff9c;\n    uint var_3ch;\n    int32_t **var_34h;\n    uint32_t var_30h;\n    uint var_2ch;\n    uint var_24h;\n    uint var_1ch;\n    uint var_14h;\n    uint var_8h;\n    int32_t var_4h;\n    \n    fcn.00416d61();\n    var_34h = NULL;\n    var_30h = 0;\n    var_2ch = 0;\n    var_1ch = 0xffffffff;\n    var_3ch = 0x45d544;\n    var_4h = 2;\n    do {\n        iVar2 = fcn.0040fd7d();\n        if (iVar2 == 0) {\n            fcn.00413d5a();\n            uVar3 = 0;\ncode_r0x004208c0:\n            fcn.0042190c();\n            fcn.0044951c();\n            return uVar3;\n        }\n        *(unaff_EDI + 0x28c) = var_4h + -1;\n        iVar2 = fcn.00428899(unaff_EDI, &var_3ch);\n        if (iVar2 != 0) {\ncode_r0x004208d7:\n            uVar3 = 1;\n            goto code_r0x004208c0;\n        }\n        piVar1 = &var_24h;\n        if (var_30h != 0) {\n            piVar1 = *var_34h;\n        }\n        if (piVar1[2] == 0) {\n            piVar1 = &var_24h;\n            if (var_30h != 0) {\n                piVar1 = *var_34h;\n            }\n            if (*piVar1 == 0x1f) {\n                uVar3 = 1;\n                piVar1 = &var_24h;\n                if (1 < var_30h) {\n                    piVar1 = var_34h[1];\n                }\n                if (piVar1[2] == 0x10) {\n                    fcn.00416e83();\n                    uVar3 = var_14h;\n                    fcn.00416d81();\n                    iVar2 = fcn.00413cac(uVar3, in_stack_ffffff9c);\n                    if (iVar2 == 0) {\n                        if (var_30h < 3) {\n                            piVar1 = &var_24h;\n                        }\n                        else {\n                            piVar1 = var_34h[2];\n                        }\n                        if (piVar1[2] == 8) {\n                            var_8h = 3;\n                            iVar2 = fcn.004208ff(unaff_EDI, &var_3ch, &var_14h, &var_4h);\n                            if (iVar2 != 0) goto code_r0x004208d7;\n                            goto code_r0x0042089e;\n                        }\n                        uVar3 = 0x69;\n                    }\n                    else {\n                        uVar3 = 0x84;\n                    }\n                    fcn.0041fdea(uVar3, 0xffffffff);\n                    goto code_r0x004208d7;\n                }\n                fcn.0041fdea(0x69, 0xffffffff);\n                goto code_r0x004208c0;\n            }\n        }\ncode_r0x0042089e:\n        var_4h = var_4h + 1;\n    } while( true );\n}\n",
        "token_count": 818
    },
    "004208ff": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004208ff(uint arg_8h, uint arg_ch, uint arg_10h, int32_t *arg_14h)\n\n{\n    bool bVar1;\n    char cVar2;\n    int32_t *in_EAX;\n    int32_t *piVar3;\n    int32_t iVar4;\n    uint *puVar5;\n    int32_t iVar6;\n    uint unaff_ESI;\n    uint uVar7;\n    uint *unaff_EDI;\n    uint32_t uVar8;\n    bool bVar9;\n    uint var_50h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint32_t var_2ch;\n    uint var_18h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    fcn.00416d61();\n    fcn.00401b0d();\n    var_4h = -1;\n    var_8h = 0;\n    var_ch = *arg_14h + -1;\n    fcn.00416d61();\n    do {\n        do {\n            iVar6 = fcn.0040f269();\n            if (*(iVar6 + 8) == 9) {\n                *in_EAX = *in_EAX + 1;\n                iVar6 = fcn.0040f269();\n                if (*(iVar6 + 8) != 0xf) goto code_r0x00420b4d;\n                iVar6 = fcn.00420b7b();\n                if (iVar6 != 0) goto code_r0x00420b55;\n                fcn.00416e71();\n                if (var_4h == -1) {\n                    var_4h = var_8h;\n                }\n                fcn.00413c3a();\n                uVar7 = 0;\n                goto code_r0x00420b58;\n            }\n            bVar1 = false;\n            while( true ) {\n                iVar4 = fcn.0040f269();\n                iVar6 = *in_EAX;\n                if (*(iVar4 + 8) != 0) break;\n                piVar3 = fcn.0040f269();\n                if (*piVar3 == 0x23) {\n                    bVar1 = true;\n                }\n                else {\n                    piVar3 = fcn.0040f269();\n                    if (*piVar3 != 0x1e) goto code_r0x00420b17;\n                }\n                *in_EAX = iVar6 + 1;\n            }\n            iVar6 = fcn.0040f269();\n            if (*(iVar6 + 8) != 0xe) goto code_r0x00420b40;\n            puVar5 = fcn.0040f269();\n            fcn.00416e83(&var_18h, *puVar5);\n            uVar8 = 0;\n            bVar9 = var_2ch == 0;\n            if (var_2ch != 0) {\n                do {\n                    cVar2 = fcn.00416f96();\n                    if (cVar2 != '\\0') break;\n                    uVar8 = uVar8 + 1;\n                } while (uVar8 < var_2ch);\n                bVar9 = uVar8 == var_2ch;\n            }\n            if (!bVar9) {\n                fcn.0040f269();\n                goto code_r0x00420b4d;\n            }\n            unaff_EDI = &var_18h;\n            fcn.00401b4b();\n            *in_EAX = *in_EAX + 1;\n            iVar6 = *in_EAX;\n            iVar4 = fcn.0040f269();\n            if ((*(iVar4 + 8) == 2) && (!bVar1)) {\n                *in_EAX = iVar6 + 1;\n                iVar4 = fcn.0040f269();\n                if ((*(iVar4 + 8) == 10) || (iVar4 = fcn.0040f269(),  *(iVar4 + 8) == 0xb)) {\n                    *in_EAX = iVar6 + 2;\n                }\n                iVar6 = *in_EAX;\n                fcn.0040f269();\n                cVar2 = fcn.004180fa();\n                if (cVar2 != '\\0') {\n                    iVar6 = iVar6 + 1;\n                    *in_EAX = iVar6;\n                    if (var_4h == -1) {\n                        var_4h = var_8h;\n                    }\n                    goto code_r0x00420a42;\n                }\ncode_r0x00420b21:\n                unaff_EDI = 0x69;\n                goto code_r0x00420b4d;\n            }\n            if (var_4h != -1) goto code_r0x00420b21;\ncode_r0x00420a42:\n            var_8h = var_8h + 1;\n            iVar4 = fcn.0040f269();\n            if ((*(iVar4 + 8) != 0x11) && (iVar4 = fcn.0040f269(),  *(iVar4 + 8) != 9)) {\ncode_r0x00420b17:\n                iVar6 = fcn.0040f269();\n                unaff_ESI = *(iVar6 + 0xc);\n                goto code_r0x00420b21;\n            }\n            iVar4 = fcn.0040f269();\n        } while (*(iVar4 + 8) != 0x11);\n        *in_EAX = iVar6 + 1;\n        iVar6 = fcn.0040f269();\n    } while (*(iVar6 + 8) != 9);\ncode_r0x00420b40:\n    fcn.0040f269();\n    unaff_EDI = 0x91;\ncode_r0x00420b4d:\n    fcn.0041fdea(unaff_EDI, unaff_ESI);\ncode_r0x00420b55:\n    uVar7 = 1;\ncode_r0x00420b58:\n    fcn.0044951c(var_18h);\n    fcn.00401b29();\n    fcn.0044951c(var_50h);\n    return uVar7;\n}\n",
        "token_count": 1418
    },
    "00420c3b": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00420c3b(void)\n\n{\n    uint uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t unaff_ESI;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    if ((*(unaff_ESI + 0x840) != '\\0') && (*(unaff_ESI + 0x841) != '\\x01')) {\n        uVar2 = (*_sym.imp.WINMM.dll_timeGetTime)();\n        uVar3 = uVar2 - *(unaff_ESI + 0x844);\n        if (uVar2 < *(unaff_ESI + 0x844)) {\n            uVar3 = uVar3 - 1;\n        }\n        if (*(unaff_ESI + 0x848) <= uVar3) {\n            *(unaff_ESI + 0x844) = uVar2;\n            fcn.004327a9(unaff_ESI, *(unaff_ESI + 0x834), &var_4h, &var_10h, &var_ch, &var_8h);\n            var_4h = var_4h + 1;\n            uVar1 = *(unaff_ESI + 0x290);\n            *(unaff_ESI + 0x290) = 0;\n            *(unaff_ESI + 0x841) = 1;\n            fcn.00421702(unaff_ESI, var_4h, 1, 1);\n            *(unaff_ESI + 0x841) = 0;\n            if (*(unaff_ESI + 0x290) == 1) {\n                return 1;\n            }\n            *(unaff_ESI + 0x290) = uVar1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 414
    },
    "00420cda": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00420cda(void)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    int32_t *piVar3;\n    int32_t **ppiVar4;\n    uint32_t uVar5;\n    int32_t unaff_EDI;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    uVar5 = 0;\n    if (*0x47bd88 == 0) {\n        uVar2 = 0;\n    }\n    else {\n        piVar3 = *0x47bd8c;\n        if (*0x47bd8c == NULL) {\n            piVar3 = 0x47bd94;\n        }\n        var_4h = *piVar3;\n        fcn.00421aef();\n        uVar1 = *(unaff_EDI + 0x6d8);\n        if (uVar1 != 0) {\n            do {\n                piVar3 = fcn.00421a8a();\n                if (*piVar3 != 0) {\n                    ppiVar4 = fcn.00421a8a();\n                    if (**ppiVar4 == var_4h) break;\n                }\n                uVar5 = uVar5 + 1;\n            } while (uVar5 < *(unaff_EDI + 0x6d8));\n        }\n        if (uVar5 == uVar1) {\n            uVar2 = 0;\n        }\n        else {\n            piVar3 = fcn.00421a8a();\n            fcn.004327a9(unaff_EDI, *(*piVar3 + 8), &var_4h, &var_10h, &var_ch, &var_8h);\n            var_4h = var_4h + 1;\n            fcn.00421a8a();\n            fcn.00416e71();\n            uVar2 = *(unaff_EDI + 0x290);\n            *(unaff_EDI + 0x290) = 0;\n            fcn.00421702(unaff_EDI, var_4h, 1, 1);\n            if (*(unaff_EDI + 0x290) != 1) {\n                *(unaff_EDI + 0x290) = uVar2;\n            }\n            uVar2 = 1;\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 533
    },
    "00420dc8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_64h\n// WARNING: Variable defined which should be unmapped: var_60h\n// WARNING: Variable defined which should be unmapped: var_5ch\n\nuint32_t fcn.00420dc8(void)\n\n{\n    uint uVar1;\n    code *pcVar2;\n    char cVar3;\n    uint32_t in_EAX;\n    uint32_t uVar4;\n    uint8_t uVar5;\n    uint var_64h;\n    uint var_60h;\n    uint *var_5ch;\n    uint var_54h;\n    uint var_50h;\n    uint var_44h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_28h;\n    uint var_24h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    if (((*0x47841c == '\\0') || (*(in_EAX + 0x84c) == '\\x01')) || (*0x478440 == '\\x01')) {\n        uVar4 = in_EAX & 0xffffff00;\n    }\n    else {\n        fcn.00416d61();\n        while( true ) {\n            cVar3 = fcn.00404432();\n            if (cVar3 == '\\0') break;\n            if (var_5ch != NULL) {\n                cVar3 = fcn.004327a9(in_EAX, var_60h, &var_4h, &var_10h, &var_ch, &var_8h);\n                if (cVar3 != '\\0') {\n                    var_44h = 0;\n                    var_38h = 0;\n                    var_3ch = 1;\n                    fcn.00418bb9(var_64h);\n                    fcn.00416d81(0x45d5b8);\n                    pcVar2 = _sym.imp.USER32.dll_CharUpperBuffW;\n                    (*_sym.imp.USER32.dll_CharUpperBuffW)(var_1ch, var_18h);\n                    fcn.004181c8(0x47bd30, &var_1ch, &var_44h);\n                    fcn.0044951c(var_1ch);\n                    fcn.00418c4c(var_54h);\n                    fcn.00416d81(0x45d598);\n                    (*pcVar2)(var_28h, var_24h);\n                    fcn.004181c8(0x47bd30, &var_28h, &var_44h);\n                    fcn.0044951c(var_28h);\n                    fcn.00418c4c(var_50h);\n                    var_5ch = &var_34h;\n                    fcn.00416d81(0x45d578);\n                    (*pcVar2)(var_34h, var_30h);\n                    var_60h = 0x47bd30;\n                    fcn.004181c8(0x47bd30, var_5ch, &var_44h);\n                    fcn.0044951c(var_34h);\n                    uVar1 = *(in_EAX + 0x290);\n                    *(in_EAX + 0x290) = 0;\n                    var_64h = 1;\n                    *(in_EAX + 0x84c) = 1;\n                    fcn.00421702(in_EAX, var_4h + 1, 1, 1);\n                    *(in_EAX + 0x84c) = 0;\n                    if (*(in_EAX + 0x290) == 1) {\n                        fcn.0041858e();\n                        uVar5 = 1;\n                        goto code_r0x00420f54;\n                    }\n                    *(in_EAX + 0x290) = uVar1;\n                    fcn.0041858e();\n                }\n            }\n        }\n        uVar5 = 0;\ncode_r0x00420f54:\n        uVar4 = fcn.0044951c(var_60h);\n        uVar4 = uVar4 & 0xffffff00 | uVar5;\n    }\n    return uVar4;\n}\n",
        "token_count": 963
    },
    "00420f71": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_38h\n// WARNING: Variable defined which should be unmapped: var_3ch\n// WARNING: Variable defined which should be unmapped: var_34h\n// WARNING: Variable defined which should be unmapped: var_2ch\n\nuint32_t fcn.00420f71(void)\n\n{\n    uint uVar1;\n    char cVar2;\n    uint32_t in_EAX;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    int32_t unaff_EDI;\n    uint var_3ch;\n    uint var_38h;\n    int32_t var_34h;\n    uint *var_2ch;\n    uint var_24h;\n    uint var_20h;\n    uint lpsz;\n    uint cchLength;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    if ((*0x47b41c == '\\0') || (uVar4 = 1,  *(unaff_EDI + 0x84d) == '\\x01')) {\n        uVar4 = in_EAX & 0xffffff00;\n    }\n    else {\n        fcn.00416d61();\n        while( true ) {\n            cVar2 = fcn.0041338a();\n            if (cVar2 == '\\0') break;\n            if (var_34h != 0) {\n                cVar2 = fcn.004327a9(unaff_EDI, var_38h, &var_4h, &var_10h, &var_ch, &var_8h);\n                if (cVar2 != '\\0') {\n                    var_2ch = NULL;\n                    var_20h = 0;\n                    var_24h = 1;\n                    fcn.00418bb9(var_3ch);\n                    fcn.00416d81(0x45d564);\n                    (*_sym.imp.USER32.dll_CharUpperBuffW)(lpsz, cchLength);\n                    var_2ch = &var_2ch;\n                    var_34h = 0x47bd30;\n                    fcn.004181c8(0x47bd30, &lpsz, var_2ch);\n                    fcn.0044951c(lpsz);\n                    uVar1 = *(unaff_EDI + 0x290);\n                    *(unaff_EDI + 0x290) = 0;\n                    var_38h = 1;\n                    var_3ch = 1;\n                    *(unaff_EDI + 0x84d) = 1;\n                    fcn.00421702(unaff_EDI, var_4h + 1, 1, 1);\n                    *(unaff_EDI + 0x84d) = 0;\n                    if (*(unaff_EDI + 0x290) == 1) {\n                        fcn.0041858e();\n                        goto code_r0x0042106b;\n                    }\n                    *(unaff_EDI + 0x290) = uVar1;\n                    fcn.0041858e();\n                }\n            }\n        }\n        uVar4 = 0;\ncode_r0x0042106b:\n        uVar3 = fcn.0044951c(var_38h);\n        uVar4 = uVar3 & 0xffffff00 | uVar4;\n    }\n    return uVar4;\n}\n",
        "token_count": 752
    },
    "00421085": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.00421085(int32_t param_1)\n\n{\n    code *pcVar1;\n    char cVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint cchLength;\n    uint uVar5;\n    int32_t *piVar6;\n    int32_t iVar7;\n    uchar *puVar8;\n    uint32_t uVar9;\n    uint extraout_EDX;\n    uint arg_10h;\n    uint8_t uVar10;\n    uint32_t uVar11;\n    uint *puVar12;\n    uchar *arg_10h_00;\n    uchar *arg_14h;\n    uchar *puVar13;\n    uchar *noname_2;\n    uint uVar14;\n    uint uStack248;\n    uint uStack240;\n    uint uStack236;\n    uint uStack232;\n    uint uStack216;\n    uint uStack208;\n    int32_t iStack204;\n    uint uStack200;\n    uint uStack192;\n    uint uStack184;\n    uint uStack180;\n    uint uStack176;\n    uint uStack168;\n    uint uStack164;\n    uint uStack156;\n    uint32_t uStack144;\n    int32_t iStack136;\n    uint uStack132;\n    uint uStack120;\n    uint uStack116;\n    int32_t iStack108;\n    uint32_t uStack104;\n    uint uStack100;\n    int32_t aiStack92 [2];\n    uint uStack84;\n    uint uStack76;\n    uint uStack72;\n    uint uStack68;\n    uint uStack56;\n    int32_t iStack52;\n    int32_t iStack48;\n    int32_t iStack44;\n    int32_t iStack40;\n    uint32_t uStack36;\n    uint32_t uStack32;\n    int32_t *piStack28;\n    int32_t iStack24;\n    int32_t *piStack20;\n    uint32_t uStack16;\n    uint32_t uStack12;\n    int32_t *piStack8;\n    \n    puVar13 = &stack0xffffff88;\n    uStack84 = 0xffffffff;\n    uStack192 = 0;\n    uStack184 = 1;\n    uStack180 = 0;\n    uStack176 = 0;\n    uStack168 = 1;\n    uStack164 = 0;\n    uStack116 = 0x45d544;\n    iStack108 = 0;\n    uStack104 = 0;\n    uStack100 = 0;\n    iStack40 = 0;\n    fcn.00417dba();\n    uStack144 = 0;\n    iStack136 = 1;\n    uStack132 = 0;\n    fcn.00416d61();\n    pcVar1 = *0x4591a0;\n    if ((*0x478400 == '\\0') || (*(param_1 + 0x898) == '\\x01')) {\n        fcn.0044951c(uStack156);\n        fcn.0041858e();\n        fcn.00417ddb();\n        fcn.0042190c();\n        fcn.0041858e();\n        uVar9 = fcn.0041858e();\n        return uVar9 & 0xffffff00;\n    }\n    iStack24 = 2;\n    (**0x4591a0)(0x4783f4);\n    if (*0x4783f4 == 1) {\ncode_r0x00421145:\n        if ((*0x4783f8 == *0x4783fc) || (iVar3 = (*0x4783fc & 0x3f) * 0x28,  *(iVar3 + 0x47bda4) == 0))\n        goto code_r0x00421232;\n        uStack12 = iVar3 + 0x47bd98;\n        uVar4 = fcn.0040f269();\n        fcn.00418a19(uVar4);\n        fcn.0040f269();\n        piStack8 = 0x2;\n        uVar4 = fcn.00418641();\n        noname_2 = &stack0xffffff64;\n        fcn.00416e83();\n        fcn.0040f269();\n        cchLength = fcn.00418641();\n        fcn.00417064();\n        cVar2 = fcn.004327a9(param_1, uStack156, &stack0xffffffd4, &stack0xffffffcc, &stack0xffffffd0, puVar13);\n        if (cVar2 == '\\0') {\n            puVar8 = &stack0xffffffd0;\n            arg_14h = &stack0xffffffcc;\n            arg_10h_00 = &stack0xffffffd4;\n            fcn.0040f269();\n            uVar5 = fcn.00418641();\n            cVar2 = fcn.004327a9(param_1, uVar5, arg_10h_00, arg_14h, puVar8, puVar13);\n            if (cVar2 == '\\0') {\n                fcn.00417eaa();\n                *0x4783fc = *0x4783fc + 1;\n                goto code_r0x00421232;\n            }\n        }\n        else {\n            piStack8 = 0x3;\n        }\n        uVar9 = ~-(iStack136 != 6) & uStack144;\n        *(param_1 + 0x898) = 1;\n        fcn.00416d81(0x45d548);\n        (*_sym.imp.USER32.dll_CharUpperBuffW)(uStack76, uStack72);\n        uVar5 = 0x47bd30;\n        fcn.004181c8(0x47bd30, &stack0xffffffb4, uVar9);\n        fcn.0044951c(uStack76);\n        puVar13 = &stack0xffffff8c;\n        fcn.0040fd7d();\n        iVar3 = param_1;\n        fcn.00428899(param_1, puVar13);\n        uVar9 = 3;\n        if (0 < iStack52) {\n            do {\n                if (*(uStack12 + 0xc) <= piStack8) break;\n                while( true ) {\n                    puVar8 = &stack0xffffffa4;\n                    if (uVar9 < uStack104) {\n                        puVar8 = *(iStack108 + uVar9 * 4);\n                    }\n                    if (*(puVar8 + 8) != 0) break;\n                    if (uVar9 < uStack104) {\n                        piVar6 = *(iStack108 + uVar9 * 4);\n                    }\n                    else {\n                        piVar6 = &stack0xffffffa4;\n                    }\n                    if (*piVar6 != 0x1e) {\n                        fcn.0041fdea(0x91, 0xffffffff);\n                        goto code_r0x004213af;\n                    }\n                    uVar9 = uVar9 + 1;\n                }\n                uVar11 = uVar9 + 1;\n                if (uVar11 < uStack104) {\n                    puVar8 = *(iStack108 + uVar11 * 4);\n                }\n                else {\n                    puVar8 = &stack0xffffffa4;\n                }\n                if (*(puVar8 + 8) == 2) {\n                    uVar11 = uVar9 + 3;\n                }\n                iVar3 = fcn.0040f269();\n                fcn.00417dfb();\n                piStack8 = piStack8 + 1;\n                iStack40 = iStack40 + 1;\n                uVar9 = uVar11 + 1;\n            } while (iStack40 < iStack52);\n        }\n        fcn.00417eaa();\n        *0x4783fc = *0x4783fc + 1;\n        (**0x4591a4)(0x4783f4);\n        uVar9 = 3;\n        uStack36 = 3;\n        fcn.00416c22();\n        if (0 < iStack52) {\n            iStack48 = 0;\n            piStack28 = iStack108 + 0x10;\n            iStack24 = 1;\n            uStack16 = 5;\n            uStack32 = 4;\n            uStack12 = 6;\n            piStack20 = iStack108 + 0x14;\n            piStack8 = iStack108 + 0x18;\n            do {\n                uVar11 = uStack104;\n                iVar7 = iStack108;\n                if (iStack40 < iStack24) {\n                    uStack216 = 0xffffffff;\n                    uStack68 = 0xffffffff;\n                    uStack248 = 0x45d544;\n                    uStack240 = 0;\n                    uStack236 = 0;\n                    uStack232 = 0;\n                    uStack56 = 0;\n                    if (uStack32 < uStack104) {\n                        puVar8 = *piStack28;\n                    }\n                    else {\n                        puVar8 = &stack0xffffffa4;\n                    }\n                    if (*(puVar8 + 8) == 2) {\n                        puVar8 = &stack0xffffffa4;\n                        if (uStack16 < uStack104) {\n                            puVar8 = *piStack20;\n                        }\n                        if (*(puVar8 + 8) == 0xb) {\ncode_r0x00421435:\n                            uVar4 = 0x42143e;\n                            fcn.0042192c();\n                            piVar6 = piStack8;\n                            if (uVar11 <= uStack12) goto code_r0x00421425;\ncode_r0x00421446:\n                            puVar8 = *piVar6;\n                        }\n                        else {\n                            puVar8 = &stack0xffffffa4;\n                            if (uStack16 < uStack104) {\n                                puVar8 = *piStack20;\n                            }\n                            if (*(puVar8 + 8) == 10) goto code_r0x00421435;\n                            piVar6 = piStack20;\n                            if (uStack16 < uStack104) goto code_r0x00421446;\ncode_r0x00421425:\n                            puVar8 = &stack0xffffffa4;\n                        }\n                        fcn.0042192c(puVar8);\n                        fcn.00418097(0xf);\n                        fcn.0042192c();\n                        fcn.00437a3e(&stack0xffffff08, &stack0xffffffc8, &stack0xffffff70);\n                    }\n                    else {\n                        uVar4 = 0x421486;\n                        fcn.00418bb9();\n                    }\n                    if (uStack36 < uVar11) {\n                        puVar12 = *(iVar7 + uStack36 * 4);\n                    }\n                    else {\n                        puVar12 = &stack0xffffffa4;\n                    }\n                    uVar14 = *puVar12;\n                    fcn.00416d81();\n                    fcn.00416b13(uVar14, iVar3, puVar13, uVar5);\n                    fcn.00417f90();\n                    fcn.0042190c();\n                }\n                else {\n                    if (uVar9 < uStack104) {\n                        puVar12 = *(iStack108 + uVar9 * 4);\n                    }\n                    else {\n                        puVar12 = &stack0xffffffa4;\n                    }\n                    uVar14 = *puVar12;\n                    fcn.00416d81();\n                    fcn.00416b13(uVar14, cchLength, noname_2, uVar4);\n                }\n                if (uStack32 < uStack104) {\n                    puVar8 = *piStack28;\n                }\n                else {\n                    puVar8 = &stack0xffffffa4;\n                }\n                iVar7 = 2;\n                if (*(puVar8 + 8) == 2) {\n                    if (uStack16 < uStack104) {\n                        puVar8 = *piStack20;\n                    }\n                    else {\n                        puVar8 = &stack0xffffffa4;\n                    }\n                    if (*(puVar8 + 8) != 0xb) {\n                        if (uStack16 < uStack104) {\n                            puVar8 = *piStack20;\n                        }\n                        else {\n                            puVar8 = &stack0xffffffa4;\n                        }\n                        if (*(puVar8 + 8) != 10) {\n                            piStack8 = piStack8 + 4;\n                            piStack28 = piStack28 + 4;\n                            piStack20 = piStack20 + 4;\n                            iVar7 = 4;\n                            goto code_r0x0042157a;\n                        }\n                    }\n                    piStack8 = piStack8 + 5;\n                    piStack28 = piStack28 + 5;\n                    piStack20 = piStack20 + 5;\n                    iVar7 = 5;\n                }\n                else {\n                    piStack8 = piStack8 + 2;\n                    piStack28 = piStack28 + 2;\n                    piStack20 = piStack20 + 2;\n                }\ncode_r0x0042157a:\n                uVar9 = uStack36 + iVar7;\n                uStack36 = uVar9;\n                uStack12 = uStack12 + iVar7;\n                uStack32 = uStack32 + iVar7;\n                uStack16 = uStack16 + iVar7;\n                iStack48 = iStack48 + 4;\n                iStack24 = iStack24 + 1;\n            } while (iStack24 <= iStack52);\n        }\n        uStack56 = *(param_1 + 0x290);\n        *(param_1 + 0x290) = 0;\n        iStack204 = iStack44;\n        uStack208 = 8;\n        uStack200 = uStack120;\n        fcn.004219ff(&stack0xffffff30);\n        *(param_1 + 0x35c) = iStack40;\n        fcn.00418bb9(0);\n        fcn.00421898(0);\n        fcn.004218c6(extraout_EDX);\n        fcn.00421702(param_1, iStack44 + 1, arg_10h, arg_10h);\n        fcn.00421a3d();\n        fcn.00416d3d();\n        fcn.00416d81(0x45d548);\n        (*_sym.imp.USER32.dll_CharUpperBuffW)(uStack76, uStack72);\n        fcn.004181a2(&stack0xffffffb4, &stack0xffffffd8);\n        fcn.0044951c(uStack76);\n        if ((*0x478400 != '\\0') && (cVar2 = fcn.00419b83(),  cVar2 == '\\0')) {\n            *(*0x478404 + 0x2d) = 0;\n        }\n        *(param_1 + 0x898) = 0;\n        if (*(param_1 + 0x290) == 1) {\ncode_r0x004213af:\n            uVar10 = 1;\n            goto code_r0x0042168a;\n        }\n        *(param_1 + 0x290) = uStack56;\n    }\n    else {\n        do {\n            if (iStack24 == 0) break;\n            (**0x4591a4)(0x4783f4);\n            (*_sym.imp.KERNEL32.DLL_Sleep)(10);\n            (*pcVar1)(0x4783f4);\n            iStack24 = iStack24 + -1;\n        } while (*0x4783f4 != 1);\n        if (*0x4783f4 == 1) goto code_r0x00421145;\ncode_r0x00421232:\n        (**0x4591a4)(0x4783f4);\n    }\n    uVar10 = 0;\ncode_r0x0042168a:\n    fcn.0044951c(uStack156);\n    fcn.0041858e();\n    fcn.00417ddb();\n    fcn.0042190c();\n    fcn.0041858e();\n    uVar9 = fcn.0041858e();\n    return uVar9 & 0xffffff00 | uVar10;\n}\n",
        "token_count": 3579
    },
    "00421702": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00421702(int32_t arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint var_74h;\n    uint var_64h;\n    uint var_54h;\n    uint var_44h;\n    int32_t var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    int32_t var_20h;\n    uint var_1ch;\n    uint *var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_8h = arg_8h + 0x6f8;\n    fcn.0041835f(var_8h);\n    var_ch = arg_8h + 0x708;\n    fcn.0041835f(var_ch);\n    var_10h = *(arg_8h + 0x7b4);\n    var_18h = arg_8h + 0x718;\n    var_14h = **var_18h;\n    var_1ch = *(arg_8h + 0x7bc);\n    var_20h = arg_8h + 0x808;\n    fcn.00416dcf();\n    var_24h = *(arg_8h + 0x814);\n    var_28h = *(arg_8h + 0x818);\n    var_2ch = *(arg_8h + 0x28c);\n    var_30h = *(arg_8h + 0x354);\n    var_34h = *(arg_8h + 0x358);\n    var_38h = arg_8h + 0x340;\n    fcn.0041835f(var_38h);\n    var_4h = *(arg_8h + 0x670);\n    if (arg_10h != '\\0') {\n        fcn.00416c22();\n    }\n    fcn.004203f1(arg_ch);\n    if (arg_10h != '\\0') {\n        fcn.00416d3d();\n    }\n    while (var_4h < *(arg_8h + 0x670)) {\n        fcn.00421a3d();\n    }\n    fcn.00418a19(&var_74h);\n    fcn.00418a19(&var_64h);\n    *(arg_8h + 0x7b4) = var_10h;\n    fcn.00402a4f(var_14h);\n    *(arg_8h + 0x7bc) = var_1ch;\n    fcn.00416e71();\n    *(arg_8h + 0x814) = var_24h;\n    *(arg_8h + 0x818) = var_28h;\n    *(arg_8h + 0x28c) = var_2ch;\n    if (arg_14h != '\\0') {\n        *(arg_8h + 0x354) = var_30h;\n        *(arg_8h + 0x358) = var_34h;\n        fcn.00418a19(&var_54h);\n    }\n    fcn.0041858e();\n    fcn.0044951c(var_44h);\n    fcn.0041858e();\n    fcn.0041858e();\n    return;\n}\n",
        "token_count": 792
    },
    "00421898": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00421898(uint param_1, char param_2)\n\n{\n    uint16_t uVar1;\n    int32_t in_EAX;\n    \n    *(in_EAX + 0x354) = param_1;\n    if (param_2 == '\\0') {\n        uVar1 = *(in_EAX + 0x296);\n        if ((uVar1 & 2) != 0) {\n            *(in_EAX + 0x296) = uVar1 ^ 2;\n        }\n    }\n    else {\n        *(in_EAX + 0x296) = *(in_EAX + 0x296) | 2;\n    }\n    return;\n}\n",
        "token_count": 154
    },
    "004218c6": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004218c6(uint param_1, char param_2)\n\n{\n    uint16_t uVar1;\n    int32_t in_EAX;\n    \n    *(in_EAX + 0x358) = param_1;\n    if (param_2 == '\\0') {\n        uVar1 = *(in_EAX + 0x296);\n        if ((uVar1 & 4) != 0) {\n            *(in_EAX + 0x296) = uVar1 ^ 4;\n        }\n    }\n    else {\n        *(in_EAX + 0x296) = *(in_EAX + 0x296) | 4;\n    }\n    return;\n}\n",
        "token_count": 155
    },
    "00421c76": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00421c76(void)\n\n{\n    int32_t unaff_ESI;\n    \n    if (*(unaff_ESI + 0xc) == 0) {\n        fcn.004188e0();\n    }\n    return *(*(unaff_ESI + 0xc) + 4);\n}\n",
        "token_count": 68
    },
    "00421c8a": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00421c8a(int32_t arg_8h, uint arg_ch)\n\n{\n    uint arg_8h_00;\n    uint var_20ch;\n    \n    fcn.0044c510();\n    arg_8h_00 = fcn.00418641();\n    fcn.00415029(arg_8h_00);\n    fcn.00418641();\n    fcn.00418641();\n    fcn.00418641();\n    (**0x4591b0)();\n    fcn.00418c7e();\n    return 0;\n}\n",
        "token_count": 129
    },
    "00421d39": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00421d39(int32_t arg_8h, uint arg_ch)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint var_20ch;\n    \n    uVar2 = fcn.00418641();\n    fcn.00415029(uVar2);\n    uVar2 = fcn.00418641(&var_20ch);\n    uVar2 = fcn.00418641(uVar2);\n    uVar2 = fcn.00418641(uVar2);\n    pcVar1 = *0x4591b4;\n    iVar3 = (**0x4591b4)(uVar2);\n    if (iVar3 == 0) {\n        fcn.00418bb9(0);\n    }\n    else {\n        (*pcVar1)(0, 0, 0, &var_20ch);\n    }\n    return 0;\n}\n",
        "token_count": 205
    },
    "004220e2": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004220e2(int32_t arg_8h, uint arg_ch)\n\n{\n    int16_t iVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    int32_t *piVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    int16_t *piVar8;\n    int16_t *piVar9;\n    int16_t *piVar10;\n    uint var_21ch;\n    int32_t var_10h;\n    int16_t *var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    fcn.00418bb9(0);\n    uVar3 = fcn.00418641();\n    fcn.00415029(uVar3);\n    uVar2 = *(arg_8h + 0xc);\n    if (uVar2 < 3) {\n        iVar5 = arg_8h + 0x18;\n    }\n    else {\n        iVar5 = *(*(arg_8h + 8) + 8);\n    }\n    if (*(iVar5 + 8) == 5) {\n        if (uVar2 < 3) {\n            piVar4 = arg_8h + 0x18;\n        }\n        else {\n            piVar4 = *(*(arg_8h + 8) + 8);\n        }\n        if (((*piVar4 != 0) && (*(*piVar4 + 0x20c) == '\\x02')) && (iVar5 = fcn.0041a1ed(),  iVar5 == 2)) {\n            var_10h = 1;\n            if ((3 < uVar2) && (var_10h = fcn.00418733(),  var_10h < 0)) {\n                var_10h = 1;\n            }\n            iVar5 = 0;\n            if (*(arg_8h + 0xc) < 3) {\n                var_8h = arg_8h + 0x18;\n            }\n            else {\n                var_8h = *(*(arg_8h + 8) + 8);\n            }\n            var_4h = var_10h;\n            iVar6 = fcn.0041a1ed();\n            if (var_10h < iVar6) {\n                do {\n                    fcn.0041a132(2);\n                    iVar6 = fcn.00421c76();\n                    fcn.0041a132(2);\n                    iVar7 = fcn.00421c76();\n                    var_4h = var_4h + 1;\n                    iVar5 = iVar5 + iVar6 + 2 + iVar7;\n                    iVar6 = fcn.0041a1ed();\n                } while (var_4h < iVar6);\n            }\n            piVar8 = fcn.00449614(iVar5 * 2 + 2);\n            iVar5 = var_10h;\n            var_4h = var_10h;\n            var_ch = piVar8;\n            iVar6 = fcn.0041a1ed();\n            if (iVar5 < iVar6) {\n                do {\n                    fcn.0041a132(2);\n                    for (piVar9 = fcn.00418641(); *piVar9 != 0; piVar9 = piVar9 + 1) {\n                        *piVar8 = *piVar9;\n                        piVar8 = piVar8 + 1;\n                    }\n                    *piVar8 = 0x3d;\n                    fcn.0041a132(2);\n                    piVar9 = fcn.00418641();\n                    while( true ) {\n                        piVar10 = piVar8 + 1;\n                        if (*piVar9 == 0) break;\n                        *piVar10 = *piVar9;\n                        piVar9 = piVar9 + 1;\n                        piVar8 = piVar10;\n                    }\n                    *piVar10 = 0;\n                    piVar8 = piVar8 + 2;\n                    var_4h = var_4h + 1;\n                    iVar5 = fcn.0041a1ed();\n                } while (var_4h < iVar5);\n            }\n            *piVar8 = 0;\n            goto code_r0x00422357;\n        }\n    }\n    if (uVar2 < 3) {\n        arg_8h = arg_8h + 0x18;\n    }\n    else {\n        arg_8h = *(*(arg_8h + 8) + 8);\n    }\n    if (*(arg_8h + 8) != 4) {\n        fcn.00421898(0);\n        return 0;\n    }\n    iVar5 = fcn.00421c76();\n    var_ch = fcn.00449614(iVar5 * 2 + 4);\n    for (piVar8 = fcn.00418641(); piVar9 = var_ch,  *piVar8 == 10; piVar8 = piVar8 + 1) {\n    }\n    do {\n        iVar1 = *piVar8;\n        if (iVar1 == 10) {\n            *piVar9 = 0;\n        }\n        else {\n            if (iVar1 == 0) break;\n            *piVar9 = iVar1;\n        }\n        piVar9 = piVar9 + 1;\n        piVar8 = piVar8 + 1;\n    } while( true );\n    *piVar9 = 0;\n    piVar9[1] = 0;\ncode_r0x00422357:\n    uVar3 = fcn.00418641(var_ch, &var_21ch);\n    iVar5 = (**0x4591bc)(uVar3);\n    if (iVar5 != 0) {\n        (**0x4591b4)(0, 0, 0, &var_21ch);\n        fcn.00418bb9(1);\n    }\n    fcn.0044951c(var_ch);\n    return 0;\n}\n",
        "token_count": 1329
    },
    "0042253d": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0042253d(int32_t arg_8h, uint arg_ch)\n\n{\n    uint32_t uVar1;\n    char cVar2;\n    uint uVar3;\n    uint uVar4;\n    uint arg_8h_00;\n    int32_t iVar5;\n    uint uVar6;\n    int32_t *piVar7;\n    uint *puVar8;\n    int32_t in_ECX;\n    uint32_t uVar9;\n    uint arg_10h;\n    uint arg_14h;\n    uint arg_18h;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    var_8h = in_ECX;\n    var_4h = fcn.00418733();\n    if (((var_4h & 8) != 0) && ((var_4h & 3) != 0)) {\n        fcn.00416d61();\n        uVar3 = fcn.00449614(0x208);\n        uVar4 = fcn.00449614(0x208);\n        arg_18h = 0;\n        arg_14h = 0;\n        uVar6 = uVar3;\n        arg_10h = uVar4;\n        arg_8h_00 = fcn.00418641();\n        fcn.0044a246(arg_8h_00, uVar6, arg_10h, arg_14h, arg_18h);\n        fcn.00417064(uVar3);\n        fcn.00417064(uVar4);\n        if ((var_10h != 0) &&\n           ((cVar2 = fcn.00414fbc(var_14h),  cVar2 == '\\0' && (cVar2 = fcn.004156ef(var_14h),  cVar2 == '\\0')))) {\n            fcn.00418bb9(0xffffffff);\n        }\n        fcn.0044951c(uVar3);\n        fcn.0044951c(uVar4);\n        iVar5 = fcn.00418733();\n        if (iVar5 == -1) {\n            fcn.0044951c(var_14h);\n            return 0;\n        }\n        var_4h = var_4h ^ 8;\n        fcn.0044951c(var_14h);\n        in_ECX = var_8h;\n    }\n    iVar5 = fcn.00449614(0x60);\n    if (iVar5 == 0) {\n        arg_8h = 0;\n    }\n    else {\n        arg_8h = fcn.00413ddf();\n    }\n    uVar6 = fcn.00418641();\n    cVar2 = fcn.00413def(uVar6);\n    if (cVar2 != '\\0') {\n        uVar1 = *(in_ECX + 0x6b0);\n        uVar9 = 0;\n        if (uVar1 != 0) {\n            do {\n                piVar7 = fcn.00421a8a();\n                if (*piVar7 == 0) break;\n                uVar9 = uVar9 + 1;\n            } while (uVar9 < uVar1);\n        }\n        iVar5 = fcn.00449614(0x10);\n        if (uVar9 == uVar1) {\n            var_8h = iVar5;\n            fcn.00403ccb(&var_8h);\n        }\n        else {\n            piVar7 = fcn.00421a8a();\n            *piVar7 = iVar5;\n        }\n        puVar8 = fcn.00421a8a();\n        **puVar8 = 0;\n        piVar7 = fcn.00421a8a();\n        *(*piVar7 + 4) = arg_8h;\n    }\n    fcn.00418bb9();\n    return 0;\n}\n",
        "token_count": 876
    },
    "004227ef": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Variable defined which should be unmapped: var_8h\n\nuint __cdecl fcn.004227ef(int32_t arg_8h, uint arg_ch)\n\n{\n    bool bVar1;\n    char cVar2;\n    int32_t iVar3;\n    uint lpFileName;\n    int32_t *piVar4;\n    int32_t **ppiVar5;\n    int32_t arg_8h_00;\n    int32_t iVar6;\n    int16_t aiStackY131086 [65523];\n    uint var_8h;\n    uint var_1h;\n    \n    iVar6 = arg_8h;\n    fcn.0044c510();\n    bVar1 = false;\n    fcn.00418c7e();\n    if ((*(arg_8h + 0xc) == 2) && (iVar3 = fcn.00418733(),  iVar3 < 1)) {\ncode_r0x00422a2a:\n        fcn.00421898();\n        return 0;\n    }\n    if (*(arg_8h + 0xc) == 0) {\n        arg_8h = arg_8h + 0x18;\n    }\n    else {\n        arg_8h = **(arg_8h + 8);\n    }\n    if (*(arg_8h + 8) == 4) {\n        iVar3 = fcn.00449614();\n        if (iVar3 == 0) {\n            arg_8h = 0;\n        }\n        else {\n            arg_8h = fcn.00413ddf();\n        }\n        lpFileName = fcn.00418641();\n        cVar2 = fcn.00413def(lpFileName);\n        if (cVar2 == '\\0') {\n            if (arg_8h != 0) {\n                fcn.00413fd1();\n                fcn.0044951c();\n            }\n            goto code_r0x00422a2a;\n        }\n    }\n    else {\n        iVar3 = fcn.00418733();\n        if (((((iVar3 + -1 < 0) || (cVar2 = fcn.00419a96(),  cVar2 == '\\0')) || (*(arg_8h_00 + 0x6b0) <= iVar3 + -1)) ||\n            ((piVar4 = fcn.00421a8a(),  *piVar4 == 0 || (ppiVar5 = fcn.00421a8a(),  **ppiVar5 != 0)))) ||\n           (piVar4 = fcn.00421a8a(),  (*(*(*piVar4 + 4) + 1) & 0x20) == 0)) goto code_r0x00422a2a;\n    }\n    if (*(iVar6 + 0xc) == 2) {\n        iVar3 = fcn.00418733();\n        fcn.00413f0a();\n        if (0 < iVar3) {\n            do {\n                cVar2 = fcn.0041435f();\n                if (cVar2 == '\\0') {\n                    fcn.00421898();\n                    bVar1 = true;\n                }\n                iVar3 = iVar3 + -1;\n            } while (iVar3 != 0);\ncode_r0x004229ac:\n            if (bVar1) goto code_r0x00422a05;\n        }\n    }\n    else {\n        cVar2 = fcn.0041435f();\n        if (cVar2 == '\\0') {\n            fcn.00421898();\n            bVar1 = true;\n            goto code_r0x004229ac;\n        }\n    }\n    iVar3 = fcn.0044985c();\n    if ((iVar3 != 0) && (aiStackY131086[iVar3] == 10)) {\n        aiStackY131086[iVar3] = 0;\n    }\n    fcn.00418c7e();\n    if (*(arg_8h_00 + 0x299) != '\\0') {\n        fcn.00436704(arg_ch);\n    }\n    if (*(arg_8h_00 + 0x29a) != '\\0') {\n        fcn.0043685b(arg_8h_00, arg_ch);\n    }\ncode_r0x00422a05:\n    if (*(iVar6 + 0xc) == 0) {\n        iVar6 = iVar6 + 0x18;\n    }\n    else {\n        iVar6 = **(iVar6 + 8);\n    }\n    if (*(iVar6 + 8) != 4) {\n        return 0;\n    }\n    fcn.00413fd1();\n    return 0;\n}\n",
        "token_count": 1039
    },
    "00422a3d": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00422a3d(int32_t arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t *piVar4;\n    int32_t **ppiVar5;\n    uint arg_8h_00;\n    int32_t in_ECX;\n    uint var_1ch;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint8_t *var_4h;\n    \n    fcn.00418c7e(0x45bfe0);\n    if (*(arg_8h + 0xc) == 0) {\n        iVar2 = arg_8h + 0x18;\n    }\n    else {\n        iVar2 = **(arg_8h + 8);\n    }\n    if (*(iVar2 + 8) == 4) {\n        iVar2 = fcn.00449614(0x60);\n        if (iVar2 == 0) {\n            var_4h = NULL;\n        }\n        else {\n            var_4h = fcn.00413ddf();\n        }\n        uVar3 = fcn.00418641();\n        cVar1 = fcn.00413def(uVar3);\n        if (cVar1 == '\\0') {\n            if (var_4h != NULL) {\n                fcn.00413fd1();\n                fcn.0044951c(var_4h);\n            }\n            goto code_r0x00422ca8;\n        }\n    }\n    else {\n        iVar2 = fcn.00418733();\n        if ((((iVar2 + -1 < 0) || (cVar1 = fcn.00419a96(),  cVar1 == '\\0')) || (*(in_ECX + 0x6b0) <= iVar2 + -1)) ||\n           ((piVar4 = fcn.00421a8a(),  *piVar4 == 0 || (ppiVar5 = fcn.00421a8a(),  **ppiVar5 != 0)))) {\ncode_r0x00422ca8:\n            fcn.00421898(0);\n            return 0;\n        }\n        piVar4 = fcn.00421a8a();\n        var_4h = *(*piVar4 + 4);\n        if ((*var_4h & 3) != 0) goto code_r0x00422ca8;\n    }\n    if (*(arg_8h + 0xc) < 2) {\n        if ((*var_4h & 4) != 0) {\n            fcn.00421898(0);\n            if (*(arg_8h + 0xc) == 0) {\n                arg_8h = arg_8h + 0x18;\n            }\n            else {\n                arg_8h = **(arg_8h + 8);\n            }\n            iVar2 = *(arg_8h + 8);\n            goto joined_r0x00422bac;\n        }\n        iVar2 = fcn.00413ee3();\n    }\n    else {\n        iVar2 = fcn.00418733();\n    }\n    if ((*var_4h & 0x14) == 0) {\n        uVar3 = fcn.00449614(iVar2 * 2 + 2);\n        cVar1 = fcn.004141eb();\n        if (cVar1 == '\\0') {\n            fcn.00421898(0);\n        }\n        else {\n            fcn.00416d61();\n            fcn.00417171(uVar3, 0);\n            fcn.00418cb1();\n            fcn.0044951c(var_1ch);\n        }\n    }\n    else {\n        uVar3 = fcn.00449614(iVar2);\n        fcn.00414192(uVar3);\n        if (iVar2 == 0) {\n            fcn.00421898(0);\n        }\n        else {\n            arg_8h_00 = fcn.00418bd2();\n            fcn.0044a6b0(arg_8h_00, uVar3, iVar2);\n        }\n    }\n    fcn.0044951c(uVar3);\n    if (*(arg_8h + 0xc) == 0) {\n        arg_8h = arg_8h + 0x18;\n    }\n    else {\n        arg_8h = **(arg_8h + 8);\n    }\n    iVar2 = *(arg_8h + 8);\njoined_r0x00422bac:\n    if (iVar2 != 4) {\n        return 0;\n    }\n    fcn.00413fd1();\n    return 0;\n}\n",
        "token_count": 1037
    },
    "00422ce7": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00422ce7(uint arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t *piVar4;\n    int32_t **ppiVar5;\n    int32_t iVar6;\n    int32_t unaff_EDI;\n    ulong uVar7;\n    uint8_t *var_4h;\n    \n    if (*(unaff_EDI + 0xc) == 0) {\n        iVar2 = unaff_EDI + 0x18;\n    }\n    else {\n        iVar2 = **(unaff_EDI + 8);\n    }\n    if (*(iVar2 + 8) == 4) {\n        iVar2 = fcn.00449614(0x60);\n        if (iVar2 == 0) {\n            var_4h = NULL;\n        }\n        else {\n            var_4h = fcn.00413ddf();\n        }\n        uVar3 = fcn.00418641();\n        cVar1 = fcn.00413def(uVar3);\n        if (cVar1 == '\\0') {\n            if (var_4h != NULL) {\n                fcn.00413fd1();\n                fcn.0044951c(var_4h);\n            }\n            goto code_r0x00422d5d;\n        }\n    }\n    else {\n        iVar2 = fcn.00418733();\n        if ((((iVar2 + -1 < 0) || (cVar1 = fcn.00419a96(),  cVar1 == '\\0')) || (*(in_EAX + 0x6b0) <= iVar2 + -1)) ||\n           ((piVar4 = fcn.00421a8a(),  *piVar4 == 0 || (ppiVar5 = fcn.00421a8a(),  **ppiVar5 != 0)))) {\ncode_r0x00422d5d:\n            fcn.00418bb9(0);\n            return 0;\n        }\n        piVar4 = fcn.00421a8a();\n        var_4h = *(*piVar4 + 4);\n        if ((*var_4h & 3) == 0) goto code_r0x00422d5d;\n    }\n    if (*(unaff_EDI + 0xc) < 2) {\n        iVar2 = unaff_EDI + 0x18;\n    }\n    else {\n        iVar2 = *(*(unaff_EDI + 8) + 4);\n    }\n    if ((*(iVar2 + 8) == 0xb) || ((*var_4h & 0x10) != 0)) {\n        fcn.00418678();\n        uVar7 = fcn.00418606();\n        cVar1 = fcn.00414093(uVar7 >> 0x20, uVar7);\n        if (cVar1 == '\\0') {\n            fcn.00418bb9(0);\n        }\n    }\n    else {\n        fcn.00418641();\n        fcn.004140b8();\n        if (arg_ch != '\\0') {\n            uVar3 = fcn.00418641();\n            iVar2 = fcn.0044985c(uVar3);\n            if (iVar2 != 0) {\n                iVar2 = iVar2 * 2 + -2;\n                iVar6 = fcn.00418641();\n                if ((*(iVar6 + iVar2) == 0xd) || (iVar6 = fcn.00418641(),  *(iVar6 + iVar2) == 10))\n                goto code_r0x00422ee4;\n            }\n            fcn.004140b8();\n        }\n    }\ncode_r0x00422ee4:\n    if (*(unaff_EDI + 0xc) == 0) {\n        iVar2 = unaff_EDI + 0x18;\n    }\n    else {\n        iVar2 = **(unaff_EDI + 8);\n    }\n    if (*(iVar2 + 8) != 4) {\n        return 0;\n    }\n    fcn.00413fd1();\n    return 0;\n}\n",
        "token_count": 920
    },
    "00422f0b": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00422f0b(int32_t arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint var_29ch;\n    uint var_298h;\n    uint var_294h;\n    uint var_290h;\n    uint var_28ch;\n    uint var_288h;\n    uint var_284h;\n    uint var_4ch;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    uint var_ah;\n    uint16_t var_6h;\n    uint16_t var_4h;\n    \n    var_14h = 0;\n    uVar1 = fcn.00418641(&var_29ch);\n    iVar2 = (*_sym.imp.KERNEL32.DLL_FindFirstFileW)(uVar1);\n    if (iVar2 == -1) {\n        fcn.00418c7e(0x45bfe0);\n        fcn.00421898(0);\n    }\n    else {\n        var_1ch = var_298h;\n        var_18h = var_294h;\n        var_24h = var_290h;\n        var_20h = var_28ch;\n        var_2ch = var_288h;\n        var_28h = var_284h;\n        (*_sym.imp.KERNEL32.DLL_FindClose)(iVar2);\n        if (1 < *(arg_8h + 0xc)) {\n            var_14h = fcn.00418733();\n        }\n        if (var_14h == 1) {\n            (**0x4591c4)(&var_1ch, &var_1ch);\n            puVar3 = &var_1ch;\n        }\n        else if (var_14h == 2) {\n            (**0x4591c4)(&var_24h, &var_24h);\n            puVar3 = &var_24h;\n        }\n        else {\n            (**0x4591c4)(&var_2ch, &var_2ch);\n            puVar3 = &var_2ch;\n        }\n        (**0x4591c8)(puVar3, &var_10h);\n        if ((*(arg_8h + 0xc) < 3) || (iVar2 = fcn.00418733(),  iVar2 != 1)) {\n            fcn.0041a000(1);\n            fcn.0041a132(1);\n            fcn.00449872(&var_4ch, 0x45fdfc, var_10h);\n            fcn.00418c7e(&var_4ch);\n            fcn.0041a132(1);\n            fcn.00449872(&var_4ch, 0x45fdf0, var_10h._2_2_);\n            fcn.00418c7e(&var_4ch);\n            fcn.0041a132(1);\n            fcn.00449872(&var_4ch, 0x45fdf0, var_ah);\n            fcn.00418c7e(&var_4ch);\n            fcn.0041a132(1);\n            fcn.00449872(&var_4ch, 0x45fdf0, var_ah._2_2_);\n            fcn.00418c7e(&var_4ch);\n            fcn.0041a132(1);\n            fcn.00449872(&var_4ch, 0x45fdf0, var_6h);\n            fcn.00418c7e(&var_4ch);\n            fcn.0041a132(1);\n            fcn.00449872(&var_4ch, 0x45fdf0, var_4h);\n        }\n        else {\n            fcn.00449872(&var_4ch, 0x45d4d4, var_10h);\n        }\n        fcn.00418c7e(&var_4ch);\n    }\n    return 0;\n}\n",
        "token_count": 948
    },
    "00423154": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00423154(uint32_t arg_8h, uint arg_ch)\n\n{\n    code *pcVar1;\n    char cVar2;\n    int16_t *piVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint var_c68h;\n    uint var_a5ch;\n    uint var_850h;\n    uint var_644h;\n    uint var_438h;\n    uint var_230h;\n    uint var_22ch;\n    uint var_20h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    arg_8h = *(arg_8h + 0xc);\n    piVar3 = fcn.00418641();\n    var_4h = 0;\n    if (((2 < arg_8h) && (iVar4 = fcn.00418733(),  -1 < iVar4)) && (iVar4 = fcn.00418733(),  iVar4 < 3)) {\n        var_4h = fcn.00418733();\n    }\n    if (arg_8h < 4) {\ncode_r0x004231fe:\n        arg_8h = arg_8h & 0xffffff00;\n    }\n    else {\n        iVar4 = fcn.00418733();\n        arg_8h = CONCAT31(arg_8h >> 8, 1);\n        if (iVar4 != 1) goto code_r0x004231fe;\n    }\n    if (*piVar3 == 0) {\n        (**0x459190)(&var_20h);\n    }\n    else {\n        cVar2 = fcn.00416868(1, 0);\n        if (cVar2 == '\\0') goto code_r0x00423324;\n    }\n    (**0x4591cc)(&var_20h, &var_ch);\n    (**0x4591d0)(&var_ch, &var_ch);\n    uVar5 = fcn.00418641(0x104);\n    fcn.00449c77(&var_438h, uVar5);\n    var_230h._0_2_ = 0;\n    fcn.00414d77();\n    fcn.00415029(&var_438h);\n    fcn.0044a246(&var_438h, &var_644h, &var_850h, &var_22ch, &var_a5ch);\n    fcn.004495ce(&var_644h, &var_850h);\n    fcn.004495ce(&var_22ch, &var_a5ch);\n    (**0x459314)(0x104, &var_c68h);\n    pcVar1 = *0x459310;\n    iVar4 = (**0x459310)(&var_644h);\n    if (iVar4 == 0) {\ncode_r0x00423324:\n        fcn.00418bb9(0);\n        return 0;\n    }\n    cVar2 = fcn.00415010(&var_22ch);\n    if (cVar2 != '\\0') {\n        cVar2 = fcn.00414d8d(&var_22ch, &var_ch, var_4h);\n        if (cVar2 == '\\0') goto code_r0x00423324;\n        if (arg_8h == '\\0') {\n            return 0;\n        }\n        (*pcVar1)(&var_22ch);\n        fcn.004495f8(&var_22ch, 0x45fde8);\n    }\n    cVar2 = fcn.00423388(&var_22ch, &var_ch, var_4h, arg_8h);\n    if (cVar2 == '\\0') {\n        fcn.00418bb9(0);\n    }\n    (*pcVar1)(&var_c68h);\n    return 0;\n}\n",
        "token_count": 867
    },
    "00423388": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuchar __cdecl fcn.00423388(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    code *pcVar1;\n    char cVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uchar uVar5;\n    uint lpFindFileData;\n    uint var_224h;\n    \n    pcVar1 = _sym.imp.KERNEL32.DLL_FindFirstFileW;\n    iVar3 = (*_sym.imp.KERNEL32.DLL_FindFirstFileW)(arg_8h, &lpFindFileData);\n    if (iVar3 != -1) {\n        do {\n            iVar4 = fcn.00449703(&var_224h, 0x45d104);\n            if (((iVar4 != 0) && (iVar4 = fcn.00449703(&var_224h, 0x45fde0),  iVar4 != 0)) &&\n               (cVar2 = fcn.00414d8d(&var_224h, arg_ch, arg_10h),  cVar2 == '\\0')) goto code_r0x0042341c;\n            iVar4 = (**0x459158)(iVar3, &lpFindFileData);\n        } while (iVar4 != 0);\n    }\n    (*_sym.imp.KERNEL32.DLL_FindClose)(iVar3);\n    if (arg_14h == '\\0') {\n        return 1;\n    }\n    iVar3 = (*pcVar1)(0x45fde8, &lpFindFileData);\n    pcVar1 = *0x459310;\n    if (iVar3 != -1) {\n        do {\n            if ((((lpFindFileData & 0x10) != 0) && (iVar4 = fcn.00449703(&var_224h, 0x45d104),  iVar4 != 0)) &&\n               (iVar4 = fcn.00449703(&var_224h, 0x45fde0),  iVar4 != 0)) {\n                (*pcVar1)(&var_224h);\n                cVar2 = fcn.00423388(arg_8h, arg_ch, arg_10h, arg_14h);\n                if (cVar2 == '\\0') goto code_r0x0042341c;\n                (*pcVar1)(0x45fde0);\n            }\n            iVar4 = (**0x459158)(iVar3, &lpFindFileData);\n        } while (iVar4 != 0);\n    }\n    uVar5 = 1;\ncode_r0x004234b0:\n    (*_sym.imp.KERNEL32.DLL_FindClose)(iVar3);\n    return uVar5;\ncode_r0x0042341c:\n    uVar5 = 0;\n    goto code_r0x004234b0;\n}\n",
        "token_count": 631
    },
    "004234c0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004234c0(int32_t arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint var_250h;\n    uint var_234h;\n    uint var_230h;\n    \n    uVar1 = fcn.00418641(&var_250h);\n    iVar2 = (*_sym.imp.KERNEL32.DLL_FindFirstFileW)(uVar1);\n    if (iVar2 == -1) {\n        fcn.00418bb9(0);\n        fcn.00421898(0);\n    }\n    else {\n        (*_sym.imp.KERNEL32.DLL_FindClose)(iVar2);\n        fcn.00418c2c(var_230h, var_234h);\n    }\n    return 0;\n}\n",
        "token_count": 177
    },
    "0042356d": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0042356d(uint arg_8h, uint32_t arg_ch, uint arg_10h, uint32_t arg_14h, int32_t arg_18h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint32_t unaff_ESI;\n    uint uVar4;\n    uint unaff_EDI;\n    uint *puVar5;\n    ulong uVar6;\n    ushort uStackY198304;\n    uint auStackY198302 [32767];\n    uchar auStackY67232 [65534];\n    uint var_69eh;\n    uint var_494h;\n    uint var_288h;\n    uint var_80h;\n    uint var_7ch;\n    uint var_78h;\n    uint var_70h;\n    uint *var_60h;\n    uint var_5ch;\n    uint *var_50h;\n    uchar *var_4ch;\n    uint32_t var_48h;\n    uint uStackY68;\n    uint *var_30h;\n    uint *puStack48;\n    uint *var_24h;\n    uint *var_18h;\n    int32_t iStack24;\n    uint uStack20;\n    uint var_ch;\n    uint32_t var_8h;\n    \n    fcn.0044c510();\n    uStackY198304 = 0;\n    puVar5 = &stack0xfffcf962;\n    for (iVar3 = 0x7fff; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar5 = 0;\n        puVar5 = puVar5 + 1;\n    }\n    *puVar5 = 0;\n    uStack20 = 0x4235a1;\n    var_ch = unaff_EDI;\n    var_8h = unaff_ESI;\n    fcn.00416d61();\n    uStack20 = 0x4235a9;\n    fcn.00416d61();\n    uStack20 = 0x4235b1;\n    fcn.00416d61();\n    uStack20 = 0x4235b9;\n    fcn.00416d61();\n    uStack20 = 0x45bfe0;\n    iStack24 = 0x4235c6;\n    fcn.00418c7e();\n    iStack24 = 0x7fff;\n    var_18h = 0x4235e0;\n    var_18h = fcn.00418641();\n    fcn.00449c77();\n    var_69eh._0_2_ = 0;\n    iStack24 = 0x104;\n    var_18h = 0x423613;\n    var_18h = fcn.00418641();\n    fcn.00449c77();\n    var_80h._0_2_ = 0;\n    iStack24 = 0x104;\n    var_18h = 0x42363f;\n    var_18h = fcn.00418641();\n    fcn.00449c77();\n    var_494h._0_2_ = 0;\n    var_24h = &fcn.0042356d::var_69eh + 2;\n    iStack24 = fcn.0044b607(var_24h, 0x45c054);\n    while (iStack24 != 0) {\n        var_18h = &fcn.0042356d::var_18h;\n        fcn.00416e83();\n        uVar1 = fcn.00417258(0x45fddc);\n        var_24h = 0x423694;\n        uVar2 = fcn.00417258(0x45fdd8);\n        if (((uVar1 == 0xffffffff) || (uVar2 == 0xffffffff)) || (uVar2 < uVar1)) {\n            var_24h = 0xffffffff;\n            puStack48 = 0x423766;\n            fcn.0041fdea(0x90, 0xffffffff);\n            uVar4 = 1;\n            goto code_r0x0042395c;\n        }\n        var_24h = &fcn.0042356d::var_18h;\n        fcn.00416ebe(var_24h);\n        puStack48 = 0x4236cd;\n        fcn.00417064();\n        puStack48 = &fcn.0042356d::var_18h;\n        var_30h = 0x4236e2;\n        fcn.00417113();\n        var_30h = &fcn.0042356d::var_30h;\n        fcn.00416ebe(var_30h);\n        uStack20 = 0x45c054;\n        fcn.00417064();\n        uStackY68 = 0x423707;\n        iStack24 = fcn.0044b607(0, 0x45c054);\n    }\n    iStack24 = 0x45c054;\n    var_18h = 0x42371f;\n    fcn.00417064();\n    if (1 < var_8h) {\n        do {\n            var_18h = 0x42372f;\n            uVar6 = fcn.00416e60();\n            iVar3 = uVar6 >> 0x20;\n            if (*uVar6 == 0x7c) {\n                var_18h = 0x42373d;\n                uVar6 = fcn.00416e60();\n                iVar3 = uVar6 >> 0x20;\n                *uVar6 = 0;\n            }\n        } while (iVar3 + 1U < var_8h);\n    }\n    if (arg_14h < 5) {\n        uStackY198304 = 0;\n    }\n    else {\n        var_18h = 0x423779;\n        var_18h = fcn.00418641();\n        fcn.004495f8();\n    }\n    var_18h = 0x4c;\n    var_24h = 0x4237a1;\n    fcn.00449b00();\n    var_78h = 0;\n    arg_ch = 0;\n    var_70h = var_ch;\n    var_4ch = &stack0xfffef960;\n    var_60h = &stack0xfffcf960;\n    var_50h = &fcn.0042356d::var_288h;\n    var_7ch = 0x4c;\n    var_5ch = 0xffff;\n    if (arg_14h < 4) {\ncode_r0x004238c4:\n        var_48h = 0x80004;\n    }\n    else {\n        var_18h = 0x4237f9;\n        iVar3 = fcn.00418733();\n        if (0x1f < iVar3) goto code_r0x004238c4;\n        var_18h = 0x423817;\n        iVar3 = fcn.00418733();\n        if (iVar3 < 0) goto code_r0x004238c4;\n        arg_ch = 0x80004;\n        var_18h = 0x42383b;\n        uVar1 = fcn.00418733();\n        if ((uVar1 & 0x10) != 0) {\n            arg_ch = 0x80006;\n        }\n        var_18h = 0x42385b;\n        uVar1 = fcn.00418733();\n        if ((uVar1 & 8) != 0) {\n            arg_ch = arg_ch | 0x2000;\n        }\n        var_18h = 0x423878;\n        uVar1 = fcn.00418733();\n        if ((uVar1 & 4) != 0) {\n            arg_ch = arg_ch | 0x200;\n        }\n        var_18h = 0x423895;\n        uVar1 = fcn.00418733();\n        if ((uVar1 & 2) != 0) {\n            arg_ch = arg_ch | 0x800;\n        }\n        var_18h = 0x4238b4;\n        uVar1 = fcn.00418733();\n        if ((uVar1 & 1) != 0) {\n            arg_ch = arg_ch | 0x1000;\n        }\n        var_48h = arg_ch;\n    }\n    var_18h = &fcn.0042356d::var_7ch;\n    if (arg_18h == 1) {\n        iVar3 = (*_sym.imp.comdlg32.dll_GetOpenFileNameW)();\n        if (iVar3 == 0) {\ncode_r0x0042394d:\n            puStack48 = 0x42395a;\n            fcn.00421898();\n            goto code_r0x0042395a;\n        }\n        if ((arg_ch & 0x200) != 0) {\n            puStack48 = 0x4238ed;\n            iVar3 = fcn.0044985c();\n            puStack48 = &fcn.0042356d::var_24h;\n            var_30h = 0x4238fc;\n            fcn.00416e83();\n            while (var_60h = var_60h + iVar3 * 2 + 2,  *var_60h != 0) {\n                var_30h = var_60h;\n                iVar3 = fcn.0044985c();\n                var_30h = 0x45c054;\n                fcn.00417064();\n                puStack48 = var_60h;\n                fcn.00417064();\n            }\n            var_30h = var_24h;\n        }\n    }\n    else {\n        iVar3 = (*_sym.imp.comdlg32.dll_GetSaveFileNameW)();\n        if (iVar3 == 0) goto code_r0x0042394d;\n    }\n    puStack48 = 0x42393c;\n    fcn.00418c7e();\ncode_r0x0042395a:\n    uVar4 = 0;\ncode_r0x0042395c:\n    puStack48 = var_18h;\n    var_30h = 0x423964;\n    fcn.0044951c();\n    var_30h = var_24h;\n    fcn.0044951c();\n    fcn.0044951c();\n    fcn.0044951c();\n    return uVar4;\n}\n",
        "token_count": 2416
    },
    "00423e18": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00423e18(int32_t arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint var_804h;\n    uint var_4h;\n    \n    var_4h = 0x400;\n    uVar1 = fcn.00418641(&var_804h, &var_4h);\n    iVar2 = sub.MPR.dll_WNetGetConnectionW(uVar1);\n    if (iVar2 == 0) {\n        fcn.00418c7e(&var_804h);\n    }\n    else {\n        fcn.00418c7e(0x45bfe0);\n        fcn.00421898(0);\n    }\n    return 0;\n}\n",
        "token_count": 168
    },
    "00423e8a": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00423e8a(uint *arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint *puVar5;\n    int32_t in_stack_fffffec4;\n    int32_t iVar6;\n    uint var_f8h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    int32_t var_10h;\n    uint var_ch;\n    \n    fcn.00416d61();\n    var_10h = 0;\n    fcn.00418c7e(0x45bfe0);\n    uVar2 = fcn.00418641();\n    fcn.00416e83(&fcn.00423e8a::var_1ch, uVar2);\n    (**0x45942c)(var_1ch, var_18h);\n    fcn.00416d81(0x45fdc8);\n    cVar1 = fcn.00416f96();\n    fcn.0044951c(var_ch);\n    if (cVar1 == '\\0') {\n        fcn.00416d81(0x45fdbc);\n        cVar1 = fcn.00416f96();\n        fcn.0044951c(var_ch);\n        if (cVar1 != '\\0') goto code_r0x00424015;\n        fcn.00416d81(0x45fda8);\n        cVar1 = fcn.00416f96();\n        fcn.0044951c(var_ch);\n        if (cVar1 != '\\0') goto code_r0x00424015;\n        fcn.00416d81(0x45fd9c);\n        cVar1 = fcn.00416f96();\n        fcn.0044951c(var_ch);\n        if (cVar1 != '\\0') goto code_r0x00424015;\n        fcn.00416d81(0x45fd8c);\n        cVar1 = fcn.00416f96();\n        fcn.0044951c(var_ch);\n        if (cVar1 != '\\0') goto code_r0x00424015;\n        fcn.00416d81(0x45fd7c);\n        cVar1 = fcn.00416f96();\n        in_stack_fffffec4 = 0x423fdd;\n        fcn.0044951c(var_ch);\n        if (cVar1 != '\\0') goto code_r0x00424015;\n        fcn.00416d81(0x45fd6c);\n        cVar1 = fcn.00416f96();\n        fcn.0044951c(var_ch);\n        if (cVar1 != '\\0') {\n            in_stack_fffffec4 = 0;\n            goto code_r0x00424015;\n        }\n    }\n    else {\ncode_r0x00424015:\n        iVar4 = 0x61;\n        puVar5 = &fcn.00423e8a::var_f8h;\n        do {\n            iVar6 = iVar4;\n            fcn.00416e97(iVar4);\n            fcn.00417064(0x45fd64);\n            iVar3 = (**0x459384)(var_1ch);\n            if ((iVar3 == in_stack_fffffec4) || ((in_stack_fffffec4 == 99 && (iVar3 != 1)))) {\n                fcn.004174f1(iVar6, 0x45c9ac);\n                fcn.004495f8(puVar5, var_1ch);\n                var_10h = var_10h + 1;\n                puVar5 = puVar5 + 2;\n            }\n            iVar4 = iVar4 + 1;\n        } while (iVar4 < 0x7b);\n        if (0 < var_10h) {\n            iVar4 = 1;\n            fcn.0041a000(1);\n            fcn.0041a132(1);\n            fcn.00418bb9(var_10h);\n            if (0 < var_10h) {\n                arg_8h = &fcn.00423e8a::var_f8h;\n                do {\n                    fcn.0041a132(1);\n                    fcn.00418c7e(arg_8h);\n                    arg_8h = arg_8h + 2;\n                    iVar4 = iVar4 + 1;\n                } while (iVar4 <= var_10h);\n            }\n            goto code_r0x004240de;\n        }\n    }\n    fcn.00421898(0);\ncode_r0x004240de:\n    fcn.0044951c(var_1ch);\n    return 0;\n}\n",
        "token_count": 1057
    },
    "004240f0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004240f0(int32_t arg_8h, uint arg_ch)\n\n{\n    bool bVar1;\n    bool bVar2;\n    code *pcVar3;\n    char cVar4;\n    uint uVar5;\n    int32_t iVar6;\n    uint var_34h;\n    uint var_28h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_10h;\n    uint var_4h;\n    \n    var_4h = 0;\n    uVar5 = fcn.00418641();\n    fcn.00416d81(uVar5);\n    uVar5 = fcn.00418641();\n    fcn.00416d81(uVar5);\n    (**0x45942c)(var_1ch, var_18h);\n    fcn.00416d81(0x45fd58);\n    cVar4 = fcn.00416f96();\n    fcn.0044951c(var_10h);\n    if (cVar4 != '\\0') {\n        fcn.00416e83(&var_1ch, 0x45fd48);\n    }\n    fcn.00416d81(0x45fd3c);\n    bVar1 = false;\n    cVar4 = fcn.00416f96();\n    if (cVar4 == '\\0') {\n        fcn.00416d81(0x45fd48);\n        bVar1 = true;\n        cVar4 = fcn.00416f96();\n        if (cVar4 != '\\0') goto code_r0x004241b6;\n    }\n    else {\ncode_r0x004241b6:\n        iVar6 = (**0x459384)(var_28h);\n        bVar2 = true;\n        if (iVar6 == 5) goto code_r0x004241cc;\n    }\n    bVar2 = false;\ncode_r0x004241cc:\n    if (bVar1) {\n        fcn.0044951c(var_10h);\n    }\n    fcn.0044951c(var_34h);\n    if (bVar2) {\n        fcn.00416d81(0x45d0dc);\n        fcn.00416ebe(&var_28h);\n        fcn.00417064(0x45fd04);\n        pcVar3 = _sym.imp.WINMM.dll_mciSendStringW;\n        iVar6 = (*_sym.imp.WINMM.dll_mciSendStringW)(var_10h, 0, 0, 0);\n        if (iVar6 == 0) {\n            fcn.00416e83(&var_10h, 0x45fce8);\n            fcn.00416ebe(&var_1ch);\n            fcn.00417064(0x45fcdc);\n            iVar6 = (*pcVar3)(var_10h, 0, 0, 0);\n            if (iVar6 != 0) {\n                fcn.00418bb9(0);\n            }\n            fcn.00416e83(&var_10h, 0x45fcc0);\n            (*pcVar3)(var_10h, 0, 0, 0);\n        }\n        else {\n            fcn.00418bb9(0);\n        }\n        fcn.0044951c(var_10h);\n    }\n    else {\n        fcn.00418bb9(0);\n    }\n    fcn.0044951c(var_1ch);\n    fcn.0044951c(var_28h);\n    return 0;\n}\n",
        "token_count": 793
    },
    "004242bd": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004242bd(int32_t arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    int16_t *piVar2;\n    int32_t iVar3;\n    uint var_ch;\n    uint var_8h;\n    \n    (**0x4591d8)(1);\n    uVar1 = fcn.00418641();\n    fcn.00416d81(uVar1);\n    piVar2 = fcn.00416e60();\n    if (*piVar2 != 0x5c) {\n        fcn.00417064(0x45c9ac);\n    }\n    iVar3 = (**0x459384)(var_ch);\n    if (iVar3 == 1) {\n        fcn.00418c7e(0x45bfe0);\n        fcn.00421898(0);\n    }\n    else {\n        if (iVar3 == 2) {\n            uVar1 = 0x45fcac;\n        }\n        else if (iVar3 == 3) {\n            uVar1 = 0x45fca0;\n        }\n        else if (iVar3 == 4) {\n            uVar1 = 0x45fc90;\n        }\n        else if (iVar3 == 5) {\n            uVar1 = 0x45fc84;\n        }\n        else if (iVar3 == 6) {\n            uVar1 = 0x45fc74;\n        }\n        else {\n            uVar1 = 0x45fc64;\n        }\n        fcn.00418c7e(uVar1);\n    }\n    fcn.0044951c(var_ch);\n    return 0;\n}\n",
        "token_count": 366
    },
    "004245bb": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004245bb(int32_t arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    int16_t *piVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint var_20h;\n    uint var_1ch;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    (**0x4591d8)(1);\n    uVar1 = fcn.00418641();\n    fcn.00416d81(uVar1);\n    piVar2 = fcn.00416e60();\n    if (*piVar2 != 0x5c) {\n        fcn.00417064(0x45c9ac);\n    }\n    iVar4 = 0;\n    iVar3 = (**0x4591dc)(var_20h, &var_14h, &var_10h, &var_ch, &var_8h);\n    if (iVar3 == 0) {\n        iVar4 = (*_sym.imp.KERNEL32.DLL_GetLastError)();\n    }\n    if (iVar4 == 0) {\n        uVar1 = 0x45fc58;\ncode_r0x0042467a:\n        fcn.00418c7e(uVar1);\n        if (iVar4 < 1) goto code_r0x00424690;\n    }\n    else {\n        if (iVar4 == 3) {\n            uVar1 = 0x45fc48;\n        }\n        else if (iVar4 == 0x13) {\n            uVar1 = 0x45fc20;\n        }\n        else {\n            if (iVar4 != 0x15) {\n                uVar1 = 0x45fc10;\n                goto code_r0x0042467a;\n            }\n            uVar1 = 0x45fc34;\n        }\n        fcn.00418c7e(uVar1);\n    }\n    fcn.00421898(0);\ncode_r0x00424690:\n    fcn.0044951c(var_20h);\n    return 0;\n}\n",
        "token_count": 476
    },
    "004246a1": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004246a1(int32_t arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    int16_t *piVar2;\n    int32_t iVar3;\n    uint var_414h;\n    uint var_214h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    \n    fcn.00418c7e(0x45bfe0);\n    (**0x4591d8)(1);\n    uVar1 = fcn.00418641();\n    fcn.00416d81(uVar1);\n    piVar2 = fcn.00416e60();\n    if (*piVar2 != 0x5c) {\n        fcn.00417064(0x45c9ac);\n    }\n    iVar3 = (**0x4591e0)(var_ch, &var_414h, 0xff, &var_14h, &var_10h, &arg_ch, &var_214h, 0xff);\n    if (iVar3 == 0) {\n        fcn.00421898(0);\n    }\n    else {\n        fcn.00418c7e(&var_214h);\n    }\n    fcn.0044951c(var_ch);\n    return 0;\n}\n",
        "token_count": 293
    },
    "0042475f": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0042475f(int32_t arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    int16_t *piVar2;\n    int32_t iVar3;\n    uint var_418h;\n    uint var_218h;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    \n    (**0x4591d8)(1);\n    uVar1 = fcn.00418641();\n    fcn.00416d81(uVar1);\n    piVar2 = fcn.00416e60();\n    if (*piVar2 != 0x5c) {\n        fcn.00417064(0x45c9ac);\n    }\n    iVar3 = (**0x4591e0)(var_ch, &var_218h, 0xff, &var_10h, &var_14h, &var_18h, &var_418h, 0xff);\n    if (iVar3 == 0) {\n        fcn.00418c7e(0x45bfe0);\n        fcn.00421898(0);\n    }\n    else {\n        fcn.00449872(&var_218h, 0x45fc08, var_10h);\n        fcn.00418c7e(&var_218h);\n    }\n    fcn.0044951c(var_ch);\n    return 0;\n}\n",
        "token_count": 327
    },
    "00424837": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00424837(int32_t arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    int16_t *piVar2;\n    int32_t iVar3;\n    uint var_418h;\n    uint var_218h;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    \n    (**0x4591d8)(1);\n    uVar1 = fcn.00418641();\n    fcn.00416d81(uVar1);\n    piVar2 = fcn.00416e60();\n    if (*piVar2 != 0x5c) {\n        fcn.00417064(0x45c9ac);\n    }\n    iVar3 = (**0x4591e0)(var_ch, &var_218h, 0xff, &var_10h, &var_14h, &var_18h, &var_418h, 0xff);\n    if (iVar3 == 0) {\n        fcn.00418c7e(0x45bfe0);\n        fcn.00421898(0);\n    }\n    else {\n        fcn.00418c7e(&var_218h);\n    }\n    fcn.0044951c(var_ch);\n    return 0;\n}\n",
        "token_count": 301
    },
    "004248f5": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004248f5(int32_t arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    int16_t *piVar2;\n    int32_t iVar3;\n    uint var_ch;\n    uint var_8h;\n    \n    (**0x4591d8)(1);\n    uVar1 = fcn.00418641();\n    fcn.00416d81(uVar1);\n    piVar2 = fcn.00416e60();\n    if (*piVar2 != 0x5c) {\n        fcn.00417064(0x45c9ac);\n    }\n    uVar1 = fcn.00418641();\n    iVar3 = (*_sym.imp.KERNEL32.DLL_SetVolumeLabelW)(var_ch, uVar1);\n    if (iVar3 == 0) {\n        fcn.00418bb9(0);\n    }\n    fcn.0044951c(var_ch);\n    return 0;\n}\n",
        "token_count": 215
    },
    "00424984": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00424a2f)\n// WARNING: Removing unreachable block (ram,0x00424a3b)\n// WARNING: Removing unreachable block (ram,0x00424a36)\n// WARNING: Removing unreachable block (ram,0x00424a40)\n// WARNING: Removing unreachable block (ram,0x00424a4a)\n// WARNING: Removing unreachable block (ram,0x00424a45)\n// WARNING: Removing unreachable block (ram,0x00424a50)\n// WARNING: Removing unreachable block (ram,0x00424a7e)\n// WARNING: Removing unreachable block (ram,0x00424a8b)\n// WARNING: Removing unreachable block (ram,0x00424a91)\n// WARNING: Removing unreachable block (ram,0x00424a9c)\n// WARNING: Removing unreachable block (ram,0x00424a97)\n// WARNING: Removing unreachable block (ram,0x00424aa2)\n// WARNING: Removing unreachable block (ram,0x00424aba)\n// WARNING: Removing unreachable block (ram,0x00424ab5)\n// WARNING: Removing unreachable block (ram,0x00424abf)\n// WARNING: Removing unreachable block (ram,0x00424ac9)\n// WARNING: Removing unreachable block (ram,0x00424ac4)\n// WARNING: Removing unreachable block (ram,0x00424acf)\n// WARNING: Removing unreachable block (ram,0x00424afb)\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00424984(int32_t arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint lpFilePart;\n    uint32_t in_ECX;\n    uint var_10h;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = in_ECX & 0xffffff00;\n    if ((2 < *(arg_8h + 0xc)) && (iVar2 = fcn.00418733(),  iVar2 == 1)) {\n        var_4h = CONCAT31(in_ECX >> 8, 1);\n    }\n    uVar3 = fcn.00418641();\n    cVar1 = fcn.00415010(uVar3);\n    if (cVar1 == '\\0') {\n        fcn.00426897();\n        fcn.00418bb9(0);\n    }\n    else {\n        uVar3 = fcn.00418641();\n        lpFilePart = fcn.00418641();\n        uVar3 = fcn.00424b0d(lpFilePart, uVar3, var_4h);\n        fcn.00418bb9(uVar3);\n    }\n    return 0;\n}\n",
        "token_count": 615
    },
    "00424c88": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00424c88(int32_t arg_8h, uint arg_ch)\n\n{\n    uint32_t uVar1;\n    char cVar2;\n    uint8_t uVar3;\n    uint uVar4;\n    int32_t iVar5;\n    uint *arg_ch_00;\n    char *arg_10h;\n    char *arg_14h;\n    uint var_234h;\n    uint var_28h;\n    int32_t var_24h;\n    uint var_1ch;\n    int32_t *var_18h;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    char var_6h;\n    char var_5h;\n    int32_t *var_4h;\n    \n    var_1ch = 0;\n    var_ch = *(arg_8h + 0xc);\n    uVar4 = fcn.00418641();\n    fcn.00416d81(uVar4);\n    iVar5 = fcn.004172f4(0x45fbec, 2, 1, 0xffffffff);\n    if (iVar5 == var_24h) {\n        fcn.00417064(0x45fbec);\n    }\n    (*_sym.imp.ole32.dll_CoInitialize)(0);\n    iVar5 = (*_sym.imp.ole32.dll_CoCreateInstance)(0x45a7a0, 0, 1, 0x45a790, &var_4h);\n    if (iVar5 < 0) {\n        fcn.00418bb9(0);\n    }\n    else {\n        iVar5 = *var_4h;\n        uVar4 = fcn.00418641();\n        (**(iVar5 + 0x50))(var_4h, uVar4);\n        uVar1 = var_ch;\n        if (2 < var_ch) {\n            arg_8h = *var_4h;\n            uVar4 = fcn.00418641();\n            (**(arg_8h + 0x24))(var_4h, uVar4);\n        }\n        if (3 < uVar1) {\n            arg_8h = *var_4h;\n            uVar4 = fcn.00418641();\n            (**(arg_8h + 0x2c))(var_4h, uVar4);\n        }\n        if (4 < uVar1) {\n            arg_8h = *var_4h;\n            uVar4 = fcn.00418641();\n            (**(arg_8h + 0x1c))(var_4h, uVar4);\n        }\n        if (5 < uVar1) {\n            arg_8h = *var_4h;\n            uVar4 = fcn.00418641(0);\n            (**(arg_8h + 0x44))(var_4h, uVar4);\n        }\n        if ((6 < uVar1) && (cVar2 = fcn.00419a44(),  cVar2 != '\\0')) {\n            arg_14h = &var_5h;\n            arg_10h = &var_6h;\n            arg_ch_00 = &var_10h;\n            fcn.00418641();\n            cVar2 = fcn.004120ec(var_10h, arg_ch_00, arg_10h, arg_14h);\n            if (cVar2 == '\\x01') {\n                if (var_5h == '\\0') {\n                    uVar3 = var_1ch;\n                }\n                else {\n                    uVar3 = 4;\n                }\n                if (arg_8h._3_1_ != '\\0') {\n                    uVar3 = uVar3 | 2;\n                }\n                if (var_6h != '\\0') {\n                    uVar3 = uVar3 | 1;\n                }\n                if ((arg_8h._3_1_ == '\\0') && (var_5h == '\\0')) {\n                    uVar3 = uVar3 | 6;\n                }\n                (**(*var_4h + 0x34))(var_4h, uVar3 << 8 | var_10h);\n            }\n        }\n        if (7 < var_ch) {\n            iVar5 = *var_4h;\n            uVar4 = fcn.00418733();\n            uVar4 = fcn.00418641(uVar4);\n            (**(iVar5 + 0x44))(var_4h, uVar4);\n        }\n        if (8 < var_ch) {\n            iVar5 = *var_4h;\n            uVar4 = fcn.00418733();\n            (**(iVar5 + 0x3c))(var_4h, uVar4);\n        }\n        iVar5 = (***var_4h)(var_4h, 0x45a8c0, &var_18h);\n        if (-1 < iVar5) {\n            fcn.00449c77(&var_234h, var_28h, 0x104);\n            iVar5 = (**(*var_18h + 0x18))(var_18h, &var_234h, 1);\n            if (iVar5 < 0) {\n                fcn.00418bb9(0);\n            }\n            (**(*var_18h + 8))(var_18h);\n        }\n        (**(*var_4h + 8))(var_4h);\n    }\n    (*_sym.imp.ole32.dll_CoUninitialize)();\n    fcn.0044951c(var_28h);\n    return 0;\n}\n",
        "token_count": 1233
    },
    "00424f6c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00424f6c(int32_t *arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint var_c64h;\n    uint var_a58h;\n    uint var_84ch;\n    uint var_640h;\n    uint var_434h;\n    uint var_228h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    uint var_8h;\n    int32_t *var_4h;\n    \n    uVar2 = fcn.00418641();\n    fcn.00416d81(uVar2);\n    iVar3 = fcn.004172f4(0x45fbec, 2, 1, 0xffffffff);\n    if (iVar3 == var_10h) {\n        fcn.00417064(0x45fbec);\n    }\n    fcn.00418c7e(0x45bfe0);\n    fcn.00421898(0);\n    cVar1 = fcn.00414fbc(var_14h);\n    if (cVar1 != '\\0') {\n        (*_sym.imp.ole32.dll_CoInitialize)(0);\n        iVar3 = (*_sym.imp.ole32.dll_CoCreateInstance)(0x45a7a0, 0, 1, 0x45a790, &arg_8h);\n        if (-1 < iVar3) {\n            iVar3 = (***arg_8h)(arg_8h, 0x45a8c0, &var_4h);\n            if (-1 < iVar3) {\n                fcn.00449c77(&var_228h, var_14h, 0x104);\n                iVar3 = (**(*var_4h + 0x14))(var_4h, &var_228h, 0);\n                if (-1 < iVar3) {\n                    fcn.0041a000(1);\n                    (**(*arg_8h + 0xc))(arg_8h, &var_640h, 0x104, 0, 2);\n                    fcn.0041a132(1);\n                    fcn.00418c7e(&var_640h);\n                    (**(*arg_8h + 0x20))(arg_8h, &var_a58h, 0x104);\n                    fcn.0041a132(1);\n                    fcn.00418c7e(&var_a58h);\n                    (**(*arg_8h + 0x28))(arg_8h, &var_434h, 0x104);\n                    fcn.0041a132(1);\n                    fcn.00418c7e(&var_434h);\n                    (**(*arg_8h + 0x18))(arg_8h, &var_84ch, 0x104);\n                    fcn.0041a132(1);\n                    fcn.00418c7e(&var_84ch);\n                    (**(*arg_8h + 0x40))(arg_8h, &var_c64h, 0x104, &var_18h);\n                    fcn.0041a132(1);\n                    fcn.00418c7e(&var_c64h);\n                    fcn.0041a132(1);\n                    fcn.00418bb9(var_18h);\n                    (**(*arg_8h + 0x38))(arg_8h, &var_1ch);\n                    fcn.0041a132(1);\n                    fcn.00418bb9(var_1ch);\n                    fcn.00421898(0);\n                }\n                (**(*var_4h + 8))(var_4h);\n            }\n            (**(*arg_8h + 8))(arg_8h);\n        }\n        (*_sym.imp.ole32.dll_CoUninitialize)();\n    }\n    fcn.0044951c(var_14h);\n    return 0;\n}\n",
        "token_count": 893
    },
    "004251b3": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.004251b3(uint32_t arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t in_ECX;\n    uint *arg_ch_00;\n    uint *arg_10h;\n    uint *arg_14h;\n    uint arg_10h_00;\n    uint *puVar4;\n    uint uVar5;\n    uint var_c54h;\n    uint var_a48h;\n    uint var_83ch;\n    uint var_630h;\n    int16_t iStack1066;\n    uint var_424h;\n    uint var_218h;\n    int32_t var_ch;\n    \n    if (*(arg_8h + 0xc) == 3) {\n        iVar2 = fcn.00418733();\n        arg_8h = CONCAT31(arg_8h._1_3_, 1);\n        if (iVar2 == 0) goto code_r0x004251dd;\n    }\n    else {\ncode_r0x004251dd:\n        arg_8h = arg_8h & 0xffffff00;\n    }\n    if (*(in_ECX + 600) == 1) {\n        uVar3 = fcn.00418641();\n        fcn.004495f8(&var_218h, uVar3);\n        iVar2 = fcn.0044b5b5(&var_218h, 0x5c);\n        if (iVar2 == 0) {\n            fcn.004495f8(&var_218h, *(in_ECX + 0x274));\n            fcn.004495ce(&var_218h, 0x45c9ac);\n            uVar3 = fcn.00418641();\n            fcn.004495ce(&var_218h, uVar3);\n        }\n        uVar3 = fcn.00418641();\n        fcn.004495f8(&var_424h, uVar3);\n        cVar1 = fcn.00415010(&var_424h);\n        if ((cVar1 == '\\0') || (iVar2 = fcn.0044985c(&var_424h),  (&iStack1066)[iVar2] == 0x5c)) {\n            uVar5 = 0;\n            uVar3 = fcn.00418641();\n            cVar1 = fcn.004152c8(&var_218h, uVar3, arg_8h, uVar5);\n            if (cVar1 != '\\0') {\n                return 0;\n            }\n        }\ncode_r0x0042530a:\n        fcn.00418bb9(0);\n        return 0;\n    }\n    iVar2 = fcn.004430a9(*(in_ECX + 0x268), 0x45bfe0);\n    if (iVar2 != 0) goto code_r0x0042530a;\n    puVar4 = &var_630h;\n    arg_14h = &var_218h;\n    arg_10h = &var_c54h;\n    arg_ch_00 = &var_a48h;\n    uVar3 = fcn.00418641();\n    fcn.0044a246(uVar3, arg_ch_00, arg_10h, arg_14h, puVar4);\n    if (var_218h == 0) {\n        fcn.004495f8(&var_218h, 0x45fbe8);\n        fcn.004495f8(&var_630h, 0x45fbe0);\n    }\n    fcn.004495f8(&var_424h, &var_a48h);\n    fcn.004495ce(&var_424h, &var_c54h);\n    fcn.004495ce(&var_424h, &var_218h);\n    fcn.004495ce(&var_424h, &var_630h);\n    puVar4 = &var_424h;\n    arg_10h_00 = 0x45fbe8;\n    uVar5 = 0x45fbe8;\n    uVar3 = fcn.00418641();\n    fcn.004154da(uVar3, uVar5, arg_10h_00, puVar4);\n    cVar1 = fcn.00414fbc(&var_83ch);\n    if (((cVar1 == '\\x01') && (arg_8h == '\\x01')) || (cVar1 == '\\0')) {\n        puVar4 = &var_83ch;\n        uVar3 = fcn.00418641();\n        iVar2 = fcn.00443313(uVar3, puVar4);\n        if (iVar2 == 0) goto code_r0x00425448;\n    }\n    fcn.00418bb9();\ncode_r0x00425448:\n    if (var_ch == 0) {\n        return 0;\n    }\n    fcn.0044acf5(var_ch);\n    return 0;\n}\n",
        "token_count": 1119
    },
    "00425559": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00425559(int32_t arg_8h, uint arg_ch)\n\n{\n    uint lpFileName;\n    uint32_t uVar1;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.00416d61();\n    lpFileName = fcn.00418641();\n    uVar1 = fcn.00414fd1(lpFileName);\n    if (uVar1 == 0xffffffff) {\n        fcn.00418c7e(0x45bfe0);\n        fcn.00421898(0);\n    }\n    else {\n        if ((uVar1 & 1) != 0) {\n            fcn.00417064(0x45fbdc);\n        }\n        if ((uVar1 & 0x20) != 0) {\n            fcn.00417064();\n        }\n        if ((uVar1 & 4) != 0) {\n            fcn.00417064();\n        }\n        if ((uVar1 & 2) != 0) {\n            fcn.00417064();\n        }\n        if (uVar1 < '\\0') {\n            fcn.00417064();\n        }\n        if ((uVar1 & 0x10) != 0) {\n            fcn.00417064();\n        }\n        if ((uVar1 & 0x1000) != 0) {\n            fcn.00417064();\n        }\n        if ((uVar1 & 0x800) != 0) {\n            fcn.00417064();\n        }\n        if ((uVar1 & 0x100) != 0) {\n            fcn.00417064();\n        }\n    }\n    fcn.00418c7e(var_10h);\n    fcn.0044951c(var_10h);\n    return 0;\n}\n",
        "token_count": 403
    },
    "00425682": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00425682(int32_t arg_8h, uint arg_ch)\n\n{\n    int16_t iVar1;\n    bool bVar2;\n    code *pcVar3;\n    char cVar4;\n    int16_t *piVar5;\n    int32_t iVar6;\n    uint uVar7;\n    uint32_t uVar8;\n    uint var_c58h;\n    uint var_a4ch;\n    uint var_840h;\n    uint var_634h;\n    uint var_428h;\n    uint var_220h;\n    uint var_21ch;\n    uint var_10h;\n    uint32_t var_ch;\n    uint32_t var_8h;\n    uint32_t var_4h;\n    \n    var_4h = 0;\n    var_8h = 0;\n    piVar5 = fcn.00418641();\n    bVar2 = true;\n    if (*(arg_8h + 0xc) < 3) {\ncode_r0x004256dd:\n        var_ch = var_ch & 0xffffff00;\n    }\n    else {\n        iVar6 = fcn.00418733();\n        var_ch = CONCAT31(var_ch._1_3_, 1);\n        if (iVar6 != 1) goto code_r0x004256dd;\n    }\n    iVar1 = *piVar5;\n    while (iVar1 != 0) {\n        if (*piVar5 == 0x2b) {\n            bVar2 = true;\ncode_r0x00425705:\n            piVar5 = piVar5 + 1;\n        }\n        else if (*piVar5 == 0x2d) {\n            bVar2 = false;\n            goto code_r0x00425705;\n        }\n        iVar1 = *piVar5;\n        uVar8 = 1;\n        if ((iVar1 != 0x52) && (iVar1 != 0x72)) {\n            if ((iVar1 == 0x41) || (iVar1 == 0x61)) {\n                uVar8 = 0x20;\n            }\n            else if ((iVar1 == 0x53) || (iVar1 == 0x73)) {\n                uVar8 = 4;\n            }\n            else if ((iVar1 == 0x48) || (iVar1 == 0x68)) {\n                uVar8 = 2;\n            }\n            else if ((iVar1 == 0x4e) || (iVar1 == 0x6e)) {\n                uVar8 = 0x80;\n            }\n            else if ((iVar1 == 0x4f) || (iVar1 == 0x6f)) {\n                uVar8 = 0x1000;\n            }\n            else {\n                if ((iVar1 != 0x54) && (iVar1 != 0x74)) goto code_r0x00425895;\n                uVar8 = 0x100;\n            }\n        }\n        if (bVar2) {\n            var_4h = var_4h | uVar8;\n        }\n        else {\n            var_8h = var_8h | uVar8;\n        }\n        piVar5 = piVar5 + 1;\n        iVar1 = *piVar5;\n    }\n    uVar7 = fcn.00418641(0x104);\n    fcn.00449c77(&var_428h, uVar7);\n    var_220h._0_2_ = 0;\n    fcn.00414d77();\n    fcn.00415029(&var_428h);\n    fcn.0044a246(&var_428h, &var_840h, &var_a4ch, &var_21ch, &var_c58h);\n    fcn.004495ce(&var_840h, &var_a4ch);\n    fcn.004495ce(&var_21ch, &var_c58h);\n    (**0x459314)(0x104, &var_634h);\n    pcVar3 = *0x459310;\n    iVar6 = (**0x459310)(&var_840h);\n    if (iVar6 == 0) {\ncode_r0x00425895:\n        fcn.00418bb9(0);\n    }\n    else {\n        cVar4 = fcn.00415010(&var_21ch);\n        if (cVar4 == '\\0') {\ncode_r0x004258c1:\n            cVar4 = fcn.004258f8(&var_21ch, var_4h, var_8h, var_ch);\n            if (cVar4 == '\\0') {\n                fcn.00418bb9(0);\n            }\n        }\n        else {\n            uVar8 = (*_sym.imp.KERNEL32.DLL_GetFileAttributesW)(&var_21ch);\n            iVar6 = (**0x4591ec)(&var_21ch, (uVar8 | var_4h) & ~var_8h);\n            if (iVar6 == 0) {\n                (*pcVar3)(&var_634h);\n                goto code_r0x00425895;\n            }\n            if (var_ch != '\\0') {\n                (*pcVar3)(&var_21ch);\n                fcn.004495f8(&var_21ch, 0x45fde8);\n                goto code_r0x004258c1;\n            }\n        }\n        (*pcVar3)(&var_634h);\n    }\n    return 0;\n}\n",
        "token_count": 1215
    },
    "004258f8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuchar __cdecl fcn.004258f8(uint arg_8h, uint32_t dwFileAttributes, uint32_t arg_10h, uint arg_14h)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    char cVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    uchar uVar7;\n    uint lpFindFileData;\n    uint lpFileName;\n    uint var_8h;\n    int32_t hFindFile;\n    \n    pcVar1 = _sym.imp.KERNEL32.DLL_FindFirstFileW;\n    iVar4 = (*_sym.imp.KERNEL32.DLL_FindFirstFileW)(arg_8h, &lpFindFileData);\n    hFindFile = iVar4;\n    if (iVar4 == -1) {\n        return 0;\n    }\n    do {\n        iVar5 = fcn.00449703(&lpFileName, 0x45d104);\n        pcVar2 = _sym.imp.KERNEL32.DLL_FindClose;\n        if ((iVar5 != 0) && (iVar5 = fcn.00449703(&lpFileName, 0x45fde0),  iVar5 != 0)) {\n            uVar6 = (*_sym.imp.KERNEL32.DLL_GetFileAttributesW)(&lpFileName);\n            iVar5 = (**0x4591ec)(&lpFileName, (uVar6 | dwFileAttributes) & ~arg_10h);\n            if (iVar5 == 0) goto code_r0x004259a9;\n        }\n        iVar5 = (**0x459158)(iVar4, &lpFindFileData);\n    } while (iVar5 != 0);\n    (*pcVar2)(iVar4);\n    if (arg_14h == '\\0') {\n        return 1;\n    }\n    hFindFile = (*pcVar1)(0x45fde8, &lpFindFileData);\n    pcVar1 = *0x459310;\n    if (hFindFile != -1) {\n        do {\n            if ((((lpFindFileData & 0x10) != 0) && (iVar4 = fcn.00449703(&lpFileName, 0x45d104),  iVar4 != 0)) &&\n               (iVar4 = fcn.00449703(&lpFileName, 0x45fde0),  iVar4 != 0)) {\n                (*pcVar1)(&lpFileName);\n                cVar3 = fcn.004258f8(arg_8h, dwFileAttributes, arg_10h, arg_14h);\n                if (cVar3 == '\\0') goto code_r0x004259a9;\n                (*pcVar1)(0x45fde0);\n            }\n            iVar4 = (**0x459158)(hFindFile, &lpFindFileData);\n        } while (iVar4 != 0);\n    }\n    uVar7 = 1;\ncode_r0x00425a3e:\n    (*pcVar2)(hFindFile);\n    return uVar7;\ncode_r0x004259a9:\n    uVar7 = 0;\n    goto code_r0x00425a3e;\n}\n",
        "token_count": 707
    },
    "00425a4c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00425a4c(int32_t arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    uint lptstrFilename;\n    int32_t iVar2;\n    uint uVar3;\n    uint *arg_ch_00;\n    uint arg_10h;\n    uint var_408h;\n    uint var_4h;\n    \n    if (*(arg_8h + 0xc) == 1) {\n        uVar3 = 0x45c9ac;\n    }\n    else {\n        uVar3 = fcn.00418641();\n    }\n    arg_ch_00 = &var_408h;\n    arg_10h = uVar3;\n    lptstrFilename = fcn.00418641();\n    cVar1 = fcn.00414e01(lptstrFilename, arg_ch_00, arg_10h);\n    if (cVar1 == '\\x01') {\n        fcn.00418c7e(&var_408h);\n    }\n    else {\n        iVar2 = fcn.00449703(uVar3, 0x45c9ac);\n        if (iVar2 == 0) {\n            uVar3 = 0x45d0e8;\n        }\n        else {\n            uVar3 = 0x45bfe0;\n        }\n        fcn.00418c7e(uVar3);\n        fcn.00421898(0);\n    }\n    return 0;\n}\n",
        "token_count": 321
    },
    "00425af7": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00425af7(uint arg_8h, uint arg_ch)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t *piVar5;\n    uint *puVar6;\n    int32_t in_ECX;\n    uint32_t uVar7;\n    uint var_254h;\n    uint var_228h;\n    int32_t var_4h;\n    \n    uVar2 = fcn.00418641(&var_254h);\n    iVar3 = (*_sym.imp.KERNEL32.DLL_FindFirstFileW)(uVar2);\n    var_4h = iVar3;\n    if (iVar3 != -1) {\n        while ((iVar4 = fcn.00449703(&var_228h, 0x45fde0),  iVar4 == 0 ||\n               (iVar4 = fcn.00449703(&var_228h, 0x45d104),  iVar4 == 0))) {\n            iVar4 = (**0x459158)(iVar3, &var_254h);\n            if (iVar4 == 0) {\n                fcn.00421898(0);\n                fcn.00418bb9(0xffffffff);\n                (*_sym.imp.KERNEL32.DLL_FindClose)(iVar3);\n                return 0;\n            }\n        }\n        uVar1 = *(in_ECX + 0x6b0);\n        uVar7 = 0;\n        if (uVar1 != 0) {\n            do {\n                piVar5 = fcn.00421a8a();\n                if (*piVar5 == 0) break;\n                uVar7 = uVar7 + 1;\n            } while (uVar7 < uVar1);\n        }\n        arg_8h = fcn.00449614(0x10);\n        if (uVar7 == uVar1) {\n            fcn.00403ccb(&arg_8h);\n        }\n        else {\n            puVar6 = fcn.00421a8a();\n            *puVar6 = arg_8h;\n        }\n        puVar6 = fcn.00421a8a();\n        **puVar6 = 1;\n        piVar5 = fcn.00421a8a();\n        *(*piVar5 + 8) = var_4h;\n        uVar2 = fcn.004161b7(&var_228h);\n        piVar5 = fcn.00421a8a();\n        iVar3 = uVar7 + 1;\n        *(*piVar5 + 0xc) = uVar2;\n    }\n    fcn.00418bb9(iVar3);\n    return 0;\n}\n",
        "token_count": 600
    },
    "00425c3f": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00425c3f(int32_t arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    int32_t **ppiVar4;\n    int32_t in_ECX;\n    uint *puVar5;\n    uint var_250h;\n    uint var_224h;\n    \n    iVar2 = fcn.00418733();\n    if ((((-1 < iVar2 + -1) && (cVar1 = fcn.00419a96(),  cVar1 != '\\0')) && (iVar2 + -1 <= *(in_ECX + 0x6b0))) &&\n       ((piVar3 = fcn.00421a8a(),  *piVar3 != 0 && (ppiVar4 = fcn.00421a8a(),  **ppiVar4 == 1)))) {\n        piVar3 = fcn.00421a8a();\n        if (*(*piVar3 + 0xc) != 0) {\n            piVar3 = fcn.00421a8a();\n            fcn.00418c7e(*(*piVar3 + 0xc));\n            piVar3 = fcn.00421a8a();\n            fcn.0044951c(*(*piVar3 + 0xc));\n            piVar3 = fcn.00421a8a();\n            *(*piVar3 + 0xc) = 0;\n            return 0;\n        }\n        piVar3 = fcn.00421a8a();\n        iVar2 = (**0x459158)(*(*piVar3 + 8), &var_250h);\n        if (iVar2 != 0) {\n            puVar5 = &var_224h;\n            goto code_r0x00425d40;\n        }\n    }\n    fcn.00421898(0);\n    puVar5 = 0x45bfe0;\ncode_r0x00425d40:\n    fcn.00418c7e(puVar5);\n    return 0;\n}\n",
        "token_count": 457
    },
    "00425d51": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00425d51(int32_t arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint var_210h;\n    uint var_4h;\n    \n    if ((*(arg_8h + 0xc) < 2) || (iVar2 = fcn.00418733(),  iVar2 != 1)) {\n        uVar3 = fcn.00418641();\n        fcn.004495f8(&var_210h, uVar3);\n    }\n    else {\n        uVar3 = fcn.00418641();\n        fcn.00415029(uVar3);\n    }\n    cVar1 = fcn.00415052(&var_210h, &var_210h);\n    if (cVar1 == '\\x01') {\n        fcn.00418c7e(&var_210h);\n    }\n    else {\n        uVar3 = fcn.00418641();\n        fcn.00418c7e(uVar3);\n        fcn.00421898(0);\n    }\n    return 0;\n}\n",
        "token_count": 253
    },
    "00425e18": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00425e18(int32_t arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint *puVar3;\n    uint var_210h;\n    uint var_4h;\n    \n    if ((*(arg_8h + 0xc) < 2) || (iVar1 = fcn.00418733(),  iVar1 != 1)) {\n        uVar2 = fcn.00418641();\n        fcn.004495f8(&var_210h, uVar2);\n    }\n    else {\n        uVar2 = fcn.00418641();\n        fcn.00415029(uVar2);\n    }\n    iVar1 = (**0x4591f0)(&var_210h, &var_210h, 0x104);\n    if (iVar1 == 0) {\n        fcn.00421898(0);\n        puVar3 = fcn.00418641();\n    }\n    else {\n        puVar3 = &var_210h;\n    }\n    fcn.00418c7e(puVar3);\n    return 0;\n}\n",
        "token_count": 255
    },
    "00425fc8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00425fc8(int32_t arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint arg_8h_00;\n    uint32_t in_ECX;\n    uint32_t var_4h;\n    \n    var_4h = in_ECX & 0xffffff00;\n    if ((1 < *(arg_8h + 0xc)) && (iVar2 = fcn.00418733(),  iVar2 != 0)) {\n        var_4h = CONCAT31(in_ECX >> 8, 1);\n    }\n    arg_8h_00 = fcn.00418641();\n    cVar1 = fcn.00415a30(arg_8h_00, var_4h);\n    if (cVar1 == '\\0') {\n        fcn.00418bb9(0);\n    }\n    return 0;\n}\n",
        "token_count": 213
    },
    "0042602e": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0042602e(int32_t arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint uVar4;\n    uint uVar5;\n    uint arg_8h_00;\n    int32_t iVar6;\n    uint uVar7;\n    uint uVar8;\n    uint arg_14h;\n    uint arg_18h;\n    uint var_10h;\n    int32_t var_ch;\n    uint32_t var_4h;\n    \n    uVar3 = var_4h;\n    var_4h = var_4h & 0xffffff00;\n    if (2 < *(arg_8h + 0xc)) {\n        uVar2 = fcn.00418733();\n        if ((uVar2 & 1) != 0) {\n            var_4h = CONCAT31(SUB43(uVar3, 1), 1);\n        }\n        uVar3 = fcn.00418733();\n        if ((uVar3 & 8) != 0) {\n            fcn.00416d61();\n            uVar4 = fcn.00449614(0x208);\n            uVar5 = fcn.00449614(0x208);\n            arg_18h = 0;\n            arg_14h = 0;\n            uVar7 = uVar4;\n            uVar8 = uVar5;\n            arg_8h_00 = fcn.00418641();\n            fcn.0044a246(arg_8h_00, uVar7, uVar8, arg_14h, arg_18h);\n            fcn.00417064(uVar4);\n            fcn.00417064(uVar5);\n            if (((var_ch != 0) && (cVar1 = fcn.00414fbc(var_10h),  cVar1 == '\\0')) &&\n               (cVar1 = fcn.004156ef(var_10h),  cVar1 == '\\0')) {\n                fcn.00418bb9(0);\n            }\n            fcn.0044951c(uVar4);\n            fcn.0044951c(uVar5);\n            iVar6 = fcn.00418733();\n            if (iVar6 == 0) {\n                fcn.0044951c(var_10h);\n                return 0;\n            }\n            fcn.0044951c(var_10h);\n        }\n    }\n    uVar4 = 0;\n    uVar7 = fcn.00418641();\n    uVar8 = fcn.00418641();\n    cVar1 = fcn.004152c8(uVar8, uVar7, var_4h, uVar4);\n    if (cVar1 == '\\0') {\n        fcn.00418bb9(0);\n    }\n    return 0;\n}\n",
        "token_count": 648
    },
    "004261c4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.004261c4(int32_t arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint uVar4;\n    uint uVar5;\n    uint arg_8h_00;\n    int32_t iVar6;\n    uint uVar7;\n    uint uVar8;\n    uint arg_14h;\n    uint arg_18h;\n    uint var_10h;\n    int32_t var_ch;\n    uint32_t var_4h;\n    \n    uVar3 = var_4h;\n    var_4h = var_4h & 0xffffff00;\n    if (2 < *(arg_8h + 0xc)) {\n        uVar2 = fcn.00418733();\n        if ((uVar2 & 1) != 0) {\n            var_4h = CONCAT31(SUB43(uVar3, 1), 1);\n        }\n        uVar3 = fcn.00418733();\n        if ((uVar3 & 8) != 0) {\n            fcn.00416d61();\n            uVar4 = fcn.00449614(0x208);\n            uVar5 = fcn.00449614(0x208);\n            arg_18h = 0;\n            arg_14h = 0;\n            uVar7 = uVar4;\n            uVar8 = uVar5;\n            arg_8h_00 = fcn.00418641();\n            fcn.0044a246(arg_8h_00, uVar7, uVar8, arg_14h, arg_18h);\n            fcn.00417064(uVar4);\n            fcn.00417064(uVar5);\n            if (((var_ch != 0) && (cVar1 = fcn.00414fbc(var_10h),  cVar1 == '\\0')) &&\n               (cVar1 = fcn.004156ef(var_10h),  cVar1 == '\\0')) {\n                fcn.00418bb9(0);\n            }\n            fcn.0044951c(uVar4);\n            fcn.0044951c(uVar5);\n            iVar6 = fcn.00418733();\n            if (iVar6 == 0) {\n                fcn.0044951c(var_10h);\n                return 0;\n            }\n            fcn.0044951c(var_10h);\n        }\n    }\n    uVar4 = 1;\n    uVar7 = fcn.00418641();\n    uVar8 = fcn.00418641();\n    cVar1 = fcn.004152c8(uVar8, uVar7, var_4h, uVar4);\n    if (cVar1 == '\\0') {\n        fcn.00418bb9(0);\n    }\n    return 0;\n}\n",
        "token_count": 648
    },
    "0042655f": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl\nfcn.0042655f(uint arg_8h, uint32_t *arg_ch, uint32_t *arg_10h, uint32_t *arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint lpFindFileData;\n    int32_t var_254h;\n    uint32_t var_250h;\n    uint var_244h;\n    uint var_20h;\n    int32_t hFindFile;\n    uint var_10h;\n    uint lpFileName;\n    \n    fcn.00416d81(arg_8h);\n    fcn.00416dcf();\n    fcn.00417064(0x45fde8);\n    arg_8h._3_1_ = 1;\n    hFindFile = (*_sym.imp.KERNEL32.DLL_FindFirstFileW)(lpFileName, &lpFindFileData);\n    if (hFindFile != -1) {\n        do {\n            while( true ) {\n                iVar1 = fcn.00420336();\n                if (iVar1 == 1) {\n                    arg_8h._3_1_ = 0;\n                    goto code_r0x004266be;\n                }\n                if (iVar1 != 0xb) break;\n                (*_sym.imp.KERNEL32.DLL_Sleep)(10);\n            }\n            iVar1 = fcn.00449703(&var_244h, 0x45d104);\n            if ((iVar1 != 0) && (iVar1 = fcn.00449703(&var_244h, 0x45fde0),  iVar1 != 0)) {\n                fcn.004170ba();\n                fcn.00417064(&var_244h);\n                if ((lpFindFileData & 0x10) == 0) {\n                    uVar2 = *arg_ch;\n                    *arg_ch = *arg_ch + var_250h;\n                    arg_ch[1] = arg_ch[1] + var_254h + CARRY4(uVar2, var_250h);\n                    if (arg_18h != '\\0') {\n                        uVar2 = *arg_10h;\n                        *arg_10h = *arg_10h + 1;\n                        arg_10h[1] = arg_10h[1] + (0xfffffffe < uVar2);\n                    }\n                }\n                else {\n                    if (arg_18h != '\\0') {\n                        uVar2 = *arg_14h;\n                        *arg_14h = *arg_14h + 1;\n                        arg_14h[1] = arg_14h[1] + (0xfffffffe < uVar2);\n                    }\n                    if (arg_1ch != '\\0') {\n                        fcn.00417064(0x45c9ac);\n                        arg_8h._3_1_ = fcn.0042655f(lpFileName, arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch);\n                        if (arg_8h._3_1_ == 0) break;\n                    }\n                }\n            }\n            iVar1 = (**0x459158)(hFindFile, &lpFindFileData);\n        } while (iVar1 != 0);\n    }\ncode_r0x004266be:\n    (*_sym.imp.KERNEL32.DLL_FindClose)(hFindFile);\n    fcn.0044951c(var_20h);\n    uVar2 = fcn.0044951c(lpFileName);\n    return uVar2 & 0xffffff00 | arg_8h._3_1_;\n}\n",
        "token_count": 814
    },
    "004266e2": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Variable defined which should be unmapped: var_8h\n\nuint __cdecl fcn.004266e2(int32_t arg_8h, uint arg_ch)\n\n{\n    bool bVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint arg_8h_00;\n    uchar auStackY66080 [65536];\n    uint var_21ch;\n    uint uStackY104;\n    uint uStackY100;\n    uint uStackY96;\n    uint uStackY92;\n    uint uStackY88;\n    uint *puStackY84;\n    uint uStackY80;\n    uint uStackY76;\n    uint uStackY72;\n    uint *puStackY68;\n    uint uStackY64;\n    uchar *puStackY60;\n    uint *puStackY56;\n    uint uStackY52;\n    uint *puStackY48;\n    uint uStackY44;\n    uint *puStackY40;\n    uint uStackY36;\n    uchar *puStackY32;\n    uint uStackY28;\n    uint var_10h;\n    uint var_8h;\n    uint var_1h;\n    \n    fcn.0044c510();\n    var_10h = 0;\n    fcn.00418bb9();\n    bVar1 = false;\n    if (3 < *(arg_8h + 0xc)) {\n        iVar3 = fcn.00418733();\n        bVar1 = 0 < iVar3;\n    }\n    arg_8h_00 = fcn.00418641();\n    uStackY28 = 0x426740;\n    fcn.00415029(arg_8h_00);\n    uStackY28 = 0x7fff;\n    puStackY32 = &stack0xfffefde0;\n    uStackY36 = 0x42676a;\n    uStackY36 = fcn.00418641();\n    pcVar2 = *0x4591b8;\n    puStackY40 = 0x426773;\n    iVar3 = (**0x4591b8)();\n    if (iVar3 != 0) {\n        puStackY40 = &fcn.004266e2::var_21ch;\n        uStackY44 = 3;\n        puStackY48 = &fcn.004266e2::var_10h;\n        uStackY52 = 0x42679e;\n        uStackY52 = fcn.00418641();\n        puStackY56 = 0x4267a1;\n        iVar3 = (*pcVar2)();\n        if ((iVar3 == 0) || (bVar1)) {\n            puStackY56 = &fcn.004266e2::var_21ch;\n            puStackY60 = &stack0xfffefde0;\n            uStackY64 = 0x4267de;\n            uStackY64 = fcn.00418641();\n            puStackY68 = 0x4267e5;\n            (**0x4591bc)();\n            puStackY68 = &fcn.004266e2::var_21ch;\n            uStackY72 = 0;\n            uStackY76 = 0;\n            uStackY80 = 0x426806;\n            uStackY80 = fcn.00418641();\n            pcVar2 = *0x4591b4;\n            puStackY84 = 0x42680f;\n            (**0x4591b4)();\n            puStackY84 = &fcn.004266e2::var_21ch;\n            uStackY88 = 0;\n            uStackY92 = 0;\n            uStackY96 = 0;\n            uStackY100 = 0x42681b;\n            (*pcVar2)();\n            uStackY100 = 1;\n            uStackY104 = 0x426825;\n            fcn.00418bb9();\n        }\n        else {\n            puStackY56 = NULL;\n            puStackY60 = 0x4267b8;\n            fcn.00421898();\n        }\n    }\n    return 0;\n}\n",
        "token_count": 916
    },
    "00426870": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "link function at runtime on Windows"
        ],
        "decompiled_code": "\nvoid fcn.00426870(void)\n\n{\n    int32_t iVar1;\n    int32_t *unaff_ESI;\n    \n    if (unaff_ESI[2] == 0) {\n        iVar1 = (*_sym.imp.KERNEL32.DLL_LoadLibraryA)(0x45c5d8);\n        *unaff_ESI = iVar1;\n        if (iVar1 != 0) {\n            iVar1 = (*_sym.imp.KERNEL32.DLL_GetProcAddress)(iVar1, 0x45fba8);\n            unaff_ESI[2] = iVar1;\n        }\n    }\n    return;\n}\n",
        "token_count": 136
    },
    "00426897": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "link function at runtime on Windows"
        ],
        "decompiled_code": "\nvoid fcn.00426897(void)\n\n{\n    int32_t iVar1;\n    int32_t *unaff_ESI;\n    \n    if (unaff_ESI[2] == 0) {\n        iVar1 = (*_sym.imp.KERNEL32.DLL_LoadLibraryA)(0x45c5d8);\n        *unaff_ESI = iVar1;\n        if (iVar1 != 0) {\n            iVar1 = (*_sym.imp.KERNEL32.DLL_GetProcAddress)(iVar1, 0x45fb98);\n            unaff_ESI[2] = iVar1;\n        }\n    }\n    return;\n}\n",
        "token_count": 135
    },
    "004268be": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "link function at runtime on Windows"
        ],
        "decompiled_code": "\nvoid fcn.004268be(void)\n\n{\n    int32_t iVar1;\n    int32_t *unaff_ESI;\n    \n    if (unaff_ESI[2] == 0) {\n        iVar1 = (*_sym.imp.KERNEL32.DLL_LoadLibraryA)(0x45fb8c);\n        *unaff_ESI = iVar1;\n        if (iVar1 != 0) {\n            iVar1 = (*_sym.imp.KERNEL32.DLL_GetProcAddress)(iVar1, 0x45fb78);\n            unaff_ESI[2] = iVar1;\n        }\n    }\n    return;\n}\n",
        "token_count": 134
    },
    "00426ad1": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00426ad1(int32_t arg_8h, uint arg_ch)\n\n{\n    uint32_t uVar1;\n    uint lpWindowName;\n    int32_t iVar2;\n    uint xRight;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar2 = arg_8h;\n    arg_8h = 0;\n    uVar1 = *(iVar2 + 0xc);\n    var_8h = 0xffffffff;\n    var_4h = 0xffffffff;\n    xRight = 0xffffffff;\n    var_ch = 0xffffffff;\n    var_14h = 0xffffffff;\n    var_10h = 0xffffffff;\n    if (7 < uVar1) {\n        arg_8h = fcn.00418850();\n    }\n    if (6 < uVar1) {\n        var_4h = fcn.00418733();\n    }\n    if (5 < uVar1) {\n        var_8h = fcn.00418733();\n    }\n    if (4 < uVar1) {\n        var_10h = fcn.00418733();\n    }\n    if (3 < uVar1) {\n        var_14h = fcn.00418733();\n    }\n    if (2 < uVar1) {\n        var_ch = fcn.00418733();\n    }\n    if (1 < uVar1) {\n        xRight = fcn.00418733();\n    }\n    lpWindowName = fcn.00418641();\n    iVar2 = fcn.004066ec(0x478410, lpWindowName, var_14h, var_10h, xRight, var_ch, var_8h, var_4h, arg_8h);\n    if (iVar2 == 0) {\n        fcn.00421898(0);\n    }\n    fcn.00418c4c(iVar2);\n    return 0;\n}\n",
        "token_count": 453
    },
    "00426ecb": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00426ecb(int32_t arg_8h, uint arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    float10 fVar5;\n    uint var_14h;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar3 = arg_8h;\n    uVar1 = *(arg_8h + 0xc);\n    fcn.00416d61();\n    arg_8h = 0;\n    fcn.00418bb9(0);\n    if (4 < uVar1) {\n        if (*(iVar3 + 0xc) < 5) {\n            iVar2 = iVar3 + 0x18;\n        }\n        else {\n            iVar2 = *(*(iVar3 + 8) + 0x10);\n        }\n        if (*(iVar2 + 8) != 7) goto code_r0x00426fe5;\n        arg_8h = fcn.00418850();\n    }\n    if (3 < uVar1) {\n        if (*(iVar3 + 0xc) < 4) {\n            iVar3 = iVar3 + 0x18;\n        }\n        else {\n            iVar3 = *(*(iVar3 + 8) + 0xc);\n        }\n        if (*(iVar3 + 8) != 4) goto code_r0x00426fe5;\n        fcn.00418661();\n        fcn.00416e71();\n    }\n    if (2 < uVar1) {\n        fcn.00418733();\n    }\n    if (1 < uVar1) {\n        fcn.00418733();\n    }\n    uVar4 = var_14h;\n    fVar5 = fcn.00418692();\n    uVar4 = fcn.004071a5(SUB84(fVar5, 0), fVar5 >> 0x20, uVar4, arg_8h);\n    fcn.00418bb9(uVar4);\ncode_r0x00426fe5:\n    fcn.0044951c(var_14h);\n    return 0;\n}\n",
        "token_count": 479
    },
    "004272da": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004272da(uint arg_8h, uint32_t arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t unaff_EDI;\n    uint *arg_2ch;\n    uint in_stack_ffffff90;\n    uint in_stack_ffffff94;\n    uint in_stack_ffffff98;\n    uint in_stack_ffffff9c;\n    uint var_4ch;\n    uint var_38h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_10h = *(unaff_EDI + 0xc);\n    var_ch = 0;\n    var_8h = 0;\n    var_20h = 0xffffffff;\n    var_1ch = 0xffffffff;\n    var_28h = 0xffffffff;\n    var_24h = 0xffffffff;\n    var_18h = 0xffffffff;\n    var_14h = 0xffffffff;\n    var_38h = 0;\n    var_30h = 1;\n    var_2ch = 0;\n    fcn.00418bb9(0xffffffff);\n    iVar1 = var_ch;\n    var_4h = 0;\n    if (arg_ch == 0x15) {\n        if (var_10h == 0) {\ncode_r0x00427347:\n    // WARNING: Could not recover jumptable at 0x0042734e. Too many branches\n    // WARNING: Treating indirect jump as call\n    // switch table (30 cases) at 0x427522\n            uVar2 = (**(*(arg_ch + 0x42754e) * 4 + 0x427522))();\n            return uVar2;\n        }\n        fcn.0041fdea(0x70, 0xffffffff);\n        uVar2 = 1;\n    }\n    else {\n        if (arg_ch < 0x1e) goto code_r0x00427347;\n        if (var_ch + 6U < var_10h) {\n            fcn.0040f269();\n            var_14h = fcn.00418733();\n        }\n        if (iVar1 + 5U < var_10h) {\n            fcn.0040f269();\n            var_18h = fcn.00418733();\n        }\n        if (iVar1 + 4U < var_10h) {\n            fcn.0040f269();\n            var_1ch = fcn.00418733();\n        }\n        if (iVar1 + 3U < var_10h) {\n            fcn.0040f269();\n            var_20h = fcn.00418733();\n        }\n        if (iVar1 + 2U < var_10h) {\n            fcn.0040f269();\n            var_24h = fcn.00418733();\n        }\n        if (iVar1 + 1U < var_10h) {\n            fcn.0040f269();\n            var_28h = fcn.00418733();\n        }\n        arg_2ch = &var_38h;\n        fcn.0041835f();\n        uVar2 = fcn.004093a3(0x478410, arg_ch, var_8h, var_28h, var_24h, var_20h, var_1ch, var_18h, var_14h, arg_2ch, \n                             in_stack_ffffff90, in_stack_ffffff94, in_stack_ffffff98, in_stack_ffffff9c);\n        fcn.00418bb9(uVar2);\n        iVar1 = fcn.00418733();\n        if (iVar1 == 0) {\n            fcn.00421898(0);\n        }\n        if (arg_ch != 0x1d) {\n            fcn.0044951c(var_8h);\n        }\n        uVar2 = 0;\n    }\n    fcn.0041858e();\n    return uVar2;\n}\n",
        "token_count": 956
    },
    "00427c2b": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00427c2b(int32_t arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    uint item;\n    \n    fcn.00418bb9(0);\n    item = fcn.00418733();\n    cVar1 = fcn.004079b5(item);\n    if (cVar1 != '\\0') {\n        fcn.00418c4c(arg_ch);\n    }\n    return 0;\n}\n",
        "token_count": 102
    },
    "00427e57": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00427e57(int32_t arg_8h, uint arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    \n    iVar2 = arg_8h;\n    arg_8h = -1;\n    uVar1 = *(iVar2 + 0xc);\n    if (uVar1 != 0) {\n        arg_8h = fcn.00418733();\n    }\n    if ((uVar1 < 2) || (iVar2 = fcn.00418733(),  iVar2 != 1)) {\n        iVar2 = 0;\n    }\n    iVar2 = fcn.00407351(0x478410, arg_8h, iVar2);\n    if ((arg_8h < 1) && (iVar2 != 0)) {\n        fcn.00418c7e(iVar2);\n        fcn.0044951c(iVar2);\n    }\n    else {\n        fcn.00418bb9(arg_8h);\n    }\n    return 0;\n}\n",
        "token_count": 231
    },
    "00427f94": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00427f94(int32_t arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    uint *arg_8h_00;\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    var_10h = 0;\n    var_4h = 0;\n    var_8h = 1;\n    if (1 < *(arg_8h + 0xc)) {\n        fcn.00418a19(*(*(arg_8h + 8) + 4));\n    }\n    arg_8h_00 = &var_10h;\n    fcn.0041835f();\n    fcn.00418733();\n    uVar1 = fcn.00407221(arg_8h_00);\n    fcn.00418bb9(uVar1);\n    fcn.0041858e();\n    return 0;\n}\n",
        "token_count": 205
    },
    "0042853d": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0042853d(uint arg_8h, uint *arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t unaff_EDI;\n    uint uVar5;\n    uint var_60h;\n    uint var_38h;\n    int32_t var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_10h = *(unaff_EDI + 0x290);\n    uVar4 = 1;\n    if ((var_10h == 1) || (*0x4679c8 != '\\0')) {\ncode_r0x004286b6:\n        uVar4 = 0;\n    }\n    else {\n        uVar2 = *(unaff_EDI + 0x354);\n        *(unaff_EDI + 0x290) = 0;\n        uVar5 = arg_8h;\n        var_ch = uVar2;\n        fcn.004327a9(unaff_EDI, arg_8h, &var_18h, &var_8h, &var_14h, &var_4h);\n        if (4 < var_8h) {\n            return 0;\n        }\n        var_38h = 0;\n        var_30h = 1;\n        var_2ch = 0;\n        var_28h = 0;\n        var_20h = 1;\n        var_1ch = 0;\n        fcn.00417dba();\n        var_4h = 0;\n        if (0 < var_8h) {\n            do {\n                uVar2 = arg_10h;\n                if (var_4h == 0) {\ncode_r0x004285ea:\n                    fcn.00418c4c(uVar2);\n                }\n                else if (var_4h == 1) {\n                    uVar5 = arg_14h;\n                    fcn.00418bb9();\n                }\n                else {\n                    uVar2 = arg_18h;\n                    if ((var_4h == 2) || (uVar2 = arg_1ch,  var_4h == 3)) goto code_r0x004285ea;\n                }\n                fcn.00417dfb(&var_28h, uVar5);\n                var_4h = var_4h + 1;\n                uVar2 = var_ch;\n            } while (var_4h < var_8h);\n        }\n        cVar1 = fcn.0042ea6e(unaff_EDI, arg_8h, &var_38h, 0, 1);\n        *(unaff_EDI + 0x354) = uVar2;\n        if ((cVar1 == '\\0') || (*(unaff_EDI + 0x290) == 1)) {\n            uVar4 = 0;\n        }\n        else {\n            *(unaff_EDI + 0x290) = var_10h;\n            if (var_30h == 4) {\n                uVar5 = 0x45fe04;\n                uVar2 = fcn.00418641();\n                iVar3 = fcn.00449521(uVar2, uVar5);\n                if (iVar3 == 0) {\n                    uVar4 = 2;\n                    goto code_r0x00428682;\n                }\n            }\n            iVar3 = fcn.00418733();\n            if (iVar3 != 1) {\n                fcn.00417ddb();\n                fcn.0041858e();\n                fcn.0041858e();\n                goto code_r0x004286b6;\n            }\n            uVar2 = fcn.00418733();\n            *arg_ch = uVar2;\n        }\ncode_r0x00428682:\n        fcn.00417ddb();\n        fcn.0041858e();\n        fcn.0041858e();\n    }\n    return uVar4;\n}\n",
        "token_count": 963
    },
    "00428779": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00428779(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t unaff_EDI;\n    uint var_50h;\n    uint var_28h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_8h = *(unaff_EDI + 0x290);\n    if ((var_8h == 1) || (*0x4679c8 != '\\0')) {\ncode_r0x00428891:\n        uVar3 = 0;\n    }\n    else {\n        *(unaff_EDI + 0x290) = 0;\n        var_28h = 0;\n        var_20h = 1;\n        var_1ch = 0;\n        var_18h = 0;\n        var_10h = 1;\n        var_ch = 0;\n        fcn.00417dba();\n        var_4h = 0;\n        if (*0x478454 != 0) {\n            do {\n                uVar3 = *0x478444;\n                if ((((var_4h == 0) || (uVar3 = arg_8h,  var_4h == 1)) || (uVar3 = arg_ch,  var_4h == 2)) ||\n                   (uVar3 = arg_10h,  var_4h == 3)) {\n                    fcn.00418bb9(uVar3);\n                }\n                fcn.00417dfb(&var_18h);\n                var_4h = var_4h + 1;\n            } while (var_4h < *0x478454);\n        }\n        uVar3 = 0;\n        cVar1 = fcn.0042ea6e(unaff_EDI, *0x478448, &var_28h, 0, 1);\n        if ((cVar1 != '\\0') && (*(unaff_EDI + 0x290) != 1)) {\n            *(unaff_EDI + 0x290) = var_8h;\n            iVar2 = fcn.00418733();\n            if (iVar2 != 1) {\n                fcn.00417ddb();\n                fcn.0041858e();\n                fcn.0041858e();\n                goto code_r0x00428891;\n            }\n            uVar3 = fcn.00418733();\n        }\n        fcn.00417ddb();\n        fcn.0041858e();\n        fcn.0041858e();\n    }\n    return uVar3;\n}\n",
        "token_count": 621
    },
    "00428899": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_14h\n\nuint __cdecl fcn.00428899(int32_t arg_8h, uint arg_ch)\n\n{\n    int16_t iVar1;\n    char cVar2;\n    uint16_t uVar3;\n    int32_t in_EAX;\n    uint uVar4;\n    int16_t *in_ECX;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t arg_ch_00;\n    uint *var_14h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    if ((*(arg_8h + 0x6e8) == '\\0') || (in_EAX < 1)) {\n        var_4h = 0;\n        arg_ch_00 = 0x4288df;\n        fcn.00421bda();\n        iVar1 = *in_ECX;\n        iVar5 = var_4h;\n        while (iVar1 != 0) {\n            for (; (in_ECX[iVar5] == 0x20 || (in_ECX[iVar5] == 9)); iVar5 = iVar5 + 1) {\n            }\n            uVar3 = in_ECX[iVar5];\n            if (uVar3 == 0) break;\n            iVar6 = 0;\n            var_4h = iVar5;\n            if (((0x2f < uVar3) && (uVar3 < 0x3a)) || (uVar3 == 0x2e)) {\n                arg_ch_00 = 0x47e810;\n                var_14h = &fcn.00428899::var_14h;\n                cVar2 = fcn.00428de3(var_14h, 0x47e810);\n                if (cVar2 != '\\x01') {\n                    if (uVar3 != 0x2e) goto code_r0x004289bf;\n                    var_4h = iVar5 + 1;\n                    uVar3 = in_ECX[var_4h];\n                    while ((((0x40 < uVar3 && (uVar3 < 0x5b)) || ((0x60 < uVar3 && (uVar3 < 0x7b)))) ||\n                           (((0x2f < uVar3 && (uVar3 < 0x3a)) || (uVar3 == 0x5f))))) {\n                        *(iVar6 * 2 + 0x47e810) = uVar3;\n                        iVar6 = iVar6 + 1;\n                        var_4h = var_4h + 1;\n                        uVar3 = in_ECX[var_4h];\n                    }\n                    *(iVar6 * 2 + 0x47e810) = 0;\n                    if (iVar6 == 0) {\ncode_r0x00428cec:\n                        uVar4 = 0x9e;\n                        goto code_r0x00428cf6;\n                    }\n                    var_14h = 0x21;\ncode_r0x00428a96:\n                    fcn.00418097();\n                    uVar4 = 0x47e810;\ncode_r0x00428aa3:\n                    fcn.0041804c(uVar4);\n                }\n                goto code_r0x00428944;\n            }\ncode_r0x004289bf:\n            if ((((0x40 < uVar3) && (uVar3 < 0x5b)) || ((0x60 < uVar3 && (uVar3 < 0x7b)))) || (uVar3 == 0x5f)) {\n                arg_ch_00 = 0x4289f3;\n                fcn.00428fb6(arg_8h, &fcn.00428899::var_14h, 0x47e810);\n                if (var_14h != 0xffffffff) goto code_r0x00428944;\n                arg_ch_00 = iVar5 + -1;\n                uVar4 = 0x89;\ncode_r0x00428cf6:\n                fcn.0041fdea(uVar4, arg_ch_00);\n                uVar4 = 1;\n                goto code_r0x00428cdb;\n            }\n            if (uVar3 < 0x5c) {\n                if (uVar3 == 0x5b) {\n                    uVar4 = 0x13;\n                    goto code_r0x00428c97;\n                }\n                if (0x2c < uVar3) {\n                    if (uVar3 == 0x2d) {\n                        uVar4 = 0xb;\n                        fcn.00418097(0xb);\n                        iVar1 = in_ECX[iVar5 + 1];\njoined_r0x00428c78:\n                        var_4h = iVar5 + 1;\n                        if (iVar1 != 0x3d) goto code_r0x00428944;\n                        goto code_r0x00428af5;\n                    }\n                    if (uVar3 == 0x2f) {\n                        uVar4 = 0xc;\n                        fcn.00418097(0xc);\n                        iVar1 = in_ECX[iVar5 + 1];\n                        goto joined_r0x00428c78;\n                    }\n                    if (uVar3 != 0x3b) {\n                        if (uVar3 == 0x3c) {\n                            var_4h = iVar5 + 1;\n                            if (in_ECX[var_4h] == 0x3d) {\n                                uVar4 = 7;\n                            }\n                            else {\n                                if (in_ECX[var_4h] != 0x3e) {\n                                    uVar4 = 4;\n                                    goto code_r0x00428afb;\n                                }\n                                uVar4 = 5;\n                            }\ncode_r0x00428c12:\n                            fcn.00418097(uVar4);\n                            var_4h = iVar5 + 2;\n                            goto code_r0x00428944;\n                        }\n                        if (uVar3 == 0x3d) {\n                            var_4h = iVar5 + 1;\n                            if (in_ECX[var_4h] == 0x3d) {\n                                uVar4 = 0x16;\n                                goto code_r0x00428c12;\n                            }\n                            uVar4 = 2;\n                        }\n                        else {\n                            if (uVar3 != 0x3e) {\n                                if (uVar3 == 0x40) {\n                                    while( true ) {\n                                        iVar5 = iVar5 + 1;\n                                        uVar3 = in_ECX[iVar5];\n                                        if (((uVar3 < 0x41) || (0x5a < uVar3)) &&\n                                           (((uVar3 < 0x61 || (0x7a < uVar3)) &&\n                                            (((uVar3 < 0x30 || (0x39 < uVar3)) && (uVar3 != 0x5f)))))) break;\n                                        *(iVar6 * 2 + 0x47e810) = uVar3;\n                                        iVar6 = iVar6 + 1;\n                                    }\n                                    *(iVar6 * 2 + 0x47e810) = 0;\n                                    var_4h = iVar5;\n                                    goto joined_r0x00428bd5;\n                                }\n                                goto code_r0x00428d0f;\n                            }\n                            var_4h = iVar5 + 1;\n                            if (in_ECX[var_4h] == 0x3d) {\n                                uVar4 = 6;\n                                goto code_r0x00428c12;\n                            }\n                            uVar4 = 3;\n                        }\n                        goto code_r0x00428afb;\n                    }\n                    fcn.00418097();\n                    goto code_r0x00428ccd;\n                }\n                if (uVar3 == 0x2c) {\n                    uVar4 = 0x11;\n                    goto code_r0x00428c97;\n                }\n    // switch table (10 cases) at 0x428d2d\n                switch(uVar3) {\n                case 0x22:\n                case 0x27:\n                    uVar4 = 0x47e810;\n                    iVar5 = fcn.00428d55(arg_8h, 0x47e810);\n                    if (iVar5 == 0) {\n                        fcn.00418097(0x18);\n                        arg_ch_00 = 0x47e810;\n                        goto code_r0x00428aa3;\n                    }\n                    goto code_r0x00428d1f;\n                default:\n                    goto code_r0x00428d0f;\n                case 0x24:\n                    while( true ) {\n                        iVar5 = iVar5 + 1;\n                        uVar3 = in_ECX[iVar5];\n                        if (((((uVar3 < 0x41) || (0x5a < uVar3)) && ((uVar3 < 0x61 || (0x7a < uVar3)))) &&\n                            ((uVar3 < 0x30 || (0x39 < uVar3)))) && (uVar3 != 0x5f)) break;\n                        *(iVar6 * 2 + 0x47e810) = uVar3;\n                        iVar6 = iVar6 + 1;\n                    }\n                    *(iVar6 * 2 + 0x47e810) = 0;\n                    var_4h = iVar5;\njoined_r0x00428bd5:\n                    if (iVar6 == 0) goto code_r0x00428cec;\n                    goto code_r0x00428a96;\n                case 0x26:\n                    uVar4 = 0x12;\n                    fcn.00418097(0x12);\n                    iVar1 = in_ECX[iVar5 + 1];\n                    goto joined_r0x00428c78;\n                case 0x28:\n                    uVar4 = 8;\n                    break;\n                case 0x29:\n                    uVar4 = 9;\n                    break;\n                case 0x2a:\n                    uVar4 = 0xd;\n                    fcn.00418097(0xd);\n                    iVar1 = in_ECX[iVar5 + 1];\n                    goto joined_r0x00428aed;\n                case 0x2b:\n                    uVar4 = 10;\n                    fcn.00418097(10);\n                    iVar1 = in_ECX[iVar5 + 1];\njoined_r0x00428aed:\n                    var_4h = iVar5 + 1;\n                    if (iVar1 == 0x3d) {\ncode_r0x00428af5:\n                        var_4h = iVar5 + 2;\ncode_r0x00428afb:\n                        fcn.00418097(uVar4);\n                    }\ncode_r0x00428944:\n                    fcn.0042192c(&fcn.00428899::var_14h);\n                    goto code_r0x00428cae;\n                }\n            }\n            else {\n                if (uVar3 != 0x5d) {\n                    if (uVar3 == 0x5e) {\n                        uVar4 = 0x17;\n                        goto code_r0x00428c97;\n                    }\ncode_r0x00428d0f:\n                    fcn.0041fdea(0x6a, iVar5);\ncode_r0x00428d1f:\n                    fcn.00418097();\n                    uVar4 = 1;\n                    goto code_r0x00428ccf;\n                }\n                uVar4 = 0x14;\n            }\ncode_r0x00428c97:\n            fcn.00418097(uVar4);\n            fcn.0042192c(&fcn.00428899::var_14h);\n            var_4h = iVar5 + 1;\ncode_r0x00428cae:\n            iVar5 = var_4h;\n            iVar1 = in_ECX[var_4h];\n        }\n        fcn.00418097(0xf);\ncode_r0x00428ccd:\n        uVar4 = 0;\ncode_r0x00428ccf:\n        fcn.0042192c(&fcn.00428899::var_14h);\ncode_r0x00428cdb:\n        fcn.00417f90();\n    }\n    else {\n        fcn.004290ae(*(arg_8h + 0x6e4) + in_EAX * 0x28);\n        uVar4 = 0;\n    }\n    return uVar4;\n}\n",
        "token_count": 2750
    },
    "00428d55": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00428d55(uint arg_8h, int32_t arg_ch)\n\n{\n    int16_t *piVar1;\n    int16_t iVar2;\n    int16_t iVar3;\n    int32_t arg_ch_00;\n    int32_t *in_EAX;\n    int32_t in_EDX;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = 0;\n    arg_ch_00 = *in_EAX;\n    iVar2 = *(in_EDX + arg_ch_00 * 2);\n    *in_EAX = arg_ch_00 + 1;\n    iVar3 = *(in_EDX + (arg_ch_00 + 1) * 2);\n    do {\n        if (iVar3 == 0) {\n            fcn.0041fdea(0x9c, arg_ch_00);\n            return 1;\n        }\n        piVar1 = in_EDX + *in_EAX * 2;\n        iVar3 = *piVar1;\n        if (iVar3 == iVar2) {\n            if (piVar1[1] != iVar2) {\n                *in_EAX = *in_EAX + 1;\n                *(arg_ch + var_4h * 2) = 0;\n                return 0;\n            }\n            *(arg_ch + var_4h * 2) = iVar3;\n            *in_EAX = *in_EAX + 2;\n        }\n        else {\n            *(arg_ch + var_4h * 2) = iVar3;\n            *in_EAX = *in_EAX + 1;\n        }\n        var_4h = var_4h + 1;\n        iVar3 = *(in_EDX + *in_EAX * 2);\n    } while( true );\n}\n",
        "token_count": 397
    },
    "00428de3": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Removing unreachable block (ram,0x00428f6e)\n\nuint __cdecl fcn.00428de3(double *arg_8h, int32_t arg_ch)\n\n{\n    int16_t iVar1;\n    uint16_t uVar2;\n    int32_t iVar3;\n    bool bVar4;\n    bool bVar5;\n    char cVar6;\n    int32_t *in_EAX;\n    uint8_t uVar7;\n    int32_t in_ECX;\n    int32_t iVar8;\n    uint unaff_EDI;\n    float10 fVar9;\n    uint64_t uVar10;\n    uint uVar11;\n    uint var_8h;\n    uint var_1h;\n    \n    iVar3 = *in_EAX;\n    iVar8 = 0;\n    if ((*(in_ECX + iVar3 * 2) == 0x30) && ((iVar1 = *(in_ECX + 2 + iVar3 * 2),  iVar1 == 0x78 || (iVar1 == 0x58)))) {\n        *in_EAX = iVar3 + 2;\n        while (((uVar2 = *(in_ECX + *in_EAX * 2),  0x2f < uVar2 && (uVar2 < 0x3a)) ||\n               (((0x60 < uVar2 && (uVar2 < 0x67)) || ((0x40 < uVar2 && (uVar2 < 0x47))))))) {\n            *(arg_ch + iVar8 * 2) = uVar2;\n            iVar8 = iVar8 + 1;\n            *in_EAX = *in_EAX + 1;\n        }\n        *(arg_ch + iVar8 * 2) = 0;\n        fcn.00418097(0x19);\n        cVar6 = fcn.004167a5();\n        if (cVar6 != '\\0') {\n            *arg_8h = arg_ch;\n            return 1;\n        }\n        return 0;\n    }\n    bVar4 = false;\n    uVar7 = 0x17;\n    bVar5 = true;\n    do {\n        uVar2 = *(in_ECX + *in_EAX * 2);\n        if ((uVar2 == 0x2b) || (uVar2 == 0x2d)) {\n            if ((uVar7 & 8) != 0) {\n                uVar7 = 0x31;\n                bVar5 = false;\n            }\n        }\n        else if (uVar2 == 0x2e) {\n            if (bVar5) {\n                uVar7 = 0x25;\n                bVar5 = false;\n            }\ncode_r0x00428ebb:\n            bVar4 = true;\n        }\n        else {\n            if (0x2f < uVar2) {\n                if (uVar2 < 0x3a) {\n                    uVar7 = uVar7 & 0xef | 0x20;\n                    goto code_r0x00428f11;\n                }\n                if ((uVar2 == 0x45) || (uVar2 == 0x65)) {\n                    if ((uVar7 & 0x14) == 4) {\n                        uVar7 = 0x39;\n                        bVar5 = false;\n                    }\n                    goto code_r0x00428ebb;\n                }\n            }\n            if ((((0x40 < (uVar2 & 0xffdf)) && ((uVar2 & 0xffdf) < 0x5b)) || (uVar2 == 0x5f)) && ((uVar7 & 0xfd) != 0))\n            {\n                uVar7 = uVar7 | 0x10;\n                *in_EAX = *in_EAX - iVar8;\n            }\n        }\ncode_r0x00428f11:\n        if ((uVar7 & 0x20) == 0) {\n            if ((uVar7 & 0x10) != 0) {\n                return 0;\n            }\n            *(arg_ch + iVar8 * 2) = 0;\n            if (bVar4) {\n                uVar11 = 0x1b;\n                fcn.00418097();\n                fVar9 = fcn.00449b60(arg_ch, uVar11, unaff_EDI);\n                *arg_8h = fVar9;\n                return 1;\n            }\n            uVar10 = fcn.00449799(arg_ch);\n            if (((uVar10 < 0x80000000) && (-0x100000001 < uVar10)) &&\n               ((uVar10 < 0x8000000000000000 || (0x7fffffff < uVar10)))) {\n                fcn.00418097(0x19);\n                uVar11 = fcn.00449794(arg_ch);\n                *arg_8h = uVar11;\n                return 1;\n            }\n            fcn.00418097(0x1a);\n            *arg_8h = uVar10;\n            *(arg_8h + 4) = uVar10 >> 0x20;\n            return 1;\n        }\n        *(arg_ch + iVar8 * 2) = *(in_ECX + *in_EAX * 2);\n        iVar8 = iVar8 + 1;\n        *in_EAX = *in_EAX + 1;\n        uVar7 = uVar7 & 0xdf;\n    } while( true );\n}\n",
        "token_count": 1223
    },
    "0042913e": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0042913e(uint32_t arg_8h, uint arg_ch)\n\n{\n    uint16_t *puVar1;\n    uchar *puVar2;\n    \n    puVar1 = fcn.00418641();\n    arg_8h = *puVar1;\n    puVar2 = fcn.00416a25(&arg_8h);\n    fcn.00418bb9(*puVar2);\n    fcn.0044951c(puVar2);\n    return 0;\n}\n",
        "token_count": 114
    },
    "00429273": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00429273(uint32_t arg_8h, uint arg_ch)\n\n{\n    uint32_t uVar1;\n    uint var_ch;\n    \n    uVar1 = fcn.00418733();\n    if (uVar1 == 0) {\n        fcn.00416d61();\n        fcn.00416e97(0);\n        fcn.00418cb1();\n        fcn.0044951c(var_ch);\n    }\n    else if (uVar1 < 0x10000) {\n        arg_8h = uVar1 & 0xffff;\n        fcn.00418c7e(&arg_8h);\n    }\n    else {\n        fcn.00418c7e(0x45bfe0);\n        fcn.00421898(0);\n    }\n    return 0;\n}\n",
        "token_count": 186
    },
    "004292fd": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004292fd(uint arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    \n    fcn.00418641();\n    cVar1 = fcn.004167a5();\n    if (cVar1 == '\\0') {\n        fcn.00421898(0);\n    }\n    fcn.00418bb9(arg_8h);\n    return 0;\n}\n",
        "token_count": 91
    },
    "00429481": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00429481(int32_t arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t extraout_ECX;\n    float10 fVar3;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.00418bb9(0);\n    cVar1 = fcn.00419a96();\n    if (cVar1 != '\\0') {\n        if (extraout_ECX == 0) {\n            iVar2 = arg_8h + 0x18;\n        }\n        else {\n            iVar2 = **(arg_8h + 8);\n        }\n        if (*(iVar2 + 8) != 1) {\n            if (extraout_ECX == 0) {\n                arg_8h = arg_8h + 0x18;\n            }\n            else {\n                arg_8h = **(arg_8h + 8);\n            }\n            if (*(arg_8h + 8) != 2) {\n                fcn.00418692();\n                _var_8h = fcn.00458664();\n                fVar3 = fcn.00418692();\n                if (_var_8h != fVar3) {\n                    return 0;\n                }\n            }\n        }\n        fcn.00418bb9(1);\n    }\n    return 0;\n}\n",
        "token_count": 317
    },
    "0042952c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0042952c(int32_t arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    int32_t extraout_ECX;\n    float10 fVar2;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.00418bb9(0);\n    cVar1 = fcn.00419a96();\n    if (cVar1 != '\\0') {\n        if (extraout_ECX == 0) {\n            arg_8h = arg_8h + 0x18;\n        }\n        else {\n            arg_8h = **(arg_8h + 8);\n        }\n        if (*(arg_8h + 8) == 3) {\n            fcn.00418692();\n            _var_8h = fcn.00458664();\n            fVar2 = fcn.00418692();\n            if (_var_8h != fVar2) {\n                fcn.00418bb9(1);\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 243
    },
    "004295f2": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00429687)\n\nuint __cdecl fcn.004295f2(int32_t arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    uint arg_8h_2;\n    int32_t iVar2;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    float10 fVar3;\n    uint64_t uVar4;\n    \n    cVar1 = fcn.00419a96();\n    if (cVar1 == '\\0') {\n        arg_8h_2 = fcn.00418641();\n        iVar2 = fcn.004499ac();\n        if (iVar2 == 0) {\n            uVar4 = fcn.004187bd();\n            if (((uVar4 < 0x80000000) && (-0x100000001 < uVar4)) &&\n               ((uVar4 < 0x8000000000000000 || (0x7fffffff < uVar4)))) {\n                fcn.00418733();\n                fcn.00418bb9();\n            }\n            else {\n                fcn.00418c2c(uVar4);\n            }\n        }\n        else {\n            fVar3 = fcn.00449b60(arg_8h_2, unaff_ESI, unaff_EDI);\n            fcn.00418c65(fVar3);\n        }\n    }\n    else {\n        fcn.00418a19();\n    }\n    return 0;\n}\n",
        "token_count": 324
    },
    "0042978d": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0042978d(uint32_t arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    \n    if (*(arg_8h + 0xc) == 0) {\n        iVar1 = arg_8h + 0x18;\n    }\n    else {\n        iVar1 = **(arg_8h + 8);\n    }\n    arg_8h = arg_8h & 0xffffff00 | *(iVar1 + 8) == 7;\n    fcn.0041923e(arg_8h);\n    return 0;\n}\n",
        "token_count": 130
    },
    "00429b44": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00429c77)\n\nuint __cdecl fcn.00429b44(int32_t arg_8h, uint arg_ch)\n\n{\n    double dVar1;\n    uint32_t uVar2;\n    bool bVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    float10 fVar6;\n    float10 fVar7;\n    uint var_ch;\n    uint var_4h;\n    \n    bVar3 = false;\n    if ((*(arg_8h + 0xc) == 3) && (iVar4 = fcn.00418733(),  iVar4 == 1)) {\n        bVar3 = true;\n    }\n    fcn.00418bb9(0);\n    uVar2 = *(arg_8h + 0xc);\n    if (uVar2 == 0) {\n        fVar6 = fcn.00441f01();\ncode_r0x00429cb6:\n        fcn.00418c65(fVar6);\n    }\n    else {\n        if (uVar2 == 1) {\n            fVar6 = fcn.00418692();\n            dVar1 = fVar6;\n            if (dVar1 < *0x462048 == (dVar1 == *0x462048)) {\n                fVar6 = fcn.00441f01();\n                fVar6 = fVar6 * dVar1;\n                goto code_r0x00429cb6;\n            }\n        }\n        else {\n            if (uVar2 < 2) {\n                return 0;\n            }\n            if (3 < uVar2) {\n                return 0;\n            }\n            if (uVar2 == 0) {\n                iVar4 = arg_8h + 0x18;\n            }\n            else {\n                iVar4 = **(arg_8h + 8);\n            }\n            if (*(iVar4 + 8) != 5) {\n                if (uVar2 < 2) {\n                    arg_8h = arg_8h + 0x18;\n                }\n                else {\n                    arg_8h = *(*(arg_8h + 8) + 4);\n                }\n                if (*(arg_8h + 8) != 5) {\n                    if (bVar3) {\n                        iVar4 = fcn.00418733();\n                        iVar5 = fcn.00418733();\n                        if (iVar5 <= iVar4) {\n                            fcn.00441ebd();\n                            fcn.00418bb9();\n                            return 0;\n                        }\n                    }\n                    else {\n                        fVar6 = fcn.00418692();\n                        fVar7 = fcn.00418692();\n                        dVar1 = fVar7;\n                        if (dVar1 < fVar6) {\n                            fVar7 = fcn.00441f01();\n                            fVar6 = (fVar6 - dVar1) * fVar7 + dVar1;\n                            goto code_r0x00429cb6;\n                        }\n                    }\n                }\n            }\n        }\n        fcn.00421898();\n    }\n    return 0;\n}\n",
        "token_count": 684
    },
    "0042a0c9": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0042a0c9(int32_t arg_8h, uint arg_ch)\n\n{\n    uint32_t uVar1;\n    char cVar2;\n    uint arg_8h_00;\n    int32_t iVar3;\n    ulong uVar4;\n    uint var_3ch;\n    uint var_14h;\n    uint var_4h;\n    \n    uVar1 = *(arg_8h + 0xc);\n    if (uVar1 == 0) {\n        iVar3 = arg_8h + 0x18;\n    }\n    else {\n        iVar3 = **(arg_8h + 8);\n    }\n    if (*(iVar3 + 8) == 0xb) {\n        if (uVar1 == 0) {\n            arg_8h = arg_8h + 0x18;\n        }\n        else {\n            arg_8h = **(arg_8h + 8);\n        }\n        fcn.0041835f(arg_8h);\n        fcn.00418641();\n        uVar4 = fcn.00418606();\n        iVar3 = uVar4 >> 0x20;\n        if (uVar4 != 0) {\n            iVar3 = iVar3 + 4;\n        }\n        fcn.00418c7e(iVar3);\n        fcn.0041858e();\n    }\n    else if ((uVar1 < 2) || (iVar3 = fcn.00418733(),  iVar3 < 9)) {\n        arg_8h_00 = fcn.00418733();\n        cVar2 = fcn.00416666(arg_8h_00);\n        if (cVar2 == '\\0') {\n            fcn.00421898(0);\n        }\n        fcn.00418c7e(&var_3ch);\n    }\n    else {\n        fcn.00418c7e(0x45bfe0);\n        fcn.00421898(0);\n    }\n    return 0;\n}\n",
        "token_count": 445
    },
    "0042a387": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0042a387(int32_t arg_8h)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t in_ECX;\n    uint *arg_10h;\n    uint *arg_14h;\n    uint *arg_18h;\n    uint *arg_1ch;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar3 = arg_8h;\n    *(in_ECX + 0x840) = 0;\n    arg_1ch = &arg_8h;\n    arg_18h = &var_4h;\n    arg_14h = &var_8h;\n    arg_10h = &var_ch;\n    uVar2 = fcn.00418641();\n    cVar1 = fcn.004327a9(in_ECX, uVar2, arg_10h, arg_14h, arg_18h, arg_1ch);\n    if (cVar1 == '\\0') {\n        fcn.0041fdea(0x85, 0xffffffff);\n        uVar2 = 1;\n    }\n    else {\n        fcn.00418661();\n        fcn.00416e71();\n        uVar2 = (*_sym.imp.WINMM.dll_timeGetTime)();\n        *(in_ECX + 0x844) = uVar2;\n        if ((*(iVar3 + 0xc) == 2) && (iVar3 = fcn.00418733(),  0 < iVar3)) {\n            uVar2 = fcn.00418733();\n            *(in_ECX + 0x848) = uVar2;\n        }\n        else {\n            *(in_ECX + 0x848) = 0xfa;\n        }\n        *(in_ECX + 0x840) = 1;\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 430
    },
    "0042a51c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0042a51c(int32_t arg_8h, uint arg_ch)\n\n{\n    ushort uStack65540;\n    uint uStack32;\n    uchar *puStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint uStack16;\n    \n    fcn.0044c510();\n    uStack65540 = 0;\n    uStack16 = 0x7fff;\n    puStack20 = &stack0xfffefffc;\n    uStack24 = 0x42a557;\n    uStack24 = fcn.00418641();\n    puStack28 = 0x42a55e;\n    (**0x4591f4)();\n    puStack28 = &stack0xfffefffc;\n    uStack32 = 0x42a56d;\n    fcn.00418c7e();\n    return 0;\n}\n",
        "token_count": 195
    },
    "0042aa34": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0042aa83)\n// WARNING: Removing unreachable block (ram,0x0042aaca)\n// WARNING: Removing unreachable block (ram,0x0042aae0)\n// WARNING: Removing unreachable block (ram,0x0042ab11)\n// WARNING: Removing unreachable block (ram,0x0042ab05)\n// WARNING: Removing unreachable block (ram,0x0042ab13)\n// WARNING: Removing unreachable block (ram,0x0042ab28)\n// WARNING: Removing unreachable block (ram,0x0042ab33)\n// WARNING: Removing unreachable block (ram,0x0042ab2e)\n// WARNING: Removing unreachable block (ram,0x0042ab39)\n// WARNING: Removing unreachable block (ram,0x0042ab43)\n// WARNING: Removing unreachable block (ram,0x0042ab4d)\n// WARNING: Removing unreachable block (ram,0x0042ab45)\n// WARNING: Removing unreachable block (ram,0x0042ab56)\n// WARNING: Removing unreachable block (ram,0x0042ab62)\n// WARNING: Removing unreachable block (ram,0x0042ab5e)\n// WARNING: Removing unreachable block (ram,0x0042aad3)\n// WARNING: Removing unreachable block (ram,0x0042ab7e)\n// WARNING: Removing unreachable block (ram,0x0042aa8b)\n// WARNING: Removing unreachable block (ram,0x0042aa95)\n// WARNING: Removing unreachable block (ram,0x0042aa90)\n// WARNING: Removing unreachable block (ram,0x0042aa9a)\n// WARNING: Removing unreachable block (ram,0x0042aac3)\n// WARNING: Removing unreachable block (ram,0x0042aab0)\n// WARNING: Removing unreachable block (ram,0x0042ab7f)\n// WARNING: Removing unreachable block (ram,0x0042aa72)\n// WARNING: Removing unreachable block (ram,0x0042ab8d)\n// WARNING: Removing unreachable block (ram,0x0042ab96)\n\nuint __cdecl fcn.0042aa34(uint arg_8h, uint arg_ch)\n\n{\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.00430246();\n    fcn.0041fdea(0x8c, 0xffffffff);\n    return 1;\n}\n",
        "token_count": 524
    },
    "0042ac04": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: hLibModule\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_34h\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.0042ac04(int32_t arg_8h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint uVar3;\n    code *pcVar4;\n    int32_t iVar5;\n    int32_t extraout_ECX;\n    uchar auStackY9304 [2052];\n    uint var_1c50h;\n    uint var_144ch;\n    uint var_c48h;\n    uint var_444h;\n    uint uStackY100;\n    uint *puStackY96;\n    uchar *puStackY92;\n    uint uStackY88;\n    uint32_t uStackY84;\n    uint *puStackY80;\n    uint uStackY76;\n    uint *var_44h;\n    uint *var_40h;\n    uint *puStackY64;\n    uint var_38h;\n    uint *var_34h;\n    uint *var_30h;\n    int32_t var_2ch;\n    uint *var_28h;\n    uint *var_24h;\n    uint *hLibModule;\n    uint *arg_10h;\n    uint var_18h;\n    uint var_14h;\n    uint *arg_1ch;\n    uint var_ch;\n    uint32_t var_8h;\n    uint32_t var_4h;\n    \n    var_4h = 0x42ac11;\n    fcn.0044c510();\n    var_4h = *(arg_8h + 0xc);\n    var_8h = 0;\n    fcn.004300ae();\n    var_2ch = extraout_ECX + 0x318;\n    var_34h = NULL;\n    var_30h = NULL;\n    var_28h = arg_8h;\n    if ((2 < var_4h) && (iVar2 = fcn.00418733(),  iVar2 == 1)) {\n        var_8h = 0x80000000;\n    }\n    arg_1ch = &fcn.0042ac04::var_1c50h;\n    arg_10h = &fcn.0042ac04::var_44h;\n    hLibModule = &fcn.0042ac04::var_4h;\n    var_24h = 0x42ac9f;\n    var_24h = fcn.00418641();\n    var_28h = 0x42acab;\n    cVar1 = fcn.0042b33b(var_24h, hLibModule, arg_10h, &fcn.0042ac04::var_144ch, &fcn.0042ac04::var_c48h, arg_1ch);\n    if (cVar1 == '\\0') {\n        *(extraout_ECX + 800) = 2;\n        goto code_r0x0042afad;\n    }\n    if ((var_4h != 3) && (var_4h != 1)) {\n        *(extraout_ECX + 800) = 3;\n        goto code_r0x0042afad;\n    }\n    var_28h = var_4h;\n    var_2ch = 0x42ace7;\n    cVar1 = fcn.0042b41e(var_4h);\n    if (cVar1 == '\\0') {\n        var_2ch = 0x42acf1;\n        uVar3 = (*_sym.imp.KERNEL32.DLL_GetLastError)();\n        *(extraout_ECX + 0x324) = uVar3;\n        *(extraout_ECX + 800) = 4;\n        goto code_r0x0042afad;\n    }\n    if ((var_4h == 3) || ((var_4h == 1 && (*(extraout_ECX + 0x2f0) == 2)))) {\n        hLibModule = NULL;\n        var_2ch = 0;\n        var_30h = var_8h;\n        var_34h = NULL;\n        var_38h = 0;\n        puStackY64 = 0x42aea7;\n        puStackY64 = fcn.00418641();\n        var_40h = *(extraout_ECX + 0x328);\n        var_44h = 0x42aeb6;\n        pcVar4 = fcn.004300eb();\n        var_44h = 0x42aeb8;\n        var_30h = (*pcVar4)();\n        if (var_30h == NULL) {\n            var_24h = 0x42aec5;\n            uVar3 = (*_sym.imp.KERNEL32.DLL_GetLastError)();\n            *(extraout_ECX + 800) = 5;\n        }\n        else {\n            var_24h = 0x460580;\n            var_28h = 0x42af08;\n            var_28h = fcn.00418641();\n            var_2ch = 0x42af0e;\n            iVar2 = fcn.0044aa49();\n            if (iVar2 != 0) {\n                if (hLibModule != NULL) {\n                    var_24h = hLibModule;\n                    goto code_r0x0042af31;\n                }\n                goto code_r0x0042af37;\n            }\n            var_24h = 0x42af1c;\n            uVar3 = (*_sym.imp.KERNEL32.DLL_GetLastError)();\n            *(extraout_ECX + 800) = 6;\n        }\n        pcVar4 = _sym.imp.KERNEL32.DLL_FreeLibrary;\n        *(extraout_ECX + 0x324) = uVar3;\n        if (hLibModule == NULL) goto code_r0x0042ae47;\n        var_24h = hLibModule;\n    }\n    else {\n        var_2ch = 0;\n        var_30h = NULL;\n        var_34h = var_4h;\n        puStackY64 = &fcn.0042ac04::var_c48h;\n        var_44h = &fcn.0042ac04::var_144ch;\n        uStackY76 = *(extraout_ECX + 0x328);\n        var_40h = NULL;\n        var_38h = 0;\n        hLibModule = NULL;\n        puStackY80 = 0x42ad57;\n        pcVar4 = fcn.00430101();\n        puStackY80 = 0x42ad59;\n        puStackY96 = (*pcVar4)();\n        var_34h = puStackY96;\n        if (puStackY96 == NULL) {\n            puStackY80 = 0x42ad66;\n            uVar3 = (*_sym.imp.KERNEL32.DLL_GetLastError)();\n            *(extraout_ECX + 0x324) = uVar3;\n            *(extraout_ECX + 800) = 7;\n            pcVar4 = _sym.imp.KERNEL32.DLL_FreeLibrary;\n            if (var_40h != NULL) {\n                puStackY80 = var_40h;\n                uStackY84 = 0x42ad86;\n                (*_sym.imp.KERNEL32.DLL_FreeLibrary)();\n            }\n            puStackY80 = 0x42ad8e;\n            fcn.0042a2fb();\n            if (&fcn.0042ac04::var_c48h == NULL) {\n                return;\n            }\n            uStackY84 = 0x42ad9c;\n            puStackY80 = &fcn.0042ac04::var_c48h;\n            (*pcVar4)();\n            return;\n        }\n        if (*(extraout_ECX + 0x29d) == '\\0') {\n            var_8h = var_8h | 1;\n        }\n        else {\n            var_8h = var_8h | 2;\n        }\n        puStackY80 = NULL;\n        uStackY84 = var_8h;\n        puStackY92 = &stack0xffffdba8;\n        uStackY88 = 0x80000000;\n        uStackY100 = 0x42adcd;\n        pcVar4 = fcn.00430117();\n        uStackY100 = 0x42adcf;\n        var_30h = (*pcVar4)();\n        if (var_30h == NULL) {\n            var_24h = 0x42addc;\n            uVar3 = (*_sym.imp.KERNEL32.DLL_GetLastError)();\n            *(extraout_ECX + 800) = 8;\n        }\n        else {\n            var_24h = 0x460580;\n            var_28h = 0x42ae06;\n            var_28h = fcn.00418641();\n            var_2ch = 0x42ae0c;\n            iVar2 = fcn.0044aa49();\n            if (iVar2 != 0) {\n                if (hLibModule != NULL) {\n                    var_24h = hLibModule;\n                    var_28h = 0x42ae71;\n                    (*_sym.imp.KERNEL32.DLL_FreeLibrary)();\n                }\n                if (var_40h != NULL) {\n                    var_24h = var_40h;\ncode_r0x0042af31:\n                    var_28h = 0x42af37;\n                    (*_sym.imp.KERNEL32.DLL_FreeLibrary)();\n                }\ncode_r0x0042af37:\n                var_24h = 0x1;\n                do {\n                    if (var_34h == NULL) {\n                        var_24h = var_30h;\n                        var_28h = 0x42af4b;\n                        iVar5 = fcn.0042afcb(var_30h);\n                        if (iVar5 == 200) goto code_r0x0042af52;\ncode_r0x0042af9c:\n                        *(extraout_ECX + 800) = 10;\n                        break;\n                    }\ncode_r0x0042af52:\n                    var_28h = &fcn.0042ac04::var_24h;\n                    var_2ch = 0x400;\n                    var_34h = &fcn.0042ac04::var_444h;\n                    var_38h = 0x42af6d;\n                    var_30h = var_34h;\n                    pcVar4 = fcn.004300d5();\n                    var_38h = 0x42af6f;\n                    iVar5 = (*pcVar4)();\n                    if (iVar5 == 0) goto code_r0x0042af9c;\n                    if (var_24h == NULL) break;\n                    var_2ch = 1;\n                    var_30h = var_24h;\n                    var_34h = &fcn.0042ac04::var_444h;\n                    var_38h = 0x42af8a;\n                    var_28h = iVar2;\n                    fcn.0044ac5d(var_34h, var_24h, 1, iVar2);\n                    *(extraout_ECX + 0x31c) = *(extraout_ECX + 0x31c) + var_24h;\n                } while (var_24h != NULL);\n                var_2ch = 0x42afac;\n                var_28h = iVar2;\n                fcn.0044acf5(iVar2);\ncode_r0x0042afad:\n                var_28h = 0x42afb5;\n                fcn.0042a2fb();\n                if (&fcn.0042ac04::var_c48h != NULL) {\n                    var_2ch = 0x42afc4;\n                    var_28h = &fcn.0042ac04::var_c48h;\n                    (*_sym.imp.KERNEL32.DLL_FreeLibrary)();\n                }\n                return;\n            }\n            var_24h = 0x42ae1c;\n            uVar3 = (*_sym.imp.KERNEL32.DLL_GetLastError)();\n            *(extraout_ECX + 800) = 9;\n        }\n        pcVar4 = _sym.imp.KERNEL32.DLL_FreeLibrary;\n        *(extraout_ECX + 0x324) = uVar3;\n        if (hLibModule != NULL) {\n            var_24h = hLibModule;\n            var_28h = 0x42ae3c;\n            (*pcVar4)();\n        }\n        if (var_40h == NULL) goto code_r0x0042ae47;\n        var_24h = var_40h;\n    }\n    var_28h = 0x42ae47;\n    (*pcVar4)();\ncode_r0x0042ae47:\n    var_24h = 0x42ae4f;\n    fcn.0042a2fb();\n    if (&fcn.0042ac04::var_c48h == NULL) {\n        return;\n    }\n    var_28h = 0x42ae5e;\n    var_24h = &fcn.0042ac04::var_c48h;\n    (*pcVar4)();\n    return;\n}\n",
        "token_count": 3045
    },
    "0042afcb": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0042b00c)\n\nuint __cdecl fcn.0042afcb(uint arg_8h)\n\n{\n    code *pcVar1;\n    uint hLibModule;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_4h = 0;\n    var_8h = 4;\n    pcVar1 = fcn.0043012d(arg_8h, 0x20000013, &arg_8h, &var_8h, &var_4h);\n    (*pcVar1)();\n    return arg_8h;\n}\n",
        "token_count": 142
    },
    "0042b5cd": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0042b5cd(int32_t arg_8h, uint arg_ch)\n\n{\n    uint8_t uVar1;\n    uint8_t uVar2;\n    code *pcVar3;\n    uint8_t uVar8;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint uVar6;\n    int32_t arg_8h_00;\n    int32_t iVar7;\n    int32_t in_ECX;\n    char cVar9;\n    uint32_t uVar10;\n    uint var_6ch;\n    int32_t var_68h;\n    int32_t var_64h;\n    uint var_60h;\n    uint var_5ch;\n    int32_t var_40h;\n    uint32_t var_3ch;\n    int32_t var_38h;\n    int32_t var_34h;\n    int32_t var_30h;\n    int32_t var_2ch;\n    uint var_28h;\n    int32_t var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    uint32_t var_18h;\n    int32_t var_14h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint var_7h;\n    uint8_t var_3h;\n    uint8_t var_2h;\n    uint var_1h;\n    \n    var_ch = 0;\n    var_18h = *(arg_8h + 0xc);\n    var_14h = 1;\n    var_7h._0_1_ = '\\0';\n    var_40h = fcn.00418733();\n    var_3ch = fcn.00418733();\n    var_38h = fcn.00418733();\n    var_34h = fcn.00418733();\n    fcn.0042f346(*(in_ECX + 0x2a4));\n    var_40h = var_40h + var_30h;\n    var_3ch = var_3ch + var_2ch;\n    var_38h = var_38h + var_30h;\n    var_34h = var_34h + var_2ch;\n    var_10h = fcn.00418733();\n    if (*(in_ECX + 0x29c) == '\\0') {\n        fcn.0041683d();\n    }\n    var_7h._1_1_ = var_10h >> 0x10;\n    if ((var_18h < 6) || (iVar4 = fcn.00418733(),  iVar4 < 0)) {\n        iVar4 = 0;\n    }\n    else if (0xff < iVar4) {\n        iVar4 = 0xff;\n    }\n    if ((6 < var_18h) && (iVar5 = fcn.00418733(),  1 < iVar5)) {\n        var_14h = fcn.00418733();\n    }\n    if (iVar4 == 0) {\n        var_2h = var_10h;\n        var_1h._0_1_ = var_10h;\n        var_7h._3_1_ = var_10h._1_1_;\n        var_7h._2_1_ = var_7h._1_1_;\n        var_3h = var_7h._3_1_;\n    }\n    else {\n        var_18h = var_10h & 0xff;\n        cVar9 = iVar4;\n        if (var_18h < iVar4) {\n            var_1h._0_1_ = 0;\n        }\n        else {\n            var_1h._0_1_ = var_10h - cVar9;\n        }\n        if (var_10h._1_1_ < iVar4) {\n            var_3h = 0;\n        }\n        else {\n            var_3h = var_10h._1_1_ - cVar9;\n        }\n        if (var_7h._1_1_ < iVar4) {\n            var_7h._2_1_ = 0;\n        }\n        else {\n            var_7h._2_1_ = var_7h._1_1_ - cVar9;\n        }\n        if (0xff - var_18h < iVar4) {\n            var_2h = 0xff;\n        }\n        else {\n            var_2h = var_18h + cVar9;\n        }\n        if (0xff - var_10h._1_1_ < iVar4) {\n            var_7h._3_1_ = 0xff;\n        }\n        else {\n            var_7h._3_1_ = var_10h._1_1_ + cVar9;\n        }\n        if (0xff - var_7h._1_1_ < iVar4) {\n            var_7h._1_1_ = 0xff;\n        }\n        else {\n            var_7h._1_1_ = var_7h._1_1_ + cVar9;\n        }\n    }\n    var_18h = (*_sym.imp.USER32.dll_GetDC)(0);\n    iVar4 = (var_34h - var_3ch) + 1;\n    iVar5 = (var_38h - var_40h) + 1;\n    uVar10 = var_3ch;\n    if (iVar5 * iVar4 < 0xc) {\n        for (; iVar4 = var_40h,  uVar10 <= var_34h; uVar10 = uVar10 + var_14h) {\n            for (; var_ch = iVar4,  iVar4 <= var_38h; iVar4 = iVar4 + var_14h) {\n                uVar6 = (*_sym.imp.GDI32.dll_GetPixel)(var_18h, iVar4, uVar10);\n                if ((((var_1h <= uVar6) && (uVar6 <= var_2h)) && (uVar8 = uVar6 >> 8,  var_3h <= uVar8)) &&\n                   (((uVar8 <= var_7h._3_1_ && (uVar8 = uVar6 >> 0x10,  var_7h._2_1_ <= uVar8)) &&\n                    (uVar8 <= var_7h._1_1_)))) {\n                    var_7h._0_1_ = '\\x01';\n                    goto code_r0x0042b992;\n                }\n            }\n        }\n    }\n    else {\n        var_10h = 4 - (iVar5 * 3) % 4;\n        if (var_10h == 4) {\n            var_10h = 0;\n        }\n        var_64h = -iVar4;\n        var_6ch = 0x28;\n        var_60h._0_2_ = 1;\n        var_60h._2_2_ = 0x18;\n        var_5ch = 0;\n        var_68h = iVar5;\n        uVar6 = (*_sym.imp.GDI32.dll_CreateCompatibleDC)(var_18h);\n        var_1ch = (*_sym.imp.GDI32.dll_CreateDIBSection)(uVar6, &var_6ch, 0, 0, 0, 0);\n        pcVar3 = _sym.imp.GDI32.dll_SelectObject;\n        var_20h = (*_sym.imp.GDI32.dll_SelectObject)(uVar6, var_1ch);\n        (*_sym.imp.GDI32.dll_BitBlt)(uVar6, 0, 0, iVar5, iVar4, var_18h, var_40h, var_3ch, 0xcc0020);\n        (*pcVar3)(uVar6, var_20h);\n        var_20h = iVar5 * 3 + var_10h;\n        arg_8h_00 = fcn.00449f7f(var_20h * iVar4);\n        (*_sym.imp.GDI32.dll_GetDIBits)(uVar6, var_1ch, 0, iVar4, arg_8h_00, &var_6ch, 0);\n        (*_sym.imp.USER32.dll_ReleaseDC)(0, var_18h);\n        (**0x459108)(var_1ch);\n        (*_sym.imp.GDI32.dll_DeleteDC)(uVar6);\n        var_10h = 0;\n        if (0 < iVar4) {\n            do {\n                var_ch = 0;\n                if (0 < iVar5) {\n                    var_24h = var_14h * 3;\n                    var_1ch = 0;\n                    do {\n                        iVar7 = var_1ch + var_20h * var_10h;\n                        uVar8 = *(iVar7 + arg_8h_00);\n                        iVar7 = iVar7 + 1;\n                        uVar1 = *(iVar7 + arg_8h_00);\n                        uVar2 = *(arg_8h_00 + 1 + iVar7);\n                        if (((var_1h <= uVar2) && (uVar2 <= var_2h)) &&\n                           ((var_3h <= uVar1 &&\n                            (((uVar1 <= var_7h._3_1_ && (var_7h._2_1_ <= uVar8)) && (uVar8 <= var_7h._1_1_)))))) {\n                            var_ch = var_ch + var_40h;\n                            var_10h = var_10h + var_3ch;\n                            var_7h._0_1_ = '\\x01';\n                            goto code_r0x0042b93a;\n                        }\n                        var_ch = var_ch + var_14h;\n                        var_1ch = var_1ch + var_24h;\n                    } while (var_ch < iVar5);\n                }\n                var_10h = var_10h + var_14h;\n            } while (var_10h < iVar4);\n        }\ncode_r0x0042b93a:\n        fcn.0044a128(arg_8h_00);\n        uVar10 = var_10h;\n    }\ncode_r0x0042b992:\n    (*_sym.imp.USER32.dll_ReleaseDC)(0, var_18h);\n    if (var_7h == '\\0') {\n        fcn.00421898(0);\n    }\n    else {\n        fcn.0041a000(1);\n        var_ch = var_ch - var_30h;\n        fcn.0041a132(1);\n        fcn.00418bb9(var_ch);\n        fcn.0041a132(1);\n        fcn.00418bb9(uVar10 - var_2ch);\n    }\n    return 0;\n}\n",
        "token_count": 2419
    },
    "0042bce5": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0042bce5(int32_t arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint uVar4;\n    int32_t in_ECX;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = fcn.00418733();\n    iVar2 = fcn.00418733();\n    fcn.0042f346(*(in_ECX + 0x2a4));\n    uVar3 = (*_sym.imp.USER32.dll_GetDC)(0);\n    uVar4 = (*_sym.imp.GDI32.dll_GetPixel)(uVar3, iVar1 + var_10h, iVar2 + var_ch);\n    if (*(in_ECX + 0x29c) == '\\0') {\n        fcn.00416816();\n    }\n    fcn.00418bb9(uVar4);\n    (*_sym.imp.USER32.dll_ReleaseDC)(0, uVar3);\n    return 0;\n}\n",
        "token_count": 246
    },
    "0042bd83": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0042bd83(int32_t arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    int32_t iVar3;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    (*_sym.imp.USER32.dll_GetCursorPos)(&var_8h);\n    fcn.0042f346(*(in_ECX + 0x2a0));\n    var_8h = var_8h - var_10h;\n    var_4h = var_4h - var_ch;\n    if (*(arg_8h + 0xc) == 0) {\n        fcn.0041a000(1);\n        fcn.0041a132(1);\n        fcn.00418bb9(var_8h);\n        fcn.0041a132(1);\n        fcn.00418bb9(var_4h);\n    }\n    else {\n        cVar1 = fcn.00419a96();\n        if (cVar1 == '\\0') {\n            fcn.00421898(0);\n        }\n        else {\n            iVar2 = fcn.00418733();\n            iVar3 = var_8h;\n            if ((iVar2 == 0) || (iVar2 = fcn.00418733(),  iVar3 = var_4h,  iVar2 == 1)) {\n                fcn.00418bb9(iVar3);\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 357
    },
    "0042bec3": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0042bec3(int32_t arg_8h, uint arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint arg_10h;\n    int32_t iVar3;\n    uint arg_ch_00;\n    int32_t var_8h;\n    uint var_4h;\n    \n    iVar2 = arg_8h;\n    uVar1 = *(arg_8h + 0xc);\n    arg_ch_00 = 0;\n    arg_8h = 0;\n    if (uVar1 == 2) {\n        fcn.0041fdea(0x70, 0xffffffff);\n        return 1;\n    }\n    if (1 < uVar1) {\n        arg_8h = fcn.00418733();\n        arg_ch_00 = fcn.00418733();\n    }\n    if (uVar1 < 4) {\n        var_8h = 1;\n    }\n    else {\n        var_8h = fcn.00418733();\n        if (var_8h < 1) {\n            return 0;\n        }\n    }\n    if (uVar1 < 5) {\n        arg_10h = 0xffffffff;\n    }\n    else {\n        arg_10h = fcn.00418733();\n    }\n    if (1 < uVar1) {\n        fcn.0042c174(arg_8h, arg_ch_00, arg_10h, 1);\n    }\n    arg_8h = 0;\n    if (0 < var_8h) {\n        do {\n            if (*(iVar2 + 0xc) == 0) {\n                iVar3 = iVar2 + 0x18;\n            }\n            else {\n                iVar3 = **(iVar2 + 8);\n            }\n            if (*(iVar3 + 8) != 4) {\ncode_r0x0042c00d:\n                fcn.00418bb9(0);\n                return 0;\n            }\n            fcn.00418641();\n            iVar3 = fcn.00415ed6();\n            if (iVar3 == 0) goto code_r0x0042c00d;\n            fcn.00416122();\n            fcn.00418641();\n            iVar3 = fcn.00415f7a();\n            if (iVar3 == 0) goto code_r0x0042c00d;\n            fcn.00416122();\n            arg_8h = arg_8h + 1;\n        } while (arg_8h < var_8h);\n    }\n    return 0;\n}\n",
        "token_count": 574
    },
    "0042c020": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0042c020(int32_t arg_8h, uint arg_ch)\n\n{\n    uint arg_8h_00;\n    uint arg_ch_00;\n    uint arg_8h_01;\n    uint arg_ch_01;\n    int32_t iVar1;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = arg_8h;\n    arg_8h_00 = fcn.00418733();\n    arg_ch_00 = fcn.00418733();\n    arg_8h_01 = fcn.00418733();\n    arg_ch_01 = fcn.00418733();\n    if (*(arg_8h + 0xc) < 6) {\n        arg_8h = -1;\n    }\n    else {\n        arg_8h = fcn.00418733();\n    }\n    fcn.0042c174(arg_8h_00, arg_ch_00, arg_8h, 1);\n    if ((arg_8h < 2) && (arg_8h != -1)) {\n        arg_8h = 2;\n    }\n    if (*(iVar1 + 0xc) == 0) {\n        iVar1 = iVar1 + 0x18;\n    }\n    else {\n        iVar1 = **(iVar1 + 8);\n    }\n    if (*(iVar1 + 8) == 4) {\n        fcn.00418641();\n        iVar1 = fcn.00415ed6();\n        if (iVar1 != 0) {\n            fcn.00416122();\n            fcn.0042c174(arg_8h_01, arg_ch_01, arg_8h, 1);\n            fcn.00416122();\n            fcn.00418641();\n            iVar1 = fcn.00415f7a();\n            if (iVar1 != 0) {\n                fcn.00416122();\n                return 0;\n            }\n        }\n    }\n    fcn.00418bb9(0);\n    return 0;\n}\n",
        "token_count": 456
    },
    "0042c174": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042c174(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, uint arg_14h)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint var_20h;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t lpPoint;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    fcn.0042f346(*(in_EAX + 0x2a0));\n    uVar1 = (*_sym.imp.USER32.dll_GetDesktopWindow)(&var_20h);\n    (*_sym.imp.USER32.dll_GetWindowRect)(uVar1);\n    iVar3 = ((arg_8h + var_8h + 1) * 0x10000) / var_18h + -1;\n    iVar6 = ((arg_ch + var_4h + 1) * 0x10000) / var_14h + -1;\n    if (arg_10h == 0) {\n        (*_sym.imp.USER32.dll_mouse_event)(0x8001, iVar3, iVar6, 0, 0);\n        if (arg_14h != '\\0') {\n            fcn.00416122();\n        }\n    }\n    else {\n        if ((arg_10h < 0) || (100 < arg_10h)) {\n            arg_10h = 10;\n        }\n        (*_sym.imp.USER32.dll_GetCursorPos)(&lpPoint);\n        iVar4 = (lpPoint * 0xffff) / (var_18h + -1) + 1;\n        iVar5 = (var_ch * 0xffff) / (var_14h + -1) + 1;\n        while ((iVar4 != iVar3 || (iVar5 != iVar6))) {\n            if (iVar4 < iVar3) {\n                iVar2 = (iVar3 - iVar4) / arg_10h;\n                if ((iVar2 == 0) || (iVar2 < 0x20)) {\n                    iVar2 = 0x20;\n                }\n                iVar4 = iVar4 + iVar2;\n                if (iVar3 < iVar4) {\ncode_r0x0042c27b:\n                    iVar4 = iVar3;\n                }\n            }\n            else if (iVar3 < iVar4) {\n                iVar2 = (iVar4 - iVar3) / arg_10h;\n                if ((iVar2 == 0) || (iVar2 < 0x20)) {\n                    iVar2 = 0x20;\n                }\n                iVar4 = iVar4 - iVar2;\n                if (iVar4 < iVar3) goto code_r0x0042c27b;\n            }\n            if (iVar5 < iVar6) {\n                iVar2 = (iVar6 - iVar5) / arg_10h;\n                if ((iVar2 == 0) || (iVar2 < 0x20)) {\n                    iVar2 = 0x20;\n                }\n                iVar5 = iVar5 + iVar2;\n                if (iVar6 < iVar5) {\ncode_r0x0042c2b9:\n                    iVar5 = iVar6;\n                }\n            }\n            else if (iVar6 < iVar5) {\n                iVar2 = (iVar5 - iVar6) / arg_10h;\n                if ((iVar2 == 0) || (iVar2 < 0x20)) {\n                    iVar2 = 0x20;\n                }\n                iVar5 = iVar5 - iVar2;\n                if (iVar5 < iVar6) goto code_r0x0042c2b9;\n            }\n            (*_sym.imp.USER32.dll_mouse_event)(0x8001, iVar4, iVar5, 0, 0);\n            fcn.00416122();\n        }\n    }\n    return;\n}\n",
        "token_count": 881
    },
    "0042c2dc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0042c2dc(int32_t arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = 1;\n    if (((*(arg_8h + 0xc) < 2) || (var_4h = fcn.00418733(),  0 < var_4h)) && (arg_8h = 0,  0 < var_4h)) {\n        do {\n            uVar1 = fcn.00418641();\n            iVar2 = fcn.004160c6(uVar1);\n            if (iVar2 == 0) {\n                fcn.00418bb9(0);\n                return 0;\n            }\n            fcn.00416122();\n            arg_8h = arg_8h + 1;\n        } while (arg_8h < var_4h);\n    }\n    return 0;\n}\n",
        "token_count": 226
    },
    "0042d5a2": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0042d5a2(int32_t arg_8h, uint arg_ch)\n\n{\n    float10 fVar1;\n    int32_t iVar2;\n    float10 fVar3;\n    uint var_18h;\n    double dStack20;\n    uint var_8h;\n    \n    fcn.00418bb9(0);\n    iVar2 = (**0x45911c)(&var_18h);\n    if ((iVar2 != 0) && (iVar2 = (*_sym.imp.KERNEL32.DLL_QueryPerformanceCounter)(&var_8h),  iVar2 != 0)) {\n        dStack20 = _var_8h;\n        fVar3 = fcn.00418692();\n        fVar1 = dStack20;\n        dStack20 = _var_18h;\n        fcn.00418c65(((fVar1 - fVar3) / _var_18h) * *0x462070);\n    }\n    return 0;\n}\n",
        "token_count": 219
    },
    "0042d610": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0042d610(int32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    uint var_3a8h;\n    uint var_3a4h;\n    uint var_3a0h;\n    uint var_39ch;\n    uint var_288h;\n    int32_t var_8ah;\n    uint var_84h;\n    uint var_6h;\n    \n    uVar1 = *(arg_8h + 0xc);\n    if (*0x479bbd != '\\0') {\n        var_3a8h = 0x3a8;\n        var_39ch = 0x10;\n        var_3a4h = *0x467a00;\n        var_3a0h = 1;\n        uVar2 = fcn.00418641(0x3f);\n        fcn.00449c77(&var_84h, uVar2);\n        var_6h._0_2_ = 0;\n        uVar2 = fcn.00418641(0xff);\n        fcn.00449c77(&var_288h, uVar2);\n        var_8ah._0_2_ = 0;\n        *NULL = fcn.00418733();\n        *NULL = *NULL * 1000;\n        if (uVar1 < 4) {\n            stack0xfffffff8 = 0;\n        }\n        else {\n            *NULL = fcn.00418733();\n        }\n        (**0x4593f8)(1, &var_3a8h);\n    }\n    return 0;\n}\n",
        "token_count": 373
    },
    "0042d792": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0042d792(int32_t arg_8h, uint arg_ch)\n\n{\n    uint16_t uVar1;\n    int16_t iVar2;\n    int16_t *piVar3;\n    uchar *puVar4;\n    uint32_t *puVar5;\n    char cVar6;\n    ushort uVar7;\n    int32_t iVar8;\n    ushort *puVar9;\n    uint32_t uVar10;\n    int32_t in_ECX;\n    uint uVar11;\n    int32_t iVar12;\n    int32_t iVar13;\n    bool bVar14;\n    uint var_1f0h;\n    uint var_1ech;\n    uint var_1e8h;\n    uint var_1e4h;\n    int32_t var_1e0h;\n    uint var_1dch;\n    uint var_1d8h;\n    int32_t var_1d4h;\n    uint var_1d0h;\n    uint var_1cch;\n    int32_t var_1c8h;\n    uint var_1c4h;\n    uint var_1c0h;\n    int32_t var_1bch;\n    uint var_1b8h;\n    uint var_1b4h;\n    int32_t var_1b0h;\n    uint var_1ach;\n    uint var_1a8h;\n    uint var_1a4h;\n    uint var_1a0h;\n    uint var_19ch;\n    uint var_198h;\n    uint var_194h;\n    uint var_190h;\n    uint var_18ch;\n    uint var_188h;\n    uint var_184h;\n    uint var_180h;\n    uint var_17ch;\n    uint var_178h;\n    uint var_174h;\n    uint var_170h;\n    uint var_16ch;\n    uint var_168h;\n    uint var_164h;\n    uint var_160h;\n    int32_t var_15ch;\n    uint var_158h;\n    uint var_154h;\n    int32_t var_150h;\n    uint var_14ch;\n    uint var_148h;\n    int32_t var_144h;\n    uint var_140h;\n    uint var_13ch;\n    int32_t var_138h;\n    uint var_134h;\n    uint var_130h;\n    int32_t var_12ch;\n    uint var_128h;\n    uint var_124h;\n    int32_t var_120h;\n    uint var_11ch;\n    uint var_118h;\n    int32_t var_114h;\n    uint var_110h;\n    uint var_10ch;\n    int32_t var_108h;\n    uint var_104h;\n    uint var_100h;\n    int32_t var_fch;\n    uint var_f8h;\n    uint var_f4h;\n    int32_t var_f0h;\n    uint var_ech;\n    uint var_e8h;\n    uint var_e4h;\n    uint var_e0h;\n    uint var_dch;\n    int32_t var_d8h;\n    uint var_d4h;\n    uint var_d0h;\n    int32_t var_cch;\n    uint var_c8h;\n    uint var_c4h;\n    int32_t var_c0h;\n    uint var_bch;\n    uint var_b8h;\n    uint var_b4h;\n    uint var_b0h;\n    uint var_ach;\n    uint var_a8h;\n    uint var_a4h;\n    uint var_a0h;\n    uint var_9ch;\n    uint var_98h;\n    uint var_94h;\n    uint var_90h;\n    uint var_8ch;\n    uint var_88h;\n    uint var_84h;\n    uint var_80h;\n    uint var_7ch;\n    int32_t var_78h;\n    uint var_74h;\n    uint var_70h;\n    int32_t var_6ch;\n    uint var_68h;\n    uint var_64h;\n    int32_t var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    int32_t var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_34h;\n    uint var_2ch;\n    uint var_28h;\n    int32_t var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    uint32_t var_18h;\n    uint32_t var_14h;\n    int16_t *var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint32_t *var_4h;\n    \n    var_18h = *(arg_8h + 0xc);\n    var_ch = in_ECX;\n    var_10h = fcn.00418641();\n    var_34h = 0;\n    var_2ch = 1;\n    var_28h = 0;\n    fcn.00418bb9(0);\n    fcn.00418c7e(0x45bfe0);\n    var_1e0h = in_ECX + 0x2a8;\n    var_1d4h = in_ECX + 0x29c;\n    var_1c8h = in_ECX + 0x299;\n    var_15ch = in_ECX + 0x2ac;\n    var_150h = in_ECX + 0x2b0;\n    var_1bch = in_ECX + 0x29a;\n    var_158h = 0x460340;\n    var_14ch = 0x460340;\n    var_138h = in_ECX + 0x2a0;\n    var_1b0h = in_ECX + 0x29d;\n    var_144h = in_ECX + 0x2b4;\n    var_12ch = in_ECX + 0x29b;\n    var_1f0h = 0x46052c;\n    var_1ech = 0x478411;\n    var_1e8h = 0x460524;\n    var_1e4h = 0x460504;\n    var_1dch = 0x4604f4;\n    var_1d8h = 0x4604e0;\n    var_1d0h = 0x4604c8;\n    var_1cch = 0x4604a4;\n    var_1c4h = 0x460524;\n    var_1c0h = 0x460480;\n    var_1b8h = 0x460524;\n    var_1b4h = 0x460464;\n    var_1ach = 0x46045c;\n    var_1a8h = 0x460440;\n    var_1a4h = 0x478410;\n    var_1a0h = 0x46045c;\n    var_19ch = 0x460424;\n    var_198h = 0x478414;\n    var_194h = 0x4604f4;\n    var_190h = 0x4603f8;\n    var_18ch = 0x478424;\n    var_188h = 0x4603ec;\n    var_184h = 0x4603cc;\n    var_180h = 0x478420;\n    var_17ch = 0x4603bc;\n    var_178h = 0x46039c;\n    var_174h = 0x47841c;\n    var_170h = 0x460524;\n    var_16ch = 0x460380;\n    var_168h = 0x478418;\n    var_164h = 0x46036c;\n    var_160h = 0x46034c;\n    var_154h = 0x460318;\n    var_148h = 0x4602f0;\n    var_140h = 0x4602e0;\n    var_13ch = 0x4602c0;\n    var_134h = 0x4604f4;\n    var_130h = 0x4602a0;\n    var_128h = 0x460524;\n    var_124h = 0x460288;\n    var_120h = in_ECX + 700;\n    var_110h = 0x4604f4;\n    var_108h = in_ECX + 0x298;\n    var_fch = in_ECX + 9;\n    var_f0h = in_ECX + 8;\n    var_f8h = 0x460524;\n    var_c8h = 0x460524;\n    var_a4h = 0x460524;\n    var_80h = 0x460524;\n    var_74h = 0x460524;\n    var_68h = 0x460524;\n    var_e0h = 0x4601b8;\n    var_d4h = 0x4601b8;\n    var_104h = 0x46045c;\n    var_ech = 0x46045c;\n    var_b0h = 0x46045c;\n    var_60h = in_ECX + 0x798;\n    var_cch = in_ECX + 0x2b8;\n    var_78h = in_ECX + 0x79c;\n    var_48h = in_ECX + 0x7b8;\n    var_c0h = in_ECX + 0x894;\n    var_6ch = in_ECX + 0x79d;\n    var_114h = in_ECX + 0x2a4;\n    var_9ch = 0;\n    var_90h = 0;\n    var_54h = 0;\n    var_11ch = 0x460264;\n    var_118h = 0x460244;\n    var_10ch = 0x460224;\n    var_100h = 0x460204;\n    var_f4h = 0x4601e0;\n    var_e8h = 0x4601c4;\n    var_dch = 0x460194;\n    var_d8h = in_ECX + 4;\n    var_d0h = 0x46017c;\n    var_c4h = 0x460164;\n    var_bch = 0x460154;\n    var_b8h = 0x460138;\n    var_b4h = 0x47a6be;\n    var_ach = 0x46011c;\n    var_a8h = 0x4679c5;\n    var_a0h = 0x460100;\n    var_98h = 0x4600f4;\n    var_94h = 0x4600d8;\n    var_8ch = 0x4600cc;\n    var_88h = 0x4600ac;\n    var_84h = 0x47b41c;\n    var_7ch = 0x460084;\n    var_70h = 0x460060;\n    var_64h = 0x46003c;\n    var_5ch = 0x46002c;\n    var_58h = 0x460008;\n    var_50h = 0x45fffc;\n    var_4ch = 0x45ffe0;\n    var_44h = 0x4602e0;\n    if (*(arg_8h + 0xc) == 0) {\n        arg_8h = arg_8h + 0x18;\n    }\n    else {\n        arg_8h = **(arg_8h + 8);\n    }\n    if ((*(arg_8h + 8) == 4) && (*var_10h != 0x2a)) {\n        if ((var_18h == 1) || (cVar6 = fcn.00419b6a(0x28),  cVar6 != '\\0')) {\n            var_14h = 0;\n        }\n        else {\n            var_14h = fcn.00418733();\n        }\n        do {\n            iVar13 = 0;\n            var_1ch = 0;\n            var_20h = 0x23;\n            do {\n                iVar12 = var_20h + iVar13 >> 1;\n                var_24h = iVar12;\n                iVar8 = fcn.00449521(var_10h, (&var_1f0h)[iVar12 * 3]);\n                if (iVar8 < 0) {\n                    var_20h = iVar12 + -1;\n                }\n                else {\n                    if (iVar8 < 1) break;\n                    iVar13 = iVar12 + 1;\n                    var_1ch = iVar13;\n                }\n            } while (iVar13 <= var_20h);\n            if (var_20h < iVar13) break;\n            var_8h = 0;\n            piVar3 = (&var_1e8h)[iVar12 * 3];\n            var_4h = iVar12 * 0xc;\n            var_10h = piVar3;\n            if (*piVar3 == 100) {\n                var_8h = 1;\n                fcn.004165df();\n                fcn.00418bb9(var_1ch);\n                iVar12 = var_24h;\n            }\n            else if (*piVar3 == 0x44) {\n                fcn.0044985c(piVar3);\n                fcn.00416db5();\n                iVar2 = piVar3[2];\n                var_8h = 2;\n                while ((iVar2 != 0 && (iVar2 != 0x27))) {\n                    fcn.00416f01();\n                    var_8h = var_8h + 1;\n                    iVar2 = piVar3[var_8h];\n                }\n                var_8h = var_8h + 1;\n                fcn.00418c7e();\n                fcn.0044951c(var_40h);\n                iVar12 = var_24h;\n            }\n            uVar1 = var_10h[var_8h];\n            var_8h = var_8h + 1;\n            if (uVar1 < 0x6a) {\n                if (uVar1 == 0x69) {\n                    puVar5 = *(&var_1ech + var_4h);\n                    fcn.00418bb9(*puVar5);\n                    if (1 < var_18h) {\n                        cVar6 = fcn.00419b6a(0x28);\n                        uVar10 = var_14h;\n                        if (cVar6 != '\\0') {\n                            uVar10 = fcn.00418733();\n                        }\n                        *puVar5 = uVar10;\n                    }\n                }\n                else if (uVar1 == 0x23) {\n                    fcn.004165df();\n                    iVar13 = var_ch;\n                    if (var_1ch == 1) {\n                        fcn.00418bb9(*0x4679c6 == '\\0');\n                        if (1 < var_18h) {\n                            cVar6 = fcn.00419b6a(0x28);\n                            if (cVar6 != '\\0') {\n                                var_14h = fcn.00418733();\n                            }\n                            if (var_14h == 0) {\n                                fcn.00412a78();\n                            }\n                            else {\n                                fcn.00412f89();\n                            }\n                        }\n                    }\n                    else if (var_1ch == 2) {\n                        fcn.00418bb9(*0x47a6d0);\n                        if ((1 < var_18h) && (cVar6 = fcn.00419b6a(0x28),  cVar6 == '\\0')) {\n                            cVar6 = fcn.00419b6a(0x28);\n                            if (cVar6 != '\\0') {\n                                var_14h = fcn.00418733();\n                            }\n                            bVar14 = (var_14h & 1) != 0;\n                            *0x47a6bf = 1;\n                            *0x47a6d0 = bVar14;\n                            *0x47a6bc = !bVar14;\n                            bVar14 = (var_14h & 2) != 0;\n                            if (bVar14) {\n                                *0x47a6d0 = *0x47a6d0 | 2;\n                            }\n                            *0x47a6bd = !bVar14;\n                            bVar14 = (var_14h & 4) != 0;\n                            if (bVar14) {\n                                *0x47a6d0 = *0x47a6d0 | 4;\n                            }\n                            *0x47a6c2 = !bVar14;\n                            if ((var_14h & 8) != 0) {\n                                *0x47a6d0 = *0x47a6d0 | 8;\n                                *0x47a6bf = 0;\n                            }\n                        }\n                    }\n                    else {\n                        iVar12 = var_24h;\n                        if (var_1ch != 3) {\ncode_r0x0042e18f:\n                            iVar13 = (&var_1e8h)[iVar12 * 3];\n                            goto code_r0x0042e1b0;\n                        }\n                        fcn.00418bb9(*(var_ch + 0x794));\n                        uVar10 = var_14h;\n                        if (1 < var_18h) {\n                            iVar12 = fcn.004499a1(var_14h);\n                            if ((iVar12 < 1) || (4 < iVar12)) break;\n                            *(iVar13 + 0x794) = uVar10;\n                        }\n                    }\n                }\n                else if (uVar1 == 0x53) {\n                    var_4h = *(&var_1ech + var_4h);\n                    fcn.00418c7e(*var_4h);\n                    if (1 < var_18h) {\n                        fcn.00419b6a(0x28);\n                        uVar11 = fcn.00418641();\n                        fcn.00416e83(var_4h, uVar11);\n                    }\n                }\n                else if (uVar1 == 0x62) {\n                    puVar4 = *(&var_1ech + var_4h);\n                    fcn.00418bb9(*puVar4);\n                    if (1 < var_18h) {\n                        cVar6 = fcn.00419b6a(0x28);\n                        uVar10 = var_14h;\n                        if (cVar6 != '\\0') {\n                            uVar10 = fcn.00418733();\n                        }\n                        *puVar4 = uVar10 != 0;\n                    }\n                }\n                else {\n                    if (uVar1 != 99) goto code_r0x0042e18f;\n                    var_4h = *(&var_1ech + var_4h);\n                    fcn.00418c7e(var_4h);\n                    if (1 < var_18h) {\n                        cVar6 = fcn.00419b6a(0x28);\n                        if (cVar6 == '\\0') {\n                            puVar9 = fcn.00418641();\n                            uVar7 = *puVar9;\n                        }\n                        else {\n                            uVar7 = fcn.00418733();\n                        }\n                        *var_4h = uVar7;\n                    }\n                }\n            }\n            else if (uVar1 == 0x6d) {\n                var_4h = *(&var_1ech + var_4h);\n                fcn.00418bb9(*var_4h);\n                fcn.004165df();\n                if (1 < var_18h) {\n                    cVar6 = fcn.00419b6a(0x28);\n                    if (cVar6 == '\\0') {\n                        uVar10 = var_14h;\n                        if (var_1ch <= var_14h) goto code_r0x0042e164;\ncode_r0x0042e150:\n                        cVar6 = fcn.00419a96();\n                        if (cVar6 == '\\0') break;\n                    }\ncode_r0x0042e15c:\n                    uVar10 = fcn.00418733();\ncode_r0x0042e164:\n                    *var_4h = uVar10;\n                }\n            }\n            else if (uVar1 == 0x72) {\n                var_4h = *(&var_1ech + var_4h);\n                fcn.00418bb9(*var_4h);\n                fcn.004165df();\n                var_8h = var_8h + 1;\n                fcn.004165df();\n                if (1 < var_18h) {\n                    cVar6 = fcn.00419b6a(0x28);\n                    if (cVar6 != '\\0') goto code_r0x0042e15c;\n                    if ((var_14h < var_1ch) || (uVar10 = var_14h,  var_20h < var_14h)) goto code_r0x0042e150;\n                    goto code_r0x0042e164;\n                }\n            }\n            else if (uVar1 != 0x76) goto code_r0x0042e18f;\n            iVar2 = var_10h[var_8h];\n            if (iVar2 == 0) {\n                uVar11 = 0;\n                goto code_r0x0042e1be;\n            }\n            if (iVar2 != 0x2a) goto code_r0x0042e1a0;\n            var_10h = var_10h + var_8h;\n        } while( true );\n    }\n    fcn.0041fdea(0x8b, 0xffffffff);\ncode_r0x0042dbe5:\n    uVar11 = 1;\ncode_r0x0042e1be:\n    fcn.0041858e();\n    return uVar11;\ncode_r0x0042e1a0:\n    iVar13 = (&var_1e8h)[var_24h * 3] + 2;\ncode_r0x0042e1b0:\n    fcn.0041ffd0(0x66, iVar13);\n    goto code_r0x0042dbe5;\n}\n",
        "token_count": 5061
    },
    "0042e1cf": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_3h\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0042e1cf(int32_t arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    uint32_t **ppuVar5;\n    uint *puVar6;\n    int32_t in_ECX;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    uint *puVar9;\n    uint *arg_10h;\n    uint *arg_14h;\n    uint32_t var_20h;\n    uint32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint32_t var_8h;\n    char var_4h;\n    uint var_3h;\n    \n    var_8h = 0;\n    var_1ch = *(arg_8h + 0xc);\n    var_18h = in_ECX;\n    if (1 < var_1ch) {\n        puVar6 = &var_20h;\n        puVar9 = &var_14h;\n        arg_14h = &var_10h;\n        arg_10h = &var_ch;\n        uVar2 = fcn.00418641();\n        cVar1 = fcn.004327a9(in_ECX, uVar2, arg_10h, arg_14h, puVar9, puVar6);\n        if (cVar1 == '\\0') {\n            fcn.0041fdea(0x85, 0xffffffff);\n            return 1;\n        }\n    }\n    puVar6 = &var_3h;\n    iVar4 = &var_3h + 1;\n    puVar9 = &var_14h;\n    fcn.00418641();\n    cVar1 = fcn.004120ec(in_ECX, puVar9, iVar4, puVar6);\n    if (cVar1 != '\\0') {\n        if ((var_14h == 0x13) && (var_3h._2_1_ != '\\0')) {\n            var_14h = 3;\n        }\n        if (var_3h._1_1_ != '\\0') {\n            var_8h = 4;\n        }\n        if (var_3h._2_1_ != '\\0') {\n            var_8h = var_8h | 2;\n        }\n        if (var_3h != '\\0') {\n            var_8h = var_8h | 1;\n        }\n        if (var_4h != '\\0') {\n            var_8h = var_8h | 8;\n        }\n        var_10h = *(var_18h + 0x6d8);\n        uVar7 = var_14h << 0x10 | var_8h;\n        uVar8 = 0;\n        var_20h = uVar7;\n        if (var_10h != 0) {\n            var_ch = var_18h + 0x6d0;\n            do {\n                piVar3 = fcn.00421a8a();\n                if ((*piVar3 != 0) && (piVar3 = fcn.00421a8a(),  *(*piVar3 + 4) == uVar7)) {\n                    if (var_1ch == 1) {\n                        puVar6 = fcn.00421a8a();\n                        (**0x459418)(*0x467a00, **puVar6);\n                        piVar3 = fcn.00421a8a();\n                        iVar4 = *piVar3;\n                        if (iVar4 != 0) {\n                            fcn.0041fdd7();\n                            fcn.0044951c(iVar4);\n                        }\n                        puVar6 = fcn.00421a8a();\n                        *puVar6 = 0;\n                        return 0;\n                    }\n                    fcn.00421a8a();\n                    fcn.00418661();\n                    fcn.00416e71();\n                    return 0;\n                }\n                uVar8 = uVar8 + 1;\n            } while (uVar8 < var_10h);\n        }\n        if (var_1ch != 1) {\n            uVar7 = 0;\n            if (var_10h != 0) {\n                do {\n                    piVar3 = fcn.00421a8a();\n                    if (*piVar3 == 0) break;\n                    uVar7 = uVar7 + 1;\n                } while (uVar7 < var_10h);\n            }\n            iVar4 = fcn.00449614(0x20);\n            if (uVar7 == var_10h) {\n                if (iVar4 == 0) {\n                    var_1ch = 0;\n                }\n                else {\n                    var_1ch = fcn.0042e4e0();\n                }\n                fcn.00403ccb(&var_1ch);\n            }\n            else {\n                if (iVar4 == 0) {\n                    uVar2 = 0;\n                }\n                else {\n                    uVar2 = fcn.0042e4e0();\n                }\n                puVar6 = fcn.00421a8a();\n                *puVar6 = uVar2;\n            }\n            ppuVar5 = fcn.00421a8a();\n            **ppuVar5 = uVar7;\n            piVar3 = fcn.00421a8a();\n            *(*piVar3 + 4) = var_20h;\n            var_20h = fcn.00421a8a();\n            fcn.00418661();\n            fcn.00416e71();\n            fcn.00421a8a();\n            fcn.00418661();\n            fcn.00416e71();\n            puVar6 = fcn.00421a8a();\n            iVar4 = (**0x459454)(*0x467a00, **puVar6, var_8h, var_14h);\n            if (iVar4 != 0) {\n                return 0;\n            }\n            piVar3 = fcn.00421a8a();\n            iVar4 = *piVar3;\n            if (iVar4 != 0) {\n                fcn.0041fdd7();\n                fcn.0044951c(iVar4);\n            }\n            puVar6 = fcn.00421a8a();\n            *puVar6 = 0;\n        }\n    }\n    fcn.00418bb9(0);\n    return 0;\n}\n",
        "token_count": 1486
    },
    "0042e73e": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0042e73e(uint32_t arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    char cVar2;\n    int32_t iVar3;\n    int32_t extraout_ECX;\n    uint uVar4;\n    uint var_20h;\n    uint32_t var_1ch;\n    uint var_14h;\n    uint var_4h;\n    \n    iVar1 = arg_8h;\n    fcn.00418661();\n    fcn.00416dcf();\n    iVar3 = fcn.00418733();\n    if ((iVar3 == -1) || (cVar2 = fcn.00419b6a(0x28),  cVar2 != '\\0')) {\n        arg_8h = 0;\n    }\n    else {\n        arg_8h = fcn.00418733();\n        arg_8h = arg_8h | 0x10000;\n    }\n    fcn.00416d61();\n    cVar2 = fcn.00419b6a(0x28);\n    if (cVar2 == '\\0') {\n        fcn.00418661();\n    }\n    fcn.00416e71();\n    if (0x4000 < var_1ch) {\n        fcn.004171ba();\n    }\n    if (*(iVar1 + 0xc) == 4) {\n        cVar2 = fcn.00419b6a(0x28);\n        if (cVar2 != '\\0') {\n            fcn.0041fdea(0xb2, 0xffffffff);\n            uVar4 = 1;\n            goto code_r0x0042e8bb;\n        }\n        if (extraout_ECX != 4) goto code_r0x0042e89f;\n        fcn.00418692();\n        fcn.00458664();\n        uVar4 = fcn.00414b2c(0, var_20h, var_14h, arg_8h);\n    }\n    else {\ncode_r0x0042e89f:\n        uVar4 = (*_sym.imp.USER32.dll_MessageBoxW)(0, var_20h, var_14h, arg_8h);\n    }\n    fcn.00418bb9(uVar4);\n    uVar4 = 0;\ncode_r0x0042e8bb:\n    fcn.0044951c(var_14h);\n    fcn.0044951c(var_20h);\n    return uVar4;\n}\n",
        "token_count": 557
    },
    "0042ed73": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0042ed73(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint in_stack_ffffffcc;\n    uint in_stack_ffffffd0;\n    uint noname_2;\n    uint *arg_14h;\n    uint arg_18h;\n    uint in_stack_ffffffe0;\n    uint in_stack_ffffffe4;\n    uint var_4h;\n    \n    fcn.00418661();\n    fcn.00416dcf();\n    iVar1 = fcn.00416c47(in_stack_ffffffe0, in_stack_ffffffe4);\n    if (iVar1 == 0) {\n        fcn.00421898(0);\n        fcn.00418c7e(0x45bfe0);\n    }\n    else {\n        arg_18h = 0;\n        arg_14h = &fcn.0042ed73::arg_8h;\n        noname_2 = 0x42edca;\n        fcn.00418661();\n        fcn.00416dcf();\n        fcn.00416b63(in_stack_ffffffcc, in_stack_ffffffd0, noname_2, arg_14h, arg_18h);\n        fcn.00418a19(arg_8h);\n    }\n    return 0;\n}\n",
        "token_count": 293
    },
    "0042f3db": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0042f3db(uint arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    \n    uVar1 = fcn.00418641();\n    uVar1 = fcn.00416a25(uVar1);\n    iVar2 = sub.WSOCK32.dll_gethostbyname(uVar1);\n    fcn.0044951c(uVar1);\n    if (iVar2 == 0) {\n        sub.WSOCK32.dll_WSAGetLastError(0);\n        fcn.00421898();\n        fcn.00418c7e(0x45bfe0);\n    }\n    else {\n        fcn.0044a6b0(&arg_8h, **(iVar2 + 0xc), 4);\n        uVar1 = sub.WSOCK32.dll_inet_ntoa(arg_8h);\n        uVar1 = fcn.004169d1(uVar1);\n        fcn.00418c7e(uVar1);\n        fcn.0044951c(uVar1);\n    }\n    return 0;\n}\n",
        "token_count": 245
    },
    "0042f478": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0042f478(int32_t arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint var_114h;\n    int32_t var_110h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    iVar1 = fcn.00418733();\n    var_8h = fcn.00418733();\n    fcn.00418c7e(0x45bfe0);\n    if (iVar1 != -1) {\n        var_10h = *(var_4h + 0x894) / 1000;\n        var_114h = 1;\n        var_ch = *(var_4h + 0x894) - var_10h;\n        var_110h = iVar1;\n        iVar2 = sub.WSOCK32.dll_select(0, &var_114h, 0, 0, &var_10h);\n        if (iVar2 != -1) {\n            iVar2 = fcn.00449614(var_8h + 1);\n            iVar3 = sub.WSOCK32.dll___WSAFDIsSet(iVar1, &var_114h);\n            if (iVar3 != 0) {\n                iVar1 = sub.WSOCK32.dll_recv(iVar1, iVar2, var_8h, 0);\n                if (iVar1 == -1) {\n                    uVar4 = 0;\n                    sub.WSOCK32.dll_WSAGetLastError(0);\n                }\n                else {\n                    if (iVar1 != 0) {\n                        if ((*(arg_8h + 0xc) < 3) || (iVar3 = fcn.00418733(),  iVar3 == 0)) {\n                            *(iVar2 + iVar1) = 0;\n                            iVar3 = fcn.00449fa0(iVar2);\n                            if (iVar3 == iVar1) {\n                                uVar4 = fcn.004169d1(iVar2);\n                                fcn.00418c7e(uVar4);\n                                fcn.0044951c(uVar4);\n                                goto code_r0x0042f5ea;\n                            }\n                        }\n                        iVar3 = iVar2;\n                        uVar4 = fcn.00418bd2();\n                        fcn.0044a6b0(uVar4, iVar3, iVar1);\n                        goto code_r0x0042f5ea;\n                    }\n                    uVar4 = 0;\n                }\n                fcn.00421898(uVar4);\n            }\ncode_r0x0042f5ea:\n            fcn.0044951c(iVar2);\n            return 0;\n        }\n        sub.WSOCK32.dll_WSAGetLastError(0);\n    }\n    fcn.00421898();\n    return 0;\n}\n",
        "token_count": 650
    },
    "0042f5fc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0042f5fc(int32_t arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    ulong uVar3;\n    uint var_4h;\n    \n    uVar1 = fcn.00418733();\n    fcn.00418678();\n    uVar3 = fcn.00418606();\n    iVar2 = sub.WSOCK32.dll_send(uVar1, uVar3 >> 0x20, uVar3, 0);\n    if (iVar2 == -1) {\n        fcn.00418bb9(0);\n        sub.WSOCK32.dll_WSAGetLastError(0);\n        fcn.00421898();\n    }\n    else {\n        fcn.00418bb9(iVar2);\n    }\n    return 0;\n}\n",
        "token_count": 183
    },
    "0042f973": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0042f973(uint arg_8h, uint arg_ch, int32_t hostshort)\n\n{\n    ushort uVar1;\n    uint uVar2;\n    int32_t iVar3;\n    ushort *unaff_ESI;\n    \n    *unaff_ESI = 2;\n    uVar2 = fcn.00416a25(arg_ch);\n    iVar3 = sub.WSOCK32.dll_inet_addr(uVar2);\n    fcn.0044951c(uVar2);\n    if (((iVar3 == -1) || (*(unaff_ESI + 2) = iVar3,  hostshort < 1)) || (0xffff < hostshort)) {\n        fcn.00421898(0);\n        uVar2 = 0;\n    }\n    else {\n        uVar1 = sub.WSOCK32.dll_htons(hostshort);\n        unaff_ESI[1] = uVar1;\n        uVar2 = 1;\n    }\n    return uVar2;\n}\n",
        "token_count": 218
    },
    "0042f9dd": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0042f9dd(int32_t arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint arg_ch_00;\n    ulong uVar4;\n    uint var_14h;\n    uint var_4h;\n    \n    iVar2 = fcn.0041a132(1);\n    if (iVar2 == 0) {\n        fcn.00418bb9(0);\n    }\n    else {\n        iVar2 = fcn.00418733();\n        if (iVar2 == 0x2b594d1) {\n            fcn.0041a132(1);\n            uVar3 = fcn.00418733();\n            fcn.0041a132(1);\n            arg_ch_00 = fcn.00418641();\n            cVar1 = fcn.0042f973(var_4h, arg_ch_00, uVar3);\n            if (cVar1 != '\\0') {\n                fcn.0041a132(1);\n                uVar3 = fcn.00418733();\n                fcn.00418678();\n                uVar4 = fcn.00418606();\n                iVar2 = sub.WSOCK32.dll_sendto(uVar3, uVar4 >> 0x20, uVar4, 0, &var_14h, 0x10);\n                if (iVar2 == -1) {\n                    fcn.00418bb9(0);\n                    sub.WSOCK32.dll_WSAGetLastError(0);\n                    goto code_r0x0042fa35;\n                }\n            }\n            fcn.00418bb9();\n            return 0;\n        }\n        fcn.00418bb9(0);\n    }\ncode_r0x0042fa35:\n    fcn.00421898();\n    return 0;\n}\n",
        "token_count": 411
    },
    "0042fb28": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0042fb28(int32_t arg_8h, uint arg_ch)\n\n{\n    ushort uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t iVar5;\n    uint var_12ch;\n    int32_t var_128h;\n    uint var_28h;\n    ushort var_24h;\n    ushort uStack38;\n    ushort uStack36;\n    uint uStack34;\n    ushort uStack30;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = fcn.00418733();\n    fcn.00418c7e(0x45bfe0);\n    iVar2 = fcn.0041a132(1);\n    if ((iVar2 != 0) && (iVar2 = fcn.00418733(),  iVar2 == 0x2b594d1)) {\n        fcn.0041a132(1);\n        var_ch = fcn.00418733();\n        var_28h._0_2_ = 0;\n        var_28h._2_2_ = 0;\n        var_24h = 0;\n        uStack38 = 0;\n        uStack36 = 0;\n        uStack34 = 0;\n        uStack30 = 0;\n        var_10h = 0x10;\n        if (var_ch != -1) {\n            var_18h = 0;\n            var_14h = 100000;\n            var_12ch = 1;\n            var_128h = var_ch;\n            iVar3 = sub.WSOCK32.dll_select(0, &var_12ch, 0, 0, &var_18h);\n            iVar2 = var_4h;\n            if (iVar3 != -1) {\n                var_4h = fcn.00449614(var_4h + 1);\n                iVar3 = sub.WSOCK32.dll___WSAFDIsSet(var_ch, &var_12ch);\n                if (iVar3 == 0) {\ncode_r0x0042fd4b:\n                    fcn.0044951c(var_4h);\n                    return 0;\n                }\n                var_ch = sub.WSOCK32.dll_recvfrom(var_ch, var_4h, iVar2, 0, &var_28h, &var_10h);\n                if (var_ch != -1) {\n                    fcn.0041a132(1);\n                    uVar4 = sub.WSOCK32.dll_inet_ntoa(CONCAT22(uStack38, var_24h));\n                    uVar4 = fcn.004169d1(uVar4);\n                    fcn.00418c7e(uVar4);\n                    fcn.0044951c(uVar4);\n                    fcn.0041a132(1);\n                    uVar1 = sub.WSOCK32.dll_ntohs(CONCAT22(var_24h, var_28h._2_2_));\n                    fcn.00418bb9(uVar1);\n                    if ((*(arg_8h + 0xc) < 3) || (iVar5 = fcn.00418733(),  iVar3 = var_4h,  iVar2 = var_ch,  iVar5 == 0)\n                       ) {\n                        iVar3 = var_4h;\n                        iVar2 = var_ch;\n                        *(var_4h + var_ch) = 0;\n                        iVar5 = fcn.00449fa0(var_4h);\n                        if (iVar5 == iVar2) {\n                            uVar4 = fcn.004169d1(iVar3);\n                            fcn.00418c7e(uVar4);\n                            fcn.0044951c(uVar4);\n                            goto code_r0x0042fd4b;\n                        }\n                    }\n                    uVar4 = fcn.00418bd2();\n                    fcn.0044a6b0(uVar4, iVar3, iVar2);\n                    goto code_r0x0042fd4b;\n                }\n            }\n            sub.WSOCK32.dll_WSAGetLastError(0);\n        }\n    }\n    fcn.00421898();\n    return 0;\n}\n",
        "token_count": 960
    },
    "0042fd5d": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0042fd5d(int32_t arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    uint hostshort;\n    uint arg_ch_00;\n    int32_t iVar2;\n    uint var_18h;\n    uint var_8h;\n    int32_t var_4h;\n    \n    hostshort = fcn.00418733();\n    arg_ch_00 = fcn.00418641();\n    cVar1 = fcn.0042f973(var_8h, arg_ch_00, hostshort);\n    if (cVar1 == '\\0') {\n        fcn.00418bb9(0xffffffff);\n    }\n    else {\n        var_4h = sub.WSOCK32.dll_socket(2, 2, 0x11);\n        fcn.0041a000(1);\n        if (var_4h == -1) {\n            sub.WSOCK32.dll_WSAGetLastError(0);\n            fcn.00421898();\n        }\n        else {\n            iVar2 = sub.WSOCK32.dll_bind(var_4h, &var_18h, 0x10);\n            if (iVar2 != -1) {\n                fcn.0041a132(1);\n                fcn.00418bb9(0x2b594d1);\n                fcn.0041a132(1);\n                fcn.00418bb9(var_4h);\n                fcn.0041a132(1);\n                fcn.00418661();\n                fcn.00418cb1();\n                fcn.0041a132(1);\n                fcn.00418661();\n                fcn.00418cb1();\n                return 0;\n            }\n            sub.WSOCK32.dll_WSAGetLastError(0);\n            fcn.00421898();\n            sub.WSOCK32.dll_closesocket(var_4h);\n        }\n        fcn.0041a132(1);\n        fcn.00418bb9(0xffffffff);\n    }\n    return 0;\n}\n",
        "token_count": 447
    },
    "004300ae": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "link function at runtime on Windows"
        ],
        "decompiled_code": "\nvoid fcn.004300ae(void)\n\n{\n    int32_t iVar1;\n    int32_t *unaff_ESI;\n    \n    if (unaff_ESI[2] == 0) {\n        iVar1 = (*_sym.imp.KERNEL32.DLL_LoadLibraryA)(0x45ff78);\n        *unaff_ESI = iVar1;\n        if (iVar1 != 0) {\n            iVar1 = (*_sym.imp.KERNEL32.DLL_GetProcAddress)(iVar1, 0x45ff50);\n            unaff_ESI[2] = iVar1;\n        }\n    }\n    return;\n}\n",
        "token_count": 133
    },
    "0043021f": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "link function at runtime on Windows"
        ],
        "decompiled_code": "\nvoid fcn.0043021f(void)\n\n{\n    int32_t iVar1;\n    int32_t *unaff_ESI;\n    \n    if (unaff_ESI[2] == 0) {\n        iVar1 = (*_sym.imp.KERNEL32.DLL_LoadLibraryA)(0x45c1f4);\n        *unaff_ESI = iVar1;\n        if (iVar1 != 0) {\n            iVar1 = (*_sym.imp.KERNEL32.DLL_GetProcAddress)(iVar1, 0x45ff34);\n            unaff_ESI[2] = iVar1;\n        }\n    }\n    return;\n}\n",
        "token_count": 136
    },
    "00430246": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "link function at runtime on Windows"
        ],
        "decompiled_code": "\nvoid fcn.00430246(void)\n\n{\n    int32_t iVar1;\n    int32_t *unaff_ESI;\n    \n    if (unaff_ESI[2] == 0) {\n        iVar1 = (*_sym.imp.KERNEL32.DLL_LoadLibraryA)(0x45ff78);\n        *unaff_ESI = iVar1;\n        if (iVar1 != 0) {\n            iVar1 = (*_sym.imp.KERNEL32.DLL_GetProcAddress)(iVar1, 0x45fe60);\n            unaff_ESI[2] = iVar1;\n        }\n    }\n    return;\n}\n",
        "token_count": 133
    },
    "0043026d": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "link function at runtime on Windows"
        ],
        "decompiled_code": "\nvoid fcn.0043026d(void)\n\n{\n    int32_t iVar1;\n    int32_t *unaff_ESI;\n    \n    if (unaff_ESI[2] == 0) {\n        iVar1 = (*_sym.imp.KERNEL32.DLL_LoadLibraryA)(0x45ff78);\n        *unaff_ESI = iVar1;\n        if (iVar1 != 0) {\n            iVar1 = (*_sym.imp.KERNEL32.DLL_GetProcAddress)(iVar1, 0x45feb8);\n            unaff_ESI[2] = iVar1;\n        }\n    }\n    return;\n}\n",
        "token_count": 134
    },
    "00430294": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "link function at runtime on Windows"
        ],
        "decompiled_code": "\nvoid fcn.00430294(void)\n\n{\n    int32_t iVar1;\n    int32_t *unaff_ESI;\n    \n    if (unaff_ESI[2] == 0) {\n        iVar1 = (*_sym.imp.KERNEL32.DLL_LoadLibraryA)(0x45ff78);\n        *unaff_ESI = iVar1;\n        if (iVar1 != 0) {\n            iVar1 = (*_sym.imp.KERNEL32.DLL_GetProcAddress)(iVar1, 0x45ff40);\n            unaff_ESI[2] = iVar1;\n        }\n    }\n    return;\n}\n",
        "token_count": 133
    },
    "004302bb": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "link function at runtime on Windows"
        ],
        "decompiled_code": "\nvoid fcn.004302bb(void)\n\n{\n    int32_t iVar1;\n    int32_t *unaff_ESI;\n    \n    if (unaff_ESI[2] == 0) {\n        iVar1 = (*_sym.imp.KERNEL32.DLL_LoadLibraryA)(0x45ff78);\n        *unaff_ESI = iVar1;\n        if (iVar1 != 0) {\n            iVar1 = (*_sym.imp.KERNEL32.DLL_GetProcAddress)(iVar1, 0x45fe20);\n            unaff_ESI[2] = iVar1;\n        }\n    }\n    return;\n}\n",
        "token_count": 133
    },
    "004302e2": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "link function at runtime on Windows"
        ],
        "decompiled_code": "\nvoid fcn.004302e2(void)\n\n{\n    int32_t iVar1;\n    int32_t *unaff_ESI;\n    \n    if (unaff_ESI[2] == 0) {\n        iVar1 = (*_sym.imp.KERNEL32.DLL_LoadLibraryA)(0x45c5d8);\n        *unaff_ESI = iVar1;\n        if (iVar1 != 0) {\n            iVar1 = (*_sym.imp.KERNEL32.DLL_GetProcAddress)(iVar1, 0x45ff1c);\n            unaff_ESI[2] = iVar1;\n        }\n    }\n    return;\n}\n",
        "token_count": 137
    },
    "00430309": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "link function at runtime on Windows"
        ],
        "decompiled_code": "\nvoid fcn.00430309(void)\n\n{\n    int32_t iVar1;\n    int32_t *unaff_ESI;\n    \n    if (unaff_ESI[2] == 0) {\n        iVar1 = (*_sym.imp.KERNEL32.DLL_LoadLibraryA)(0x45ff10);\n        *unaff_ESI = iVar1;\n        if (iVar1 != 0) {\n            iVar1 = (*_sym.imp.KERNEL32.DLL_GetProcAddress)(iVar1, 0x45ff00);\n            unaff_ESI[2] = iVar1;\n        }\n    }\n    return;\n}\n",
        "token_count": 133
    },
    "00430330": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "link function at runtime on Windows"
        ],
        "decompiled_code": "\nvoid fcn.00430330(void)\n\n{\n    int32_t iVar1;\n    int32_t *unaff_ESI;\n    \n    if (unaff_ESI[2] == 0) {\n        iVar1 = (*_sym.imp.KERNEL32.DLL_LoadLibraryA)(0x45ff10);\n        *unaff_ESI = iVar1;\n        if (iVar1 != 0) {\n            iVar1 = (*_sym.imp.KERNEL32.DLL_GetProcAddress)(iVar1, 0x45fef0);\n            unaff_ESI[2] = iVar1;\n        }\n    }\n    return;\n}\n",
        "token_count": 133
    },
    "00430357": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "link function at runtime on Windows"
        ],
        "decompiled_code": "\nvoid fcn.00430357(void)\n\n{\n    int32_t iVar1;\n    int32_t *unaff_ESI;\n    \n    if (unaff_ESI[2] == 0) {\n        iVar1 = (*_sym.imp.KERNEL32.DLL_LoadLibraryA)(0x45ff10);\n        *unaff_ESI = iVar1;\n        if (iVar1 != 0) {\n            iVar1 = (*_sym.imp.KERNEL32.DLL_GetProcAddress)(iVar1, 0x45fee0);\n            unaff_ESI[2] = iVar1;\n        }\n    }\n    return;\n}\n",
        "token_count": 133
    },
    "0043037e": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "link function at runtime on Windows"
        ],
        "decompiled_code": "\nvoid fcn.0043037e(void)\n\n{\n    int32_t iVar1;\n    int32_t *unaff_ESI;\n    \n    if (unaff_ESI[2] == 0) {\n        iVar1 = (*_sym.imp.KERNEL32.DLL_LoadLibraryA)(0x45ff78);\n        *unaff_ESI = iVar1;\n        if (iVar1 != 0) {\n            iVar1 = (*_sym.imp.KERNEL32.DLL_GetProcAddress)(iVar1, 0x45ff64);\n            unaff_ESI[2] = iVar1;\n        }\n    }\n    return;\n}\n",
        "token_count": 134
    },
    "004303a5": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "link function at runtime on Windows"
        ],
        "decompiled_code": "\nvoid fcn.004303a5(void)\n\n{\n    int32_t iVar1;\n    int32_t *unaff_ESI;\n    \n    if (unaff_ESI[2] == 0) {\n        iVar1 = (*_sym.imp.KERNEL32.DLL_LoadLibraryA)(0x45ff78);\n        *unaff_ESI = iVar1;\n        if (iVar1 != 0) {\n            iVar1 = (*_sym.imp.KERNEL32.DLL_GetProcAddress)(iVar1, 0x45fecc);\n            unaff_ESI[2] = iVar1;\n        }\n    }\n    return;\n}\n",
        "token_count": 134
    },
    "004303cc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "link function at runtime on Windows"
        ],
        "decompiled_code": "\nvoid fcn.004303cc(void)\n\n{\n    int32_t iVar1;\n    int32_t *unaff_ESI;\n    \n    if (unaff_ESI[2] == 0) {\n        iVar1 = (*_sym.imp.KERNEL32.DLL_LoadLibraryA)(0x45ff78);\n        *unaff_ESI = iVar1;\n        if (iVar1 != 0) {\n            iVar1 = (*_sym.imp.KERNEL32.DLL_GetProcAddress)(iVar1, 0x45fe70);\n            unaff_ESI[2] = iVar1;\n        }\n    }\n    return;\n}\n",
        "token_count": 133
    },
    "004303f3": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "link function at runtime on Windows"
        ],
        "decompiled_code": "\nvoid fcn.004303f3(void)\n\n{\n    int32_t iVar1;\n    int32_t *unaff_ESI;\n    \n    if (unaff_ESI[2] == 0) {\n        iVar1 = (*_sym.imp.KERNEL32.DLL_LoadLibraryA)(0x45ff78);\n        *unaff_ESI = iVar1;\n        if (iVar1 != 0) {\n            iVar1 = (*_sym.imp.KERNEL32.DLL_GetProcAddress)(iVar1, 0x45fe80);\n            unaff_ESI[2] = iVar1;\n        }\n    }\n    return;\n}\n",
        "token_count": 134
    },
    "0043041a": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "link function at runtime on Windows"
        ],
        "decompiled_code": "\nvoid fcn.0043041a(void)\n\n{\n    int32_t iVar1;\n    int32_t *unaff_ESI;\n    \n    if (unaff_ESI[2] == 0) {\n        iVar1 = (*_sym.imp.KERNEL32.DLL_LoadLibraryA)(0x45ff78);\n        *unaff_ESI = iVar1;\n        if (iVar1 != 0) {\n            iVar1 = (*_sym.imp.KERNEL32.DLL_GetProcAddress)(iVar1, 0x45fea4);\n            unaff_ESI[2] = iVar1;\n        }\n    }\n    return;\n}\n",
        "token_count": 134
    },
    "00430441": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "link function at runtime on Windows"
        ],
        "decompiled_code": "\nvoid fcn.00430441(void)\n\n{\n    int32_t iVar1;\n    int32_t *unaff_ESI;\n    \n    if (unaff_ESI[2] == 0) {\n        iVar1 = (*_sym.imp.KERNEL32.DLL_LoadLibraryA)(0x45ff78);\n        *unaff_ESI = iVar1;\n        if (iVar1 != 0) {\n            iVar1 = (*_sym.imp.KERNEL32.DLL_GetProcAddress)(iVar1, 0x45fe90);\n            unaff_ESI[2] = iVar1;\n        }\n    }\n    return;\n}\n",
        "token_count": 133
    },
    "00430468": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "link function at runtime on Windows"
        ],
        "decompiled_code": "\nvoid fcn.00430468(void)\n\n{\n    int32_t iVar1;\n    int32_t *unaff_ESI;\n    \n    if (unaff_ESI[2] == 0) {\n        iVar1 = (*_sym.imp.KERNEL32.DLL_LoadLibraryA)(0x45ff78);\n        *unaff_ESI = iVar1;\n        if (iVar1 != 0) {\n            iVar1 = (*_sym.imp.KERNEL32.DLL_GetProcAddress)(iVar1, 0x45fe34);\n            unaff_ESI[2] = iVar1;\n        }\n    }\n    return;\n}\n",
        "token_count": 133
    },
    "0043048f": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "link function at runtime on Windows"
        ],
        "decompiled_code": "\nvoid fcn.0043048f(void)\n\n{\n    int32_t iVar1;\n    int32_t *unaff_ESI;\n    \n    if (unaff_ESI[2] == 0) {\n        iVar1 = (*_sym.imp.KERNEL32.DLL_LoadLibraryA)(0x45ff78);\n        *unaff_ESI = iVar1;\n        if (iVar1 != 0) {\n            iVar1 = (*_sym.imp.KERNEL32.DLL_GetProcAddress)(iVar1, 0x45fe4c);\n            unaff_ESI[2] = iVar1;\n        }\n    }\n    return;\n}\n",
        "token_count": 135
    },
    "00430569": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00430569(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t *unaff_ESI;\n    uint unaff_retaddr;\n    \n    if (param_1 == 0) {\n        *unaff_ESI = 0;\n    }\n    else {\n        iVar1 = fcn.0044985c(param_1);\n        iVar1 = (*_sym.imp.ole32.dll_CoTaskMemAlloc)((iVar1 + 1) * 2);\n        *unaff_ESI = iVar1;\n        if (iVar1 == 0) {\n            return 0x8007000e;\n        }\n        fcn.004495f8(iVar1, unaff_retaddr);\n    }\n    return 0;\n}\n",
        "token_count": 167
    },
    "0043081f": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0043081f(uint lpiid, uint arg_ch)\n\n{\n    uint32_t uVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint lpValueName;\n    uint lpName;\n    uint var_28h;\n    uint var_20h;\n    uint var_14h;\n    uint hKey;\n    int32_t var_ch;\n    int32_t dwIndex;\n    uint32_t lpcbData;\n    \n    dwIndex = 0;\n    var_ch = -0x7fffbffe;\n    lpcbData = 0x28;\n    fcn.00416d61();\n    pcVar2 = _sym.imp.ADVAPI32.dll_RegOpenKeyExW;\n    iVar3 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExW)(0x80000000, 0x460a60, 0, 0x20019, &hKey);\n    if (iVar3 == 0) {\n        while( true ) {\n            iVar3 = (*_sym.imp.ADVAPI32.dll_RegEnumKeyExW)(hKey, dwIndex, &lpName, &lpcbData, 0, 0, 0, &var_28h);\n            if (iVar3 != 0) break;\n            *(&lpName + lpcbData * 2) = 0;\n            lpcbData = 0x1fe;\n            fcn.00416e83(&var_20h, 0x460a48);\n            fcn.00417064(&lpName);\n            iVar3 = (*pcVar2)(0x80000000, var_20h, 0, 0x20019, &var_14h);\n            if (iVar3 == 0) {\n                iVar3 = (*_sym.imp.ADVAPI32.dll_RegQueryValueExW)(var_14h, 0, 0, 0, &lpValueName, &lpcbData);\n                if (iVar3 == 0) {\n                    uVar1 = lpcbData & 0xfffffffe;\n                    lpcbData = lpcbData >> 1;\n                    *(&lpValueName + uVar1) = 0;\n                    iVar3 = fcn.00449521(&lpValueName, arg_ch);\n                    if (iVar3 == 0) {\n                        var_ch = (*_sym.imp.ole32.dll_IIDFromString)(&lpName, lpiid);\n                    }\n                }\n                (*_sym.imp.ADVAPI32.dll_RegCloseKey)(var_14h);\n            }\n            if (var_ch == 0) break;\n            dwIndex = dwIndex + 1;\n            lpcbData = 0x28;\n        }\n        (*_sym.imp.ADVAPI32.dll_RegCloseKey)(hKey);\n        iVar3 = var_ch;\n    }\n    else {\n        iVar3 = -0x7fffbffe;\n    }\n    fcn.0044951c(var_20h);\n    return iVar3;\n}\n",
        "token_count": 654
    },
    "00430cb0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00430cb0(uint arg_8h, uint arg_ch, uint arg_10h, int32_t arg_14h)\n\n{\n    uint uVar1;\n    uint var_44h;\n    uint var_1ch;\n    uint var_ch;\n    \n    fcn.00417dba();\n    fcn.00416d61();\n    fcn.00416e83(&var_ch, 0x4609d0);\n    fcn.00417064(arg_10h);\n    if (arg_14h != 0) {\n        fcn.00417064(0x45c9ac);\n        fcn.00417064(arg_14h);\n    }\n    fcn.00418330(var_ch);\n    fcn.00417dfb(&var_1ch);\n    fcn.0041858e();\n    fcn.00418330(0x45bfe0);\n    fcn.00417dfb(&var_1ch);\n    fcn.0041858e();\n    uVar1 = fcn.0043bba1(&var_44h, arg_ch);\n    fcn.0044951c(var_ch);\n    fcn.00417ddb();\n    return uVar1;\n}\n",
        "token_count": 271
    },
    "00430d6b": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00430d6b(uint arg_8h, uint32_t arg_ch, int32_t arg_10h, uint arg_14h)\n\n{\n    code *pcVar1;\n    int32_t *piVar2;\n    uint16_t *in_EAX;\n    int32_t iVar3;\n    uint extraout_EDX;\n    uint uVar4;\n    uint32_t uVar5;\n    uint var_24h;\n    uint var_1ch;\n    uint var_14h;\n    uint var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    piVar2 = *0x478404;\n    var_14h = 0;\n    var_ch = 1;\n    var_8h = 0;\n    var_4h = arg_ch;\n    if (*0x478408 == '\\0') {\n        fcn.00421898(0);\n        uVar4 = extraout_EDX;\n        if (arg_14h == '\\0') {\n            fcn.0041858e();\n            return 0;\n        }\n    }\n    else {\n        *(*0x478404 + 0xe) = 3;\n        piVar2[0x10] = arg_ch;\n        *(piVar2 + 0x26) = 3;\n        iVar3 = (*_sym.imp.KERNEL32.DLL_GetLastError)();\n        piVar2 = *0x478404;\n        (*0x478404)[0x28] = iVar3;\n        *(piVar2 + 0x2a) = 3;\n        iVar3 = fcn.0040fd91();\n        piVar2[0x2c] = iVar3;\n        pcVar1 = *0x4593d0;\n        if (in_EAX != NULL) {\n            var_1ch = *(in_EAX + 2);\n            var_24h._0_2_ = 8;\n            (**0x4593d0)(piVar2 + 0x1a, &var_24h);\n            var_1ch = *(in_EAX + 4);\n            (*pcVar1)(*0x478404 + 0x16, &var_24h);\n            var_1ch = *(in_EAX + 6);\n            (*pcVar1)(*0x478404 + 0x1e, &var_24h);\n            piVar2 = *0x478404;\n            *(*0x478404 + 0x22) = 3;\n            piVar2[0x24] = *(in_EAX + 8);\n            *(piVar2 + 0x2e) = 3;\n            if (*in_EAX == 0) {\n                uVar5 = *(in_EAX + 0xe);\n            }\n            else {\n                uVar5 = *in_EAX;\n            }\n            piVar2[0x30] = uVar5;\n            if (uVar5 != 0) {\n                var_4h = uVar5;\n            }\n        }\n        if (arg_10h == 0) {\n            fcn.00420169(var_4h);\n        }\n        fcn.00418c7e();\n        fcn.004305a7(&var_14h, *0x478404 + 0x12);\n        (**(**0x478404 + 0x20))();\n        uVar4 = 0;\n        fcn.00421898(0);\n    }\n    fcn.0041858e();\n    return uVar4;\n}\n",
        "token_count": 784
    },
    "00431eb5": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00431eb5(uint arg_8h, uint32_t arg_ch, int32_t arg_10h, uint32_t arg_14h, int32_t arg_18h)\n\n{\n    uint32_t uVar1;\n    int32_t *piVar2;\n    code *pcVar3;\n    code *pcVar4;\n    char cVar5;\n    int32_t in_EDX;\n    int32_t *extraout_EDX;\n    int16_t *piVar6;\n    uint32_t uVar7;\n    uint *arg_8h_00;\n    int32_t iVar8;\n    uint uVar9;\n    uint var_64h;\n    uint pvargDest;\n    int16_t *var_34h;\n    uint *var_30h;\n    uint32_t var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint32_t var_1ch;\n    int16_t *var_18h;\n    int32_t var_14h;\n    int16_t *var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    \n    uVar1 = *(arg_18h + 0xc);\n    var_34h = NULL;\n    var_30h = NULL;\n    var_2ch = 0;\n    var_28h = 0;\n    var_20h = 0xfffffffd;\n    var_ch = 0;\n    var_14h = 0;\n    var_8h = 0;\n    var_1ch = uVar1;\n    if (((in_EDX == 0) || (arg_10h == 0)) || (arg_14h == 0)) {\n        uVar9 = 0x460998;\n        iVar8 = 1;\ncode_r0x00432168:\n        iVar8 = fcn.00430d6b(arg_8h, iVar8, uVar9, 1);\n        return iVar8;\n    }\n    cVar5 = fcn.00419b83();\n    if (cVar5 == '\\0') {\n        uVar9 = 0x4605e0;\n        iVar8 = 2;\n        goto code_r0x00432168;\n    }\n    piVar2 = *(*extraout_EDX + 8);\n    if (piVar2 == NULL) {\n        uVar9 = 0x460998;\n        iVar8 = 4;\n        goto code_r0x00432168;\n    }\n    iVar8 = fcn.0044985c(arg_14h);\n    if (iVar8 == 0) {\n        var_ch = 0;\n    }\n    else {\n        var_8h = fcn.004161b7(arg_14h);\n        iVar8 = (**(*piVar2 + 0x14))(piVar2, 0x45a940, &var_8h, 1, 0x400, &var_ch);\n        if (iVar8 < 0) {\n            fcn.0044951c(var_8h);\n            uVar9 = 0;\n            goto code_r0x00432168;\n        }\n    }\n    var_10h = fcn.00449614(uVar1 * 0x10 + 0x10);\n    arg_14h = 0;\n    if (uVar1 != 0) {\n        var_18h = var_10h + uVar1 * 8 + -8;\n        do {\n            piVar6 = var_18h;\n            uVar9 = fcn.0040f269();\n            iVar8 = fcn.004305a7(uVar9, piVar6);\n            if (iVar8 != 0) {\n                var_14h = fcn.00430d6b(arg_8h, 5, 0x4605a0, 1);\n                pcVar3 = *0x4593cc;\n                piVar6 = var_10h;\n                if (var_14h != 0) goto joined_r0x00432123;\n                break;\n            }\n            arg_14h = arg_14h + 1;\n            var_18h = var_18h + -8;\n        } while (arg_14h < uVar1);\n    }\n    var_34h = var_10h;\n    if ((arg_ch & 0xc) != 0) {\n        var_30h = &var_20h;\n        var_28h = 1;\n    }\n    var_2ch = uVar1;\n    (**0x4593d4)(&pvargDest);\n    fcn.00449b00(&var_64h, 0, 0x20);\n    iVar8 = (**(*piVar2 + 0x18))(piVar2, var_ch, 0x45a940, 0x800, arg_ch, &var_34h, &pvargDest, &var_64h, &var_24h);\n    if (iVar8 == -0x7ffdfffd) {\n        arg_14h._0_2_ = arg_ch & 0xc;\n        if (arg_14h != 0) {\n            iVar8 = (**(*piVar2 + 0x18))\n                              (piVar2, var_ch, 0x45a940, 0x800, arg_ch ^ 0xc, &var_34h, &pvargDest, &var_64h, &var_24h);\n            goto code_r0x00432085;\n        }\n    }\n    else {\ncode_r0x00432085:\n        uVar7 = 0;\n        if (-1 < iVar8) {\n            arg_8h_00 = &pvargDest;\n            fcn.00418cde(arg_8h_00);\n            if (var_1ch != 0) {\n                piVar6 = var_10h + uVar1 * 8 + -8;\n                do {\n                    iVar8 = fcn.0040f269();\n                    if (*(iVar8 + 8) == 6) {\n                        fcn.0040f269();\n                        iVar8 = fcn.0041886c();\n                        if (iVar8 != 0) {\n                            fcn.0040f269(piVar6);\n                            fcn.0041886c();\n                            goto code_r0x00432104;\n                        }\n                    }\n                    else {\n                        fcn.0040f269(piVar6);\ncode_r0x00432104:\n                        fcn.00418cde(arg_8h_00);\n                    }\n                    uVar7 = uVar7 + 1;\n                    piVar6 = piVar6 + -8;\n                } while (uVar7 < var_1ch);\n            }\n            goto code_r0x00432114;\n        }\n        if (iVar8 == -0x7ffdfff7) {\n            iVar8 = -0x7ffdfff7;\n        }\n    }\n    var_14h = fcn.00430d6b(arg_8h, iVar8, 0, 1);\ncode_r0x00432114:\n    (**0x4593cc)(&pvargDest);\n    uVar1 = var_1ch;\n    pcVar3 = *0x4593cc;\n    piVar6 = var_10h;\njoined_r0x00432123:\n    for (; pcVar4 = *0x4593cc,  *0x4593cc = pcVar3,  uVar1 != 0; uVar1 = uVar1 - 1) {\n        if (*piVar6 == 0xc) {\n            (*pcVar4)(*(piVar6 + 4));\n        }\n        (*pcVar4)(piVar6);\n        pcVar3 = *0x4593cc;\n        piVar6 = piVar6 + 8;\n        *0x4593cc = pcVar4;\n    }\n    fcn.0044951c(var_10h);\n    if (var_8h == 0) {\n        return var_14h;\n    }\n    fcn.0044951c(var_8h);\n    return var_14h;\n}\n",
        "token_count": 1796
    },
    "00432206": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00432206(uint arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint *puVar5;\n    uint uVar6;\n    uint in_stack_ffffff7c;\n    uint in_stack_ffffff80;\n    uint in_stack_ffffff84;\n    uint *arg_18h;\n    uint uVar7;\n    uint var_58h;\n    int32_t var_50h;\n    uint32_t var_4ch;\n    uint var_48h;\n    uint var_40h;\n    uint var_38h;\n    uint var_30h;\n    uint var_28h;\n    int32_t var_24h;\n    uint var_20h;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    var_38h = 0xffffffff;\n    var_28h = 0xffffffff;\n    iVar3 = *in_EAX;\n    var_50h = 0;\n    var_4ch = 0;\n    var_48h = 0;\n    var_20h = 0;\n    var_14h = 0;\n    var_ch = 0;\n    var_58h = 0x45d544;\n    var_18h = 1;\n    iVar2 = fcn.0040f269();\n    var_10h = *(iVar2 + 0xc);\n    *in_EAX = iVar3 + 1;\n    iVar2 = fcn.0040f269();\n    if (*(iVar2 + 8) == 8) {\n        var_8h = 0;\n        *in_EAX = iVar3 + 2;\n        do {\n            uVar6 = 0x432277;\n            iVar3 = fcn.0040f269();\n            iVar3 = *(iVar3 + 8);\n            if (iVar3 == 8) {\n                var_8h = var_8h + 1;\n            }\n            else if (iVar3 == 9) {\n                if (var_8h == 0) {\n                    var_24h = var_10h;\n                    *in_EAX = *in_EAX + 1;\n                    var_28h = 0xf;\n                    fcn.0042192c();\n                    uVar4 = 0;\n                    do {\n                        var_4h = uVar4;\n                        do {\n                            puVar5 = &fcn.00432206::var_40h;\n                            if (var_4h < var_4ch) {\n                                puVar5 = *(var_50h + var_4h * 4);\n                            }\n                            if (puVar5[2] == 0xf) {\n                                uVar6 = 0;\n                                goto code_r0x0043245d;\n                            }\n                            puVar5 = &fcn.00432206::var_40h;\n                            if (var_4h < var_4ch) {\n                                puVar5 = *(var_50h + var_4h * 4);\n                            }\n                            uVar4 = var_4h;\n                            if (puVar5[2] == 0xe) {\n                                if (var_4h < var_4ch) {\n                                    puVar5 = *(var_50h + var_4h * 4);\n                                }\n                                else {\n                                    puVar5 = &fcn.00432206::var_40h;\n                                }\n                                arg_18h = &fcn.00432206::var_8h;\n                                uVar7 = *puVar5;\n                                fcn.00416d81();\n                                cVar1 = fcn.00416b63(uVar7, in_stack_ffffff7c, in_stack_ffffff80, in_stack_ffffff84, \n                                                     arg_18h);\n                                uVar4 = var_4h;\n                                if ((cVar1 == '\\0') || ((var_ch & 0x100) != 0)) goto code_r0x004323e2;\n                                if (*(var_8h + 8) == 8) {\n                                    if (var_4h + 1 < var_4ch) {\n                                        puVar5 = *(var_50h + (var_4h + 1) * 4);\n                                    }\n                                    else {\n                                        puVar5 = &fcn.00432206::var_40h;\n                                    }\n                                    if (puVar5[2] == 0x21) goto code_r0x004323e2;\n                                }\n                                var_4h = var_4h + 1;\n                                if (*(var_8h + 8) == 5) {\n                                    if (var_4h < var_4ch) {\n                                        puVar5 = *(var_50h + var_4h * 4);\n                                    }\n                                    else {\n                                        puVar5 = &fcn.00432206::var_40h;\n                                    }\n                                    if ((puVar5[2] == 0x13) &&\n                                       (iVar3 = fcn.00436e7c(arg_8h, &fcn.00432206::var_8h),  iVar3 != 0))\n                                    goto code_r0x00432456;\n                                }\n                                fcn.00419289(var_8h);\n                                puVar5 = &fcn.00432206::var_40h;\n                                if (var_4h < var_4ch) {\n                                    puVar5 = *(var_50h + var_4h * 4);\n                                }\n                                if (puVar5[2] != 0x11) {\n                                    if (var_4h < var_4ch) {\n                                        puVar5 = *(var_50h + var_4h * 4);\n                                    }\n                                    else {\n                                        puVar5 = &fcn.00432206::var_40h;\n                                    }\n                                    if (puVar5[2] != 0xf) goto code_r0x004323e2;\n                                }\n                            }\n                            else {\ncode_r0x004323e2:\n                                var_4h = uVar4;\n                                in_stack_ffffff80 = 0x4323f6;\n                                iVar3 = fcn.00437a3e(&fcn.00432206::var_58h, &fcn.00432206::var_4h, \n                                                     &fcn.00432206::var_20h);\n                                if (iVar3 != 0) goto code_r0x00432456;\n                            }\n                            fcn.00417dfb();\n                            puVar5 = &fcn.00432206::var_40h;\n                            if (var_4h < var_4ch) {\n                                puVar5 = *(var_50h + var_4h * 4);\n                            }\n                        } while (puVar5[2] != 0x11);\n                        uVar4 = var_4h + 1;\n                        puVar5 = &fcn.00432206::var_40h;\n                        if (uVar4 < var_4ch) {\n                            puVar5 = *(var_50h + uVar4 * 4);\n                        }\n                    } while (puVar5[2] != 0xf);\n                    uVar7 = 0x6e;\n                    goto code_r0x0043244e;\n                }\n                var_8h = var_8h + -1;\n            }\n            else if (iVar3 == 0xf) break;\n            fcn.0040f269();\n            fcn.0042192c();\n            *in_EAX = *in_EAX + 1;\n        } while( true );\n    }\n    iVar3 = fcn.0040f269();\n    uVar6 = *(iVar3 + 0xc);\n    uVar7 = 0x6f;\ncode_r0x0043244e:\n    fcn.0041fdea(uVar7, uVar6);\ncode_r0x00432456:\n    uVar6 = 1;\ncode_r0x0043245d:\n    fcn.0041858e();\n    fcn.00417f90();\n    fcn.0042190c();\n    return uVar6;\n}\n",
        "token_count": 1830
    },
    "00432630": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00432630(uint arg_8h, uint arg_ch, int32_t *arg_10h)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint uVar4;\n    uint *puVar5;\n    uint var_54h;\n    int32_t var_4ch;\n    uint32_t var_48h;\n    uint var_44h;\n    uint var_3ch;\n    uint var_34h;\n    uint var_2ch;\n    uint var_24h;\n    int32_t var_20h;\n    uint var_1ch;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    var_34h = 0xffffffff;\n    var_24h = 0xffffffff;\n    iVar2 = *in_EAX;\n    var_4ch = 0;\n    var_48h = 0;\n    var_44h = 0;\n    var_1ch = 0;\n    var_10h = 0;\n    var_54h = 0x45d544;\n    var_14h = 1;\n    iVar1 = fcn.0040f269();\n    var_ch = *(iVar1 + 0xc);\n    *in_EAX = iVar2 + 1;\n    iVar1 = fcn.0040f269();\n    if (*(iVar1 + 8) != 8) {\ncode_r0x0043268a:\n        iVar2 = fcn.0040f269();\n        puVar5 = 0x6f;\n        fcn.0041fdea(0x6f, *(iVar2 + 0xc));\ncode_r0x0043269e:\n        uVar4 = 1;\ncode_r0x00432788:\n        fcn.00417f90(puVar5);\n        fcn.0041858e();\n        fcn.0042190c();\n        return uVar4;\n    }\n    var_4h = 0;\n    *in_EAX = iVar2 + 2;\n    do {\n        iVar2 = fcn.0040f269();\n        iVar2 = *(iVar2 + 8);\n        if (iVar2 == 8) {\n            var_4h = var_4h + 1;\n        }\n        else if (iVar2 == 9) {\n            if (var_4h == 0) {\n                *in_EAX = *in_EAX + 1;\n                fcn.00418097(0xf);\n                var_20h = var_ch;\n                puVar5 = &var_2ch;\n                fcn.0042192c(puVar5);\n                *arg_10h = 0;\n                var_8h = 0;\n                do {\n                    do {\n                        if (var_8h < var_48h) {\n                            puVar3 = *(var_4ch + var_8h * 4);\n                        }\n                        else {\n                            puVar3 = &var_3ch;\n                        }\n                        if (puVar3[2] == 0xf) {\ncode_r0x00432786:\n                            uVar4 = 0;\n                            goto code_r0x00432788;\n                        }\n                        iVar2 = fcn.00437a3e(&var_54h, &var_8h, &var_1ch);\n                        if (iVar2 != 0) goto code_r0x0043269e;\n                        *arg_10h = *arg_10h + 1;\n                        puVar5 = &var_1ch;\n                        fcn.00417dfb();\n                        puVar3 = &var_3ch;\n                        if (var_8h < var_48h) {\n                            puVar3 = *(var_4ch + var_8h * 4);\n                        }\n                        if (puVar3[2] == 0xf) goto code_r0x00432786;\n                        puVar3 = &var_3ch;\n                        if (var_8h < var_48h) {\n                            puVar3 = *(var_4ch + var_8h * 4);\n                        }\n                    } while (puVar3[2] != 0x11);\n                    var_8h = var_8h + 1;\n                } while( true );\n            }\n            var_4h = var_4h + -1;\n        }\n        else if (iVar2 == 0xf) goto code_r0x0043268a;\n        fcn.0040f269();\n        fcn.0042192c();\n        *in_EAX = *in_EAX + 1;\n    } while( true );\n}\n",
        "token_count": 1060
    },
    "004327f6": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.004327f6(uchar *param_1, uchar *param_2, uint param_3)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint *puVar2;\n    uint uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uchar *puVar6;\n    int32_t *piVar7;\n    uchar *puVar8;\n    uint uVar9;\n    uint *extraout_ECX;\n    uint extraout_EDX;\n    uint arg_10h;\n    uint unaff_EBX;\n    uint32_t uVar10;\n    bool bVar11;\n    uint uVar12;\n    uchar *arg_8h;\n    uchar *arg_14h;\n    uchar *puVar13;\n    uchar *puVar14;\n    uint in_stack_ffffff00;\n    uint in_stack_ffffff04;\n    uint uStack216;\n    int32_t iStack212;\n    uint32_t uStack208;\n    uint uStack200;\n    uint uStack192;\n    uint uStack188;\n    uint uStack184;\n    uint uStack176;\n    uint uStack172;\n    uint uStack168;\n    uint uStack160;\n    uint uStack156;\n    uint uStack152;\n    uint uStack136;\n    uchar auStack128 [8];\n    uint uStack120;\n    uint uStack112;\n    int32_t iStack108;\n    uint uStack104;\n    uint uStack96;\n    uint uStack92;\n    uint32_t uStack88;\n    int32_t iStack84;\n    uint uStack80;\n    int32_t iStack76;\n    uint uStack72;\n    int32_t iStack64;\n    uint32_t uStack60;\n    uint uStack56;\n    uint auStack48 [2];\n    uint uStack40;\n    uint32_t uStack32;\n    int32_t iStack28;\n    int32_t iStack24;\n    int32_t iStack20;\n    uint32_t uStack16;\n    int32_t iStack12;\n    int32_t iStack8;\n    \n    puVar2 = fcn.0040f269();\n    puVar14 = &stack0xffffffe0;\n    puVar13 = &stack0xffffff94;\n    arg_14h = &stack0xffffffe4;\n    cVar1 = fcn.004327a9(param_1, *puVar2, &stack0xffffffb4, arg_14h, puVar13, puVar14);\n    if (cVar1 == '\\0') {\n        uVar3 = fcn.00432fd3(param_2, param_3);\n        return uVar3;\n    }\n    iVar4 = fcn.0040f269();\n    uStack80 = *(iVar4 + 0xc);\n    uStack112 = *(param_1 + 0x35c);\n    fcn.00417dba();\n    uStack40 = 0xffffffff;\n    uStack120 = 0xffffffff;\n    *in_EAX = *in_EAX + 1;\n    iVar4 = *in_EAX;\n    uStack96 = 1;\n    uStack192 = 1;\n    uStack176 = 1;\n    iStack212 = iStack76;\n    uStack208 = uStack32;\n    uStack72 = 0x45d544;\n    iStack64 = 0;\n    uStack60 = 0;\n    uStack56 = 0;\n    uStack88 = 0;\n    uStack104 = 0;\n    uStack92 = 0;\n    uStack200 = 0;\n    uStack188 = 0;\n    uStack184 = 0;\n    uStack172 = 0;\n    uStack216 = 8;\n    iVar5 = fcn.0040f269();\n    uVar3 = uStack80;\n    if (*(iVar5 + 8) == 8) {\n        *in_EAX = iVar4 + 1;\n        iStack12 = 0;\n        do {\n            iVar4 = fcn.0040f269();\n            iVar4 = *(iVar4 + 8);\n            if (iVar4 == 8) {\n                iStack12 = iStack12 + 1;\n            }\n            else if (iVar4 == 9) {\n                if (iStack12 == 0) {\n                    *in_EAX = *in_EAX + 1;\n                    uVar3 = 0xf;\n                    arg_8h = 0x432926;\n                    fcn.00418097();\n                    puVar8 = &stack0xffffff80;\n                    uVar12 = 0x432932;\n                    fcn.0042192c();\n                    uVar10 = 0;\n                    uStack16 = 0;\n                    iStack12 = *(param_1 + 0x6e4) + iStack76 * 0x28;\n                    iStack8 = 3;\n                    iStack24 = 0;\n                    iStack84 = 0;\n                    iVar4 = iStack64;\n                    if (0 < iStack28) goto code_r0x00432965;\n                    goto code_r0x00432b90;\n                }\n                iStack12 = iStack12 + -1;\n            }\n            else {\n                uVar3 = uStack80;\n                if (iVar4 == 0xf) break;\n            }\n            fcn.0040f269();\n            fcn.0042192c();\n            *in_EAX = *in_EAX + 1;\n        } while( true );\n    }\ncode_r0x004328ef:\n    uVar12 = 0x6f;\n    goto code_r0x00432c0a;\ncode_r0x00432965:\n    do {\n        puVar6 = &stack0xffffffd0;\n        if (uVar10 < uStack60) {\n            puVar6 = *(iVar4 + uVar10 * 4);\n        }\n        if (*(puVar6 + 8) == 0xf) break;\n        iStack24 = iStack24 + 1;\n        uStack32 = 0;\n        param_2 = param_2 & 0xffffff;\n        iVar5 = fcn.0040f269(puVar8);\n        if (*(iVar5 + 8) == 0) {\n            do {\n                piVar7 = fcn.0040f269(puVar8);\n                if (*piVar7 == 0x23) {\n                    param_2 = CONCAT13(1, param_2._0_3_);\n                }\n                else {\n                    piVar7 = fcn.0040f269();\n                    if (*piVar7 != 0x1e) goto code_r0x00432bca;\n                    uStack32 = 0x100;\n                }\n                iStack8 = iStack8 + 1;\n                iVar5 = fcn.0040f269();\n            } while (*(iVar5 + 8) == 0);\n            if (param_2._3_1_ == '\\0') goto code_r0x00432acc;\n            puVar14 = &stack0xffffffd0;\n            if (uVar10 < uStack60) {\n                puVar14 = *(iVar4 + uVar10 * 4);\n            }\n            if (*(puVar14 + 8) != 0xe) {\ncode_r0x00432bca:\n                uVar12 = 0x91;\n                goto code_r0x00432c0a;\n            }\n            if (uVar10 < uStack60) {\n                puVar2 = *(iVar4 + uVar10 * 4);\n            }\n            else {\n                puVar2 = &stack0xffffffd0;\n            }\n            puVar14 = &stack0xffffffec;\n            uVar9 = *puVar2;\n            fcn.00416d81();\n            cVar1 = fcn.00416b63(uVar9, unaff_EBX, in_stack_ffffff00, in_stack_ffffff04, puVar14);\n            if (cVar1 == '\\0') goto code_r0x00432f18;\n            if (((uStack88 & 0x100) != 0) && ((uStack32 & 0x100) == 0)) {\n                uVar12 = 0xb0;\n                goto code_r0x00432c0a;\n            }\n            uStack16 = uStack16 + 1;\n            iStack8 = iStack8 + 1;\n            if (*(iStack20 + 8) == 5) {\n                if (uStack16 < uStack60) {\n                    puVar14 = *(iStack64 + uStack16 * 4);\n                }\n                else {\n                    puVar14 = &stack0xffffffd0;\n                }\n                if ((*(puVar14 + 8) == 0x13) &&\n                   (arg_8h = param_1,  iVar4 = fcn.00436e7c(param_1, &stack0xffffffec),  iVar4 != 0))\n                goto code_r0x00432c0f;\n            }\n            fcn.00419289(iStack20);\n            puVar14 = &stack0xffffffd0;\n            if (uStack16 < uStack60) {\n                puVar14 = *(iStack64 + uStack16 * 4);\n            }\n            if (*(puVar14 + 8) != 0x11) {\n                puVar14 = &stack0xffffffd0;\n                if (uStack16 < uStack60) {\n                    puVar14 = *(iStack64 + uStack16 * 4);\n                }\n                if (*(puVar14 + 8) != 0xf) {\n                    if (uStack16 < uStack60) {\n                        puVar14 = *(iStack64 + uStack16 * 4);\n                    }\n                    else {\n                        puVar14 = &stack0xffffffd0;\n                    }\n                    uVar3 = *(puVar14 + 0xc);\n                    goto code_r0x004328ef;\n                }\n            }\n        }\n        else {\ncode_r0x00432acc:\n            arg_8h = &stack0xffffffb8;\n            iVar4 = fcn.00437a3e(arg_8h, &stack0xfffffff0, &stack0xffffff98);\n            if (iVar4 != 0) goto code_r0x00432c0f;\n            iStack8 = iStack8 + 1;\n            in_stack_ffffff00 = 0x432af5;\n            iVar4 = fcn.0040f269();\n            if (*(iVar4 + 8) == 2) {\n                iStack8 = iStack8 + 2;\n            }\n        }\n        puVar14 = &stack0xffffff98;\n        fcn.00417dfb();\n        iVar4 = iStack64;\n        puVar13 = &stack0xffffffd0;\n        if (uStack16 < uStack60) {\n            puVar13 = *(iStack64 + uStack16 * 4);\n        }\n        if (*(puVar13 + 8) == 0x11) {\n            if (uStack16 + 1 < uStack60) {\n                puVar13 = *(iStack64 + (uStack16 + 1) * 4);\n            }\n            else {\n                puVar13 = &stack0xffffffd0;\n            }\n            if (*(puVar13 + 8) != 0xf) goto code_r0x00432b40;\ncode_r0x00432c22:\n            if (uStack16 < uStack60) {\n                puVar14 = *(iStack64 + uStack16 * 4);\n            }\n            else {\n                puVar14 = &stack0xffffffd0;\n            }\n            uVar3 = *(puVar14 + 0xc);\n            goto code_r0x004328ef;\n        }\ncode_r0x00432b40:\n        puVar13 = &stack0xffffffd0;\n        if (uStack16 < uStack60) {\n            puVar13 = *(iStack64 + uStack16 * 4);\n        }\n        if (*(puVar13 + 8) == 0x11) {\n            uStack16 = uStack16 + 1;\n        }\n        else {\n            puVar13 = &stack0xffffffd0;\n            if (uStack16 < uStack60) {\n                puVar13 = *(iStack64 + uStack16 * 4);\n            }\n            if (*(puVar13 + 8) != 0xf) goto code_r0x00432c22;\n        }\n        uVar10 = uStack16;\n        puVar13 = 0x432b75;\n        iVar5 = fcn.0040f269();\n        if (*(iVar5 + 8) == 0x11) {\n            iStack8 = iStack8 + 1;\n        }\n        iStack84 = iStack84 + 1;\n    } while (iStack84 < iStack28);\ncode_r0x00432b90:\n    puVar8 = &stack0xffffffd0;\n    if (uVar10 < uStack60) {\n        puVar8 = *(iVar4 + uVar10 * 4);\n    }\n    if ((*(puVar8 + 8) == 0xf) && (iStack108 <= iStack24)) {\n        iStack20 = 0;\n        iStack8 = 3;\n        fcn.00416c22();\n        if (0 < iStack28) {\n            do {\n                iVar4 = iStack8;\n                uVar10 = 0;\n                param_2 = param_2 & 0xffffff;\n                iVar5 = fcn.0040f269();\n                if (*(iVar5 + 8) == 0) {\n                    do {\n                        piVar7 = fcn.0040f269();\n                        if (*piVar7 == 0x23) {\n                            param_2 = CONCAT13(1, param_2._0_3_);\ncode_r0x00432cb3:\n                            iVar4 = iVar4 + 1;\n                        }\n                        else {\n                            piVar7 = fcn.0040f269();\n                            if (*piVar7 == 0x1e) {\n                                uVar10 = 0x100;\n                                goto code_r0x00432cb3;\n                            }\n                        }\n                        iVar5 = fcn.0040f269();\n                    } while (*(iVar5 + 8) == 0);\n                    iStack8 = iVar4;\n                    if (param_2._3_1_ == '\\0') goto code_r0x00432d2b;\n                    fcn.0040f269();\n                    puVar14 = 0x432cff;\n                    fcn.0041886c(uVar10 | 0x200);\n                    uVar9 = *extraout_ECX;\n                    fcn.00416d81();\n                    cVar1 = fcn.00416bd9(0x47bd30, uVar9, arg_14h, puVar13, puVar14);\n                    if (cVar1 != '\\0') {\n                        iStack8 = iVar4 + 2;\n                        goto code_r0x00432e86;\n                    }\n                    fcn.0040f269();\ncode_r0x00432f18:\n                    uVar12 = 0x79;\n                    goto code_r0x00432c0a;\n                }\ncode_r0x00432d2b:\n                if (iStack24 < iStack20 + 1) {\n                    uStack136 = 0xffffffff;\n                    uStack160 = 0;\n                    uStack156 = 0;\n                    uStack152 = 0;\n                    param_2 = NULL;\n                    uStack168 = 0x45d544;\n                    iVar4 = fcn.0040f269();\n                    if ((*(iVar4 + 8) == 0xb) || (iVar4 = fcn.0040f269(),  *(iVar4 + 8) == 10)) {\n                        uVar9 = fcn.0040f269();\n                        fcn.0042192c(uVar9);\n                    }\n                    uVar9 = fcn.0040f269();\n                    fcn.0042192c(uVar9);\n                    puVar14 = 0xf;\n                    fcn.00418097();\n                    puVar13 = &stack0xffffff80;\n                    fcn.0042192c();\n                    arg_14h = &stack0xffffff98;\n                    fcn.00437a3e(&stack0xffffff58, &stack0x00000008, arg_14h);\n                    puVar2 = fcn.0040f269();\n                    uVar9 = *puVar2;\n                    fcn.00416d81();\n                    fcn.00416b13(uVar9, uVar12, arg_8h, uVar3);\n                    fcn.0042190c();\n                }\n                else {\n                    puVar2 = fcn.0040f269();\n                    uVar9 = *puVar2;\n                    fcn.00416d81();\n                    fcn.00416b13(uVar9, arg_14h, puVar13, puVar14);\n                }\n                iVar4 = fcn.0040f269();\n                if (*(iVar4 + 8) == 2) {\n                    iVar4 = fcn.0040f269();\n                    if ((*(iVar4 + 8) == 0xb) || (iVar4 = fcn.0040f269(),  *(iVar4 + 8) == 10)) {\n                        iStack8 = iStack8 + 5;\n                    }\n                    else {\n                        iStack8 = iStack8 + 4;\n                    }\n                }\n                else {\n                    iStack8 = iStack8 + 2;\n                }\ncode_r0x00432e86:\n                iVar4 = iStack20 + 1;\n                iVar5 = iStack20 + 2;\n                iStack20 = iVar4;\n            } while (iVar5 <= iStack28);\n        }\n        param_2 = param_1 + 0x670;\n        fcn.004219ff(&stack0xffffff28);\n        *(param_1 + 0x296) = 0;\n        *(param_1 + 0x35c) = iStack24;\n        fcn.00418bb9(0);\n        fcn.00421898(0);\n        fcn.004218c6(extraout_EDX);\n        fcn.00421702(param_1, iStack76 + 1, arg_10h, arg_10h);\n        bVar11 = (param_1[0x296] & 1) != 0;\n        if (bVar11) {\n            fcn.00418a19(param_1 + 0x340);\n            *(param_1 + 0x296) = *(param_1 + 0x296) ^ 1;\n        }\n        uVar10 = bVar11;\n        fcn.00418bb9(uVar10);\n        if ((*(param_1 + 0x296) & 2) == 0) {\n            uVar10 = 0;\n            fcn.00421898();\n        }\n        else {\n            *(param_1 + 0x296) = *(param_1 + 0x296) ^ 2;\n        }\n        if ((*(param_1 + 0x296) & 4) == 0) {\n            uVar10 = 0;\n            fcn.004218c6();\n        }\n        else {\n            *(param_1 + 0x296) = *(param_1 + 0x296) ^ 4;\n        }\n        fcn.00421a3d(uVar10);\n        fcn.00416d3d();\n        *(param_1 + 0x35c) = uStack112;\n        uVar3 = 0;\n        goto code_r0x00432f94;\n    }\n    uVar12 = 0x70;\ncode_r0x00432c0a:\n    fcn.0041fdea(uVar12, uVar3);\ncode_r0x00432c0f:\n    uVar3 = 1;\ncode_r0x00432f94:\n    fcn.0041858e();\n    fcn.0041858e();\n    fcn.0041858e();\n    fcn.00417f90();\n    fcn.0042190c();\n    fcn.00417ddb();\n    return uVar3;\n}\n",
        "token_count": 4458
    },
    "004330b4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.004330b4(int32_t arg_8h, int32_t arg_ch, uint32_t *arg_10h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    int32_t iVar4;\n    uint unaff_EDI;\n    uint in_stack_ffffff7c;\n    uint in_stack_ffffff80;\n    uint in_stack_ffffff84;\n    uint in_stack_ffffff90;\n    int32_t in_stack_ffffff94;\n    uint in_stack_ffffff98;\n    uint32_t *in_stack_ffffffa0;\n    uint *in_stack_ffffffa4;\n    uint uVar5;\n    uint var_44h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint32_t var_18h;\n    uint32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_5h;\n    \n    var_18h = *arg_10h;\n    var_ch = 0;\n    var_10h = 0;\n    var_5h._0_1_ = '\\x01';\n    var_34h = 0;\n    var_2ch = 1;\n    var_28h = 0;\n    var_14h = 0;\n    do {\n        uVar1 = *arg_10h;\n        if (*(arg_ch + 0xc) <= uVar1) break;\n        in_stack_ffffffa4 = 0x4330f4;\n        iVar2 = fcn.0040f269();\n        iVar2 = *(iVar2 + 8);\n        if (iVar2 < 0x10) {\n            if (iVar2 != 0xf) {\n                if (iVar2 != 2) {\n                    if (iVar2 != 8) {\n                        if (iVar2 != 9) goto code_r0x00433141;\n                        goto code_r0x0043310a;\n                    }\n                    goto code_r0x0043313e;\n                }\ncode_r0x00433123:\n                if (var_ch != 0) goto code_r0x00433141;\n                in_stack_ffffffa4 = 0x433132;\n                iVar2 = fcn.0040f269();\n                var_10h = *(iVar2 + 8);\n            }\n            var_5h._0_1_ = '\\0';\n        }\n        else if (iVar2 == 0x13) {\ncode_r0x0043313e:\n            var_ch = var_ch + 1;\n        }\n        else if (iVar2 == 0x14) {\ncode_r0x0043310a:\n            var_ch = var_ch + -1;\n        }\n        else if ((0x1b < iVar2) && (iVar2 < 0x22)) goto code_r0x00433123;\ncode_r0x00433141:\n        *arg_10h = uVar1 + 1;\n    } while (var_5h != '\\0');\n    if (var_10h == 0) {\ncode_r0x00433194:\n        fcn.0041fdea(in_stack_ffffff94, in_stack_ffffff98);\n        goto code_r0x0043347a;\n    }\n    if (var_10h != 0x21) {\n        in_stack_ffffffa4 = &fcn.004330b4::var_34h;\n        in_stack_ffffffa0 = arg_10h;\n        iVar2 = fcn.00437a3e(arg_ch, arg_10h, in_stack_ffffffa4);\n        if (iVar2 != 0) goto code_r0x0043347a;\n        in_stack_ffffff98 = 0x433180;\n        iVar2 = fcn.0040f269();\n        if (*(iVar2 + 8) != 0xf) {\n            iVar2 = fcn.0040f269();\n            in_stack_ffffff98 = *(iVar2 + 0xc);\n            in_stack_ffffff94 = 0x72;\n            goto code_r0x00433194;\n        }\n    }\n    *arg_10h = var_18h;\n    puVar3 = fcn.0040f269();\n    fcn.00416d81(*puVar3);\n    uVar5 = 0;\n    puVar3 = &fcn.004330b4::var_ch;\n    fcn.00416dcf();\n    fcn.00416b63(in_stack_ffffffa0, in_stack_ffffffa4, unaff_EDI, puVar3, uVar5);\n    iVar2 = var_ch;\n    if (var_ch == 0) {\n        if ((*(arg_8h + 0x29b) == '\\0') && (iVar2 = fcn.0040f269(),  *(iVar2 + 8) == 2)) {\n            uVar5 = 0;\n            fcn.00416dcf();\n            fcn.00416b13(in_stack_ffffff90, in_stack_ffffff94, in_stack_ffffff98, uVar5);\n            uVar5 = 0;\n            puVar3 = &fcn.004330b4::var_ch;\n            fcn.00416dcf();\n            fcn.00416b63(in_stack_ffffff7c, in_stack_ffffff80, in_stack_ffffff84, puVar3, uVar5);\n            fcn.0041858e();\ncode_r0x0043325f:\n            if (var_10h == 2) {\n                fcn.00418a19();\n            }\n            else if (var_10h == 0x1c) {\n                fcn.004192a2();\n            }\n            else if (var_10h == 0x1d) {\n                fcn.004193f0();\n            }\n            else if (var_10h == 0x1e) {\n                fcn.00419578();\n            }\n            else if (var_10h == 0x1f) {\n                fcn.004194be();\n            }\n            else if (var_10h == 0x20) {\n                fcn.00419ea4();\n            }\n        }\n        else {\n            fcn.0040f269();\n            arg_ch = 0x79;\ncode_r0x0043342e:\n            fcn.0041fdea(in_stack_ffffff94, arg_ch);\n        }\n    }\n    else {\n        if ((var_14h & 0x100) != 0) {\n            fcn.0040f269();\n            arg_ch = 0xa3;\n            goto code_r0x0043342e;\n        }\n        *arg_10h = *arg_10h + 1;\n        if ((*(var_ch + 8) == 5) && (iVar4 = fcn.0040f269(),  *(iVar4 + 8) == 0x13)) {\n            fcn.004184ef();\n            in_stack_ffffff94 = 0x433309;\n            iVar4 = fcn.00436e7c(0x433309, &fcn.004330b4::var_ch);\n            iVar2 = var_ch;\n            if (iVar4 == 0) goto code_r0x00433314;\n        }\n        else {\ncode_r0x00433314:\n            if (var_10h != 0x21) {\n                if (*(iVar2 + 8) == 8) goto code_r0x00433357;\ncode_r0x004333a6:\n                iVar2 = fcn.0040f269();\n                if ((*(iVar2 + 8) == 2) ||\n                   ((((iVar2 = fcn.0040f269(),  *(iVar2 + 8) == 0x1c || (iVar2 = fcn.0040f269(),  *(iVar2 + 8) == 0x1d))\n                     || (iVar2 = fcn.0040f269(),  *(iVar2 + 8) == 0x1e)) ||\n                    ((iVar2 = fcn.0040f269(),  *(iVar2 + 8) == 0x1f || (iVar2 = fcn.0040f269(),  *(iVar2 + 8) == 0x20)))\n                    ))) goto code_r0x0043325f;\n                fcn.0040f269();\n                arg_ch = 0x9e;\n                goto code_r0x0043342e;\n            }\n            if (*(iVar2 + 8) == 8) {\ncode_r0x00433357:\n                iVar2 = fcn.0040f269();\n                if ((*(iVar2 + 8) != 0x21) && (iVar2 = fcn.0040f269(),  *(iVar2 + 8) != 8)) goto code_r0x004333a6;\n                iVar2 = fcn.00433622(arg_8h, arg_ch, var_ch);\n                if (iVar2 != 0) {\n                    fcn.0040f269();\n                    in_stack_ffffff94 = arg_8h;\n                    goto code_r0x0043342e;\n                }\n            }\n            else {\n                arg_ch = 0x460b20;\n                iVar2 = fcn.00430d6b(arg_8h, arg_8h, 0x460b20, 1);\n                if (iVar2 != 0) {\n                    fcn.0040f269();\n                    in_stack_ffffff94 = arg_8h;\n                    goto code_r0x0043342e;\n                }\n            }\n        }\n    }\n    fcn.0044951c(var_24h);\ncode_r0x0043347a:\n    fcn.0041858e();\n    return;\n}\n",
        "token_count": 2188
    },
    "00433aac": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00433aac(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    int32_t *piVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    uint uVar5;\n    int32_t iVar6;\n    uint in_ECX;\n    uint32_t uVar7;\n    ulong uVar8;\n    uint *arg_ch_00;\n    uint *arg_10h;\n    uint var_40h;\n    uint var_3ch;\n    int32_t var_38h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_ch;\n    uint32_t var_8h;\n    char var_3h;\n    char var_2h;\n    uint var_1h;\n    \n    piVar1 = arg_ch;\n    *in_EAX = *in_EAX + 1;\n    iVar2 = fcn.004379f3(in_ECX, in_EAX, &var_1h);\n    if (iVar2 == 0) {\n        iVar2 = *in_EAX;\n        iVar3 = fcn.0040f269();\n        if ((*(iVar3 + 8) == 0) && (piVar4 = fcn.0040f269(),  *piVar4 == 5)) {\n            *in_EAX = iVar2 + 1;\n            iVar2 = fcn.0040f269();\n            if (*(iVar2 + 8) == 0xf) {\n                var_28h = 1;\n                var_18h = 1;\n                var_2h = '\\0';\n                var_3h = '\\0';\n                var_30h = 0;\n                var_24h = 0;\n                var_20h = 0;\n                var_14h = 0;\n                var_ch = 0;\n                if (var_1h != '\\0') {\n                    var_ch = *arg_ch;\n                }\n                *arg_ch = *arg_ch + 1;\n                arg_ch = NULL;\n                uVar8 = fcn.0040fd7d();\n                uVar7 = uVar8 >> 0x20;\n                if (uVar8 != 0) {\n                    while (var_3h == '\\0') {\n                        iVar2 = *piVar1;\n                        iVar3 = *(arg_8h + 0x6e4) + -0x28 + iVar2 * 0x28;\n                        var_8h = uVar7;\n                        iVar6 = fcn.0040f269();\n                        if (*(iVar6 + 8) == 0) {\n                            piVar4 = fcn.0040f269();\n                            iVar6 = *piVar4;\n                            if (iVar6 == 4) {\n                                var_8h = 1;\n                                if (1 < *(iVar3 + 0xc)) {\n                                    do {\n                                        uVar7 = var_8h;\n                                        iVar2 = fcn.0040f269();\n                                        if (((*(iVar2 + 8) == 0) && (piVar4 = fcn.0040f269(),  *piVar4 == 5)) &&\n                                           (iVar2 = fcn.0040f269(),  *(iVar2 + 8) == 0xf)) {\n                                            arg_ch = arg_ch + 1;\n                                            break;\n                                        }\n                                        var_8h = uVar7 + 1;\n                                    } while (var_8h < *(iVar3 + 0xc));\n                                }\n                            }\n                            else if (iVar6 == 6) {\n                                if (arg_ch == NULL) {\n                                    if (var_2h == '\\x01') {\ncode_r0x00433ded:\n                                        arg_10h = 0xffffffff;\n                                        arg_ch_00 = 0x76;\n                                        goto code_r0x00433df4;\n                                    }\n                                    var_2h = '\\x01';\n                                    var_8h = 1;\n                                    iVar3 = fcn.0040f269();\n                                    if (*(iVar3 + 8) != 0xf) {\n                                        *(arg_8h + 0x28c) = *piVar1 + -1;\n                                        iVar2 = fcn.0040f269();\n                                        arg_10h = *(iVar2 + 0xc);\n                                        arg_ch_00 = 0x72;\n                                        goto code_r0x00433df4;\n                                    }\n                                    if (var_1h == '\\0') {\n                                        var_ch = iVar2;\n                                    }\n                                }\n                            }\n                            else if (iVar6 == 7) {\n                                if (arg_ch == NULL) {\n                                    if (var_2h == '\\x01') goto code_r0x00433ded;\n                                    if (var_1h == '\\0') {\n                                        *(arg_8h + 0x28c) = iVar2 + -1;\n                                        arg_10h = &var_1h;\n                                        arg_ch_00 = &var_8h;\n                                        var_8h = 1;\n                                        iVar2 = fcn.004379f3(iVar3, arg_ch_00, arg_10h);\n                                        if (iVar2 == 0) {\n                                            iVar2 = fcn.0040f269();\n                                            if ((*(iVar2 + 8) == 0) && (piVar4 = fcn.0040f269(),  *piVar4 == 5)) {\n                                                iVar2 = fcn.0040f269();\n                                                if (*(iVar2 + 8) == 0xf) {\n                                                    if (var_1h != '\\0') {\n                                                        iVar2 = *piVar1;\n                                                        goto code_r0x00433c74;\n                                                    }\n                                                    goto code_r0x00433d96;\n                                                }\n                                                *(arg_8h + 0x28c) = *piVar1 + -1;\n                                                fcn.0040f269();\n                                            }\n                                            else {\n                                                *(arg_8h + 0x28c) = *piVar1 + -1;\n                                                fcn.0040f269();\n                                            }\ncode_r0x00433df4:\n                                            fcn.0041fdea(arg_ch_00, arg_10h);\n                                        }\n                                        goto code_r0x00433be5;\n                                    }\n                                }\n                            }\n                            else if (iVar6 == 8) {\n                                if (arg_ch == NULL) {\n                                    iVar2 = iVar2 + -1;\n                                    var_3h = '\\x01';\n                                    var_38h = iVar2;\n                                    if ((var_1h == '\\0') && (var_2h == '\\0')) {\ncode_r0x00433c74:\n                                        var_ch = iVar2;\n                                    }\n                                }\n                                else {\n                                    arg_ch = arg_ch + -1;\n                                }\n                            }\n                        }\ncode_r0x00433d96:\n                        *piVar1 = *piVar1 + 1;\n                        iVar2 = fcn.0040fd7d();\n                        if (iVar2 == 0) break;\n                        uVar7 = 0;\n                    }\n                }\n                *piVar1 = var_ch;\n                fcn.004219ff();\ncode_r0x00433be5:\n                fcn.0041858e();\n                fcn.0041858e();\n            }\n            else if (var_1h != '\\0') {\n                var_18h = 0xffffffff;\n                var_38h = 0x45d544;\n                var_30h = 0;\n                var_2ch = 0;\n                var_28h = 0;\n                while( true ) {\n                    iVar2 = fcn.0040f269();\n                    if (*(iVar2 + 8) == 0xf) break;\n                    *in_EAX = *in_EAX + 1;\n                    fcn.0040f269();\n                    fcn.0042192c();\n                }\n                uVar5 = fcn.0040f269();\n                fcn.0042192c(uVar5);\n                fcn.0043247e(&var_38h, arg_ch);\n                fcn.0042190c();\n            }\n        }\n        else {\n            iVar2 = fcn.0040f269();\n            fcn.0041fdea(0xa1, *(iVar2 + 0xc));\n        }\n    }\n    return;\n}\n",
        "token_count": 1890
    },
    "00433e8b": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00433e8b(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    int32_t *unaff_ESI;\n    uint var_38h;\n    int32_t var_34h;\n    int32_t var_30h;\n    uint var_28h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    char var_2h;\n    uint var_1h;\n    \n    var_28h = 0;\n    var_1ch = 0;\n    var_18h = 0;\n    var_ch = 0;\n    var_1h._0_1_ = '\\0';\n    *in_EAX = *in_EAX + 1;\n    var_20h = 1;\n    var_10h = 1;\n    var_38h = 1;\n    iVar1 = fcn.004379f3(arg_ch, in_EAX, &var_2h);\n    if (iVar1 == 0) {\n        iVar1 = fcn.0040f269();\n        if (*(iVar1 + 8) == 0xf) {\n            iVar1 = *unaff_ESI;\n            arg_ch = 0;\n            var_34h = iVar1 + -1;\n            while( true ) {\n                *unaff_ESI = iVar1 + 1;\n                iVar1 = fcn.0040fd7d();\n                if ((iVar1 == 0) || (var_1h != '\\0')) break;\n                iVar1 = *unaff_ESI;\n                var_8h = *(arg_8h + 0x6e4) + -0x28 + iVar1 * 0x28;\n                iVar2 = fcn.0040f269();\n                if (*(iVar2 + 8) == 0) {\n                    piVar3 = fcn.0040f269();\n                    if (*piVar3 == 9) {\n                        arg_ch = arg_ch + 1;\n                    }\n                    else if (*piVar3 == 10) {\n                        if (arg_ch == 0) {\n                            var_30h = iVar1 + -1;\n                            var_1h._0_1_ = '\\x01';\n                        }\n                        else {\n                            arg_ch = arg_ch + -1;\n                        }\n                    }\n                }\n                iVar1 = *unaff_ESI;\n            }\n            if (var_2h == '\\0') {\n                *unaff_ESI = var_30h + 1;\n            }\n            else {\n                *unaff_ESI = var_34h + 1;\n                fcn.004219ff(&var_38h);\n            }\n        }\n        else {\n            iVar1 = fcn.0040f269();\n            fcn.0041fdea(0x72, *(iVar1 + 0xc));\n        }\n    }\n    fcn.0041858e();\n    fcn.0041858e();\n    return;\n}\n",
        "token_count": 729
    },
    "00433ffe": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00433ffe(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    uint in_ECX;\n    int32_t iVar4;\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    *in_EAX = *in_EAX + 1;\n    iVar1 = fcn.0040f269();\n    if (*(iVar1 + 8) == 0xf) {\n        iVar1 = 1;\ncode_r0x00434087:\n        iVar4 = 0;\n        if (0 < iVar1) {\n            do {\n                if ((*(arg_8h + 0x670) == 0) || (piVar2 = fcn.004388ea(),  *piVar2 == 8)) {\n                    fcn.0041fdea(0x96, 0xffffffff);\n                    return;\n                }\n                piVar2 = fcn.004388ea();\n                if (((*piVar2 == 1) || (piVar2 = fcn.004388ea(),  *piVar2 == 2)) ||\n                   (piVar2 = fcn.004388ea(),  *piVar2 == 3)) {\n                    iVar4 = iVar4 + 1;\n                    iVar3 = fcn.004388ea();\n                    *arg_ch = *(iVar3 + 8) + 1;\n                }\n                fcn.00421a3d();\n            } while (iVar4 < iVar1);\n        }\n    }\n    else {\n        var_10h = 0;\n        var_4h = 0;\n        var_8h = 1;\n        iVar1 = fcn.00437a3e(in_ECX, in_EAX, &var_10h);\n        if (iVar1 == 0) {\n            iVar1 = fcn.0040f269();\n            if (*(iVar1 + 8) == 0xf) {\n                iVar1 = fcn.00418733();\n                fcn.0041858e();\n                goto code_r0x00434087;\n            }\n            iVar1 = fcn.0040f269();\n            fcn.0041fdea(0x72, *(iVar1 + 0xc));\n        }\n        fcn.0041858e();\n    }\n    return;\n}\n",
        "token_count": 538
    },
    "004340fd": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004340fd(int32_t arg_8h, uint *arg_ch)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    uint in_ECX;\n    int32_t iVar4;\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    *in_EAX = *in_EAX + 1;\n    iVar1 = fcn.0040f269();\n    if (*(iVar1 + 8) == 0xf) {\n        iVar1 = 1;\ncode_r0x00434186:\n        iVar4 = 0;\n        if (0 < iVar1) {\n            do {\n                if ((*(arg_8h + 0x670) == 0) || (piVar2 = fcn.004388ea(),  *piVar2 == 8)) {\n                    fcn.0041fdea(0x96, 0xffffffff);\n                    return;\n                }\n                piVar2 = fcn.004388ea();\n                if (((*piVar2 == 1) || (piVar2 = fcn.004388ea(),  *piVar2 == 2)) ||\n                   (piVar2 = fcn.004388ea(),  *piVar2 == 3)) {\n                    iVar4 = iVar4 + 1;\n                    iVar3 = fcn.004388ea();\n                    *arg_ch = *(iVar3 + 8);\n                    if (iVar4 == iVar1) {\n                        return;\n                    }\n                }\n                fcn.00421a3d();\n            } while (iVar4 < iVar1);\n        }\n    }\n    else {\n        var_10h = 0;\n        var_4h = 0;\n        var_8h = 1;\n        iVar1 = fcn.00437a3e(in_ECX, in_EAX, &var_10h);\n        if (iVar1 == 0) {\n            iVar1 = fcn.0040f269();\n            if (*(iVar1 + 8) == 0xf) {\n                iVar1 = fcn.00418733();\n                fcn.0041858e();\n                goto code_r0x00434186;\n            }\n            iVar1 = fcn.0040f269();\n            fcn.0041fdea(0x72, *(iVar1 + 0xc));\n        }\n        fcn.0041858e();\n    }\n    return;\n}\n",
        "token_count": 547
    },
    "004342f9": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.004342f9(uint arg_8h, int32_t *arg_ch)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    uint in_ECX;\n    uint var_1h;\n    \n    *in_EAX = *in_EAX + 1;\n    iVar1 = fcn.004379f3(arg_8h, in_EAX, &var_1h);\n    if (iVar1 == 0) {\n        iVar1 = fcn.0040f269();\n        if (*(iVar1 + 8) == 0xf) {\n            var_1h._0_1_ = in_ECX >> 0x18;\n            if (var_1h == '\\0') {\n                iVar1 = fcn.004388ea();\n                *arg_ch = *(iVar1 + 4) + 1;\n            }\n            else {\n                fcn.00421a3d();\n            }\n        }\n        else {\n            iVar1 = fcn.0040f269();\n            fcn.0041fdea(0x72, *(iVar1 + 0xc));\n        }\n    }\n    return;\n}\n",
        "token_count": 280
    },
    "0043436d": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0043436d(uint32_t arg_8h, uint32_t arg_ch, int32_t *arg_10h, int32_t *arg_14h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    int32_t iVar4;\n    int32_t *piVar5;\n    uint in_stack_ffffff44;\n    uint in_stack_ffffff48;\n    uint in_stack_ffffff4c;\n    uint in_stack_ffffff58;\n    uint in_stack_ffffff5c;\n    uint in_stack_ffffff60;\n    ulong uVar6;\n    uint64_t uVar7;\n    uint in_stack_ffffff6c;\n    uint in_stack_ffffff70;\n    uint in_stack_ffffff74;\n    uint uVar8;\n    uint var_68h;\n    int32_t var_64h;\n    int32_t var_60h;\n    int32_t var_5ch;\n    uint var_58h;\n    int32_t var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_30h;\n    uint var_2ch;\n    int32_t var_28h;\n    int32_t var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    uint var_1h;\n    \n    var_58h = 0;\n    var_4ch = 0;\n    var_48h = 0;\n    var_3ch = 0;\n    var_1h._0_1_ = '\\0';\n    var_ch = 0;\n    var_28h = 0;\n    var_1ch = 0;\n    var_38h = 0;\n    var_2ch = 0;\n    var_64h = *arg_14h + -1;\n    *arg_10h = *arg_10h + 1;\n    var_50h = 1;\n    var_40h = 1;\n    var_20h = 1;\n    var_30h = 1;\n    var_68h = 3;\n    iVar2 = fcn.0040f269();\n    if (*(iVar2 + 8) != 0xe) {\n        iVar2 = fcn.0040f269();\n        fcn.0041fdea(0x94, *(iVar2 + 0xc));\n        goto code_r0x004348b9;\n    }\n    puVar3 = fcn.0040f269();\n    fcn.00416d81(*puVar3);\n    *arg_10h = *arg_10h + 1;\n    uVar8 = 1;\n    puVar3 = &var_8h;\n    fcn.00416dcf();\n    uVar7 = 0x43441b00000000;\n    fcn.00416b63(in_stack_ffffff6c, in_stack_ffffff70, in_stack_ffffff74, puVar3, uVar8);\n    if (var_8h == 0) {\n        uVar8 = 0;\n        fcn.00418bb9();\n        uVar7 = CONCAT44(uVar8, 1);\n        fcn.00416dcf();\n        fcn.00416b13(in_stack_ffffff58, in_stack_ffffff5c, in_stack_ffffff60, uVar7);\n        uVar8 = 1;\n        puVar3 = &var_8h;\n        fcn.00416dcf();\n        fcn.00416b63(in_stack_ffffff44, in_stack_ffffff48, in_stack_ffffff4c, puVar3, uVar8);\ncode_r0x0043446d:\n        if ((*(var_8h + 8) == 5) && (iVar2 = fcn.0040f269(),  *(iVar2 + 8) == 0x13)) {\n            fcn.004184ef();\n            uVar7 = uVar7 & 0xffffffff00000000 | arg_8h;\n            iVar2 = fcn.00436e7c(arg_8h, &var_8h);\n            if (iVar2 == 0) goto code_r0x004344a7;\n        }\n        else {\ncode_r0x004344a7:\n            iVar2 = *arg_10h;\n            var_5ch = var_8h;\n            iVar4 = fcn.0040f269();\n            if (*(iVar4 + 8) == 0) {\n                piVar5 = fcn.0040f269();\n                uVar8 = uVar7 >> 0x20;\n                if (*piVar5 != 0x11) goto code_r0x0043489b;\n                uVar7 = uVar7 & 0xffffffff00000000 | arg_ch;\n                *arg_10h = iVar2 + 1;\n                iVar2 = fcn.00437a3e(arg_ch, arg_10h, &var_28h);\n                if (iVar2 != 0) goto code_r0x004348b0;\n                if (var_20h == 8) {\ncode_r0x0043451f:\n                    uVar8 = uVar7;\n                    fcn.00418a19(&var_28h);\n                }\n                else if (var_20h == 5) {\n                    fcn.00419f46();\n                    fcn.00419f66();\n                    uVar8 = uVar7;\n                    if ((var_28h != 0) && ('\\0' < *(var_28h + 0x20c))) {\n                        iVar2 = fcn.0041a1ed();\n                        uVar8 = uVar7;\n                        if (0 < iVar2) {\n                            iVar2 = fcn.0041a132(0);\n                            uVar8 = uVar7;\n                            if (iVar2 != 0) {\n                                uVar8 = fcn.0041a132(0);\n                                fcn.00418a19(uVar8);\n                                goto code_r0x0043451f;\n                            }\n                        }\n                    }\n                    fcn.00418c7e(0x45bfe0);\n                    fcn.00418bb9(1);\n                    fcn.00418bb9(0xffffffff);\n                }\n                else {\n                    iVar2 = fcn.00430d6b(arg_8h, 0xa9, 0x460a78, 1);\n                    if (iVar2 != 0) {\n                        fcn.0040f269();\n                        uVar7 = CONCAT44(uVar7 >> 0x20, 0xa9);\n                        goto code_r0x004348a8;\n                    }\n                    fcn.00418bb9(1);\n                    uVar8 = uVar7;\n                }\ncode_r0x004346ce:\n                uVar6 = CONCAT44(0x4346da, uVar8);\n                iVar2 = fcn.0040f269();\n                if (*(iVar2 + 8) != 0xf) {\n                    iVar2 = fcn.0040f269();\n                    uVar7 = CONCAT44(*(iVar2 + 0xc), 0x72);\n                    goto code_r0x004348a8;\n                }\n                arg_ch = 0;\n                while( true ) {\n                    *arg_14h = *arg_14h + 1;\n                    uVar8 = uVar6;\n                    iVar2 = fcn.0040fd7d();\n                    if ((iVar2 == 0) || (var_1h != '\\0')) break;\n                    iVar2 = *arg_14h;\n                    uVar6 = CONCAT44(0x43471e, uVar8);\n                    iVar4 = fcn.0040f269();\n                    if (*(iVar4 + 8) == 0) {\n                        uVar6 = CONCAT44(0x43472d, uVar6);\n                        piVar5 = fcn.0040f269();\n                        if (*piVar5 == 0xd) {\n                            arg_ch = arg_ch + 1;\n                        }\n                        else if (*piVar5 == 0xe) {\n                            if (arg_ch == 0) {\n                                var_60h = iVar2 + -1;\n                                var_1h._0_1_ = '\\x01';\n                            }\n                            else {\n                                arg_ch = arg_ch + -1;\n                            }\n                        }\n                    }\n                }\n                uVar7 = CONCAT44(0x43476c, uVar8);\n                iVar4 = fcn.00418733();\n                iVar2 = var_60h;\n                if (iVar4 != 1) {\n                    if (*(var_8h + 8) == 8) {\n                        if (var_50h != 5) {\n                            uVar8 = 0;\n                            fcn.00418bb9();\n                            uVar7 = 0;\n                            fcn.00418bb9(0, uVar8);\n                            fcn.00431c42(arg_8h, &var_38h, &var_28h);\n                            cVar1 = fcn.00419b83();\n                            if (cVar1 != '\\0') {\n                                fcn.00418a19(&var_28h);\n                                fcn.00418a19(&var_38h);\n                                uVar7 = ZEXT48(&var_68h);\n                                fcn.004219ff();\n                                *arg_14h = var_64h + 1;\n                                goto code_r0x004348b0;\n                            }\n                            fcn.00418c7e(0x45bfe0);\n                            fcn.00418bb9(0);\n                            fcn.00418bb9(0);\n                            iVar2 = var_60h;\n                            goto code_r0x00434892;\n                        }\ncode_r0x0043481d:\n                        uVar7 = 0x434827;\n                        fcn.00418bb9();\n                    }\n                    else {\n                        if (var_50h == 5) goto code_r0x0043481d;\n                        uVar7 = 0;\n                        fcn.00418c65(0);\n                        cVar1 = fcn.0041996d();\n                        if (cVar1 == '\\0') {\n                            fcn.0041974a();\n                        }\n                        cVar1 = fcn.0041996d();\n                        if ((cVar1 == '\\0') && (cVar1 = fcn.0041974a(),  iVar2 = var_60h,  cVar1 == '\\0'))\n                        goto code_r0x00434892;\n                    }\n                    fcn.004219ff(&var_68h, uVar7);\n                    iVar2 = var_64h;\n                }\ncode_r0x00434892:\n                *arg_14h = iVar2 + 1;\n            }\n            else {\n                uVar7 = uVar7 & 0xffffffff00000000 | arg_ch;\n                *arg_10h = iVar2 + 1;\n                iVar2 = fcn.00437a3e(arg_ch, arg_10h, &var_28h);\n                if (iVar2 == 0) {\n                    fcn.00418a19(&var_28h);\n                    uVar8 = uVar7 >> 0x20;\n                    iVar2 = *arg_10h;\n                    iVar4 = fcn.0040f269();\n                    if (*(iVar4 + 8) == 0) {\n                        piVar5 = fcn.0040f269();\n                        if (*piVar5 == 0xf) {\n                            uVar7 = arg_ch;\n                            *arg_10h = iVar2 + 1;\n                            iVar2 = fcn.00437a3e(arg_ch, arg_10h, &var_28h);\n                            uVar8 = uVar7;\n                            if (iVar2 == 0) {\n                                fcn.00418a19(&var_28h);\n                                iVar2 = *arg_10h;\n                                iVar4 = fcn.0040f269();\n                                if ((*(iVar4 + 8) == 0) && (piVar5 = fcn.0040f269(),  *piVar5 == 0x10)) {\n                                    uVar7 = CONCAT44(arg_10h, arg_ch);\n                                    *arg_10h = iVar2 + 1;\n                                    iVar2 = fcn.00437a3e(arg_ch, arg_10h, &var_28h);\n                                    uVar8 = uVar7;\n                                    if (iVar2 != 0) goto code_r0x004348b0;\n                                    fcn.00418a19(&var_28h);\n                                }\n                                else {\n                                    fcn.00418bb9(1);\n                                }\n                                if (*(var_8h + 8) == 4) {\n                                    fcn.00419caf();\n                                }\n                                if (var_50h == 4) {\n                                    fcn.00419caf();\n                                }\n                                goto code_r0x004346ce;\n                            }\n                            goto code_r0x004348b0;\n                        }\n                    }\ncode_r0x0043489b:\n                    fcn.0040f269();\n                    uVar7 = CONCAT44(uVar8, 0x94);\n                    goto code_r0x004348a8;\n                }\n            }\n        }\n    }\n    else {\n        if ((var_ch & 0x100) == 0) goto code_r0x0043446d;\n        iVar2 = fcn.0040f269();\n        uVar7 = CONCAT44(*(iVar2 + 0xc), 0xa3);\ncode_r0x004348a8:\n        fcn.0041fdea(uVar7, uVar7 >> 0x20);\n    }\ncode_r0x004348b0:\n    fcn.0044951c(var_18h, uVar7);\ncode_r0x004348b9:\n    fcn.0041858e();\n    fcn.0041858e();\n    fcn.0041858e();\n    fcn.0041858e();\n    return;\n}\n",
        "token_count": 3142
    },
    "00434a86": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00434a86(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    int32_t iVar5;\n    int32_t *unaff_ESI;\n    uint arg_8h_00;\n    uint arg_ch_00;\n    uint var_40h;\n    uint var_3ch;\n    int32_t var_38h;\n    uint var_30h;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    *in_EAX = *in_EAX + 1;\n    var_4h._0_1_ = '\\0';\n    var_4h._1_1_ = '\\0';\n    var_4h._2_1_ = '\\0';\n    var_4h._3_1_ = '\\0';\n    var_10h = 1;\n    iVar1 = fcn.0040f269();\n    if (*(iVar1 + 8) == 0xf) {\n        iVar1 = *unaff_ESI;\n        arg_ch = 0;\n        *unaff_ESI = iVar1 + 1;\n        iVar2 = fcn.0040fd7d();\n        if (iVar2 != 0) {\n            do {\n                if (var_4h._2_1_ != '\\0') goto code_r0x00434c15;\n                *(arg_8h + 0x28c) = *unaff_ESI + -1;\n                iVar5 = *unaff_ESI;\n                iVar2 = *(arg_8h + 0x6e4) + -0x28 + iVar5 * 0x28;\n                iVar3 = fcn.0040f269();\n                if (*(iVar3 + 8) == 0) {\n                    piVar4 = fcn.0040f269();\n                    iVar3 = *piVar4;\n                    if (iVar3 == 0x14) {\ncode_r0x00434bf4:\n                        arg_ch = arg_ch + 1;\n                    }\n                    else if (iVar3 == 0x15) {\n                        if ((arg_ch == 0) && (var_4h._1_1_ == '\\0')) {\n                            var_4h._0_1_ = '\\x01';\n                            iVar5 = fcn.0040f269();\n                            if ((*(iVar5 + 8) == 0) && (piVar4 = fcn.0040f269(),  *piVar4 == 6)) {\n                                var_4h._3_1_ = '\\x01';\n                            }\n                            else {\n                                iVar2 = fcn.004379f3(iVar2, iVar2, &var_4h + 3);\n                                if (iVar2 != 0) goto code_r0x00434c69;\n                            }\n                            iVar2 = fcn.0040f269();\n                            if (*(iVar2 + 8) != 0xf) goto code_r0x00434c42;\n                            if (var_4h._3_1_ != '\\0') {\n                                var_10h = *unaff_ESI;\n                                var_4h._1_1_ = '\\x01';\n                            }\n                        }\n                    }\n                    else if (iVar3 == 0x16) {\n                        if (arg_ch == 0) {\n                            var_38h = iVar5 + -1;\n                            var_4h._2_1_ = '\\x01';\n                        }\n                        else {\ncode_r0x00434b66:\n                            arg_ch = arg_ch + -1;\n                        }\n                    }\n                    else {\n                        if (iVar3 == 0x17) goto code_r0x00434bf4;\n                        if (iVar3 == 0x18) goto code_r0x00434b66;\n                    }\n                }\n                *unaff_ESI = *unaff_ESI + 1;\n                iVar2 = fcn.0040fd7d();\n            } while (iVar2 != 0);\n            if (var_4h._2_1_ != '\\0') {\ncode_r0x00434c15:\n                if (var_4h != '\\0') {\n                    fcn.004219ff();\n                    if (var_4h._1_1_ == '\\0') {\n                        var_10h = var_38h;\n                    }\n                    *unaff_ESI = var_10h;\n                    goto code_r0x00434c69;\n                }\n            }\n        }\n        arg_ch_00 = 0xffffffff;\n        *(arg_8h + 0x28c) = iVar1 + -1;\n        arg_8h_00 = 0xa0;\n    }\n    else {\ncode_r0x00434c42:\n        iVar1 = fcn.0040f269();\n        arg_ch_00 = *(iVar1 + 0xc);\n        arg_8h_00 = 0x72;\n    }\n    fcn.0041fdea(arg_8h_00, arg_ch_00);\ncode_r0x00434c69:\n    fcn.0041858e();\n    fcn.0041858e();\n    return;\n}\n",
        "token_count": 1212
    },
    "00434cfa": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00434cfa(int32_t arg_8h, int32_t arg_ch, int32_t *arg_10h)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    ulong uVar5;\n    int32_t in_stack_ffffff64;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    uint var_6ch;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_24h;\n    uint var_20h;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_7h;\n    \n    *in_EAX = *in_EAX + 1;\n    var_14h = *in_EAX;\n    var_7h._0_1_ = '\\0';\n    var_7h._1_1_ = '\\0';\n    var_7h._2_1_ = '\\0';\n    var_18h = 1;\n    var_2ch = 0;\n    var_24h = 1;\n    var_20h = 0;\n    var_3ch = 0;\n    var_34h = 1;\n    var_30h = 0;\n    var_4ch = 0;\n    var_44h = 1;\n    var_40h = 0;\n    iVar2 = fcn.0040f269();\n    if (*(iVar2 + 8) != 0xf) {\n        iVar2 = *arg_10h;\n        iVar3 = fcn.00437a3e(arg_ch, in_EAX, &var_2ch);\n        if (iVar3 == 0) {\n            var_14h = 0;\ncode_r0x00434d9e:\n            do {\n                do {\n                    *arg_10h = *arg_10h + 1;\n                    uVar5 = fcn.0040fd7d();\n                    if (uVar5 == 0) {\ncode_r0x00434f90:\n                        *(arg_8h + 0x28c) = iVar2 + -1;\n                        in_stack_ffffff64 = 0xa0;\n                        goto code_r0x00434fa3;\n                    }\n                    *(arg_8h + 0x28c) = (uVar5 >> 0x20) + -1;\n                    var_10h = *(arg_8h + 0x6e4) + -0x28 + *arg_10h * 0x28;\n                    var_ch = 0;\n                    iVar3 = fcn.0040f269();\n                } while (*(iVar3 + 8) != 0);\n                piVar4 = fcn.0040f269();\n                iVar3 = *piVar4;\n                if (iVar3 == 0x14) {\ncode_r0x00434f4e:\n                    var_14h = var_14h + 1;\n                    goto code_r0x00434d9e;\n                }\n                if (iVar3 != 0x15) {\n                    if (iVar3 != 0x16) {\n                        if (iVar3 == 0x17) goto code_r0x00434f4e;\n                        if (iVar3 != 0x18) goto code_r0x00434d9e;\n                        if (var_14h == 0) {\n                            iVar3 = *arg_10h;\n                            if (var_7h == '\\0') goto code_r0x00434f90;\n                            fcn.004219ff();\n                            if (var_7h._1_1_ == '\\0') {\n                                *arg_10h = iVar3 + -1;\n                            }\n                            else {\n                                *arg_10h = var_18h;\n                            }\n                            break;\n                        }\n                    }\n                    var_14h = var_14h + -1;\n                    goto code_r0x00434d9e;\n                }\n                if ((var_14h == 0) && (var_7h._1_1_ == '\\0')) {\n                    var_7h._0_1_ = '\\x01';\n                    var_ch = 1;\n                    iVar3 = fcn.0040f269();\n                    if ((*(iVar3 + 8) == 0) && (piVar4 = fcn.0040f269(),  *piVar4 == 6)) {\n                        var_7h._2_1_ = '\\x01';\n                        var_ch = 2;\n                        iVar3 = fcn.0040f269();\n                        if (*(iVar3 + 8) != 0xf) goto code_r0x00434f3f;\n                    }\n                    if (var_7h._2_1_ == '\\0') {\n                        do {\n                            arg_ch = var_10h;\n                            iVar3 = fcn.00437a3e(var_10h, &var_ch, &var_3ch);\n                            if (iVar3 != 0) goto code_r0x00434fa8;\n                            iVar3 = fcn.0040f269();\n                            if ((*(iVar3 + 8) == 0) && (piVar4 = fcn.0040f269(),  *piVar4 == 0xf)) {\n                                var_ch = var_ch + 1;\n                                in_EAX = &var_ch;\n                                arg_ch = var_10h;\n                                iVar3 = fcn.00437a3e(var_10h, in_EAX, &var_4ch);\n                                if (iVar3 != 0) goto code_r0x00434fa8;\n                                cVar1 = fcn.0041996d();\n                                if (cVar1 == '\\0') {\n                                    cVar1 = fcn.0041996d();\n                                    goto joined_r0x00434f0a;\n                                }\n                            }\n                            else {\n                                cVar1 = fcn.0041974a();\njoined_r0x00434f0a:\n                                if (cVar1 != '\\0') {\n                                    var_7h._2_1_ = '\\x01';\n                                    break;\n                                }\n                            }\n                            iVar3 = fcn.0040f269();\n                            if (*(iVar3 + 8) != 0x11) goto code_r0x00434f25;\n                            var_ch = var_ch + 1;\n                        } while( true );\n                    }\n                    var_18h = *arg_10h;\n                    var_7h._1_1_ = '\\x01';\n                }\n            } while( true );\n        }\n        goto code_r0x00434fa8;\n    }\n    fcn.0040f269();\n    in_EAX = 0x6e;\n    goto code_r0x00434fa3;\ncode_r0x00434f25:\n    iVar3 = fcn.0040f269();\n    if (*(iVar3 + 8) != 0xf) goto code_r0x00434f3f;\n    goto code_r0x00434d9e;\ncode_r0x00434f3f:\n    fcn.0040f269();\n    in_stack_ffffff64 = arg_ch;\ncode_r0x00434fa3:\n    fcn.0041fdea(in_stack_ffffff64, in_EAX);\ncode_r0x00434fa8:\n    fcn.0041858e();\n    fcn.0041858e();\n    fcn.0041858e();\n    fcn.0041858e();\n    fcn.0041858e();\n    return;\n}\n",
        "token_count": 1768
    },
    "00435019": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00435019(int32_t arg_8h, uint arg_ch, int32_t *arg_10h)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    int32_t *piVar2;\n    bool bVar3;\n    uint arg_8h_00;\n    uint arg_ch_00;\n    uint var_6ch;\n    int32_t var_34h;\n    int32_t var_2ch;\n    uint var_24h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = 0;\n    fcn.004219b7();\n    *in_EAX = *in_EAX + 1;\n    iVar1 = fcn.0040f269();\n    if (*(iVar1 + 8) == 0xf) {\n        while (bVar3 = *(arg_8h + 0x670) == 0,  !bVar3) {\n            fcn.004388ea();\n            fcn.00421b33();\n            if ((var_34h == 4) || (var_34h == 5)) {\n                bVar3 = *(arg_8h + 0x670) == 0;\n                break;\n            }\n            *arg_10h = var_2ch + 1;\n            fcn.00421a3d();\n        }\n        if (!bVar3) {\ncode_r0x004350e2:\n            do {\n                while( true ) {\n                    do {\n                        *arg_10h = *arg_10h + 1;\n                        iVar1 = fcn.0040fd7d();\n                        if (iVar1 == 0) goto code_r0x004350c4;\n                        iVar1 = fcn.0040f269();\n                    } while (*(iVar1 + 8) != 0);\n                    piVar2 = fcn.0040f269();\n                    iVar1 = *piVar2;\n                    if (iVar1 != 0x14) break;\ncode_r0x0043514b:\n                    var_4h = var_4h + 1;\n                }\n                if (iVar1 != 0x15) {\n                    if (iVar1 != 0x16) {\n                        if (iVar1 == 0x17) goto code_r0x0043514b;\n                        if (iVar1 != 0x18) goto code_r0x004350e2;\n                    }\n                    if (var_4h == 0) break;\n                    var_4h = var_4h + -1;\n                    goto code_r0x004350e2;\n                }\n            } while (var_4h != 0);\n            goto code_r0x004350c4;\n        }\n        iVar1 = fcn.0040f269();\n        arg_ch_00 = *(iVar1 + 0xc);\n        arg_8h_00 = 0xb5;\n    }\n    else {\n        iVar1 = fcn.0040f269();\n        arg_ch_00 = *(iVar1 + 0xc);\n        arg_8h_00 = 0x72;\n    }\n    fcn.0041fdea(arg_8h_00, arg_ch_00);\ncode_r0x004350c4:\n    fcn.004219d4();\n    fcn.0041858e();\n    fcn.0041858e();\n    return;\n}\n",
        "token_count": 774
    },
    "00435239": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_168h\n// WARNING: Variable defined which should be unmapped: var_2h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00435239(int32_t arg_8h, uint *arg_ch, uint32_t *arg_10h, uint32_t arg_14h)\n\n{\n    uint32_t arg_14h_00;\n    char cVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    uint *puVar4;\n    uint unaff_ESI;\n    uint32_t uVar5;\n    uint uStackY460;\n    uint uStackY456;\n    uint in_stack_fffffe44;\n    uint in_stack_fffffe48;\n    uint in_stack_fffffe4c;\n    uint uStack420;\n    uint uStack416;\n    uint *in_stack_fffffe74;\n    uint in_stack_fffffe78;\n    uint in_stack_fffffe7c;\n    uint *noname_2;\n    uint uVar6;\n    uint var_168h;\n    uint var_68h;\n    uint var_5ch;\n    int32_t var_50h;\n    uint var_4ch;\n    int32_t var_48h;\n    uint var_40h;\n    uint var_3ch;\n    uint32_t var_34h;\n    uint var_30h;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    int32_t var_14h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    char var_3h;\n    uint var_2h;\n    \n    arg_14h_00 = arg_14h & 3;\n    var_2h._0_1_ = arg_14h >> 2 & 1;\n    *arg_10h = *arg_10h + 1;\n    var_28h = 1;\n    var_40h = 1;\n    var_10h = 0;\n    var_14h = 0;\n    var_34h = 0;\n    var_3h = '\\0';\n    var_30h = 0;\n    var_24h = 0;\n    var_48h = 0;\n    var_3ch = 0;\n    iVar2 = fcn.0040f269();\n    if (*(iVar2 + 8) == 0) {\n        piVar3 = fcn.0040f269();\n        if (*piVar3 == 0x1e) {\n            fcn.004358a5(arg_8h, arg_ch, arg_10h, arg_14h_00);\n            goto code_r0x004357e2;\n        }\n        if (*piVar3 == 0x29) {\n            fcn.00436474(arg_8h, arg_ch, arg_10h, arg_14h_00);\n            goto code_r0x004357e2;\n        }\n    }\n    fcn.00416d61();\n    noname_2 = 0x4352dd;\n    iVar2 = fcn.0040f269();\n    while (*(iVar2 + 8) == 0xe) {\n        puVar4 = fcn.0040f269();\n        fcn.00416e83(&fcn.00435239::var_20h, *puVar4);\n        puVar4 = &fcn.00435239::var_8h;\n        uVar5 = arg_14h_00;\n        fcn.00416dcf();\n        fcn.00416b63(unaff_ESI, uStack420, uStack416, puVar4, uVar5);\n        if (var_8h == 0) {\n            if (var_2h != 0) {\n                fcn.0040f269();\n                goto code_r0x004357d4;\n            }\n            fcn.00418c7e(0x45bfe0);\n            uVar5 = arg_14h_00;\n            fcn.00416dcf();\n            fcn.00416b13(in_stack_fffffe44, in_stack_fffffe48, in_stack_fffffe4c, uVar5);\n            fcn.00416dcf();\n            fcn.00416b63(unaff_ESI, uStackY460, uStackY456, &fcn.00435239::var_8h, arg_14h_00);\n        }\n        else {\n            if ((var_34h & 0x100) != 0) {\n                fcn.0040f269();\n                goto code_r0x004357d4;\n            }\n            var_3h = '\\x01';\n        }\n        if ((var_3h != '\\0') && ((arg_14h & 1) != 0)) {\n            uVar5 = arg_14h_00;\n            fcn.00416dcf();\n            in_stack_fffffe74 = 0x4353ab;\n            cVar1 = fcn.00416ca3(0x4353ab, in_stack_fffffe7c, noname_2, uVar5);\n            if ((cVar1 == '\\0') || ((var_34h & 0x200) == 0)) goto code_r0x004353b9;\ncode_r0x00435824:\n            fcn.0040f269();\n            goto code_r0x004357d4;\n        }\ncode_r0x004353b9:\n        if ((arg_14h & 2) != 0) {\n            uVar6 = 1;\n            noname_2 = &fcn.00435239::var_50h;\n            fcn.00416dcf();\n            fcn.00416b63(in_stack_fffffe74, in_stack_fffffe78, in_stack_fffffe7c, noname_2, uVar6);\n            if ((var_50h != 0) && ((var_34h & 0x200) != 0)) goto code_r0x00435824;\n        }\n        if ((var_2h != 0) && (*(var_8h + 8) != 5)) {\n            fcn.0040f269();\n            goto code_r0x004357d4;\n        }\n        *arg_10h = *arg_10h + 1;\n        iVar2 = fcn.0040f269();\n        if (*(iVar2 + 8) == 0x13) {\n            if (var_2h == 0) {\n                var_3h = '\\0';\n            }\n            else {\n                fcn.00418a19(var_8h);\n            }\n            var_14h = 0;\n            fcn.0040f269();\n            iVar2 = fcn.0040f269();\n            if (*(iVar2 + 8) != 0x13) goto code_r0x004357d4;\n            do {\n                *arg_10h = *arg_10h + 1;\n                fcn.0040f269();\n                in_stack_fffffe74 = arg_ch;\n                iVar2 = fcn.00437a3e(arg_ch, arg_10h, &fcn.00435239::var_30h);\n                if ((iVar2 != 0) || (iVar2 = fcn.00418733(),  iVar2 < 1)) goto code_r0x004357d4;\n                uVar5 = *arg_10h;\n                iVar2 = fcn.0040f269();\n                if ((*(iVar2 + 8) != 0x14) || (0x40 < var_14h)) goto code_r0x004357d4;\n                *arg_10h = uVar5 + 1;\n                uVar6 = fcn.00418733();\n                puVar4 = &fcn.00435239::var_168h + var_14h;\n                var_14h = var_14h + 1;\n                *puVar4 = uVar6;\n                iVar2 = fcn.0040f269();\n            } while (*(iVar2 + 8) == 0x13);\n            if (var_14h < 1) goto code_r0x004357d4;\n            fcn.00419f46();\n            iVar2 = 0;\n            if (0 < var_14h) {\n                do {\n                    cVar1 = fcn.00419f66();\n                    if (cVar1 == '\\0') goto code_r0x004357d4;\n                    iVar2 = iVar2 + 1;\n                } while (iVar2 < var_14h);\n            }\n            uStack416 = 0x43551b;\n            cVar1 = fcn.0041a000(0);\n            if (cVar1 == '\\0') goto code_r0x004357d4;\n            if (((var_2h != 0) && (var_48h != 0)) && ('\\0' < *(var_48h + 0x20c))) {\n                uStack416 = 0x435548;\n                fcn.0041a214(&fcn.00435239::var_48h);\n            }\n        }\n        uVar5 = *arg_10h;\n        iVar2 = fcn.0040f269();\n        if (*(iVar2 + 8) == 2) {\n            *arg_10h = uVar5 + 1;\n            iVar2 = fcn.0040f269();\n            var_4ch = *(iVar2 + 0xc);\n            if (var_3h != '\\0') {\n                fcn.00418c7e(0x45bfe0);\n                in_stack_fffffe74 = &fcn.00435239::var_30h;\n                fcn.00418a19();\n            }\n            uVar5 = *arg_10h;\n            iVar2 = fcn.0040f269();\n            if (*(iVar2 + 8) == 0x13) {\n                if ((var_2h != 0) || (*(var_8h + 8) != 5)) goto code_r0x004357d4;\n                if (*(arg_8h + 0x29b) != '\\0') {\n                    var_ch = 0;\n                    for (; uVar5 < arg_ch[3]; uVar5 = uVar5 + 1) {\n                        piVar3 = fcn.0040f269();\n                        if (piVar3[2] == 0xe) {\n                            in_stack_fffffe74 = *piVar3;\n                            fcn.00416d81();\n                            var_10h = var_10h | 1;\n                            cVar1 = fcn.00416f96();\n                            var_2h._1_1_ = '\\x01';\n                            if (cVar1 == '\\0') goto code_r0x0043560d;\n                        }\n                        else {\ncode_r0x0043560d:\n                            var_2h._1_1_ = '\\0';\n                        }\n                        if ((var_10h & 1) != 0) {\n                            var_10h = var_10h & 0xfffffffe;\n                            fcn.0044951c(var_68h);\n                        }\n                        if (var_2h._1_1_ != '\\0') goto code_r0x004357d4;\n                        iVar2 = piVar3[2];\n                        if ((iVar2 == 0x13) || (iVar2 == 8)) {\n                            var_ch = var_ch + 1;\n                        }\n                        else if ((iVar2 == 0x14) || (iVar2 == 9)) {\n                            var_ch = var_ch + -1;\n                        }\n                        else if (((iVar2 == 0x11) && (var_ch == 0)) || (iVar2 == 0xf)) break;\n                    }\n                }\n                if (0 < var_14h) {\n                    puVar4 = &fcn.00435239::var_168h;\n                    for (iVar2 = var_14h; iVar2 != 0; iVar2 = iVar2 + -1) {\n                        *puVar4 = 0;\n                        puVar4 = puVar4 + 1;\n                    }\n                }\n                uStack420 = 0x435697;\n                in_stack_fffffe74 = arg_ch;\n                cVar1 = fcn.00433489(arg_ch, arg_10h, var_8h, &fcn.00435239::var_168h, 1);\n                if (cVar1 == '\\0') goto code_r0x004357d9;\n            }\n            else {\n                if (*(var_8h + 8) == 5) goto code_r0x004357d4;\n                if (*(arg_8h + 0x29b) != '\\0') {\n                    var_ch = 0;\n                    for (; uVar5 < arg_ch[3]; uVar5 = uVar5 + 1) {\n                        piVar3 = fcn.0040f269();\n                        if (piVar3[2] == 0xe) {\n                            in_stack_fffffe74 = *piVar3;\n                            fcn.00416d81();\n                            var_10h = var_10h | 2;\n                            cVar1 = fcn.00416f96();\n                            var_2h._1_1_ = '\\x01';\n                            if (cVar1 == '\\0') goto code_r0x00435701;\n                        }\n                        else {\ncode_r0x00435701:\n                            var_2h._1_1_ = '\\0';\n                        }\n                        if ((var_10h & 2) != 0) {\n                            var_10h = var_10h & 0xfffffffd;\n                            fcn.0044951c(var_5ch);\n                        }\n                        if (var_2h._1_1_ != '\\0') goto code_r0x004357d4;\n                        iVar2 = piVar3[2];\n                        if ((iVar2 == 0x13) || (iVar2 == 8)) {\n                            var_ch = var_ch + 1;\n                        }\n                        else if ((iVar2 == 0x14) || (iVar2 == 9)) {\n                            var_ch = var_ch + -1;\n                        }\n                        else if (((iVar2 == 0x11) && (var_ch == 0)) || (iVar2 == 0xf)) break;\n                    }\n                }\n                iVar2 = fcn.00437a3e(arg_ch, arg_10h, &fcn.00435239::var_30h);\n                if (iVar2 != 0) goto code_r0x004357d4;\n                in_stack_fffffe74 = &fcn.00435239::var_30h;\n                uStack416 = 0x435786;\n                fcn.00418a19();\n            }\n        }\n        uVar5 = *arg_10h;\n        iVar2 = fcn.0040f269();\n        if (*(iVar2 + 8) == 0xf) goto code_r0x004357d9;\n        iVar2 = fcn.0040f269();\n        if (*(iVar2 + 8) != 0x11) break;\n        *arg_10h = uVar5 + 1;\n        iVar2 = fcn.0040f269();\n    }\n    fcn.0040f269();\ncode_r0x004357d4:\n    fcn.0041fdea(in_stack_fffffe74, in_stack_fffffe78);\ncode_r0x004357d9:\n    fcn.0044951c(var_20h);\ncode_r0x004357e2:\n    fcn.0041858e();\n    fcn.0041858e();\n    return;\n}\n",
        "token_count": 3483
    },
    "004358a5": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.004358a5(uint arg_8h, uint *arg_ch, uint32_t *arg_10h, uint arg_14h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    uint *puVar4;\n    uint uVar5;\n    uint32_t uVar6;\n    uint uStackY444;\n    uint uStackY440;\n    uint in_stack_fffffe54;\n    uint in_stack_fffffe58;\n    uint in_stack_fffffe5c;\n    uint in_stack_fffffe68;\n    uint in_stack_fffffe6c;\n    uint in_stack_fffffe70;\n    uint *in_stack_fffffe84;\n    uint32_t *in_stack_fffffe88;\n    uint *lpsz;\n    uint var_158h;\n    uint var_54h;\n    uint var_48h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    int32_t var_1ch;\n    uint var_18h;\n    uint32_t var_14h;\n    int32_t var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    uint var_1h;\n    \n    *arg_10h = *arg_10h + 1;\n    var_ch = 0;\n    var_1ch = 0;\n    var_3ch = 0;\n    var_38h = 0;\n    var_30h = 1;\n    var_2ch = 0;\n    iVar2 = fcn.0040f269();\n    if ((*(iVar2 + 8) == 0) && (piVar3 = fcn.0040f269(),  *piVar3 == 0x29)) {\n        fcn.00436474(arg_8h, arg_ch, arg_10h, arg_14h);\n    }\n    else {\n        fcn.00416d61();\n        lpsz = 0x435914;\n        iVar2 = fcn.0040f269();\n        while (*(iVar2 + 8) == 0xe) {\n            puVar4 = fcn.0040f269();\n            fcn.00416e83(&fcn.004358a5::var_28h, *puVar4);\n            puVar4 = &fcn.004358a5::var_10h;\n            uVar5 = arg_14h;\n            fcn.00416dcf();\n            fcn.00416b63(in_stack_fffffe68, in_stack_fffffe6c, in_stack_fffffe70, puVar4, uVar5);\n            if (var_10h != 0) {\n                fcn.0040f269();\n                goto code_r0x00435d69;\n            }\n            fcn.00418c7e(0x45bfe0);\n            uVar5 = arg_14h;\n            fcn.00416dcf();\n            fcn.00416b13(in_stack_fffffe54, in_stack_fffffe58, in_stack_fffffe5c, uVar5);\n            fcn.00416dcf();\n            fcn.00416b63(lpsz, uStackY444, uStackY440, &fcn.004358a5::var_10h, arg_14h);\n            *arg_10h = *arg_10h + 1;\n            iVar2 = fcn.0040f269();\n            if (*(iVar2 + 8) == 0x13) {\n                var_1ch = 0;\n                iVar2 = fcn.0040f269();\n                var_18h = *(iVar2 + 0xc);\n                iVar2 = fcn.0040f269();\n                if (*(iVar2 + 8) != 0x13) goto code_r0x00435d69;\n                do {\n                    *arg_10h = *arg_10h + 1;\n                    iVar2 = fcn.0040f269();\n                    var_18h = *(iVar2 + 0xc);\n                    in_stack_fffffe88 = arg_10h;\n                    lpsz = arg_ch;\n                    iVar2 = fcn.00437a3e(arg_ch, arg_10h, &fcn.004358a5::var_38h);\n                    if ((iVar2 != 0) || (iVar2 = fcn.00418733(),  iVar2 < 1)) goto code_r0x00435d69;\n                    uVar6 = *arg_10h;\n                    iVar2 = fcn.0040f269();\n                    if (*(iVar2 + 8) != 0x14) goto code_r0x00435d69;\n                    *arg_10h = uVar6 + 1;\n                    uVar5 = fcn.00418733();\n                    puVar4 = &fcn.004358a5::var_158h + var_1ch;\n                    var_1ch = var_1ch + 1;\n                    *puVar4 = uVar5;\n                    iVar2 = fcn.0040f269();\n                } while (*(iVar2 + 8) == 0x13);\n                if (var_1ch < 1) goto code_r0x00435d69;\n                fcn.00419f46();\n                iVar2 = 0;\n                if (0 < var_1ch) {\n                    do {\n                        cVar1 = fcn.00419f66();\n                        if (cVar1 == '\\0') goto code_r0x00435d69;\n                        iVar2 = iVar2 + 1;\n                    } while (iVar2 < var_1ch);\n                }\n                cVar1 = fcn.0041a000(0);\n                if (cVar1 == '\\0') goto code_r0x00435d69;\n            }\n            uVar6 = *arg_10h;\n            iVar2 = fcn.0040f269();\n            if (*(iVar2 + 8) != 2) {\n                fcn.0040f269();\n                goto code_r0x00435d69;\n            }\n            uVar6 = uVar6 + 1;\n            *arg_10h = uVar6;\n            iVar2 = fcn.0040f269();\n            var_18h = *(iVar2 + 0xc);\n            iVar2 = fcn.0040f269();\n            if (*(iVar2 + 8) == 0x13) {\n                if (*(var_10h + 8) != 5) goto code_r0x00435d69;\n                var_8h = 0;\n                var_14h = uVar6;\n                if (uVar6 < arg_ch[3]) {\n                    do {\n                        puVar4 = fcn.0040f269();\n                        if (puVar4[2] == 0xe) {\n                            lpsz = *puVar4;\n                            fcn.00416d81();\n                            var_ch = var_ch | 1;\n                            in_stack_fffffe88 = 0x435b2a;\n                            cVar1 = fcn.00416f96();\n                            var_1h._0_1_ = '\\x01';\n                            if (cVar1 == '\\0') goto code_r0x00435b38;\n                        }\n                        else {\ncode_r0x00435b38:\n                            var_1h._0_1_ = '\\0';\n                        }\n                        if ((var_ch & 1) != 0) {\n                            var_ch = var_ch & 0xfffffffe;\n                            in_stack_fffffe88 = 0x435b4e;\n                            fcn.0044951c(var_48h);\n                        }\n                        if (var_1h != '\\0') goto code_r0x00435d69;\n                        iVar2 = puVar4[2];\n                        if ((iVar2 == 0x13) || (iVar2 == 8)) {\n                            var_8h = var_8h + 1;\n                        }\n                        else if ((iVar2 == 0x14) || (iVar2 == 9)) {\n                            var_8h = var_8h + -1;\n                        }\n                        else if (((iVar2 == 0x11) && (var_8h == 0)) || (iVar2 == 0xf)) break;\n                        var_14h = var_14h + 1;\n                    } while (var_14h < arg_ch[3]);\n                }\n                if (0 < var_1ch) {\n                    puVar4 = &fcn.004358a5::var_158h;\n                    for (iVar2 = var_1ch; iVar2 != 0; iVar2 = iVar2 + -1) {\n                        *puVar4 = 0;\n                        puVar4 = puVar4 + 1;\n                    }\n                }\n                in_stack_fffffe88 = &fcn.004358a5::var_158h;\n                in_stack_fffffe84 = arg_ch;\n                cVar1 = fcn.00433489(arg_ch, arg_10h, arg_ch, in_stack_fffffe88, 1);\n                if (cVar1 == '\\0') goto code_r0x00435d6e;\n            }\n            else {\n                if (*(var_10h + 8) == 5) goto code_r0x00435d69;\n                var_8h = 0;\n                var_14h = uVar6;\n                if (uVar6 < arg_ch[3]) {\n                    do {\n                        puVar4 = fcn.0040f269();\n                        iVar2 = puVar4[2];\n                        if (iVar2 == 0xf) break;\n                        if ((iVar2 == 0x13) || (iVar2 == 8)) {\n                            var_8h = var_8h + 1;\n                        }\n                        else if ((iVar2 == 0x14) || (iVar2 == 9)) {\n                            var_8h = var_8h + -1;\n                        }\n                        else {\n                            if ((iVar2 == 0x11) && (var_8h == 0)) break;\n                            if (iVar2 == 0xe) {\n                                lpsz = *puVar4;\n                                fcn.00416d81();\n                                var_ch = var_ch | 2;\n                                in_stack_fffffe88 = 0x435c3e;\n                                cVar1 = fcn.00416f96();\n                                var_1h._0_1_ = '\\x01';\n                                if (cVar1 == '\\0') goto code_r0x00435c4c;\n                            }\n                            else {\ncode_r0x00435c4c:\n                                var_1h._0_1_ = '\\0';\n                            }\n                            if ((var_ch & 2) != 0) {\n                                var_ch = var_ch & 0xfffffffd;\n                                in_stack_fffffe88 = 0x435c62;\n                                fcn.0044951c(var_54h);\n                            }\n                            if (var_1h != '\\0') goto code_r0x00435d69;\n                        }\n                        var_14h = var_14h + 1;\n                    } while (var_14h < arg_ch[3]);\n                }\n                in_stack_fffffe84 = arg_ch;\n                in_stack_fffffe88 = arg_10h;\n                iVar2 = fcn.00437a3e(arg_ch, arg_10h, &fcn.004358a5::var_38h);\n                if (iVar2 != 0) goto code_r0x00435d69;\n                in_stack_fffffe84 = &fcn.004358a5::var_38h;\n                fcn.00418a19();\n            }\n            uVar6 = *arg_10h;\n            iVar2 = fcn.0040f269();\n            if (*(iVar2 + 8) == 0xf) goto code_r0x00435d6e;\n            iVar2 = fcn.0040f269();\n            if (*(iVar2 + 8) != 0x11) break;\n            *arg_10h = uVar6 + 1;\n            iVar2 = fcn.0040f269();\n        }\n        fcn.0040f269();\ncode_r0x00435d69:\n        fcn.0041fdea(in_stack_fffffe84, in_stack_fffffe88);\ncode_r0x00435d6e:\n        fcn.0044951c(var_28h);\n    }\n    fcn.0041858e();\n    return;\n}\n",
        "token_count": 2797
    },
    "00435dfd": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00435dfd(uint arg_8h)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    int32_t in_ECX;\n    uint arg_8h_00;\n    uint arg_ch;\n    uint var_14h;\n    uint var_ch;\n    uint var_8h;\n    \n    var_14h = 0;\n    var_8h = 0;\n    *in_EAX = *in_EAX + 1;\n    var_ch = 1;\n    iVar1 = fcn.0040f269();\n    if (*(iVar1 + 8) == 0xf) {\n        *0x4679d8 = 1;\n        *(in_ECX + 0x290) = 1;\n    }\n    else {\n        iVar1 = fcn.00437a3e(arg_8h, in_EAX, &var_14h);\n        *0x4679d8 = 1;\n        *(in_ECX + 0x290) = 1;\n        if (iVar1 == 0) {\n            iVar1 = fcn.0040f269();\n            if (*(iVar1 + 8) == 0xf) {\n                *0x4679dc = fcn.00418733();\n                if ((*(in_ECX + 0x2b8) == '\\0') || (*0x4679dc < 0x7ffff000)) goto code_r0x00435eaa;\n                arg_ch = 0xffffffff;\n                arg_8h_00 = 0xb9;\n            }\n            else {\n                iVar1 = fcn.0040f269();\n                arg_ch = *(iVar1 + 0xc);\n                arg_8h_00 = 0x72;\n            }\n            fcn.0041fdea(arg_8h_00, arg_ch);\n        }\n    }\ncode_r0x00435eaa:\n    fcn.0041858e();\n    return;\n}\n",
        "token_count": 432
    },
    "00435eb9": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00435eb9(int32_t param_1)\n\n{\n    int32_t **ppiVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint32_t *puVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    ulong uVar9;\n    int32_t in_stack_ffffff3c;\n    uint uVar10;\n    uint uStack156;\n    int32_t **ppiStack148;\n    uint32_t uStack144;\n    uint uStack140;\n    int32_t aiStack132 [2];\n    uint uStack124;\n    int32_t iStack116;\n    uint32_t *puStack112;\n    int32_t iStack104;\n    uint32_t *puStack100;\n    int32_t iStack92;\n    uint32_t *puStack88;\n    int32_t iStack80;\n    uint32_t *puStack76;\n    int32_t iStack68;\n    int32_t iStack64;\n    uint32_t *puStack60;\n    uint32_t uStack56;\n    int32_t iStack52;\n    uint32_t *puStack48;\n    uint32_t uStack44;\n    uint32_t uStack40;\n    int32_t iStack36;\n    int32_t iStack32;\n    uint32_t uStack28;\n    int32_t iStack24;\n    int32_t iStack20;\n    int32_t iStack16;\n    int32_t iStack12;\n    int32_t iStack8;\n    \n    uStack124 = 0xffffffff;\n    uStack156 = 0x45d544;\n    ppiStack148 = NULL;\n    uStack144 = 0;\n    uStack140 = 0;\n    iStack16 = 0;\n    iStack24 = 0;\n    iStack36 = 0;\n    iStack12 = 0;\n    iStack8 = 0;\n    iStack20 = 0;\n    iStack32 = 0;\n    iStack52 = 0;\n    puStack48 = NULL;\n    iStack104 = 0;\n    puStack100 = NULL;\n    iStack64 = 0;\n    puStack60 = NULL;\n    iStack80 = 0;\n    puStack76 = NULL;\n    iStack116 = 0;\n    puStack112 = NULL;\n    iStack92 = 0;\n    puStack88 = NULL;\n    uVar9 = fcn.0040fd7d();\n    iVar2 = uVar9 >> 0x20;\n    uVar5 = 0;\n    if (uVar9 != 0) {\ncode_r0x00435f31:\n        *(param_1 + 0x28c) = iVar2;\n        iStack68 = iVar2 + 1;\n        uVar10 = 0x435f4b;\n        iVar2 = fcn.00428899(param_1, &stack0xffffff64);\n        ppiVar1 = ppiStack148;\n        if (iVar2 != 0) goto code_r0x004362cb;\n        uStack28 = 0;\n        uVar7 = 0;\n        while( true ) {\n            piVar3 = &stack0xffffff7c;\n            if (uVar7 < uStack144) {\n                piVar3 = ppiStack148[uVar7];\n            }\n            if (piVar3[2] == 0xf) break;\n            uVar7 = uVar7 + 1;\n        }\n        if (uVar7 != 0) {\n            uVar7 = uVar7 - 1;\n        }\n        piVar3 = &stack0xffffff7c;\n        if (uStack144 != 0) {\n            piVar3 = *ppiStack148;\n        }\n        uVar8 = uVar5;\n        if (piVar3[2] != 0) goto code_r0x00436308;\n        piVar3 = &stack0xffffff7c;\n        if (uStack144 != 0) {\n            piVar3 = *ppiStack148;\n        }\n        iVar2 = *piVar3;\n        if (iVar2 < 0xf) {\n            if (iVar2 == 0xe) {\n                iStack8 = iStack8 + -1;\n                uVar8 = uVar5 - 1;\n                if (iStack116 != 0) {\n                    uVar5 = *puStack112;\n                    fcn.004366eb();\n                }\n                if ((-1 < iStack8) && (uVar8 == uVar5)) goto code_r0x00436308;\n                uVar10 = 0x95;\n                goto code_r0x00436370;\n            }\n    // switch table (10 cases) at 0x4363c5\n            switch(iVar2) {\n            case 4:\n                do {\n                    piVar3 = &stack0xffffff7c;\n                    if (uStack28 < uStack144) {\n                        piVar3 = ppiStack148[uStack28];\n                    }\n                    if (piVar3[2] == 0xf) {\n                        uVar10 = 0xa1;\n                        goto code_r0x00436370;\n                    }\n                    piVar3 = &stack0xffffff7c;\n                    if (uStack28 < uStack144) {\n                        piVar3 = ppiStack148[uStack28];\n                    }\n                    if (piVar3[2] == 0) {\n                        piVar3 = &stack0xffffff7c;\n                        if (uStack28 < uStack144) {\n                            piVar3 = ppiStack148[uStack28];\n                        }\n                        if (*piVar3 == 5) goto code_r0x00436024;\n                    }\n                    uStack28 = uStack28 + 1;\n                } while( true );\n            case 5:\n                uVar10 = 0x81;\n                goto code_r0x00436370;\n            case 6:\n            case 7:\n                if (iStack16 != 0) break;\n                uVar10 = 0x74;\n                goto code_r0x00436370;\n            case 8:\n                iStack16 = iStack16 + -1;\n                uVar8 = uVar5 - 1;\n                if (iStack104 != 0) {\n                    uVar5 = *puStack100;\n                    fcn.004366eb();\n                }\n                if ((iStack16 < 0) || (uVar8 != uVar5)) {\n                    uVar10 = 0x75;\n                    goto code_r0x00436370;\n                }\n                break;\n            case 9:\n                iStack12 = iStack12 + 1;\n                uStack28 = uVar5;\n                goto code_r0x0043628c;\n            case 10:\n                iStack12 = iStack12 + -1;\n                uVar8 = uVar5 - 1;\n                if (iStack80 != 0) {\n                    uVar5 = *puStack76;\n                    fcn.004366eb();\n                }\n                if ((iStack12 < 0) || (uVar8 != uVar5)) {\n                    uVar10 = 0x78;\n                    goto code_r0x00436370;\n                }\n                break;\n            case 0xb:\n                iStack20 = iStack20 + 1;\n                uStack28 = uVar5;\n                goto code_r0x0043628c;\n            case 0xc:\n                iStack20 = iStack20 + -1;\n                uVar8 = uVar5 - 1;\n                if (iStack92 != 0) {\n                    uVar5 = *puStack88;\n                    fcn.004366eb();\n                }\n                if ((iStack20 < 0) || (uVar8 != uVar5)) {\n                    uVar10 = 0x93;\n                    goto code_r0x00436370;\n                }\n                break;\n            case 0xd:\n                iStack8 = iStack8 + 1;\n                uStack28 = uVar5;\ncode_r0x0043628c:\n                fcn.004366cd(uVar10);\n                uVar8 = uVar5 + 1;\n            }\n        }\n        else if (iVar2 < 0x18) {\n            if (iVar2 == 0x17) {\n                iStack32 = iStack32 + 1;\n                uStack40 = uVar5;\n                goto code_r0x0043628c;\n            }\n            if (0x11 < iVar2) {\n                if (iVar2 < 0x14) {\n                    if (((iStack20 == 0) && (iStack12 == 0)) && (iStack8 == 0)) {\n                        uVar10 = 0x96;\n                        goto code_r0x00436370;\n                    }\n                }\n                else {\n                    if (iVar2 == 0x14) {\n                        iStack24 = iStack24 + 1;\n                        uStack40 = uVar5;\n                        goto code_r0x0043628c;\n                    }\n                    if (iVar2 == 0x15) {\n                        puVar6 = puStack60;\n                        if (iStack64 != 0) {\ncode_r0x00436225:\n                            if (uVar5 - 1 != *puVar6) {\n                                puVar6 = &stack0xffffffd4;\n                                if (iStack52 != 0) {\n                                    puVar6 = puStack48;\n                                }\n                                if (uVar5 - 1 != *puVar6) goto code_r0x00436243;\n                            }\n                            goto code_r0x00436308;\n                        }\n                        if (iStack52 != 0) {\n                            puVar6 = &stack0xffffffc8;\n                            goto code_r0x00436225;\n                        }\ncode_r0x00436243:\n                        uVar10 = 0x98;\n                        goto code_r0x00436370;\n                    }\n                    if (iVar2 == 0x16) {\n                        iStack24 = iStack24 + -1;\n                        uVar8 = uVar5 - 1;\n                        if (iStack64 != 0) {\n                            uVar5 = *puStack60;\n                            fcn.004366eb();\n                        }\n                        if ((-1 < iStack24) && (uVar8 == uVar5)) goto code_r0x00436308;\n                        uVar10 = 0x99;\n                        goto code_r0x00436370;\n                    }\n                }\n            }\n        }\n        else {\n            if (iVar2 != 0x18) {\n                if (iVar2 == 0x1f) {\n                    iStack36 = iStack36 + 1;\n                    if (1 < iStack36) goto code_r0x00436369;\n                }\n                else {\n                    if (iVar2 != 0x20) goto code_r0x00436308;\n                    iStack36 = iStack36 + -1;\n                    if (iStack36 != 0) goto code_r0x00436369;\n                }\n                in_stack_ffffff3c = iStack12;\n                iVar2 = fcn.004363ed(iStack20, iStack12, iStack20, iStack24, iStack32, iStack16);\n                if (iVar2 == 0) goto code_r0x00436308;\n                goto code_r0x004362cb;\n            }\n            iStack32 = iStack32 + -1;\n            uVar8 = uVar5 - 1;\n            if (iStack52 != 0) {\n                uVar5 = *puStack48;\n                fcn.004366eb();\n            }\n            if ((iStack32 < 0) || (uVar8 != uVar5)) {\n                uVar10 = 0xb3;\n                goto code_r0x00436370;\n            }\n        }\n        goto code_r0x00436308;\n    }\ncode_r0x00436340:\n    iVar2 = fcn.004363ed(iStack20, iStack12, iStack8, iStack24, iStack32, iStack16);\n    if (iVar2 == 0) {\n        if (iStack36 == 0) {\n            uVar10 = 0;\n            goto code_r0x0043637f;\n        }\ncode_r0x00436369:\n        in_stack_ffffff3c = -1;\n        uVar10 = 0x83;\ncode_r0x00436370:\n        fcn.0041fdea(uVar10, in_stack_ffffff3c);\n    }\ncode_r0x004362cb:\n    uVar10 = 1;\ncode_r0x0043637f:\n    fcn.0040d9d7();\n    fcn.0040d9d7();\n    fcn.0040d9d7();\n    fcn.0040d9d7();\n    fcn.0040d9d7();\n    fcn.0040d9d7();\n    fcn.0042190c();\n    return uVar10;\ncode_r0x00436024:\n    piVar3 = &stack0xffffff7c;\n    if (uVar7 < uStack144) {\n        piVar3 = ppiStack148[uVar7];\n    }\n    if (piVar3[2] == 0) {\n        piVar3 = &stack0xffffff7c;\n        if (uVar7 < uStack144) {\n            piVar3 = ppiStack148[uVar7];\n        }\n        if (*piVar3 == 5) {\n            iStack16 = iStack16 + 1;\n            uVar8 = uVar5 + 1;\n            uStack40 = uVar5;\n            fcn.004366cd(uVar10);\n        }\n    }\n    uVar5 = uStack28 + 1;\n    piVar3 = &stack0xffffff7c;\n    if (uVar5 < uStack144) {\n        piVar3 = ppiVar1[uVar5];\n    }\n    if (piVar3[2] == 0) {\n        piVar3 = &stack0xffffff7c;\n        if (uVar5 < uStack144) {\n            piVar3 = ppiVar1[uVar5];\n        }\n        iVar2 = *piVar3;\n        if ((iVar2 < 0x12) ||\n           ((0x13 < iVar2 && ((iVar2 < 0x19 || ((0x1e < iVar2 && ((iVar2 < 0x21 || (0x22 < iVar2)))))))))) {\n            piVar3 = &stack0xffffff7c;\n            if (uVar5 < uStack144) {\n                piVar3 = ppiVar1[uVar5];\n            }\n            in_stack_ffffff3c = piVar3[3];\n            uVar10 = 0x9f;\n            goto code_r0x00436370;\n        }\n    }\ncode_r0x00436308:\n    iVar4 = fcn.0040fd7d();\n    iVar2 = iStack68;\n    uVar5 = uVar8;\n    if (iVar4 == 0) goto code_r0x00436340;\n    goto code_r0x00435f31;\n}\n",
        "token_count": 3334
    },
    "00436474": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00436474(uint arg_8h, uint arg_ch, int32_t *arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    uint in_stack_ffffffa0;\n    uint in_stack_ffffffa4;\n    uint uVar5;\n    uint uVar6;\n    uint lpsz;\n    uint var_38h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    lpsz = 1;\n    var_28h = 0;\n    var_20h = 1;\n    var_1ch = 0;\n    fcn.00418bb9();\n    fcn.00418bb9(0);\n    var_4h = 0xb;\n    fcn.00416d61();\n    *arg_10h = *arg_10h + 1;\n    iVar3 = *arg_10h;\n    uVar5 = 0x4364c6;\n    iVar1 = fcn.0040f269();\n    if (*(iVar1 + 8) == 0) {\n        uVar5 = 0x4364d6;\n        piVar2 = fcn.0040f269();\n        if (*piVar2 == 0x10) {\n            *arg_10h = iVar3 + 1;\n            uVar5 = 0x4364e8;\n            iVar1 = fcn.0040f269();\n            iVar1 = *(iVar1 + 8);\n            if (iVar1 == 10) {\ncode_r0x004364fa:\n                var_4h = 0xb;\n            }\n            else if (iVar1 == 0xb) {\n                var_4h = 0xc;\n            }\n            else {\n                if (iVar1 != 0xd) {\n                    *arg_10h = iVar3;\n                    goto code_r0x004364fa;\n                }\n                uVar5 = 1;\n                fcn.00418bb9();\n                var_4h = 0xd;\n            }\n            *arg_10h = *arg_10h + 1;\n            iVar3 = fcn.0040f269();\n            if (*(iVar3 + 8) != 0x19) goto code_r0x0043666c;\n            puVar4 = fcn.0040f269();\n            in_stack_ffffffa4 = *puVar4;\n            in_stack_ffffffa0 = 0x43652d;\n            fcn.00418bb9();\n            *arg_10h = *arg_10h + 1;\n        }\n    }\n    iVar3 = fcn.0040f269();\n    for (iVar3 = *(iVar3 + 8); iVar3 == 0xe; iVar3 = *(iVar3 + 8)) {\n        puVar4 = fcn.0040f269();\n        fcn.00416e83(&fcn.00436474::var_18h, *puVar4);\n        *arg_10h = *arg_10h + 1;\n        iVar3 = *arg_10h;\n        iVar1 = fcn.0040f269();\n        if (*(iVar1 + 8) == 2) {\n            *arg_10h = iVar3 + 1;\n            iVar3 = fcn.00437a3e(arg_ch, arg_10h, &fcn.00436474::var_28h);\n            if (iVar3 != 0) {\n                uVar5 = 0x6e;\n                goto code_r0x004366a8;\n            }\n        }\n        puVar4 = &fcn.00436474::var_8h;\n        uVar6 = arg_14h;\n        fcn.00416dcf();\n        fcn.00416b63(lpsz, unaff_EDI, unaff_ESI, puVar4, uVar6);\n        if (var_8h != 0) {\n            fcn.0040f269();\n            uVar5 = 0xa3;\n            goto code_r0x004366a8;\n        }\n        uVar6 = arg_14h;\n        fcn.00416dcf();\n        fcn.00416b13(in_stack_ffffffa0, in_stack_ffffffa4, uVar5, uVar6);\n        if (var_4h == 0xb) {\n            fcn.004192a2();\n        }\n        else if (var_4h == 0xc) {\n            fcn.004193f0();\n        }\n        else if (var_4h == 0xd) {\n            fcn.004194be();\n        }\n        iVar3 = *arg_10h;\n        iVar1 = fcn.0040f269();\n        if (*(iVar1 + 8) == 0xf) goto code_r0x004366ad;\n        iVar1 = fcn.0040f269();\n        if (*(iVar1 + 8) != 0x11) {\n            fcn.0040f269();\n            uVar5 = 0x7f;\n            goto code_r0x004366a8;\n        }\n        *arg_10h = iVar3 + 1;\n        iVar3 = fcn.0040f269();\n    }\ncode_r0x0043666c:\n    iVar3 = fcn.0040f269();\n    in_stack_ffffffa4 = *(iVar3 + 0xc);\n    uVar5 = 0x9d;\ncode_r0x004366a8:\n    fcn.0041fdea(uVar5, in_stack_ffffffa4);\ncode_r0x004366ad:\n    fcn.0044951c(var_18h);\n    fcn.0041858e();\n    fcn.0041858e();\n    return;\n}\n",
        "token_count": 1353
    },
    "00436704": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: lpName\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __cdecl fcn.00436704(uint arg_8h)\n\n{\n    uint16_t uVar1;\n    bool bVar2;\n    uint16_t *puVar3;\n    uint32_t uVar4;\n    ushort extraout_var;\n    ushort extraout_var_00;\n    ushort extraout_var_01;\n    ushort extraout_var_02;\n    ushort uVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    ushort uStackY8224;\n    uint uStackY40;\n    uint *puStackY36;\n    uint *lpName;\n    uint uStack28;\n    uint *puStack24;\n    uint32_t var_10h;\n    uint var_1h;\n    \n    fcn.0044c510();\n    fcn.00416d61();\n    fcn.00416d61();\n    iVar6 = 0;\n    puVar3 = fcn.00418641();\n    uVar4 = puVar3 & 0xffff0000 | *puVar3;\n    bVar2 = false;\n    if (*puVar3 != 0) {\n        do {\n            iVar7 = iVar6 + 1;\n            if (uVar4 == 0x25) {\n                if (puVar3[iVar7] == 0x25) {\n                    var_10h = 0x25;\n                    bVar2 = true;\n                    puStack24 = 0x436764;\n                    fcn.00416f01();\n                    iVar7 = iVar6 + 2;\n                    uVar5 = extraout_var;\n                }\n                else {\n                    var_10h = 0x45bfe0;\n                    puStack24 = &fcn.00436704::lpName;\n                    uStack28 = 0x436778;\n                    fcn.00416e83();\n                    while( true ) {\n                        uVar1 = puVar3[iVar7];\n                        if ((uVar1 == 0x25) || (uVar1 == 0)) break;\n                        lpName = 0x436788;\n                        puStack24 = uVar1;\n                        fcn.00416f01();\n                        iVar7 = iVar7 + 1;\n                    }\n                    if (puVar3[iVar7] == 0) {\n                        uStack28 = 0x4610b8;\n                        bVar2 = true;\n                        lpName = 0x436825;\n                        fcn.00417064();\n                        lpName = &fcn.00436704::lpName;\n                        puStackY36 = 0x436831;\n                        fcn.00416ebe(lpName);\n                        break;\n                    }\n                    uStackY8224 = 0;\n                    uStack28 = 0xfff;\n                    puStackY36 = &stack0xffffdfe0;\n                    iVar7 = iVar7 + 1;\n                    uStackY40 = 0x4367ba;\n                    lpName = puStackY36;\n                    iVar6 = (**0x4591f4)();\n                    if (iVar6 == 0) {\n                        bVar2 = true;\n                        fcn.00417064();\n                        fcn.00416ebe(&fcn.00436704::lpName);\n                        var_10h = 0x4367fb;\n                        fcn.00417064();\n                        uVar5 = extraout_var_01;\n                    }\n                    else {\n                        fcn.00417064();\n                        bVar2 = true;\n                        uVar5 = extraout_var_00;\n                    }\n                }\n            }\n            else {\n                puStack24 = 0x436806;\n                var_10h = uVar4;\n                fcn.00416f01();\n                uVar5 = extraout_var_02;\n            }\n            uVar4 = CONCAT22(uVar5, puVar3[iVar7]);\n            iVar6 = iVar7;\n        } while (puVar3[iVar7] != 0);\n        if (bVar2) {\n            puStackY36 = 0x436842;\n            fcn.00418cb1();\n        }\n    }\n    puStackY36 = 0x43684b;\n    fcn.0044951c();\n    puStackY36 = var_10h;\n    uStackY40 = 0x436853;\n    fcn.0044951c();\n    return;\n}\n",
        "token_count": 962
    },
    "0043685b": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0043685b(uint arg_8h, uint arg_ch)\n\n{\n    uint16_t uVar1;\n    int16_t iVar2;\n    int16_t *piVar3;\n    uint *puVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    uint uVar8;\n    uint uVar9;\n    uint in_stack_ffffffac;\n    uint uVar10;\n    uint *puVar11;\n    uint var_3ch;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_20h;\n    uint var_14h;\n    int32_t var_10h;\n    int16_t *var_ch;\n    int32_t var_8h;\n    uint var_1h;\n    \n    fcn.00416d61();\n    fcn.00416d61();\n    iVar6 = 0;\n    piVar3 = fcn.00418641();\n    iVar2 = *piVar3;\n    var_1h._0_1_ = '\\0';\n    var_ch = piVar3;\n    if (iVar2 != 0) {\n        do {\n            iVar7 = iVar6 + 1;\n            if (iVar2 == 0x24) {\n                if (piVar3[iVar7] == 0x24) {\ncode_r0x00436978:\n                    var_1h._0_1_ = '\\x01';\n                    in_stack_ffffffac = 0x436985;\n                    fcn.00416f01();\n                    iVar6 = iVar6 + 2;\n                }\n                else {\n                    uVar10 = 0x45bfe0;\n                    puVar11 = &fcn.0043685b::var_2ch;\n                    uVar9 = 0x4368c5;\n                    fcn.00416e83();\n                    while( true ) {\n                        uVar1 = piVar3[iVar7];\n                        puVar4 = uVar1;\n                        if ((uVar1 == 0x24) || (uVar1 == 0)) break;\n                        fcn.00416f01();\n                        iVar7 = iVar7 + 1;\n                        puVar11 = puVar4;\n                    }\n                    if (piVar3[iVar7] == 0) {\n                        fcn.00417064(0x45ff8c, puVar11);\n                        fcn.00416ebe(&fcn.0043685b::var_2ch);\n                        goto code_r0x00436a80;\n                    }\n                    puVar11 = &fcn.0043685b::var_10h;\n                    var_8h = iVar7 + 1;\n                    uVar8 = var_2ch;\n                    fcn.00416d81();\n                    fcn.00416b63(uVar8, uVar9, in_stack_ffffffac, uVar10, puVar11);\n                    if (var_10h == 0) {\n                        var_1h._0_1_ = '\\x01';\n                        fcn.00417064(0x45ff8c);\n                        fcn.00416ebe(&fcn.0043685b::var_2ch);\n                        fcn.00417064(0x45ff8c);\n                        piVar3 = var_ch;\n                        iVar6 = var_8h;\n                    }\n                    else {\n                        uVar9 = fcn.00418641();\n                        fcn.00417064(uVar9);\n                        var_1h._0_1_ = '\\x01';\n                        piVar3 = var_ch;\n                        iVar6 = var_8h;\n                    }\n                }\n            }\n            else if (iVar2 == 0x40) {\n                if (piVar3[iVar7] == 0x40) goto code_r0x00436978;\n                uVar10 = 0x45bfe0;\n                puVar11 = &fcn.0043685b::var_2ch;\n                uVar9 = 0x436999;\n                fcn.00416e83();\n                while( true ) {\n                    uVar1 = piVar3[iVar7];\n                    puVar4 = uVar1;\n                    if ((uVar1 == 0x40) || (uVar1 == 0)) break;\n                    uVar10 = 0x4369a9;\n                    fcn.00416f01();\n                    iVar7 = iVar7 + 1;\n                    puVar11 = puVar4;\n                }\n                if (piVar3[iVar7] == 0) {\n                    var_1h._0_1_ = '\\x01';\n                    fcn.00417064(0x4610b4, puVar11);\n                    fcn.00416ebe(&fcn.0043685b::var_2ch);\n                    break;\n                }\n                uVar8 = var_2ch;\n                fcn.00416d81();\n                iVar5 = fcn.00436f8f(uVar8, uVar9, in_stack_ffffffac, uVar10);\n                iVar6 = iVar7 + 1;\n                if (iVar5 == 0) {\n                    uVar9 = fcn.00418661();\n                    fcn.00416ebe(uVar9);\n                    var_1h._0_1_ = '\\x01';\n                }\n                else {\n                    var_1h._0_1_ = '\\x01';\n                    fcn.00417064(0x4610b4);\n                    fcn.00416ebe(&fcn.0043685b::var_2ch);\n                    fcn.00417064(0x4610b4);\n                }\n            }\n            else {\n                in_stack_ffffffac = 0x436a2d;\n                fcn.00416f01();\n                iVar6 = iVar7;\n            }\n            iVar2 = piVar3[iVar6];\n        } while (iVar2 != 0);\n        if (var_1h != '\\0') {\ncode_r0x00436a80:\n            fcn.00418cb1();\n        }\n    }\n    fcn.0041858e();\n    fcn.0044951c(var_2ch);\n    fcn.0044951c(var_20h);\n    return;\n}\n",
        "token_count": 1393
    },
    "00436aac": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00436aac(int32_t arg_8h, uint arg_ch, int32_t *arg_10h, int32_t arg_14h)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint in_stack_ffffffac;\n    uint in_stack_ffffffb0;\n    uint in_stack_ffffffc0;\n    uint in_stack_ffffffc4;\n    uint in_stack_ffffffc8;\n    uint *arg_18h;\n    uint var_18h;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = 0;\n    puVar1 = fcn.0040f269();\n    arg_18h = &fcn.00436aac::var_4h;\n    uVar4 = *puVar1;\n    fcn.00416d81();\n    fcn.00416b63(uVar4, in_stack_ffffffc0, in_stack_ffffffc4, in_stack_ffffffc8, arg_18h);\n    iVar3 = var_4h;\n    if (var_4h == 0) {\n        fcn.0040f269();\n    }\n    else {\n        *arg_10h = *arg_10h + 1;\n        if ((*(var_4h + 8) == 5) && (iVar2 = fcn.0040f269(),  *(iVar2 + 8) == 0x13)) {\n            in_stack_ffffffb0 = 0x436b33;\n            iVar2 = fcn.00436e7c(arg_8h, &fcn.00436aac::var_4h);\n            iVar3 = var_4h;\n            if (iVar2 != 0) {\n                return 1;\n            }\n        }\n        if (*(iVar3 + 8) == 8) {\n            iVar3 = var_4h;\n            fcn.0041835f();\n            iVar3 = fcn.00436c57(arg_ch, arg_10h, arg_14h, iVar3);\n            if (iVar3 == 0) {\n                return 0;\n            }\n            fcn.0040f269();\n        }\n        else {\n            if ((*(iVar3 + 8) == 5) || (iVar2 = fcn.0040f269(),  *(iVar2 + 8) != 0x13)) {\n                fcn.00418a19(iVar3);\n                if ((*(arg_8h + 0x299) == '\\0') && (*(arg_8h + 0x29a) == '\\0')) {\n                    return 0;\n                }\n                if (*(arg_14h + 8) != 4) {\n                    return 0;\n                }\n                fcn.0041835f(arg_14h);\n                if (*(arg_8h + 0x299) != '\\0') {\n                    fcn.00436704(&fcn.00436aac::var_18h);\n                    uVar4 = fcn.00418641();\n                    iVar3 = fcn.0044985c(uVar4);\n                    if (iVar3 == 0) {\n                        fcn.00418a19(var_4h);\n                    }\n                }\n                if (*(arg_8h + 0x29a) != '\\0') {\n                    fcn.0043685b(arg_8h, &fcn.00436aac::var_18h);\n                    uVar4 = fcn.00418641();\n                    iVar3 = fcn.0044985c(uVar4);\n                    if (iVar3 == 0) {\n                        fcn.00418a19(var_4h);\n                    }\n                }\n                fcn.00418a19(&fcn.00436aac::var_18h);\n                fcn.0041858e();\n                return 0;\n            }\n            iVar3 = fcn.0040f269();\n            in_stack_ffffffb0 = *(iVar3 + 0xc);\n            in_stack_ffffffac = 0x7c;\n        }\n    }\n    fcn.0041fdea(in_stack_ffffffac, in_stack_ffffffb0);\n    return 1;\n}\n",
        "token_count": 927
    },
    "00436c57": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00436c57(uint arg_8h, int32_t *arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    uint uVar5;\n    uint var_5ch;\n    uint *puStack92;\n    uint var_34h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_8h;\n    \n    fcn.00417dba();\n    var_24h = 0;\n    var_18h = 0;\n    var_34h = 0;\n    var_28h = 0;\n    var_1ch = 1;\n    var_2ch = 1;\n    fcn.00416d61();\n    iVar2 = fcn.0040f269();\n    if ((*(iVar2 + 8) == 0x21) || (iVar2 = fcn.0040f269(),  *(iVar2 + 8) == 8)) {\n        fcn.00417eaa();\n        iVar2 = *arg_ch;\n        iVar3 = fcn.0040f269();\n        if (*(iVar3 + 8) == 8) {\n            *arg_ch = iVar2 + -1;\n            fcn.00416e83(&var_14h, 0x45bfe0);\n        }\n        else {\n            puVar4 = fcn.0040f269();\n            fcn.00416e83(&var_14h, *puVar4);\n        }\n        iVar2 = *arg_ch;\n        iVar3 = fcn.0040f269();\n        if (*(iVar3 + 8) == 8) {\n            iVar2 = fcn.00432206(var_8h, &var_5ch);\n            if (iVar2 != 0) {\n                fcn.0041ffd0(0x72, 0x461060);\n                uVar5 = 1;\n                goto code_r0x00436e4a;\n            }\n        }\n        else {\n            *arg_ch = iVar2 + 1;\n        }\n        puStack92 = &var_5ch;\n        var_5ch = var_14h;\n        iVar2 = fcn.004321d4(var_8h, &arg_14h);\n        if (iVar2 != 0) {\n            fcn.00418c7e(0x45bfe0);\n            fcn.00418c7e(0x45bfe0);\n            uVar5 = 1;\n            fcn.00421898();\n            goto code_r0x00436e4a;\n        }\n        cVar1 = fcn.00419b83();\n        if (cVar1 != '\\0') {\n            puVar4 = &var_24h;\n            fcn.0041835f();\n            uVar5 = fcn.00436c57(arg_8h, arg_ch, arg_10h, puVar4);\n            goto code_r0x00436e4a;\n        }\n        if ((((*0x478400 != '\\0') && (*(var_8h + 0x898) == '\\0')) && (*0x478404 != 0)) && (*(*0x478404 + 0x2d) != '\\0'))\n        {\n            iVar2 = fcn.0040f269();\n            for (iVar2 = *(iVar2 + 8); iVar2 == 0x21; iVar2 = *(iVar2 + 8)) {\n                *arg_ch = *arg_ch + 1;\n                iVar2 = *arg_ch;\n                iVar3 = fcn.0040f269();\n                if (*(iVar3 + 8) == 8) {\n                    *arg_ch = iVar2 + 1;\n                    while (iVar2 = fcn.0040f269(),  *(iVar2 + 8) != 9) {\n                        *arg_ch = *arg_ch + 1;\n                    }\n                    *arg_ch = *arg_ch + 1;\n                }\n                iVar2 = fcn.0040f269();\n            }\n        }\n        fcn.00418a19(&var_24h);\n        fcn.00418c7e(0x45bfe0);\n    }\n    else {\n        fcn.00418a19(&arg_14h);\n    }\n    uVar5 = 0;\ncode_r0x00436e4a:\n    fcn.0044951c(var_14h);\n    fcn.0041858e();\n    fcn.0041858e();\n    fcn.00417ddb();\n    fcn.0041858e();\n    return uVar5;\n}\n",
        "token_count": 1067
    },
    "00436f8f": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Type propagation algorithm not settling\n\nbool __cdecl fcn.00436f8f(uint *lpsz, uint cchLength, uint noname_2, uint arg_14h)\n\n{\n    int16_t iVar1;\n    int32_t in_EAX;\n    int32_t *piVar2;\n    uint uVar3;\n    uint *puVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    uint in_stack_fffffb60;\n    uint in_stack_fffffb64;\n    uint in_stack_fffffb68;\n    code *hKey;\n    uint uVar8;\n    uint uVar9;\n    uint var_46ch;\n    uint lpBuffer;\n    uint var_258h;\n    uint var_54h;\n    uint *var_4ch;\n    uint *var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint pwszKLID;\n    uint var_1ch;\n    uint var_ch;\n    int32_t var_8h;\n    uint pcbBuffer;\n    \n    iVar6 = 0;\n    lpBuffer._0_2_ = 0;\n    puVar4 = &lpBuffer + 2;\n    for (iVar5 = 0x82; iVar5 != 0; iVar5 = iVar5 + -1) {\n        *puVar4 = 0;\n        puVar4 = puVar4 + 1;\n    }\n    var_46ch._0_2_ = 0;\n    puVar4 = &var_46ch + 2;\n    for (iVar5 = 0x82; iVar5 != 0; iVar5 = iVar5 + -1) {\n        *puVar4 = 0;\n        puVar4 = puVar4 + 1;\n    }\n    fcn.0044be72(&var_ch);\n    piVar2 = fcn.0044beab(&var_ch);\n    puVar4 = lpsz;\n    (*_sym.imp.USER32.dll_CharUpperBuffW)(lpsz, cchLength);\n    do {\n        iVar5 = fcn.00449703(*(iVar6 * 4 + 0x466e00), lpsz);\n        if (iVar5 == 0) break;\n        iVar6 = iVar6 + 1;\n    } while (iVar6 < 0x5b);\n    // switch table (91 cases) at 0x437887\n    switch(iVar6) {\n    case 0:\n        break;\n    case 1:\n        break;\n    case 2:\n        iVar5 = *piVar2;\n        goto code_r0x004370c2;\n    case 3:\n        iVar5 = piVar2[1];\n        goto code_r0x004370c2;\n    case 4:\n        iVar5 = piVar2[2];\n        goto code_r0x004370c2;\n    case 5:\n        iVar5 = piVar2[3];\n        goto code_r0x004370c2;\n    case 6:\n        iVar5 = piVar2[4] + 1;\ncode_r0x004370c2:\n        uVar8 = 0x461048;\ncode_r0x004370c7:\n        fcn.00449872(&lpBuffer, uVar8, iVar5);\n        goto code_r0x00437571;\n    case 7:\n        puVar4 = piVar2[5] + 0x76c;\n        break;\n    case 8:\n        puVar4 = piVar2[6] + 1;\n        break;\n    case 9:\n        iVar5 = piVar2[7] + 1;\n        uVar8 = 0x46103c;\n        goto code_r0x004370c7;\n    case 10:\n        uVar8 = 0x46101c;\n        goto code_r0x0043711d;\n    case 0xb:\n        uVar8 = 0x460fa8;\ncode_r0x0043711d:\n        uVar3 = 0x460fc8;\ncode_r0x00437564:\n        hKey = reloc.OLEAUT32.dll_SysReAllocString;\n        goto code_r0x00437569;\n    case 0xc:\n        fcn.004146c5(0x80000001, 0x460f10, 0x460f94, 0x104);\n        goto code_r0x00437155;\n    case 0xd:\n        uVar8 = 0x460eec;\n        goto code_r0x004371c4;\n    case 0xe:\n        fcn.004146c5(reloc.OLEAUT32.dll_SysReAllocString, 0x460f10, 0x460ecc, 0x104);\n        if (lpBuffer == 0) {\n            uVar8 = 0x460ebc;\n            goto code_r0x004371aa;\n        }\n        goto code_r0x00437571;\n    case 0xf:\n        uVar8 = 0x460e98;\ncode_r0x004371c4:\n        uVar3 = 0x460f10;\n        goto code_r0x00437564;\n    case 0x10:\n        fcn.004146c5(reloc.OLEAUT32.dll_SysReAllocString, 0x460f10, 0x460e74, 0x104);\n        if (lpBuffer == 0) {\n            uVar8 = 0x460e60;\n            goto code_r0x004371aa;\n        }\n        goto code_r0x00437571;\n    case 0x11:\n        fcn.004146c5(reloc.OLEAUT32.dll_SysReAllocString, 0x460f10, 0x460e40, 0x104);\n        if (lpBuffer == 0) {\n            uVar8 = 0x460e2c;\n            goto code_r0x004371aa;\n        }\n        goto code_r0x00437571;\n    case 0x12:\n        fcn.004146c5(reloc.OLEAUT32.dll_SysReAllocString, 0x460f10, 0x460e08, 0x104);\n        if (lpBuffer == 0) {\n            uVar8 = 0x460df0;\n            goto code_r0x004371aa;\n        }\n        goto code_r0x00437571;\n    case 0x13:\n        fcn.004146c5(reloc.OLEAUT32.dll_SysReAllocString, 0x460f10, 0x460dd0, 0x104);\n        if (lpBuffer == 0) {\n            uVar8 = 0x460dc0;\n            goto code_r0x004371aa;\n        }\n        goto code_r0x00437571;\n    case 0x14:\n        uVar8 = 0x460db0;\n        goto code_r0x004371aa;\n    case 0x15:\n        uVar8 = 0x460ebc;\n        goto code_r0x004371aa;\n    case 0x16:\n        uVar8 = 0x460e60;\n        goto code_r0x004371aa;\n    case 0x17:\n        uVar8 = 0x460e2c;\n        goto code_r0x004371aa;\n    case 0x18:\n        uVar8 = 0x460df0;\n        goto code_r0x004371aa;\n    case 0x19:\n        uVar8 = 0x460dc0;\ncode_r0x004371aa:\n        uVar3 = 0x460f10;\n        hKey = 0x80000001;\ncode_r0x00437569:\n        fcn.004146c5(hKey, uVar3, uVar8, 0x104);\n        goto code_r0x00437571;\n    case 0x1a:\n        pcbBuffer = 0x104;\n        (**0x459208)(&lpBuffer, &pcbBuffer);\n        goto code_r0x00437571;\n    case 0x1b:\n        (**0x45920c)(&lpBuffer, 0x104);\n        goto code_r0x00437571;\n    case 0x1c:\n        (**0x459210)(&lpBuffer, 0x104);\n        goto code_r0x00437571;\n    case 0x1e:\n        break;\n    case 0x1f:\n    case 0x25:\n        break;\n    case 0x20:\n        break;\n    case 0x21:\n        break;\n    case 0x22:\n        break;\n    case 0x23:\n        break;\n    case 0x24:\n        break;\n    case 0x26:\n        break;\n    case 0x27:\n        break;\n    case 0x28:\n        break;\n    case 0x29:\n        break;\n    case 0x2a:\n    case 0x5a:\n        break;\n    case 0x2b:\n        break;\n    case 0x2c:\n        break;\n    case 0x2d:\n        break;\n    case 0x2e:\n        break;\n    case 0x2f:\n        goto code_r0x0043757b;\n    case 0x30:\n        goto code_r0x0043757b;\n    case 0x31:\n        goto code_r0x0043757b;\n    case 0x32:\n        puVar4 = fcn.0040fd91();\n        break;\n    case 0x33:\n        (**0x459314)(0x104, &lpBuffer);\n        goto code_r0x00437571;\n    case 0x34:\n        goto code_r0x0043757b;\n    case 0x35:\n        goto code_r0x0043757b;\n    case 0x36:\n        break;\n    case 0x37:\n        goto code_r0x0043757b;\n    case 0x38:\n        if (*0x479bb4 != '\\x01') {\n            fcn.004146c5(0x80000003, 0x460bd0, 0x45bfe0, 0x104);\n            puVar4 = &var_258h;\n            goto code_r0x0043757b;\n        }\n        if (*0x479bbd == '\\x01') {\n            uVar8 = 0x460c8c;\n        }\n        else {\n            uVar8 = 0x45d27c;\n        }\n        uVar3 = 0x460c30;\n        goto code_r0x00437564;\n    case 0x39:\n        if (((*0x479bcc != 1) && (*0x479bcc != 2)) && (*0x479bcc != 3)) {\n            iVar5 = -*0x479bcc;\n            uVar8 = 0x460d84;\n            goto code_r0x004370c7;\n        }\n        goto code_r0x0043757b;\n    case 0x3a:\n        (**0x459458)(&pwszKLID);\n        puVar4 = &pwszKLID;\n        goto code_r0x0043757b;\n    case 0x3b:\n        fcn.004495f8(&var_46ch, 0x460bb4);\n        iVar6 = 0;\n        iVar7 = 0;\n        iVar5 = fcn.0044985c(&var_46ch);\n        if (0 < iVar5) {\n            do {\n                iVar1 = *(&var_46ch + iVar7 * 2);\n                if (iVar1 != 0x20) {\n                    if (iVar1 == 0x2c) {\n                        *(&var_46ch + iVar6 * 2) = 0x2e;\n                    }\n                    else {\n                        *(&var_46ch + iVar6 * 2) = iVar1;\n                    }\n                    iVar6 = iVar6 + 1;\n                }\n                iVar7 = iVar7 + 1;\n                iVar5 = fcn.0044985c(&var_46ch);\n            } while (iVar7 < iVar5);\n        }\n        *(&var_46ch + iVar6 * 2) = 0;\n        puVar4 = &var_46ch;\n        goto code_r0x0043757b;\n    case 0x3c:\n        (**0x459308)(0, &lpBuffer, 0x104);\n        goto code_r0x00437571;\n    case 0x3d:\n        goto code_r0x0043764a;\n    case 0x3e:\n        goto code_r0x0043764a;\n    case 0x3f:\n        goto code_r0x0043764a;\n    case 0x40:\ncode_r0x0043764a:\n        fcn.00415ba5(&var_40h);\n        puVar4 = &var_40h;\n        goto code_r0x0043757b;\n    case 0x41:\n        goto code_r0x0043757b;\n    case 0x42:\n        goto code_r0x0043757b;\n    case 0x43:\n        goto code_r0x0043757b;\n    case 0x44:\n        uVar8 = (*_sym.imp.USER32.dll_GetDesktopWindow)(&var_54h);\n        (*_sym.imp.USER32.dll_GetWindowRect)(uVar8);\n        puVar4 = var_4ch;\n        break;\n    case 0x45:\n        uVar8 = (*_sym.imp.USER32.dll_GetDesktopWindow)(&var_54h);\n        (*_sym.imp.USER32.dll_GetWindowRect)(uVar8);\n        puVar4 = var_48h;\n        break;\n    case 0x46:\n        uVar8 = (*_sym.imp.USER32.dll_GetDesktopWindow)();\n        uVar3 = (*_sym.imp.USER32.dll_GetDC)(uVar8);\n        uVar9 = 0xc;\n        goto code_r0x004376c7;\n    case 0x47:\n        uVar8 = (*_sym.imp.USER32.dll_GetDesktopWindow)();\n        uVar3 = (*_sym.imp.USER32.dll_GetDC)(uVar8);\n        uVar9 = 0x74;\ncode_r0x004376c7:\n        uVar9 = (*_sym.imp.GDI32.dll_GetDeviceCaps)(uVar3, uVar9);\n        fcn.00418bb9(uVar9);\n        (*_sym.imp.USER32.dll_ReleaseDC)(uVar8, uVar3);\n        goto code_r0x00437875;\n    case 0x48:\n        break;\n    case 0x49:\n        uVar8 = 0x461244;\n        goto code_r0x004376f7;\n    case 0x4a:\n        goto code_r0x0043757b;\n    case 0x4b:\n        pcbBuffer = 0x104;\n        (*_sym.imp.ADVAPI32.dll_GetUserNameW)(&lpBuffer, &pcbBuffer);\n        goto code_r0x00437571;\n    case 0x4c:\n        (*_sym.imp.KERNEL32.DLL_GetTempPathW)(0x104, &lpBuffer);\ncode_r0x00437155:\n        fcn.00414d77();\n        goto code_r0x00437571;\n    case 0x4d:\n        if (*0x479bb4 != '\\0') {\n            uVar8 = 0x460b9c;\n            goto code_r0x004376f7;\n        }\n        fcn.004146c5(0x80000001, 0x460f10, 0x460ebc, 0x104);\n        iVar5 = fcn.0044985c(&lpBuffer);\n        do {\n            iVar5 = iVar5 + -1;\n            if (iVar5 < 0) break;\n        } while (*(&lpBuffer + iVar5 * 2) != 0x5c);\n        *(&lpBuffer + iVar5 * 2) = 0;\n        goto code_r0x00437571;\n    case 0x4e:\n        uVar8 = 0x4611e4;\n        goto code_r0x004376f7;\n    case 0x4f:\n        uVar8 = 0x4611d0;\n        goto code_r0x004376f7;\n    case 0x50:\n        uVar8 = 0x4611bc;\n        goto code_r0x004376f7;\n    case 0x51:\n        uVar8 = 0x4611a4;\n        goto code_r0x004376f7;\n    case 0x52:\n        uVar8 = 0x460b84;\n        goto code_r0x004376f7;\n    case 0x53:\n        uVar8 = 0x460b68;\ncode_r0x004376f7:\n        (**0x4591f4)(uVar8, &lpBuffer, 0x104);\ncode_r0x00437571:\n        puVar4 = &lpBuffer;\ncode_r0x0043757b:\n        fcn.00418c7e(puVar4);\n        goto code_r0x00437875;\n    case 0x54:\n        break;\n    case 0x55:\n        puVar4 = *(in_EAX + 0x318);\n        break;\n    case 0x56:\n        break;\n    case 0x57:\n        goto code_r0x0043757b;\n    case 0x58:\n        puVar4 = (*_sym.imp.KERNEL32.DLL_GetCurrentProcessId)();\n        break;\n    case 0x59:\n        break;\n    default:\n        fcn.00416d81(0x4610b4);\n        fcn.00416ebe(&lpsz);\n        uVar8 = 0;\n        puVar4 = &var_8h;\n        fcn.00416dcf();\n        fcn.00416b63(in_stack_fffffb60, in_stack_fffffb64, in_stack_fffffb68, puVar4, uVar8);\n        if (var_8h != 0) {\n            fcn.00418a19(var_8h);\n        }\n        fcn.0044951c(var_1ch);\n        fcn.0044951c(lpsz);\n        return var_8h == 0;\n    case -0x452e541f:\n        goto code_r0x00437875;\n    }\n    fcn.00418bb9(puVar4);\ncode_r0x00437875:\n    fcn.0044951c(lpsz);\n    return false;\n}\n",
        "token_count": 4152
    },
    "00437a3e": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00437a3e(uint *arg_8h, int32_t *arg_ch, uint arg_10h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    uint64_t *puVar5;\n    uint *puVar6;\n    uint32_t *puVar7;\n    int32_t *piVar8;\n    uint *extraout_EDX;\n    uint uVar9;\n    uint in_stack_ffffff3c;\n    uint *in_stack_ffffff40;\n    uint *in_stack_ffffff50;\n    uint *in_stack_ffffff54;\n    uint64_t in_stack_ffffff58;\n    uint *lpsz;\n    int32_t var_84h;\n    uint *var_80h;\n    uint var_7ch;\n    uint var_74h;\n    uint var_70h;\n    uint var_68h;\n    uint32_t var_60h;\n    uint var_54h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_34h;\n    uint var_2ch;\n    uint var_28h;\n    int32_t var_20h;\n    int32_t *var_1ch;\n    uint var_18h;\n    uint *var_14h;\n    int32_t var_10h;\n    uint *var_ch;\n    int32_t var_8h;\n    \n    var_34h = 0;\n    var_28h = 0;\n    var_20h = 0;\n    var_1ch = NULL;\n    var_84h = 0;\n    var_80h = NULL;\n    var_7ch = 0;\n    var_70h = 0;\n    lpsz = &fcn.00437a3e::var_14h;\n    var_2ch = 1;\n    var_74h = 1;\n    var_10h = 0x17;\n    var_14h = 0x14;\n    fcn.004366cd(lpsz);\n    iVar2 = fcn.0040f269();\n    var_14h = *(iVar2 + 0xc);\ncode_r0x00437aa2:\n    iVar2 = *arg_ch;\n    iVar3 = fcn.0040f269();\n    uVar9 = in_stack_ffffff58;\n    // switch table (34 cases) at 0x438202\n    switch(*(iVar3 + 8)) {\n    case 0:\n        piVar8 = fcn.0040f269();\n        iVar3 = *piVar8;\n        if (iVar3 == 1) {\n            var_8h = 7;\n        }\n        else if (iVar3 == 2) {\n            var_8h = 8;\n        }\n        else {\n            if (iVar3 != 3) {\n                if (iVar3 == 0x26) {\n                    var_10h = 0x16;\n                    fcn.0043889b(&fcn.00437a3e::var_34h, lpsz);\n                }\n                else {\n                    if (iVar3 != 0x27) {\n                        if (iVar3 != 0x28) goto code_r0x00437fca;\n                        var_10h = 0x16;\n                        fcn.0043889b(&fcn.00437a3e::var_34h, lpsz);\n                        fcn.0041761e();\n                        fcn.00419257();\n                        in_stack_ffffff58 = var_60h;\n                        *arg_ch = *arg_ch + 1;\n                        in_stack_ffffff54 = 0x437ded;\n                        fcn.0044951c();\n                        goto code_r0x00437aa2;\n                    }\n                    var_10h = 0x16;\n                    fcn.0043889b(&fcn.00437a3e::var_34h, lpsz);\n                }\n                in_stack_ffffff58 = 0x437e48;\n                fcn.0041923e();\n                goto code_r0x00437b72;\n            }\n            var_8h = 10;\n        }\n        break;\n    case 1:\n        var_10h = 0x16;\n        fcn.0043889b(&fcn.00437a3e::var_34h, lpsz);\n        puVar6 = var_ch;\n        puVar4 = &fcn.00437a3e::var_7ch;\n        if (var_84h != 0) {\n            puVar4 = var_80h;\n        }\n        in_stack_ffffff58 = CONCAT44(puVar4, arg_8h);\n        in_stack_ffffff50 = 0x437ea1;\n        lpsz = var_ch;\n        iVar2 = fcn.0043259a(var_ch, arg_8h, puVar4);\n        if (iVar2 == 0) {\n            iVar2 = puVar6[0xa4];\n            goto joined_r0x00437efd;\n        }\n        goto code_r0x004381dc;\n    case 2:\n        var_8h = 5;\n        break;\n    case 3:\n        var_8h = 1;\n        break;\n    case 4:\n        var_8h = 0;\n        break;\n    case 5:\n        var_8h = 4;\n        break;\n    case 6:\n        var_8h = 3;\n        break;\n    case 7:\n        var_8h = 2;\n        break;\n    case 8:\n        var_8h = 0x12;\n        break;\n    case 9:\n        var_8h = 0x13;\n        break;\n    case 10:\n        if ((var_10h == 0x16) || (var_8h = 0x11,  var_10h == 0x13)) {\n            var_8h = 0xb;\n        }\n        break;\n    case 0xb:\n        if ((var_10h == 0x16) || (var_8h = 0x10,  var_10h == 0x13)) {\n            var_8h = 0xc;\n        }\n        break;\n    case 0xc:\n        var_8h = 0xe;\n        break;\n    case 0xd:\n        var_8h = 0xd;\n        break;\n    case 0xe:\n        var_10h = 0x16;\n        fcn.0043889b(&fcn.00437a3e::var_34h, lpsz);\n        puVar6 = &fcn.00437a3e::var_7ch;\n        if (var_84h != 0) {\n            puVar6 = var_80h;\n        }\n        in_stack_ffffff58 = CONCAT44(puVar6, arg_ch);\n        in_stack_ffffff54 = arg_8h;\n        lpsz = var_ch;\n        iVar2 = fcn.00436aac(var_ch, arg_8h, arg_ch, puVar6);\n        if (iVar2 != 0) goto code_r0x004381dc;\n        goto code_r0x00437aa2;\n    default:\ncode_r0x00437fca:\n        var_8h = 0x14;\n        goto code_r0x00437fd1;\n    case 0x10:\n        var_10h = 0x16;\n        fcn.0043889b(&fcn.00437a3e::var_34h);\n        puVar6 = var_ch;\n        in_stack_ffffff58 = ZEXT48(arg_8h);\n        in_stack_ffffff50 = 0x437eee;\n        lpsz = var_ch;\n        iVar2 = fcn.004327f6();\n        if (iVar2 != 0) goto code_r0x004381dc;\n        iVar2 = puVar6[0xa4];\njoined_r0x00437efd:\n        if (iVar2 == 1) goto code_r0x004381dc;\n        goto code_r0x00437aa2;\n    case 0x12:\n        var_8h = 9;\n        break;\n    case 0x15:\n        goto code_r0x00437c2d;\n    case 0x16:\n        var_8h = 6;\n        break;\n    case 0x17:\n        var_8h = 0xf;\n        break;\n    case 0x18:\n        var_10h = 0x16;\n        fcn.0043889b(&fcn.00437a3e::var_34h);\n        fcn.0040f269();\n        in_stack_ffffff58 = 0x437af6;\n        fcn.00418c7e();\n        puVar6 = var_ch;\n        if (*(var_ch + 0x299) != '\\0') {\n            puVar4 = &fcn.00437a3e::var_7ch;\n            if (var_84h != 0) {\n                puVar4 = var_80h;\n            }\n            in_stack_ffffff58 = ZEXT48(puVar4);\n            in_stack_ffffff54 = 0x437b17;\n            fcn.00436704(puVar4);\n        }\n        if (*(puVar6 + 0x29a) != '\\0') {\n            in_stack_ffffff54 = &fcn.00437a3e::var_7ch;\n            if (var_84h != 0) {\n                in_stack_ffffff54 = var_80h;\n            }\n            fcn.0043685b(puVar6, in_stack_ffffff54);\n            in_stack_ffffff50 = puVar6;\n        }\n        *arg_ch = *arg_ch + 1;\n        goto code_r0x00437aa2;\n    case 0x19:\n        var_10h = 0x16;\n        fcn.0043889b(&fcn.00437a3e::var_34h);\n        fcn.0040f269();\n        in_stack_ffffff58 = 0x437b72;\n        fcn.00418bb9();\n        goto code_r0x00437b72;\n    case 0x1a:\n        var_10h = 0x16;\n        fcn.0043889b(&fcn.00437a3e::var_34h);\n        puVar5 = fcn.0040f269();\n        in_stack_ffffff58 = *puVar5;\n        in_stack_ffffff54 = 0x437bb1;\n        fcn.00418c2c();\n        goto code_r0x00437b72;\n    case 0x1b:\n        var_10h = 0x16;\n        fcn.0043889b(&fcn.00437a3e::var_34h);\n        puVar5 = fcn.0040f269();\n        in_stack_ffffff58 = *puVar5;\n        in_stack_ffffff54 = 0x437bed;\n        fcn.00418c65();\ncode_r0x00437b72:\n        *arg_ch = *arg_ch + 1;\n        goto code_r0x00437aa2;\n    case 0x21:\n        if ((iVar2 == 0) ||\n           ((iVar2 = fcn.0040f269(),  *(iVar2 + 8) != 0xe && (iVar2 = fcn.0040f269(),  *(iVar2 + 8) != 0x21)))) {\n            cVar1 = fcn.00419b83();\n            if (cVar1 != '\\0') {\n                var_54h = 0;\n                var_4ch = 1;\n                var_48h = 0;\n                in_stack_ffffff50 = extraout_EDX;\n                fcn.0041835f();\n                iVar2 = fcn.00436c57(arg_8h, arg_ch, &fcn.00437a3e::var_54h, in_stack_ffffff50);\n                if (iVar2 != 0) {\n                    iVar2 = fcn.0040f269();\n                    fcn.0041fdea(0x6e, *(iVar2 + 0xc));\n                    goto code_r0x004381d7;\n                }\n                in_stack_ffffff40 = &fcn.00437a3e::var_54h;\n                var_10h = 0x16;\n                fcn.0043889b();\n                goto code_r0x0043812e;\n            }\n            fcn.0040f269();\n        }\n        else {\n            in_stack_ffffff58 = 0x460b20000000a9;\n            in_stack_ffffff50 = 0x437f44;\n            in_stack_ffffff54 = var_ch;\n            iVar2 = fcn.00430d6b(var_ch, 0xa9, 0x460b20, 1);\n            if (iVar2 == 0) goto code_r0x00437b72;\n            fcn.0040f269();\n        }\n        goto code_r0x00438016;\n    }\n    *arg_ch = iVar2 + 1;\ncode_r0x00437fd1:\n    var_10h = var_8h;\n    while( true ) {\n        piVar8 = &fcn.00437a3e::var_18h;\n        if (var_20h != 0) {\n            piVar8 = var_1ch;\n        }\n        cVar1 = *(*piVar8 * 0x15 + 0x466f70 + var_8h);\n        if (cVar1 == '\\0') {\n            in_stack_ffffff58 = CONCAT44(0x438098, in_stack_ffffff58);\n            fcn.004366cd(&fcn.00437a3e::var_8h);\n            goto code_r0x00438098;\n        }\n        if (cVar1 != '\\x01') break;\n        in_stack_ffffff58 = 0x43800d;\n        iVar2 = fcn.0043828a(&fcn.00437a3e::var_20h, &fcn.00437a3e::var_84h);\n        if (iVar2 != 0) goto code_r0x00438011;\n    }\n    if (cVar1 != '\\x02') {\n        if (cVar1 == '\\x03') {\n            if (var_84h == 1) {\n                fcn.00418a19(var_80h);\n                uVar9 = 0;\n                goto code_r0x0043818f;\n            }\n            uVar9 = 0x6e;\n        }\n        else if (cVar1 == '\\x04') {\n            uVar9 = 0x6b;\n        }\n        else if (cVar1 == '\\x05') {\n            uVar9 = 0x6c;\n        }\n        else {\n            if (cVar1 != '\\x06') goto code_r0x00438098;\n            uVar9 = 0x6d;\n        }\n        fcn.0041fdea(uVar9, var_14h);\n        uVar9 = 1;\ncode_r0x0043818f:\n        fcn.00438879();\n        fcn.0040d9d7();\n        fcn.0041858e();\n        return uVar9;\n    }\n    while( true ) {\n        piVar8 = &fcn.00437a3e::var_18h;\n        if (var_20h != 0) {\n            piVar8 = var_1ch;\n        }\n        if (*piVar8 == 0x12) break;\n        piVar8 = &fcn.00437a3e::var_18h;\n        if (var_20h != 0) {\n            piVar8 = var_1ch;\n        }\n        if (*piVar8 == 0x14) {\n            in_stack_ffffff3c = 0x6d;\n            in_stack_ffffff40 = var_14h;\n            goto code_r0x00438016;\n        }\n        iVar2 = fcn.0043828a(&fcn.00437a3e::var_20h, &fcn.00437a3e::var_84h);\n        if (iVar2 != 0) goto code_r0x00438011;\n    }\n    in_stack_ffffff40 = 0x43808a;\n    fcn.004366eb();\ncode_r0x00438098:\n    if ((var_84h != 0) && ((var_8h == 7 || (var_8h == 8)))) {\n        uVar9 = in_stack_ffffff58;\n        in_stack_ffffff40 = var_80h;\n        fcn.0041835f();\n        cVar1 = fcn.00419a44();\n        if ((cVar1 == '\\0') || (var_8h != 8)) {\n            in_stack_ffffff58 = CONCAT44(0x4380d8, uVar9);\n            cVar1 = fcn.00419a44();\n            if ((cVar1 == '\\0') && (var_8h == 7)) goto code_r0x004380e2;\n        }\n        else {\ncode_r0x004380e2:\n            iVar2 = fcn.00438812();\n            if (iVar2 != 0) {\n                fcn.0041fdea(0x6e, var_14h);\ncode_r0x004381d7:\n                fcn.0041858e();\n                goto code_r0x004381dc;\n            }\n            fcn.004388d0();\n            in_stack_ffffff58 = var_8h == 8;\n            in_stack_ffffff54 = 0x438114;\n            fcn.0041923e();\n            in_stack_ffffff40 = &fcn.00437a3e::var_44h;\n            fcn.0043889b();\n            in_stack_ffffff50 = 0x43812b;\n            fcn.004366eb();\n        }\ncode_r0x0043812e:\n        in_stack_ffffff3c = 0x438133;\n        fcn.0041858e();\n    }\n    goto code_r0x00437aa2;\ncode_r0x00437c2d:\n    var_10h = 0x16;\n    fcn.0043889b(&fcn.00437a3e::var_34h);\n    *arg_ch = *arg_ch + 1;\n    in_stack_ffffff58 = CONCAT44(0x437c60, uVar9);\n    puVar7 = fcn.0040f269();\n    in_stack_ffffff58 = in_stack_ffffff58 & 0xffffffff;\n    lpsz = *puVar7;\n    fcn.00416d81();\n    iVar2 = fcn.00436f8f(lpsz, in_stack_ffffff50, in_stack_ffffff54, in_stack_ffffff58);\n    if (iVar2 != 0) {\n        fcn.0040f269();\ncode_r0x00438016:\n        fcn.0041fdea(in_stack_ffffff3c, in_stack_ffffff40);\ncode_r0x004381dc:\n        fcn.00438879();\n        fcn.0040d9d7();\n        fcn.0041858e();\n        return 1;\n    }\n    goto code_r0x00437aa2;\ncode_r0x00438011:\n    in_stack_ffffff3c = 0x6e;\n    in_stack_ffffff40 = var_14h;\n    goto code_r0x00438016;\n}\n",
        "token_count": 4325
    },
    "004388ea": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t * fcn.004388ea(void)\n\n{\n    int32_t *in_EAX;\n    \n    if (*in_EAX == 0) {\n        return in_EAX + 2;\n    }\n    return in_EAX[1];\n}\n",
        "token_count": 55
    },
    "00438918": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint fcn.00438918(void)\n\n{\n    uint32_t uVar1;\n    code *pcVar2;\n    char cVar3;\n    int32_t in_EAX;\n    uint32_t uVar4;\n    uint var_8h;\n    uchar auStack8 [3];\n    uint var_1h;\n    \n    pcVar2 = _sym.imp.KERNEL32.DLL_Sleep;\n    if ((*(in_EAX + 0x290) != 8) && (*(in_EAX + 0x290) != 9)) {\n        return 0;\n    }\n    (*_sym.imp.KERNEL32.DLL_Sleep)(10);\n    if (*(in_EAX + 0x814) != 0) {\n        uVar4 = (*_sym.imp.WINMM.dll_timeGetTime)();\n        uVar1 = *(in_EAX + 0x818);\n        if (uVar4 < uVar1) {\n            uVar4 = (uVar4 - uVar1) - 1;\n        }\n        else {\n            uVar4 = uVar4 - uVar1;\n        }\n        if (*(in_EAX + 0x814) <= uVar4) {\n            fcn.00418bb9(0);\n            *(in_EAX + 0x290) = 0;\n            *(in_EAX + 0x350) = 1;\n            return 1;\n        }\n    }\n    _auStack8 = _auStack8 & 0xffffff;\n    if (*(in_EAX + 0x290) == 8) {\n        cVar3 = fcn.00414778(*(in_EAX + 0x808), &var_8h);\n        if (cVar3 == '\\0') {\n            fcn.0041fdea(0x88, 0xffffffff);\n        }\n    }\n    else {\n        cVar3 = fcn.00414778(*(in_EAX + 0x808), &var_8h);\n        if (cVar3 == '\\0') {\n            fcn.0041fdea(0x88, 0xffffffff);\n        }\n        _auStack8 = _auStack8 & 0xffffff | (var_1h == '\\0') << 0x18;\n    }\n    if (var_1h == '\\x01') {\n        *(in_EAX + 0x290) = 0;\n        *(in_EAX + 0x350) = 1;\n        (*pcVar2)(*(in_EAX + 0x7b8));\n    }\n    return 1;\n}\n",
        "token_count": 587
    },
    "00438c34": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00438c34(int32_t arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    \n    iVar2 = *(arg_8h + 0xc);\n    if (*0x479bbd == '\\0') {\n        fcn.00418bb9(0);\n    }\n    else {\n        fcn.0044951c(*(in_ECX + 0x828));\n        fcn.0044951c(*(in_ECX + 0x82c));\n        fcn.0044951c(*(in_ECX + 0x830));\n        *(in_ECX + 0x830) = 0;\n        *(in_ECX + 0x82c) = 0;\n        *(in_ECX + 0x828) = 0;\n        if (iVar2 == 0) {\n            *(in_ECX + 0x820) = 0;\n        }\n        else {\n            if ((iVar2 != 3) && (iVar2 != 4)) {\n                fcn.0041fdea(0x70, 0xffffffff);\n                return 1;\n            }\n            uVar1 = fcn.00418641();\n            uVar1 = fcn.004161b7(uVar1);\n            *(in_ECX + 0x828) = uVar1;\n            uVar1 = fcn.00418641();\n            uVar1 = fcn.004161b7(uVar1);\n            *(in_ECX + 0x82c) = uVar1;\n            uVar1 = fcn.00418641();\n            uVar1 = fcn.004161b7(uVar1);\n            *(in_ECX + 0x830) = uVar1;\n            *(in_ECX + 0x824) = 1;\n            if (iVar2 == 4) {\n                iVar2 = fcn.00418733();\n                if (iVar2 == 0) {\n                    *(in_ECX + 0x824) = 0;\n                }\n                else {\n                    iVar2 = fcn.00418733();\n                    if (iVar2 == 2) {\n                        *(in_ECX + 0x824) = 2;\n                    }\n                }\n            }\n            *(in_ECX + 0x820) = 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 528
    },
    "00439424": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00439424(int32_t arg_8h, uint arg_ch, uint32_t arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    int16_t *piVar2;\n    uint uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    bool bVar6;\n    uint pExecInfo;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    int32_t var_3ch;\n    int32_t var_38h;\n    uint32_t var_34h;\n    int32_t hObject;\n    uint var_14h;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    fcn.00416d81(0x45fd3c);\n    iVar5 = 0;\n    var_4h = 0;\n    var_8h = 1;\n    fcn.00449b00(&pExecInfo, 0, 0x3c);\n    if ((1 < arg_10h) && (piVar2 = fcn.00418641(),  *piVar2 != 0)) {\n        uVar3 = fcn.00418641();\n        iVar5 = fcn.004161b7(uVar3);\n    }\n    if (2 < arg_10h) {\n        uVar3 = fcn.00418641();\n        var_4h = fcn.004161b7(uVar3);\n    }\n    if ((3 < arg_10h) && (piVar2 = fcn.00418641(),  *piVar2 != 0)) {\n        uVar3 = fcn.00418641();\n        fcn.00416e83(&var_14h, uVar3);\n    }\n    if (4 < arg_10h) {\n        var_8h = fcn.00418733();\n        var_8h = var_8h & 0xffff;\n    }\n    fcn.00449b00(&pExecInfo, 0, 0x3c);\n    var_48h = 0;\n    pExecInfo = 0x3c;\n    var_4ch = 0x40;\n    var_44h = var_14h;\n    var_40h = fcn.00418641();\n    iVar1 = var_4h;\n    var_34h = var_8h;\n    var_38h = var_4h;\n    var_3ch = iVar5;\n    iVar4 = (**0x459410)(&pExecInfo);\n    if (iVar5 != 0) {\n        fcn.0044951c(iVar5);\n    }\n    if (iVar1 != 0) {\n        fcn.0044951c(iVar1);\n    }\n    if (iVar4 == 0) {\n        bVar6 = *(arg_8h + 0x298) != '\\x01';\n        if (bVar6) {\n            fcn.00421898(0);\n            fcn.00418bb9(0);\n        }\n        else {\n            uVar3 = fcn.00420169(0xffffffff);\n            fcn.0041ffd0(0x87, uVar3);\n        }\n        bVar6 = !bVar6;\n        fcn.0044951c(var_14h);\n    }\n    else {\n        if (arg_ch == '\\0') {\n            fcn.00418bb9(1);\n            if (hObject != 0) {\n                (*_sym.imp.KERNEL32.DLL_CloseHandle)(hObject);\n            }\n        }\n        else {\n            *(arg_8h + 0x81c) = hObject;\n        }\n        fcn.0044951c(var_14h);\n        bVar6 = false;\n    }\n    return bVar6;\n}\n",
        "token_count": 853
    },
    "00439758": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_40h\n// WARNING: Variable defined which should be unmapped: var_3ch\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Removing unreachable block (ram,0x004397e2)\n// WARNING: Removing unreachable block (ram,0x00439804)\n// WARNING: Removing unreachable block (ram,0x00439816)\n// WARNING: Removing unreachable block (ram,0x0043981f)\n// WARNING: Removing unreachable block (ram,0x00439873)\n// WARNING: Removing unreachable block (ram,0x004398bb)\n// WARNING: Removing unreachable block (ram,0x004398c2)\n// WARNING: Removing unreachable block (ram,0x004398bd)\n// WARNING: Removing unreachable block (ram,0x004398c7)\n// WARNING: Removing unreachable block (ram,0x004398e2)\n// WARNING: Removing unreachable block (ram,0x00439903)\n// WARNING: Removing unreachable block (ram,0x00439918)\n// WARNING: Removing unreachable block (ram,0x00439923)\n// WARNING: Removing unreachable block (ram,0x00439928)\n// WARNING: Removing unreachable block (ram,0x0043992d)\n// WARNING: Removing unreachable block (ram,0x00439932)\n// WARNING: Removing unreachable block (ram,0x0043993b)\n// WARNING: Removing unreachable block (ram,0x004397c0)\n// WARNING: Removing unreachable block (ram,0x004397d1)\n// WARNING: Removing unreachable block (ram,0x00439972)\n// WARNING: Removing unreachable block (ram,0x0043998b)\n// WARNING: Removing unreachable block (ram,0x0043999c)\n// WARNING: Removing unreachable block (ram,0x004399ad)\n// WARNING: Removing unreachable block (ram,0x004399e2)\n// WARNING: Removing unreachable block (ram,0x00439a27)\n// WARNING: Removing unreachable block (ram,0x00439a2e)\n// WARNING: Removing unreachable block (ram,0x00439a29)\n// WARNING: Removing unreachable block (ram,0x00439a33)\n// WARNING: Removing unreachable block (ram,0x00439a4b)\n// WARNING: Removing unreachable block (ram,0x00439a69)\n// WARNING: Removing unreachable block (ram,0x00439a85)\n// WARNING: Removing unreachable block (ram,0x00439a9a)\n// WARNING: Removing unreachable block (ram,0x00439a9f)\n// WARNING: Removing unreachable block (ram,0x00439aa5)\n// WARNING: Removing unreachable block (ram,0x00439aaa)\n// WARNING: Removing unreachable block (ram,0x00439ab0)\n// WARNING: Removing unreachable block (ram,0x00439ab3)\n// WARNING: Removing unreachable block (ram,0x00439ab5)\n// WARNING: Removing unreachable block (ram,0x00439ae9)\n// WARNING: Removing unreachable block (ram,0x00439b01)\n// WARNING: Removing unreachable block (ram,0x00439b2e)\n// WARNING: Removing unreachable block (ram,0x00439b34)\n// WARNING: Removing unreachable block (ram,0x00439b53)\n// WARNING: Removing unreachable block (ram,0x00439afe)\n// WARNING: Removing unreachable block (ram,0x00439b6c)\n// WARNING: Removing unreachable block (ram,0x0043995a)\n// WARNING: Removing unreachable block (ram,0x00439b80)\n// WARNING: Removing unreachable block (ram,0x00439964)\n// WARNING: Removing unreachable block (ram,0x00439b76)\n\nuint __cdecl fcn.00439758(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint var_12ach;\n    uint var_aach;\n    uint var_8a0h;\n    uint var_694h;\n    uint var_488h;\n    uint var_480h;\n    uint var_468h;\n    uint var_464h;\n    uint var_25ch;\n    uint var_50h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_28h;\n    uint var_24h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.0044c510();\n    fcn.00416d61();\n    iVar1 = 0x200;\n    do {\n        fcn.00416d61();\n        iVar1 = iVar1 + -1;\n    } while (iVar1 != 0);\n    if (*0x479bb6 == '\\0') {\n        fcn.004164f5();\n        fcn.00421898();\n    }\n    else {\n        fcn.0041656a();\n        fcn.00421898();\n    }\n    fcn.00406ae5();\n    fcn.0044951c();\n    return 0;\n}\n",
        "token_count": 1259
    },
    "00439bb8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING (jumptable): Unable to track spacebase fully for stack\n// WARNING: Variable defined which should be unmapped: var_6dch\n// WARNING: Could not reconcile some variable overlaps\n\nuint fcn.00439bb8(int32_t param_1)\n\n{\n    bool bVar1;\n    uchar *puVar2;\n    char cVar3;\n    ushort uVar4;\n    uint32_t uVar5;\n    uint *puVar6;\n    int32_t *piVar7;\n    int32_t iVar8;\n    uint *puVar9;\n    uint uVar10;\n    int32_t iVar11;\n    uint *puVar12;\n    float10 fVar13;\n    int32_t var_8h;\n    uint var_ch_2;\n    uint var_2dch;\n    uint var_2d0h;\n    uint var_2c0h;\n    uint var_2bch;\n    uint var_2a8h;\n    uint var_2a0h;\n    uint var_29ch;\n    uint var_28eh;\n    uint var_280h;\n    uint var_27ch;\n    uint var_270h;\n    uint var_260h;\n    uint var_25ch;\n    uint var_24eh;\n    uint var_240h;\n    uint var_23ch;\n    uint var_238h;\n    uint var_234h;\n    uint var_220h;\n    uint var_21ch;\n    uint var_212h;\n    uint var_200h;\n    uint var_1fch;\n    uint var_1ech;\n    uint var_1e0h;\n    uint var_1dch;\n    uint var_1d2h;\n    uint var_1c0h;\n    uint var_1bch;\n    uint var_1aah;\n    uint var_1a0h;\n    uint var_19ch;\n    uint var_198h;\n    uint var_194h;\n    uint var_180h;\n    uint var_17ch;\n    uint var_178h;\n    uint var_174h;\n    uint var_160h;\n    uint var_15ch;\n    uint var_14eh;\n    uint var_140h;\n    uint var_13ch;\n    uint var_132h;\n    uint var_120h;\n    uint var_11ch;\n    uint var_10ch;\n    uint var_100h;\n    uint var_fch;\n    uint var_f2h;\n    uint var_e0h;\n    uint var_dch;\n    uint var_d0h;\n    uint var_c0h;\n    uint var_bch;\n    uint var_a8h;\n    uint var_a0h;\n    uint var_9ch;\n    uint var_80h;\n    uint var_68h;\n    uint var_4ch;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_dh;\n    uint var_4h;\n    uint *puStack1812;\n    uint *puStack1808;\n    uchar *puStack1804;\n    uchar *puStack1800;\n    uint var_6dch;\n    uint var_6d8h;\n    uint uStack736;\n    uint uStack732;\n    uint uStack728;\n    uint uStack724;\n    uint uStack720;\n    uint uStack716;\n    uint uStack712;\n    uint var_2c0h_2;\n    uint auStack704 [5];\n    uint uStack684;\n    uint uStack680;\n    uint uStack676;\n    uint uStack672;\n    uint uStack668;\n    uint uStack664;\n    ushort uStack660;\n    uint uStack658;\n    uint uStack654;\n    uint uStack650;\n    ushort uStack646;\n    uint uStack644;\n    uint uStack640;\n    uint uStack636;\n    uint uStack632;\n    uint uStack628;\n    uint uStack624;\n    uint uStack620;\n    uint uStack616;\n    uint uStack612;\n    uint uStack608;\n    uint uStack604;\n    uint uStack600;\n    ushort uStack596;\n    uint uStack594;\n    uint uStack590;\n    uint uStack586;\n    ushort uStack582;\n    uint uStack580;\n    uint uStack576;\n    uint uStack572;\n    uint uStack568;\n    uint uStack564;\n    uint uStack560;\n    uint uStack556;\n    uint uStack552;\n    uint uStack548;\n    uint uStack544;\n    uint uStack540;\n    ushort uStack536;\n    uint uStack534;\n    uint uStack530;\n    uint uStack526;\n    uint uStack522;\n    ushort uStack518;\n    uint uStack516;\n    uint uStack512;\n    uint uStack508;\n    uint uStack504;\n    uint uStack500;\n    uint uStack496;\n    uint uStack492;\n    uint uStack488;\n    uint uStack484;\n    uint uStack480;\n    uint uStack476;\n    ushort uStack472;\n    uint uStack470;\n    uint uStack466;\n    uint uStack462;\n    uint uStack458;\n    ushort uStack454;\n    uint uStack452;\n    uint uStack448;\n    uint uStack444;\n    uint uStack440;\n    uint uStack436;\n    ushort uStack432;\n    uint uStack430;\n    uint uStack426;\n    ushort uStack422;\n    uint uStack420;\n    uint uStack416;\n    uint uStack412;\n    uint uStack408;\n    uint uStack404;\n    uint uStack400;\n    uint uStack396;\n    uint uStack392;\n    uint uStack388;\n    uint uStack384;\n    uint uStack380;\n    uint uStack376;\n    uint uStack372;\n    uint uStack368;\n    uint uStack364;\n    uint uStack360;\n    int32_t iStack356;\n    uint uStack352;\n    uint uStack348;\n    uint uStack344;\n    ushort uStack340;\n    uint uStack338;\n    uint uStack334;\n    uint uStack330;\n    ushort uStack326;\n    int32_t iStack324;\n    uint uStack320;\n    uint uStack316;\n    ushort uStack312;\n    uint uStack310;\n    uint uStack306;\n    uint uStack302;\n    uint uStack298;\n    ushort uStack294;\n    uint uStack292;\n    uint uStack288;\n    uint uStack284;\n    uint uStack280;\n    uint uStack276;\n    uint uStack272;\n    uint uStack268;\n    uint uStack264;\n    uint uStack260;\n    uint uStack256;\n    uint uStack252;\n    ushort uStack248;\n    uint uStack246;\n    uint uStack242;\n    uint uStack238;\n    uint uStack234;\n    ushort uStack230;\n    uint uStack228;\n    uint uStack224;\n    uint uStack220;\n    uint uStack216;\n    uint uStack212;\n    uint uStack208;\n    uint uStack204;\n    uint uStack200;\n    uint uStack196;\n    uint auStack192 [5];\n    uint uStack172;\n    uint uStack168;\n    uint uStack164;\n    uint auStack160 [7];\n    uint uStack132;\n    uint *var_7ch;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint var_68h_2;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_4ch_2;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    int32_t var_34h_2;\n    uint32_t var_30h_2;\n    int32_t var_2ch_2;\n    uint var_28h_2;\n    uint *var_24h_2;\n    code *var_1ch_2;\n    uint *var_18h_2;\n    int32_t var_14h_2;\n    char var_eh;\n    uint *var_dh_2;\n    uint *var_8h_2;\n    int32_t var_4h_2;\n    \n    var_18h_2 = NULL;\n    uStack736 = *0x461afc;\n    uStack732 = *0x461b00;\n    uStack728 = *0x461b04;\n    uStack724 = 0;\n    uStack720 = 0;\n    uStack716 = 0;\n    uStack712 = 0;\n    var_2c0h_2 = 1;\n    iStack356 = 5;\n    puVar6 = 0x461ae8;\n    puVar12 = &stack0xfffffd40;\n    for (iVar8 = iStack356; iVar8 != 0; iVar8 = iVar8 + -1) {\n        *puVar12 = *puVar6;\n        puVar6 = puVar6 + 1;\n        puVar12 = puVar12 + 1;\n    }\n    uStack684 = 0;\n    uStack680 = 0;\n    uStack676 = 7;\n    uStack672 = *0x461ad8;\n    uStack668 = *0x461adc;\n    uStack664 = *0x461ae0;\n    uStack660 = *0x461ae4;\n    uStack658 = 0;\n    uStack654 = 0;\n    uStack650 = 0;\n    uStack646 = 0;\n    uStack644 = 3;\n    uStack640 = *0x461acc;\n    uStack636 = *0x461ad0;\n    uStack632 = *0x461ad4;\n    uStack628 = 0;\n    uStack624 = 0;\n    uStack620 = 0;\n    uStack616 = 0;\n    uStack612 = 2;\n    uStack608 = *0x461abc;\n    uStack604 = *0x461ac0;\n    uStack600 = *0x461ac4;\n    uStack596 = *0x461ac8;\n    uStack594 = 0;\n    uStack590 = 0;\n    uStack586 = 0;\n    uStack582 = 0;\n    uStack576 = *0x461ab4;\n    uStack572 = *0x461ab8;\n    uStack580 = 4;\n    uStack568 = 0;\n    uStack564 = 0;\n    uStack560 = 0;\n    uStack556 = 0;\n    uStack552 = 0;\n    var_dh_2._0_1_ = '\\0';\n    uStack544 = *0x461aa8;\n    uStack540 = *0x461aac;\n    uStack536 = *0x461ab0;\n    uStack534 = 0;\n    uStack530 = 0;\n    uStack526 = 0;\n    uStack522 = 0;\n    uStack518 = 0;\n    uStack512 = *0x461a98;\n    uStack508 = *0x461a9c;\n    uStack504 = *0x461aa0;\n    uStack500 = *0x461aa4;\n    uStack496 = 0;\n    uStack492 = 0;\n    uStack488 = 0;\n    uStack484 = 8;\n    uStack480 = *0x461a8c;\n    uStack476 = *0x461a90;\n    uStack472 = *0x461a94;\n    uStack470 = 0;\n    uStack466 = 0;\n    uStack462 = 0;\n    uStack458 = 0;\n    uStack454 = 0;\n    uStack452 = 4;\n    uStack448 = *0x461a78;\n    uStack444 = *0x461a7c;\n    uStack440 = *0x461a80;\n    uStack436 = *0x461a84;\n    uStack432 = *0x461a88;\n    uStack430 = 0;\n    uStack426 = 0;\n    uStack422 = 0;\n    uStack416 = *0x461a70;\n    uStack412 = *0x461a74;\n    uStack408 = 0;\n    uStack404 = 0;\n    uStack400 = 0;\n    uStack396 = 0;\n    uStack392 = 0;\n    uStack384 = *0x461a68;\n    uStack380 = *0x461a6c;\n    uStack388 = 9;\n    uStack376 = 0;\n    uStack372 = 0;\n    uStack368 = 0;\n    uStack364 = 0;\n    uStack360 = 0;\n    uStack352 = *0x461a58;\n    uStack348 = *0x461a5c;\n    uStack344 = *0x461a60;\n    uStack340 = *0x461a64;\n    uStack338 = 0;\n    uStack334 = 0;\n    uStack330 = 0;\n    uStack326 = 0;\n    uStack320 = *0x461a4c;\n    uStack316 = *0x461a50;\n    uStack312 = *0x461a54;\n    uStack310 = 0;\n    uStack306 = 0;\n    uStack302 = 0;\n    uStack298 = 0;\n    uStack294 = 0;\n    uStack292 = 6;\n    uStack288 = *0x461a3c;\n    uStack284 = *0x461a40;\n    uStack280 = *0x461a44;\n    uStack276 = *0x461a48;\n    uStack272 = 0;\n    uStack268 = 0;\n    uStack264 = 0;\n    uStack256 = *0x461a30;\n    uStack252 = *0x461a34;\n    uStack248 = *0x461a38;\n    uStack246 = 0;\n    uStack242 = 0;\n    uStack238 = 0;\n    uStack234 = 0;\n    uStack230 = 0;\n    uStack228 = 10;\n    uStack224 = *0x461a24;\n    uStack220 = *0x461a28;\n    uStack216 = *0x461a2c;\n    uStack212 = 0;\n    uStack208 = 0;\n    uStack204 = 0;\n    uStack200 = 0;\n    uStack196 = 0xb;\n    puVar6 = 0x461a10;\n    puVar12 = &stack0xffffff40;\n    for (iVar8 = iStack356; iVar8 != 0; iVar8 = iVar8 + -1) {\n        *puVar12 = *puVar6;\n        puVar6 = puVar6 + 1;\n        puVar12 = puVar12 + 1;\n    }\n    uStack172 = 0;\n    uStack168 = 0;\n    uStack164 = 0xc;\n    puVar6 = 0x4619f4;\n    puVar12 = &stack0xffffff60;\n    for (iVar8 = 7; iVar8 != 0; iVar8 = iVar8 + -1) {\n        *puVar12 = *puVar6;\n        puVar6 = puVar6 + 1;\n        puVar12 = puVar12 + 1;\n    }\n    uStack132 = 0xd;\n    uStack548 = uStack612;\n    uStack516 = uStack612;\n    uStack420 = uStack484;\n    iStack324 = iStack356;\n    uStack260 = uStack292;\n    fcn.00418661();\n    fcn.00416dcf();\n    fcn.00418661();\n    fcn.00416dcf();\n    iVar8 = *(var_8h + 0xc) + -3;\n    fcn.00416d61();\n    var_34h_2 = 0;\n    uVar5 = iVar8 / 2;\n    if (uVar5 * 2 != iVar8) {\n        fcn.0041fdea(0x70, 0xffffffff);\n        uVar10 = 1;\n        goto code_r0x0043a081;\n    }\n    var_30h_2 = uVar5;\n    (**0x45942c)();\n    var_6dch = 0xffffffff;\n    puVar6 = fcn.004172f4(0x4619f0, 1, 1, 0xffffffff);\n    if ((puVar6 != NULL) && (puVar6 < var_24h_2)) {\n        fcn.00416d61();\n        fcn.00417113();\n        fcn.004171ba();\n        puVar6 = &fcn.00439bb8::var_74h;\n        fcn.00416d81();\n        cVar3 = fcn.00416f96();\n        fcn.0044951c();\n        if (cVar3 == '\\0') {\n            puVar6 = &fcn.00439bb8::var_58h;\n            fcn.00416d81();\n            bVar1 = false;\n            cVar3 = fcn.00416f96();\n            if (cVar3 == '\\0') {\n                puVar6 = &fcn.00439bb8::var_74h;\n                fcn.00416d81();\n                bVar1 = true;\n                cVar3 = fcn.00416f96();\n                var_eh = '\\0';\n                if (cVar3 != '\\0') goto code_r0x00439fca;\n            }\n            else {\ncode_r0x00439fca:\n                var_eh = '\\x01';\n            }\n            if (bVar1) {\n                fcn.0044951c();\n            }\n            fcn.0044951c();\n            if (var_eh == '\\0') {\n                fcn.00418bb9();\n                fcn.00421898();\n                fcn.0044951c();\n                uVar10 = 0;\ncode_r0x0043a081:\n                fcn.0044951c();\n                fcn.0044951c();\n                fcn.0044951c();\n                return uVar10;\n            }\n            var_34h_2 = 0;\n        }\n        else {\n            var_34h_2 = 1;\n        }\n        fcn.0044951c();\n    }\n    var_4h_2 = -1;\n    stack0xfffffff0 = 0x3;\n    if (var_30h_2 < 0x80000000) {\n        do {\n            if (var_4h_2 == -1) {\n                puVar12 = &fcn.00439bb8::var_3ch;\n                fcn.004170ba();\n                puVar6 = &fcn.00439bb8::var_58h;\n                fcn.00416d81();\n                cVar3 = fcn.00416f96();\n                fcn.0044951c();\n                if (cVar3 == '\\0') goto code_r0x0043a0c5;\n            }\n            else {\n                puVar12 = &fcn.00439bb8::var_6dch + var_4h_2 * 2;\n                fcn.0040f269();\n                fcn.00418661();\n                fcn.00416e71();\ncode_r0x0043a0c5:\n                var_1ch_2 = NULL;\n                var_14h_2 = 0;\n                puVar6 = &fcn.00439bb8::var_2c0h_2;\n                do {\n                    if (var_14h_2 != 0) goto code_r0x0043a10b;\n                    iVar8 = fcn.004498e1(puVar6 + -7, var_4ch_2, 0xe);\n                    if (iVar8 == 0) {\n                        *puVar12 = *puVar6;\n                        var_14h_2 = 1;\n                    }\n                    var_1ch_2 = var_1ch_2 + 1;\n                    puVar6 = puVar6 + 8;\n                } while (var_1ch_2 < 0x13);\n                if (var_14h_2 == 0) {\n                    fcn.00418bb9();\n                    goto code_r0x0043a2a5;\n                }\ncode_r0x0043a10b:\n                if (var_4h_2 != -1) {\n                    unique0x00007a80 = stack0xfffffff0 + 2;\n                }\n            }\n            var_4h_2 = var_4h_2 + 1;\n        } while (var_4h_2 < var_30h_2);\n    }\n    puVar12 = NULL;\n    if (*(var_8h + 0xc) == 0) {\n        iVar8 = var_8h + 0x18;\n    }\n    else {\n        iVar8 = **(var_8h + 8);\n    }\n    if (*(iVar8 + 8) == 4) {\n        if (*(var_8h + 0xc) == 0) {\n            puVar6 = var_8h + 0x18;\n        }\n        else {\n            puVar6 = **(var_8h + 8);\n        }\n        fcn.00418641();\n        var_14h_2 = (**0x4592b8)();\ncode_r0x0043a1ca:\n        if (var_14h_2 == 0) goto code_r0x0043a1d1;\n        if (*(var_8h + 0xc) < 3) {\n            iVar8 = var_8h + 0x18;\n        }\n        else {\n            iVar8 = *(*(var_8h + 8) + 8);\n        }\n        if (*(iVar8 + 8) == 4) {\n            puVar6 = fcn.00416a25();\n            var_1ch_2 = (*_sym.imp.KERNEL32.DLL_GetProcAddress)();\n            fcn.0044951c();\n        }\n        else {\n            fcn.00418733();\n            var_1ch_2 = (*_sym.imp.KERNEL32.DLL_GetProcAddress)();\n        }\n        if (var_1ch_2 != NULL) {\ncode_r0x0043a2b2:\n            puStack1800 = &stack0xfffff90c;\n            stack0xfffffff0 = 0x4;\n            var_4h_2 = 0;\n            if (0 < var_30h_2) {\n                do {\n                    iVar8 = var_4h_2;\n                    puVar6 = stack0xfffffff0;\n                    puVar12 = var_4h_2 * 8;\n    // switch table (13 cases) at 0x43a6f4\n                    switch((&fcn.00439bb8::var_6dch)[var_4h_2 * 2]) {\n                    case 1:\n                    case 3:\n                        fcn.0040f269();\n                        uVar4 = fcn.00418733();\n                        *(&fcn.00439bb8::var_6d8h + iVar8 * 2) = uVar4;\n                        break;\n                    case 2:\n                    case 4:\n                    case 9:\n                        fcn.0040f269();\n                        uVar10 = fcn.00418733();\n                        goto code_r0x0043a44b;\n                    case 5:\n                        fcn.0040f269();\n                        fcn.00418641();\n                        fcn.0044985c();\n                        var_7ch = fcn.00449614();\n                        fcn.0040f269();\n                        fcn.00418641();\n                        var_18h_2 = fcn.00416a25();\n                        puVar6 = var_7ch;\n                        fcn.0044a030();\n                        fcn.0044951c();\n                        goto code_r0x0043a3ca;\n                    case 6:\n                        fcn.0040f269();\n                        fcn.00418641();\n                        fcn.0044985c();\n                        var_18h_2 = fcn.00449614();\n                        fcn.0040f269();\n                        fcn.00418641();\n                        puVar6 = var_18h_2;\n                        fcn.004495f8();\ncode_r0x0043a3ca:\n                        (&fcn.00439bb8::var_6d8h)[iVar8 * 2] = puVar6;\n                        puVar6 = stack0xfffffff0;\n                        break;\n                    case 7:\n                        goto code_r0x0043a40a;\n                    case 8:\ncode_r0x0043a40a:\n                        puVar12 = &fcn.00439bb8::var_6d8h + var_4h_2 * 2;\n                        uVar10 = fcn.00449614();\n                        *puVar12 = uVar10;\n                        fcn.0040f269();\n                        uVar10 = fcn.00418733();\n                        puVar9 = *puVar12;\ncode_r0x0043a493:\n                        *puVar9 = uVar10;\n                        break;\n                    case 10:\n                        fcn.0040f269();\n                        uVar10 = fcn.00418850();\ncode_r0x0043a44b:\n                        (&fcn.00439bb8::var_6d8h)[iVar8 * 2] = uVar10;\n                        break;\n                    case 0xb:\n                        fcn.0040f269();\n                        fVar13 = fcn.00418692();\n                        (&fcn.00439bb8::var_6d8h)[iVar8 * 2] = fVar13;\n                        break;\n                    case 0xc:\n                        fcn.0040f269();\n                        cVar3 = fcn.00419b83();\n                        if (cVar3 != '\\0') {\n                            piVar7 = fcn.0040f269();\n                            uVar10 = *(*piVar7 + 8);\n                            goto code_r0x0043a44b;\n                        }\n                        (&fcn.00439bb8::var_6d8h)[iVar8 * 2] = 0;\n                        break;\n                    case 0xd:\n                        var_18h_2 = fcn.00449614();\n                        (&fcn.00439bb8::var_6d8h)[iVar8 * 2] = var_18h_2;\n                        fcn.0040f269();\n                        cVar3 = fcn.00419b83();\n                        if (cVar3 == '\\0') break;\n                        piVar7 = fcn.0040f269();\n                        uVar10 = *(*piVar7 + 8);\n                        puVar9 = var_18h_2;\n                        goto code_r0x0043a493;\n                    }\n                    puVar6 = puVar6 + 2;\n                    var_4h_2 = var_4h_2 + 1;\n                    stack0xfffffff0 = puVar6;\n                } while (var_4h_2 < var_30h_2);\n            }\n            var_18h_2 = &stack0xfffff8ec;\n            puStack1812 = puVar12;\n            puStack1808 = puVar6;\n            puStack1804 = &stack0xfffffffc;\n            if (-1 < var_30h_2 - 1) {\n                puVar6 = &fcn.00439bb8::var_6d8h + (var_30h_2 - 1) * 2;\n                uVar5 = var_30h_2;\n                puStack1804 = &stack0xfffffffc;\n                puStack1800 = &stack0xfffff90c;\n                var_18h_2 = &stack0xfffff8ec;\n                do {\n                    fcn.0044a6b0(&fcn.00439bb8::var_8h_2, puVar6, 4);\n                    puStack1812 = var_8h_2;\n                    puVar6 = puVar6 + -2;\n                    uVar5 = uVar5 - 1;\n                } while (uVar5 != 0);\n            }\n            puVar6 = 0x4619b8;\n            fcn.00416d81(0x4619b8);\n            cVar3 = fcn.00416f96();\n            fcn.0044951c(var_58h);\n            if (cVar3 == '\\0') {\n                var_38h = (*var_1ch_2)();\n            }\n            else {\n                (*var_1ch_2)();\n                var_38h = 0;\n                var_3ch = 2;\n            }\n            if ((var_34h_2 == 1) && (uVar5 = var_30h_2,  0 < var_30h_2)) {\n                do {\n                    uVar5 = uVar5 - 1;\n                    var_8h_2 = puVar6;\n                } while (uVar5 != 0);\n            }\n            if (var_18h_2 != &stack0xfffff8ec) {\n                var_dh_2._0_1_ = '\\x01';\n            }\n            if (var_dh_2 != '\\0') {\n                fcn.0041fdea(0x67, 0xffffffff);\n                uVar10 = (**0x4592ac)(0);\n                (*_sym.imp.KERNEL32.DLL_TerminateProcess)(uVar10);\n            }\n            puVar2 = puStack1804;\n            iVar8 = *(puStack1804 + -0x30);\n            fcn.0041a000(1);\n            puStack1800 = 0x43a56b;\n            fcn.0041a132(1);\n            iVar11 = -1;\n            *(puVar2 + -4) = 0xffffffff;\n            if (-1 < iVar8) {\n                do {\n                    *(puVar2 + -0x18) = iVar11 + 1;\n                    fcn.0041a132(1);\n                    puVar6 = puVar2 + -0x3c;\n                    if (iVar11 != -1) {\n                        puVar6 = puVar2 + iVar11 * 8 + -0x6dc;\n                    }\n    // switch table (13 cases) at 0x43a728\n                    switch(*puVar6) {\n                    case 1:\n                        goto code_r0x0043a646;\n                    case 2:\n                    case 9:\ncode_r0x0043a646:\n                        fcn.00418bb9();\n                        break;\n                    case 3:\n                        goto code_r0x0043a61d;\n                    case 4:\ncode_r0x0043a61d:\n                        fcn.00418c2c();\n                        break;\n                    case 5:\n                        fcn.004169d1(puVar6[1]);\n                        fcn.00418c7e();\n                        fcn.0044951c();\n                        goto code_r0x0043a68b;\n                    case 6:\n                        fcn.00418c7e();\n                        goto code_r0x0043a68b;\n                    case 7:\n                    case 8:\n                        fcn.00418bb9();\n                        if (*(puVar2 + -4) == -1) break;\n                        goto code_r0x0043a697;\n                    case 10:\n                        fcn.00418c4c();\n                        break;\n                    case 0xb:\n                        fcn.00418c65();\n                        break;\n                    case 0xc:\n                        *(puVar2 + -0x70) = puVar6[1];\n                        *(puVar2 + -0x78) = 9;\n                        fcn.00418cde(puVar2 + -0x78);\n                        break;\n                    case 0xd:\n                        puVar6 = puVar6[1];\n                        *(puVar2 + -0x5c) = 9;\n                        *(puVar2 + -0x54) = *puVar6;\n                        fcn.00418cde(puVar2 + -0x5c);\n                        (**0x4593cc)();\ncode_r0x0043a68b:\n                        if (iVar11 != -1) {\ncode_r0x0043a697:\n                            fcn.0044951c();\n                        }\n                    }\n                    *(puVar2 + -4) = *(puVar2 + -0x18);\n                    if (*(puVar2 + -0x30) <= *(puVar2 + -0x18)) break;\n                    iVar11 = *(puVar2 + -4);\n                } while( true );\n            }\n            iVar8 = *(puVar2 + 8);\n            if (*(iVar8 + 0xc) == 0) {\n                iVar8 = iVar8 + 0x18;\n            }\n            else {\n                iVar8 = **(iVar8 + 8);\n            }\n            if (*(iVar8 + 8) == 4) {\n                (*_sym.imp.KERNEL32.DLL_FreeLibrary)();\n            }\n            goto code_r0x0043a6ce;\n        }\n        if (*(var_8h + 0xc) < 3) {\n            var_8h = var_8h + 0x18;\n        }\n        else {\n            var_8h = *(*(var_8h + 8) + 8);\n        }\n        if (*(var_8h + 8) == 4) {\n            fcn.00416f01();\n            puVar6 = fcn.00416a25();\n            var_1ch_2 = (*_sym.imp.KERNEL32.DLL_GetProcAddress)();\n            fcn.0044951c();\n            if (var_1ch_2 != NULL) goto code_r0x0043a2b2;\n        }\n        (*_sym.imp.KERNEL32.DLL_FreeLibrary)();\n        fcn.00418bb9();\n    }\n    else {\n        iVar8 = fcn.00418733();\n        if (0 < iVar8) {\ncode_r0x0043a1a4:\n            fcn.00418733();\n            piVar7 = fcn.00421a8a();\n            var_14h_2 = *piVar7;\n            goto code_r0x0043a1ca;\n        }\n        puVar6 = *(var_2ch_2 + 0x6c4);\n        iVar8 = fcn.00418733();\n        if (iVar8 <= puVar6) goto code_r0x0043a1a4;\ncode_r0x0043a1d1:\n        fcn.00418bb9();\n    }\ncode_r0x0043a2a5:\n    fcn.00421898();\ncode_r0x0043a6ce:\n    fcn.0044951c();\n    fcn.0044951c();\n    fcn.0044951c();\n    return 0;\n}\n",
        "token_count": 7769
    },
    "0043a75c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0043a75c(int32_t arg_8h, uint arg_ch)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    int32_t *piVar3;\n    int32_t in_ECX;\n    uint32_t uVar4;\n    int32_t iVar5;\n    \n    uVar4 = 0;\n    uVar2 = fcn.00418641();\n    arg_8h = (**0x4592b8)(uVar2);\n    if (arg_8h == 0) {\n        iVar5 = -1;\n    }\n    else {\n        uVar1 = *(in_ECX + 0x6c4);\n        if (uVar1 != 0) {\n            do {\n                piVar3 = fcn.00421a8a();\n                if (*piVar3 == 0) break;\n                uVar4 = uVar4 + 1;\n            } while (uVar4 < uVar1);\n        }\n        if (uVar4 == uVar1) {\n            fcn.00403ccb(&arg_8h);\n        }\n        else {\n            piVar3 = fcn.00421a8a();\n            *piVar3 = arg_8h;\n        }\n        iVar5 = uVar4 + 1;\n    }\n    fcn.00418bb9(iVar5);\n    return 0;\n}\n",
        "token_count": 305
    },
    "0043a86e": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0043a86e(int32_t arg_8h, uint arg_ch)\n\n{\n    int16_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int16_t *piVar4;\n    ushort *puVar5;\n    ushort *puVar6;\n    int32_t iVar7;\n    uint32_t *puVar8;\n    int16_t *piVar9;\n    uint var_1ach;\n    uint var_1a2h;\n    uint var_19ch;\n    uint32_t var_198h;\n    uint var_194h;\n    uint uStack404;\n    uint uStack400;\n    uint var_188h;\n    uint var_184h;\n    uint var_180h;\n    uint var_17ch;\n    uint uStack380;\n    ushort uStack376;\n    uint var_172h;\n    ushort uStack370;\n    uint var_16ch;\n    uint var_168h;\n    uint var_164h;\n    uint uStack356;\n    uint uStack352;\n    uint var_158h;\n    uint var_154h;\n    uint var_150h;\n    uint var_14ch;\n    uint uStack332;\n    uint uStack328;\n    ushort uStack324;\n    uint var_13eh;\n    uint var_138h;\n    uint var_134h;\n    uint uStack308;\n    uint uStack304;\n    uint var_128h;\n    uint var_124h;\n    uint var_120h;\n    uint var_11ch;\n    uint uStack284;\n    uint uStack280;\n    ushort uStack276;\n    uint var_10eh;\n    uint var_108h;\n    uint var_104h;\n    uint uStack260;\n    ushort uStack256;\n    uint var_fah;\n    ushort uStack250;\n    uint var_f4h;\n    uint var_f0h;\n    uint var_ech;\n    uint var_e8h;\n    uint var_e4h;\n    uint uStack228;\n    uint var_dch;\n    uint var_d8h;\n    uint var_d4h;\n    uint uStack212;\n    ushort uStack208;\n    uint var_cah;\n    ushort uStack202;\n    uint var_c4h;\n    uint var_c0h;\n    uint var_bch;\n    uint uStack188;\n    uint uStack184;\n    uint var_b0h;\n    uint var_ach;\n    uint var_a8h;\n    uint var_a4h;\n    uint uStack164;\n    uint uStack160;\n    ushort uStack156;\n    uint var_96h;\n    uint var_90h;\n    uint var_8ch;\n    uint var_88h;\n    uint var_84h;\n    uint uStack132;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    uint uStack116;\n    ushort uStack112;\n    uint var_6ah;\n    ushort uStack106;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint uStack92;\n    uint uStack88;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint uStack68;\n    uint uStack64;\n    ushort uStack60;\n    uint var_36h;\n    uint var_30h;\n    uint32_t var_2ch;\n    int32_t var_28h;\n    uint32_t var_24h;\n    int16_t *var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    var_198h = 0x10;\n    var_194h = *0x4619a0;\n    uStack404 = *0x4619a4;\n    uStack400 = *0x4619a8;\n    var_188h = 0;\n    var_184h = 1;\n    var_180h = 0x12;\n    var_17ch = *0x461994;\n    uStack380 = *0x461998;\n    uStack376 = *0x46199c;\n    var_172h = 0;\n    uStack370 = 0;\n    var_16ch = 1;\n    var_168h = 1;\n    var_164h = *0x461afc;\n    uStack356 = *0x461b00;\n    uStack352 = *0x461b04;\n    var_158h = 0;\n    var_154h = 2;\n    var_150h = 0;\n    var_14ch = *0x461ad8;\n    uStack332 = *0x461adc;\n    uStack328 = *0x461ae0;\n    uStack324 = *0x461ae4;\n    var_13eh._0_2_ = 0;\n    stack0xfffffec0 = 2;\n    var_138h = 2;\n    var_134h = *0x461acc;\n    uStack308 = *0x461ad0;\n    uStack304 = *0x461ad4;\n    var_128h = 0;\n    var_120h = 0;\n    var_124h = 4;\n    var_11ch = *0x461abc;\n    uStack284 = *0x461ac0;\n    uStack280 = *0x461ac4;\n    uStack276 = *0x461ac8;\n    var_10eh._0_2_ = 0;\n    stack0xfffffef0 = 4;\n    var_108h = 2;\n    var_104h = *0x461aa8;\n    uStack260 = *0x461aac;\n    uStack256 = *0x461ab0;\n    var_fah = 0;\n    uStack250 = 0;\n    var_ech = *0x461ab4;\n    var_e8h = *0x461ab8;\n    var_f0h = 0;\n    var_f4h = 4;\n    var_e4h = 0;\n    uStack228 = 0;\n    var_d8h = 0;\n    var_dch = 4;\n    var_d4h = *0x461a8c;\n    uStack212 = *0x461a90;\n    uStack208 = *0x461a94;\n    var_cah = 0;\n    uStack202 = 0;\n    var_c0h = 2;\n    var_c4h = 4;\n    var_bch = *0x461988;\n    uStack188 = *0x46198c;\n    uStack184 = *0x461990;\n    var_b0h = 0;\n    var_a8h = 0;\n    var_ach = 8;\n    var_a4h = *0x461978;\n    uStack164 = *0x46197c;\n    uStack160 = *0x461980;\n    uStack156 = *0x461984;\n    var_96h._0_2_ = 0;\n    var_8ch = *0x461a70;\n    var_88h = *0x461a74;\n    var_90h = 2;\n    stack0xffffff68 = 8;\n    var_84h = 0;\n    uStack132 = 0;\n    var_7ch = 4;\n    var_78h = 0;\n    var_74h = *0x461a30;\n    uStack116 = *0x461a34;\n    uStack112 = *0x461a38;\n    var_6ah = 0;\n    uStack106 = 0;\n    var_64h = 4;\n    var_60h = 0;\n    var_5ch = *0x461a24;\n    uStack92 = *0x461a28;\n    uStack88 = *0x461a2c;\n    var_50h = 0;\n    var_4ch = 4;\n    var_48h = 8;\n    var_44h = *0x461968;\n    uStack68 = *0x46196c;\n    uStack64 = *0x461970;\n    uStack60 = *0x461974;\n    var_36h._0_2_ = 0;\n    stack0xffffffc8 = 8;\n    var_30h = 8;\n    var_8h = 0;\n    var_1ch = 0;\n    var_2ch = 0;\n    var_24h = 0;\n    if (*(arg_8h + 0xc) == 0) {\n        iVar3 = arg_8h + 0x18;\n    }\n    else {\n        iVar3 = **(arg_8h + 8);\n    }\n    if (*(iVar3 + 8) != 4) {\n        fcn.00418bb9(0);\ncode_r0x0043ab2a:\n        fcn.00421898(0);\n        return 0;\n    }\n    uVar2 = fcn.00418641();\n    iVar3 = fcn.0044985c(uVar2);\n    iVar7 = iVar3 + 1;\n    var_18h = iVar7;\n    var_10h = fcn.00449614(iVar3 + 3 + iVar7);\n    if (var_10h == 0) {\n        fcn.00418bb9(0);\n        goto code_r0x0043ab2a;\n    }\n    uVar2 = fcn.00418641(iVar7);\n    iVar3 = var_10h;\n    for (piVar4 = fcn.00449c77(var_10h, uVar2); *piVar4 != 0; piVar4 = piVar4 + 1) {\n        if (*piVar4 == 0x3b) {\n            var_8h = var_8h + 1;\n        }\n    }\n    if ((1 < var_18h) && (*(iVar3 + -4 + var_18h * 2) != 0x3b)) {\n        var_8h = var_8h + 1;\n    }\n    fcn.0041a000(2);\n    var_20h = fcn.0044b607(iVar3, 0x461964);\n    if (var_20h != NULL) {\n        var_ch = 1;\ncode_r0x0043abd1:\n        for (; (iVar1 = *var_20h,  iVar1 != 0 && ((iVar1 == 0x20 || (iVar1 == 9)))); var_20h = var_20h + 1) {\n        }\n        iVar1 = *var_20h;\n        piVar4 = var_20h;\n        while (iVar1 != 0) {\n            if ((*piVar4 == 0x20) || (*piVar4 == 9)) {\n                *piVar4 = 0;\n                goto code_r0x0043ac0b;\n            }\n            piVar4 = piVar4 + 1;\n            iVar1 = *piVar4;\n        }\n        goto code_r0x0043ac15;\n    }\ncode_r0x0043ad83:\n    fcn.0041a132(2);\n    if (*(arg_8h + 0xc) < 2) {\n        fcn.00418bd2();\n    }\n    else {\n        iVar3 = fcn.00418733();\n        if (iVar3 == 0) {\ncode_r0x0043adb2:\n            fcn.00418bb9(0);\ncode_r0x0043adbd:\n            fcn.00421898(0);\n            goto code_r0x0043ae43;\n        }\n        iVar3 = fcn.00418733();\n        fcn.00418c2c(iVar3, iVar3 >> 0x1f);\n    }\n    fcn.0041a132(2);\n    fcn.00418bb9(var_1ch);\n    fcn.0041a132(2);\n    fcn.00418bb9(var_8h);\n    fcn.00419e94();\ncode_r0x0043ae43:\n    fcn.0044951c(var_10h);\n    return 0;\n    while ((iVar1 == 0x20 || (iVar1 == 9))) {\ncode_r0x0043ac0b:\n        piVar4 = piVar4 + 1;\n        iVar1 = *piVar4;\n        if (iVar1 == 0) break;\n    }\ncode_r0x0043ac15:\n    var_14h = -1;\n    piVar9 = piVar4;\n    if (*piVar4 == 0) {\n        piVar9 = var_20h;\n    }\n    puVar5 = fcn.0044b5b5(piVar9, 0x5b);\n    if (puVar5 != NULL) {\n        *puVar5 = 0;\n        puVar6 = fcn.0044b5b5(puVar5 + 1, 0x5d);\n        if (puVar6 == NULL) goto code_r0x0043adb2;\n        *puVar6 = 0;\n        var_14h = fcn.00449794(puVar5 + 1);\n        if (var_14h < 1) goto code_r0x0043adb2;\n    }\n    var_18h = 0;\n    var_28h = 0;\n    puVar8 = &var_198h;\n    do {\n        if (var_28h != 0) goto code_r0x0043acbb;\n        iVar3 = fcn.004498e1(puVar8 + -5, var_20h, 8);\n        if (iVar3 == 0) {\n            var_24h = *puVar8;\n            if (((var_24h & 0x11) != 0) && (0 < var_14h)) {\n                var_24h = var_24h | 4;\n            }\n            var_2ch = puVar8[-1];\n            var_28h = 1;\n        }\n        var_18h = var_18h + 1;\n        puVar8 = puVar8 + 6;\n    } while (var_18h < 0x10);\n    if (var_28h == 0) {\n        fcn.00418bb9(0);\n        goto code_r0x0043adbd;\n    }\ncode_r0x0043acbb:\n    if (var_14h < 1) {\n        var_14h = 1;\n    }\n    fcn.0041a132(2);\n    fcn.00418bb9(var_1ch);\n    fcn.0041a132(2);\n    fcn.00418bb9(var_2ch);\n    fcn.0041a132(2);\n    fcn.00418bb9(var_24h);\n    fcn.0041a132(2);\n    piVar9 = piVar4;\n    if (*piVar4 == 0) {\n        fcn.00418bb9(0);\n    }\n    else {\n        do {\n            if ((*piVar9 == 0x20) || (*piVar9 == 9)) {\n                *piVar9 = 0;\n                break;\n            }\n            piVar9 = piVar9 + 1;\n        } while (*piVar9 != 0);\n        fcn.00418c7e(piVar4);\n    }\n    var_1ch = var_1ch + var_14h * var_2ch;\n    var_20h = fcn.0044b607(0, 0x461964);\n    var_ch = var_ch + 1;\n    if (var_20h == NULL) goto code_r0x0043ad83;\n    goto code_r0x0043abd1;\n}\n",
        "token_count": 3575
    },
    "0043af7f": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0043af7f(int32_t arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    uint in_ECX;\n    uint var_14h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (*(arg_8h + 0xc) < 2) {\n        fcn.00418bb9(1);\n    }\n    else {\n        fcn.00418a19(*(*(arg_8h + 8) + 4));\n    }\n    if (*(arg_8h + 0xc) == 0) {\n        arg_8h = arg_8h + 0x18;\n    }\n    else {\n        arg_8h = **(arg_8h + 8);\n    }\n    uVar1 = fcn.0043aff6(in_ECX, arg_8h);\n    fcn.00418bb9(uVar1);\n    fcn.0041858e();\n    return 0;\n}\n",
        "token_count": 225
    },
    "0043b13e": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0043b13e(int32_t arg_8h, uint arg_ch, int32_t arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    char cVar1;\n    uchar uVar2;\n    ushort uVar3;\n    uint in_EAX;\n    double *arg_8h_00;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint32_t arg_8h_01;\n    int32_t iVar6;\n    uint uVar7;\n    float fVar8;\n    float10 fVar9;\n    ulong uVar10;\n    double dVar11;\n    int32_t var_10h;\n    ulong uStack24;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    arg_8h_00 = fcn.0043aff6(arg_8h, in_EAX);\n    if (arg_8h_00 == NULL) {\n        fcn.00418bb9();\n        return *(arg_8h + 0x354);\n    }\n    fcn.0041a132(2);\n    iVar4 = fcn.00418733();\n    fcn.0041a132(2);\n    iVar5 = fcn.00418733();\n    if (var_10h != iVar4) {\n        fcn.0041a132(2);\n        iVar5 = fcn.00418733();\n    }\n    fcn.0041a132(2);\n    var_4h = fcn.00418733();\n    if ((iVar5 <= var_4h) || (var_4h < 0)) {\n        uVar7 = 0;\n        fcn.00418bb9();\n        fcn.00421898(0, uVar7);\n        return 2;\n    }\n    fcn.0041a132(2);\n    iVar4 = fcn.00418733();\n    fcn.0041a132(2);\n    arg_8h_01 = fcn.00418733();\n    if (arg_14h != '\\0') {\n        if (arg_10h < 1) {\n            uVar7 = 0;\n            fcn.00418bb9();\n            fcn.00421898(0, uVar7);\n            return 5;\n        }\n        iVar6 = (arg_10h + -1) * iVar4;\n        var_4h = var_4h + iVar6;\n        arg_8h_00 = arg_8h_00 + iVar6;\n    }\n    if (iVar5 <= var_4h) {\n        uVar7 = 0;\n        fcn.00418bb9();\n        fcn.00421898(0, uVar7);\n        return 3;\n    }\n    if ((arg_8h_01 & 1) != 0) {\n        uVar7 = fcn.0043b420(arg_8h_01, arg_8h_00, var_4h, arg_14h, arg_18h, arg_1ch);\n        return uVar7;\n    }\n    cVar1 = arg_18h;\n    if (((arg_8h_01 & 4) != 0) && (arg_14h == '\\0')) {\n        iVar5 = iVar5 - var_4h;\n        if (cVar1 == '\\0') {\n            if ((arg_8h_01 & 0x10) != 0) goto code_r0x0043b2dd;\n        }\n        else if ((arg_8h_01 & 0x10) != 0) {\n            fcn.00418678();\n            iVar4 = fcn.00418606();\n            if (iVar5 < iVar4) {\n                iVar4 = iVar5;\n            }\n            iVar5 = iVar4;\n            uVar7 = fcn.00418678();\n            fcn.0044a6b0(arg_8h_00, uVar7, iVar5);\n            arg_8h_00 = fcn.00418678();\n            iVar5 = iVar4;\ncode_r0x0043b2dd:\n            uVar7 = fcn.00418bd2();\n            fcn.0044a6b0(uVar7, arg_8h_00, iVar5);\n            return 0;\n        }\n    }\n    if ((arg_8h_01 & 8) != 0) {\n        if (iVar4 == 4) {\n            if (cVar1 != '\\0') {\n                fVar9 = fcn.00418692();\n                *arg_8h_00 = fVar9;\n            }\n            dVar11 = *arg_8h_00;\n        }\n        else {\n            if (iVar4 != 8) {\ncode_r0x0043b364:\n                uVar7 = 0;\n                fcn.00418bb9();\n                fcn.00421898(0, uVar7);\n                return 4;\n            }\n            if (cVar1 != '\\0') {\n                fVar9 = fcn.00418692();\n                *arg_8h_00 = fVar9;\n            }\n            dVar11 = *arg_8h_00;\n        }\n        fcn.00418c65(dVar11);\n        return 0;\n    }\n    if (iVar4 == 1) {\n        if (cVar1 != '\\0') {\n            uVar2 = fcn.004187bd();\n            *arg_8h_00 = uVar2;\n        }\n        if ((arg_8h_01 & 2) == 0) {\n            fVar8 = *arg_8h_00;\n        }\n        else {\n            fVar8 = *arg_8h_00;\n        }\n    }\n    else if (iVar4 == 2) {\n        if (cVar1 != '\\0') {\n            uVar3 = fcn.004187bd();\n            *arg_8h_00 = uVar3;\n        }\n        if ((arg_8h_01 & 2) == 0) {\n            fVar8 = *arg_8h_00;\n        }\n        else {\n            fVar8 = *arg_8h_00;\n        }\n    }\n    else {\n        if (iVar4 != 4) {\n            if (iVar4 != 8) goto code_r0x0043b364;\n            if (cVar1 != '\\0') {\n                uVar10 = fcn.004187bd();\n                *arg_8h_00 = uVar10;\n                *(arg_8h_00 + 4) = uVar10 >> 0x20;\n            }\n            dVar11 = *arg_8h_00;\n            goto code_r0x0043b3f3;\n        }\n        if (cVar1 != '\\0') {\n            fVar8 = fcn.004187bd();\n            *arg_8h_00 = fVar8;\n        }\n        if ((arg_8h_01 & 2) != 0) {\n            dVar11 = *arg_8h_00;\n            goto code_r0x0043b3f3;\n        }\n        fVar8 = *arg_8h_00;\n    }\n    dVar11 = fVar8;\ncode_r0x0043b3f3:\n    fcn.00418c2c(dVar11);\n    return 0;\n}\n",
        "token_count": 1650
    },
    "0043b420": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0043b420(uint32_t arg_8h, uint arg_ch, int32_t arg_10h, uint arg_14h, uint32_t arg_18h, uint arg_1ch)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    uint32_t uVar4;\n    uint16_t *puVar5;\n    ushort extraout_var;\n    uint8_t *var_ch;\n    uint var_8h;\n    \n    if (((arg_8h & 4) == 0) || (arg_14h != '\\0')) {\n        fcn.00416d61();\n        if (arg_18h == '\\0') {\n            fcn.0044a6b0(&arg_18h + 3, arg_ch, 1);\n            fcn.00416e97(CONCAT22(extraout_var, arg_18h._3_1_));\n            fcn.00418cb1();\n        }\n        else {\n            cVar1 = fcn.00419a96();\n            if (cVar1 == '\\0') {\n                puVar5 = fcn.00418641();\n                uVar4 = *puVar5;\n            }\n            else {\n                uVar4 = fcn.00418733();\n            }\n            fcn.00416e97(uVar4);\n            fcn.00418cb1();\n            arg_18h = arg_18h & 0xffffff | *var_ch << 0x18;\n            fcn.0044a6b0(arg_ch, &arg_18h + 3, 1);\n        }\n        fcn.0044951c(var_ch);\n    }\n    else {\n        arg_10h = in_EAX - arg_10h;\n        if (arg_18h == '\\0') {\n            iVar2 = fcn.00449fa0(arg_ch);\n            if (iVar2 < arg_10h) {\n                arg_10h = iVar2;\n            }\n            iVar2 = fcn.00449614(iVar2 + 1);\n            fcn.0044a6b0(iVar2, arg_ch, arg_10h);\n            *(iVar2 + arg_10h) = 0;\n            uVar3 = fcn.004169d1(iVar2);\n            fcn.00418c7e(uVar3);\n            fcn.0044951c(uVar3);\n            fcn.0044951c(iVar2);\n        }\n        else {\n            arg_18h = arg_10h + -1;\n            iVar2 = fcn.00421c76();\n            if (iVar2 < arg_10h + -1) {\n                arg_18h = fcn.00421c76();\n            }\n            fcn.00416d61();\n            uVar3 = fcn.00418661();\n            fcn.00417113(uVar3);\n            fcn.00418cb1();\n            uVar3 = fcn.00416a25(var_ch);\n            fcn.0044a6b0(arg_ch, uVar3, arg_18h + 1);\n            fcn.0044951c(uVar3);\n            fcn.0044951c(var_ch);\n        }\n    }\n    return 0;\n}\n",
        "token_count": 727
    },
    "0043b62f": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0043b62f(int32_t arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    uint var_4h;\n    \n    uVar1 = fcn.00418641();\n    uVar1 = fcn.00416a25(uVar1);\n    fcn.0040ef59(uVar1);\n    fcn.0044951c(uVar1);\n    fcn.00418bb9(0);\n    return 0;\n}\n",
        "token_count": 108
    },
    "0043b68a": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0043b68a(int32_t arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint var_4h;\n    \n    cVar1 = fcn.00419a96();\n    if (cVar1 == '\\0') {\n        fcn.00418bb9(0);\n    }\n    fcn.00418733();\n    iVar2 = fcn.0040efdc();\n    if (iVar2 != 0) {\n        fcn.00418bb9(0);\n    }\n    return 0;\n}\n",
        "token_count": 132
    },
    "0043b705": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "link function at runtime on Windows"
        ],
        "decompiled_code": "\nvoid fcn.0043b705(void)\n\n{\n    int32_t iVar1;\n    int32_t *unaff_ESI;\n    \n    if (unaff_ESI[2] == 0) {\n        iVar1 = (*_sym.imp.KERNEL32.DLL_LoadLibraryA)(0x461954);\n        *unaff_ESI = iVar1;\n        if (iVar1 != 0) {\n            iVar1 = (*_sym.imp.KERNEL32.DLL_GetProcAddress)(iVar1, 0x46193c);\n            unaff_ESI[2] = iVar1;\n        }\n    }\n    return;\n}\n",
        "token_count": 133
    },
    "0043b8aa": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Removing unreachable block (ram,0x0043bad9)\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.0043b8aa(uint lpsz, uint cchLength, uint noname_2, code **arg_14h)\n\n{\n    bool bVar1;\n    char cVar2;\n    uint *in_EAX;\n    uint32_t uVar3;\n    uint8_t uVar4;\n    uint var_20h;\n    uint var_14h;\n    uint var_8h;\n    uint var_1h;\n    \n    var_8h = 0;\n    (*_sym.imp.USER32.dll_CharUpperBuffW)(lpsz, cchLength);\n    *in_EAX = 0;\n    fcn.00416d81(0x461c6c);\n    fcn.004174a6(&var_20h);\n    var_1h._0_1_ = fcn.00416f96();\n    fcn.0044951c(var_20h);\n    fcn.0044951c(var_14h);\n    if ((var_1h != '\\0') && (fcn.004174f1(0x461c6c),  *0x479bc8 != '\\0')) {\n        *in_EAX = 0x100;\n    }\n    fcn.00416d81(0x461c44);\n    bVar1 = false;\n    cVar2 = fcn.00416f96();\n    if (cVar2 == '\\0') {\n        fcn.00416d81(0x461c38);\n        bVar1 = true;\n        cVar2 = fcn.00416f96();\n        var_1h._0_1_ = '\\0';\n        if (cVar2 != '\\0') goto code_r0x0043b961;\n    }\n    else {\ncode_r0x0043b961:\n        var_1h._0_1_ = '\\x01';\n    }\n    if (bVar1) {\n        fcn.0044951c(var_14h);\n    }\n    fcn.0044951c(var_20h);\n    bVar1 = false;\n    if (var_1h == '\\0') {\n        fcn.00416d81(0x461c14);\n        cVar2 = fcn.00416f96();\n        if (cVar2 == '\\0') {\n            fcn.00416d81(0x461c08);\n            bVar1 = true;\n            cVar2 = fcn.00416f96();\n            var_1h._0_1_ = '\\0';\n            if (cVar2 != '\\0') goto code_r0x0043b9dd;\n        }\n        else {\ncode_r0x0043b9dd:\n            var_1h._0_1_ = '\\x01';\n        }\n        if (bVar1) {\n            fcn.0044951c(var_20h);\n        }\n        fcn.0044951c(var_14h);\n        bVar1 = false;\n        if (var_1h == '\\0') {\n            fcn.00416d81(0x461be0);\n            cVar2 = fcn.00416f96();\n            if (cVar2 == '\\0') {\n                fcn.00416d81(0x461bd4);\n                bVar1 = true;\n                cVar2 = fcn.00416f96();\n                var_1h._0_1_ = '\\0';\n                if (cVar2 != '\\0') goto code_r0x0043ba54;\n            }\n            else {\ncode_r0x0043ba54:\n                var_1h._0_1_ = '\\x01';\n            }\n            if (bVar1) {\n                fcn.0044951c(var_20h);\n            }\n            fcn.0044951c(var_14h);\n            if (var_1h == '\\0') {\n                fcn.00416d81(0x461bb0);\n                cVar2 = fcn.00416f96();\n                if (cVar2 == '\\0') {\n                    fcn.00416d81(0x461ba4);\n                    cVar2 = fcn.00416f96();\n                    var_1h._0_1_ = '\\0';\n                    if (cVar2 != '\\0') goto code_r0x0043bad1;\n                }\n                else {\ncode_r0x0043bad1:\n                    var_1h._0_1_ = '\\x01';\n                }\n                fcn.0044951c(var_14h);\n                if (var_1h == '\\0') {\n                    fcn.00416d81(0x461b8c);\n                    bVar1 = false;\n                    cVar2 = fcn.00416f96();\n                    if (cVar2 == '\\0') {\n                        fcn.00416d81(0x461b84);\n                        bVar1 = true;\n                        cVar2 = fcn.00416f96();\n                        var_1h._0_1_ = '\\0';\n                        if (cVar2 != '\\0') goto code_r0x0043bb54;\n                    }\n                    else {\ncode_r0x0043bb54:\n                        var_1h._0_1_ = '\\x01';\n                    }\n                    if (bVar1) {\n                        fcn.0044951c(var_20h);\n                    }\n                    fcn.0044951c(var_14h);\n                    if (var_1h == '\\0') {\n                        uVar4 = 0;\n                        goto code_r0x0043bb8f;\n                    }\n                    *arg_14h = 0x80000003;\n                }\n                else {\n                    *arg_14h = 0x80000001;\n                }\n            }\n            else {\n                *arg_14h = 0x80000005;\n            }\n        }\n        else {\n            *arg_14h = 0x80000000;\n        }\n    }\n    else {\n        *arg_14h = reloc.OLEAUT32.dll_SysReAllocString;\n    }\n    uVar4 = 1;\ncode_r0x0043bb8f:\n    uVar3 = fcn.0044951c(lpsz);\n    return uVar3 & 0xffffff00 | uVar4;\n}\n",
        "token_count": 1418
    },
    "0043bba1": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: lpMachineName\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: samDesired\n// WARNING: Variable defined which should be unmapped: var_38h\n// WARNING: Variable defined which should be unmapped: lpSubKey\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Removing unreachable block (ram,0x0043bdd6)\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0043bba1(uint hKey, uint arg_ch)\n\n{\n    uint32_t uVar1;\n    code *pcVar2;\n    char cVar3;\n    uint arg_8h;\n    int32_t iVar4;\n    uint32_t uVar5;\n    ushort *puVar6;\n    uint32_t extraout_EDX;\n    uint32_t unaff_EBX;\n    uint unaff_EDI;\n    int16_t aiStackY196686 [65539];\n    uchar auStackY65608 [65488];\n    uint uStackY120;\n    uint uStackY116;\n    uint uStackY112;\n    uint var_44h;\n    uint *puStack68;\n    uint samDesired;\n    ulong uStack68;\n    uint var_38h;\n    uint lpSubKey;\n    uint *arg_14h;\n    uint var_28h;\n    uint in_stack_ffffffd8;\n    uint arg_14h_00;\n    uint *lpMachineName;\n    uint *var_18h;\n    uint *puStack24;\n    uint phkResult;\n    uint var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = 0x43bbae;\n    fcn.0044c510();\n    phkResult = 0x43bbc0;\n    var_ch = unaff_EDI;\n    var_4h = unaff_EBX;\n    fcn.00416d61();\n    phkResult = 0x43bbc8;\n    fcn.00416d61();\n    phkResult = 0x43bbd0;\n    fcn.00416d61();\n    phkResult = 0x45bfe0;\n    puStack24 = 0x43bbdd;\n    fcn.00418c7e();\n    puStack24 = &fcn.0043bba1::lpSubKey;\n    var_18h = &fcn.0043bba1::var_28h;\n    lpMachineName = &fcn.0043bba1::lpMachineName;\n    arg_14h_00 = 0x43bc01;\n    arg_8h = fcn.00418641();\n    fcn.00416d81();\n    fcn.0043b7ba(arg_8h, var_28h, in_stack_ffffffd8, arg_14h_00, lpMachineName, var_18h);\n    arg_14h = &fcn.0043bba1::hKey;\n    puStack68 = 0x43bc22;\n    fcn.00416dcf();\n    puStack68 = 0x43bc2a;\n    cVar3 = fcn.0043b8aa(samDesired, var_38h, lpSubKey, arg_14h);\n    if (cVar3 != '\\0') {\n        if (var_18h != NULL) {\n            puStack68 = &fcn.0043bba1::phkResult;\n            iVar4 = (*_sym.imp.ADVAPI32.dll_RegConnectRegistryW)();\n            if (iVar4 != 0) goto code_r0x0043bc8c;\n        }\n        puStack68 = &fcn.0043bba1::var_ch;\n        iVar4 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExW)();\n        if (iVar4 == 0) {\n            fcn.00418641();\n            pcVar2 = _sym.imp.ADVAPI32.dll_RegQueryValueExW;\n            iVar4 = (*_sym.imp.ADVAPI32.dll_RegQueryValueExW)();\n            if ((iVar4 == 0) && (fcn.004218c6(),  extraout_EDX != 0)) {\n                if (extraout_EDX < 3) {\n                    var_4h = 0x1fffe;\n                    uStackY112 = 0x43be96;\n                    uStackY112 = fcn.00418641();\n                    uStackY116 = var_ch;\n                    uStackY120 = 0x43be9c;\n                    iVar4 = (*pcVar2)();\n                    if (iVar4 == 0) {\n                        *(&stack0xfffcffb4 + (var_4h & 0xfffffffe)) = 0;\n                        var_4h = var_4h >> 1;\ncode_r0x0043beaf:\n                        fcn.00418c7e();\n                        goto code_r0x0043bed0;\n                    }\n                    goto code_r0x0043becb;\n                }\n                if (extraout_EDX == 3) {\n                    var_4h = 0xffff;\n                    uStackY112 = 0x43be20;\n                    uStackY112 = fcn.00418641();\n                    uStackY116 = var_ch;\n                    uStackY120 = 0x43be26;\n                    iVar4 = (*pcVar2)();\n                    if (iVar4 != 0) goto code_r0x0043becb;\n                    puVar6 = fcn.00449614();\n                    *puVar6 = 0;\n                    uStackY112 = 0x43be55;\n                    fcn.004166a9(&stack0xfffeffb8, var_4h, 0);\n                    fcn.00418c7e();\n                    fcn.0044951c();\n                }\n                else {\n                    if (extraout_EDX != 4) {\n                        if (extraout_EDX == 7) {\n                            var_4h = 0x1fffe;\n                            uStackY112 = 0x43bd3a;\n                            uStackY112 = fcn.00418641();\n                            uStackY116 = var_ch;\n                            uStackY120 = 0x43bd40;\n                            iVar4 = (*pcVar2)();\n                            if (iVar4 == 0) {\n                                uVar1 = var_4h >> 1;\n                                uVar5 = var_4h & 0xfffffffe;\n                                *(&stack0xfffcffb4 + uVar5) = 0;\n                                var_4h = uVar1;\n                                if (uVar1 != 0) {\n                                    if (*(&stack0xfffcffb2 + uVar5) == 0) {\n                                        var_4h = uVar1 - 1;\n                                    }\n                                    uVar5 = 0;\n                                    if (var_4h != 0) {\n                                        do {\n                                            if (*(&stack0xfffcffb4 + uVar5 * 2) == 0) {\n                                                *(&stack0xfffcffb4 + uVar5 * 2) = 10;\n                                            }\n                                            uVar5 = uVar5 + 1;\n                                        } while (uVar5 < var_4h);\n                                    }\n                                    if (*(&stack0xfffcffb2 + uVar5 * 2) == 10) {\n                                        *(&stack0xfffcffb2 + uVar5 * 2) = 0;\n                                    }\n                                }\n                                goto code_r0x0043beaf;\n                            }\n                        }\n                        goto code_r0x0043becb;\n                    }\n                    var_4h = 4;\n                    uStackY112 = 0x43bdc6;\n                    uStackY112 = fcn.00418641();\n                    uStackY116 = var_ch;\n                    uStackY120 = 0x43bdcc;\n                    (*pcVar2)();\n                    fcn.00418c65();\n                }\n            }\n            else {\ncode_r0x0043becb:\n                fcn.00421898();\n            }\ncode_r0x0043bed0:\n            pcVar2 = _sym.imp.ADVAPI32.dll_RegCloseKey;\n            (*_sym.imp.ADVAPI32.dll_RegCloseKey)();\n            if (var_18h != NULL) {\n                (*pcVar2)();\n            }\n            goto code_r0x0043bee6;\n        }\n        if (var_18h != NULL) {\n            puStack68 = phkResult;\n            (*_sym.imp.ADVAPI32.dll_RegCloseKey)();\n        }\n    }\ncode_r0x0043bc8c:\n    fcn.00421898();\ncode_r0x0043bee6:\n    fcn.0044951c();\n    fcn.0044951c();\n    fcn.0044951c();\n    return 0;\n}\n",
        "token_count": 1994
    },
    "0043bf0a": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_38h\n// WARNING: Variable defined which should be unmapped: var_34h\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Variable defined which should be unmapped: var_3ch\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_8h\n\nuint __cdecl fcn.0043bf0a(int32_t arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint extraout_ECX;\n    int32_t unaff_EBX;\n    int32_t unaff_ESI;\n    code *pcVar6;\n    int16_t aiStackY196676 [65538];\n    uchar auStackY65600 [65500];\n    uint uStackY100;\n    int32_t iStackY96;\n    uint uStackY92;\n    int32_t iStackY88;\n    int32_t iStackY84;\n    uint *puStackY80;\n    uint *puStackY76;\n    uint *puStackY72;\n    uint *var_3ch;\n    int32_t var_38h;\n    uint32_t var_34h;\n    uint var_30h;\n    uint *var_2ch;\n    uint in_stack_ffffffd8;\n    uint var_20h;\n    uint arg_14h;\n    uint *arg_18h;\n    uint *var_14h;\n    uint *var_10h;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_4h = 0x43bf17;\n    fcn.0044c510();\n    var_10h = 0x43bf29;\n    var_30h = extraout_ECX;\n    var_8h = unaff_ESI;\n    var_4h = unaff_EBX;\n    fcn.00416d61();\n    var_10h = 0x43bf31;\n    fcn.00416d61();\n    var_10h = 0x43bf39;\n    fcn.00416d61();\n    iVar5 = arg_8h;\n    var_38h = *(arg_8h + 0xc);\n    if ((var_38h == 1) || (var_38h == 4)) {\n        var_10h = &fcn.0043bf0a::var_20h;\n        var_14h = &fcn.0043bf0a::var_2ch;\n        arg_18h = &fcn.0043bf0a::var_14h;\n        arg_14h = 0x43bf6f;\n        uVar2 = fcn.00418641();\n        var_2ch = 0x43bf7a;\n        fcn.00416d81();\n        var_2ch = 0x43bf7f;\n        fcn.0043b7ba(uVar2, in_stack_ffffffd8, var_20h, arg_14h, arg_18h, var_14h);\n        var_2ch = &fcn.0043bf0a::arg_8h;\n        var_3ch = 0x43bf90;\n        fcn.00416dcf();\n        var_3ch = 0x43bf98;\n        cVar1 = fcn.0043b8aa(var_38h, var_34h, var_30h, var_2ch);\n        if (cVar1 != '\\0') {\n            iVar4 = arg_8h;\n            if (var_10h != NULL) {\n                var_3ch = &fcn.0043bf0a::var_8h;\n                puStackY72 = var_14h;\n                puStackY76 = 0x43bfc5;\n                iVar3 = (*_sym.imp.ADVAPI32.dll_RegConnectRegistryW)();\n                iVar4 = var_8h;\n                if (iVar3 != 0) {\n                    var_3ch = NULL;\n                    fcn.00421898();\n                    goto code_r0x0043c3cd;\n                }\n            }\n            var_3ch = &fcn.0043bf0a::var_3ch;\n            puStackY72 = NULL;\n            puStackY76 = var_34h | 0x20006;\n            puStackY80 = NULL;\n            iStackY84 = 0x45bfe0;\n            iStackY88 = 0;\n            uStackY92 = var_20h;\n            uStackY100 = 0x43c007;\n            iStackY96 = iVar4;\n            iVar4 = (*_sym.imp.ADVAPI32.dll_RegCreateKeyExW)();\n            if (iVar4 != 0) {\n                var_3ch = NULL;\n                fcn.00421898();\n                puStackY72 = 0x43c020;\n                fcn.00418bb9();\n                if (var_10h == NULL) goto code_r0x0043c3d5;\ncode_r0x0043c3ad:\n                puStackY72 = 0x43c3b3;\n                (*_sym.imp.ADVAPI32.dll_RegCloseKey)();\n                goto code_r0x0043c3d5;\n            }\n            if (var_38h == 1) {\ncode_r0x0043c037:\n                pcVar6 = _sym.imp.ADVAPI32.dll_RegCloseKey;\n                var_3ch = var_4h;\n                (*_sym.imp.ADVAPI32.dll_RegCloseKey)();\n            }\n            else {\n                var_3ch = 0x461b68;\n                uVar2 = fcn.00418641();\n                puStackY72 = 0x43c06d;\n                iVar4 = fcn.00449521(uVar2, var_3ch);\n                if (iVar4 == 0) {\n                    var_3ch = 0x43c08b;\n                    var_3ch = fcn.00418641();\n                    iVar5 = fcn.0044985c();\n                    var_3ch = iVar5 * 2 + 2;\n                    fcn.00418641();\n                    puStackY72 = 0x2;\ncode_r0x0043c246:\n                    puStackY76 = NULL;\n                    puStackY80 = 0x43c24c;\n                    puStackY80 = fcn.00418641();\n                    iStackY84 = var_4h;\n                    iStackY88 = 0x43c256;\n                    iVar5 = (*_sym.imp.ADVAPI32.dll_RegSetValueExW)();\n                    if (iVar5 != 0) {\n                        var_38h = 0;\n                        fcn.00418bb9();\n                    }\n                    goto code_r0x0043c037;\n                }\n                var_3ch = 0x461b58;\n                uVar2 = fcn.00418641();\n                puStackY72 = 0x43c0e3;\n                iVar4 = fcn.00449521(uVar2, var_3ch);\n                if (iVar4 == 0) {\n                    var_3ch = 0x43c101;\n                    var_3ch = fcn.00418641();\n                    iVar5 = fcn.0044985c();\n                    var_3ch = iVar5 * 2 + 2;\n                    fcn.00418641();\n                    puStackY72 = 0x1;\n                    goto code_r0x0043c246;\n                }\n                var_3ch = 0x461b3c;\n                uVar2 = fcn.00418641();\n                puStackY72 = 0x43c15e;\n                iVar4 = fcn.00449521(uVar2, var_3ch);\n                if (iVar4 == 0) {\n                    var_3ch = 0x43c17e;\n                    var_3ch = fcn.00418641();\n                    fcn.0041610a();\n                    puStackY72 = 0x43c197;\n                    iVar5 = fcn.0044985c();\n                    iVar4 = 0;\n                    *(&stack0xfffcffbc + iVar5 * 2) = 0;\n                    *(&stack0xfffcffbe + iVar5 * 2) = 0;\n                    if (0 < iVar5) {\n                        do {\n                            if (*(&stack0xfffcffbc + iVar4 * 2) == 10) {\n                                *(&stack0xfffcffbc + iVar4 * 2) = 0;\n                            }\n                            iVar4 = iVar4 + 1;\n                        } while (iVar4 < iVar5);\n                    }\n                    if (iVar5 != 0) {\n                        iVar5 = iVar5 + 2;\n                    }\n                    var_3ch = iVar5 * 2;\n                    puStackY72 = 0x7;\n                    goto code_r0x0043c246;\n                }\n                var_3ch = 0x461b28;\n                uVar2 = fcn.00418641();\n                puStackY72 = 0x43c20c;\n                iVar4 = fcn.00449521(uVar2, var_3ch);\n                if (iVar4 == 0) {\n                    var_3ch = 0x43c228;\n                    arg_8h = fcn.00418733();\n                    var_3ch = 0x4;\n                    puStackY72 = 0x4;\n                    goto code_r0x0043c246;\n                }\n                var_3ch = 0x461b10;\n                uVar2 = fcn.00418641();\n                puStackY72 = 0x43c28c;\n                iVar4 = fcn.00449521(uVar2, var_3ch);\n                pcVar6 = _sym.imp.ADVAPI32.dll_RegCloseKey;\n                if (iVar4 != 0) {\n                    var_3ch = var_4h;\n                    (*_sym.imp.ADVAPI32.dll_RegCloseKey)();\n                    if (var_10h != NULL) {\n                        puStackY72 = 0x43c3cb;\n                        (*pcVar6)();\n                    }\n                    goto code_r0x0043c3cd;\n                }\n                if (*(iVar5 + 0xc) < 4) {\n                    iVar5 = iVar5 + 0x18;\n                }\n                else {\n                    iVar5 = *(*(iVar5 + 8) + 0xc);\n                }\n                if (*(iVar5 + 8) != 0xb) {\n                    var_3ch = 0x43c302;\n                    iVar5 = fcn.00421c76();\n                    if (iVar5 < 0x1ffff) {\n                        var_3ch = &stack0xfffeffc0;\n                        uVar2 = fcn.00418641();\n                        puStackY72 = 0x43c32f;\n                        cVar1 = fcn.0041672c(uVar2, var_3ch);\n                        if (cVar1 != '\\0') {\n                            var_3ch = 0x43c34a;\n                            iVar5 = fcn.00421c76();\n                            var_3ch = iVar5 / 2;\n                            goto code_r0x0043c367;\n                        }\n                    }\n                    var_3ch = NULL;\n                    fcn.00418bb9();\n                    goto code_r0x0043c3ad;\n                }\n                var_3ch = 0x43c2e4;\n                var_3ch = fcn.00418606();\n                fcn.00418678();\ncode_r0x0043c367:\n                puStackY72 = 0x3;\n                puStackY76 = NULL;\n                puStackY80 = 0x43c370;\n                puStackY80 = fcn.00418641();\n                iStackY84 = var_4h;\n                iStackY88 = 0x43c37a;\n                iVar5 = (*_sym.imp.ADVAPI32.dll_RegSetValueExW)();\n                if (iVar5 != 0) {\n                    iStackY88 = 0;\n                    uStackY92 = 0x43c388;\n                    fcn.00418bb9();\n                }\n                pcVar6 = _sym.imp.ADVAPI32.dll_RegCloseKey;\n                iStackY88 = var_4h;\n                uStackY92 = 0x43c393;\n                (*_sym.imp.ADVAPI32.dll_RegCloseKey)();\n            }\n            if (var_10h != NULL) {\n                puStackY72 = var_8h;\n                puStackY76 = 0x43c39e;\n                (*pcVar6)();\n            }\n            goto code_r0x0043c3d5;\n        }\n        var_3ch = NULL;\n        fcn.00421898();\n    }\ncode_r0x0043c3cd:\n    puStackY72 = 0x43c3d5;\n    fcn.00418bb9();\ncode_r0x0043c3d5:\n    puStackY72 = var_20h;\n    puStackY76 = 0x43c3dd;\n    fcn.0044951c();\n    puStackY76 = var_2ch;\n    puStackY80 = 0x43c3e5;\n    fcn.0044951c();\n    puStackY80 = var_14h;\n    iStackY84 = 0x43c3ed;\n    fcn.0044951c();\n    return 0;\n}\n",
        "token_count": 3061
    },
    "0043c4bd": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0043c4bd(int32_t arg_8h, uint arg_ch)\n\n{\n    code *pcVar1;\n    char cVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint in_stack_ffffff80;\n    uint in_stack_ffffff84;\n    uint in_stack_ffffff88;\n    uint *puVar5;\n    uint in_stack_ffffff94;\n    uint in_stack_ffffff98;\n    uint arg_14h;\n    uint *arg_18h;\n    uint var_44h;\n    uint var_38h;\n    uint var_2ch;\n    uint var_20h;\n    int32_t var_1ch;\n    int32_t var_14h;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    var_8h = 0;\n    var_14h = *(arg_8h + 0xc);\n    fcn.00416d61();\n    fcn.00416d61();\n    fcn.00416d61();\n    fcn.00416d61();\n    puVar5 = &fcn.0043c4bd::var_38h;\n    arg_18h = &fcn.0043c4bd::var_20h;\n    arg_14h = 0x43c517;\n    uVar3 = fcn.00418641(arg_18h, puVar5, &fcn.0043c4bd::var_2ch);\n    fcn.00416d81();\n    fcn.0043b7ba(uVar3, in_stack_ffffff94, in_stack_ffffff98, arg_14h, arg_18h, puVar5);\n    puVar5 = &fcn.0043c4bd::var_ch;\n    fcn.00416dcf();\n    cVar2 = fcn.0043b8aa(in_stack_ffffff80, in_stack_ffffff84, in_stack_ffffff88, puVar5);\n    if (cVar2 == '\\0') {\n        fcn.00421898(0);\n    }\n    else {\n        if ((var_1ch == 0) ||\n           (iVar4 = (*_sym.imp.ADVAPI32.dll_RegConnectRegistryW)(var_20h, var_ch, &fcn.0043c4bd::var_8h), \n           var_ch = var_8h,  iVar4 == 0)) {\n            var_10h = var_10h | 0x2001f;\n            iVar4 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExW)(var_ch, var_2ch, 0, var_10h, &fcn.0043c4bd::arg_8h);\n            pcVar1 = _sym.imp.ADVAPI32.dll_RegCloseKey;\n            if (iVar4 == 0) {\n                if (var_14h == 1) {\n                    cVar2 = fcn.0043c3f9(arg_8h);\n                    (*pcVar1)(arg_8h);\n                    if ((cVar2 == '\\0') ||\n                       (iVar4 = (*_sym.imp.ADVAPI32.dll_RegDeleteKeyW)(var_ch, var_2ch),  iVar4 != 0)) {\n                        fcn.00421898(0);\n                        var_ch = 2;\n                        fcn.00418bb9(2);\n                    }\n                }\n                else {\n                    var_ch = var_10h;\n                    if (var_14h == 2) {\n                        uVar3 = fcn.00418641();\n                        iVar4 = (*_sym.imp.ADVAPI32.dll_RegDeleteValueW)(arg_8h, uVar3);\n                        if (iVar4 != 0) {\n                            if (iVar4 != 2) {\n                                fcn.00421898(0);\n                            }\n                            fcn.00418bb9();\n                        }\n                        (*pcVar1)(arg_8h);\n                        var_ch = var_10h;\n                    }\n                }\n                if (var_1ch != 0) {\n                    (*pcVar1)(var_8h);\n                }\n            }\n            else {\n                fcn.00421898(0);\n                var_ch = 0;\n                fcn.00418bb9();\n                if (var_1ch != 0) {\n                    (*_sym.imp.ADVAPI32.dll_RegCloseKey)(var_8h);\n                }\n            }\n            goto code_r0x0043c678;\n        }\n        fcn.00421898(0);\n    }\n    var_ch = 0;\n    fcn.00418bb9(0);\ncode_r0x0043c678:\n    fcn.0044951c(var_44h, var_ch);\n    fcn.0044951c(var_2ch);\n    fcn.0044951c(var_38h);\n    fcn.0044951c(var_20h);\n    return 0;\n}\n",
        "token_count": 1093
    },
    "0043c6a4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0043c6a4(uint arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint in_stack_fffffd7c;\n    uint in_stack_fffffd80;\n    uint in_stack_fffffd84;\n    uint *puVar4;\n    uint in_stack_fffffd90;\n    uint in_stack_fffffd94;\n    uint arg_14h;\n    uint *arg_18h;\n    uint var_244h;\n    uint var_40h;\n    uint32_t var_38h;\n    uint var_34h;\n    uint var_28h;\n    uint var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_8h = 0;\n    var_1ch = 0xff;\n    fcn.00416d61();\n    fcn.00416d61();\n    fcn.00416d61();\n    fcn.00418c7e(0x45bfe0);\n    puVar4 = &fcn.0043c6a4::var_34h;\n    arg_18h = &fcn.0043c6a4::var_18h;\n    arg_14h = 0x43c707;\n    uVar2 = fcn.00418641(arg_18h, puVar4, &fcn.0043c6a4::var_28h);\n    fcn.00416d81();\n    fcn.0043b7ba(uVar2, in_stack_fffffd90, in_stack_fffffd94, arg_14h, arg_18h, puVar4);\n    puVar4 = &fcn.0043c6a4::arg_8h;\n    fcn.00416dcf();\n    cVar1 = fcn.0043b8aa(in_stack_fffffd7c, in_stack_fffffd80, in_stack_fffffd84, puVar4);\n    if (cVar1 != '\\0') {\n        uVar2 = arg_8h;\n        if ((var_14h == 0) ||\n           (iVar3 = (*_sym.imp.ADVAPI32.dll_RegConnectRegistryW)(var_18h, arg_8h, &fcn.0043c6a4::var_8h), \n           uVar2 = var_8h,  iVar3 == 0)) {\n            iVar3 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExW)(uVar2, var_28h, 0, var_38h | 0x20019, &fcn.0043c6a4::var_ch);\n            if (iVar3 == 0) {\n                iVar3 = fcn.00418733(&fcn.0043c6a4::var_244h, &fcn.0043c6a4::var_1ch, 0, 0, 0, &fcn.0043c6a4::var_40h);\n                iVar3 = (*_sym.imp.ADVAPI32.dll_RegEnumKeyExW)(var_ch, iVar3 + -1);\n                if (iVar3 == 0) {\n                    fcn.00418c7e(&fcn.0043c6a4::var_244h);\n                }\n                else {\n                    uVar2 = fcn.00420169(iVar3);\n                    fcn.00418c7e(uVar2);\n                    fcn.00421898(0);\n                }\n                (*_sym.imp.ADVAPI32.dll_RegCloseKey)(var_ch);\n            }\n            else {\n                uVar2 = fcn.00420169(iVar3);\n                fcn.00418c7e(uVar2);\n                fcn.00421898(0);\n            }\n            if (var_14h != 0) {\n                (*_sym.imp.ADVAPI32.dll_RegCloseKey)(var_8h);\n            }\n            goto code_r0x0043c831;\n        }\n        uVar2 = fcn.00420169(iVar3);\n        fcn.00418c7e(uVar2);\n    }\n    fcn.00421898(0);\ncode_r0x0043c831:\n    fcn.0044951c(var_28h);\n    fcn.0044951c(var_34h);\n    fcn.0044951c(var_18h);\n    return 0;\n}\n",
        "token_count": 995
    },
    "0043cf4f": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0043cf4f(int32_t arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint var_ch;\n    \n    fcn.00416d61();\n    fcn.00421c76();\n    iVar1 = fcn.00418733();\n    if (-1 < iVar1) {\n        uVar2 = fcn.00418661();\n        fcn.00417113(uVar2);\n    }\n    fcn.00418cb1();\n    fcn.0044951c(var_ch);\n    return 0;\n}\n",
        "token_count": 133
    },
    "0043cfdb": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0043cfdb(int32_t arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint var_ch;\n    \n    fcn.00421c76();\n    fcn.00416d61();\n    iVar1 = fcn.00418733();\n    if (-1 < iVar1) {\n        uVar2 = fcn.00418661();\n        fcn.00417113(uVar2);\n    }\n    fcn.00418cb1();\n    fcn.0044951c(var_ch);\n    return 0;\n}\n",
        "token_count": 132
    },
    "0043d06d": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0043d06d(int32_t arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    uint var_ch;\n    \n    fcn.00421c76();\n    fcn.00418733();\n    if (2 < *(arg_8h + 0xc)) {\n        fcn.00418733();\n    }\n    fcn.00416d61();\n    uVar1 = fcn.00418661();\n    fcn.00417113(uVar1);\n    fcn.00418cb1();\n    fcn.0044951c(var_ch);\n    return 0;\n}\n",
        "token_count": 138
    },
    "0043d127": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0043d127(int32_t arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint arg_8h_00;\n    uint var_4h;\n    \n    iVar1 = arg_8h;\n    iVar2 = fcn.00418678();\n    iVar3 = fcn.00418606();\n    arg_8h = -1;\n    iVar4 = fcn.00418733();\n    iVar4 = iVar4 + -1;\n    if (2 < *(iVar1 + 0xc)) {\n        arg_8h = fcn.00418733();\n    }\n    if ((iVar3 < iVar4) || (iVar4 < 0)) {\n        iVar4 = iVar3;\n    }\n    if ((arg_8h < 0) || (iVar3 - iVar4 < arg_8h)) {\n        arg_8h = iVar3 - iVar4;\n    }\n    arg_8h_00 = fcn.00418bd2();\n    fcn.0044a6b0(arg_8h_00, iVar4 + iVar2, arg_8h);\n    return 0;\n}\n",
        "token_count": 275
    },
    "0043d36f": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0043d36f(int32_t arg_8h, uint arg_ch)\n\n{\n    int32_t arg_10h;\n    code *pcVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t iVar5;\n    uint uVar6;\n    uint uVar7;\n    uchar *puVar8;\n    int32_t iVar9;\n    uint var_4h;\n    \n    puVar2 = fcn.00418661();\n    arg_10h = puVar2[1];\n    if (arg_10h == 0) {\n        fcn.00418bd2();\n    }\n    else if (((*(arg_8h + 0xc) < 2) || (iVar3 = fcn.00418733(),  pcVar1 = *0x459198,  iVar3 < 2)) || (4 < iVar3)) {\n        uVar4 = fcn.00418bd2();\n        uVar6 = fcn.00416a25(*puVar2);\n        fcn.0044a6b0(uVar4, uVar6, arg_10h);\n        fcn.0044951c(uVar6);\n    }\n    else if (iVar3 == 2) {\n        uVar4 = fcn.00418bd2();\n        fcn.0044a6b0(uVar4, *puVar2, arg_10h * 2);\n    }\n    else if (iVar3 == 3) {\n        iVar3 = fcn.00418bd2();\n        puVar8 = *puVar2;\n        iVar9 = 0;\n        if (0 < arg_10h * 2) {\n            iVar5 = iVar3 - puVar8;\n            do {\n                puVar8[iVar5] = puVar8[1];\n                *(iVar3 + 1 + iVar9) = *puVar8;\n                iVar9 = iVar9 + 2;\n                puVar8 = puVar8 + 2;\n            } while (iVar9 < arg_10h * 2);\n        }\n    }\n    else if (iVar3 == 4) {\n        uVar4 = *puVar2;\n        uVar6 = (**0x459198)(0xfde9, 0, uVar4, arg_10h, 0, 0, 0, 0);\n        uVar7 = fcn.00418bd2();\n        (*pcVar1)(0xfde9, 0, uVar4, arg_10h, uVar7, uVar6, 0, 0);\n    }\n    return 0;\n}\n",
        "token_count": 584
    },
    "0043d4a9": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0043d4a9(int32_t arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    uint var_ch;\n    \n    fcn.00421c76();\n    fcn.00418733();\n    fcn.00416db5();\n    uVar1 = fcn.00418661();\n    fcn.00417113(uVar1);\n    fcn.00418cb1();\n    fcn.0044951c(var_ch);\n    return 0;\n}\n",
        "token_count": 113
    },
    "0043d53d": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0043d53d(int32_t arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    uint var_ch;\n    \n    fcn.00421c76();\n    fcn.00418733();\n    fcn.00416db5();\n    uVar1 = fcn.00418661();\n    fcn.00417113(uVar1);\n    fcn.00418cb1();\n    fcn.0044951c(var_ch);\n    return 0;\n}\n",
        "token_count": 112
    },
    "0043d739": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0043d739(int32_t arg_8h, uint arg_ch)\n\n{\n    uint var_ch;\n    uint var_8h;\n    \n    fcn.00418661();\n    fcn.00416dcf();\n    (**0x45942c)(var_ch, var_8h);\n    fcn.00418cb1();\n    fcn.0044951c(var_ch);\n    return 0;\n}\n",
        "token_count": 96
    },
    "0043d78d": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0043d78d(int32_t arg_8h, uint arg_ch)\n\n{\n    uint var_ch;\n    uint var_8h;\n    \n    fcn.00418661();\n    fcn.00416dcf();\n    (*_sym.imp.USER32.dll_CharUpperBuffW)(var_ch, var_8h);\n    fcn.00418cb1();\n    fcn.0044951c(var_ch);\n    return 0;\n}\n",
        "token_count": 102
    },
    "0043d887": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_24h\n\nuint __cdecl fcn.0043d887(uint32_t arg_8h, uint arg_ch)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    int32_t arg_8h_00;\n    uint arg_8h_01;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint var_30h;\n    uint var_24h;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    fcn.00416d61();\n    iVar2 = fcn.00418661();\n    fcn.00416db5();\n    arg_8h_00 = fcn.00418661();\n    if (*(arg_8h + 0xc) < 2) {\n        iVar3 = arg_8h + 0x18;\n    }\n    else {\n        iVar3 = *(*(arg_8h + 8) + 4);\n    }\n    if (*(iVar3 + 8) == 1) {\ncode_r0x0043da2e:\n        iVar3 = fcn.00418733();\n        if ((iVar3 + -1 < 0) || (uVar5 = *(arg_8h_00 + 4) + iVar3 + -1,  *(iVar2 + 4) <= uVar5 && uVar5 != *(iVar2 + 4))\n           ) {\ncode_r0x0043da8d:\n            fcn.00418c7e(0x45bfe0);\n            fcn.00421898(0);\n            goto code_r0x0043daa7;\n        }\n        fcn.00417113(iVar2);\n        fcn.00416ebe(arg_8h_00);\n        fcn.00417113(iVar2);\n        fcn.00416ebe(&fcn.0043d887::var_30h);\n    }\n    else {\n        if (*(arg_8h + 0xc) < 2) {\n            iVar3 = arg_8h + 0x18;\n        }\n        else {\n            iVar3 = *(*(arg_8h + 8) + 4);\n        }\n        if (*(iVar3 + 8) == 2) goto code_r0x0043da2e;\n        arg_8h_01 = fcn.00418641();\n        iVar3 = fcn.00421c76();\n        if (iVar3 == 0) goto code_r0x0043da8d;\n        var_8h = 0;\n        if (3 < *(arg_8h + 0xc)) {\n            var_8h = fcn.00418733();\n        }\n        puVar1 = arg_8h + 0xc;\n        arg_8h = 0;\n        if ((4 < *puVar1) && (iVar4 = fcn.00418733(),  iVar4 != 0)) {\n            arg_8h = 0x1000000;\n        }\n        var_4h = 0;\n        do {\n            var_24h = 1;\n            var_30h = 0x43d9b7;\n            iVar4 = fcn.004172f4(arg_8h_01, arg_8h >> 0x18, 1, iVar3);\n            if (iVar4 == *(iVar2 + 4)) break;\n            fcn.00417113();\n            fcn.00416ebe(&fcn.0043d887::var_30h);\n            fcn.00416ebe(arg_8h_00);\n            var_4h = var_4h + 1;\n        } while ((var_8h == 0) || (var_4h != var_8h));\n        fcn.00417113(iVar2);\n        fcn.00416ebe(&fcn.0043d887::var_30h);\n        fcn.004218c6(0);\n    }\n    fcn.00418cb1();\ncode_r0x0043daa7:\n    fcn.0044951c(var_24h);\n    fcn.0044951c(var_30h);\n    return 0;\n}\n",
        "token_count": 967
    },
    "0043dac2": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0043dac2(int32_t arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint16_t *puVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint uVar6;\n    uint *puVar7;\n    uint var_30h;\n    int32_t var_24h;\n    uint *var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint16_t *var_10h;\n    int32_t var_ch;\n    uint *var_8h;\n    int32_t var_4h;\n    \n    var_8h = fcn.00418641();\n    iVar1 = fcn.00421c76();\n    var_4h = iVar1;\n    var_10h = fcn.00418641();\n    var_ch = fcn.00421c76();\n    fcn.00416db5();\n    if (*(arg_8h + 0xc) < 3) {\n        var_18h = 0;\n    }\n    else {\n        var_18h = fcn.00418733();\n    }\n    iVar5 = 0;\n    if (var_ch == 0) {\n        iVar1 = 0;\n        fcn.0041a000(1);\n        puVar7 = NULL;\n        fcn.0041a132(1);\n        fcn.00418bb9(var_4h);\n        if (0 < var_4h) {\n            do {\n                puVar7 = var_8h;\n                fcn.00417171(var_8h, iVar1);\n                iVar1 = iVar1 + 1;\n                fcn.0041a132(1);\n                fcn.00418cb1();\n            } while (iVar1 < var_4h);\n        }\n        goto code_r0x0043de85;\n    }\n    if (var_18h == 0) {\n        arg_8h = 0;\n        if (0 < iVar1) {\n            do {\n                iVar2 = fcn.0043ecbb(*(var_8h + iVar5 * 2), var_ch);\n                if (iVar2 != 0) {\n                    arg_8h = arg_8h + 1;\n                }\n                iVar5 = iVar5 + 1;\n            } while (iVar5 < iVar1);\n            goto code_r0x0043dca6;\n        }\n    }\n    else if (var_18h == 1) {\n        arg_8h = 0;\n        while (0 < iVar1) {\n            iVar5 = fcn.0043ecbb(*var_10h, iVar1);\n            if ((iVar5 == 0) || (iVar1 = iVar1 - ((iVar5 - var_8h >> 1) + var_ch),  iVar1 < 0)) {\n                var_4h = 0;\n                iVar1 = var_4h;\n            }\n            else {\n                iVar2 = fcn.004498e1(iVar5, var_10h, var_ch);\n                if (iVar2 == 0) {\n                    arg_8h = arg_8h + 1;\n                    var_8h = iVar5 + var_ch * 2;\n                }\n                else {\n                    var_8h = iVar5 + 2;\n                    var_4h = iVar1 + -1 + var_ch;\n                    iVar1 = var_4h;\n                }\n            }\n        }\n        var_8h = fcn.00418641();\n        var_4h = fcn.00421c76();\ncode_r0x0043dca6:\n        if (0 < arg_8h) {\n            iVar5 = arg_8h + 1;\n            var_24h = iVar5;\n            fcn.0041a000(1);\n            fcn.0041a132(1);\n            fcn.00418bb9(iVar5);\n            puVar7 = &var_30h;\n            arg_8h = 0;\n            var_1ch = 0;\n            var_14h = 1;\n            fcn.00416e83(puVar7, 0x45bfe0);\n            iVar1 = 0;\n            if (0 < iVar5) {\n                do {\n                    if (var_18h == 0) {\n                        puVar7 = *(var_8h + iVar1 * 2);\n                        iVar5 = var_ch;\n                        iVar2 = fcn.0043ecbb(puVar7, var_ch);\n                        if ((iVar2 == 0) && (iVar1 != var_4h)) {\n                            fcn.00416f01(iVar5, puVar7);\n                        }\n                        else {\n                            uVar6 = 1;\n                            fcn.0041a132(1);\n                            var_14h = var_14h + 1;\n                            fcn.00418cb1();\n                            puVar7 = &var_30h;\n                            fcn.00416e83(uVar6, 0x45bfe0, puVar7);\n                            arg_8h = arg_8h + 1;\n                        }\n                        var_1ch = var_1ch + 1;\n                    }\n                    else if (var_18h == 1) {\n                        var_20h = var_8h;\n                        while( true ) {\n                            iVar2 = var_4h;\n                            puVar7 = var_8h;\n                            puVar3 = *var_10h;\n                            iVar1 = fcn.0043ecbb(puVar3, var_4h);\n                            iVar5 = var_ch;\n                            if (iVar1 == 0) break;\n                            iVar2 = iVar2 - ((iVar1 - puVar7 >> 1) + var_ch);\n                            var_4h = iVar2;\n                            if (iVar2 < 0) {\n                                iVar1 = iVar1 + (var_ch + iVar2) * 2;\n                                goto code_r0x0043dde0;\n                            }\n                            puVar3 = var_10h;\n                            iVar4 = fcn.004498e1(iVar1, var_10h, var_ch);\n                            if (iVar4 == 0) goto code_r0x0043dde0;\n                            var_8h = iVar1 + 2;\n                            var_4h = iVar2 + -1 + iVar5;\n                        }\n                        iVar1 = puVar7 + iVar2 * 2;\ncode_r0x0043dde0:\n                        puVar7 = var_20h;\n                        fcn.00417171(puVar3, 0, var_20h);\n                        fcn.0041a132(1);\n                        var_14h = var_14h + 1;\n                        fcn.00418cb1();\n                        arg_8h = arg_8h + 1;\n                        var_8h = iVar1 + var_ch * 2;\n                    }\n                    iVar1 = var_1ch;\n                } while (arg_8h < var_24h);\n            }\n            goto code_r0x0043de85;\n        }\n    }\n    fcn.0041a000(1);\n    fcn.0041a132(1);\n    fcn.00418bb9(1);\n    fcn.0041a132(1);\n    fcn.00421c76();\n    puVar7 = var_8h;\n    fcn.00417171(var_8h, 0);\n    fcn.00418cb1();\n    fcn.00421898(0);\ncode_r0x0043de85:\n    fcn.0044951c(var_30h, puVar7);\n    return 0;\n}\n",
        "token_count": 1706
    },
    "0043de97": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0043de97(int32_t arg_8h, uint arg_ch)\n\n{\n    bool bVar1;\n    uint32_t uVar2;\n    ushort *puVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint var_18h;\n    uint var_ch;\n    uint32_t var_8h;\n    \n    uVar2 = fcn.00418733();\n    fcn.00418661();\n    fcn.00416dcf();\n    uVar6 = var_8h;\n    fcn.00416db5();\n    if (uVar2 == 8) {\n        uVar2 = 0;\n        if (uVar6 != 0) {\n            do {\n                puVar3 = fcn.00416e60();\n                iVar4 = fcn.0040f809(*puVar3);\n                if (iVar4 == 0) {\n                    fcn.00416e60();\n                    fcn.00416f01();\n                }\n                uVar2 = uVar2 + 1;\n            } while (uVar2 < uVar6);\n        }\n    }\n    else {\n        if (((uVar2 & 1) != 0) && (uVar6 != 0)) {\n            uVar5 = 0;\n            if (uVar6 != 0) {\n                do {\n                    puVar3 = fcn.00416e60();\n                    iVar4 = fcn.0040f809(*puVar3);\n                    if (iVar4 == 0) break;\n                    uVar5 = uVar5 + 1;\n                } while (uVar5 < uVar6);\n            }\n            fcn.00417113(&var_ch);\n            fcn.004170ba();\n            uVar6 = var_8h;\n        }\n        if (((uVar2 & 2) != 0) && (uVar6 != 0)) {\n            do {\n                uVar6 = uVar6 - 1;\n                if (uVar6 == 0xffffffff) break;\n                puVar3 = fcn.00416e60();\n                iVar4 = fcn.0040f809(*puVar3);\n            } while (iVar4 != 0);\n            fcn.00417113(&var_ch);\n            fcn.004170ba();\n            uVar6 = var_8h;\n        }\n        if (((uVar2 & 4) != 0) && (uVar6 != 0)) {\n            fcn.004171ba();\n            uVar2 = 0;\n            bVar1 = false;\n            if (uVar6 != 0) {\n                do {\n                    puVar3 = fcn.00416e60();\n                    iVar4 = fcn.0040f809(*puVar3);\n                    if (iVar4 == 0) {\n                        bVar1 = false;\ncode_r0x0043e011:\n                        fcn.00416e60();\n                        fcn.00416f01();\n                    }\n                    else if (!bVar1) {\n                        bVar1 = true;\n                        goto code_r0x0043e011;\n                    }\n                    uVar2 = uVar2 + 1;\n                } while (uVar2 < uVar6);\n            }\n            fcn.004170ba();\n        }\n    }\n    fcn.00418cb1();\n    fcn.0044951c(var_18h);\n    fcn.0044951c(var_ch);\n    return 0;\n}\n",
        "token_count": 768
    },
    "0043e05d": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0043e05d(int32_t arg_8h, uint arg_ch)\n\n{\n    uchar uVar1;\n    uint var_4h;\n    \n    uVar1 = fcn.0043e090();\n    fcn.00418bb9(uVar1);\n    return 0;\n}\n",
        "token_count": 70
    },
    "0043e090": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.0043e090(void)\n\n{\n    uint16_t *puVar1;\n    uint16_t *puVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    \n    puVar1 = fcn.00418641();\n    iVar4 = 1;\n    puVar2 = puVar1;\n    if ((((puVar1 == NULL) || (*puVar1 == 0)) || (puVar2 = fcn.00449703(puVar1, 0x45d104),  puVar2 == NULL)) ||\n       ((puVar2 = fcn.00449703(puVar1, 0x461ca0),  puVar2 == NULL ||\n        (puVar2 = fcn.00449703(puVar1, 0x461c98),  puVar2 == NULL)))) {\ncode_r0x0043e0db:\n        uVar3 = puVar2 & 0xffffff00;\n    }\n    else {\ncode_r0x0043e141:\n        if (*puVar1 != 0) {\n            if (iVar4 == 1) {\n                puVar2 = *puVar1;\n                if ((puVar2 == 0x2b) || (puVar2 == 0x2d)) {\n                    puVar1 = puVar1 + 1;\n                }\n                else {\n                    if (puVar2 == 0x2e) {\ncode_r0x0043e11a:\n                        iVar4 = 3;\n                        goto code_r0x0043e141;\n                    }\n                    if ((puVar2 < 0x30) || (0x39 < puVar2)) goto code_r0x0043e0db;\n                }\n                iVar4 = 2;\n                goto code_r0x0043e141;\n            }\n            if (iVar4 == 2) {\n                puVar2 = fcn.0044a199(*puVar1);\n                if (puVar2 == NULL) {\n                    if (*puVar1 == 0x2e) goto code_r0x0043e11a;\n                    goto code_r0x0043e0db;\n                }\ncode_r0x0043e0fc:\n                puVar1 = puVar1 + 1;\n            }\n            else if (iVar4 == 3) {\n                puVar1 = puVar1 + 1;\n                iVar4 = 4;\n            }\n            else if (iVar4 == 4) {\n                puVar2 = fcn.0044a199(*puVar1);\n                if (puVar2 != NULL) goto code_r0x0043e0fc;\n                goto code_r0x0043e0db;\n            }\n            goto code_r0x0043e141;\n        }\n        uVar3 = iVar4 == 4;\n    }\n    return uVar3;\n}\n",
        "token_count": 626
    },
    "0043e151": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0043e151(int32_t arg_8h, uint arg_ch)\n\n{\n    uchar uVar1;\n    uint var_4h;\n    \n    uVar1 = fcn.0043e184();\n    fcn.00418bb9(uVar1);\n    return 0;\n}\n",
        "token_count": 69
    },
    "0043e184": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0043e184(void)\n\n{\n    uint16_t uVar1;\n    uint16_t *puVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t iVar5;\n    \n    puVar2 = fcn.00418641();\n    iVar5 = 1;\n    if ((((puVar2 == NULL) || (*puVar2 == 0)) || (iVar3 = fcn.00449703(puVar2, 0x461c94),  iVar3 == 0)) ||\n       (iVar3 = fcn.00449703(puVar2, 0x461c90),  iVar3 == 0)) {\ncode_r0x0043e1be:\n        uVar4 = 0;\n    }\n    else {\n        while (*puVar2 != 0) {\n            if (iVar5 == 1) {\n                uVar1 = *puVar2;\n                if ((uVar1 == 0x2b) || (uVar1 == 0x2d)) {\n                    puVar2 = puVar2 + 1;\n                }\n                else if ((uVar1 < 0x30) || (0x39 < uVar1)) goto code_r0x0043e1be;\n                iVar5 = 2;\n            }\n            else if (iVar5 == 2) {\n                iVar3 = fcn.0044a199(*puVar2);\n                if (iVar3 == 0) goto code_r0x0043e1be;\n                puVar2 = puVar2 + 1;\n            }\n        }\n        uVar4 = 1;\n    }\n    return uVar4;\n}\n",
        "token_count": 366
    },
    "0043ecbb": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0043ecbb(int16_t param_1, int32_t param_2)\n\n{\n    int16_t *in_EAX;\n    \n    if (param_2 != 0) {\n        do {\n            if (*in_EAX == param_1) {\n                return;\n            }\n            in_EAX = in_EAX + 1;\n            param_2 = param_2 + -1;\n        } while (param_2 != 0);\n    }\n    return;\n}\n",
        "token_count": 106
    },
    "0043ee93": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0043ee93(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint *arg_8h_00;\n    \n    fcn.00418bb9(0);\n    arg_8h_00 = &arg_8h;\n    fcn.00418733();\n    iVar1 = fcn.0041390f(arg_8h_00);\n    if (iVar1 != 0) {\n        fcn.00418c4c(arg_8h);\n    }\n    return 0;\n}\n",
        "token_count": 123
    },
    "0043eedf": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0043eedf(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint *arg_8h_00;\n    uint var_4h;\n    \n    arg_8h_00 = &var_4h;\n    fcn.00418733();\n    iVar1 = fcn.00413831(arg_8h_00);\n    if (iVar1 != 0) {\n        fcn.00418bb9(arg_8h);\n        fcn.0044951c(var_4h);\n    }\n    return 0;\n}\n",
        "token_count": 130
    },
    "0043ef2e": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0043ef2e(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint *arg_8h_00;\n    uint var_4h;\n    \n    arg_8h_00 = &arg_8h;\n    fcn.00418733();\n    iVar1 = fcn.00413831(arg_8h_00);\n    if (iVar1 == 0) {\n        fcn.00421898(0);\n        fcn.00418c7e(0x45bfe0);\n    }\n    else {\n        fcn.00418c7e(arg_8h);\n        fcn.0044951c(arg_8h);\n    }\n    return 0;\n}\n",
        "token_count": 164
    },
    "0043f453": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0043f453(void)\n\n{\n    int32_t iVar1;\n    int32_t unaff_ESI;\n    \n    if (*(unaff_ESI + 0xc) == 0) {\n        iVar1 = unaff_ESI + 0x18;\n    }\n    else {\n        iVar1 = **(unaff_ESI + 8);\n    }\n    fcn.00418a19(iVar1);\n    if (*(unaff_ESI + 0xc) < 2) {\n        fcn.00418c7e(0x45bfe0);\n    }\n    else {\n        if (*(unaff_ESI + 0xc) < 2) {\n            iVar1 = unaff_ESI + 0x18;\n        }\n        else {\n            iVar1 = *(*(unaff_ESI + 8) + 4);\n        }\n        fcn.00418a19(iVar1);\n    }\n    return;\n}\n",
        "token_count": 206
    },
    "0043fb64": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.0043fb64(int32_t param_1)\n\n{\n    char cVar1;\n    uint8_t uVar2;\n    int32_t in_EAX;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint var_20h;\n    int32_t var_18h;\n    uint var_10h;\n    uint var_4h;\n    \n    if (*(in_EAX + 0xc) == 0) {\n        iVar4 = in_EAX + 0x18;\n    }\n    else {\n        iVar4 = **(in_EAX + 8);\n    }\n    fcn.00418a19(iVar4);\n    if (*(in_EAX + 0xc) < 2) {\n        iVar4 = in_EAX + 0x18;\n    }\n    else {\n        iVar4 = *(*(in_EAX + 8) + 4);\n    }\n    fcn.00418a19(iVar4);\n    uVar3 = fcn.0043f4ea(1);\n    if (uVar3 < 1) {\n        return uVar3 & 0xffffff00;\n    }\n    var_4h = **(param_1 + 0x718);\n    if (*(in_EAX + 0xc) < 3) {\n        iVar4 = in_EAX + 0x18;\n    }\n    else {\n        iVar4 = *(*(in_EAX + 8) + 8);\n    }\n    fcn.0041835f(iVar4);\n    if (var_18h == 7) {\n        uVar5 = fcn.00418850();\n        fcn.00402a4f(uVar5);\n    }\n    else {\n        cVar1 = fcn.00419a44();\n        if (cVar1 != '\\0') {\n            cVar1 = fcn.00419a96();\n            if (cVar1 == '\\0') {\n                uVar5 = fcn.00418661();\n                uVar2 = fcn.00402c2f(var_4h, uVar5);\n            }\n            else {\n                fcn.00418733();\n                uVar2 = fcn.00402e22(var_4h);\n            }\n            goto code_r0x0043fc77;\n        }\n        fcn.00416d61();\n        uVar5 = var_4h;\n        cVar1 = fcn.00402fd0(&var_10h);\n        if (cVar1 == '\\0') {\n            fcn.00402a4f(uVar5);\n        }\n        fcn.0044951c(var_10h);\n    }\n    uVar2 = 1;\ncode_r0x0043fc77:\n    uVar3 = fcn.0041858e();\n    return uVar3 & 0xffffff00 | uVar2;\n}\n",
        "token_count": 636
    },
    "0044025b": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_1ch\n\nuint __cdecl fcn.0044025b(uint32_t arg_8h, uint arg_ch)\n\n{\n    uint32_t uVar1;\n    char cVar2;\n    uint8_t uVar3;\n    uint uVar4;\n    uint wParam;\n    uint *puVar5;\n    uint var_38h;\n    uint uStack56;\n    uint var_30h;\n    uint *var_2ch;\n    uint var_28h;\n    uint var_1ch;\n    uint uStack28;\n    uint uStack24;\n    uint var_10h;\n    uint var_ch;\n    uint uStack12;\n    int32_t var_4h;\n    \n    var_38h = 0;\n    var_30h = 1;\n    var_2ch = NULL;\n    fcn.00416d61();\n    fcn.00418bb9(0);\n    uVar1 = arg_8h;\n    cVar2 = fcn.0043fb64();\n    if (cVar2 == '\\0') {\n        fcn.00421898(0);\n        fcn.0044951c(var_1ch);\n        goto code_r0x004405c1;\n    }\n    puVar5 = 0x45bfe0;\n    fcn.00418c7e(0x45bfe0);\n    while (*(uVar1 + 0xc) < 5) {\n        puVar5 = &fcn.0044025b::var_38h;\n        fcn.00417dfb();\n    }\n    fcn.00418661(puVar5);\n    fcn.00416dcf();\n    (*_sym.imp.USER32.dll_CharUpperBuffW)(var_10h, var_ch);\n    fcn.00416d81();\n    uVar3 = fcn.00416f96();\n    arg_8h = arg_8h & 0xffffff | uVar3 << 0x18;\n    var_4h = 0x44031e;\n    fcn.0044951c();\n    if (arg_8h._3_1_ == '\\0') {\n        var_4h = 0x440352;\n        fcn.00416d81();\n        var_4h = 0x44035c;\n        uVar3 = fcn.00416f96();\n        var_4h = var_28h;\n        arg_8h = arg_8h & 0xffffff | uVar3 << 0x18;\n        uStack12 = 0x440367;\n        fcn.0044951c();\n        if (arg_8h._3_1_ != '\\0') {\n            var_4h = 0x44037c;\n            cVar2 = fcn.004033e1();\n            goto code_r0x00440333;\n        }\n        var_4h = 0x461fd8;\n        uStack12 = 0x44038b;\n        fcn.00416d81();\n        uStack12 = 0x440395;\n        uVar3 = fcn.00416f96();\n        uStack12 = var_28h;\n        arg_8h = arg_8h & 0xffffff | uVar3 << 0x18;\n        var_ch = 0x4403a0;\n        fcn.0044951c();\n        if (arg_8h._3_1_ == '\\0') {\n            uStack12 = 0x461fc4;\n            var_ch = 0x4403c9;\n            fcn.00416d81();\n            var_ch = 0x4403d3;\n            uVar3 = fcn.00416f96();\n            var_ch = var_28h;\n            arg_8h = arg_8h & 0xffffff | uVar3 << 0x18;\n            var_10h = 0x4403de;\n            fcn.0044951c();\n            if (arg_8h._3_1_ != '\\0') {\n                var_ch = 1;\n                goto code_r0x004403a9;\n            }\n            var_ch = 0x461fac;\n            var_10h = 0x4403f6;\n            fcn.00416d81();\n            var_10h = 0x440400;\n            uVar3 = fcn.00416f96();\n            var_10h = var_28h;\n            arg_8h = arg_8h & 0xffffff | uVar3 << 0x18;\n            uStack24 = 0x44040b;\n            fcn.0044951c();\n            if (arg_8h._3_1_ == '\\0') {\n                var_10h = 0x461f90;\n                uStack24 = 0x44043d;\n                fcn.00416d81();\n                uStack24 = 0x440447;\n                uVar3 = fcn.00416f96();\n                uStack24 = var_28h;\n                arg_8h = arg_8h & 0xffffff | uVar3 << 0x18;\n                uStack28 = 0x440452;\n                fcn.0044951c();\n                if (arg_8h._3_1_ == '\\0') {\n                    uStack24 = 0x461f74;\n                    uStack28 = 0x440483;\n                    fcn.00416d81();\n                    uStack28 = 0x44048d;\n                    uVar3 = fcn.00416f96();\n                    uStack28 = var_28h;\n                    arg_8h = arg_8h & 0xffffff | uVar3 << 0x18;\n                    var_1ch = 0x440498;\n                    fcn.0044951c();\n                    if (arg_8h._3_1_ != '\\0') {\n                        uStack28 = 0;\n                        goto code_r0x0044045b;\n                    }\n                    uStack28 = 0x461f60;\n                    var_1ch = 0x4404b0;\n                    fcn.00416d81();\n                    var_1ch = 0x4404ba;\n                    uVar3 = fcn.00416f96();\n                    var_1ch = var_28h;\n                    arg_8h = arg_8h & 0xffffff | uVar3 << 0x18;\n                    fcn.0044951c();\n                    if (arg_8h._3_1_ != '\\0') {\n                        var_1ch = 0x4404eb;\n                        var_1ch = fcn.00418661();\n                        cVar2 = fcn.00401e55(var_1ch);\n                        goto joined_r0x0044046b;\n                    }\n                    var_1ch = 0x461f4c;\n                    fcn.00416d81();\n                    uVar3 = fcn.00416f96();\n                    arg_8h = arg_8h & 0xffffff | uVar3 << 0x18;\n                    fcn.0044951c();\n                    if (arg_8h._3_1_ != '\\0') {\n                        uVar4 = fcn.00418733();\n                        cVar2 = fcn.00401ee5(uVar4);\n                        goto joined_r0x0044046b;\n                    }\n                    fcn.00416d81();\n                    uVar3 = fcn.00416f96();\n                    arg_8h = arg_8h & 0xffffff | uVar3 << 0x18;\n                    var_28h = 0x44056b;\n                    fcn.0044951c();\n                    if (arg_8h._3_1_ != '\\0') {\n                        puVar5 = &fcn.0044025b::arg_8h;\n                        var_28h = 0x440595;\n                        var_28h = fcn.00418661();\n                        var_2ch = 0x44059b;\n                        cVar2 = fcn.00401f73(var_28h, puVar5);\n                        goto joined_r0x00440425;\n                    }\n                    var_28h = 0x4405e0;\n                    fcn.00416d81();\n                    var_28h = 0x4405ea;\n                    uVar3 = fcn.00416f96();\n                    arg_8h = arg_8h & 0xffffff | uVar3 << 0x18;\n                    var_2ch = 0x4405f5;\n                    fcn.0044951c();\n                    if (arg_8h._3_1_ != '\\0') {\n                        var_28h = 0x44061b;\n                        var_28h = fcn.00418733();\n                        var_2ch = 0x440621;\n                        cVar2 = fcn.0040200c(var_28h);\n                        goto joined_r0x0044046b;\n                    }\n                    var_28h = 0x461ee4;\n                    var_2ch = 0x440633;\n                    fcn.00416d81();\n                    var_2ch = 0x44063d;\n                    uVar3 = fcn.00416f96();\n                    var_2ch = var_28h;\n                    arg_8h = arg_8h & 0xffffff | uVar3 << 0x18;\n                    var_30h = 0x440648;\n                    fcn.0044951c();\n                    if (arg_8h._3_1_ == '\\0') {\n                        var_2ch = 0x461ec8;\n                        var_30h = 0x44067d;\n                        fcn.00416d81();\n                        var_30h = 0x440687;\n                        uVar3 = fcn.00416f96();\n                        var_30h = var_28h;\n                        arg_8h = arg_8h & 0xffffff | uVar3 << 0x18;\n                        uStack56 = 0x440692;\n                        fcn.0044951c();\n                        if (arg_8h._3_1_ != '\\0') {\n                            var_30h = 0x4406b8;\n                            var_30h = fcn.00418661();\n                            uStack56 = 0x4406be;\n                            cVar2 = fcn.00402206(var_30h);\n                            goto joined_r0x0044046b;\n                        }\n                        var_30h = 0x461eb4;\n                        uStack56 = 0x4406d8;\n                        fcn.00416d81();\n                        uStack56 = 0x4406e2;\n                        uVar3 = fcn.00416f96();\n                        uStack56 = var_28h;\n                        arg_8h = arg_8h & 0xffffff | uVar3 << 0x18;\n                        var_38h = 0x4406ed;\n                        fcn.0044951c();\n                        if (arg_8h._3_1_ != '\\0') {\n                            uStack56 = 0x440702;\n                            cVar2 = fcn.004022f3();\n                            goto code_r0x00440333;\n                        }\n                        uStack56 = 0x461ea8;\n                        var_38h = 0x440720;\n                        fcn.00416d81();\n                        var_38h = 0x44072a;\n                        uVar3 = fcn.00416f96();\n                        var_38h = var_28h;\n                        arg_8h = arg_8h & 0xffffff | uVar3 << 0x18;\n                        fcn.0044951c();\n                        if (arg_8h._3_1_ == '\\0') {\n                            var_38h = 0x461e98;\n                            fcn.00416d81();\n                            uVar3 = fcn.00416f96();\n                            arg_8h = arg_8h & 0xffffff | uVar3 << 0x18;\n                            fcn.0044951c(var_28h);\n                            if (arg_8h._3_1_ == '\\0') {\n                                fcn.00416d81(0x461e80);\n                                uVar3 = fcn.00416f96();\n                                arg_8h = arg_8h & 0xffffff | uVar3 << 0x18;\n                                fcn.0044951c(var_28h);\n                                if (arg_8h._3_1_ != '\\0') {\n                                    cVar2 = fcn.00402347(&fcn.0044025b::var_1ch);\n                                    goto joined_r0x00440663;\n                                }\n                                fcn.00416d81(0x461e64);\n                                uVar3 = fcn.00416f96();\n                                arg_8h = arg_8h & 0xffffff | uVar3 << 0x18;\n                                fcn.0044951c(var_28h);\n                                if (arg_8h._3_1_ == '\\0') {\n                                    fcn.00416d81(0x461e44);\n                                    uVar3 = fcn.00416f96();\n                                    arg_8h = arg_8h & 0xffffff | uVar3 << 0x18;\n                                    fcn.0044951c(var_28h);\n                                    if (arg_8h._3_1_ == '\\0') {\n                                        fcn.00416d81(0x461e28);\n                                        uVar3 = fcn.00416f96();\n                                        arg_8h = arg_8h & 0xffffff | uVar3 << 0x18;\n                                        fcn.0044951c(var_28h);\n                                        if (arg_8h._3_1_ == '\\0') {\n                                            fcn.00416d81(0x461e14);\n                                            uVar3 = fcn.00416f96();\n                                            arg_8h = arg_8h & 0xffffff | uVar3 << 0x18;\n                                            fcn.0044951c(var_28h);\n                                            if (arg_8h._3_1_ == '\\0') {\n                                                fcn.00416d81(0x461e04);\n                                                uVar3 = fcn.00416f96();\n                                                arg_8h = arg_8h & 0xffffff | uVar3 << 0x18;\n                                                fcn.0044951c(var_28h);\n                                                if (arg_8h._3_1_ != '\\0') {\n                                                    uVar4 = *(var_4h + 0x7c0);\n                                                    puVar5 = &fcn.0044025b::var_1ch;\n                                                    wParam = fcn.00418733();\n                                                    cVar2 = fcn.00402498(uVar4, wParam, puVar5);\n                                                    goto joined_r0x00440663;\n                                                }\n                                                goto code_r0x004405a6;\n                                            }\n                                            fcn.00418661();\n                                            fcn.0040247c();\n                                            goto code_r0x004405b0;\n                                        }\n                                        fcn.0040240e(&fcn.0044025b::arg_8h);\n                                    }\n                                    else {\n                                        fcn.004023e8(&fcn.0044025b::arg_8h);\n                                    }\n                                }\n                                else {\n                                    fcn.004023e8(&fcn.0044025b::arg_8h);\n                                }\n                                goto code_r0x00440709;\n                            }\n                        }\n                        else {\n                            var_38h = 1;\n                        }\n                        fcn.00402314();\n                    }\n                    else {\n                        var_2ch = &fcn.0044025b::var_1ch;\n                        var_30h = 0x440661;\n                        cVar2 = fcn.004020f7(var_2ch);\njoined_r0x00440663:\n                        if (cVar2 == '\\0') goto code_r0x004405a6;\n                        fcn.00418cb1();\n                    }\n                }\n                else {\n                    uStack24 = 1;\ncode_r0x0044045b:\n                    cVar2 = fcn.00401e28();\njoined_r0x0044046b:\n                    if (cVar2 == '\\0') goto code_r0x004405a6;\n                }\n                goto code_r0x004405b0;\n            }\n            var_10h = 0x440423;\n            cVar2 = fcn.00401e02();\njoined_r0x00440425:\n            if (cVar2 == '\\0') {\ncode_r0x004405a6:\n                fcn.00421898();\n                goto code_r0x004405b0;\n            }\n            goto code_r0x00440709;\n        }\n        uStack12 = 0xffffffff;\ncode_r0x004403a9:\n        fcn.00401d62();\n    }\n    else {\n        cVar2 = fcn.004033cb();\ncode_r0x00440333:\n        if (cVar2 == '\\0') {\n            uStack56 = 0;\n        }\n        else {\n            uStack56 = 1;\n        }\ncode_r0x00440709:\n        fcn.00418bb9();\n    }\ncode_r0x004405b0:\n    fcn.0044951c(var_10h);\n    fcn.0044951c(var_1ch);\ncode_r0x004405c1:\n    fcn.0041858e();\n    return 0;\n}\n",
        "token_count": 3930
    },
    "0044094d": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0044094d(int32_t arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    uint var_38h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_1ch;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    cVar1 = fcn.0043fb64();\n    if (cVar1 == '\\0') {\n        fcn.00418bb9(0);\n        fcn.00421898(0);\n        return 0;\n    }\n    var_38h = 0;\n    var_2ch = 0;\n    var_30h = 1;\n    fcn.00416d61();\n    fcn.00418661();\n    fcn.00416dcf();\n    (*_sym.imp.USER32.dll_CharUpperBuffW)(var_10h, var_ch);\n    puVar4 = 0x45bfe0;\n    fcn.00418c7e(0x45bfe0);\n    while (*(arg_8h + 0xc) < 6) {\n        puVar4 = &var_38h;\n        fcn.00417dfb();\n    }\n    fcn.00416d81(0x461de8, puVar4);\n    cVar1 = fcn.00416f96();\n    fcn.0044951c(var_28h);\n    if (cVar1 == '\\0') {\n        fcn.00416d81(0x461dc8);\n        cVar1 = fcn.00416f96();\n        fcn.0044951c(var_28h);\n        if (cVar1 == '\\0') {\n            fcn.00416d81(0x461db8);\n            cVar1 = fcn.00416f96();\n            fcn.0044951c(var_28h);\n            if (cVar1 != '\\0') {\n                uVar2 = fcn.00418733(&var_1ch);\n                uVar2 = fcn.00418733(uVar2);\n                fcn.00402614(uVar2);\ncode_r0x00440aca:\n                fcn.00418cb1();\n                goto code_r0x00440e40;\n            }\n            fcn.00416d81(0x461d94);\n            cVar1 = fcn.00416f96();\n            fcn.0044951c(var_28h);\n            if (cVar1 == '\\0') {\n                fcn.00416d81(0x461d7c);\n                cVar1 = fcn.00416f96();\n                fcn.0044951c(var_28h);\n                if (cVar1 == '\\0') {\n                    fcn.00416d81(0x461d68);\n                    cVar1 = fcn.00416f96();\n                    fcn.0044951c(var_28h);\n                    if (cVar1 == '\\0') {\n                        fcn.00416d81(0x461d50);\n                        cVar1 = fcn.00416f96();\n                        fcn.0044951c(var_28h);\n                        if (cVar1 == '\\0') {\n                            fcn.00416d81(0x45d3bc);\n                            cVar1 = fcn.00416f96();\n                            fcn.0044951c(var_28h);\n                            if (cVar1 == '\\0') {\n                                fcn.00416d81(0x461d34);\n                                cVar1 = fcn.00416f96();\n                                fcn.0044951c(var_28h);\n                                if (cVar1 != '\\0') {\n                                    fcn.0040258c();\n                                    goto code_r0x00440e40;\n                                }\n                                fcn.00416d81(0x461d20);\n                                cVar1 = fcn.00416f96();\n                                fcn.0044951c(var_28h);\n                                if (cVar1 == '\\0') {\n                                    fcn.00416d81(0x461e80);\n                                    cVar1 = fcn.00416f96();\n                                    fcn.0044951c(var_28h);\n                                    if (cVar1 != '\\0') {\n                                        fcn.00416e83(&var_1ch, 0x45bfe0);\n                                        iVar3 = fcn.00418733();\n                                        fcn.004026f4(iVar3 != 0);\n                                        goto code_r0x00440aca;\n                                    }\n                                    fcn.00416d81(0x461d0c);\n                                    cVar1 = fcn.00416f96();\n                                    fcn.0044951c(var_28h);\n                                    if (cVar1 == '\\0') {\n                                        fcn.00416d81(0x461cf4);\n                                        cVar1 = fcn.00416f96();\n                                        fcn.0044951c(var_28h);\n                                        if (cVar1 == '\\0') {\n                                            fcn.00418c7e(0x45bfe0);\n                                            fcn.00421898(0);\n                                        }\n                                        else {\n                                            fcn.00418661();\n                                            fcn.00402896();\n                                        }\n                                        goto code_r0x00440e40;\n                                    }\n                                    uVar2 = fcn.00418733();\n                                    uVar2 = fcn.00418661(uVar2);\n                                    fcn.004027bd(uVar2);\n                                    goto code_r0x00440b6f;\n                                }\n                                fcn.00418733();\n                                fcn.00418733();\n                            }\n                            else {\n                                fcn.00418733();\n                                fcn.00418733();\n                            }\n                        }\n                    }\n                    fcn.00402503();\n                    goto code_r0x00440e40;\n                }\n                uVar2 = fcn.00418733();\n                fcn.004026d0(uVar2);\n            }\n            else {\n                fcn.004026b8();\n            }\n        }\n        else {\n            fcn.004025ec();\n        }\n    }\n    else {\n        fcn.004025d4();\n    }\ncode_r0x00440b6f:\n    fcn.00418bb9();\ncode_r0x00440e40:\n    fcn.0044951c(var_10h);\n    fcn.0044951c(var_1ch);\n    fcn.0041858e();\n    return 0;\n}\n",
        "token_count": 1457
    },
    "004410bf": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004410bf(int32_t arg_8h, uint arg_ch)\n\n{\n    uint32_t uVar1;\n    char cVar2;\n    uint *puVar3;\n    int32_t iVar4;\n    uint var_5ch;\n    uint var_34h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_8h;\n    uint var_4h;\n    \n    uVar1 = *(arg_8h + 0xc);\n    var_8h = 0;\n    var_34h = 0;\n    var_2ch = 1;\n    var_28h = 0;\n    fcn.00417dba();\n    var_24h = 0;\n    var_18h = 0;\n    var_1ch = 1;\n    fcn.00418c7e(0x461ccc);\n    fcn.00418c7e(0x45bfe0);\n    fcn.00418c7e(0x45bfe0);\n    if (*(arg_8h + 0xc) == 0) {\n        iVar4 = arg_8h + 0x18;\n    }\n    else {\n        iVar4 = **(arg_8h + 8);\n    }\n    fcn.00417dfb(iVar4);\n    if (uVar1 < 2) {\n        puVar3 = &var_24h;\n    }\n    else if (*(arg_8h + 0xc) < 2) {\n        puVar3 = arg_8h + 0x18;\n    }\n    else {\n        puVar3 = *(*(arg_8h + 8) + 4);\n    }\n    fcn.00417dfb(puVar3);\n    fcn.00417dfb(&var_34h);\n    cVar2 = fcn.0043fb64();\n    if (cVar2 == '\\0') {\n        fcn.00421898(0);\n    }\n    else {\n        iVar4 = var_8h;\n        if (uVar1 == 3) {\n            iVar4 = fcn.00418733();\n            iVar4 = iVar4 + -1;\n        }\n        fcn.00416d61();\n        cVar2 = fcn.00402963(iVar4, &var_14h);\n        if (cVar2 == '\\0') {\n            fcn.00421898(0);\n        }\n        else {\n            fcn.00418cb1();\n        }\n        fcn.0044951c(var_14h);\n    }\n    fcn.0041858e();\n    fcn.00417ddb();\n    fcn.0041858e();\n    return 0;\n}\n",
        "token_count": 629
    },
    "0044197f": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00441a0a)\n// WARNING: Removing unreachable block (ram,0x00441a1e)\n// WARNING: Removing unreachable block (ram,0x00441a30)\n// WARNING: Removing unreachable block (ram,0x00441a22)\n// WARNING: Removing unreachable block (ram,0x00441a6b)\n\nuint __cdecl fcn.0044197f(int32_t arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint extraout_EDX;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.00418733();\n    fcn.00418733();\n    fcn.0043f453();\n    iVar1 = fcn.0043f4ea(1);\n    uVar2 = 0;\n    if (iVar1 < 1) {\n        if (iVar1 < 0) {\n            fcn.00421898(0);\n            uVar2 = extraout_EDX;\n        }\n        fcn.00418bb9(uVar2);\n    }\n    else {\n        fcn.0040d9b0();\n        fcn.00418bb9(0);\n        fcn.00421898(0);\n    }\n    return 0;\n}\n",
        "token_count": 287
    },
    "00441d61": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "link function at runtime on Windows"
        ],
        "decompiled_code": "\nvoid fcn.00441d61(void)\n\n{\n    int32_t iVar1;\n    int32_t *unaff_ESI;\n    \n    if (unaff_ESI[2] == 0) {\n        iVar1 = (*_sym.imp.KERNEL32.DLL_LoadLibraryA)(0x45c1f4);\n        *unaff_ESI = iVar1;\n        if (iVar1 != 0) {\n            iVar1 = (*_sym.imp.KERNEL32.DLL_GetProcAddress)(iVar1, 0x461cb8);\n            unaff_ESI[2] = iVar1;\n        }\n    }\n    return;\n}\n",
        "token_count": 136
    },
    "00441d88": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "link function at runtime on Windows"
        ],
        "decompiled_code": "\nvoid fcn.00441d88(void)\n\n{\n    int32_t iVar1;\n    int32_t *unaff_ESI;\n    \n    if (unaff_ESI[2] == 0) {\n        iVar1 = (*_sym.imp.KERNEL32.DLL_LoadLibraryA)(0x45c1f4);\n        *unaff_ESI = iVar1;\n        if (iVar1 != 0) {\n            iVar1 = (*_sym.imp.KERNEL32.DLL_GetProcAddress)(iVar1, 0x461ca8);\n            unaff_ESI[2] = iVar1;\n        }\n    }\n    return;\n}\n",
        "token_count": 136
    },
    "00441dee": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00441dee(void)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    uint32_t *puVar3;\n    \n    if (*0x47840c == 0) {\n        fcn.0044be72(0);\n        fcn.00441daf();\n    }\n    *0x4672d0 = 0x270;\n    *0x477a28 = 0x477a30;\n    iVar2 = 0xe3;\n    puVar3 = 0x477a30;\n    do {\n        puVar1 = puVar3 + 1;\n        iVar2 = iVar2 + -1;\n        *puVar3 = ((*puVar3 ^ *puVar1) & 0x7ffffffe ^ *puVar3) >> 1 ^ -((*puVar1 & 1) != 0) & 0x9908b0df ^ puVar3[0x18d]\n        ;\n        puVar3 = puVar1;\n    } while (iVar2 != 0);\n    iVar2 = 0x18c;\n    do {\n        puVar3 = puVar1;\n        puVar1 = puVar3 + 1;\n        iVar2 = iVar2 + -1;\n        *puVar3 = ((*puVar3 ^ *puVar1) & 0x7ffffffe ^ *puVar3) >> 1 ^ -((*puVar1 & 1) != 0) & 0x9908b0df ^ puVar3[-0xe3]\n        ;\n    } while (iVar2 != 0);\n    *puVar1 = ((*puVar1 ^ *0x477a30) & 0x7ffffffe ^ *puVar1) >> 1 ^ -((*0x477a30 & 1) != 0) & 0x9908b0df ^ puVar3[-0xe2]\n    ;\n    return;\n}\n",
        "token_count": 426
    },
    "0044218b": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0044218b(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t unaff_ESI;\n    \n    uVar1 = fcn.00449f7f(0x20000);\n    *(unaff_ESI + 0x230) = uVar1;\n    uVar1 = fcn.00449f7f(0x10000);\n    *(unaff_ESI + 0x254) = uVar1;\n    iVar2 = fcn.00449f7f(0x10000);\n    *(unaff_ESI + 0x250) = iVar2;\n    if (((*(unaff_ESI + 0x230) != 0) && (*(unaff_ESI + 0x254) != 0)) && (iVar2 != 0)) {\n        return 0;\n    }\n    fcn.004421e1();\n    return 5;\n}\n",
        "token_count": 206
    },
    "00442395": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00442395(void)\n\n{\n    uint32_t uVar1;\n    uchar uVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = *(in_EAX + 0x10);\n    uVar5 = *(in_EAX + 0x234);\n    while( true ) {\n        if (uVar1 <= uVar5) {\n            fcn.00442259();\n            return 0;\n        }\n        iVar3 = fcn.0044246e();\n        if (iVar3 == 0) {\n            uVar2 = fcn.0044246e();\n            *((*(in_EAX + 0x234) & 0x1ffff) + *(in_EAX + 0x230)) = uVar2;\n            *(in_EAX + 0x234) = *(in_EAX + 0x234) + 1;\n            *(in_EAX + 0x238) = *(in_EAX + 0x238) + 1;\n        }\n        else {\n            iVar4 = fcn.0044246e();\n            iVar3 = fcn.004424fa();\n            uVar5 = *(in_EAX + 0x234) - iVar4;\n            for (; iVar3 != 0; iVar3 = iVar3 + -1) {\n                uVar6 = uVar5 & 0x1ffff;\n                uVar5 = uVar5 + 1;\n                *((*(in_EAX + 0x234) & 0x1ffff) + *(in_EAX + 0x230)) = *(uVar6 + *(in_EAX + 0x230));\n                *(in_EAX + 0x234) = *(in_EAX + 0x234) + 1;\n                *(in_EAX + 0x238) = *(in_EAX + 0x238) + 1;\n            }\n        }\n        fcn.004422c4();\n        fcn.0044234b();\n        if (*(in_EAX + 0x240) != '\\0') break;\n        uVar5 = *(in_EAX + 0x234);\n    }\n    return 4;\n}\n",
        "token_count": 517
    },
    "0044246e": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nushort __fastcall fcn.0044246e(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint32_t uVar2;\n    \n    *(param_1 + 0x246) = 0;\n    if (in_EAX != 0) {\n        do {\n            if (*(param_1 + 0x248) == 0) {\n                if (*(param_1 + 0x14) == 1) {\n                    iVar1 = *(param_1 + 0xc);\n                    *(param_1 + 0x244) = *(param_1 + 0x244) | *(*(param_1 + 4) + iVar1) << 8;\n                    *(param_1 + 0xc) = iVar1 + 1;\n                    *(param_1 + 0x244) = *(param_1 + 0x244) | *(iVar1 + 1 + *(param_1 + 4));\n                    *(param_1 + 0xc) = iVar1 + 2;\n                }\n                else {\n                    uVar2 = fcn.0044227f();\n                    *(param_1 + 0x244) = *(param_1 + 0x244) | (uVar2 & 0xff) << 8;\n                    uVar2 = fcn.0044227f();\n                    *(param_1 + 0x244) = *(param_1 + 0x244) | uVar2 & 0xff;\n                    *(param_1 + 0xc) = *(param_1 + 0xc) + 2;\n                }\n                *(param_1 + 0x248) = 0x10;\n            }\n            *(param_1 + 0x244) = *(param_1 + 0x244) << 1;\n            *(param_1 + 0x248) = *(param_1 + 0x248) + -1;\n            in_EAX = in_EAX + -1;\n        } while (in_EAX != 0);\n    }\n    return *(param_1 + 0x246);\n}\n",
        "token_count": 464
    },
    "00442f86": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00442f86(void)\n\n{\n    uint32_t *puVar1;\n    uint32_t *in_EAX;\n    uint32_t *puVar2;\n    int32_t iStack8;\n    \n    if (in_EAX[0x271] == 0) {\n        fcn.0044be72(0);\n        fcn.00442f4a();\n    }\n    in_EAX[0x270] = 0x270;\n    in_EAX[0x272] = in_EAX;\n    iStack8 = 0xe3;\n    puVar2 = in_EAX;\n    do {\n        puVar1 = puVar2 + 1;\n        iStack8 = iStack8 + -1;\n        *puVar2 = ((*puVar2 ^ *puVar1) & 0x7ffffffe ^ *puVar2) >> 1 ^ -((*puVar1 & 1) != 0) & 0x9908b0df ^ puVar2[0x18d]\n        ;\n        puVar2 = puVar1;\n    } while (iStack8 != 0);\n    iStack8 = 0x18c;\n    do {\n        puVar2 = puVar1;\n        puVar1 = puVar2 + 1;\n        iStack8 = iStack8 + -1;\n        *puVar2 = ((*puVar2 ^ *puVar1) & 0x7ffffffe ^ *puVar2) >> 1 ^ -((*puVar1 & 1) != 0) & 0x9908b0df ^ puVar2[-0xe3]\n        ;\n    } while (iStack8 != 0);\n    *puVar1 = ((*puVar1 ^ *in_EAX) & 0x7ffffffe ^ *puVar1) >> 1 ^ -((*in_EAX & 1) != 0) & 0x9908b0df ^ puVar2[-0xe2];\n    return;\n}\n",
        "token_count": 441
    },
    "00443994": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00443994(uint8_t **arg_8h, uint *arg_ch, int32_t arg_10h, uint32_t arg_14h, int32_t arg_18h)\n\n{\n    uint8_t *puVar1;\n    uint32_t uVar2;\n    uint8_t *puVar3;\n    uint8_t *puVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint8_t *puVar7;\n    uint32_t uVar8;\n    bool bVar9;\n    bool bVar10;\n    uint32_t var_4h;\n    \n    puVar7 = *arg_8h;\n    uVar6 = arg_14h >> 0xb & 1;\n    puVar3 = puVar7 + 1;\n    uVar2 = *puVar3;\n    uVar8 = uVar2;\n    if (uVar2 == 0) {\n        *arg_ch = 1;\n        goto code_r0x004439b8;\n    }\n    uVar5 = uVar2 - 0x30;\n    if ((0x4a < uVar5) || (uVar8 = *(uVar5 * 2 + 0x45a040),  uVar8 != 0)) goto code_r0x004439b8;\n    var_4h = uVar8;\n    if (99 < uVar2) {\n        if (uVar2 == 0x67) {\n            bVar9 = puVar7[2] == 0x7b;\n            if (bVar9) {\n                puVar3 = puVar7 + 2;\n            }\n            bVar10 = puVar3[1] == 0x2d;\n            if (bVar10) {\n                puVar3 = puVar3 + 1;\n            }\n            uVar5 = 0;\n            puVar7 = puVar3 + 1;\n            if ((*(puVar3[1] + 0x45a1c8) & 4) == 0) {\ncode_r0x00443c3c:\n                *arg_ch = 0x39;\n                return 0;\n            }\n            do {\n                puVar4 = puVar7;\n                uVar5 = uVar5 * 10 + -0x30 + *puVar4;\n                puVar7 = puVar4 + 1;\n            } while ((*(puVar4[1] + 0x45a1c8) & 4) != 0);\n            if ((uVar5 == 0) || ((bVar9 && (puVar4 = puVar4 + 1,  *puVar4 != 0x7d)))) goto code_r0x00443c3c;\n            if (bVar10) {\n                if (arg_10h < uVar5) {\n                    *arg_ch = 0xf;\n                    return 0;\n                }\n                uVar5 = (arg_10h - uVar5) + 1;\n            }\ncode_r0x00443c32:\n            uVar8 = -uVar5 - 0x16;\n            puVar3 = puVar4;\n            goto code_r0x004439b8;\n        }\n        if ((uVar2 == 0x6c) || (uVar2 == 0x75)) {\ncode_r0x00443a0f:\n            *arg_ch = 0x25;\n            uVar8 = uVar2;\n            goto code_r0x004439b8;\n        }\n        if (uVar2 == 0x78) {\n            if (puVar7[2] == 0x7b) {\n                uVar8 = 0;\n                puVar7 = puVar7 + 3;\n                arg_14h = 0;\n                while (uVar2 = *puVar7,  (*(uVar2 + 0x45a1c8) & 8) != 0) {\n                    puVar7 = puVar7 + 1;\n                    if ((uVar8 != 0) || (uVar2 != 0x30)) {\n                        arg_14h = arg_14h + 1;\n                        if (0x60 < uVar2) {\n                            uVar2 = uVar2 - 0x20;\n                        }\n                        uVar8 = (uVar8 * 0x10 - (((0x40 < uVar2) - 1 & 0xfffffff9) + 0x37)) + uVar2;\n                    }\n                }\n                if (*puVar7 == 0x7d) {\n                    puVar3 = puVar7;\n                    if ((uVar8 < 0) || ((-(uVar6 != 0) & 6) + 2 < arg_14h)) {\n                        *arg_ch = 0x22;\n                    }\n                    goto code_r0x004439b8;\n                }\n            }\n            uVar8 = 0;\n            do {\n                var_4h = var_4h + 1;\n                puVar7 = puVar3 + 1;\n                if ((*(*puVar7 + 0x45a1c8) & 8) == 0) break;\n                uVar2 = *puVar7;\n                if (0x60 < uVar2) {\n                    uVar2 = uVar2 - 0x20;\n                }\n                uVar8 = (uVar8 * 0x10 - (((0x40 < uVar2) - 1 & 0xfffffff9) + 0x37)) + uVar2;\n                puVar3 = puVar7;\n            } while (var_4h < 2);\n            goto code_r0x004439b8;\n        }\n        goto code_r0x00443af1;\n    }\n    if (uVar2 == 99) {\n        uVar2 = puVar7[2];\n        if (uVar2 == 0) {\n            *arg_ch = 2;\n            return 0;\n        }\n        if (uVar2 - 0x61 < 0x1a) {\n            uVar2 = uVar2 - 0x20;\n        }\n        uVar8 = uVar2 ^ 0x40;\n        puVar3 = puVar7 + 2;\n        goto code_r0x004439b8;\n    }\n    if (uVar2 == 0x30) {\ncode_r0x00443a63:\n        uVar2 = uVar2 - 0x30;\n        do {\n            var_4h = var_4h + 1;\n            puVar7 = puVar3 + 1;\n            if ((*puVar7 < 0x30) || (0x37 < *puVar7)) break;\n            uVar2 = (*puVar7 - 0x30) + uVar2 * 8;\n            puVar3 = puVar7;\n        } while (var_4h < 2);\n        uVar8 = uVar2;\n        if ((uVar6 == 0) && (0xff < uVar2)) {\n            *arg_ch = 0x33;\n        }\n    }\n    else {\n        if (0x30 < uVar2) {\n            if (uVar2 < 0x3a) {\n                puVar4 = puVar3;\n                if (arg_18h == 0) {\n                    while (puVar1 = puVar4 + 1,  (*(*puVar1 + 0x45a1c8) & 4) != 0) {\n                        uVar5 = uVar5 * 10 + -0x30 + *puVar1;\n                        puVar4 = puVar1;\n                    }\n                    if ((uVar5 < 10) || (uVar5 <= arg_10h)) goto code_r0x00443c32;\n                }\n                uVar2 = *puVar3;\n                if (0x37 < uVar2) {\n                    uVar8 = 0;\n                    puVar3 = puVar7;\n                    goto code_r0x004439b8;\n                }\n                goto code_r0x00443a63;\n            }\n            if (((uVar2 == 0x4c) || (uVar2 == 0x4e)) || (uVar2 == 0x55)) goto code_r0x00443a0f;\n        }\ncode_r0x00443af1:\n        uVar8 = uVar2;\n        if ((arg_14h & 0x40) != 0) {\n            *arg_ch = 3;\n        }\n    }\ncode_r0x004439b8:\n    *arg_8h = puVar3;\n    return uVar8;\n}\n",
        "token_count": 1924
    },
    "00443e65": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00443e65(uint32_t arg_8h, int32_t arg_ch)\n\n{\n    uint8_t *in_EAX;\n    uint32_t uVar1;\n    uint32_t *in_EDX;\n    \ncode_r0x00443e6a:\n    do {\n        uVar1 = *in_EAX;\n        if (uVar1 < 0x4e) {\n            if (uVar1 != 0x4d) {\n                if (uVar1 < 3) {\n                    return;\n                }\n                if (4 < uVar1) {\n                    if (uVar1 != 0x13) {\n                        return;\n                    }\n                    if ((0 < arg_8h) && ((in_EAX[1] & arg_8h) != (*in_EDX & arg_8h))) {\n                        *in_EDX = in_EAX[1];\n                    }\n                    in_EAX = in_EAX + 2;\n                    goto code_r0x00443e6a;\n                }\n                if (arg_ch == 0) {\n                    return;\n                }\n            }\n        }\n        else {\n            if (uVar1 < 0x53) {\n                return;\n            }\n            if (uVar1 < 0x56) {\n                if (arg_ch == 0) {\n                    return;\n                }\n                do {\n                    in_EAX = in_EAX + CONCAT11(in_EAX[1], in_EAX[2]);\n                } while (*in_EAX == 0x4e);\n                uVar1 = *in_EAX;\n            }\n            else {\n                if (uVar1 < 0x5e) {\n                    return;\n                }\n                if (0x60 < uVar1) {\n                    return;\n                }\n            }\n        }\n        in_EAX = in_EAX + *(uVar1 + 0x45a2e8);\n    } while( true );\n}\n",
        "token_count": 417
    },
    "0044428f": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.0044428f(uint param_1, uint32_t param_2)\n\n{\n    char *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar3 = 0;\n    do {\n        if (param_2 == *(iVar3 + 0x45a110)) {\n            iVar2 = fcn.0044a590(param_1, *(iVar3 * 4 + 0x45a0d8), param_2);\n            if (iVar2 == 0) {\n                return iVar3;\n            }\n        }\n        pcVar1 = iVar3 + 0x45a111;\n        iVar3 = iVar3 + 1;\n    } while (*pcVar1 != '\\0');\n    return -1;\n}\n",
        "token_count": 171
    },
    "0044438b": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0044438b(int32_t arg_8h, uint32_t arg_ch, uint arg_10h, uint8_t *arg_14h, uint32_t arg_18h)\n\n{\n    uint8_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t in_ECX;\n    int32_t unaff_ESI;\n    uint8_t *puVar5;\n    uint8_t *puVar6;\n    bool bVar7;\n    uint var_8h;\n    int32_t var_4h;\n    \n    uVar2 = arg_18h & 8;\n    var_4h = in_ECX;\n    if (uVar2 != 0) {\ncode_r0x004443a0:\n        uVar1 = *(*arg_14h + *(unaff_ESI + 0xc));\n        while ((uVar1 & 1) != 0) {\n            arg_14h = arg_14h + 1;\n            uVar1 = *(*arg_14h + *(unaff_ESI + 0xc));\n        }\n        if (*arg_14h == 0x23) {\n            do {\n                while( true ) {\n                    puVar6 = arg_14h;\n                    puVar5 = puVar6 + 1;\n                    arg_14h = puVar5;\n                    if (*puVar5 == 0) goto code_r0x004443a0;\n                    if (*(unaff_ESI + 0x48) != 0) break;\n                    if (((puVar5 <= *(unaff_ESI + 0x1c) - *(unaff_ESI + 0x4c)) && (*puVar5 == *(unaff_ESI + 0x50))) &&\n                       ((*(unaff_ESI + 0x4c) == 1 || (puVar6[2] == *(unaff_ESI + 0x51))))) goto code_r0x0044441c;\n                }\n            } while ((*(unaff_ESI + 0x1c) <= puVar5) ||\n                    (iVar4 = fcn.004492f7(puVar5, *(unaff_ESI + 0x48), *(unaff_ESI + 0x1c), unaff_ESI + 0x4c, arg_10h), \n                    arg_14h = puVar5,  iVar4 == 0));\ncode_r0x0044441c:\n            arg_14h = puVar5 + *(unaff_ESI + 0x4c);\n            goto code_r0x004443a0;\n        }\n    }\n    if (*arg_14h == 0x5c) {\n        var_4h = 0;\n        uVar3 = fcn.00443994(&arg_14h, &var_4h, *(unaff_ESI + 0x30), arg_18h, 0);\n        if (var_4h != 0) {\n            return 0;\n        }\n    }\n    else {\n        uVar3 = *arg_14h;\n        if ((*(uVar3 + *(unaff_ESI + 0xc)) & 0x80) != 0) {\n            return 0;\n        }\n    }\n    puVar5 = arg_14h + 1;\n    if (uVar2 != 0) {\ncode_r0x0044446b:\n        while ((*(*puVar5 + *(unaff_ESI + 0xc)) & 1) != 0) {\n            puVar5 = puVar5 + 1;\n        }\n        if (*puVar5 == 0x23) {\n            do {\n                while( true ) {\n                    puVar6 = puVar5;\n                    puVar5 = puVar6 + 1;\n                    if (*puVar5 == 0) goto code_r0x0044446b;\n                    if (*(unaff_ESI + 0x48) != 0) break;\n                    if (((puVar5 <= *(unaff_ESI + 0x1c) - *(unaff_ESI + 0x4c)) && (*puVar5 == *(unaff_ESI + 0x50))) &&\n                       ((*(unaff_ESI + 0x4c) == 1 || (puVar6[2] == *(unaff_ESI + 0x51))))) goto code_r0x00444511;\n                }\n            } while ((*(unaff_ESI + 0x1c) <= puVar5) ||\n                    (iVar4 = fcn.004492f7(puVar5, *(unaff_ESI + 0x48), *(unaff_ESI + 0x1c), unaff_ESI + 0x4c, arg_10h), \n                    iVar4 == 0));\ncode_r0x00444511:\n            puVar5 = puVar5 + *(unaff_ESI + 0x4c);\n            goto code_r0x0044446b;\n        }\n    }\n    if (*puVar5 == 0x2a) {\n        return 0;\n    }\n    if (*puVar5 == 0x3f) {\n        return 0;\n    }\n    iVar4 = fcn.0044a590(puVar5, 0x45a2c8, 3);\n    if (iVar4 == 0) {\n        return 0;\n    }\n    if (uVar3 < 0) {\n        if (arg_8h < 9) {\n            if (arg_8h != 8) {\n                if (arg_8h == 5) {\n                    uVar2 = 0;\n                    bVar7 = uVar3 == 0xfffffffa;\n                }\n                else {\n                    if (arg_8h == 6) {\n                        if (uVar3 == 0xfffffffb) {\n                            return 1;\n                        }\n                        if (uVar3 == 0xfffffff8) {\n                            return 1;\n                        }\n                        bVar7 = uVar3 == 0xfffffff7;\n                        goto joined_r0x0044454f;\n                    }\n                    uVar2 = arg_8h - 7;\n                    if (uVar2 != 0) {\n                        return 0;\n                    }\n                    bVar7 = uVar3 == 0xfffffff8;\n                }\n                return uVar2 & 0xffffff00 | bVar7;\n            }\n            if (uVar3 == 0xfffffff9) {\n                return 1;\n            }\n            if (uVar3 == 0xfffffffa) {\n                return 1;\n            }\n            bVar7 = uVar3 == 0xfffffff6;\n        }\n        else if (arg_8h == 9) {\n            if (uVar3 == 0xfffffff6) {\n                return 1;\n            }\n            bVar7 = uVar3 == 0xfffffffa;\n        }\n        else if (arg_8h == 10) {\n            if (uVar3 == 0xfffffff7) {\n                return 1;\n            }\n            bVar7 = uVar3 == 0xfffffff8;\n        }\n        else {\n            if (arg_8h < 0x16) {\n                return 0;\n            }\n            if (0x17 < arg_8h) {\n                return 0;\n            }\n            if (uVar3 == 0xfffffffb) {\n                if (0x7f < arg_ch) {\n                    return 0;\n                }\n                bVar7 = (*(arg_ch + *(unaff_ESI + 0xc)) & 4) == 0;\n            }\n            else if (uVar3 == 0xfffffffa) {\n                if (0x7f < arg_ch) {\n                    return 1;\n                }\n                bVar7 = (*(arg_ch + *(unaff_ESI + 0xc)) & 4) == 0;\n            }\n            else if (uVar3 == 0xfffffff9) {\n                if (0x7f < arg_ch) {\n                    return 0;\n                }\n                bVar7 = (*(arg_ch + *(unaff_ESI + 0xc)) & 1) == 0;\n            }\n            else if (uVar3 == 0xfffffff8) {\n                if (0x7f < arg_ch) {\n                    return 1;\n                }\n                bVar7 = (*(arg_ch + *(unaff_ESI + 0xc)) & 1) == 0;\n            }\n            else if (uVar3 == 0xfffffff7) {\n                if (0x7f < arg_ch) {\n                    return 0;\n                }\n                bVar7 = (*(arg_ch + *(unaff_ESI + 0xc)) & 0x10) == 0;\n            }\n            else {\n                if (uVar3 != 0xfffffff6) {\n                    return 0;\n                }\n                if (0x7f < arg_ch) {\n                    return 1;\n                }\n                bVar7 = (*(arg_ch + *(unaff_ESI + 0xc)) & 0x10) == 0;\n            }\n        }\n    }\n    else if (arg_8h < 10) {\n        if (arg_8h == 9) {\n            if (0x7f < uVar3) {\n                return 0;\n            }\n            bVar7 = (*(uVar3 + *(unaff_ESI + 0xc)) & 0x10) == 0;\n        }\n        else if (arg_8h == 5) {\n            if (0x7f < uVar3) {\n                return 0;\n            }\n            bVar7 = (*(uVar3 + *(unaff_ESI + 0xc)) & 4) == 0;\n        }\n        else if (arg_8h == 6) {\n            if (0x7f < uVar3) {\n                return 1;\n            }\n            bVar7 = (*(uVar3 + *(unaff_ESI + 0xc)) & 4) == 0;\n        }\n        else if (arg_8h == 7) {\n            if (0x7f < uVar3) {\n                return 0;\n            }\n            bVar7 = (*(uVar3 + *(unaff_ESI + 0xc)) & 1) == 0;\n        }\n        else {\n            if (arg_8h != 8) {\n                return 0;\n            }\n            if (0x7f < uVar3) {\n                return 1;\n            }\n            bVar7 = (*(uVar3 + *(unaff_ESI + 0xc)) & 1) == 0;\n        }\n    }\n    else {\n        if (arg_8h != 10) {\n            if (arg_8h == 0x16) {\n                return arg_ch != uVar3;\n            }\n            if (arg_8h == 0x17) {\n                if (arg_ch == uVar3) {\n                    return 0;\n                }\n                bVar7 = arg_ch != *(*(unaff_ESI + 4) + uVar3);\n            }\n            else {\n                if (arg_8h != 0x18) {\n                    return 0;\n                }\n                if (arg_ch == uVar3) {\n                    return 1;\n                }\n                if ((arg_18h & 1) == 0) {\n                    return 0;\n                }\n                bVar7 = arg_ch == *(*(unaff_ESI + 4) + uVar3);\n            }\n            return bVar7;\n        }\n        if (0x7f < uVar3) {\n            return 1;\n        }\n        bVar7 = (*(uVar3 + *(unaff_ESI + 0xc)) & 0x10) == 0;\n    }\njoined_r0x0044454f:\n    if (!bVar7) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 2635
    },
    "00444746": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint fcn.00444746(uint8_t **param_1, uint8_t **param_2, uint8_t **param_3, int32_t *param_4, uint8_t **param_5, \n                 uint8_t **param_6, uint param_7, int32_t param_8, uint8_t **param_9)\n\n{\n    char cVar1;\n    uint8_t uVar2;\n    uint8_t *puVar3;\n    int32_t iVar4;\n    uint8_t *arg_8h;\n    uint arg_1ch;\n    int32_t iVar5;\n    uint32_t uVar6;\n    uint8_t uVar7;\n    int32_t iVar8;\n    uint8_t **ppuVar9;\n    uint8_t *puVar10;\n    uint8_t *puVar11;\n    uint *puVar12;\n    int32_t iVar13;\n    uchar *puVar14;\n    uint *puVar15;\n    bool bVar16;\n    bool bVar17;\n    uint32_t arg_8h_00;\n    uint uStack200;\n    uint8_t uStack189;\n    uint32_t uStack168;\n    uint8_t *puStack164;\n    uint uStack160;\n    uint uStack156;\n    uint8_t *puStack124;\n    uint32_t uStack120;\n    uint8_t *puStack116;\n    int32_t iStack112;\n    uint8_t *puStack108;\n    uint32_t uStack104;\n    uint8_t *puStack100;\n    uint8_t *puStack96;\n    int32_t iStack92;\n    char cStack86;\n    uint8_t uStack85;\n    uint8_t *puStack84;\n    uint8_t *puStack80;\n    uint8_t *puStack76;\n    int32_t iStack72;\n    uint8_t *puStack68;\n    uint8_t *puStack64;\n    uint8_t *puStack60;\n    uint8_t *puStack56;\n    int32_t iStack52;\n    int32_t iStack48;\n    uint8_t *puStack44;\n    uint8_t *puStack40;\n    int32_t iStack36;\n    uint8_t *puStack32;\n    uint8_t *puStack28;\n    uint8_t *puStack24;\n    uint32_t uStack20;\n    uint8_t *puStack16;\n    uint8_t *puStack12;\n    uint8_t *puStack8;\n    \n    puStack44 = *param_1;\n    arg_8h = *param_2;\n    puStack8 = *param_3;\n    puStack164 = puStack44 >> 9 & 1;\n    uStack160 = puStack164 ^ 1;\n    puStack64 = 0xfffffffe;\n    puStack76 = 0xfffffffe;\n    puStack68 = 0xfffffffe;\n    puStack32 = 0xfffffffe;\n    iStack52 = 0;\n    iStack36 = 0;\n    iStack112 = 0;\n    iStack92 = 0;\n    puStack100 = arg_8h;\n    puStack124 = arg_8h;\n    iStack72 = 0;\n    uStack120 = 0;\n    puStack12 = NULL;\n    puStack80 = NULL;\n    puStack84 = NULL;\n    uStack104 = (puStack44 & 1) << 8;\ncode_r0x004447ba:\n    puVar11 = puStack124;\n    uStack20 = *puStack8;\n    puVar3 = *(param_8 + 0x10) + 0x1000;\n    if (param_9 == NULL) {\n        if (puVar3 <= *(param_8 + 0x20) && *(param_8 + 0x20) != puVar3) goto code_r0x0044635b;\n    }\n    else {\n        if (puVar3 < arg_8h) {\ncode_r0x0044635b:\n            *param_4 = 0x34;\n            goto code_r0x004464b0;\n        }\n        puVar3 = arg_8h;\n        if (arg_8h < puStack100) {\n            puVar3 = puStack100;\n        }\n        *param_9 = puVar3 + (*param_9 - puStack100);\n        arg_8h = puStack124;\n        if ((puStack12 != NULL) && (arg_8h = puVar3,  puStack124 < puStack12)) {\n            fcn.0044af60(puStack124, puStack12, puVar3 - puStack12);\n            iVar4 = puVar11 - puStack12;\n            puStack12 = puVar11;\n            arg_8h = puVar3 + iVar4;\n        }\n        puStack100 = arg_8h;\n    }\n    puVar11 = puStack8;\n    if ((iStack72 != 0) && (uStack20 != 0)) {\n        if ((uStack20 == 0x5c) && (puStack8[1] == 0x45)) {\n            iStack72 = 0;\n            puVar11 = puStack8 + 1;\n            goto code_r0x00445223;\n        }\n        if (puStack80 != NULL) {\n            if (param_9 == NULL) {\n                fcn.0044436e(param_8);\n            }\n            puStack80 = NULL;\n        }\n        if ((puStack44 & 0x4000) != 0) {\n            puStack80 = arg_8h;\n            arg_8h = fcn.0044434a();\n        }\n        goto code_r0x004452c2;\n    }\n    if ((((uStack20 == 0x2a) || (uStack20 == 0x2b)) || (uStack20 == 0x3f)) ||\n       ((uStack20 == 0x7b && (iVar4 = fcn.00443c4c(),  iVar4 != 0)))) {\n        puStack28 = 0x1;\n    }\n    else {\n        iVar4 = iStack112;\n        puStack28 = NULL;\n        if ((puStack80 != NULL) && (iStack112 = iStack112 + -1,  iVar4 < 1)) {\n            if (param_9 == NULL) {\n                fcn.0044436e(param_8);\n                puVar11 = puStack8;\n            }\n            puStack80 = NULL;\n        }\n    }\n    if ((puStack44 & 8) != 0) {\n        puVar11 = puStack8;\n        if ((*(uStack20 + *(param_8 + 0xc)) & 1) == 0) {\n            if (uStack20 == 0x23) {\n                do {\n                    while( true ) {\n                        puVar11 = puStack8;\n                        puStack8 = puVar11 + 1;\n                        if (*puStack8 == 0) goto code_r0x00444952;\n                        if (*(param_8 + 0x48) != 0) break;\n                        if (((puStack8 <= *(param_8 + 0x1c) - *(param_8 + 0x4c)) && (*puStack8 == *(param_8 + 0x50))) &&\n                           ((*(param_8 + 0x4c) == 1 || (puVar11[2] == *(param_8 + 0x51))))) goto code_r0x0044493f;\n                    }\n                } while ((*(param_8 + 0x1c) <= puStack8) ||\n                        (iVar4 = fcn.004492f7(puStack8, *(param_8 + 0x48), *(param_8 + 0x1c), param_8 + 0x4c, 0), \n                        iVar4 == 0));\ncode_r0x0044493f:\n                puStack8 = puStack8 + *(param_8 + 0x4c) + -1;\n                puVar11 = puStack8;\n                if (*puStack8 != 0) goto code_r0x00445223;\ncode_r0x00444952:\n                uStack20 = 0;\n                puVar11 = puStack8;\n            }\n            goto code_r0x00444956;\n        }\n        goto code_r0x00445223;\n    }\ncode_r0x00444956:\n    if (((puStack44 & 0x4000) != 0) && (puStack28 == NULL)) {\n        puStack80 = arg_8h;\n        arg_8h = fcn.0044434a();\n        puVar11 = puStack8;\n    }\n    if (uStack20 < 0x2f) {\n        if (uStack20 == 0x2e) {\n            if (puStack32 == 0xfffffffe) {\n                puStack32 = 0xffffffff;\n            }\n            puStack76 = puStack32;\n            puStack64 = puStack68;\n            puStack12 = arg_8h;\n            *arg_8h = 0xb;\ncode_r0x0044530c:\n            arg_8h = arg_8h + 1;\n            puVar11 = puStack8;\n            goto code_r0x00445223;\n        }\n        if (uStack20 == 0) {\ncode_r0x0044528f:\n            *param_5 = puStack32;\n            *param_6 = puStack68;\n            *param_2 = arg_8h;\n            *param_3 = puVar11;\n            if (param_9 != NULL) {\n                *param_9 = arg_8h + (*param_9 - puStack100);\n            }\n            return 1;\n        }\n        if (uStack20 == 0x24) {\n            puStack12 = NULL;\n            *arg_8h = 0x15;\n            goto code_r0x0044530c;\n        }\n        if (uStack20 != 0x28) {\n            if (uStack20 == 0x29) goto code_r0x0044528f;\n            if (uStack20 == 0x2a) {\n                iStack52 = 0;\n            }\n            else {\n                if (uStack20 != 0x2b) goto code_r0x004452c2;\n                iStack52 = 1;\n            }\n            iStack36 = -1;\n            goto code_r0x00445c2f;\n        }\n        puStack8 = puVar11 + 1;\n        puStack28 = NULL;\n        puStack56 = puStack44;\n        puStack24 = 0x59;\n        puStack84 = *(param_8 + 0x20);\n        if (*puStack8 == 0x3f) {\n            puVar3 = puVar11 + 2;\n            uVar2 = *puVar3;\n            if (uVar2 < 0x3b) {\n                if (uVar2 == 0x3a) {\n                    puStack24 = 0x58;\ncode_r0x00444daa:\n                    puStack8 = puVar11 + 3;\n                    puStack12 = arg_8h;\n                    goto code_r0x00444cce;\n                }\n                if (uVar2 == 0x21) {\n                    puStack24 = 0x53;\n                    goto code_r0x00444cc6;\n                }\n                if (uVar2 == 0x23) {\n                    puStack8 = puVar11 + 3;\n                    uVar2 = *puStack8;\n                    if (uVar2 != 0) {\n                        do {\n                            if (uVar2 == 0x29) break;\n                            puStack8 = puStack8 + 1;\n                            uVar2 = *puStack8;\n                        } while (uVar2 != 0);\n                        puVar11 = puStack8;\n                        if (*puStack8 != 0) goto code_r0x00445223;\n                    }\n                    *param_4 = 0x12;\ncode_r0x004464b0:\n                    *param_3 = puStack8;\n                    return 0;\n                }\n                if (uVar2 == 0x26) {\n                    uVar2 = 0x29;\n                    puStack28 = 0x1;\ncode_r0x004453cd:\n                    puStack40 = puVar3 + 1;\n                    uVar7 = *(*puStack40 + *(param_8 + 0xc));\n                    puStack8 = puStack40;\n                    while ((uVar7 & 0x10) != 0) {\n                        puStack8 = puStack8 + 1;\n                        uVar7 = *(*puStack8 + *(param_8 + 0xc));\n                    }\n                    iStack48 = puStack8 - puStack40;\n                    if (param_9 != NULL) {\n                        if (*puStack8 != uVar2) goto code_r0x004463c7;\n                        if (0x20 < puStack8 - puStack40) goto code_r0x0044508c;\n                        uStack20 = 0;\ncode_r0x00445485:\n                        if (puStack28 == NULL) goto code_r0x00445593;\n                        goto code_r0x0044548f;\n                    }\n                    puStack12 = NULL;\n                    puVar14 = *(param_8 + 0x24);\n                    if (0 < *(param_8 + 0x28)) {\n                        do {\n                            iVar4 = fcn.0044a590(puStack40, puVar14 + 2, iStack48);\n                            if (iVar4 == 0) break;\n                            puVar14 = puVar14 + *(param_8 + 0x2c);\n                            puStack12 = puStack12 + 1;\n                        } while (puStack12 < *(param_8 + 0x28));\n                    }\n                    if (puStack12 < *(param_8 + 0x28)) {\n                        uStack20 = CONCAT11(*puVar14, puVar14[1]);\n                        goto code_r0x00445485;\n                    }\n                    uStack20 = fcn.00443d43(puStack40, iStack48, puStack44 >> 3 & 1);\n                    if (0 < uStack20) goto code_r0x00445485;\ncode_r0x0044638c:\n                    *param_4 = 0xf;\n                    goto code_r0x004464b0;\n                }\n                if (uVar2 == 0x27) goto code_r0x00445019;\n                if (uVar2 != 0x28) {\n                    if ((uVar2 < 0x30) || (0x39 < uVar2)) goto code_r0x00444de4;\n                    goto code_r0x00444eff;\n                }\n                puStack24 = 0x5a;\n                puStack8 = puVar3;\n                if ((puVar11[3] == 0x3f) &&\n                   (((uVar2 = puVar11[4],  puStack12 = arg_8h,  uVar2 == 0x3d || (uVar2 == 0x21)) || (uVar2 == 0x3c))))\n                goto code_r0x00444cce;\n                arg_8h[3] = 0x5e;\n                puStack8 = puVar11 + 3;\n                uVar2 = *puStack8;\n                puStack28 = 0x3;\n                if ((uVar2 == 0x52) && (puVar11[4] == 0x26)) {\n                    puStack16 = 0xffffffff;\n                    arg_8h[3] = 0x5f;\n                    puStack8 = puVar11 + 4;\n                }\n                else if (uVar2 == 0x3c) {\n                    puStack16 = 0x3e;\n                }\n                else if (uVar2 == 0x27) {\n                    puStack16 = 0x27;\n                }\n                else {\n                    puStack16 = NULL;\n                    puStack8 = puVar3;\n                }\n                iVar4 = *(param_8 + 0xc);\n                puStack40 = puStack8 + 1;\n                if ((*(*puStack40 + iVar4) & 0x10) == 0) {\n                    *param_4 = 0x1c;\n                    puStack8 = puStack8 + 1;\n                    goto code_r0x004464b0;\n                }\n                uStack20 = 0;\n                uVar6 = *puStack40;\n                uVar2 = *(iVar4 + uVar6);\n                puStack8 = puStack40;\n                while ((uVar2 & 0x10) != 0) {\n                    if (-1 < uStack20) {\n                        if ((*(uVar6 + 0x45a1c8) & 4) == 0) {\n                            uStack20 = 0xffffffff;\n                        }\n                        else {\n                            uStack20 = uStack20 * 10 + -0x30 + uVar6;\n                        }\n                    }\n                    puStack8 = puStack8 + 1;\n                    uVar6 = *puStack8;\n                    uVar2 = *(iVar4 + uVar6);\n                }\n                iStack48 = puStack8 - puStack40;\n                if (((0 < puStack16) && (uVar2 = *puStack8,  puStack8 = puStack8 + 1,  uVar2 != puStack16)) ||\n                   (uVar2 = *puStack8,  puStack8 = puStack8 + 1,  uVar2 != 0x29)) {\n                    *param_4 = 0x1a;\n                    puStack8 = puStack8 + -1;\n                    goto code_r0x004464b0;\n                }\n                puStack12 = arg_8h;\n                if (param_9 != NULL) goto code_r0x00444cce;\n                puStack12 = NULL;\n                puVar14 = *(param_8 + 0x24);\n                if (0 < *(param_8 + 0x28)) {\n                    do {\n                        iVar4 = fcn.0044a590(puStack40, puVar14 + 2, iStack48);\n                        if (iVar4 == 0) break;\n                        puVar14 = puVar14 + *(param_8 + 0x2c);\n                        puStack12 = puStack12 + 1;\n                    } while (puStack12 < *(param_8 + 0x28));\n                }\n                if (puStack12 < *(param_8 + 0x28)) {\n                    uVar6 = CONCAT11(*puVar14, puVar14[1]);\n                }\n                else {\n                    iVar4 = 1;\n                    uVar6 = fcn.00443d43(puStack40, iStack48, puStack44 >> 3 & 1);\n                    if (uVar6 < 1) {\n                        iVar8 = 0;\n                        if (puStack16 != NULL) goto code_r0x0044638c;\n                        if (*puStack40 != 0x52) {\n                            if ((iStack48 == 6) && (iVar4 = fcn.0044a590(puStack40, 0x45a2cc, 6),  iVar4 == 0)) {\n                                arg_8h[3] = 0x60;\n                                puStack28 = 0x1;\n                                puStack12 = arg_8h;\n                                goto code_r0x00444cce;\n                            }\n                            uVar6 = uStack20;\n                            if (uStack20 < 1) {\n                                iVar4 = (-(uStack20 != 0) & 0xffffffec) + 0x23;\n                                goto code_r0x0044644b;\n                            }\n                            goto code_r0x00444bc4;\n                        }\n                        if (iStack48 < 2) {\ncode_r0x00444c2f:\n                            iVar8 = 0xffff;\n                        }\n                        else {\n                            do {\n                                puVar11 = puStack40 + iVar4;\n                                if ((*(*puVar11 + 0x45a1c8) & 4) == 0) goto code_r0x0044638c;\n                                iVar4 = iVar4 + 1;\n                                iVar8 = iVar8 * 10 + -0x30 + *puVar11;\n                            } while (iVar4 < iStack48);\n                            if (iVar8 == 0) goto code_r0x00444c2f;\n                        }\n                        arg_8h[3] = 0x5f;\n                        uVar2 = iVar8 >> 8;\n                        arg_8h[5] = iVar8;\n                        goto code_r0x0044517a;\n                    }\n                }\ncode_r0x00444bc4:\n                arg_8h[4] = uVar6 >> 8;\n                arg_8h[5] = uVar6;\n                puStack12 = arg_8h;\n            }\n            else {\n                if (uVar2 == 0x3c) {\n                    uVar7 = puVar11[3];\n                    if (uVar7 == 0x21) {\n                        puStack24 = 0x55;\n                    }\n                    else {\n                        if (uVar7 != 0x3d) {\n                            if ((*(uVar7 + *(param_8 + 0xc)) & 0x10) != 0) {\ncode_r0x00445019:\n                                puStack40 = puVar3 + 1;\n                                uVar7 = *(*puStack40 + *(param_8 + 0xc));\n                                puStack8 = puStack40;\n                                while ((uVar7 & 0x10) != 0) {\n                                    puStack8 = puStack8 + 1;\n                                    uVar7 = *(*puStack8 + *(param_8 + 0xc));\n                                }\n                                iStack48 = puStack8 - puStack40;\n                                if (param_9 == NULL) {\n                                    puStack16 = *(param_8 + 0x24);\n                                    puStack12 = NULL;\n                                    if (0 < *(param_8 + 0x28)) {\n                                        do {\n                                            bVar16 = false;\n                                            iVar8 = 0;\n                                            bVar17 = true;\n                                            iVar4 = iStack48;\n                                            puVar11 = puStack40;\n                                            puVar3 = puStack16 + 2;\n                                            do {\n                                                if (iVar4 == 0) break;\n                                                iVar4 = iVar4 + -1;\n                                                bVar16 = *puVar11 < *puVar3;\n                                                bVar17 = *puVar11 == *puVar3;\n                                                puVar11 = puVar11 + 1;\n                                                puVar3 = puVar3 + 1;\n                                            } while (bVar17);\n                                            if (!bVar17) {\n                                                iVar8 = (1 - bVar16) - (bVar16 != 0);\n                                            }\n                                            bVar16 = iVar8 < 0;\n                                            if (iVar8 == 0) {\n                                                if (puStack16[iStack48 + 2] != 0) {\n                                                    bVar16 = true;\n                                                    goto code_r0x004450f3;\n                                                }\n                                                if ((puStack44 & 0x80000) == 0) {\n                                                    *param_4 = 0x2b;\n                                                    goto code_r0x004464b0;\n                                                }\n                                            }\n                                            else {\ncode_r0x004450f3:\n                                                if (bVar16) {\n                                                    fcn.0044af60(puStack16 + *(param_8 + 0x2c), puStack16, \n                                                                 (*(param_8 + 0x28) - puStack12) * *(param_8 + 0x2c));\n                                                    break;\n                                                }\n                                            }\n                                            puStack16 = puStack16 + *(param_8 + 0x2c);\n                                            puStack12 = puStack12 + 1;\n                                        } while (puStack12 < *(param_8 + 0x28));\n                                    }\n                                    puVar11 = puStack16;\n                                    *puStack16 = *(param_8 + 0x30) + 1 >> 8;\n                                    puStack16[1] = *(param_8 + 0x30) + 1;\n                                    fcn.0044a6b0(puStack16 + 2, puStack40, iStack48);\n                                    puVar11[iStack48 + 2] = 0;\n                                }\n                                else {\n                                    if (*puStack8 != ((uVar2 != 0x3c) - 1U & 0x17) + 0x27) {\ncode_r0x004463c7:\n                                        *param_4 = 0x2a;\n                                        goto code_r0x004464b0;\n                                    }\n                                    if (9999 < *(param_8 + 0x28)) {\n                                        *param_4 = 0x31;\n                                        goto code_r0x004464b0;\n                                    }\n                                    if ((*(param_8 + 0x2c) < iStack48 + 3) &&\n                                       (*(param_8 + 0x2c) = iStack48 + 3,  0x20 < iStack48)) {\ncode_r0x0044508c:\n                                        *param_4 = 0x30;\n                                        goto code_r0x004464b0;\n                                    }\n                                }\n                                puStack8 = puStack8 + 1;\n                                *(param_8 + 0x28) = *(param_8 + 0x28) + 1;\n                                goto code_r0x00445164;\n                            }\n                            puStack8 = puVar11 + 3;\n                            *param_4 = 0x18;\n                            goto code_r0x004464b0;\n                        }\n                        puStack24 = 0x54;\n                    }\n                    puStack8 = puVar11 + 4;\n                }\n                else {\n                    if (uVar2 != 0x3d) {\n                        if (uVar2 == 0x3e) {\n                            puStack24 = 0x57;\n                            goto code_r0x00444daa;\n                        }\n                        if (uVar2 == 0x43) {\n                            *arg_8h = 0x4d;\n                            puStack80 = arg_8h;\n                            iStack112 = 1;\n                            iVar4 = 0;\n                            while( true ) {\n                                puVar3 = puVar3 + 1;\n                                if ((*(*puVar3 + 0x45a1c8) & 4) == 0) break;\n                                iVar4 = iVar4 * 10 + -0x30 + *puVar3;\n                            }\n                            puStack8 = puVar3;\n                            if (*puVar3 == 0x29) {\n                                if (iVar4 < 0x100) {\n                                    arg_8h[1] = iVar4;\n                                    arg_8h[2] = puVar3 + (1 - *(param_8 + 0x18)) >> 8;\n                                    puStack8._0_1_ = puVar3;\n                                    cVar1 = *(param_8 + 0x18);\n                                    arg_8h[4] = 0;\n                                    arg_8h[3] = (puStack8 - cVar1) + 1;\n                                    arg_8h[5] = 0;\n                                    arg_8h = arg_8h + 6;\ncode_r0x00444fd5:\n                                    puStack12 = NULL;\n                                    puStack56 = puStack44;\n                                    puVar11 = puStack8;\n                                    goto code_r0x00445223;\n                                }\n                                *param_4 = 0x26;\n                            }\n                            else {\n                                *param_4 = 0x27;\n                            }\n                        }\n                        else if (uVar2 == 0x50) {\n                            puVar3 = puVar11 + 3;\n                            uVar2 = *puVar3;\n                            if ((uVar2 == 0x3d) || (uVar2 == 0x3e)) {\n                                puStack28 = uVar2 == 0x3e;\n                                uVar2 = 0x29;\n                                goto code_r0x004453cd;\n                            }\n                            if (uVar2 == 0x3c) goto code_r0x00445019;\n                            *param_4 = 0x29;\n                            puStack8 = puVar3;\n                        }\n                        else {\n                            if (uVar2 != 0x52) {\ncode_r0x00444de4:\n                                puStack24 = NULL;\n                                puStack16 = NULL;\n                                ppuVar9 = &puStack16;\n                                while ((puStack8 = puVar3,  uVar2 != 0x29 && (uVar2 != 0x3a))) {\n                                    puStack8 = puVar3 + 1;\n                                    if (uVar2 < 0x6a) {\n                                        if (uVar2 == 0x69) {\n                                            *ppuVar9 = *ppuVar9 | 1;\n                                        }\n                                        else if (uVar2 == 0x2d) {\n                                            ppuVar9 = &puStack24;\n                                        }\n                                        else if (uVar2 == 0x4a) {\n                                            *ppuVar9 = *ppuVar9 | 0x80000;\n                                            *(param_8 + 0x3c) = *(param_8 + 0x3c) | 0x8000000;\n                                        }\n                                        else if (uVar2 == 0x55) {\n                                            *ppuVar9 = *ppuVar9 | 0x200;\n                                        }\n                                        else {\n                                            if (uVar2 != 0x58) goto code_r0x0044639a;\n                                            *ppuVar9 = *ppuVar9 | 0x40;\n                                        }\n                                    }\n                                    else if (uVar2 == 0x6d) {\n                                        *ppuVar9 = *ppuVar9 | 2;\n                                    }\n                                    else if (uVar2 == 0x73) {\n                                        *ppuVar9 = *ppuVar9 | 4;\n                                    }\n                                    else {\n                                        if (uVar2 != 0x78) {\ncode_r0x0044639a:\n                                            *param_4 = 0xc;\n                                            puStack8 = puVar3;\n                                            goto code_r0x004464b0;\n                                        }\n                                        *ppuVar9 = *ppuVar9 | 8;\n                                    }\n                                    uVar2 = puVar3[1];\n                                    puVar3 = puStack8;\n                                }\n                                puStack56 = (puStack16 | puStack44) & ~puStack24;\n                                if (*puVar3 != 0x29) {\n                                    puStack24 = 0x58;\n                                    puStack12 = arg_8h;\n                                    puStack8 = puVar3 + 1;\n                                    goto code_r0x00444cce;\n                                }\n                                if ((arg_8h == *(param_8 + 0x14) + 3) && ((param_9 == NULL || (*param_9 == 0x6)))) {\n                                    *(param_8 + 0x3c) = puStack56;\n                                    puStack44 = puStack56;\n                                }\n                                else {\n                                    if (((puStack56 ^ puStack44) & 7) != 0) {\n                                        *arg_8h = 0x13;\n                                        arg_8h[1] = puStack56 & 7;\n                                        arg_8h = arg_8h + 2;\n                                    }\n                                    *param_1 = puStack56;\n                                    puStack164 = puStack56 >> 9 & 1;\n                                    puStack44 = puStack56;\n                                    uStack160 = puStack164 ^ 1;\n                                    uStack104 = (puStack56 & 1) << 8;\n                                }\n                                goto code_r0x00444fd5;\n                            }\n                            puVar3 = puVar11 + 3;\ncode_r0x00444eff:\n                            uStack20 = 0;\n                            puStack8 = puVar3;\n                            while ((*(*puStack8 + 0x45a1c8) & 4) != 0) {\n                                uStack20 = uStack20 * 10 + -0x30 + *puStack8;\n                                puStack8 = puStack8 + 1;\n                            }\n                            if (*puStack8 == 0x29) {\ncode_r0x0044548f:\n                                puStack16 = *(param_8 + 0x14);\n                                puStack12 = arg_8h;\n                                if (param_9 == NULL) {\n                                    *arg_8h = 0;\n                                    if (uStack20 != 0) {\n                                        puStack16 = fcn.00444079(uStack20);\n                                    }\n                                    if (puStack16 == NULL) {\n                                        iVar4 = fcn.00443d43(0, uStack20, puStack44 >> 3 & 1);\n                                        if (iVar4 < 0) goto code_r0x0044638c;\n                                        puStack16 = uStack20 + *(param_8 + 0x14);\n                                        **(param_8 + 0x20) = arg_8h + (4 - *(param_8 + 0x14)) >> 8;\n                                        *(*(param_8 + 0x20) + 1) = (arg_8h - *(param_8 + 0x14)) + '\\x04';\n                                        *(param_8 + 0x20) = *(param_8 + 0x20) + 2;\n                                    }\n                                    else if ((CONCAT11(puStack16[1], puStack16[2]) == 0) &&\n                                            (iVar4 = fcn.00444227(puStack16, arg_8h, 0),  iVar4 != 0)) {\n                                        *param_4 = 0x28;\n                                        goto code_r0x004464b0;\n                                    }\n                                }\n                                *arg_8h = 0x57;\n                                arg_8h[1] = 0;\n                                arg_8h[2] = 6;\n                                arg_8h[3] = 0x4c;\n                                arg_8h[4] = puStack16 - *(param_8 + 0x14) >> 8;\n                                arg_8h[5] = puStack16 - *(param_8 + 0x14);\n                                arg_8h[6] = 0x4f;\n                                arg_8h[7] = 0;\n                                arg_8h[8] = 6;\n                                arg_8h = arg_8h + 9;\n                                iStack92 = 9;\n                                puVar11 = puStack8;\n                                if (puStack32 == 0xfffffffe) {\n                                    puStack32 = 0xffffffff;\n                                }\n                                goto code_r0x00445223;\n                            }\n                            *param_4 = 0x1d;\n                        }\n                        goto code_r0x004464b0;\n                    }\n                    puStack24 = 0x52;\ncode_r0x00444cc6:\n                    puStack8 = puVar11 + 3;\n                }\n                puStack12 = NULL;\n            }\n        }\n        else {\n            if ((puStack44 & 0x1000) != 0) {\n                puStack24 = 0x58;\n                puStack12 = arg_8h;\n                goto code_r0x00444cce;\n            }\ncode_r0x00445164:\n            *(param_8 + 0x30) = *(param_8 + 0x30) + 1;\n            arg_8h[3] = *(param_8 + 0x30) >> 8;\n            uVar2 = *(param_8 + 0x30);\n            puStack28 = 0x2;\ncode_r0x0044517a:\n            arg_8h[4] = uVar2;\n            puStack12 = arg_8h;\n        }\ncode_r0x00444cce:\n        *arg_8h = puStack24;\n        puStack16 = *(param_8 + 0x40);\n        arg_1ch = 0;\n        iStack92 = 0;\n        if ((puStack24 == 0x54) || (puStack24 == 0x55)) {\n            arg_1ch = 1;\n        }\n        puStack60 = arg_8h;\n        iVar4 = fcn.004464c2(puStack56, puStack44 & 7, &puStack60, &puStack8, param_4, arg_1ch, puStack28, &puStack108, \n                             &puStack96, param_7, param_8, -(param_9 != NULL) & &iStack92);\n        if (iVar4 == 0) goto code_r0x004464b0;\n        puVar3 = puStack24;\n        if (puStack24 == 0x5a) {\n            iVar4 = 0;\n            puVar11 = arg_8h;\n            do {\n                iVar4 = iVar4 + 1;\n                puVar11 = puVar11 + CONCAT11(puVar11[1], puVar11[2]);\n            } while (*puVar11 != 0x4f);\n            if (arg_8h[3] == 0x60) {\n                if (1 < iVar4) {\n                    *param_4 = 0x36;\n                    goto code_r0x004464b0;\n                }\n                puVar3 = 0x60;\n            }\n            else {\n                if (2 < iVar4) {\n                    *param_4 = 0x1b;\n                    goto code_r0x004464b0;\n                }\n                if (iVar4 == 1) {\n                    puStack96 = 0xffffffff;\n                    puStack108 = 0xffffffff;\n                }\n            }\n        }\n        if (*puStack8 != 0x29) {\n            *param_4 = 0xe;\n            goto code_r0x004464b0;\n        }\n        puVar11 = puStack60;\n        if (param_9 != NULL) {\n            *param_9 = *param_9 + iStack92 + -6;\n            arg_8h[1] = 0;\n            arg_8h[2] = 3;\n            arg_8h[3] = 0x4f;\n            arg_8h[4] = 0;\n            arg_8h[5] = 3;\n            puVar11 = arg_8h + 6;\n        }\n        arg_8h = puVar11;\n        puVar11 = puStack8;\n        if (puVar3 != 0x60) {\n            puStack64 = puStack68;\n            puStack76 = puStack32;\n            uStack120 = 0;\n            if (puVar3 < 0x57) {\n                if (puVar3 == 0x52) goto joined_r0x0044523a;\n            }\n            else {\n                if (puStack32 == 0xfffffffe) {\n                    if (puStack108 < 0) {\n                        puStack32 = 0xffffffff;\n                    }\n                    else {\n                        puStack32 = puStack108;\n                        uStack120 = 1;\n                    }\n                    uStack120 = puStack108 >= 0;\n                    puStack76 = 0xffffffff;\njoined_r0x0044523a:\n                    if (puStack96 < 0) goto code_r0x00445223;\n                }\n                else {\n                    if (puStack108 < 0) goto joined_r0x0044523a;\n                    if (puStack96 < 0) {\n                        puStack96 = puStack108 | puStack16;\n                        goto joined_r0x0044523a;\n                    }\n                }\n                puStack68 = puStack96;\n            }\n        }\n    }\n    else {\n        if (uStack20 != 0x3f) {\n            if (uStack20 == 0x5b) {\n                uVar2 = puVar11[1];\n                puStack12 = arg_8h;\n                if ((((uVar2 == 0x3a) || (uVar2 == 0x2e)) || (uVar2 == 0x3d)) &&\n                   (iVar4 = fcn.00444259(&puStack116),  puVar11 = puStack8,  iVar4 != 0)) {\n                    iVar4 = ((puStack8[1] != 0x3a) - 1 & 0xffffffee) + 0x1f;\ncode_r0x0044644b:\n                    *param_4 = iVar4;\n                }\n                else {\n                    puStack8 = puVar11 + 1;\n                    puVar3 = puVar11[1];\n                    bVar16 = puVar3 != 0x5e;\n                    if (bVar16) {\n                        puStack16 = NULL;\n                    }\n                    else {\n                        puStack8 = puVar11 + 2;\n                        puVar3 = puVar11[2];\n                        puStack16 = 0x1;\n                    }\n                    puStack16 = !bVar16;\n                    puStack24 = NULL;\n                    puStack28 = 0xffffffff;\n                    puVar12 = &uStack156;\n                    for (iVar4 = 8; iVar4 != 0; iVar4 = iVar4 + -1) {\n                        *puVar12 = 0;\n                        puVar12 = puVar12 + 1;\n                    }\n                    if (puVar3 != NULL) {\n                        do {\n                            if (iStack72 == 0) {\n                                if (puVar3 == 0x5b) {\n                                    uVar2 = puStack8[1];\n                                    if ((((uVar2 != 0x3a) && (uVar2 != 0x2e)) && (uVar2 != 0x3d)) ||\n                                       (iVar4 = fcn.00444259(&puStack116),  iVar4 == 0)) goto code_r0x00445961;\n                                    puStack64 = *(param_8 + 8);\n                                    if (puStack8[1] == 0x3a) {\n                                        puVar11 = puStack8 + 2;\n                                        uVar2 = *puVar11;\n                                        if (uVar2 == 0x5e) {\n                                            puVar11 = puStack8 + 3;\n                                        }\n                                        puStack56 = uVar2 == 0x5e;\n                                        puStack8 = puVar11;\n                                        iVar4 = fcn.0044428f(puVar11, puStack116 - puVar11);\n                                        puVar11 = puStack64;\n                                        if (-1 < iVar4) {\n                                            if (((puStack44 & 1) != 0) && (iVar4 < 3)) {\n                                                iVar4 = 0;\n                                            }\n                                            iVar4 = iVar4 * 0xc;\n                                            puVar12 = puStack64 + *(iVar4 + 0x45a120);\n                                            puVar15 = &uStack200;\n                                            for (iVar8 = 8; iVar8 != 0; iVar8 = iVar8 + -1) {\n                                                *puVar15 = *puVar12;\n                                                puVar12 = puVar12 + 1;\n                                                puVar15 = puVar15 + 1;\n                                            }\n                                            iVar8 = *(iVar4 + 0x45a124);\n                                            iVar4 = *(iVar4 + 0x45a128);\n                                            iVar5 = 0;\n                                            if (-1 < iVar8) {\n                                                iVar13 = 0;\n                                                if (iVar4 < 0) {\n                                                    do {\n                                                        *(&uStack200 + iVar13) =\n                                                             *(&uStack200 + iVar13) & ~puVar11[iVar13 + iVar8];\n                                                        iVar13 = iVar13 + 1;\n                                                    } while (iVar13 < 0x20);\n                                                }\n                                                else {\n                                                    do {\n                                                        *(&uStack200 + iVar13) =\n                                                             *(&uStack200 + iVar13) | puVar11[iVar13 + iVar8];\n                                                        iVar13 = iVar13 + 1;\n                                                    } while (iVar13 < 0x20);\n                                                }\n                                            }\n                                            if (iVar4 < 0) {\n                                                iVar4 = -iVar4;\n                                            }\n                                            if (iVar4 == 1) {\n                                                uStack200._1_1_ = uStack200._1_1_ & 0xc3;\n                                            }\n                                            else if (iVar4 == 2) {\n                                                uStack189 = uStack189 & 0x7f;\n                                            }\n                                            if (puStack56 == NULL) {\n                                                do {\n                                                    *(&uStack156 + iVar5) =\n                                                         *(&uStack156 + iVar5) | *(&uStack200 + iVar5);\n                                                    iVar5 = iVar5 + 1;\n                                                } while (iVar5 < 0x20);\n                                            }\n                                            else {\n                                                do {\n                                                    *(&uStack156 + iVar5) =\n                                                         *(&uStack156 + iVar5) | ~*(&uStack200 + iVar5);\n                                                    iVar5 = iVar5 + 1;\n                                                } while (iVar5 < 0x20);\n                                            }\n                                            puStack24 = 0xa;\n                                            puVar11 = puStack116 + 1;\n                                            goto code_r0x00445b30;\n                                        }\n                                        *param_4 = 0x1e;\n                                    }\n                                    else {\n                                        *param_4 = 0x1f;\n                                    }\n                                    goto code_r0x004464b0;\n                                }\n                                if (puVar3 != 0x5c) goto code_r0x00445961;\n                                puVar3 = fcn.00443994(&puStack8, param_4, *(param_8 + 0x30), puStack44, 1);\n                                puVar10 = puStack24;\n                                if (*param_4 != 0) goto code_r0x004464b0;\n                                if (puVar3 == 0xfffffffc) {\n                                    puVar3 = 0x8;\n                                    goto code_r0x00445961;\n                                }\n                                if (puVar3 == 0xfffffff0) {\n                                    puVar3 = 0x58;\n                                    goto code_r0x00445961;\n                                }\n                                if (puVar3 == 0xfffffff1) {\n                                    puVar3 = 0x52;\n                                    goto code_r0x00445961;\n                                }\n                                puVar11 = puStack8;\n                                if (puVar3 == 0xffffffec) {\n                                    if ((puStack8[1] != 0x5c) || (puVar11 = puStack8 + 2,  puStack8[2] != 0x45)) {\n                                        iStack72 = 1;\n                                        puVar11 = puStack8;\n                                    }\n                                }\n                                else {\n                                    if (-1 < puVar3) goto code_r0x00445961;\n                                    puStack24 = puStack24 + 2;\n                                    iVar4 = *(param_8 + 8);\n                                    if (param_9 == NULL) {\n                                        if (puVar3 == 0xfffffffb) {\n                                            iVar8 = 0;\n                                            do {\n                                                *(&uStack156 + iVar8) = *(&uStack156 + iVar8) | ~*(iVar4 + 0x40 + iVar8)\n                                                ;\n                                                iVar8 = iVar8 + 1;\n                                            } while (iVar8 < 0x20);\n                                        }\n                                        else if (puVar3 == 0xfffffffa) {\n                                            iVar8 = 0;\n                                            do {\n                                                *(&uStack156 + iVar8) = *(&uStack156 + iVar8) | *(iVar4 + 0x40 + iVar8);\n                                                iVar8 = iVar8 + 1;\n                                            } while (iVar8 < 0x20);\n                                        }\n                                        else if (puVar3 == 0xfffffff9) {\n                                            iVar8 = 0;\n                                            do {\n                                                puVar3 = &uStack156 + iVar8;\n                                                *puVar3 = *puVar3 | ~puVar3[iVar4 - &uStack156];\n                                                iVar8 = iVar8 + 1;\n                                            } while (iVar8 < 0x20);\n                                            uStack156._1_1_ = uStack156._1_1_ | 8;\n                                        }\n                                        else if (puVar3 == 0xfffffff8) {\n                                            iVar8 = 0;\n                                            do {\n                                                puVar3 = &uStack156 + iVar8;\n                                                *puVar3 = *puVar3 | puVar3[iVar4 - &uStack156];\n                                                iVar8 = iVar8 + 1;\n                                            } while (iVar8 < 0x20);\n                                            uStack156._1_1_ = uStack156._1_1_ & 0xf7;\n                                        }\n                                        else if (puVar3 == 0xfffffff7) {\n                                            iVar8 = 0;\n                                            do {\n                                                *(&uStack156 + iVar8) = *(&uStack156 + iVar8) | ~*(iVar4 + 0xa0 + iVar8)\n                                                ;\n                                                iVar8 = iVar8 + 1;\n                                            } while (iVar8 < 0x20);\n                                        }\n                                        else {\n                                            if (puVar3 != 0xfffffff6) {\n                                                bVar16 = puVar3 == 0xffffffed;\n                                                goto code_r0x00445947;\n                                            }\n                                            iVar8 = 0;\n                                            do {\n                                                *(&uStack156 + iVar8) = *(&uStack156 + iVar8) | *(iVar4 + 0xa0 + iVar8);\n                                                iVar8 = iVar8 + 1;\n                                            } while (iVar8 < 0x20);\n                                        }\n                                    }\n                                    else if ((((puVar3 != 0xfffffffa) && (puVar3 != 0xfffffffb)) &&\n                                             (puVar3 != 0xfffffff6)) &&\n                                            ((puVar3 != 0xfffffff7 && (puVar3 != 0xfffffff8)))) {\n                                        bVar16 = puVar3 == 0xfffffff9;\ncode_r0x00445947:\n                                        if (!bVar16) {\n                                            if ((puStack44 & 0x40) == 0) {\n                                                puStack24 = puVar10;\n                                                puVar3 = *puStack8;\n                                                goto code_r0x00445961;\n                                            }\n                                            *param_4 = 7;\n                                            goto code_r0x004464b0;\n                                        }\n                                    }\n                                }\n                            }\n                            else {\n                                if ((puVar3 == 0x5c) && (puStack8[1] == 0x45)) {\n                                    iStack72 = 0;\n                                    puVar11 = puStack8 + 1;\n                                    goto code_r0x00445b30;\n                                }\ncode_r0x00445961:\n                                uVar2 = puStack8[1];\n                                while ((puVar11 = puStack8,  uVar2 == 0x5c && (puStack8[2] == 0x45))) {\n                                    iStack72 = 0;\n                                    puStack8 = puStack8 + 2;\n                                    uVar2 = puVar11[3];\n                                }\n                                puStack56 = puStack8;\n                                if ((iStack72 == 0) && (puStack8[1] == 0x2d)) {\n                                    puStack8 = puStack8 + 2;\n                                    if (*puStack8 == 0x5c) {\n                                        do {\n                                            if (puStack8[1] != 0x45) break;\n                                            puStack8 = puStack8 + 2;\n                                        } while (*puStack8 == 0x5c);\n                                        do {\n                                            puVar10 = puStack8;\n                                            if ((*puStack8 != 0x5c) || (puStack8[1] != 0x51)) break;\n                                            puStack8 = puStack8 + 2;\n                                            if ((*puStack8 != 0x5c) || (puVar10[3] != 0x45)) {\n                                                iStack72 = 1;\n                                                break;\n                                            }\n                                            puStack8 = puVar10 + 4;\n                                        } while( true );\n                                    }\n                                    uVar2 = *puStack8;\n                                    if ((uVar2 == 0) || ((iStack72 == 0 && (uVar2 == 0x5d)))) {\n                                        puStack8 = puVar11;\n                                    }\n                                    else {\n                                        puStack64 = uVar2;\n                                        if ((iStack72 == 0) && (uVar2 == 0x5c)) {\n                                            puStack64 = fcn.00443994(&puStack8, param_4, *(param_8 + 0x30), puStack44, 1\n                                                                    );\n                                            if (*param_4 != 0) goto code_r0x004464b0;\n                                            if (puStack64 < 0) {\n                                                if (puStack64 == 0xfffffffc) {\n                                                    puStack64 = 0x8;\n                                                }\n                                                else if (puStack64 == 0xfffffff0) {\n                                                    puStack64 = 0x58;\n                                                }\n                                                else {\n                                                    if (puStack64 != 0xfffffff1) {\n                                                        puStack8 = puStack56;\n                                                        goto code_r0x00445ae6;\n                                                    }\n                                                    puStack64 = 0x52;\n                                                }\n                                            }\n                                        }\n                                        if (puStack64 < puVar3) {\n                                            *param_4 = 8;\n                                            goto code_r0x004464b0;\n                                        }\n                                        if (puStack64 != puVar3) {\n                                            puStack24 = puStack64 + puStack24 + (1 - puVar3);\n                                            puStack28 = puStack64;\n                                            puVar11 = puStack8;\n                                            if ((param_9 == NULL) && (puVar3 <= puStack64)) {\n                                                puStack56 = puStack44 & 1;\n                                                do {\n                                                    puVar11 = &uStack156 + (puVar3 + (puVar3 >> 0x1f & 7) >> 3);\n                                                    *puVar11 = *puVar11 | '\\x01' << (puVar3 & 7);\n                                                    if (puStack56 != NULL) {\n                                                        puVar11 = &uStack156 + (puVar3[*(param_8 + 4)] >> 3);\n                                                        *puVar11 = *puVar11 | '\\x01' << (puVar3[*(param_8 + 4)] & 7);\n                                                    }\n                                                    puVar3 = puVar3 + 1;\n                                                    puVar11 = puStack8;\n                                                } while (puVar3 <= puStack64);\n                                            }\n                                            goto code_r0x00445b30;\n                                        }\n                                    }\n                                }\ncode_r0x00445ae6:\n                                puVar11 = &uStack156 + (puVar3 + (puVar3 >> 0x1f & 7) >> 3);\n                                *puVar11 = *puVar11 | '\\x01' << (puVar3 & 7);\n                                if ((puStack44 & 1) != 0) {\n                                    puVar11 = puVar3 + *(param_8 + 4);\n                                    puVar3 = *puVar11;\n                                    puVar10 = &uStack156 + (puVar3 >> 3);\n                                    *puVar10 = *puVar10 | '\\x01' << (*puVar11 & 7);\n                                }\n                                puStack24 = puStack24 + 1;\n                                puStack28 = puVar3;\n                                puVar11 = puStack8;\n                            }\ncode_r0x00445b30:\n                            puStack8 = puVar11;\n                            puStack8 = puStack8 + 1;\n                            puVar3 = *puStack8;\n                            if (puVar3 == NULL) goto code_r0x0044647b;\n                        } while ((puVar3 != 0x5d) || (iStack72 != 0));\n                        if (puStack24 == 0x1) {\n                            puStack64 = puStack68;\n                            if (puStack16 == NULL) {\n                                uVar6 = puStack28 & 0xff;\n                                goto code_r0x00445b85;\n                            }\n                            if (puStack32 == 0xfffffffe) {\n                                puStack32 = 0xffffffff;\n                            }\n                            puStack76 = puStack32;\n                            *arg_8h = 0x18;\n                            arg_8h = arg_8h + 1;\ncode_r0x00445601:\n                            *arg_8h = puStack28;\n                            arg_8h = arg_8h + 1;\n                            puStack76 = puStack32;\n                            puStack64 = puStack68;\n                            puVar11 = puStack8;\n                        }\n                        else {\n                            if (puStack32 == 0xfffffffe) {\n                                puStack32 = 0xffffffff;\n                            }\n                            puStack76 = puStack32;\n                            puStack64 = puStack68;\n                            if (puStack16 == NULL) {\n                                *arg_8h = 0x48;\n                                puVar12 = &uStack156;\n                                puVar15 = arg_8h + 1;\n                                for (iVar4 = 8; iVar4 != 0; iVar4 = iVar4 + -1) {\n                                    *puVar15 = *puVar12;\n                                    puVar12 = puVar12 + 1;\n                                    puVar15 = puVar15 + 1;\n                                }\n                            }\n                            else {\n                                *arg_8h = 0x49;\n                                puVar11 = arg_8h + 1;\n                                if (param_9 == NULL) {\n                                    iVar4 = &uStack156 - puVar11;\n                                    iVar8 = 0x20;\n                                    do {\n                                        *puVar11 = ~puVar11[iVar4];\n                                        puVar11 = puVar11 + 1;\n                                        iVar8 = iVar8 + -1;\n                                    } while (iVar8 != 0);\n                                }\n                            }\n                            arg_8h = arg_8h + 0x21;\n                            puVar11 = puStack8;\n                        }\n                        goto code_r0x00445223;\n                    }\ncode_r0x0044647b:\n                    *param_4 = 6;\n                }\n                goto code_r0x004464b0;\n            }\n            if (uStack20 == 0x5c) {\n                puStack116 = puVar11;\n                uVar6 = fcn.00443994(&puStack8, param_4, *(param_8 + 0x30), puStack44, 0);\n                if (*param_4 != 0) goto code_r0x004464b0;\n                if (uVar6 < 0) {\n                    iVar4 = -uVar6;\n                    if (uVar6 == 0xffffffec) {\n                        if ((puStack8[1] != 0x5c) || (puVar11 = puStack8 + 2,  puStack8[2] != 0x45)) {\n                            iStack72 = 1;\n                            puVar11 = puStack8;\n                        }\n                    }\n                    else {\n                        puVar11 = puStack8;\n                        if (uVar6 != 0xffffffed) {\n                            if (((puStack32 == 0xfffffffe) && (uVar6 != 0xfffffffc && 3 < iVar4)) && (iVar4 < 0x11)) {\n                                puStack32 = 0xffffffff;\n                            }\n                            puStack76 = puStack32;\n                            puStack64 = puStack68;\n                            if (uVar6 == 0xffffffeb) {\n                                puVar3 = puStack8 + 1;\n                                if ((*puVar3 == 0x3c) || (*puVar3 == 0x27)) {\n                                    puStack28 = NULL;\n                                    uVar2 = ((*puVar3 != 0x3c) - 1U & 0x17) + 0x27;\n                                    goto code_r0x004453cd;\n                                }\n                            }\n                            if (0x15 < iVar4) {\n                                uStack20 = -uVar6 - 0x16;\ncode_r0x00445593:\n                                if (puStack32 == 0xfffffffe) {\n                                    puStack32 = 0xffffffff;\n                                }\n                                *arg_8h = 0x4b;\n                                puStack12 = arg_8h;\n                                arg_8h[1] = uStack20 >> 8;\n                                arg_8h[2] = uStack20;\n                                arg_8h = arg_8h + 3;\n                                uVar6 = 1;\n                                if (uStack20 < 0x20) {\n                                    uVar6 = 1 << (uStack20 & 0x1f);\n                                }\n                                *(param_8 + 0x38) = *(param_8 + 0x38) | uVar6;\n                                puVar11 = puStack8;\n                                if (*(param_8 + 0x34) < uStack20) {\n                                    *(param_8 + 0x34) = uStack20;\n                                }\n                                goto code_r0x00445223;\n                            }\n                            if (((uVar6 != 0xfffffff0) && (uVar6 != 0xfffffff3)) && (uVar6 != 0xfffffff2)) {\n                                if ((uVar6 == 0xfffffffc || iVar4 < 4) || (0x10 < iVar4)) {\n                                    puStack12 = NULL;\n                                }\n                                else {\n                                    puStack12 = arg_8h;\n                                }\n                                puStack28._0_1_ = -uVar6;\n                                goto code_r0x00445601;\n                            }\n                            *param_4 = 0x2d;\n                            goto code_r0x004464b0;\n                        }\n                    }\n                    goto code_r0x00445223;\n                }\ncode_r0x00445b85:\n                uStack20._0_1_ = uVar6;\n            }\n            else {\n                if (uStack20 == 0x5e) {\n                    if (((puStack44 & 2) != 0) && (puStack32 == 0xfffffffe)) {\n                        puStack32 = 0xffffffff;\n                    }\n                    puStack12 = NULL;\n                    *arg_8h = 0x14;\n                    goto code_r0x0044530c;\n                }\n                if (uStack20 == 0x7b) {\n                    if (puStack28 != NULL) {\n                        puStack8 = fcn.00443cae(&iStack52, &iStack36, param_4);\n                        if (*param_4 == 0) goto code_r0x00445c2f;\n                        goto code_r0x004464b0;\n                    }\n                }\n                else if (uStack20 == 0x7c) goto code_r0x0044528f;\ncode_r0x004452c2:\n            }\n            *arg_8h = puStack44 & 1 | 0x16;\n            puStack12 = arg_8h;\n            arg_8h[1] = uStack20;\n            puVar11 = puStack8;\n            if (puStack32 == 0xfffffffe) {\n                puStack76 = 0xffffffff;\n                puStack64 = puStack68;\n                puStack32 = uStack20 | uStack104;\n                arg_8h = arg_8h + 2;\n            }\n            else {\n                puStack64 = puStack68;\n                puStack76 = puStack32;\n                puStack68 = arg_8h[1] | *(param_8 + 0x40) | uStack104;\n                arg_8h = arg_8h + 2;\n            }\n            goto code_r0x00445223;\n        }\n        iStack52 = 0;\n        iStack36 = 1;\ncode_r0x00445c2f:\n        puVar11 = puStack12;\n        if (puStack12 == NULL) {\n            *param_4 = 9;\n            goto code_r0x004464b0;\n        }\n        if (iStack52 == 0) {\n            puStack32 = puStack76;\n            puStack68 = puStack64;\n        }\n        puStack28 = NULL;\n        iStack48 = 0;\n        uStack168 = -(iStack52 != iStack36) & 0x200;\n        puVar3 = puStack8 + 1;\n        puStack60 = puStack12;\n        if (*puVar3 == 0x2b) {\n            iStack48 = 1;\n            puStack40 = NULL;\n            puStack8 = puVar3;\n        }\n        else {\n            puStack40 = puStack164;\n            if (*puVar3 == 0x3f) {\n                puStack40 = uStack160;\n                puStack8 = puVar3;\n            }\n        }\n        uVar2 = *puStack12;\n        if ((uVar2 == 0x16) || (uVar2 == 0x17)) {\n            uVar6 = arg_8h[-1];\n            if (1 < iStack52) {\n                puStack68 = *(param_8 + 0x40) | uVar6 | uStack104;\n            }\n            uStack20 = uVar6;\n            if ((iStack48 == 0) && (iStack36 < 0)) {\n                arg_8h_00 = uVar2;\ncode_r0x0044610e:\n                iVar4 = fcn.0044438b(arg_8h_00, uVar6, 0, puStack8 + 1, puStack44);\n                if (iVar4 != 0) {\n                    puStack40 = NULL;\n                    iStack48 = 1;\n                }\n            }\ncode_r0x00446125:\n            if ((*puStack12 == 0xe) || (*puStack12 == 0xd)) {\n                puStack16 = puStack12[1];\n                puStack24 = puStack12[2];\n            }\n            else {\n                puStack24 = 0xffffffff;\n                puStack16 = 0xffffffff;\n            }\n            puVar11 = puStack12;\n            if (iStack36 != 0) {\n                if (iStack36 != 1) {\n                    *(param_8 + 0x44) = 1;\n                }\n                puStack40 = puStack40 + puStack28;\n                cVar1 = puStack40;\n                if (iStack52 == 0) {\n                    if (iStack36 == -1) {\ncode_r0x0044620b:\n                        uVar2 = cVar1 + 0x19;\n                    }\n                    else {\n                        if (iStack36 != 1) {\n                            *puStack12 = cVar1 + 0x1f;\n                            puStack12[2] = iStack36;\n                            goto code_r0x0044624c;\n                        }\ncode_r0x0044623b:\n                        uVar2 = cVar1 + 0x1d;\n                    }\ncode_r0x0044623d:\n                    *puVar11 = uVar2;\n                    arg_8h = puVar11 + 1;\n                }\n                else {\n                    if (iStack52 == 1) {\n                        if (iStack36 == -1) {\n                            uVar2 = cVar1 + 0x1b;\n                            goto code_r0x0044623d;\n                        }\n                        puVar11 = arg_8h;\n                        if (iStack36 == 1) goto code_r0x0044634c;\n                        *arg_8h = cVar1 + 0x1f;\n                        puVar11 = arg_8h + 1;\n                        *puVar11 = iStack36 + -1 >> 8;\n                        arg_8h[2] = iStack36 - 1;\n                    }\n                    else {\n                        *puStack12 = puStack28 + 0x21;\n                        puStack12[1] = iStack52 >> 8;\n                        puStack12[2] = iStack52;\n                        arg_8h = puStack12 + 3;\n                        if (iStack36 < 0) {\n                            *arg_8h = uStack20;\n                            puVar11 = puStack12 + 4;\n                            if (-1 < puStack16) {\n                                *puVar11 = puStack16;\n                                puStack12[5] = puStack24;\n                                puVar11 = puStack12 + 6;\n                            }\n                            goto code_r0x0044620b;\n                        }\n                        if (iStack36 == iStack52) goto code_r0x00446256;\n                        *arg_8h = uStack20;\n                        puVar11 = puStack12 + 4;\n                        if (-1 < puStack16) {\n                            *puVar11 = puStack16;\n                            puStack12[5] = puStack24;\n                            puVar11 = puStack12 + 6;\n                        }\n                        iStack36 = iStack36 - iStack52;\n                        if (iStack36 == 1) goto code_r0x0044623b;\n                        *puVar11 = cVar1 + 0x1f;\n                        puVar11[2] = iStack36;\ncode_r0x0044624c:\n                        puVar11 = puVar11 + 1;\n                        *puVar11 = iStack36 >> 8;\n                    }\n                    arg_8h = puVar11 + 2;\n                }\ncode_r0x00446256:\n                *arg_8h = uStack20;\n                arg_8h = arg_8h + 1;\n                goto code_r0x0044625c;\n            }\n        }\n        else {\n            if (uVar2 == 0x18) {\n                uVar6 = puStack12[1];\n                puStack28 = 0xd;\n                uStack20 = uVar6;\n                if ((iStack48 == 0) && (iStack36 < 0)) {\n                    arg_8h_00 = 0x18;\n                    goto code_r0x0044610e;\n                }\n                goto code_r0x00446125;\n            }\n            if (uVar2 < 0x11) {\n                arg_8h_00 = uVar2;\n                puStack28 = 0x1a;\n                uStack20 = arg_8h_00;\n                if ((iStack48 == 0) && (iStack36 < 0)) {\n                    uVar6 = 0;\n                    goto code_r0x0044610e;\n                }\n                goto code_r0x00446125;\n            }\n            if (((uVar2 == 0x48) || (uVar2 == 0x49)) || (uVar2 == 0x4b)) {\n                if (iStack36 == 0) goto code_r0x0044634c;\n                if (iStack36 != 1) {\n                    *(param_8 + 0x44) = 1;\n                }\n                cVar1 = puStack40;\n                if (iStack52 == 0) {\n                    if (iStack36 == -1) {\n                        uStack20._0_1_ = cVar1 + 0x40;\n                    }\n                    else {\n                        if (iStack36 != 1) goto code_r0x004460a8;\n                        uStack20._0_1_ = cVar1 + 0x44;\n                    }\n                }\n                else {\n                    if ((iStack52 != 1) || (iStack36 != -1)) {\ncode_r0x004460a8:\n                        *arg_8h = cVar1 + 0x46;\n                        arg_8h[1] = iStack52 >> 8;\n                        arg_8h[2] = iStack52;\n                        if (iStack36 == -1) {\n                            iStack36 = 0;\n                        }\n                        arg_8h[3] = iStack36 >> 8;\n                        arg_8h[4] = iStack36;\n                        arg_8h = arg_8h + 5;\n                        goto code_r0x0044625c;\n                    }\n                    uStack20._0_1_ = cVar1 + 0x42;\n                }\n                goto code_r0x00446256;\n            }\n            if (((uVar2 != 0x58) && (uVar2 != 0x59)) && ((uVar2 != 0x57 && (uVar2 != 0x5a)))) {\n                *param_4 = 0xb;\n                goto code_r0x004464b0;\n            }\n            uStack20 = 0;\n            puStack16 = NULL;\n            puStack24 = arg_8h + -puStack12;\n            if ((uVar2 == 0x5a) && (puStack12[3] == 0x60)) {\n                *param_4 = 0x37;\n                goto code_r0x004464b0;\n            }\n            if (30000 < puStack24) {\n                *param_4 = 0x32;\n                goto code_r0x004464b0;\n            }\n            puVar3 = puStack12;\n            if (iStack36 == -1) {\n                do {\n                    puVar3 = puVar3 + CONCAT11(puVar3[1], puVar3[2]);\n                } while (*puVar3 != 0x4f);\n                uStack20 = arg_8h - puVar3;\n            }\n            if (iStack52 == 0) {\n                if (iStack36 == 0) goto code_r0x0044634c;\n                *arg_8h = 0;\n                if (iStack36 < 2) {\n                    fcn.004442cd(puStack12, 1, puStack84);\n                    fcn.0044af60(puVar11 + 1, puVar11, puStack24);\n                    arg_8h = arg_8h + 1;\n                    *puVar11 = puStack40 + 0x61;\n                    puStack12 = puVar11 + 1;\n                }\n                else {\n                    fcn.004442cd(puStack12, 4, puStack84);\n                    fcn.0044af60(puVar11 + 4, puVar11, puStack24);\n                    *puVar11 = puStack40 + 0x61;\n                    arg_8h = arg_8h + 4;\n                    puVar11[1] = 0x58;\n                    puStack16 = puVar11 + 2;\n                    *puStack16 = 0;\n                    puVar11[3] = 0;\n                    puStack12 = puVar11 + 4;\n                }\n                iStack36 = iStack36 + -1;\n            }\n            else {\n                if (1 < iStack52) {\n                    if (param_9 == NULL) {\n                        if ((uStack120 != 0) && (puStack68 < 0)) {\n                            puStack68 = puStack32;\n                        }\n                        if (1 < iStack52) {\n                            puStack56 = iStack52 + -1;\n                            do {\n                                puVar11 = puStack84;\n                                puStack28 = *(param_8 + 0x20);\n                                fcn.0044a6b0(arg_8h, puStack12, puStack24);\n                                for (; puVar11 < puStack28; puVar11 = puVar11 + 2) {\n                                    **(param_8 + 0x20) = puStack24 + CONCAT11(*puVar11, puVar11[1]) >> 8;\n                                    *(*(param_8 + 0x20) + 1) = puVar11[1] + puStack24;\n                                    *(param_8 + 0x20) = *(param_8 + 0x20) + 2;\n                                }\n                                arg_8h = arg_8h + puStack24;\n                                puStack56 = puStack56 + -1;\n                                puStack84 = puStack28;\n                            } while (puStack56 != NULL);\n                        }\n                    }\n                    else {\n                        *param_9 = *param_9 + (iStack52 + -1) * iStack92;\n                    }\n                }\n                if (0 < iStack36) {\n                    iStack36 = iStack36 - iStack52;\n                }\n            }\n            if (iStack36 < 0) {\n                puVar11 = arg_8h + -uStack20;\n                puStack16 = puVar11 + -CONCAT11(puVar11[1], puVar11[2]);\n                *puVar11 = puStack40 + 0x50;\n                if ((param_9 == NULL) && (puVar3 = puStack16,  *puStack16 != 0x57)) {\n                    do {\n                        puStack28 = puVar3;\n                        iVar4 = fcn.004440e2(puStack28, puVar11, 0);\n                        if (iVar4 != 0) {\n                            *puStack16 = *puStack16 + 3;\n                            break;\n                        }\n                        puStack28 = puStack28 + CONCAT11(puStack28[1], puStack28[2]);\n                        puVar3 = puStack28;\n                    } while (*puStack28 == 0x4e);\n                }\n            }\n            else {\n                if ((param_9 == NULL) || (iStack36 < 1)) {\n                    uStack20 = iStack36 - 1;\n                    if (-1 < uStack20) {\n                        uStack85 = puStack40 + 0x61;\n                        do {\n                            puVar11 = *(param_8 + 0x20);\n                            *arg_8h = uStack85;\n                            puVar3 = arg_8h + 1;\n                            if (uStack20 != 0) {\n                                *puVar3 = 0x58;\n                                puVar10 = arg_8h + 2;\n                                uVar6 = -(puStack16 != NULL) & puVar10 - puStack16;\n                                *puVar10 = uVar6 >> 8;\n                                arg_8h[3] = uVar6;\n                                puVar3 = arg_8h + 4;\n                                puStack16 = puVar10;\n                            }\n                            puStack56 = puVar11;\n                            fcn.0044a6b0(puVar3, puStack12, puStack24);\n                            if (puStack84 < puVar11) {\n                                cStack86 = ((uStack20 == 0) - 1U & 3) + 1;\n                                do {\n                                    **(param_8 + 0x20) =\n                                         puStack24 + (-(uStack20 != 0) & 3) + 1 + CONCAT11(*puStack84, puStack84[1]) >>\n                                         8;\n                                    *(*(param_8 + 0x20) + 1) = puStack84[1] + puStack24 + cStack86;\n                                    *(param_8 + 0x20) = *(param_8 + 0x20) + 2;\n                                    puStack84 = puStack84 + 2;\n                                    puVar11 = puStack56;\n                                } while (puStack84 < puStack56);\n                            }\n                            arg_8h = puVar3 + puStack24;\n                            uStack20 = uStack20 - 1;\n                            puStack84 = puVar11;\n                        } while (-1 < uStack20);\n                    }\n                }\n                else {\n                    *param_9 = *param_9 + (iStack92 + 7) * iStack36 + -6;\n                }\n                for (; puStack16 != NULL; puStack16 = -(puStack56 != NULL) & puStack16 - puStack56) {\n                    puVar11 = arg_8h + (1 - puStack16);\n                    puStack56 = CONCAT11(arg_8h[1 - puVar11], arg_8h[2 - puVar11]);\n                    *arg_8h = 0x4f;\n                    arg_8h[2] = puVar11;\n                    uVar2 = puVar11 >> 8;\n                    arg_8h[1] = uVar2;\n                    arg_8h[1 - puVar11] = uVar2;\n                    arg_8h[2 - puVar11] = puVar11;\n                    arg_8h = arg_8h + 3;\n                }\n            }\ncode_r0x0044625c:\n            puVar11 = arg_8h;\n            if (iStack48 != 0) {\n                uVar2 = *puStack60;\n                if (((uVar2 == 0x21) || (uVar2 == 0x3b)) || (uVar2 == 0x2e)) {\n                    puStack60 = puStack60 + *(uVar2 + 0x45a2e8);\n                }\n                puStack56 = arg_8h + -puStack60;\n                if (0 < puStack56) {\n                    uVar2 = *puStack60;\n                    if (uVar2 < 0x2b) {\n                        if (uVar2 == 0x2a) {\n                            *puStack60 = 0x31;\n                        }\n                        else if (uVar2 == 0x19) {\n                            *puStack60 = 0x22;\n                        }\n                        else if (uVar2 == 0x1b) {\n                            *puStack60 = 0x23;\n                        }\n                        else if (uVar2 == 0x1d) {\n                            *puStack60 = 0x24;\n                        }\n                        else if (uVar2 == 0x1f) {\n                            *puStack60 = 0x25;\n                        }\n                        else if (uVar2 == 0x26) {\n                            *puStack60 = 0x2f;\n                        }\n                        else {\n                            if (uVar2 != 0x28) goto code_r0x004462f8;\n                            *puStack60 = 0x30;\n                        }\n                    }\n                    else if (uVar2 == 0x2c) {\n                        *puStack60 = 0x32;\n                    }\n                    else if (uVar2 == 0x33) {\n                        *puStack60 = 0x3c;\n                    }\n                    else if (uVar2 == 0x35) {\n                        *puStack60 = 0x3d;\n                    }\n                    else if (uVar2 == 0x37) {\n                        *puStack60 = 0x3e;\n                    }\n                    else if (uVar2 == 0x39) {\n                        *puStack60 = 0x3f;\n                    }\n                    else {\ncode_r0x004462f8:\n                        fcn.0044af60(puStack60 + 3, puStack60, puStack56);\n                        *puStack60 = 0x57;\n                        arg_8h[3] = 0x4f;\n                        uVar7 = puStack56 + 3;\n                        arg_8h[5] = uVar7;\n                        uVar2 = puStack56 + 3 >> 8;\n                        arg_8h[4] = uVar2;\n                        puStack60[1] = uVar2;\n                        puStack60[2] = uVar7;\n                        puVar11 = arg_8h + 6;\n                    }\n                }\n            }\n        }\ncode_r0x0044634c:\n        puStack12 = NULL;\n        *(param_8 + 0x40) = *(param_8 + 0x40) | uStack168;\n        arg_8h = puVar11;\n        puVar11 = puStack8;\n    }\ncode_r0x00445223:\n    puStack8 = puVar11;\n    puStack8 = puStack8 + 1;\n    goto code_r0x004447ba;\n}\n",
        "token_count": 18462
    },
    "004464c2": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl\nfcn.004464c2(uint32_t arg_8h, uint32_t arg_ch, char **arg_10h, char **arg_14h, int32_t *arg_18h, int32_t arg_1ch, \n            uint32_t arg_20h, uint32_t *arg_24h, uint32_t *arg_28h, int32_t arg_2ch, uint arg_30h, int32_t *arg_34h)\n\n{\n    char **ppcVar1;\n    char *pcVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    char *pcVar6;\n    bool bVar7;\n    uint var_28h;\n    char *var_24h;\n    char *var_20h;\n    char *var_1ch;\n    uint32_t var_18h;\n    char *var_14h;\n    char *var_10h;\n    char *var_ch;\n    uint32_t var_8h;\n    uint32_t var_4h;\n    \n    var_1ch = NULL;\n    var_10h = *arg_14h;\n    var_20h = *arg_10h;\n    var_28h = arg_2ch;\n    var_4h = 0xfffffffe;\n    var_8h = 0xfffffffe;\n    arg_2ch = arg_20h + 6;\n    var_20h[1] = '\\0';\n    bVar7 = arg_34h != NULL;\n    var_20h[2] = '\\0';\n    var_ch = var_20h + arg_20h + 3;\n    var_14h = var_20h;\n    do {\n        ppcVar1 = arg_14h;\n        if ((arg_8h & 7) != arg_ch) {\n            *var_ch = '\\x13';\n            var_ch[1] = arg_8h & 7;\n            var_ch = var_ch + 2;\n            arg_2ch = arg_2ch + 2;\n        }\n        if (arg_1ch != 0) {\n            *var_ch = 'V';\n            var_1ch = var_ch + 1;\n            *var_1ch = '\\0';\n            var_ch[2] = '\\0';\n            var_ch = var_ch + 3;\n            arg_2ch = arg_2ch + 3;\n        }\n        var_24h = var_14h;\n        iVar3 = fcn.00444746(&arg_8h, &var_ch, &var_10h, arg_18h, &var_18h, &arg_20h, &var_28h, arg_30h, \n                             -bVar7 & &arg_2ch);\n        pcVar2 = var_ch;\n        if (iVar3 == 0) goto code_r0x0044665c;\n        if (arg_34h == NULL) {\n            if (*var_14h == 'N') {\n                if (var_8h < 0) {\ncode_r0x004465c5:\n                    if ((-1 < var_18h) && (arg_20h < 0)) {\n                        arg_20h = var_18h;\n                    }\n                }\n                else {\n                    if (var_8h != var_18h) {\n                        if (var_4h < 0) {\n                            var_4h = var_8h;\n                        }\n                        var_8h = 0xffffffff;\n                    }\n                    if (var_8h < 0) goto code_r0x004465c5;\n                }\n                if (((arg_20h ^ var_4h) & 0xfffffdff) == 0) {\n                    var_4h = var_4h | arg_20h;\n                }\n                else {\n                    var_4h = 0xffffffff;\n                }\n            }\n            else {\n                var_8h = var_18h;\n                var_4h = arg_20h;\n            }\n            if (arg_1ch != 0) {\n                *var_ch = '\\0';\n                iVar3 = fcn.00443ee4(var_14h, arg_8h);\n                if (iVar3 < 0) {\n                    *arg_18h = ((iVar3 != -2) - 1 & 0xb) + 0x19;\ncode_r0x0044665c:\n                    *ppcVar1 = var_10h;\n                    return 0;\n                }\n                *var_1ch = iVar3 >> 8;\n                var_1ch[1] = iVar3;\n            }\n        }\n        uVar4 = pcVar2 - var_14h;\n        if (*var_10h != '|') {\n            do {\n                uVar5 = CONCAT11(var_14h[1], var_14h[2]);\n                var_14h[2] = uVar4;\n                var_14h[1] = uVar4 >> 8;\n                var_14h = var_14h + -uVar5;\n                uVar4 = uVar5;\n            } while (uVar5 != 0);\n            *pcVar2 = 'O';\n            pcVar2[1] = pcVar2 - var_20h >> 8;\n            pcVar6 = pcVar2 + 3;\n            pcVar2[2] = pcVar2 - var_20h;\n            if (((arg_8h & 7) != arg_ch) && (*var_10h == ')')) {\n                *pcVar6 = '\\x13';\n                pcVar2[4] = arg_ch;\n                pcVar6 = pcVar2 + 5;\n                arg_2ch = arg_2ch + 2;\n            }\n            *arg_10h = pcVar6;\n            *arg_14h = var_10h;\n            *arg_24h = var_8h;\n            *arg_28h = var_4h;\n            if (arg_34h != NULL) {\n                *arg_34h = *arg_34h + arg_2ch;\n            }\n            return 1;\n        }\n        *pcVar2 = 'N';\n        pcVar2[1] = pcVar2 - var_14h >> 8;\n        pcVar2[2] = pcVar2 - var_14h;\n        var_14h = pcVar2;\n        var_ch = pcVar2 + 3;\n        var_10h = var_10h + 1;\n        arg_2ch = arg_2ch + 3;\n    } while( true );\n}\n",
        "token_count": 1470
    },
    "0044684c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.0044684c(char *param_1, uint8_t *param_2, int32_t param_3)\n\n{\n    uint8_t uVar1;\n    uint8_t *puVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    bool bVar5;\n    \n    uVar4 = 0xffffffff;\n    do {\n        puVar2 = fcn.00443e65(1, 1);\n        uVar1 = *puVar2;\n        if (uVar1 < 0x24) {\n            if (uVar1 != 0x23) {\n                if (uVar1 < 0x16) {\n                    return 0xffffffff;\n                }\n                if (0x17 < uVar1) {\n                    if (uVar1 < 0x1b) {\n                        return 0xffffffff;\n                    }\n                    if (0x1c < uVar1) {\n                        if (uVar1 != 0x21) {\n                            return 0xffffffff;\n                        }\n                        puVar2 = puVar2 + 2;\n                    }\n                }\n            }\n            if (param_3 == 0) {\n                return 0xffffffff;\n            }\n            if (-1 < uVar4) {\n                uVar3 = puVar2[1];\n                goto code_r0x004468af;\n            }\n            uVar3 = puVar2[1];\n            if ((*param_2 & 1) != 0) {\n                uVar3 = puVar2[1] | 0x100;\n            }\n        }\n        else {\n            if (uVar1 != 0x52) {\n                if (uVar1 < 0x57) {\n                    return 0xffffffff;\n                }\n                if (0x5a < uVar1) {\n                    return 0xffffffff;\n                }\n            }\n            uVar3 = fcn.0044684c(puVar2, param_2, uVar1 == 0x52);\n            if (uVar3 < 0) {\n                return 0xffffffff;\n            }\n            if (-1 < uVar4) {\ncode_r0x004468af:\n                bVar5 = uVar4 != uVar3;\n                uVar3 = uVar4;\n                if (bVar5) {\n                    return 0xffffffff;\n                }\n            }\n        }\n        param_1 = param_1 + CONCAT11(param_1[1], param_1[2]);\n        uVar4 = uVar3;\n        if (*param_1 != 'N') {\n            return uVar3;\n        }\n    } while( true );\n}\n",
        "token_count": 572
    },
    "004468fb": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_3ch\n// WARNING: Variable defined which should be unmapped: var_38h\n// WARNING: Variable defined which should be unmapped: var_34h\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Could not reconcile some variable overlaps\n\nuint * __cdecl\nfcn.004468fb(char *arg_8h, uint32_t arg_ch, int32_t *arg_10h, uint *arg_14h, int32_t *arg_18h, uint32_t arg_1ch)\n\n{\n    char *pcVar1;\n    uint32_t uVar2;\n    uint *puVar3;\n    uchar *puVar4;\n    int32_t iVar5;\n    uint *arg_34h;\n    char *unaff_ESI;\n    ulong uVar6;\n    uint var_106ch;\n    uint32_t var_6ch;\n    int32_t var_68h;\n    int32_t var_64h;\n    int32_t var_60h;\n    uint *var_5ch;\n    uint *var_58h;\n    char *var_54h;\n    char *var_50h;\n    uint *var_4ch;\n    int32_t var_48h;\n    int32_t var_44h;\n    int32_t var_40h;\n    uint32_t var_3ch;\n    uint32_t var_38h;\n    uint *var_34h;\n    uint *var_30h;\n    uint var_2ch;\n    int32_t var_28h;\n    uint var_24h;\n    uint *var_20h;\n    uint *var_1ch;\n    uint *var_18h;\n    uint *var_14h;\n    uint *var_10h;\n    char *var_ch;\n    char *var_8h;\n    int32_t var_4h;\n    \n    var_4h = 0x446908;\n    fcn.0044c510();\n    var_8h = 0x1;\n    var_4h = 0;\n    if (arg_14h == NULL) {\n        if (arg_10h != NULL) {\n            *arg_10h = 99;\n        }\n    }\n    else {\n        *arg_14h = 0;\n        if (arg_10h != NULL) {\n            *arg_10h = 0;\n        }\n        if (arg_18h == NULL) {\n            var_4h = 0x10;\n        }\n        else {\n            *arg_18h = 0;\n            var_ch = unaff_ESI;\n            if ((arg_ch & 0x800) == 0) {\n                if ((arg_ch & 0xff838580) == 0) {\n                    if (arg_1ch == 0) {\n                        arg_1ch = 0x45a350;\n                    }\n                    var_68h = arg_1ch + 0x100;\n                    var_64h = arg_1ch + 0x200;\n                    var_60h = arg_1ch + 0x340;\n                    uVar2 = arg_ch & 0x700000;\n                    if (((((uVar2 == 0) || (uVar2 == 0x100000)) || (uVar2 == 0x200000)) ||\n                        ((uVar2 == 0x300000 || (uVar2 == 0x400000)))) || (uVar2 == 0x500000)) {\n                        var_5ch = &fcn.004468fb::var_106ch;\n                        var_44h = 0;\n                        var_48h = 0;\n                        var_54h = arg_8h;\n                        pcVar1 = arg_8h;\n                        do {\n                            var_50h = pcVar1;\n                            pcVar1 = var_50h + 1;\n                        } while (*var_50h != '\\0');\n                        var_10h = &fcn.004468fb::var_8h;\n                        var_14h = &fcn.004468fb::var_6ch;\n                        var_18h = NULL;\n                        var_1ch = &fcn.004468fb::var_18h;\n                        var_20h = &fcn.004468fb::var_14h;\n                        var_24h = 0;\n                        var_34h = &fcn.004468fb::var_10h;\n                        var_38h = arg_ch & 7;\n                        var_3ch = arg_ch;\n                        var_2ch = 0;\n                        var_28h = 0;\n                        var_30h = arg_ch;\n                        var_106ch._0_1_ = 0x58;\n                        var_40h = 0x446a8a;\n                        var_6ch = arg_1ch;\n                        var_58h = var_5ch;\n                        var_4ch = var_5ch;\n                        fcn.004464c2(arg_ch, var_38h, var_34h, arg_ch, 0, 0, 0, var_20h, var_1ch, 0, var_14h, var_10h);\n                        if (var_4h == 0) {\n                            if (var_8h < 0x10001) {\n                                pcVar1 = var_8h + (var_40h + 3) * var_44h + 0x28;\n                                var_14h = 0x446abe;\n                                var_10h = pcVar1;\n                                puVar3 = (**0x465148)();\n                                if (puVar3 == NULL) {\n                                    var_10h = 0x15;\n                                    var_4h = var_10h;\n                                }\n                                else {\n                                    puVar3[1] = pcVar1;\n                                    *puVar3 = 0x50435245;\n                                    puVar3[2] = var_30h;\n                                    *(puVar3 + 6) = 0x28;\n                                    puVar3[3] = 0;\n                                    *(puVar3 + 5) = 0;\n                                    *(puVar3 + 0x16) = 0;\n                                    *(puVar3 + 0x1a) = var_40h;\n                                    *(puVar3 + 7) = var_44h;\n                                    *(puVar3 + 0x1e) = 0;\n                                    puVar3[8] = -(arg_1ch != 0x45a350) & arg_1ch;\n                                    puVar3[9] = 0;\n                                    var_44h = 0;\n                                    var_48h = *(puVar3 + 6) + puVar3;\n                                    var_14h = &fcn.004468fb::var_6ch;\n                                    var_18h = NULL;\n                                    var_1ch = &fcn.004468fb::var_18h;\n                                    var_20h = &fcn.004468fb::var_14h;\n                                    var_24h = 0;\n                                    arg_34h = *(puVar3 + 7) * *(puVar3 + 0x1a) + var_48h;\n                                    var_4ch = &fcn.004468fb::var_106ch;\n                                    var_30h = &fcn.004468fb::var_ch;\n                                    var_2ch = 0;\n                                    var_28h = 0;\n                                    var_ch = arg_8h;\n                                    *arg_34h = 0x58;\n                                    var_3ch = puVar3[2];\n                                    var_34h = &fcn.004468fb::var_10h;\n                                    var_38h = var_3ch & 7;\n                                    var_40h = 0x446b7a;\n                                    var_58h = arg_34h;\n                                    var_10h = arg_34h;\n                                    fcn.004464c2(var_3ch, var_38h, var_34h, var_30h, 0, 0, 0, var_20h, var_1ch, 0, \n                                                 var_14h, arg_34h);\n                                    *(puVar3 + 4) = var_3ch;\n                                    *(puVar3 + 0x12) = var_38h;\n                                    if (var_28h != 0) {\n                                        puVar3[2] = puVar3[2] | 0x80000000;\n                                    }\n                                    if ((var_4h == 0) && (*var_ch != '\\0')) {\n                                        var_4h = 0x16;\n                                    }\n                                    *var_10h = 0;\n                                    if (var_8h < var_10h + (1 - arg_34h)) {\n                                        var_4h = 0x17;\n                                    }\n                                    while (var_4h == 0) {\n                                        if (var_4ch <= &fcn.004468fb::var_106ch) {\n                                            if (*(puVar3 + 0x12) < *(puVar3 + 4) || *(puVar3 + 0x12) == *(puVar3 + 4)) {\n                                                arg_8h = puVar3[2];\n                                                if ((arg_8h & 0x10) == 0) {\n                                                    var_10h = var_34h;\n                                                    var_14h = NULL;\n                                                    var_18h = &fcn.004468fb::arg_8h;\n                                                    var_20h = 0x446c77;\n                                                    var_1ch = arg_34h;\n                                                    iVar5 = fcn.004466e6(arg_34h, var_18h, 0, var_34h);\n                                                    if (iVar5 == 0) {\n                                                        if (var_14h < 0) {\n                                                            var_10h = NULL;\n                                                            var_14h = &fcn.004468fb::arg_8h;\n                                                            var_1ch = 0x446c96;\n                                                            var_18h = arg_34h;\n                                                            var_14h = fcn.0044684c();\n                                                            if (var_14h < 0) {\n                                                                var_10h = var_34h;\n                                                                var_14h = NULL;\n                                                                var_1ch = 0x446ccf;\n                                                                var_18h = arg_34h;\n                                                                iVar5 = fcn.004467a7();\n                                                                if (iVar5 != 0) {\n                                                                    puVar3[2] = puVar3[2] | 0x10000000;\n                                                                }\n                                                                goto code_r0x00446cdd;\n                                                            }\n                                                        }\n                                                        uVar2 = var_14h & 0xff;\n                                                        if (((var_14h & 0x100) != 0) && (*(var_68h + uVar2) == uVar2)) {\n                                                            var_14h = uVar2;\n                                                        }\n                                                        puVar3[2] = puVar3[2] | 0x40000000;\n                                                        *(puVar3 + 5) = var_14h;\n                                                    }\n                                                    else {\n                                                        puVar3[2] = puVar3[2] | 0x10;\n                                                    }\n                                                }\ncode_r0x00446cdd:\n                                                if (var_18h < 0) {\n                                                    return puVar3;\n                                                }\n                                                if (((puVar3[2] & 0x10) != 0) && ((var_18h & 0x200) == 0)) {\n                                                    return puVar3;\n                                                }\n                                                if (((var_18h & 0x100) != 0) &&\n                                                   (*(var_68h + (var_18h & 0xff)) == (var_18h & 0xff))) {\n                                                    var_18h = var_18h & 0xfffffeff;\n                                                }\n                                                *(puVar3 + 0x16) = var_18h;\n                                                puVar3[2] = puVar3[2] | 0x20000000;\n                                                return puVar3;\n                                            }\n                                            var_4h = 0xf;\n                                            break;\n                                        }\n                                        puVar4 = var_4ch + -1;\n                                        var_4ch = var_4ch + -2;\n                                        uVar2 = CONCAT11(*var_4ch, *puVar4);\n                                        var_8h = uVar2 + 1 + arg_34h;\n                                        var_10h = CONCAT11(*(uVar2 + arg_34h), *var_8h);\n                                        var_14h = 0x446bf7;\n                                        uVar6 = fcn.00444079();\n                                        if (uVar6 == 0) {\n                                            var_4h = 0x35;\n                                            break;\n                                        }\n                                        *(uVar6 >> 0x20) = uVar6 - arg_34h >> 8;\n                                        *var_8h = uVar6 - arg_34h;\n                                    }\n                                    var_14h = 0x446c34;\n                                    var_10h = puVar3;\n                                    (**0x46514c)();\n                                }\n                            }\n                            else {\n                                var_10h = 0x14;\n                                var_4h = var_10h;\n                            }\n                        }\n                    }\n                    else {\n                        var_10h = 0x38;\n                        var_4h = var_10h;\n                    }\n                }\n                else {\n                    var_10h = 0x11;\n                    var_4h = var_10h;\n                }\n            }\n            else {\n                var_10h = 0x20;\n                var_4h = var_10h;\n            }\n            *arg_18h = var_ch - arg_8h;\n        }\n        *arg_14h = *(var_4h * 4 + 0x465060);\n        if (arg_10h != NULL) {\n            *arg_10h = var_4h;\n        }\n    }\n    return NULL;\n}\n",
        "token_count": 3242
    },
    "00446eda": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl\nfcn.00446eda(uint8_t *arg_8h, uint8_t *arg_ch, uint32_t arg_10h, uint32_t *arg_14h, uint32_t arg_18h, uint *arg_1ch, \n            uint32_t arg_20h, uint32_t arg_24h)\n\n{\n    int32_t *piVar1;\n    uint8_t uVar2;\n    uint32_t *puVar3;\n    uint32_t *arg_14h_00;\n    uint8_t uVar4;\n    uint32_t uVar5;\n    uint8_t *puVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    uint *puVar9;\n    uint8_t *puVar10;\n    uint8_t *puVar11;\n    bool bVar12;\n    uint var_e4h;\n    uint var_6ch;\n    uint var_64h;\n    uint32_t var_60h;\n    uint32_t var_5ch;\n    uint32_t var_58h;\n    int32_t var_54h;\n    int32_t var_50h;\n    int32_t var_4ch;\n    int32_t var_48h;\n    uint32_t var_44h;\n    uint32_t var_40h;\n    uint32_t var_3ch;\n    uint32_t var_38h;\n    uint32_t var_34h;\n    uint32_t var_30h;\n    uint8_t *var_2ch;\n    uint32_t var_28h;\n    uint *var_24h;\n    uint32_t var_20h;\n    uint32_t var_1ch;\n    uint32_t var_18h;\n    uint8_t *var_14h;\n    uint8_t *var_10h;\n    uint8_t *var_ch;\n    int32_t var_8h;\n    uint8_t *var_4h;\n    \n    arg_14h_00 = arg_14h;\n    if (arg_14h[1] <= *arg_14h) {\ncode_r0x0044839b:\n        *arg_14h_00 = *arg_14h_00 + 1;\n        return -8;\n    }\ncode_r0x00446efa:\n    *arg_14h_00 = *arg_14h_00 + 1;\n    if (arg_14h_00[2] <= arg_24h) {\n        return -0x15;\n    }\n    var_1ch = arg_18h;\n    if ((arg_20h & 2) != 0) {\n        if ((arg_20h & 4) == 0) {\n            puVar9 = &var_6ch;\n        }\n        else {\n            uVar5 = arg_14h_00[0x1c];\n            if (999 < uVar5) {\n                return -0x16;\n            }\n            puVar9 = arg_14h_00[0x1b] + uVar5 * 8;\n            arg_14h_00[0x1c] = uVar5 + 1;\n        }\n        puVar9[1] = arg_8h;\n        *puVar9 = arg_1ch;\n        arg_1ch = puVar9;\n    }\ncode_r0x00446f43:\n    uVar4 = *arg_ch;\n    var_8h = 0;\n    var_ch = NULL;\n    if (((arg_14h_00[0x11] != 0) && (arg_14h_00[0x15] <= arg_8h)) &&\n       (arg_14h_00[0x16] <= arg_8h && arg_8h != arg_14h_00[0x16])) {\n        arg_14h_00[0x12] = 1;\n    }\n    puVar11 = arg_8h;\n    puVar6 = arg_ch;\n    // switch table (99 cases) at 0x4489ea\n    switch(uVar4) {\n    case 0:\n        puVar3 = arg_14h_00[0x1d];\n        if ((puVar3 == NULL) || (puVar3[1] != 0)) {\n            if ((arg_14h_00[0x10] != 0) && (arg_8h == arg_14h_00[0x16])) {\n                return 0;\n            }\n            arg_14h_00[0x18] = arg_10h;\n            arg_14h_00[0x17] = arg_8h;\n            return 1;\n        }\n        arg_14h_00[0x1d] = *puVar3;\n        fcn.0044af60(arg_14h_00[3], puVar3[4], puVar3[5] << 2);\n        arg_14h_00[0x16] = puVar3[3];\n        arg_ch = puVar3[2];\n        arg_18h = var_1ch;\n        goto code_r0x00446f43;\n    case 1:\ncode_r0x004474fa:\n        bVar12 = arg_8h == arg_14h_00[0x14];\n        goto code_r0x004474ee;\n    case 2:\n        puVar6 = arg_14h_00[0x1a] + arg_14h_00[0x14];\ncode_r0x00447505:\n        bVar12 = arg_8h == puVar6;\n        goto code_r0x004474ee;\n    case 3:\n    case 4:\n        if ((arg_8h == arg_14h_00[0x14]) || ((*(arg_8h[-1] + arg_14h_00[10]) & 0x10) == 0)) {\n            iVar7 = 0;\n        }\n        else {\n            iVar7 = 1;\n        }\n        if ((arg_8h < arg_14h_00[0x15]) && ((*(*arg_8h + arg_14h_00[10]) & 0x10) != 0)) {\n            iVar8 = 1;\n        }\n        else {\n            iVar8 = 0;\n        }\n        uVar4 = *arg_ch;\n        arg_ch = arg_ch + 1;\n        if (uVar4 == 4) {\n            bVar12 = iVar8 == iVar7;\n        }\n        else {\n            bVar12 = iVar8 != iVar7;\n        }\n        if (bVar12) {\n            return 0;\n        }\n        goto code_r0x00446f43;\n    case 5:\n        if (arg_14h_00[0x15] <= arg_8h) {\n            return 0;\n        }\n        uVar4 = *arg_8h;\n        arg_8h = arg_8h + 1;\n        bVar12 = (*(uVar4 + arg_14h_00[10]) & 4) == 0;\n        goto code_r0x004474ee;\n    case 6:\n        if (arg_14h_00[0x15] <= arg_8h) {\n            return 0;\n        }\n        puVar11 = arg_8h + 1;\n        bVar12 = (*(*arg_8h + arg_14h_00[10]) & 4) == 0;\n        goto code_r0x004474bf;\n    case 7:\n        if (arg_14h_00[0x15] <= arg_8h) {\n            return 0;\n        }\n        uVar4 = *arg_8h;\n        arg_8h = arg_8h + 1;\n        bVar12 = (*(uVar4 + arg_14h_00[10]) & 1) == 0;\n        goto code_r0x004474ee;\n    case 8:\n        if (arg_14h_00[0x15] <= arg_8h) {\n            return 0;\n        }\n        puVar11 = arg_8h + 1;\n        bVar12 = (*(*arg_8h + arg_14h_00[10]) & 1) == 0;\n        goto code_r0x004474bf;\n    case 9:\n        if (arg_14h_00[0x15] <= arg_8h) {\n            return 0;\n        }\n        uVar4 = *arg_8h;\n        arg_8h = arg_8h + 1;\n        bVar12 = (*(uVar4 + arg_14h_00[10]) & 0x10) == 0;\ncode_r0x004474ee:\n        puVar11 = arg_8h;\n        if (!bVar12) {\n            return 0;\n        }\n        break;\n    case 10:\n        if (arg_14h_00[0x15] <= arg_8h) {\n            return 0;\n        }\n        puVar11 = arg_8h + 1;\n        bVar12 = (*(*arg_8h + arg_14h_00[10]) & 0x10) == 0;\ncode_r0x004474bf:\n        if (bVar12) {\n            return 0;\n        }\n        break;\n    case 0xb:\n        if ((arg_18h & 4) == 0) {\n            if (arg_14h_00[6] == 0) {\n                if ((arg_8h <= arg_14h_00[0x15] - arg_14h_00[7]) && (*arg_8h == *(arg_14h_00 + 8))) {\n                    if (arg_14h_00[7] == 1) {\n                        return 0;\n                    }\n                    if (arg_8h[1] == *(arg_14h_00 + 0x21)) {\n                        return 0;\n                    }\n                }\n            }\n            else if ((arg_8h < arg_14h_00[0x15]) &&\n                    (iVar7 = fcn.004492f7(arg_8h, arg_14h_00[6], arg_14h_00[0x15], arg_14h_00 + 7, 0),  iVar7 != 0)) {\n                return 0;\n            }\n        }\n    case 0xc:\n        puVar11 = arg_8h + 1;\n        if (arg_14h_00[0x15] <= arg_8h) {\n            return 0;\n        }\n        break;\n    default:\n        return -5;\n    case 0xf:\n        if (arg_14h_00[0x15] <= arg_8h) {\n            return 0;\n        }\n        uVar5 = *arg_8h;\n        puVar11 = arg_8h + 1;\n        if (uVar5 < 10) {\n            return 0;\n        }\n        if (0xc < uVar5) {\n            if (uVar5 == 0xd) {\n                if ((puVar11 < arg_14h_00[0x15]) && (*puVar11 == 10)) {\n                    puVar11 = arg_8h + 2;\n                }\n            }\n            else if (uVar5 != 0x85) {\n                if (uVar5 < 0x2028) {\n                    return 0;\n                }\n                if (0x2029 < uVar5) {\n                    return 0;\n                }\n            }\n        }\n        break;\n    case 0x11:\ncode_r0x00447565:\n        puVar6 = arg_14h_00[0x15];\n        if (arg_8h != puVar6) {\n            if (arg_14h_00[6] == 0) {\n                if (puVar6 + -arg_14h_00[7] < arg_8h) {\n                    return 0;\n                }\n                if (*arg_8h != *(arg_14h_00 + 8)) {\n                    return 0;\n                }\n                if ((arg_14h_00[7] != 1) && (arg_8h[1] != *(arg_14h_00 + 0x21))) {\n                    return 0;\n                }\n            }\n            else {\n                if (puVar6 <= arg_8h) {\n                    return 0;\n                }\n                iVar7 = fcn.004492f7(arg_8h, arg_14h_00[6], puVar6, arg_14h_00 + 7, 0);\n                if (iVar7 == 0) {\n                    return 0;\n                }\n            }\n            puVar6 = arg_14h_00[0x15] - arg_14h_00[7];\n            goto code_r0x00447505;\n        }\n        break;\n    case 0x12:\ncode_r0x004475ca:\n        if (arg_8h < arg_14h_00[0x15]) {\n            return 0;\n        }\n        break;\n    case 0x13:\n        arg_18h = arg_ch[1];\n        goto code_r0x00447082;\n    case 0x14:\n        if ((arg_14h_00[0xc] != 0) && (arg_8h == arg_14h_00[0x14])) {\n            return 0;\n        }\n        if ((arg_18h & 2) == 0) goto code_r0x004474fa;\n        puVar6 = arg_14h_00[0x14];\n        if (arg_8h != puVar6) {\n            if (arg_8h == arg_14h_00[0x15]) {\n                return 0;\n            }\n            if (arg_14h_00[6] != 0) {\n                if (arg_8h <= puVar6) {\n                    return 0;\n                }\n                iVar7 = fcn.0044937c(arg_8h, arg_14h_00[6], puVar6, arg_14h_00 + 7, 0);\ncode_r0x004474ba:\n                bVar12 = iVar7 == 0;\n                goto code_r0x004474bf;\n            }\n            uVar5 = arg_14h_00[7];\n            if (arg_8h < puVar6 + uVar5) {\n                return 0;\n            }\n            if (arg_8h[-uVar5] != *(arg_14h_00 + 8)) {\n                return 0;\n            }\n            if (uVar5 != 1) {\n                uVar4 = (arg_8h + -uVar5)[1];\ncode_r0x004474eb:\n                bVar12 = uVar4 == *(arg_14h_00 + 0x21);\n                goto code_r0x004474ee;\n            }\n        }\n        break;\n    case 0x15:\n        if ((arg_18h & 2) == 0) {\n            if (arg_14h_00[0xd] != 0) {\n                return 0;\n            }\n            if (arg_14h_00[0xf] != 0) goto code_r0x004475ca;\n            goto code_r0x00447565;\n        }\n        puVar6 = arg_14h_00[0x15];\n        if (puVar6 <= arg_8h) {\n            bVar12 = arg_14h_00[0xd] == 0;\n            goto code_r0x004474ee;\n        }\n        if (arg_14h_00[6] != 0) {\n            iVar7 = fcn.004492f7(arg_8h, arg_14h_00[6], puVar6, arg_14h_00 + 7, 0);\n            goto code_r0x004474ba;\n        }\n        if (puVar6 + -arg_14h_00[7] < arg_8h) {\n            return 0;\n        }\n        if (*arg_8h != *(arg_14h_00 + 8)) {\n            return 0;\n        }\n        if (arg_14h_00[7] != 1) {\n            uVar4 = arg_8h[1];\n            goto code_r0x004474eb;\n        }\n        break;\n    case 0x16:\n        if (arg_14h_00[0x15] - arg_8h < 1) {\n            return 0;\n        }\n        bVar12 = arg_ch[1] == *arg_8h;\n        goto code_r0x004479ae;\n    case 0x17:\n        if (arg_14h_00[0x15] - arg_8h < 1) {\n            return 0;\n        }\n        bVar12 = *(arg_ch[1] + arg_14h_00[9]) == *(*arg_8h + arg_14h_00[9]);\ncode_r0x004479ae:\n        arg_8h = arg_8h + 1;\n        if (!bVar12) {\n            return 0;\n        }\ncode_r0x00447082:\n        arg_ch = arg_ch + 2;\n        goto code_r0x00446f43;\n    case 0x18:\n        if (arg_14h_00[0x15] <= arg_8h) {\n            return 0;\n        }\n        if ((arg_18h & 1) == 0) {\n            bVar12 = arg_ch[1] == *arg_8h;\n        }\n        else {\n            bVar12 = *(arg_ch[1] + arg_14h_00[9]) == *(*arg_8h + arg_14h_00[9]);\n        }\n        arg_ch = arg_ch + 2;\n        arg_8h = arg_8h + 1;\n        if (bVar12) {\n            return 0;\n        }\n        goto code_r0x00446f43;\n    case 0x19:\n    case 0x1a:\n    case 0x1b:\n    case 0x1c:\n    case 0x1d:\n    case 0x1e:\n        uVar5 = *arg_ch;\n        var_ch = uVar5 - 0x19 & 1;\n        puVar6 = *(uVar5 + 0x45a2bb);\n        var_4h = *(uVar5 + 0x45a2c3);\n        puVar11 = arg_ch + 1;\n        if (var_4h != NULL) goto code_r0x00447a53;\n        goto code_r0x00447a4c;\n    case 0x1f:\n    case 0x20:\n        goto code_r0x004479ec;\n    case 0x21:\n        puVar6 = CONCAT11(arg_ch[1], arg_ch[2]);\n        var_4h = puVar6;\n        goto code_r0x004479e4;\n    case 0x22:\n        puVar6 = NULL;\n        goto code_r0x00447a0f;\n    case 0x23:\n        puVar6 = 0x1;\ncode_r0x00447a0f:\n        var_8h = 1;\ncode_r0x00447a4c:\n        puVar11 = arg_ch + 1;\n        var_4h = 0x7fffffff;\n        goto code_r0x00447a53;\n    case 0x24:\n        puVar6 = NULL;\n        var_8h = 1;\n        var_4h = 0x1;\n        puVar11 = arg_ch + 1;\n        goto code_r0x00447a53;\n    case 0x25:\n        var_8h = 1;\ncode_r0x004479ec:\n        puVar6 = NULL;\n        var_ch = *arg_ch == 0x20;\n        var_4h = CONCAT11(arg_ch[1], arg_ch[2]);\ncode_r0x004479e4:\n        puVar11 = arg_ch + 3;\ncode_r0x00447a53:\n        if (arg_14h_00[0x15] - arg_8h < puVar6) {\n            return 0;\n        }\n        var_10h = *puVar11;\n        arg_ch = puVar11 + 1;\n        if ((arg_18h & 1) == 0) {\n            arg_14h = 0x1;\n            puVar11 = arg_8h;\n            if (0 < puVar6) {\n                do {\n                    uVar4 = *arg_8h;\n                    arg_8h = arg_8h + 1;\n                    if (var_10h != uVar4) {\n                        return 0;\n                    }\n                    arg_14h = arg_14h + 1;\n                    puVar11 = arg_8h;\n                } while (arg_14h <= puVar6);\n            }\n            arg_8h = puVar11;\n            if (puVar6 != var_4h) {\n                if (var_ch != NULL) {\n                    var_8h = arg_24h + 1;\n                    arg_14h = puVar6;\n                    while( true ) {\n                        iVar7 = fcn.00446eda(puVar11, arg_ch, arg_10h, arg_14h_00, arg_18h, arg_1ch, 0, var_8h);\n                        if (iVar7 != 0) {\n                            return iVar7;\n                        }\n                        if (var_4h <= arg_14h) {\n                            return 0;\n                        }\n                        if (arg_14h_00[0x15] <= puVar11) {\n                            return 0;\n                        }\n                        uVar4 = *puVar11;\n                        puVar11 = puVar11 + 1;\n                        if (var_10h != uVar4) break;\n                        arg_14h = arg_14h + 1;\n                    }\n                    return 0;\n                }\n                for (; ((puVar6 < var_4h && (arg_8h < arg_14h_00[0x15])) && (var_10h == *arg_8h)); arg_8h = arg_8h + 1)\n                {\n                    puVar6 = puVar6 + 1;\n                }\n                if (var_8h == 0) {\n                    if (arg_8h < puVar11) {\n                        return 0;\n                    }\n                    var_8h = arg_24h + 1;\n                    var_ch = puVar11;\n                    do {\n                        iVar7 = fcn.00446eda(arg_8h, arg_ch, arg_10h, arg_14h_00, arg_18h, arg_1ch, 0, var_8h);\n                        arg_8h = arg_8h + -1;\n                        if (iVar7 != 0) {\n                            return iVar7;\n                        }\n                    } while (var_ch <= arg_8h);\n                    return 0;\n                }\n            }\n        }\n        else {\n            var_10h = var_10h[arg_14h_00[9]];\n            arg_14h = 0x1;\n            puVar11 = arg_8h;\n            if (0 < puVar6) {\n                do {\n                    uVar4 = *arg_8h;\n                    arg_8h = arg_8h + 1;\n                    if (var_10h != *(uVar4 + arg_14h_00[9])) {\n                        return 0;\n                    }\n                    arg_14h = arg_14h + 1;\n                    puVar11 = arg_8h;\n                } while (arg_14h <= puVar6);\n            }\n            arg_8h = puVar11;\n            if (puVar6 != var_4h) {\n                if (var_ch != NULL) {\n                    var_8h = arg_24h + 1;\n                    arg_14h = puVar6;\n                    while( true ) {\n                        iVar7 = fcn.00446eda(puVar11, arg_ch, arg_10h, arg_14h_00, arg_18h, arg_1ch, 0, var_8h);\n                        if (iVar7 != 0) {\n                            return iVar7;\n                        }\n                        if (var_4h <= arg_14h) {\n                            return 0;\n                        }\n                        if (arg_14h_00[0x15] <= puVar11) {\n                            return 0;\n                        }\n                        uVar4 = *puVar11;\n                        puVar11 = puVar11 + 1;\n                        if (var_10h != *(uVar4 + arg_14h_00[9])) break;\n                        arg_14h = arg_14h + 1;\n                    }\n                    return 0;\n                }\n                while (((puVar6 < var_4h && (arg_8h < arg_14h_00[0x15])) && (var_10h == *(*arg_8h + arg_14h_00[9])))) {\n                    puVar6 = puVar6 + 1;\n                    arg_8h = arg_8h + 1;\n                }\n                if (var_8h == 0) {\n                    if (arg_8h < puVar11) {\n                        return 0;\n                    }\n                    var_8h = arg_24h + 1;\n                    var_ch = puVar11;\n                    do {\n                        iVar7 = fcn.00446eda(arg_8h, arg_ch, arg_10h, arg_14h_00, arg_18h, arg_1ch, 0, var_8h);\n                        arg_8h = arg_8h + -1;\n                        if (iVar7 != 0) {\n                            return iVar7;\n                        }\n                    } while (var_ch <= arg_8h);\n                    return 0;\n                }\n            }\n        }\n        goto code_r0x00446f43;\n    case 0x26:\n    case 0x27:\n    case 0x28:\n    case 0x29:\n    case 0x2a:\n    case 0x2b:\n        uVar5 = *arg_ch;\n        var_ch = uVar5 - 0x26 & 1;\n        puVar6 = *(uVar5 + 0x45a2ae);\n        var_4h = *(uVar5 + 0x45a2b6);\n        puVar11 = arg_ch + 1;\n        if (var_4h != NULL) goto code_r0x00447c6f;\n        goto code_r0x00447c68;\n    case 0x2c:\n    case 0x2d:\n        puVar6 = NULL;\n        var_4h = CONCAT11(arg_ch[1], arg_ch[2]);\n        var_ch = *arg_ch == 0x2d;\n        goto code_r0x00447bed;\n    case 0x2e:\n        puVar6 = CONCAT11(arg_ch[1], arg_ch[2]);\n        var_4h = puVar6;\n        goto code_r0x00447bed;\n    case 0x2f:\n        puVar6 = NULL;\n        goto code_r0x00447c15;\n    case 0x30:\n        puVar6 = 0x1;\ncode_r0x00447c15:\n        var_8h = 1;\ncode_r0x00447c68:\n        puVar11 = arg_ch + 1;\n        var_4h = 0x7fffffff;\n        goto code_r0x00447c6f;\n    case 0x31:\n        puVar6 = NULL;\n        var_8h = 1;\n        var_4h = 0x1;\n        puVar11 = arg_ch + 1;\n        goto code_r0x00447c6f;\n    case 0x32:\n        puVar6 = NULL;\n        var_8h = 1;\n        var_4h = CONCAT11(arg_ch[1], arg_ch[2]);\ncode_r0x00447bed:\n        puVar11 = arg_ch + 3;\ncode_r0x00447c6f:\n        if (arg_14h_00[0x15] - arg_8h < puVar6) {\n            return 0;\n        }\n        var_10h = *puVar11;\n        arg_ch = puVar11 + 1;\n        if ((arg_18h & 1) == 0) {\n            arg_14h = 0x1;\n            puVar11 = arg_8h;\n            if (0 < puVar6) {\n                do {\n                    uVar4 = *arg_8h;\n                    arg_8h = arg_8h + 1;\n                    if (var_10h == uVar4) {\n                        return 0;\n                    }\n                    arg_14h = arg_14h + 1;\n                    puVar11 = arg_8h;\n                } while (arg_14h <= puVar6);\n            }\n            arg_8h = puVar11;\n            if (puVar6 != var_4h) {\n                if (var_ch != NULL) {\n                    var_8h = arg_24h + 1;\n                    arg_14h = puVar6;\n                    while( true ) {\n                        iVar7 = fcn.00446eda(puVar11, arg_ch, arg_10h, arg_14h_00, arg_18h, arg_1ch, 0, var_8h);\n                        if (iVar7 != 0) {\n                            return iVar7;\n                        }\n                        if (var_4h <= arg_14h) {\n                            return 0;\n                        }\n                        if (arg_14h_00[0x15] <= puVar11) {\n                            return 0;\n                        }\n                        uVar4 = *puVar11;\n                        puVar11 = puVar11 + 1;\n                        if (var_10h == uVar4) break;\n                        arg_14h = arg_14h + 1;\n                    }\n                    return 0;\n                }\n                for (; ((puVar6 < var_4h && (arg_8h < arg_14h_00[0x15])) && (var_10h != *arg_8h)); arg_8h = arg_8h + 1)\n                {\n                    puVar6 = puVar6 + 1;\n                }\n                if (var_8h == 0) {\n                    if (arg_8h < puVar11) {\n                        return 0;\n                    }\n                    var_8h = arg_24h + 1;\n                    var_ch = puVar11;\n                    do {\n                        iVar7 = fcn.00446eda(arg_8h, arg_ch, arg_10h, arg_14h_00, arg_18h, arg_1ch, 0, var_8h);\n                        if (iVar7 != 0) {\n                            return iVar7;\n                        }\n                        arg_8h = arg_8h + -1;\n                    } while (var_ch <= arg_8h);\n                    return 0;\n                }\n            }\n        }\n        else {\n            var_10h = var_10h[arg_14h_00[9]];\n            arg_14h = 0x1;\n            puVar11 = arg_8h;\n            if (0 < puVar6) {\n                do {\n                    uVar4 = *arg_8h;\n                    arg_8h = arg_8h + 1;\n                    if (var_10h == *(uVar4 + arg_14h_00[9])) {\n                        return 0;\n                    }\n                    arg_14h = arg_14h + 1;\n                    puVar11 = arg_8h;\n                } while (arg_14h <= puVar6);\n            }\n            arg_8h = puVar11;\n            if (puVar6 != var_4h) {\n                if (var_ch != NULL) {\n                    var_8h = arg_24h + 1;\n                    arg_14h = puVar6;\n                    while( true ) {\n                        iVar7 = fcn.00446eda(puVar11, arg_ch, arg_10h, arg_14h_00, arg_18h, arg_1ch, 0, var_8h);\n                        if (iVar7 != 0) {\n                            return iVar7;\n                        }\n                        if (var_4h <= arg_14h) {\n                            return 0;\n                        }\n                        if (arg_14h_00[0x15] <= puVar11) {\n                            return 0;\n                        }\n                        uVar4 = *puVar11;\n                        puVar11 = puVar11 + 1;\n                        if (var_10h == *(uVar4 + arg_14h_00[9])) break;\n                        arg_14h = arg_14h + 1;\n                    }\n                    return 0;\n                }\n                while (((puVar6 < var_4h && (arg_8h < arg_14h_00[0x15])) && (var_10h != *(*arg_8h + arg_14h_00[9])))) {\n                    puVar6 = puVar6 + 1;\n                    arg_8h = arg_8h + 1;\n                }\n                if (var_8h == 0) {\n                    if (arg_8h < puVar11) {\n                        return 0;\n                    }\n                    var_8h = arg_24h + 1;\n                    var_ch = puVar11;\n                    do {\n                        iVar7 = fcn.00446eda(arg_8h, arg_ch, arg_10h, arg_14h_00, arg_18h, arg_1ch, 0, var_8h);\n                        if (iVar7 != 0) {\n                            return iVar7;\n                        }\n                        arg_8h = arg_8h + -1;\n                    } while (var_ch <= arg_8h);\n                    return 0;\n                }\n            }\n        }\n        goto code_r0x00446f43;\n    case 0x33:\n    case 0x34:\n    case 0x35:\n    case 0x36:\n    case 0x37:\n    case 0x38:\n        uVar5 = *arg_ch;\n        var_ch = uVar5 - 0x33 & 1;\n        var_10h = *(uVar5 + 0x45a2a1);\n        var_4h = *(uVar5 + 0x45a2a9);\n        puVar6 = arg_ch + 1;\n        if (var_4h != NULL) goto code_r0x00447e6d;\n        goto code_r0x00447e66;\n    case 0x39:\n    case 0x3a:\n        var_10h = NULL;\n        var_4h = CONCAT11(arg_ch[1], arg_ch[2]);\n        var_ch = *arg_ch == 0x3a;\n        goto code_r0x00447ddc;\n    case 0x3b:\n        var_ch = 0x1;\n        var_10h = CONCAT11(arg_ch[1], arg_ch[2]);\n        var_4h = var_10h;\n        goto code_r0x00447ddc;\n    case 0x3c:\n        var_10h = NULL;\n        goto code_r0x00447e0a;\n    case 0x3d:\n        var_10h = 0x1;\ncode_r0x00447e0a:\n        var_8h = 1;\ncode_r0x00447e66:\n        puVar6 = arg_ch + 1;\n        var_4h = 0x7fffffff;\n        goto code_r0x00447e6d;\n    case 0x3e:\n        var_8h = 1;\n        var_10h = NULL;\n        var_4h = 0x1;\n        puVar6 = arg_ch + 1;\n        goto code_r0x00447e6d;\n    case 0x3f:\n        var_10h = NULL;\n        var_8h = 1;\n        var_4h = CONCAT11(arg_ch[1], arg_ch[2]);\ncode_r0x00447ddc:\n        puVar6 = arg_ch + 3;\ncode_r0x00447e6d:\n        var_14h = *puVar6;\n        puVar11 = arg_14h_00[0x15];\n        arg_ch = puVar6 + 1;\n        if (puVar11 - arg_8h < var_10h) {\n            return 0;\n        }\n        puVar6 = var_10h;\n        if (0 < var_10h) {\n    // switch table (11 cases) at 0x448b36\n            switch(var_14h) {\n            case 0x5:\n                arg_14h = 0x1;\n                if (0 < var_10h) {\n                    do {\n                        uVar4 = *arg_8h;\n                        arg_8h = arg_8h + 1;\n                        if ((*(uVar4 + arg_14h_00[10]) & 4) != 0) {\n                            return 0;\n                        }\n                        arg_14h = arg_14h + 1;\n                    } while (arg_14h <= var_10h);\n                }\n                break;\n            case 0x6:\n                arg_14h = 0x1;\n                if (0 < var_10h) {\n                    do {\n                        uVar4 = *arg_8h;\n                        arg_8h = arg_8h + 1;\n                        if ((*(uVar4 + arg_14h_00[10]) & 4) == 0) {\n                            return 0;\n                        }\n                        arg_14h = arg_14h + 1;\n                    } while (arg_14h <= var_10h);\n                }\n                break;\n            case 0x7:\n                arg_14h = 0x1;\n                if (0 < var_10h) {\n                    do {\n                        uVar4 = *arg_8h;\n                        arg_8h = arg_8h + 1;\n                        if ((*(uVar4 + arg_14h_00[10]) & 1) != 0) {\n                            return 0;\n                        }\n                        arg_14h = arg_14h + 1;\n                    } while (arg_14h <= var_10h);\n                }\n                break;\n            case 0x8:\n                arg_14h = 0x1;\n                if (0 < var_10h) {\n                    do {\n                        uVar4 = *arg_8h;\n                        arg_8h = arg_8h + 1;\n                        if ((*(uVar4 + arg_14h_00[10]) & 1) == 0) {\n                            return 0;\n                        }\n                        arg_14h = arg_14h + 1;\n                    } while (arg_14h <= var_10h);\n                }\n                break;\n            case 0x9:\n                arg_14h = 0x1;\n                if (0 < var_10h) {\n                    do {\n                        uVar4 = *arg_8h;\n                        arg_8h = arg_8h + 1;\n                        if ((*(uVar4 + arg_14h_00[10]) & 0x10) != 0) {\n                            return 0;\n                        }\n                        arg_14h = arg_14h + 1;\n                    } while (arg_14h <= var_10h);\n                }\n                break;\n            case 0xa:\n                arg_14h = 0x1;\n                if (0 < var_10h) {\n                    do {\n                        uVar4 = *arg_8h;\n                        arg_8h = arg_8h + 1;\n                        if ((*(uVar4 + arg_14h_00[10]) & 0x10) == 0) {\n                            return 0;\n                        }\n                        arg_14h = arg_14h + 1;\n                    } while (arg_14h <= var_10h);\n                }\n                break;\n            case 0xb:\n                if ((arg_18h & 4) != 0) goto code_r0x00447f17;\n                arg_14h = 0x1;\n                if (0 < var_10h) {\n                    do {\n                        if (arg_14h_00[6] == 0) {\n                            if ((arg_8h <= arg_14h_00[0x15] - arg_14h_00[7]) && (*arg_8h == *(arg_14h_00 + 8))) {\n                                if (arg_14h_00[7] == 1) {\n                                    return 0;\n                                }\n                                if (arg_8h[1] == *(arg_14h_00 + 0x21)) {\n                                    return 0;\n                                }\n                            }\n                        }\n                        else if ((arg_8h < arg_14h_00[0x15]) &&\n                                (iVar7 = fcn.004492f7(arg_8h, arg_14h_00[6], arg_14h_00[0x15], arg_14h_00 + 7, 0), \n                                puVar6 = var_10h,  iVar7 != 0)) {\n                            return 0;\n                        }\n                        arg_8h = arg_8h + 1;\n                        arg_14h = arg_14h + 1;\n                    } while (arg_14h <= puVar6);\n                }\n                break;\n            case 0xc:\ncode_r0x00447f17:\n                arg_8h = arg_8h + var_10h;\n                break;\n            default:\n                goto code_r0x004488ba;\n            case 0xf:\n                arg_14h = 0x1;\n                puVar10 = arg_8h;\n                if (0 < var_10h) {\n                    do {\n                        if (puVar11 <= puVar10) {\n                            return 0;\n                        }\n                        uVar4 = *puVar10;\n                        arg_8h = puVar10 + 1;\n                        if (uVar4 < 10) {\n                            return 0;\n                        }\n                        if (0xc < uVar4) {\n                            if (uVar4 == 0xd) {\n                                if ((arg_8h < puVar11) && (*arg_8h == 10)) {\n                                    arg_8h = puVar10 + 2;\n                                }\n                            }\n                            else if (uVar4 != 0x85) {\n                                return 0;\n                            }\n                        }\n                        arg_14h = arg_14h + 1;\n                        puVar10 = arg_8h;\n                    } while (arg_14h <= var_10h);\n                }\n            }\n        }\n        if (puVar6 != var_4h) {\n            if (var_ch != NULL) {\n                arg_14h = var_10h;\n                var_8h = arg_24h + 1;\n                goto code_r0x004489bf;\n            }\n            if (0xa < var_14h + -5) {\n                return -0xe;\n            }\n    // switch table (11 cases) at 0x448b62\n            var_ch = arg_8h;\n            switch(*((var_14h + -5) * 4 + 0x448b62)) {\n            case 0x4480a5:\n                if ((arg_18h & 4) != 0) goto code_r0x00448119;\n                arg_14h = puVar6;\n                if (puVar6 < var_4h) {\n                    while (puVar6 = arg_14h_00[0x15],  arg_8h < puVar6) {\n                        if (arg_14h_00[6] == 0) {\n                            if (((arg_8h <= puVar6 + -arg_14h_00[7]) && (*arg_8h == *(arg_14h_00 + 8))) &&\n                               ((arg_14h_00[7] == 1 || (arg_8h[1] == *(arg_14h_00 + 0x21))))) break;\n                        }\n                        else {\n                            iVar7 = fcn.004492f7(arg_8h, arg_14h_00[6], puVar6, arg_14h_00 + 7, 0);\n                            if (iVar7 != 0) break;\n                        }\n                        arg_8h = arg_8h + 1;\n                        arg_14h = arg_14h + 1;\n                        if (var_4h <= arg_14h) break;\n                    }\n                }\n                break;\n            case 0x448119:\ncode_r0x00448119:\n                uVar5 = var_4h - puVar6;\n                if (arg_14h_00[0x15] - arg_8h < var_4h - puVar6) {\n                    uVar5 = arg_14h_00[0x15] - arg_8h;\n                }\n                arg_8h = arg_8h + uVar5;\n                break;\n            case 0x44812f:\n                if (puVar6 < var_4h) {\n                    do {\n                        if (arg_14h_00[0x15] <= arg_8h) break;\n                        uVar4 = *arg_8h;\n                        if (uVar4 == 0xd) {\n                            arg_8h = arg_8h + 1;\n                            if (arg_14h_00[0x15] <= arg_8h) break;\n                            if (*arg_8h == 10) goto code_r0x00448174;\n                        }\n                        else {\n                            if ((((uVar4 != 10) && (uVar4 != 0xb)) && (uVar4 != 0xc)) && (uVar4 != 0x85)) break;\ncode_r0x00448174:\n                            arg_8h = arg_8h + 1;\n                        }\n                        puVar6 = puVar6 + 1;\n                    } while (puVar6 < var_4h);\n                }\n                break;\n            case 0x448180:\n                while (((puVar6 < var_4h && (arg_8h < arg_14h_00[0x15])) && ((*(*arg_8h + arg_14h_00[10]) & 4) == 0))) {\n                    arg_8h = arg_8h + 1;\n                    puVar6 = puVar6 + 1;\n                }\n                break;\n            case 0x4481ad:\n                while (((puVar6 < var_4h && (arg_8h < arg_14h_00[0x15])) && ((*(*arg_8h + arg_14h_00[10]) & 4) != 0))) {\n                    arg_8h = arg_8h + 1;\n                    puVar6 = puVar6 + 1;\n                }\n                break;\n            case 0x4481d3:\n                while (((puVar6 < var_4h && (arg_8h < arg_14h_00[0x15])) && ((*(*arg_8h + arg_14h_00[10]) & 1) == 0))) {\n                    arg_8h = arg_8h + 1;\n                    puVar6 = puVar6 + 1;\n                }\n                break;\n            case 0x4481f1:\n                while (((puVar6 < var_4h && (arg_8h < arg_14h_00[0x15])) && ((*(*arg_8h + arg_14h_00[10]) & 1) != 0))) {\n                    arg_8h = arg_8h + 1;\n                    puVar6 = puVar6 + 1;\n                }\n                break;\n            case 0x44820f:\n                while (((puVar6 < var_4h && (arg_8h < arg_14h_00[0x15])) && ((*(*arg_8h + arg_14h_00[10]) & 0x10) == 0))\n                      ) {\n                    arg_8h = arg_8h + 1;\n                    puVar6 = puVar6 + 1;\n                }\n                break;\n            case 0x44822d:\n                while (((puVar6 < var_4h && (arg_8h < arg_14h_00[0x15])) && ((*(*arg_8h + arg_14h_00[10]) & 0x10) != 0))\n                      ) {\n                    arg_8h = arg_8h + 1;\n                    puVar6 = puVar6 + 1;\n                }\n                break;\n            case 0x4488ba:\n                goto code_r0x004488ba;\n            }\n            if (var_8h == 0) {\n                if (arg_8h < var_ch) {\n                    return 0;\n                }\n                var_8h = arg_24h + 1;\n                do {\n                    iVar7 = fcn.00446eda(arg_8h, arg_ch, arg_10h, arg_14h_00, arg_18h, arg_1ch, 0, var_8h);\n                    arg_8h = arg_8h + -1;\n                    if (iVar7 != 0) {\n                        return iVar7;\n                    }\n                } while (var_ch <= arg_8h);\n                return 0;\n            }\n        }\n        goto code_r0x00446f43;\n    case 0x48:\n    case 0x49:\n        var_14h = arg_ch + 1;\n        uVar4 = arg_ch[0x21];\n        if (uVar4 < 0x40) {\ncode_r0x00447932:\n            var_4h = 0x1;\n            var_10h = 0x1;\n            arg_ch = arg_ch + 0x21;\n        }\n        else if (uVar4 < 0x46) {\n            uVar5 = uVar4;\n            var_ch = uVar5 - 0x40 & 1;\n            var_10h = *(uVar5 + 0x45a294);\n            var_4h = *(uVar5 + 0x45a29c);\n            arg_ch = arg_ch + 0x22;\n            if (var_4h == NULL) {\n                var_4h = 0x7fffffff;\n            }\n        }\n        else {\n            if (0x47 < uVar4) goto code_r0x00447932;\n            var_ch = uVar4 == 0x47;\n            var_4h = CONCAT11(arg_ch[0x24], arg_ch[0x25]);\n            var_10h = CONCAT11(arg_ch[0x22], arg_ch[0x23]);\n            if (var_4h == NULL) {\n                var_4h = 0x7fffffff;\n            }\n            arg_ch = arg_ch + 0x26;\n        }\n        arg_14h = 0x1;\n        if (0 < var_10h) {\n            do {\n                if (arg_14h_00[0x15] <= arg_8h) {\n                    return 0;\n                }\n                uVar4 = *arg_8h;\n                arg_8h = arg_8h + 1;\n                if ((var_14h[uVar4 >> 3] & 1 << (uVar4 & 7)) == 0) {\n                    return 0;\n                }\n                arg_14h = arg_14h + 1;\n            } while (arg_14h <= var_10h);\n        }\n        if (var_10h != var_4h) {\n            arg_14h = var_10h;\n            if (var_ch != NULL) {\n                var_8h = arg_24h + 1;\n                while( true ) {\n                    iVar7 = fcn.00446eda(arg_8h, arg_ch, arg_10h, arg_14h_00, arg_18h, arg_1ch, 0, var_8h);\n                    if (iVar7 != 0) {\n                        return iVar7;\n                    }\n                    if (var_4h <= arg_14h) {\n                        return 0;\n                    }\n                    if (arg_14h_00[0x15] <= arg_8h) {\n                        return 0;\n                    }\n                    uVar4 = *arg_8h;\n                    arg_8h = arg_8h + 1;\n                    if ((var_14h[uVar4 >> 3] & 1 << (uVar4 & 7)) == 0) break;\n                    arg_14h = arg_14h + 1;\n                }\n                return 0;\n            }\n            puVar6 = arg_8h;\n            if (var_10h < var_4h) goto code_r0x004486f5;\n            goto code_r0x00448729;\n        }\n        goto code_r0x00446f43;\n    case 0x4b:\n        var_14h = CONCAT11(arg_ch[1], arg_ch[2]) * 2;\n        if (var_14h < arg_10h) {\n            piVar1 = arg_14h_00[3] + CONCAT11(arg_ch[1], arg_ch[2]) * 8;\n            iVar7 = *piVar1;\n            if (iVar7 < 0) goto code_r0x004477b7;\n            var_18h = piVar1[1] - iVar7;\n        }\n        else {\ncode_r0x004477b7:\n            var_18h = (arg_14h_00[0x15] - arg_8h) + 1;\n        }\n        uVar4 = arg_ch[3];\n        if (uVar4 < 0x40) {\ncode_r0x00447898:\n            iVar7 = fcn.00446e7c(arg_8h, arg_18h);\n            if (iVar7 == 0) {\n                return 0;\n            }\n            arg_8h = arg_8h + var_18h;\n            arg_ch = arg_ch + 3;\n        }\n        else {\n            if (uVar4 < 0x46) {\n                uVar5 = uVar4;\n                var_ch = uVar5 - 0x40 & 1;\n                var_10h = *(uVar5 + 0x45a294);\n                var_4h = *(uVar5 + 0x45a29c);\n                arg_ch = arg_ch + 4;\n                if (var_4h == NULL) {\n                    var_4h = 0x7fffffff;\n                }\n            }\n            else {\n                if (0x47 < uVar4) goto code_r0x00447898;\n                var_ch = uVar4 == 0x47;\n                var_4h = CONCAT11(arg_ch[6], arg_ch[7]);\n                var_10h = CONCAT11(arg_ch[4], arg_ch[5]);\n                if (var_4h == NULL) {\n                    var_4h = 0x7fffffff;\n                }\n                arg_ch = arg_ch + 8;\n            }\n            if (var_18h != 0) {\n                arg_14h = 0x1;\n                if (0 < var_10h) {\n                    do {\n                        iVar7 = fcn.00446e7c(arg_8h, arg_18h);\n                        if (iVar7 == 0) {\n                            return 0;\n                        }\n                        arg_8h = arg_8h + var_18h;\n                        arg_14h = arg_14h + 1;\n                    } while (arg_14h <= var_10h);\n                }\n                if (var_10h != var_4h) {\n                    if (var_ch != NULL) {\n                        arg_14h = var_10h;\n                        var_8h = arg_24h + 1;\n                        while( true ) {\n                            iVar7 = fcn.00446eda(arg_8h, arg_ch, arg_10h, arg_14h_00, arg_18h, arg_1ch, 0, var_8h);\n                            if (iVar7 != 0) {\n                                return iVar7;\n                            }\n                            if (var_4h <= arg_14h) break;\n                            iVar7 = fcn.00446e7c(arg_8h, arg_18h);\n                            if (iVar7 == 0) {\n                                return 0;\n                            }\n                            arg_8h = arg_8h + var_18h;\n                            arg_14h = arg_14h + 1;\n                        }\n                        return 0;\n                    }\n                    arg_14h = var_10h;\n                    var_ch = arg_8h;\n                    if (var_10h < var_4h) goto code_r0x00448631;\n                    goto code_r0x0044865f;\n                }\n            }\n        }\n        goto code_r0x00446f43;\n    case 0x4c:\n        arg_14h = arg_14h_00[0x13] + CONCAT11(arg_ch[1], arg_ch[2]);\n        if (arg_14h == arg_14h_00[0x13]) {\n            var_30h = 0;\n        }\n        else {\n            var_30h = CONCAT11(*(arg_14h + 3), *(arg_14h + 4));\n        }\n        var_34h = arg_14h_00[0x1d];\n        arg_14h_00[0x1d] = &var_34h;\n        var_20h = arg_14h_00[4];\n        var_2ch = arg_ch + 3;\n        if (var_20h < 0x1f) {\n            var_24h = &var_e4h;\n        }\n        else {\n            var_24h = (**0x465148)(var_20h << 2);\n            if (var_24h == NULL) {\n                return -6;\n            }\n        }\n        fcn.0044a6b0(var_24h, arg_14h_00[3], var_20h << 2);\n        var_28h = arg_14h_00[0x16];\n        arg_14h_00[0x16] = arg_8h;\n        uVar4 = *arg_14h;\n        bVar12 = uVar4 < 0x5b;\n        var_8h = arg_24h + 1;\n        while( true ) {\n            iVar7 = fcn.00446eda(arg_8h, arg_14h + *(uVar4 + 0x45a2e8), arg_10h, arg_14h_00, arg_18h, arg_1ch, \n                                 (-bVar12 & 0xfffffffe) + 2, var_8h);\n            if (iVar7 == 1) {\n                arg_14h_00[0x1d] = var_34h;\n                if (var_24h != &var_e4h) {\n                    (**0x46514c)(var_24h);\n                }\n                return 1;\n            }\n            if (iVar7 != 0) break;\n            arg_14h_00[0x1d] = &var_34h;\n            fcn.0044a6b0(arg_14h_00[3], var_24h, var_20h << 2);\n            arg_14h = arg_14h + CONCAT11(*(arg_14h + 1), *(arg_14h + 2));\n            uVar4 = *arg_14h;\n            if (uVar4 != 0x4e) {\n                arg_14h_00[0x1d] = var_34h;\n                if (var_24h == &var_e4h) {\n                    return 0;\n                }\n                (**0x46514c)(var_24h);\n                return 0;\n            }\n        }\n        return iVar7;\n    case 0x4d:\n        if (*0x4673c0 != NULL) {\n            var_60h = arg_ch[1];\n            var_5ch = arg_14h_00[3];\n            var_58h = arg_14h_00[0x14];\n            var_54h = arg_14h_00[0x15] - var_58h;\n            var_50h = arg_14h_00[0x16] - var_58h;\n            var_4ch = arg_8h - var_58h;\n            var_64h = 1;\n            var_3ch = CONCAT11(arg_ch[2], arg_ch[3]);\n            var_38h = CONCAT11(arg_ch[4], arg_ch[5]);\n            var_48h = arg_10h / 2;\n            var_44h = arg_14h_00[0x19];\n            var_40h = arg_14h_00[0x1e];\n            iVar7 = (**0x4673c0)(&var_64h);\n            if (0 < iVar7) {\n                return 0;\n            }\n            if (iVar7 < 0) {\n                return iVar7;\n            }\n        }\n        arg_ch = arg_ch + 6;\n        goto code_r0x00446f43;\n    case 0x4e:\n        do {\n            arg_ch = arg_ch + CONCAT11(arg_ch[1], arg_ch[2]);\n        } while (*arg_ch == 0x4e);\n        goto code_r0x00446f43;\n    case 0x4f:\n    case 0x50:\n    case 0x51:\n        puVar11 = arg_ch + -CONCAT11(arg_ch[1], arg_ch[2]);\n        uVar4 = *puVar11;\n        if (uVar4 < 0x5b) {\n            var_10h = NULL;\n        }\n        else {\n            var_10h = arg_1ch[1];\n            arg_1ch = *arg_1ch;\n        }\n        if ((((uVar4 == 0x52) || (uVar4 == 0x53)) || (uVar4 == 0x54)) || ((uVar4 == 0x55 || (uVar4 == 0x57)))) {\n            arg_14h_00[0x17] = arg_8h;\n            arg_14h_00[0x18] = arg_10h;\n            return 1;\n        }\n        if ((uVar4 == 0x59) || (uVar4 == 0x5c)) {\n            var_18h = CONCAT11(puVar11[3], puVar11[4]);\n            arg_14h_00[0x19] = var_18h;\n            if (var_18h * 2 < arg_14h_00[5]) {\n                *(arg_14h_00[3] + var_18h * 8) = *(arg_14h_00[3] + (arg_14h_00[4] - var_18h) * 4);\n                *(var_18h * 8 + 4 + arg_14h_00[3]) = arg_8h - arg_14h_00[0x14];\n                if (arg_10h <= var_18h * 2) {\n                    arg_10h = var_18h * 2 + 2;\n                }\n            }\n            else {\n                arg_14h_00[0xb] = 1;\n            }\n            puVar3 = arg_14h_00[0x1d];\n            if ((puVar3 != NULL) && (puVar3[1] == var_18h)) {\n                arg_14h_00[0x1d] = *puVar3;\n                arg_14h_00[0x16] = puVar3[3];\n                fcn.0044a6b0(arg_14h_00[3], puVar3[4], puVar3[5] << 2);\n                arg_18h = var_1ch;\n                arg_ch = puVar3[2];\n                goto code_r0x00446f43;\n            }\n        }\n        arg_18h = var_1ch;\n        if ((*arg_ch == 0x4f) || (arg_8h == var_10h)) goto code_r0x00447135;\n        arg_20h = (-(*puVar11 < 0x5b) & 0xfffffffe) + 2;\n        if (*arg_ch == 0x51) {\n            iVar7 = fcn.00446eda(arg_8h, arg_ch + 3, arg_10h, arg_14h_00, var_1ch, arg_1ch, 0, arg_24h + 1);\n            if (iVar7 != 0) {\n                return iVar7;\n            }\n            goto code_r0x0044832d;\n        }\n        iVar7 = fcn.00446eda(arg_8h, puVar11, arg_10h, arg_14h_00, var_1ch, arg_1ch, arg_20h, arg_24h + 1);\n        if (iVar7 != 0) {\n            return iVar7;\n        }\n        arg_ch = arg_ch + 3;\ncode_r0x00448389:\n        arg_20h = 4;\n        goto code_r0x00448390;\n    case 0x52:\n    case 0x54:\n        do {\n            iVar7 = fcn.00446eda(arg_8h, arg_ch + 3, arg_10h, arg_14h_00, arg_18h, NULL, 0, arg_24h + 1);\n            if (iVar7 == 1) break;\n            if (iVar7 != 0) {\n                return iVar7;\n            }\n            arg_ch = arg_ch + CONCAT11(arg_ch[1], arg_ch[2]);\n        } while (*arg_ch == 0x4e);\n        if (*arg_ch == 0x4f) {\n            return 0;\n        }\n        if ((arg_20h & 1) != 0) {\n            return 1;\n        }\n        do {\n            arg_ch = arg_ch + CONCAT11(arg_ch[1], arg_ch[2]);\n        } while (*arg_ch == 0x4e);\n        arg_10h = arg_14h_00[0x18];\n        arg_ch = arg_ch + 3;\n        goto code_r0x00446f43;\n    case 0x53:\n    case 0x55:\n        do {\n            iVar7 = fcn.00446eda(arg_8h, arg_ch + 3, arg_10h, arg_14h_00, arg_18h, NULL, 0, arg_24h + 1);\n            if (iVar7 == 1) {\n                return 0;\n            }\n            if (iVar7 != 0) {\n                return iVar7;\n            }\n            arg_ch = arg_ch + CONCAT11(arg_ch[1], arg_ch[2]);\n        } while (*arg_ch == 0x4e);\n        puVar6 = arg_ch;\n        if ((arg_20h & 1) != 0) {\n            return 1;\n        }\n        goto code_r0x00447135;\n    case 0x56:\n        arg_8h = arg_8h + -CONCAT11(arg_ch[1], arg_ch[2]);\n        if (arg_8h < arg_14h_00[0x14]) {\n            return 0;\n        }\n        goto code_r0x00447135;\n    case 0x57:\n        var_10h = arg_8h;\n        do {\n            iVar7 = fcn.00446eda(arg_8h, puVar6 + 3, arg_10h, arg_14h_00, arg_18h, arg_1ch, 0, arg_24h + 1);\n            if (iVar7 == 1) break;\n            if (iVar7 != 0) {\n                return iVar7;\n            }\n            puVar6 = puVar6 + CONCAT11(puVar6[1], puVar6[2]);\n        } while (*puVar6 == 0x4e);\n        if ((*puVar6 != 0x57) && (*puVar6 != 0x4e)) {\n            return 0;\n        }\n        do {\n            puVar6 = puVar6 + CONCAT11(puVar6[1], puVar6[2]);\n        } while (*puVar6 == 0x4e);\n        arg_10h = arg_14h_00[0x18];\n        arg_8h = arg_14h_00[0x17];\n        if ((*puVar6 != 0x4f) && (arg_8h != var_10h)) {\n            var_14h = puVar6 + 3;\n            if (*var_14h == 0x13) {\n                arg_18h = puVar6[4] | arg_18h & 0xfffffff8;\n            }\n            if (*puVar6 == 0x51) {\n                iVar7 = fcn.00446eda(arg_8h, var_14h, arg_10h, arg_14h_00, arg_18h, arg_1ch, 0, arg_24h + 1);\n                if (iVar7 != 0) {\n                    return iVar7;\n                }\n            }\n            else {\n                iVar7 = fcn.00446eda(arg_8h, arg_ch, arg_10h, arg_14h_00, arg_18h, arg_1ch, 2, arg_24h + 1);\n                arg_ch = var_14h;\n                if (iVar7 != 0) {\n                    return iVar7;\n                }\n            }\n            goto code_r0x00448389;\n        }\n        goto code_r0x00447135;\n    case 0x58:\n    case 0x5b:\n        goto code_r0x004482c7;\n    case 0x59:\n    case 0x5c:\n        goto code_r0x004482b1;\n    case 0x5a:\n    case 0x5d:\n        uVar2 = arg_ch[3];\n        if (uVar2 == 0x5f) {\n            if ((arg_14h_00[0x1d] == 0) ||\n               ((CONCAT11(arg_ch[4], arg_ch[5]) != 0xffff && (CONCAT11(arg_ch[4], arg_ch[5]) != *(arg_14h_00[0x1d] + 4))\n                ))) {\ncode_r0x0044700a:\n                bVar12 = false;\n                uVar5 = CONCAT11(arg_ch[1], arg_ch[2]);\n            }\n            else {\ncode_r0x00446fa8:\n                bVar12 = true;\n                uVar5 = 3;\n            }\n            puVar6 = arg_ch + uVar5;\n            if (!bVar12) {\ncode_r0x0044701a:\n                if (*puVar6 != 0x4e) goto code_r0x00447135;\n            }\n        }\n        else {\n            if (uVar2 == 0x5e) {\n                if ((arg_10h <= CONCAT11(arg_ch[4], arg_ch[5]) * 2) ||\n                   (*(arg_14h_00[3] + CONCAT11(arg_ch[4], arg_ch[5]) * 8) < 0)) goto code_r0x0044700a;\n                goto code_r0x00446fa8;\n            }\n            if (uVar2 == 0x60) {\n                puVar6 = arg_ch + CONCAT11(arg_ch[1], arg_ch[2]);\n                goto code_r0x0044701a;\n            }\n            iVar7 = fcn.00446eda(arg_8h, arg_ch + 3, arg_10h, arg_14h_00, arg_18h, NULL, 1, arg_24h + 1);\n            if (iVar7 != 1) {\n                if (iVar7 != 0) {\n                    return iVar7;\n                }\n                goto code_r0x0044700a;\n            }\n            for (puVar6 = arg_ch + CONCAT11(arg_ch[4], arg_ch[5]) + 3; *puVar6 == 0x4e;\n                puVar6 = puVar6 + CONCAT11(puVar6[1], puVar6[2])) {\n            }\n        }\n        if (uVar4 == 0x5d) {\n            arg_20h = 2;\n        }\n        else {\n            arg_20h = 0;\n        }\n        arg_20h = arg_20h | 4;\n        arg_ch = puVar6 + 3;\n        goto code_r0x00448390;\n    case 0x61:\n        puVar6 = arg_ch + 1;\n        iVar7 = fcn.00446eda(arg_8h, puVar6, arg_10h, arg_14h_00, arg_18h, arg_1ch, 0, arg_24h + 1);\n        if (iVar7 != 0) {\n            return iVar7;\n        }\n        do {\n            puVar6 = puVar6 + CONCAT11(puVar6[1], puVar6[2]);\n        } while (*puVar6 == 0x4e);\ncode_r0x00447135:\n        arg_ch = puVar6 + 3;\n        goto code_r0x00446f43;\n    case 0x62:\n        goto code_r0x004472ec;\n    }\n    arg_ch = arg_ch + 1;\n    arg_8h = puVar11;\n    goto code_r0x00446f43;\ncode_r0x004472ec:\n    arg_ch = arg_ch + 1;\n    puVar6 = arg_ch;\n    do {\n        puVar6 = puVar6 + CONCAT11(puVar6[1], puVar6[2]);\n    } while (*puVar6 == 0x4e);\n    iVar7 = fcn.00446eda(arg_8h, puVar6 + 3, arg_10h, arg_14h_00, arg_18h, arg_1ch, 0, arg_24h + 1);\n    if (iVar7 != 0) {\n        return iVar7;\n    }\n    goto code_r0x00446f43;\ncode_r0x004482b1:\n    var_18h = CONCAT11(arg_ch[3], arg_ch[4]);\n    if (var_18h * 2 < arg_14h_00[5]) {\n        var_10h = var_18h * 8;\n        puVar9 = var_10h + arg_14h_00[3];\n        var_1ch = *puVar9;\n        var_ch = puVar9[1];\n        piVar1 = arg_14h_00[3] + (arg_14h_00[4] - var_18h) * 4;\n        var_4h = *piVar1;\n        var_14h = arg_14h_00[0x19];\n        *piVar1 = arg_8h - arg_14h_00[0x14];\n        if (uVar4 == 0x5c) {\n            arg_20h = 2;\n        }\n        else {\n            arg_20h = 0;\n        }\n        var_8h = arg_24h + 1;\n        do {\n            iVar7 = fcn.00446eda(arg_8h, arg_ch + *(*arg_ch + 0x45a2e8), arg_10h, arg_14h_00, arg_18h, arg_1ch, arg_20h\n                                 , var_8h);\n            if (iVar7 != 0) {\n                return iVar7;\n            }\n            arg_14h_00[0x19] = var_14h;\n            arg_ch = arg_ch + CONCAT11(arg_ch[1], arg_ch[2]);\n        } while (*arg_ch == 0x4e);\n        *(var_10h + arg_14h_00[3]) = var_1ch;\n        *(var_10h + 4 + arg_14h_00[3]) = var_ch;\n        *(arg_14h_00[3] + (arg_14h_00[4] - var_18h) * 4) = var_4h;\n        return 0;\n    }\ncode_r0x004482c7:\n    if (uVar4 < 0x5b) {\n        arg_20h = 0;\n    }\n    else {\n        arg_20h = 2;\n    }\n    for (; arg_ch[CONCAT11(arg_ch[1], arg_ch[2])] == 0x4e; arg_ch = arg_ch + CONCAT11(arg_ch[1], arg_ch[2])) {\n        iVar7 = fcn.00446eda(arg_8h, arg_ch + *(*arg_ch + 0x45a2e8), arg_10h, arg_14h_00, arg_18h, arg_1ch, arg_20h, \n                             arg_24h + 1);\n        if (iVar7 != 0) {\n            return iVar7;\n        }\n    }\n    puVar11 = arg_ch + *(*arg_ch + 0x45a2e8);\ncode_r0x0044832d:\n    arg_20h = arg_20h | 4;\n    arg_ch = puVar11;\ncode_r0x00448390:\n    if (arg_14h_00[1] <= *arg_14h_00) goto code_r0x0044839b;\n    goto code_r0x00446efa;\ncode_r0x004489bf:\n    iVar7 = fcn.00446eda(arg_8h, arg_ch, arg_10h, arg_14h_00, arg_18h, arg_1ch, 0, var_8h);\n    if (iVar7 != 0) {\n        return iVar7;\n    }\n    if (var_4h <= arg_14h) {\n        return 0;\n    }\n    puVar6 = arg_14h_00[0x15];\n    if (puVar6 <= arg_8h) {\n        return 0;\n    }\n    if ((arg_18h & 4) == 0) {\n        if (arg_14h_00[6] == 0) {\n            if ((arg_8h <= puVar6 + -arg_14h_00[7]) && (*arg_8h == *(arg_14h_00 + 8))) {\n                if (arg_14h_00[7] == 1) {\n                    return 0;\n                }\n                if (arg_8h[1] == *(arg_14h_00 + 0x21)) {\n                    return 0;\n                }\n            }\n        }\n        else {\n            iVar7 = fcn.004492f7(arg_8h, arg_14h_00[6], puVar6, arg_14h_00 + 7, 0);\n            if (iVar7 != 0) {\n                return 0;\n            }\n        }\n    }\n    uVar5 = *arg_8h;\n    puVar6 = arg_8h + 1;\n    if (0xa < var_14h + -5) {\ncode_r0x004488ba:\n        return -0xe;\n    }\n    // switch table (11 cases) at 0x448b8e\n    switch(*((var_14h + -5) * 4 + 0x448b8e)) {\n    case 0x4488ba:\n        goto code_r0x004488ba;\n    case 0x448952:\n        if (uVar5 < 10) {\n            return 0;\n        }\n        if (0xc < uVar5) {\n            if (uVar5 != 0xd) {\n                bVar12 = uVar5 == 0x85;\n                break;\n            }\n            if ((puVar6 < arg_14h_00[0x15]) && (*puVar6 == 10)) {\n                puVar6 = arg_8h + 2;\n            }\n        }\n        goto code_r0x004489b9;\n    case 0x448979:\n        bVar12 = (*(uVar5 + arg_14h_00[10]) & 4) == 0;\n        break;\n    case 0x448988:\n        bVar12 = (*(uVar5 + arg_14h_00[10]) & 4) == 0;\n        break;\n    case 0x448991:\n        bVar12 = (*(uVar5 + arg_14h_00[10]) & 1) == 0;\n        break;\n    case 0x44899a:\n        bVar12 = (*(uVar5 + arg_14h_00[10]) & 1) == 0;\n        break;\n    case 0x4489a3:\n        bVar12 = (*(uVar5 + arg_14h_00[10]) & 0x10) == 0;\n        break;\n    case 0x4489ac:\n        bVar12 = (*(uVar5 + arg_14h_00[10]) & 0x10) == 0;\n        break;\n    case 0x4489b9:\n        goto code_r0x004489b9;\n    }\n    if (bVar12) {\n        return 0;\n    }\ncode_r0x004489b9:\n    arg_14h = arg_14h + 1;\n    arg_8h = puVar6;\n    goto code_r0x004489bf;\n    while( true ) {\n        arg_8h = arg_8h + var_18h;\n        arg_14h = arg_14h + 1;\n        if (var_4h <= arg_14h) break;\ncode_r0x00448631:\n        iVar7 = fcn.00446e7c(arg_8h, arg_18h);\n        if (iVar7 == 0) break;\n    }\n    if (arg_8h < var_ch) {\n        return 0;\n    }\ncode_r0x0044865f:\n    var_8h = arg_24h + 1;\n    do {\n        iVar7 = fcn.00446eda(arg_8h, arg_ch, arg_10h, arg_14h_00, arg_18h, arg_1ch, 0, var_8h);\n        if (iVar7 != 0) {\n            return iVar7;\n        }\n        arg_8h = arg_8h + -var_18h;\n    } while (var_ch <= arg_8h);\n    return 0;\n    while( true ) {\n        puVar6 = puVar6 + 1;\n        arg_14h = arg_14h + 1;\n        if (var_4h <= arg_14h) break;\ncode_r0x004486f5:\n        if ((arg_14h_00[0x15] <= puVar6) || ((var_14h[*puVar6 >> 3] & 1 << (*puVar6 & 7)) == 0)) break;\n    }\n    if (arg_8h <= puVar6) {\ncode_r0x00448729:\n        var_8h = arg_24h + 1;\n        var_ch = arg_8h;\n        do {\n            iVar7 = fcn.00446eda(puVar6, arg_ch, arg_10h, arg_14h_00, arg_18h, arg_1ch, 0, var_8h);\n            if (iVar7 != 0) {\n                return iVar7;\n            }\n            puVar6 = puVar6 + -1;\n        } while (var_ch <= puVar6);\n    }\n    return 0;\n}\n",
        "token_count": 18750
    },
    "00448bba": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.00448bba(int32_t *param_1, uint32_t *param_2, uint8_t *param_3, int32_t param_4, int32_t param_5, \n                    uint32_t param_6, int32_t *param_7, int32_t param_8)\n\n{\n    int32_t *piVar1;\n    uint8_t uVar2;\n    uint16_t uVar3;\n    uint8_t *puVar4;\n    int32_t *piVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    uint8_t *puVar8;\n    int32_t iVar9;\n    uint32_t uVar10;\n    int32_t iVar11;\n    uint8_t *puVar12;\n    uint32_t unaff_ESI;\n    uint8_t *puVar13;\n    uint8_t *arg_8h;\n    uint8_t *unaff_EDI;\n    uint32_t uVar14;\n    int32_t *piVar15;\n    uchar auStackY8272 [8000];\n    uint8_t auStackY272 [40];\n    uchar auStackY232 [40];\n    uint32_t uStackY192;\n    uint8_t *puStackY188;\n    uint uStackY184;\n    uint32_t uStackY180;\n    uint32_t uStackY176;\n    int32_t *piStackY172;\n    uint8_t *puStackY168;\n    int32_t iStackY164;\n    uint32_t uStackY160;\n    int32_t iStackY156;\n    uint8_t uStackY152;\n    uint8_t uStackY151;\n    uint32_t uStackY148;\n    int32_t iStackY144;\n    int32_t iStackY140;\n    uint32_t uStackY136;\n    uint32_t uStackY132;\n    uchar *puStackY128;\n    uint32_t uStackY124;\n    uint32_t uStackY120;\n    uint32_t uStackY116;\n    int32_t iStackY112;\n    uint32_t uStackY108;\n    uint8_t *puStackY104;\n    uint8_t *puStackY100;\n    uint8_t *puStackY96;\n    int32_t iStackY92;\n    int32_t iStackY88;\n    uint uStackY84;\n    int32_t iStackY80;\n    uchar *puStackY76;\n    uint uStackY72;\n    uint uStackY68;\n    uint32_t uStackY64;\n    uint32_t uStackY56;\n    uint32_t uStackY52;\n    uint8_t *puVar16;\n    uint8_t *arg_ch;\n    uchar *arg_14h;\n    uchar *puVar17;\n    uchar *puVar18;\n    uchar *puVar19;\n    \n    uVar14 = param_6;\n    puStackY104 = param_3;\n    fcn.0044c510();\n    arg_ch = 0xffffffff;\n    puStackY188 = param_3 + param_5;\n    puVar4 = puStackY188 + -1;\n    arg_14h = NULL;\n    puVar16 = NULL;\n    uStackY56 = 0;\n    if ((param_6 & 0xff8f5a6f) != 0) {\n        return -3;\n    }\n    if (((param_1 == NULL) || (param_3 == NULL)) || ((param_7 == NULL && (0 < param_8)))) {\n        return -2;\n    }\n    if (param_8 < 0) {\n        return -0xf;\n    }\n    uStackY180 = 20000;\n    uStackY176 = 20000;\n    param_6 = param_1[8];\n    param_3 = NULL;\n    uStackY64 = 0;\n    if (param_2 != NULL) {\n        uVar7 = *param_2;\n        if ((uVar7 & 1) != 0) {\n            param_3 = param_2[1];\n        }\n        if ((uVar7 & 2) != 0) {\n            uStackY180 = param_2[2];\n        }\n        if ((uVar7 & 0x10) != 0) {\n            uStackY176 = param_2[5];\n        }\n        if ((uVar7 & 4) != 0) {\n            uStackY64 = param_2[3];\n        }\n        if ((uVar7 & 8) != 0) {\n            param_6 = param_2[4];\n        }\n    }\n    if (param_6 == 0) {\n        param_6 = 0x45a350;\n    }\n    piVar5 = param_1;\n    if (*param_1 != 0x50435245) {\n        arg_ch = &stack0xfffffef0;\n        puVar16 = 0x448cbf;\n        arg_14h = param_3;\n        piVar5 = fcn.0044942d(param_1, arg_ch, param_3, &stack0xffffff18);\n        if (piVar5 == NULL) {\n            return -4;\n        }\n        if (param_3 != NULL) {\n            param_3 = &stack0xffffff18;\n        }\n    }\n    uVar7 = piVar5[2];\n    uVar10 = (uVar7 | uVar14) >> 4 & 1;\n    uVar6 = uVar7 >> 0x12 & 1;\n    uStackY52 = uVar7 >> 0x1c & 1;\n    uStackY108 = param_1 + *(piVar5 + 6) + *(piVar5 + 7) * *(piVar5 + 0x1a);\n    iStackY80 = param_5;\n    puVar12 = puStackY104 + param_4;\n    uStackY124 = piVar5[2] >> 5 & 1;\n    puStackY128 = piVar5[2] >> 0xb & 1;\n    uStackY136 = uVar14 >> 7 & 1;\n    uStackY132 = uVar14 >> 8 & 1;\n    uStackY120 = uVar14 >> 10 & 1;\n    uStackY116 = uVar14 >> 0xf & 1;\n    puStackY76 = &stack0xffffdfb0;\n    uStackY148 = param_6;\n    iStackY144 = param_6 + 0x340;\n    iStackY112 = 0;\n    uStackY68 = 0;\n    if ((uVar14 & 0x700000) == 0) {\n        uVar14 = piVar5[2];\n    }\n    uVar14 = uVar14 & 0x700000;\n    uVar7 = 10;\n    if (uVar14 != 0) {\n        if (uVar14 == 0x100000) {\n            uVar7 = 0xd;\n        }\n        else if (uVar14 != 0x200000) {\n            if (uVar14 != 0x300000) {\n                if (uVar14 == 0x400000) {\n                    uStackY160 = 1;\n                }\n                else {\n                    if (uVar14 != 0x500000) {\n                        return -0x17;\n                    }\n                    uStackY160 = 2;\n                }\n                goto code_r0x00448e0b;\n            }\n            uVar7 = 0xd0a;\n        }\n    }\n    uStackY160 = 0;\n    if (uVar7 < 0x100) {\n        iStackY156 = 1;\n        uStackY152 = uVar7;\n    }\n    else {\n        iStackY156 = 2;\n        uStackY152 = uVar7 >> 8;\n        uStackY151 = uVar7;\n    }\ncode_r0x00448e0b:\n    if ((uStackY116 != 0) && ((piVar5[2] & 0x80000000U) != 0)) {\n        return -0xd;\n    }\n    uStackY192 = piVar5[2] & 7;\n    uVar3 = *(piVar5 + 0x12);\n    puStackY168 = param_8 - param_8 % 3;\n    puStackY100 = puVar12;\n    puVar18 = puStackY128;\n    if ((uVar3 == 0) || (uVar3 < puStackY168 / 3)) {\n        piStackY172 = param_7;\n    }\n    else {\n        puStackY168 = (uVar3 + 1) * 3;\n        piStackY172 = (**0x465148)();\n        if (piStackY172 == NULL) {\n            return -6;\n        }\n        arg_14h = 0x1;\n    }\n    puVar17 = 0x3;\n    iStackY164 = (puStackY168 * 2) / 3;\n    uStackY84 = 0xffffffff;\n    iStackY140 = 0;\n    puVar8 = *(piVar5 + 4) * 2 + 2;\n    if (param_8 < puVar8) {\n        puVar8 = puStackY168;\n    }\n    if (piStackY172 != NULL) {\n        piVar15 = piStackY172 + puStackY168;\n        piVar1 = piVar15 + (1 - puVar8 / 2);\n        while (piVar15 = piVar15 + -1,  piVar1 <= piVar15) {\n            *piVar15 = -1;\n        }\n    }\n    if (uVar10 == 0) {\n        if ((piVar5[2] & 0x40000000U) == 0) {\n            if (((uStackY52 == 0) && (param_3 != NULL)) && ((param_3[4] & 1) != 0)) {\n                puVar17 = param_3 + 8;\n            }\n        }\n        else {\n            unaff_ESI = *(piVar5 + 5) & 0xff;\n            uVar3 = *(piVar5 + 5) >> 8;\n            puVar16 = uVar3 & 1;\n            if ((uVar3 & 1) != 0) {\n                unaff_ESI = *(uStackY148 + unaff_ESI);\n            }\n        }\n    }\n    arg_8h = puStackY188;\n    if ((piVar5[2] & 0x20000000U) != 0) {\n        unaff_EDI = *(piVar5 + 0x16) & 0xff;\n        uStackY56 = *(piVar5 + 0x16) >> 8 & 1;\n        arg_ch = unaff_EDI[param_6 + 0x100];\n    }\ncode_r0x00448f4c:\n    if ((piStackY172 != NULL) && (piStackY172 < piStackY172 + puVar8)) {\n        piVar5 = piStackY172;\n        for (iVar11 = (piStackY172 + puVar8 + (-1 - piStackY172) >> 2) + 1; iVar11 != 0; iVar11 = iVar11 + -1) {\n            *piVar5 = -1;\n            piVar5 = piVar5 + 1;\n        }\n    }\n    param_1 = puVar12;\n    if ((uVar6 != 0) && (param_1 = arg_8h,  arg_8h < puStackY100)) {\n        do {\n            puVar19 = puVar18;\n            if (uStackY160 == 0) {\n                if (((param_1 <= puStackY100 + -iStackY156) && (*param_1 == uStackY152)) &&\n                   ((iStackY156 == 1 || (*(param_1 + 1) == uStackY151)))) break;\n            }\n            else {\n                arg_14h = &stack0xffffff64;\n                puVar4 = 0x448f92;\n                puVar16 = param_1;\n                arg_ch = puStackY100;\n                iVar11 = fcn.004492f7(param_1, uStackY160, puStackY100, arg_14h, puVar18);\n                puVar17 = puVar18;\n                puVar18 = puVar19;\n                if (iVar11 != 0) break;\n            }\n            param_1 = param_1 + 1;\n            puVar18 = puVar19;\n        } while (param_1 < puStackY100);\n    }\n    puVar13 = arg_8h;\n    if (unaff_ESI < 0) {\n        if (uStackY52 == 0) {\n            if (puVar17 != NULL) {\n                while ((puVar13 < param_1 && ((puVar17[*puVar13 >> 3] & 1 << (*puVar13 & 7)) == 0))) {\n                    puVar13 = puVar13 + 1;\n                }\n            }\n        }\n        else if (puStackY104 + param_5 < arg_8h) {\n            for (; arg_8h <= param_1; arg_8h = arg_8h + 1) {\n                if (uStackY160 == 0) {\n                    if (((puStackY104 + iStackY156 <= arg_8h) && (arg_8h[-iStackY156] == uStackY152)) &&\n                       ((iStackY156 == 1 || ((arg_8h + -iStackY156)[1] == uStackY151)))) break;\n                }\n                else if (puStackY104 < arg_8h) {\n                    arg_14h = &stack0xffffff64;\n                    puVar4 = 0x449044;\n                    arg_ch = puStackY104;\n                    iVar11 = fcn.0044937c(arg_8h, uStackY160, puStackY104, arg_14h, puVar18);\n                    if (iVar11 != 0) break;\n                }\n            }\n            puVar13 = arg_8h;\n            if ((arg_8h[-1] == 0xd) &&\n               ((((uStackY160 == 1 || (uStackY160 == 2)) && (arg_8h < param_1)) && (*arg_8h == 10)))) {\n                puVar13 = arg_8h + 1;\n            }\n        }\n    }\n    else if (puVar16 == NULL) {\n        for (; (puVar13 < param_1 && (*puVar13 != unaff_ESI)); puVar13 = puVar13 + 1) {\n        }\n    }\n    else {\n        while ((puVar13 < param_1 && (*(*puVar13 + uStackY148) != unaff_ESI))) {\n            puVar13 = puVar13 + 1;\n        }\n    }\n    if ((((-1 < unaff_EDI) && (puVar12 - puVar13 < 1000)) && (uStackY116 == 0)) &&\n       (puVar16 = puVar13 + (-1 < unaff_ESI),  puVar4 < puVar16)) {\n        if (uStackY56 != 0) {\n            if (puVar12 <= puVar16) goto code_r0x004491fd;\n            do {\n                uVar2 = *puVar16;\n                puVar16 = puVar16 + 1;\n                if ((uVar2 == unaff_EDI) || (uVar2 == arg_ch)) goto code_r0x0044911b;\n            } while (puVar16 < puVar12);\n            goto code_r0x0044911c;\n        }\n        if (puVar16 < puVar12) {\n            do {\n                uVar2 = *puVar16;\n                puVar16 = puVar16 + 1;\n                if (uVar2 == unaff_EDI) goto code_r0x0044911b;\n            } while (puVar16 < puVar12);\n            goto code_r0x0044911c;\n        }\n        goto code_r0x004491fd;\n    }\n    goto code_r0x00449127;\ncode_r0x0044911b:\n    puVar16 = puVar16 + -1;\ncode_r0x0044911c:\n    if (puVar16 < puVar12) {\ncode_r0x00449127:\n        puVar17 = NULL;\n        arg_14h = NULL;\n        arg_ch = NULL;\n        uStackY184 = 0;\n        uStackY72 = 0;\n        puVar16 = &stack0xffffff48;\n        puVar4 = 0x2;\n        uStackY52 = 0x449147;\n        puStackY96 = puVar13;\n        puVar8 = puVar13;\n        uVar6 = uStackY108;\n        uVar14 = uStackY192;\n        iVar11 = fcn.00446eda(puVar13, uStackY108, 2, puVar16, uStackY192, 0, 0, 0);\n        if (iVar11 == 0) {\n            if (uVar6 != 0) {\n                if (uStackY160 == 0) {\n                    if (((puVar13 <= puStackY100 + -iStackY156) && (*puVar13 == uStackY152)) &&\n                       ((iStackY156 == 1 || (puVar13[1] == uStackY151)))) goto code_r0x0044917d;\n                }\n                else if (puVar13 < puStackY100) {\n                    arg_14h = &stack0xffffff64;\n                    puVar4 = 0x449176;\n                    puVar16 = puVar13;\n                    uVar14 = uStackY160;\n                    arg_ch = puStackY100;\n                    puVar19 = puVar18;\n                    iVar9 = fcn.004492f7(puVar13, uStackY160, puStackY100, arg_14h, puVar18);\n                    puVar17 = puVar18;\n                    puVar18 = puVar19;\n                    if (iVar9 != 0) goto code_r0x0044917d;\n                }\n            }\n            arg_8h = puVar13 + 1;\n            if ((uVar14 != 0) || (puVar12 < arg_8h)) goto code_r0x0044917d;\n            if (((*puVar13 == 0xd) && (((uStackY160 == 1 || (uStackY160 == 2)) || (iStackY156 == 2)))) &&\n               ((arg_8h < puVar12 && (*arg_8h == 10)))) {\n                arg_8h = puVar13 + 2;\n            }\n            goto code_r0x00448f4c;\n        }\n    }\n    else {\ncode_r0x004491fd:\n        iVar11 = 0;\n    }\n    if (iVar11 == 1) {\n        if (arg_14h != NULL) {\n            if (3 < param_8) {\n                fcn.0044a6b0(param_7 + 2, piStackY172 + 2, param_8 * 4 + -8);\n            }\n            if (param_8 < iStackY88) {\n                iStackY140 = 1;\n            }\n            (**0x46514c)();\n        }\n        if (iStackY140 == 0) {\n            iStackY88 = iStackY88 / 2;\n        }\n        else {\n            iStackY88 = 0;\n        }\n        if (param_8 < 2) {\n            return 0;\n        }\n        *param_7 = puVar13 - puStackY104;\n        param_7[1] = iStackY92 - puStackY104;\n        return iStackY88;\n    }\ncode_r0x0044917d:\n    if (arg_14h != NULL) {\n        (**0x46514c)();\n    }\n    if (iVar11 != 0) {\n        return iVar11;\n    }\n    if ((uStackY116 != 0) && (iStackY112 != 0)) {\n        return -0xc;\n    }\n    return -1;\n}\n",
        "token_count": 4494
    },
    "0044a128": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0044a128(uint arg_8h)\n\n{\n    int32_t arg_8h_00;\n    int32_t unaff_EBP;\n    uint var_1ch;\n    int32_t arg_ch;\n    uint var_4h;\n    \n    fcn.0044dc28(0x45a980, 0xc);\n    arg_ch = *(unaff_EBP + 8);\n    if (arg_ch != 0) {\n        if (*0x480b80 == 3) {\n            fcn.0044cb7b(4);\n            *(unaff_EBP + -4) = 0;\n            arg_8h_00 = fcn.0044e5b6(arg_ch);\n            *(unaff_EBP + -0x1c) = arg_8h_00;\n            if (arg_8h_00 != 0) {\n                fcn.0044e5e1(arg_8h_00, arg_ch);\n            }\n            *(unaff_EBP + -4) = 0xffffffff;\n            fcn.0044a17b();\n            if (*(unaff_EBP + -0x1c) != 0) goto code_r0x0044a193;\n            arg_ch = *(unaff_EBP + 8);\n        }\n        (*_sym.imp.KERNEL32.DLL_HeapFree)(*0x480b7c, 0, arg_ch);\n    }\ncode_r0x0044a193:\n    fcn.0044dc63();\n    return;\n}\n",
        "token_count": 353
    },
    "00449521": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00449521(uint16_t *arg_8h, uint16_t *arg_ch)\n\n{\n    uint16_t uVar1;\n    uint16_t uVar2;\n    int32_t iVar3;\n    uint var_4h;\n    \n    iVar3 = fcn.0044c752();\n    iVar3 = *(iVar3 + 100);\n    if (iVar3 != *0x4654bc) {\n        iVar3 = fcn.0044c6de();\n    }\n    if (*(iVar3 + 0x14) == 0) {\n        do {\n            uVar1 = *arg_8h;\n            if ((0x40 < uVar1) && (uVar1 < 0x5b)) {\n                uVar1 = uVar1 + 0x20;\n            }\n            uVar2 = *arg_ch;\n            if ((0x40 < uVar2) && (uVar2 < 0x5b)) {\n                uVar2 = uVar2 + 0x20;\n            }\n            arg_8h = arg_8h + 1;\n            arg_ch = arg_ch + 1;\n        } while ((uVar1 != 0) && (uVar1 == uVar2));\n    }\n    else {\n        do {\n            uVar1 = fcn.0044b9c6(iVar3, *arg_8h);\n            arg_8h = arg_8h + 1;\n            uVar2 = fcn.0044b9c6(iVar3, *arg_ch);\n            arg_ch = arg_ch + 1;\n            if (uVar1 == 0) break;\n        } while (uVar1 == uVar2);\n    }\n    return uVar1 - uVar2;\n}\n",
        "token_count": 391
    },
    "004495ce": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004495ce(int16_t *param_1, int16_t *param_2)\n\n{\n    int16_t iVar1;\n    \n    iVar1 = *param_1;\n    while (iVar1 != 0) {\n        param_1 = param_1 + 1;\n        iVar1 = *param_1;\n    }\n    do {\n        iVar1 = *param_2;\n        *param_1 = iVar1;\n        param_1 = param_1 + 1;\n        param_2 = param_2 + 1;\n    } while (iVar1 != 0);\n    return;\n}\n",
        "token_count": 134
    },
    "00449827": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00449827(uint16_t *arg_8h, uint16_t *arg_ch, int32_t arg_10h)\n\n{\n    if (arg_10h != 0) {\n        for (; ((arg_10h = arg_10h + -1,  arg_10h != 0 && (*arg_8h != 0)) && (*arg_8h == *arg_ch)); arg_8h = arg_8h + 1)\n        {\n            arg_ch = arg_ch + 1;\n        }\n        return *arg_8h - *arg_ch;\n    }\n    return 0;\n}\n",
        "token_count": 142
    },
    "004498e1": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004498e1(uint16_t *arg_8h, uint16_t *arg_ch, int32_t arg_10h)\n\n{\n    uint16_t uVar1;\n    uint16_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint var_4h;\n    \n    iVar4 = 0;\n    iVar3 = fcn.0044c752();\n    iVar3 = *(iVar3 + 100);\n    if (iVar3 != *0x4654bc) {\n        iVar3 = fcn.0044c6de();\n    }\n    if (arg_10h != 0) {\n        if (*(iVar3 + 0x14) == 0) {\n            do {\n                uVar1 = *arg_8h;\n                if ((0x40 < uVar1) && (uVar1 < 0x5b)) {\n                    uVar1 = uVar1 + 0x20;\n                }\n                uVar2 = *arg_ch;\n                if ((0x40 < uVar2) && (uVar2 < 0x5b)) {\n                    uVar2 = uVar2 + 0x20;\n                }\n                arg_8h = arg_8h + 1;\n                arg_ch = arg_ch + 1;\n                arg_10h = arg_10h + -1;\n            } while (((arg_10h != 0) && (uVar1 != 0)) && (uVar1 == uVar2));\n        }\n        else {\n            do {\n                uVar1 = fcn.0044b9c6(iVar3, *arg_8h);\n                arg_8h = arg_8h + 1;\n                uVar2 = fcn.0044b9c6(iVar3, *arg_ch);\n                arg_ch = arg_ch + 1;\n                arg_10h = arg_10h + -1;\n                if ((arg_10h == 0) || (uVar1 == 0)) break;\n            } while (uVar1 == uVar2);\n        }\n        iVar4 = uVar1 - uVar2;\n    }\n    return iVar4;\n}\n",
        "token_count": 483
    },
    "004499ac": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint16_t * fcn.004499ac(int16_t *param_1, int16_t *param_2)\n\n{\n    int16_t iVar1;\n    int16_t *piVar2;\n    int32_t iVar3;\n    \n    if (*param_2 != 0) {\n        iVar1 = *param_1;\n        if (iVar1 != 0) {\n            iVar3 = param_1 - param_2;\n            piVar2 = param_2;\njoined_r0x004499d1:\n            do {\n                if (iVar1 != 0) {\n                    if (*piVar2 == 0) {\n                        return param_1;\n                    }\n                    if (*(iVar3 + piVar2) == *piVar2) {\n                        iVar1 = *(iVar3 + piVar2 + 1);\n                        piVar2 = piVar2 + 1;\n                        goto joined_r0x004499d1;\n                    }\n                }\n                if (*piVar2 == 0) {\n                    return param_1;\n                }\n                param_1 = param_1 + 1;\n                iVar1 = *param_1;\n                iVar3 = iVar3 + 2;\n                piVar2 = param_2;\n            } while (iVar1 != 0);\n        }\n        param_1 = NULL;\n    }\n    return param_1;\n}\n",
        "token_count": 290
    },
    "00449cdd": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong __fastcall fcn.00449cdd(uint param_1, uint32_t param_2, int32_t param_3, uint param_4)\n\n{\n    uint32_t in_EAX;\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    bool in_ZF;\n    uint16_t in_FPUControlWord;\n    uint16_t in_FPUStatusWord;\n    unkbyte10 in_ST0;\n    float10 fVar4;\n    uint unaff_retaddr;\n    uint32_t arg_8h;\n    \n    arg_8h = param_2 & 0xffff0000 | in_FPUControlWord;\n    if (in_ZF) {\n        if (((in_EAX & 0xfffff) == 0) && (param_3 == 0)) {\n            uVar1 = 1;\n        }\n        else {\n            uVar1 = fcn.0044e34c();\n        }\n        if (*0x467594 == 0) {\n            uVar3 = fcn.0044e4c7(arg_8h, unaff_retaddr, param_3, param_4);\n            return CONCAT44(arg_8h, uVar3);\n        }\n    }\n    else {\n        fVar4 = fcos(in_ST0);\n        uVar1 = in_EAX & 0xffff0000 | in_FPUStatusWord;\n        if ((in_FPUStatusWord & 0x400) != 0) {\n            do {\n                fVar4 = fVar4 - (fVar4 / *0x45acfa) * *0x45acfa;\n                uVar1 = uVar1 & 0xffff0000 | in_FPUStatusWord;\n            } while ((in_FPUStatusWord & 0x400) != 0);\n            fcos(fVar4);\n        }\n        if (*0x467594 == 0) {\n            uVar2 = uVar1 & 0xffff0000 | in_FPUControlWord;\n            if (in_FPUControlWord != 0x27f) {\n                if (((in_FPUControlWord & 0x20) != 0) &&\n                   (uVar2 = uVar1 & 0xffff0000 | in_FPUStatusWord,  (in_FPUStatusWord & 0x20) != 0)) {\n                    uVar3 = fcn.0044e4c7(arg_8h, unaff_retaddr, param_3, param_4);\n                    return CONCAT44(arg_8h, uVar3);\n                }\n                uVar2 = uVar2 & 0xffff0020;\n            }\n            return CONCAT44(arg_8h, uVar2);\n        }\n    }\n    return CONCAT44(arg_8h, uVar1);\n}\n",
        "token_count": 608
    },
    "00449d8d": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong __fastcall fcn.00449d8d(uint param_1, uint32_t param_2, int32_t param_3, uint param_4)\n\n{\n    uint32_t in_EAX;\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    bool in_ZF;\n    uint16_t in_FPUControlWord;\n    uint16_t in_FPUStatusWord;\n    unkbyte10 in_ST0;\n    float10 fVar4;\n    uint unaff_retaddr;\n    uint32_t arg_8h;\n    \n    arg_8h = param_2 & 0xffff0000 | in_FPUControlWord;\n    if (in_ZF) {\n        if (((in_EAX & 0xfffff) == 0) && (param_3 == 0)) {\n            uVar1 = 1;\n        }\n        else {\n            uVar1 = fcn.0044e34c();\n        }\n        if (*0x467594 == 0) {\n            uVar3 = fcn.0044e4c7(arg_8h, unaff_retaddr, param_3, param_4);\n            return CONCAT44(arg_8h, uVar3);\n        }\n    }\n    else {\n        fVar4 = fsin(in_ST0);\n        uVar1 = in_EAX & 0xffff0000 | in_FPUStatusWord;\n        if ((in_FPUStatusWord & 0x400) != 0) {\n            do {\n                fVar4 = fVar4 - (fVar4 / *0x45acfa) * *0x45acfa;\n                uVar1 = uVar1 & 0xffff0000 | in_FPUStatusWord;\n            } while ((in_FPUStatusWord & 0x400) != 0);\n            fsin(fVar4);\n        }\n        if (*0x467594 == 0) {\n            uVar2 = uVar1 & 0xffff0000 | in_FPUControlWord;\n            if (in_FPUControlWord != 0x27f) {\n                if (((in_FPUControlWord & 0x20) != 0) &&\n                   (uVar2 = uVar1 & 0xffff0000 | in_FPUStatusWord,  (in_FPUStatusWord & 0x20) != 0)) {\n                    uVar3 = fcn.0044e4c7(arg_8h, unaff_retaddr, param_3, param_4);\n                    return CONCAT44(arg_8h, uVar3);\n                }\n                uVar2 = uVar2 & 0xffff0020;\n            }\n            return CONCAT44(arg_8h, uVar2);\n        }\n    }\n    return CONCAT44(arg_8h, uVar1);\n}\n",
        "token_count": 609
    },
    "0044a246": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044a246(int16_t *arg_8h, ushort *arg_ch, ushort *arg_10h, int32_t arg_14h, ushort *arg_18h)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int16_t *piVar4;\n    uint32_t uVar5;\n    int16_t *var_8h;\n    int16_t *var_4h;\n    \n    var_4h = NULL;\n    iVar2 = fcn.0044985c(arg_8h);\n    if ((iVar2 == 0) || (arg_8h[1] != 0x3a)) {\n        if (arg_ch != NULL) {\n            *arg_ch = 0;\n        }\n    }\n    else {\n        if (arg_ch != NULL) {\n            fcn.00449c77(arg_ch, arg_8h, 2);\n            arg_ch[2] = 0;\n        }\n        arg_8h = arg_8h + 2;\n    }\n    iVar1 = *arg_8h;\n    var_8h = NULL;\n    piVar4 = arg_8h;\n    if (iVar1 != 0) {\n        do {\n            if ((iVar1 == 0x2f) || (iVar1 == 0x5c)) {\n                var_8h = piVar4 + 1;\n            }\n            else if (iVar1 == 0x2e) {\n                var_4h = piVar4;\n            }\n            piVar4 = piVar4 + 1;\n            iVar1 = *piVar4;\n        } while (iVar1 != 0);\n        if (var_8h != NULL) {\n            if (arg_10h != NULL) {\n                uVar3 = var_8h - arg_8h >> 1;\n                if (0xfe < uVar3) {\n                    uVar3 = 0xff;\n                }\n                fcn.00449c77(arg_10h, arg_8h, uVar3);\n                arg_10h[uVar3] = 0;\n            }\n            arg_8h = var_8h;\n            goto code_r0x0044a312;\n        }\n    }\n    if (arg_10h != NULL) {\n        *arg_10h = 0;\n    }\ncode_r0x0044a312:\n    if ((var_4h == NULL) || (var_4h < arg_8h)) {\n        if (arg_14h != 0) {\n            uVar5 = piVar4 - arg_8h >> 1;\n            uVar3 = 0xff;\n            if (uVar5 < 0xff) {\n                uVar3 = uVar5;\n            }\n            fcn.00449c77(arg_14h, arg_8h, uVar3);\n            *(arg_14h + uVar3 * 2) = 0;\n        }\n        if (arg_18h != NULL) {\n            *arg_18h = 0;\n        }\n    }\n    else {\n        if (arg_14h != 0) {\n            uVar3 = var_4h - arg_8h >> 1;\n            if (0xfe < uVar3) {\n                uVar3 = 0xff;\n            }\n            fcn.00449c77(arg_14h, arg_8h, uVar3);\n            *(arg_14h + uVar3 * 2) = 0;\n        }\n        if (arg_18h != NULL) {\n            uVar5 = piVar4 - var_4h >> 1;\n            uVar3 = 0xff;\n            if (uVar5 < 0xff) {\n                uVar3 = uVar5;\n            }\n            fcn.00449c77(arg_18h, var_4h, uVar3);\n            arg_18h[uVar3] = 0;\n        }\n    }\n    return;\n}\n",
        "token_count": 883
    },
    "0044a3a1": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint16_t * __cdecl fcn.0044a3a1(int16_t *arg_8h, int16_t *arg_ch, int32_t arg_10h)\n\n{\n    int16_t iVar1;\n    int16_t *piVar2;\n    int16_t *piVar3;\n    \n    piVar2 = arg_8h;\n    do {\n        piVar3 = piVar2;\n        piVar2 = piVar3 + 1;\n    } while (*piVar3 != 0);\n    if (arg_10h != 0) {\n        do {\n            iVar1 = *arg_ch;\n            arg_10h = arg_10h + -1;\n            *piVar3 = iVar1;\n            piVar3 = piVar3 + 1;\n            arg_ch = arg_ch + 1;\n            if (iVar1 == 0) {\n                return arg_8h;\n            }\n        } while (arg_10h != 0);\n    }\n    *piVar3 = 0;\n    return arg_8h;\n}\n",
        "token_count": 230
    },
    "0044ab56": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0044ab56(char *arg_8h, uint32_t arg_ch, uint32_t arg_10h, int32_t *arg_14h)\n\n{\n    int32_t iVar1;\n    uint32_t arg_10h_00;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    uVar3 = arg_ch * arg_10h;\n    if (uVar3 == 0) {\n        arg_10h = 0;\n    }\n    else {\n        uVar2 = uVar3;\n        if ((*(arg_14h + 3) & 0x10c) == 0) {\n            var_4h = 0x1000;\n        }\n        else {\n            var_4h = arg_14h[6];\n        }\n        do {\n            if (((arg_14h[3] & 0x108U) == 0) || (uVar4 = arg_14h[1],  uVar4 == 0)) {\n                if (var_4h <= uVar2) {\n                    if (((arg_14h[3] & 0x108U) != 0) && (iVar1 = fcn.0044b80d(arg_14h),  iVar1 != 0)) {\ncode_r0x0044ac4b:\n                        return (uVar3 - uVar2) / arg_ch;\n                    }\n                    uVar4 = uVar2;\n                    if (var_4h != 0) {\n                        uVar4 = uVar2 - uVar2 % var_4h;\n                    }\n                    arg_10h_00 = fcn.0045014c(arg_14h[4], arg_8h, uVar4);\n                    if ((arg_10h_00 == 0xffffffff) || (uVar2 = uVar2 - arg_10h_00,  arg_10h_00 < uVar4)) {\n                        arg_14h[3] = arg_14h[3] | 0x20;\n                        goto code_r0x0044ac4b;\n                    }\n                    goto code_r0x0044ac0b;\n                }\n                iVar1 = fcn.0044d074(*arg_8h, arg_14h);\n                if (iVar1 == -1) goto code_r0x0044ac4b;\n                arg_8h = arg_8h + 1;\n                var_4h = arg_14h[6];\n                uVar2 = uVar2 - 1;\n                if (var_4h < 1) {\n                    var_4h = 1;\n                }\n            }\n            else {\n                arg_10h_00 = uVar2;\n                if (uVar4 <= uVar2) {\n                    arg_10h_00 = uVar4;\n                }\n                fcn.0044a6b0(*arg_14h, arg_8h, arg_10h_00);\n                arg_14h[1] = arg_14h[1] - arg_10h_00;\n                *arg_14h = *arg_14h + arg_10h_00;\n                uVar2 = uVar2 - arg_10h_00;\ncode_r0x0044ac0b:\n                arg_8h = arg_8h + arg_10h_00;\n            }\n        } while (uVar2 != 0);\n    }\n    return arg_10h;\n}\n",
        "token_count": 791
    },
    "0044ad46": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0044ad46(uchar *arg_8h, uint32_t arg_ch, uint32_t arg_10h, int32_t *arg_14h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uchar *puVar3;\n    uint32_t uVar4;\n    uint32_t arg_10h_00;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    uVar4 = arg_ch * arg_10h;\n    if (uVar4 == 0) {\n        arg_10h = 0;\n    }\n    else {\n        puVar3 = arg_8h;\n        arg_8h = uVar4;\n        if ((*(arg_14h + 3) & 0x10c) == 0) {\n            var_4h = 0x1000;\n        }\n        else {\n            var_4h = arg_14h[6];\n        }\n        do {\n            if (((*(arg_14h + 3) & 0x10c) == 0) || (uVar1 = arg_14h[1],  uVar1 == 0)) {\n                if (arg_8h < var_4h) {\n                    iVar2 = fcn.00450340(arg_14h);\n                    if (iVar2 == -1) goto code_r0x0044ae1d;\n                    *puVar3 = iVar2;\n                    var_4h = arg_14h[6];\n                    puVar3 = puVar3 + 1;\n                    arg_8h = arg_8h - 1;\n                }\n                else {\n                    uVar1 = arg_8h;\n                    if (var_4h != 0) {\n                        uVar1 = arg_8h - arg_8h % var_4h;\n                    }\n                    iVar2 = fcn.004505fe(arg_14h[4], puVar3, uVar1);\n                    if (iVar2 == 0) {\n                        arg_14h[3] = arg_14h[3] | 0x10;\ncode_r0x0044ae1d:\n                        return (uVar4 - arg_8h) / arg_ch;\n                    }\n                    if (iVar2 == -1) {\n                        arg_14h[3] = arg_14h[3] | 0x20;\n                        goto code_r0x0044ae1d;\n                    }\n                    arg_8h = arg_8h - iVar2;\n                    puVar3 = puVar3 + iVar2;\n                }\n            }\n            else {\n                arg_10h_00 = arg_8h;\n                if (uVar1 <= arg_8h) {\n                    arg_10h_00 = uVar1;\n                }\n                fcn.0044a6b0(puVar3, *arg_14h, arg_10h_00);\n                arg_8h = arg_8h - arg_10h_00;\n                arg_14h[1] = arg_14h[1] - arg_10h_00;\n                *arg_14h = *arg_14h + arg_10h_00;\n                puVar3 = puVar3 + arg_10h_00;\n            }\n        } while (arg_8h != NULL);\n    }\n    return arg_10h;\n}\n",
        "token_count": 744
    },
    "0044ba27": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.0044ba27(uint32_t param_1)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint16_t uVar3;\n    \n    iVar1 = fcn.0044c752();\n    uVar2 = *(iVar1 + 100);\n    if (uVar2 != *0x4654bc) {\n        uVar2 = fcn.0044c6de();\n    }\n    uVar3 = param_1;\n    if (uVar3 == 0xffff) {\n        return uVar2 & 0xffff0000 | 0xffff;\n    }\n    if (*(uVar2 + 0x14) != 0) {\n        uVar2 = fcn.0044b9c6(uVar2, param_1);\n        return uVar2;\n    }\n    if ((0x40 < uVar3) && (uVar3 < 0x5b)) {\n        return (param_1 & 0xffff) + 0x20;\n    }\n    return param_1 & 0xffff;\n}\n",
        "token_count": 238
    },
    "0044beab": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.0044beab(int32_t *arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    \n    piVar1 = arg_8h;\n    if (*arg_8h < 0) {\n        piVar1 = NULL;\n    }\n    else {\n        fcn.0045326f();\n        iVar2 = *piVar1;\n        if ((iVar2 < 0x3f481) || (0x7ffc0b7e < iVar2)) {\n            piVar1 = fcn.004532f9(piVar1);\n            if ((*0x465c24 == 0) || (iVar2 = fcn.004532bb(piVar1),  iVar2 == 0)) {\n                arg_8h = *piVar1 - *0x465c20;\n            }\n            else {\n                arg_8h = (*piVar1 - *0x465c28) - *0x465c20;\n                piVar1[8] = 1;\n            }\n            iVar2 = arg_8h % 0x3c;\n            *piVar1 = iVar2;\n            if (iVar2 < 0) {\n                *piVar1 = iVar2 + 0x3c;\n                arg_8h = arg_8h + -0x3c;\n            }\n            arg_8h = arg_8h / 0x3c + piVar1[1];\n            iVar2 = arg_8h % 0x3c;\n            piVar1[1] = iVar2;\n            if (iVar2 < 0) {\n                piVar1[1] = iVar2 + 0x3c;\n                arg_8h = arg_8h + -0x3c;\n            }\n            arg_8h = arg_8h / 0x3c + piVar1[2];\n            iVar2 = arg_8h % 0x18;\n            piVar1[2] = iVar2;\n            if (iVar2 < 0) {\n                piVar1[2] = iVar2 + 0x18;\n                arg_8h = arg_8h + -0x18;\n            }\n            iVar2 = arg_8h / 0x18;\n            if (iVar2 < 1) {\n                if (-1 < iVar2) {\n                    return piVar1;\n                }\n                piVar1[6] = (piVar1[6] + 7 + iVar2) % 7;\n                piVar1[3] = piVar1[3] + iVar2;\n                if (piVar1[3] < 1) {\n                    piVar1[5] = piVar1[5] + -1;\n                    piVar1[3] = piVar1[3] + 0x1f;\n                    piVar1[7] = 0x16c;\n                    piVar1[4] = 0xb;\n                    return piVar1;\n                }\n            }\n            else {\n                piVar1[6] = (piVar1[6] + iVar2) % 7;\n                piVar1[3] = piVar1[3] + iVar2;\n            }\n            piVar1[7] = piVar1[7] + iVar2;\n        }\n        else {\n            arg_8h = iVar2 - *0x465c20;\n            piVar1 = fcn.004532f9(&arg_8h);\n            if ((*0x465c24 != 0) && (iVar2 = fcn.004532bb(piVar1),  iVar2 != 0)) {\n                arg_8h = arg_8h - *0x465c28;\n                piVar1 = fcn.004532f9(&arg_8h);\n                piVar1[8] = 1;\n            }\n        }\n    }\n    return piVar1;\n}\n",
        "token_count": 861
    },
    "0044c14c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0044c14c(char **arg_8h)\n\n{\n    int32_t *piVar1;\n    char *pcVar2;\n    uint8_t uVar3;\n    char **ppcVar4;\n    uint *puVar5;\n    int32_t iVar6;\n    char *pcVar7;\n    char *pcVar8;\n    char *pcVar9;\n    int32_t iVar10;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    ppcVar4 = arg_8h;\n    pcVar7 = arg_8h[4];\n    if (arg_8h[1] < 0) {\n        arg_8h[1] = NULL;\n    }\n    var_4h = fcn.0044fd09(pcVar7, 0, 1);\n    if (var_4h < 0) {\ncode_r0x0044c1e9:\n        var_8h = -1;\n    }\n    else {\n        pcVar8 = arg_8h[3];\n        if ((pcVar8 & 0x108) == 0) {\n            return var_4h - arg_8h[1];\n        }\n        pcVar9 = *arg_8h;\n        pcVar2 = arg_8h[2];\n        var_8h = pcVar9 - pcVar2;\n        if ((pcVar8 & 3) == 0) {\n            if (-1 < pcVar8) {\n                puVar5 = fcn.0044ddb5();\n                *puVar5 = 0x16;\n                goto code_r0x0044c1e9;\n            }\n        }\n        else if (((*(*((pcVar7 >> 5) * 4 + 0x480a60) + 4 + (pcVar7 & 0x1f) * 0x24) & 0x80) != 0) &&\n                (pcVar8 = pcVar2,  pcVar2 < pcVar9)) {\n            do {\n                if (*pcVar8 == '\\n') {\n                    var_8h = var_8h + 1;\n                }\n                pcVar8 = pcVar8 + 1;\n            } while (pcVar8 < *arg_8h);\n        }\n        if (var_4h != 0) {\n            if ((*(arg_8h + 3) & 1) != 0) {\n                if (arg_8h[1] == NULL) {\n                    var_8h = 0;\n                }\n                else {\n                    pcVar8 = arg_8h[1] + (pcVar9 - pcVar2);\n                    piVar1 = (pcVar7 >> 5) * 4 + 0x480a60;\n                    iVar10 = (pcVar7 & 0x1f) * 0x24;\n                    if ((*(iVar10 + 4 + *piVar1) & 0x80) != 0) {\n                        iVar6 = fcn.0044fd09(pcVar7, 0, 2);\n                        if (iVar6 == var_4h) {\n                            pcVar7 = arg_8h[2];\n                            pcVar9 = pcVar8 + pcVar7;\n                            arg_8h = pcVar8;\n                            for (; pcVar7 < pcVar9; pcVar7 = pcVar7 + 1) {\n                                if (*pcVar7 == '\\n') {\n                                    arg_8h = arg_8h + 1;\n                                }\n                            }\n                            uVar3 = *(ppcVar4 + 0xd) & 0x20;\n                        }\n                        else {\n                            fcn.0044fd09(pcVar7, var_4h, 0);\n                            pcVar7 = 0x200;\n                            if (((0x200 < pcVar8) || ((arg_8h[3] & 8) == 0)) || ((arg_8h[3] & 0x400) != 0)) {\n                                pcVar7 = arg_8h[6];\n                            }\n                            uVar3 = *(iVar10 + 4 + *piVar1) & 4;\n                            arg_8h = pcVar7;\n                        }\n                        pcVar8 = arg_8h;\n                        if (uVar3 != 0) {\n                            pcVar8 = arg_8h + 1;\n                        }\n                    }\n                    arg_8h = pcVar8;\n                    var_4h = var_4h - arg_8h;\n                }\n            }\n            var_8h = var_8h + var_4h;\n        }\n    }\n    return var_8h;\n}\n",
        "token_count": 1035
    },
    "0044c939": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0044c939(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint uVar4;\n    \n    iVar2 = fcn.0044ca28();\n    if (iVar2 == 0) {\n        fcn.0044c722();\n        return 0;\n    }\n    iVar2 = (*_sym.imp.KERNEL32.DLL_GetModuleHandleA)(0x45c5d8);\n    pcVar1 = _sym.imp.KERNEL32.DLL_GetProcAddress;\n    if (iVar2 != 0) {\n        _fcn.0046742c = (*_sym.imp.KERNEL32.DLL_GetProcAddress)(iVar2, 0x45ac98);\n        _fcn.00467430 = (*pcVar1)(iVar2, 0x45ac8c);\n        _fcn.00467434 = (*pcVar1)(iVar2, 0x45ac80);\n        *0x467438 = (*pcVar1)(iVar2, 0x45ac78);\n        if (_fcn.00467430 == 0) {\n            _fcn.00467430 = *0x459274;\n            _fcn.00467434 = _sym.imp.KERNEL32.DLL_TlsSetValue;\n            _fcn.0046742c = 0x44c719;\n            *0x467438 = _sym.imp.KERNEL32.DLL_TlsFree;\n        }\n    }\n    *0x4655f4 = (*_fcn.0046742c)(fcn.0044c7c3);\n    if (((*0x4655f4 != -1) && (puVar3 = fcn.0045096f(1, 0x8c),  puVar3 != NULL)) &&\n       (iVar2 = (*_fcn.00467434)(*0x4655f4, puVar3),  iVar2 != 0)) {\n        puVar3[0x15] = 0x4658e8;\n        puVar3[5] = 1;\n        uVar4 = (*_sym.imp.KERNEL32.DLL_GetCurrentThreadId)();\n        puVar3[1] = 0xffffffff;\n        *puVar3 = uVar4;\n        return 1;\n    }\n    fcn.0044c722();\n    return 0;\n}\n",
        "token_count": 510
    },
    "0044cbac": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0044cbac(int32_t arg_8h, uint16_t *arg_ch, uint8_t *lpMultiByteStr, uint32_t arg_14h)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    uint8_t *puVar5;\n    uint32_t var_4h;\n    \n    pcVar1 = _sym.imp.KERNEL32.DLL_MultiByteToWideChar;\n    uVar2 = 0;\n    if (arg_ch == NULL) {\n        if (*(arg_8h + 0x14) == 0) {\n            uVar2 = fcn.00449fa0(lpMultiByteStr);\n            return uVar2;\n        }\n        iVar3 = (*_sym.imp.KERNEL32.DLL_MultiByteToWideChar)(*(arg_8h + 4), 9, lpMultiByteStr, 0xffffffff, 0, 0);\n        if (iVar3 != 0) goto code_r0x0044cca1;\n    }\n    else {\n        if (arg_14h == 0) {\n            return 0;\n        }\n        if (*(arg_8h + 0x14) == 0) {\n            if (arg_14h == 0) {\n                return 0;\n            }\n            do {\n                *arg_ch = lpMultiByteStr[uVar2];\n                if (lpMultiByteStr[uVar2] == 0) {\n                    return uVar2;\n                }\n                uVar2 = uVar2 + 1;\n                arg_ch = arg_ch + 1;\n            } while (uVar2 < arg_14h);\n            return uVar2;\n        }\n        iVar3 = (*_sym.imp.KERNEL32.DLL_MultiByteToWideChar)\n                          (*(arg_8h + 4), 9, lpMultiByteStr, 0xffffffff, arg_ch, arg_14h);\n        if (iVar3 != 0) {\ncode_r0x0044cca1:\n            return iVar3 - 1;\n        }\n        iVar3 = (*_sym.imp.KERNEL32.DLL_GetLastError)();\n        if (iVar3 == 0x7a) {\n            var_4h = arg_14h;\n            puVar5 = lpMultiByteStr;\n            do {\n                var_4h = var_4h - 1;\n                if (*puVar5 == 0) break;\n                if (((*(*(arg_8h + 0x48) + 1 + *puVar5 * 2) & 0x80) != 0) && (puVar5 = puVar5 + 1,  *puVar5 == 0))\n                goto code_r0x0044cc26;\n                puVar5 = puVar5 + 1;\n            } while (var_4h != 0);\n            uVar2 = (*pcVar1)(*(arg_8h + 4), 1, lpMultiByteStr, puVar5 - lpMultiByteStr, arg_ch, arg_14h);\n            if (uVar2 != 0) {\n                return uVar2;\n            }\n        }\n    }\ncode_r0x0044cc26:\n    puVar4 = fcn.0044ddb5();\n    *puVar4 = 0x2a;\n    return 0xffffffff;\n}\n",
        "token_count": 744
    },
    "0044ccd2": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0044ccd2(char *param_1, uint32_t param_2, int32_t param_3)\n\n{\n    uint64_t uVar1;\n    char *pcVar2;\n    uint32_t in_EAX;\n    char *pcVar3;\n    char cVar4;\n    \n    pcVar2 = param_1;\n    if (param_3 != 0) {\n        *param_1 = '-';\n        param_1 = param_1 + 1;\n        in_EAX = -in_EAX;\n        pcVar2 = param_1;\n    }\n    do {\n        pcVar3 = pcVar2;\n        uVar1 = in_EAX;\n        in_EAX = in_EAX / param_2;\n        cVar4 = uVar1 % param_2;\n        if (uVar1 % param_2 < 10) {\n            cVar4 = cVar4 + '0';\n        }\n        else {\n            cVar4 = cVar4 + 'W';\n        }\n        *pcVar3 = cVar4;\n        pcVar2 = pcVar3 + 1;\n    } while (in_EAX != 0);\n    pcVar3[1] = '\\0';\n    do {\n        cVar4 = *pcVar3;\n        *pcVar3 = *param_1;\n        pcVar3 = pcVar3 + -1;\n        *param_1 = cVar4;\n        param_1 = param_1 + 1;\n    } while (param_1 < pcVar3);\n    return;\n}\n",
        "token_count": 341
    },
    "0044d1d7": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0044d1d7(ushort *param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t unaff_EDI;\n    \n    if (((*(unaff_EDI + 0xc) & 0x40) == 0) || (*(unaff_EDI + 8) != 0)) {\n        do {\n            if (param_2 < 1) {\n                return;\n            }\n            param_2 = param_2 + -1;\n            fcn.0044d18d(*param_1);\n            param_1 = param_1 + 1;\n        } while (*in_EAX != -1);\n    }\n    else {\n        *in_EAX = *in_EAX + param_2;\n    }\n    return;\n}\n",
        "token_count": 180
    },
    "0044d214": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0044d214(uint param_1, uint16_t *param_2, int32_t **param_3)\n\n{\n    uint arg_10h;\n    int32_t *piVar1;\n    uint32_t uVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    int32_t extraout_ECX;\n    int32_t *piVar5;\n    uint16_t uVar6;\n    uint32_t unaff_EBX;\n    uint8_t *arg_ch;\n    bool bVar7;\n    int64_t iVar8;\n    int32_t *piStack1128;\n    int32_t *piStack1124;\n    uint8_t *puStack1116;\n    uint32_t uStack1112;\n    uint uStack1108;\n    int32_t iStack1104;\n    int32_t iStack1100;\n    int32_t iStack1096;\n    int32_t iStack1092;\n    int32_t *piStack1088;\n    uint uStack1084;\n    uchar uStack1080;\n    uchar uStack1079;\n    ushort uStack1076;\n    int16_t iStack1074;\n    int32_t iStack1072;\n    int32_t *piStack1068;\n    int32_t iStack1064;\n    uint16_t *puStack1060;\n    int32_t iStack1056;\n    int32_t *piStack1052;\n    int32_t iStack1048;\n    int32_t *piStack1044;\n    int32_t **ppiStack1040;\n    uint32_t uStack1036;\n    int32_t aiStack1032 [8];\n    uchar auStack1000 [479];\n    uint uStack521;\n    uint32_t uStack8;\n    \n    uStack8 = *0x465718 ^ auStack1000;\n    uVar6 = *param_2;\n    arg_ch = unaff_EBX & 0xffff0000 | uVar6;\n    iStack1048 = 0;\n    iStack1056 = 0;\n    piStack1088 = NULL;\n    iVar4 = 0;\n    uStack1084 = param_1;\n    while (puStack1060 = param_2,  ppiStack1040 = param_3,  uVar6 != 0) {\n        puStack1060 = param_2 + 1;\n        if (iStack1056 < 0) break;\n        uVar6 = arg_ch;\n        if ((uVar6 < 0x20) || (0x78 < uVar6)) {\n            uVar2 = 0;\n        }\n        else {\n            uVar2 = *((arg_ch & 0xffff) + 0x45b220) & 0xf;\n        }\n        iStack1104 = *(iVar4 + 0x45b240 + uVar2 * 8) >> 4;\n    // switch table (8 cases) at 0x44d9e0\n        switch(iStack1104) {\n        case 0:\ncode_r0x0044d452:\n            iStack1072 = 1;\n            fcn.0044d18d(arg_ch);\n            break;\n        case 1:\n            piStack1044 = 0xffffffff;\n            uStack1108 = 0;\n            iStack1100 = 0;\n            piStack1068 = NULL;\n            iStack1064 = 0;\n            uStack1036 = 0;\n            iStack1072 = 0;\n            break;\n        case 2:\n            uVar2 = arg_ch & 0xffff;\n            if (uVar2 == 0x20) {\n                uStack1036 = uStack1036 | 2;\n            }\n            else if (uVar2 == 0x23) {\n                uStack1036 = uStack1036 | 0x80;\n            }\n            else if (uVar2 == 0x2b) {\n                uStack1036 = uStack1036 | 1;\n            }\n            else if (uVar2 == 0x2d) {\n                uStack1036 = uStack1036 | 4;\n            }\n            else if (uVar2 == 0x30) {\n                uStack1036 = uStack1036 | 8;\n            }\n            break;\n        case 3:\n            if (uVar6 == 0x2a) {\n                piStack1068 = *param_3;\n                ppiStack1040 = param_3 + 1;\n                if (piStack1068 < 0) {\n                    uStack1036 = uStack1036 | 4;\n                    piStack1068 = -piStack1068;\n                }\n            }\n            else {\n                piStack1068 = ((arg_ch & 0xffff) - 0x30) + piStack1068 * 10;\n            }\n            break;\n        case 4:\n            piStack1044 = NULL;\n            break;\n        case 5:\n            if (uVar6 == 0x2a) {\n                piStack1044 = *param_3;\n                ppiStack1040 = param_3 + 1;\n                if (piStack1044 < 0) {\n                    piStack1044 = 0xffffffff;\n                }\n            }\n            else {\n                piStack1044 = ((arg_ch & 0xffff) - 0x30) + piStack1044 * 10;\n            }\n            break;\n        case 6:\n            uVar2 = arg_ch & 0xffff;\n            if (uVar2 == 0x49) {\n                uVar6 = *puStack1060;\n                if ((uVar6 == 0x36) && (param_2[2] == 0x34)) {\n                    puStack1060 = param_2 + 3;\n                    uStack1036 = uStack1036 | 0x8000;\n                }\n                else if ((uVar6 == 0x33) && (param_2[2] == 0x32)) {\n                    puStack1060 = param_2 + 3;\n                    uStack1036 = uStack1036 & 0xffff7fff;\n                }\n                else if (((((uVar6 != 100) && (uVar6 != 0x69)) && (uVar6 != 0x6f)) &&\n                         ((uVar6 != 0x75 && (uVar6 != 0x78)))) && (uVar6 != 0x58)) {\n                    iStack1104 = 0;\n                    goto code_r0x0044d452;\n                }\n            }\n            else if (uVar2 == 0x68) {\n                uStack1036 = uStack1036 | 0x20;\n            }\n            else if (uVar2 == 0x6c) {\n                uStack1036 = uStack1036 | 0x10;\n            }\n            else if (uVar2 == 0x77) {\n                uStack1036 = uStack1036 | 0x800;\n            }\n            break;\n        case 7:\n            uVar2 = arg_ch & 0xffff;\n            if (uVar2 < 0x68) {\n                if (uVar2 < 0x65) {\n                    if (uVar2 < 0x59) {\n                        if (uVar2 != 0x58) {\n                            if (uVar2 == 0x43) {\n                                if ((uStack1036 & 0x830) == 0) {\n                                    uStack1036 = uStack1036 | 0x20;\n                                }\n                                goto code_r0x0044d553;\n                            }\n                            if ((uVar2 != 0x45) && (uVar2 != 0x47)) {\n                                if (uVar2 == 0x53) {\n                                    if ((uStack1036 & 0x830) == 0) {\n                                        uStack1036 = uStack1036 | 0x20;\n                                    }\n                                    goto code_r0x0044d4b7;\n                                }\n                                goto code_r0x0044d8a8;\n                            }\n                            uStack1108 = 1;\n                            arg_ch = arg_ch + 0x20;\n                            goto code_r0x0044d528;\n                        }\ncode_r0x0044d75a:\n                        iStack1092 = 7;\ncode_r0x0044d75d:\n                        iStack1048 = 0x10;\n                        if ((uStack1036 & 0x80) != 0) {\n                            iStack1074 = iStack1092 + 0x51;\n                            uStack1076 = 0x30;\n                            iStack1064 = 2;\n                        }\n                        goto code_r0x0044d5af;\n                    }\n                    if (uVar2 == 0x5a) {\n                        ppiStack1040 = param_3 + 1;\n                        piVar5 = *param_3;\n                        piVar3 = *0x4658dc;\n                        piVar1 = *0x4658dc;\n                        if ((piVar5 == NULL) || (piStack1052 = piVar5[1],  piVar1 = *0x4658dc,  piStack1052 == NULL))\n                        goto code_r0x0044d6da;\n                        iStack1048 = *piVar5;\n                        if ((uStack1036 & 0x800) == 0) {\n                            iStack1072 = 0;\n                        }\n                        else {\n                            iStack1048 = iStack1048 / 2;\n                            iStack1072 = 1;\n                        }\n                    }\n                    else if (uVar2 == 99) {\ncode_r0x0044d553:\n                        ppiStack1040 = param_3 + 1;\n                        uVar6 = *param_3;\n                        uStack1112 = uVar6;\n                        iStack1072 = 1;\n                        if ((uStack1036 & 0x20) == 0) {\n                            aiStack1032[0]._0_2_ = uVar6;\n                        }\n                        else {\n                            uStack1080 = uVar6;\n                            uStack1079 = 0;\n                            iVar4 = fcn.00454ef9(aiStack1032, &uStack1080, *0x465e70);\n                            if (iVar4 < 0) {\n                                iStack1100 = 1;\n                            }\n                        }\n                        iStack1048 = 1;\n                        piStack1052 = aiStack1032;\n                    }\n                    else if (uVar2 == 100) goto code_r0x0044d5a4;\n                }\n                else {\ncode_r0x0044d528:\n                    uStack1036 = uStack1036 | 0x40;\n                    piVar5 = aiStack1032;\n                    piVar3 = aiStack1032;\n                    if (piStack1044 < 0) {\n                        piStack1044 = 0x6;\n                    }\n                    else if (piStack1044 == NULL) {\n                        if (arg_ch == 0x67) {\n                            piStack1044 = 0x1;\n                        }\n                    }\n                    else {\n                        if (0x200 < piStack1044) {\n                            piStack1044 = 0x200;\n                        }\n                        if ((0xa3 < piStack1044) &&\n                           (piStack1052 = aiStack1032,  piStack1088 = fcn.00449f7f(piStack1044 + 0x15d), \n                           piVar5 = piStack1088,  piVar3 = piStack1088,  piStack1088 == NULL)) {\n                            piStack1044 = 0xa3;\n                            piVar5 = aiStack1032;\n                            piVar3 = piStack1052;\n                        }\n                    }\n                    piStack1052 = piVar3;\n                    piStack1128 = *ppiStack1040;\n                    piStack1124 = ppiStack1040[1];\n                    ppiStack1040 = ppiStack1040 + 2;\n                    (**0x465f90)(&piStack1128, piVar5, arg_ch, piStack1044, uStack1108);\n                    uVar2 = uStack1036 & 0x80;\n                    if ((uVar2 != 0) && (piStack1044 == NULL)) {\n                        (**0x465f9c)(piVar5);\n                    }\n                    if ((arg_ch == 0x67) && (uVar2 == 0)) {\n                        (**0x465f94)(piVar5);\n                    }\n                    piVar3 = piVar5;\n                    piVar1 = piStack1052;\n                    if (*piVar5 == 0x2d) {\n                        uStack1036 = uStack1036 | 0x100;\n                        piVar3 = piVar5 + 1;\n                        piVar1 = piVar5 + 1;\n                    }\ncode_r0x0044d6da:\n                    piStack1052 = piVar1;\n                    iStack1048 = fcn.00449fa0(piVar3);\n                }\ncode_r0x0044d8a8:\n                if (iStack1100 == 0) {\n                    if ((uStack1036 & 0x40) != 0) {\n                        if ((uStack1036 & 0x100) == 0) {\n                            if ((uStack1036 & 1) == 0) {\n                                if ((uStack1036 & 2) == 0) goto code_r0x0044d8e3;\n                                uStack1076 = 0x20;\n                            }\n                            else {\n                                uStack1076 = 0x2b;\n                            }\n                        }\n                        else {\n                            uStack1076 = 0x2d;\n                        }\n                        iStack1064 = 1;\n                    }\ncode_r0x0044d8e3:\n                    arg_ch = piStack1068 + (-iStack1048 - iStack1064);\n                    if ((uStack1036 & 0xc) == 0) {\n                        fcn.0044d1b2(0x20, arg_ch, uStack1084);\n                    }\n                    arg_10h = uStack1084;\n                    fcn.0044d1d7(iStack1064);\n                    if (((uStack1036 & 8) != 0) && ((uStack1036 & 4) == 0)) {\n                        fcn.0044d1b2(0x30, arg_ch, arg_10h);\n                    }\n                    if ((iStack1072 == 0) && (0 < iStack1048)) {\n                        iStack1096 = iStack1048;\n                        piVar5 = piStack1052;\n                        do {\n                            iStack1096 = iStack1096 + -1;\n                            puStack1116 = fcn.00454ef9(&uStack1112, piVar5, *0x465e70);\n                            if (puStack1116 < 1) break;\n                            fcn.0044d18d(uStack1112);\n                            piVar5 = piVar5 + puStack1116;\n                        } while (0 < iStack1096);\n                    }\n                    else {\n                        fcn.0044d1d7(iStack1048);\n                    }\n                    if ((uStack1036 & 4) != 0) {\n                        fcn.0044d1b2(0x20, arg_ch, uStack1084);\n                    }\n                }\n            }\n            else {\n                if (uVar2 == 0x69) {\ncode_r0x0044d5a4:\n                    uStack1036 = uStack1036 | 0x40;\ncode_r0x0044d5a8:\n                    iStack1048 = 10;\ncode_r0x0044d5af:\n                    if ((uStack1036 & 0x8000) == 0) {\n                        ppiStack1040 = param_3 + 1;\n                        if ((uStack1036 & 0x20) == 0) {\n                            piVar5 = *param_3;\n                            if ((uStack1036 & 0x40) == 0) {\n                                piVar3 = NULL;\n                                goto code_r0x0044d7f2;\n                            }\n                        }\n                        else if ((uStack1036 & 0x40) == 0) {\n                            piVar5 = *param_3;\n                        }\n                        else {\n                            piVar5 = *param_3;\n                        }\n                        piVar3 = piVar5 >> 0x1f;\n                    }\n                    else {\n                        piVar5 = *param_3;\n                        piVar3 = param_3[1];\n                        ppiStack1040 = param_3 + 2;\n                    }\ncode_r0x0044d7f2:\n                    if ((((uStack1036 & 0x40) != 0) && (piVar3 < 1)) && (piVar3 < 0)) {\n                        bVar7 = piVar5 != NULL;\n                        piVar5 = -piVar5;\n                        piVar3 = -(piVar3 + bVar7);\n                        uStack1036 = uStack1036 | 0x100;\n                    }\n                    if ((uStack1036 & 0x8000) == 0) {\n                        piVar3 = NULL;\n                    }\n                    iVar8 = CONCAT44(piVar3, piVar5);\n                    if (piStack1044 < 0) {\n                        piStack1044 = 0x1;\n                    }\n                    else {\n                        uStack1036 = uStack1036 & 0xfffffff7;\n                        if (0x200 < piStack1044) {\n                            piStack1044 = 0x200;\n                        }\n                    }\n                    if ((piVar5 | piVar3) == 0) {\n                        iStack1064 = 0;\n                    }\n                    piVar5 = &uStack521;\n                    while( true ) {\n                        arg_ch = iVar8;\n                        piVar3 = piStack1044 + -1;\n                        if ((piStack1044 < 1) && (iVar8 == 0)) break;\n                        piStack1044 = piVar3;\n                        iVar8 = fcn.00454960();\n                        iVar4 = extraout_ECX + 0x30;\n                        if (0x39 < iVar4) {\n                            iVar4 = iVar4 + iStack1092;\n                        }\n                        *piVar5 = iVar4;\n                        piVar5 = piVar5 + -1;\n                        puStack1116 = arg_ch;\n                    }\n                    iStack1048 = &uStack521 + -piVar5;\n                    piStack1052 = piVar5 + 1;\n                    piStack1044 = piVar3;\n                    if (((uStack1036 & 0x200) != 0) && ((*piStack1052 != 0x30 || (iStack1048 == 0)))) {\n                        *piVar5 = 0x30;\n                        iStack1048 = &uStack521 + -piVar5 + 1;\n                        piStack1052 = piVar5;\n                    }\n                    goto code_r0x0044d8a8;\n                }\n                if (uVar2 != 0x6e) {\n                    if (uVar2 == 0x6f) {\n                        iStack1048 = 8;\n                        if ((uStack1036 & 0x80) != 0) {\n                            uStack1036 = uStack1036 | 0x200;\n                        }\n                        goto code_r0x0044d5af;\n                    }\n                    if (uVar2 == 0x70) {\n                        piStack1044 = 0x8;\n                        goto code_r0x0044d75a;\n                    }\n                    if (uVar2 == 0x73) {\ncode_r0x0044d4b7:\n                        piVar5 = piStack1044;\n                        if (piStack1044 == 0xffffffff) {\n                            piVar5 = 0x7fffffff;\n                        }\n                        ppiStack1040 = param_3 + 1;\n                        piStack1052 = *param_3;\n                        if ((uStack1036 & 0x20) == 0) {\n                            if (piStack1052 == NULL) {\n                                piStack1052 = *0x4658e0;\n                            }\n                            iStack1072 = 1;\n                            for (piVar3 = piStack1052; (piVar5 != NULL && (piVar5 = piVar5 + -1,  *piVar3 != 0));\n                                piVar3 = piVar3 + 2) {\n                            }\n                            iStack1048 = piVar3 - piStack1052 >> 1;\n                        }\n                        else {\n                            if (piStack1052 == NULL) {\n                                piStack1052 = *0x4658dc;\n                            }\n                            iStack1048 = 0;\n                            piVar3 = piStack1052;\n                            if (0 < piVar5) {\n                                do {\n                                    if (*piVar3 == 0) break;\n                                    if ((*(*0x4658d4 + 1 + *piVar3 * 2) & 0x80) != 0) {\n                                        piVar3 = piVar3 + 1;\n                                    }\n                                    piVar3 = piVar3 + 1;\n                                    iStack1048 = iStack1048 + 1;\n                                } while (iStack1048 < piVar5);\n                            }\n                        }\n                        goto code_r0x0044d8a8;\n                    }\n                    if (uVar2 != 0x75) {\n                        if (uVar2 != 0x78) goto code_r0x0044d8a8;\n                        iStack1092 = 0x27;\n                        goto code_r0x0044d75d;\n                    }\n                    goto code_r0x0044d5a8;\n                }\n                ppiStack1040 = param_3 + 1;\n                if ((uStack1036 & 0x20) == 0) {\n                    **param_3 = iStack1056;\n                }\n                else {\n                    **param_3 = iStack1056;\n                }\n                iStack1100 = 1;\n            }\n            if (piStack1088 != NULL) {\n                fcn.0044a128(piStack1088);\n                piStack1088 = NULL;\n            }\n        }\n        uVar6 = *puStack1060;\n        arg_ch = arg_ch & 0xffff0000 | uVar6;\n        iVar4 = iStack1104;\n        param_3 = ppiStack1040;\n        param_2 = puStack1060;\n    }\n    fcn.0044ce09();\n    return;\n}\n",
        "token_count": 4979
    },
    "0044dbb2": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0044dbb2(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t unaff_EBP;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.0044dc28(0x45acd8, 0x10);\n    if (*0x480b80 == 3) {\n        fcn.0044cb7b(4);\n        *(unaff_EBP + -4) = 0;\n        iVar1 = *(unaff_EBP + 8);\n        iVar2 = fcn.0044e5b6(iVar1);\n        *(unaff_EBP + -0x20) = iVar2;\n        if (iVar2 != 0) {\n            *(unaff_EBP + -0x1c) = *(iVar1 + -4) + -9;\n        }\n        *(unaff_EBP + -4) = 0xffffffff;\n        fcn.0044dc1f();\n        if (*(unaff_EBP + -0x20) != 0) goto code_r0x0044dc14;\n    }\n    (**0x459280)(*0x480b7c, 0, *(unaff_EBP + 8));\ncode_r0x0044dc14:\n    fcn.0044dc63();\n    return;\n}\n",
        "token_count": 324
    },
    "0044e5e1": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044e5e1(uint32_t *arg_8h, int32_t arg_ch)\n\n{\n    int32_t *piVar1;\n    char *pcVar2;\n    uint32_t *puVar3;\n    int32_t *piVar4;\n    char cVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    code *pcVar8;\n    uint8_t uVar9;\n    uint32_t uVar10;\n    uint32_t *puVar11;\n    uint32_t *puVar12;\n    uint32_t *puVar13;\n    uint32_t uVar14;\n    uint32_t uVar15;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    uVar6 = arg_8h[4];\n    puVar13 = arg_ch + -4;\n    uVar15 = arg_ch - arg_8h[3] >> 0xf;\n    piVar4 = uVar15 * 0x204 + 0x144 + uVar6;\n    var_4h = *puVar13 - 1;\n    if ((var_4h & 1) == 0) {\n        puVar11 = var_4h + puVar13;\n        uVar14 = *puVar11;\n        uVar7 = *(arg_ch + -8);\n        if ((uVar14 & 1) == 0) {\n            uVar10 = (uVar14 >> 4) - 1;\n            if (0x3f < uVar10) {\n                uVar10 = 0x3f;\n            }\n            if (puVar11[1] == puVar11[2]) {\n                if (uVar10 < 0x20) {\n                    pcVar2 = uVar10 + 4 + uVar6;\n                    uVar10 = ~(0x80000000U >> (uVar10 & 0x1f));\n                    puVar12 = uVar6 + 0x44 + uVar15 * 4;\n                    *puVar12 = *puVar12 & uVar10;\n                    *pcVar2 = *pcVar2 + -1;\n                    if (*pcVar2 == '\\0') {\n                        *arg_8h = *arg_8h & uVar10;\n                    }\n                }\n                else {\n                    pcVar2 = uVar10 + 4 + uVar6;\n                    uVar10 = ~(0x80000000U >> (uVar10 - 0x20 & 0x1f));\n                    puVar12 = uVar6 + 0xc4 + uVar15 * 4;\n                    *puVar12 = *puVar12 & uVar10;\n                    *pcVar2 = *pcVar2 + -1;\n                    if (*pcVar2 == '\\0') {\n                        arg_8h[1] = arg_8h[1] & uVar10;\n                    }\n                }\n            }\n            var_4h = var_4h + uVar14;\n            *(puVar11[2] + 4) = puVar11[1];\n            *(puVar11[1] + 8) = puVar11[2];\n        }\n        puVar11 = (var_4h >> 4) + -1;\n        if (0x3f < puVar11) {\n            puVar11 = 0x3f;\n        }\n        puVar12 = arg_8h;\n        if ((uVar7 & 1) == 0) {\n            puVar13 = puVar13 - uVar7;\n            puVar12 = (uVar7 >> 4) + -1;\n            if (0x3f < puVar12) {\n                puVar12 = 0x3f;\n            }\n            var_4h = var_4h + uVar7;\n            puVar11 = (var_4h >> 4) + -1;\n            if (0x3f < puVar11) {\n                puVar11 = 0x3f;\n            }\n            if (puVar12 != puVar11) {\n                if (puVar13[1] == puVar13[2]) {\n                    if (puVar12 < 0x20) {\n                        uVar14 = ~(0x80000000U >> (puVar12 & 0x1f));\n                        puVar3 = uVar6 + 0x44 + uVar15 * 4;\n                        *puVar3 = *puVar3 & uVar14;\n                        pcVar2 = puVar12 + uVar6 + 4;\n                        *pcVar2 = *pcVar2 + -1;\n                        if (*pcVar2 == '\\0') {\n                            *arg_8h = *arg_8h & uVar14;\n                        }\n                    }\n                    else {\n                        uVar14 = ~(0x80000000U >> (puVar12 - 0x20 & 0x1f));\n                        puVar3 = uVar6 + 0xc4 + uVar15 * 4;\n                        *puVar3 = *puVar3 & uVar14;\n                        pcVar2 = puVar12 + uVar6 + 4;\n                        *pcVar2 = *pcVar2 + -1;\n                        if (*pcVar2 == '\\0') {\n                            arg_8h[1] = arg_8h[1] & uVar14;\n                        }\n                    }\n                }\n                *(puVar13[2] + 4) = puVar13[1];\n                *(puVar13[1] + 8) = puVar13[2];\n            }\n        }\n        if (((uVar7 & 1) != 0) || (puVar12 != puVar11)) {\n            piVar1 = piVar4 + puVar11 * 2;\n            uVar14 = piVar1[1];\n            puVar13[2] = piVar1;\n            puVar13[1] = uVar14;\n            piVar1[1] = puVar13;\n            *(puVar13[1] + 8) = puVar13;\n            if (puVar13[1] == puVar13[2]) {\n                cVar5 = *(puVar11 + uVar6 + 4);\n                *(puVar11 + uVar6 + 4) = cVar5 + '\\x01';\n                uVar9 = puVar11;\n                if (puVar11 < 0x20) {\n                    if (cVar5 == '\\0') {\n                        *arg_8h = *arg_8h | 0x80000000U >> (uVar9 & 0x1f);\n                    }\n                    puVar11 = uVar6 + 0x44 + uVar15 * 4;\n                    *puVar11 = *puVar11 | 0x80000000U >> (uVar9 & 0x1f);\n                }\n                else {\n                    if (cVar5 == '\\0') {\n                        arg_8h[1] = arg_8h[1] | 0x80000000U >> (uVar9 - 0x20 & 0x1f);\n                    }\n                    puVar11 = uVar6 + 0xc4 + uVar15 * 4;\n                    *puVar11 = *puVar11 | 0x80000000U >> (uVar9 - 0x20 & 0x1f);\n                }\n            }\n        }\n        *puVar13 = var_4h;\n        *((var_4h - 4) + puVar13) = var_4h;\n        *piVar4 = *piVar4 + -1;\n        pcVar8 = *0x459298;\n        if (*piVar4 == 0) {\n            if (*0x480b60 != NULL) {\n                (**0x459298)(*0x480b78 * 0x8000 + (*0x480b60)[3], 0x8000, 0x4000);\n                (*0x480b60)[2] = (*0x480b60)[2] | 0x80000000U >> (*0x480b78 & 0x1f);\n                *((*0x480b60)[4] + 0xc4 + *0x480b78 * 4) = 0;\n                *((*0x480b60)[4] + 0x43) = *((*0x480b60)[4] + 0x43) + -1;\n                if (*((*0x480b60)[4] + 0x43) == '\\0') {\n                    (*0x480b60)[1] = (*0x480b60)[1] & 0xfffffffe;\n                }\n                if ((*0x480b60)[2] == 0xffffffff) {\n                    (*pcVar8)((*0x480b60)[3], 0, 0x8000);\n                    (*_sym.imp.KERNEL32.DLL_HeapFree)(*0x480b7c, 0, (*0x480b60)[4]);\n                    fcn.0044af60(*0x480b60, *0x480b60 + 5, (*0x480b64 * 0x14 - *0x480b60) + -0x14 + *0x480b68);\n                    *0x480b64 = *0x480b64 + -1;\n                    if (*0x480b60 < arg_8h) {\n                        arg_8h = arg_8h + -5;\n                    }\n                    *0x480b70 = *0x480b68;\n                }\n            }\n            *0x480b60 = arg_8h;\n            *0x480b78 = uVar15;\n        }\n    }\n    return;\n}\n",
        "token_count": 2153
    },
    "0044ed95": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.0044ed95(uint32_t *arg_8h)\n\n{\n    int32_t *piVar1;\n    char *pcVar2;\n    int32_t *piVar3;\n    char cVar4;\n    int32_t *piVar5;\n    uint uVar6;\n    uint8_t uVar7;\n    uint32_t uVar8;\n    int32_t iVar9;\n    uint32_t *puVar10;\n    int32_t iVar11;\n    uint32_t uVar12;\n    int32_t *piVar13;\n    uint32_t *puVar14;\n    uint32_t *puVar15;\n    uint32_t uVar16;\n    int32_t iVar17;\n    bool bVar18;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    uVar8 = arg_8h + 0x17U & 0xfffffff0;\n    iVar9 = (arg_8h + 0x17U >> 4) + -1;\n    puVar10 = *0x480b68 + *0x480b64 * 5;\n    uVar7 = iVar9;\n    if (iVar9 < 0x20) {\n        uVar16 = 0xffffffff >> (uVar7 & 0x1f);\n        var_8h = 0xffffffff;\n    }\n    else {\n        uVar16 = 0;\n        var_8h = 0xffffffff >> (uVar7 - 0x20 & 0x1f);\n    }\n    bVar18 = *0x480b70 < puVar10;\n    arg_8h = *0x480b70;\n    while ((bVar18 && ((arg_8h[1] & var_8h | *arg_8h & uVar16) == 0))) {\n        arg_8h = arg_8h + 5;\n        bVar18 = arg_8h < puVar10;\n    }\n    puVar14 = *0x480b68;\n    if (arg_8h == puVar10) {\n        for (; (puVar14 < *0x480b70 && ((puVar14[1] & var_8h | *puVar14 & uVar16) == 0)); puVar14 = puVar14 + 5) {\n        }\n        arg_8h = puVar14;\n        if (puVar14 == *0x480b70) {\n            for (; (puVar14 < puVar10 && (puVar14[2] == 0)); puVar14 = puVar14 + 5) {\n            }\n            puVar15 = *0x480b68;\n            arg_8h = puVar14;\n            if (puVar14 == puVar10) {\n                for (; (puVar15 < *0x480b70 && (puVar15[2] == 0)); puVar15 = puVar15 + 5) {\n                }\n                arg_8h = puVar15;\n                if ((puVar15 == *0x480b70) && (arg_8h = fcn.0044e8f9(),  arg_8h == NULL)) {\n                    return NULL;\n                }\n            }\n            uVar6 = fcn.0044e9b0(arg_8h);\n            *arg_8h[4] = uVar6;\n            if (*arg_8h[4] == -1) {\n                return NULL;\n            }\n        }\n    }\n    piVar5 = arg_8h[4];\n    var_4h = *piVar5;\n    if ((var_4h == -1) || ((piVar5[var_4h + 0x31] & var_8h | piVar5[var_4h + 0x11] & uVar16) == 0)) {\n        var_4h = 0;\n        puVar10 = piVar5 + 0x11;\n        uVar12 = piVar5[0x31] & var_8h | *puVar10 & uVar16;\n        while (uVar12 == 0) {\n            puVar14 = puVar10 + 0x21;\n            var_4h = var_4h + 1;\n            puVar10 = puVar10 + 1;\n            uVar12 = *puVar14 & var_8h | *puVar10 & uVar16;\n        }\n    }\n    piVar3 = piVar5 + var_4h * 0x81 + 0x51;\n    iVar9 = 0;\n    uVar16 = piVar5[var_4h + 0x11] & uVar16;\n    if (uVar16 == 0) {\n        uVar16 = piVar5[var_4h + 0x31] & var_8h;\n        iVar9 = 0x20;\n    }\n    for (; -1 < uVar16; uVar16 = uVar16 << 1) {\n        iVar9 = iVar9 + 1;\n    }\n    piVar13 = piVar3[iVar9 * 2 + 1];\n    iVar11 = *piVar13 - uVar8;\n    iVar17 = (iVar11 >> 4) + -1;\n    if (0x3f < iVar17) {\n        iVar17 = 0x3f;\n    }\n    *0x480b70 = arg_8h;\n    if (iVar17 != iVar9) {\n        if (piVar13[1] == piVar13[2]) {\n            if (iVar9 < 0x20) {\n                pcVar2 = piVar5 + iVar9 + 4;\n                uVar16 = ~(0x80000000U >> (iVar9 & 0x1f));\n                piVar5[var_4h + 0x11] = uVar16 & piVar5[var_4h + 0x11];\n                *pcVar2 = *pcVar2 + -1;\n                if (*pcVar2 == '\\0') {\n                    *arg_8h = *arg_8h & uVar16;\n                }\n            }\n            else {\n                pcVar2 = piVar5 + iVar9 + 4;\n                uVar16 = ~(0x80000000U >> (iVar9 - 0x20 & 0x1f));\n                piVar5[var_4h + 0x31] = piVar5[var_4h + 0x31] & uVar16;\n                *pcVar2 = *pcVar2 + -1;\n                if (*pcVar2 == '\\0') {\n                    arg_8h[1] = arg_8h[1] & uVar16;\n                }\n            }\n        }\n        *(piVar13[2] + 4) = piVar13[1];\n        *(piVar13[1] + 8) = piVar13[2];\n        if (iVar11 == 0) goto code_r0x0044f04e;\n        piVar1 = piVar3 + iVar17 * 2;\n        iVar9 = piVar1[1];\n        piVar13[2] = piVar1;\n        piVar13[1] = iVar9;\n        piVar1[1] = piVar13;\n        *(piVar13[1] + 8) = piVar13;\n        if (piVar13[1] == piVar13[2]) {\n            cVar4 = *(iVar17 + 4 + piVar5);\n            *(iVar17 + 4 + piVar5) = cVar4 + '\\x01';\n            uVar7 = iVar17;\n            if (iVar17 < 0x20) {\n                if (cVar4 == '\\0') {\n                    *arg_8h = *arg_8h | 0x80000000U >> (uVar7 & 0x1f);\n                }\n                piVar5[var_4h + 0x11] = piVar5[var_4h + 0x11] | 0x80000000U >> (uVar7 & 0x1f);\n            }\n            else {\n                if (cVar4 == '\\0') {\n                    arg_8h[1] = arg_8h[1] | 0x80000000U >> (uVar7 - 0x20 & 0x1f);\n                }\n                piVar5[var_4h + 0x31] = piVar5[var_4h + 0x31] | 0x80000000U >> (uVar7 - 0x20 & 0x1f);\n            }\n        }\n    }\n    if (iVar11 != 0) {\n        *piVar13 = iVar11;\n        *(iVar11 + -4 + piVar13) = iVar11;\n    }\ncode_r0x0044f04e:\n    piVar13 = piVar13 + iVar11;\n    *piVar13 = uVar8 + 1;\n    *(piVar13 + (uVar8 - 4)) = uVar8 + 1;\n    iVar9 = *piVar3;\n    *piVar3 = iVar9 + 1;\n    if (((iVar9 == 0) && (arg_8h == *0x480b60)) && (var_4h == *0x480b78)) {\n        *0x480b60 = NULL;\n    }\n    *piVar5 = var_4h;\n    return piVar13 + 1;\n}\n",
        "token_count": 2104
    },
    "0044f108": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0044f108(int32_t *param_1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    \n    iVar2 = fcn.00454e0f(param_1[4]);\n    if (iVar2 == 0) {\n        return 0;\n    }\n    if (param_1 == 0x4651a0) {\n        iVar2 = 0;\n    }\n    else {\n        if (param_1 != 0x4651c0) {\n            return 0;\n        }\n        iVar2 = 1;\n    }\n    *0x467410 = *0x467410 + 1;\n    if ((*(param_1 + 3) & 0x10c) != 0) {\n        return 0;\n    }\n    piVar1 = iVar2 * 4 + 0x46759c;\n    if (*piVar1 == 0) {\n        iVar2 = fcn.00449f7f(0x1000);\n        *piVar1 = iVar2;\n        if (iVar2 == 0) {\n            param_1[2] = param_1 + 5;\n            *param_1 = param_1 + 5;\n            param_1[6] = 2;\n            param_1[1] = 2;\n            goto code_r0x0044f17f;\n        }\n    }\n    iVar2 = *piVar1;\n    param_1[2] = iVar2;\n    *param_1 = iVar2;\n    param_1[6] = 0x1000;\n    param_1[1] = 0x1000;\ncode_r0x0044f17f:\n    *(param_1 + 3) = *(param_1 + 3) | 0x1102;\n    return 1;\n}\n",
        "token_count": 406
    },
    "0044f190": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0044f190(int32_t param_1, uint *param_2)\n\n{\n    if ((param_1 != 0) && ((*(param_2 + 0xd) & 0x10) != 0)) {\n        fcn.0044b80d(param_2);\n        *(param_2 + 0xd) = *(param_2 + 0xd) & 0xee;\n        param_2[6] = 0;\n        *param_2 = 0;\n        param_2[2] = 0;\n    }\n    return;\n}\n",
        "token_count": 130
    },
    "0044f211": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0044f211(int32_t param_1)\n\n{\n    int32_t *in_EAX;\n    int32_t unaff_EDI;\n    \n    if (((*(unaff_EDI + 0xc) & 0x40) == 0) || (*(unaff_EDI + 8) != 0)) {\n        do {\n            if (param_1 < 1) {\n                return;\n            }\n            param_1 = param_1 + -1;\n            fcn.0044f1ba();\n        } while (*in_EAX != -1);\n    }\n    else {\n        *in_EAX = *in_EAX + param_1;\n    }\n    return;\n}\n",
        "token_count": 152
    },
    "0044f248": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Type propagation algorithm not settling\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0044f248(uint param_1, uint8_t *param_2, int32_t **param_3)\n\n{\n    uint8_t uVar1;\n    uint arg_10h;\n    int32_t *piVar2;\n    uint32_t uVar3;\n    int32_t *piVar4;\n    int32_t iVar5;\n    int32_t *piVar6;\n    int32_t extraout_ECX;\n    int32_t iVar7;\n    uint8_t uVar8;\n    char *arg_ch;\n    bool bVar9;\n    int64_t iVar10;\n    int32_t *piStack612;\n    int32_t *piStack608;\n    int32_t iStack600;\n    int32_t iStack596;\n    uint uStack592;\n    int32_t iStack588;\n    int32_t iStack584;\n    int32_t *piStack580;\n    int32_t iStack576;\n    int32_t *piStack572;\n    uint uStack568;\n    uint8_t *puStack564;\n    int32_t iStack560;\n    uchar uStack556;\n    char cStack555;\n    int32_t iStack552;\n    int32_t iStack548;\n    int32_t *piStack544;\n    int32_t *piStack540;\n    int32_t **ppiStack536;\n    uint32_t uStack532;\n    int32_t aiStack528 [11];\n    uchar auStack484 [467];\n    uint uStack17;\n    uint32_t uStack8;\n    \n    uStack8 = *0x465718 ^ auStack484;\n    uVar8 = *param_2;\n    iStack548 = 0;\n    iStack552 = 0;\n    piStack580 = NULL;\n    iVar5 = 0;\n    uStack568 = param_1;\n    do {\n        puStack564 = param_2;\n        ppiStack536 = param_3;\n        if ((uVar8 == 0) || (puStack564 = param_2 + 1,  iStack552 < 0)) {\n            fcn.0044ce09();\n            return;\n        }\n        if ((uVar8 < ' ') || ('x' < uVar8)) {\n            uVar3 = 0;\n        }\n        else {\n            uVar3 = *(uVar8 + 0x45b220) & 0xf;\n        }\n        iStack596 = *(iVar5 + 0x45b240 + uVar3 * 8) >> 4;\n    // switch table (8 cases) at 0x44f9e4\n        switch(iStack596) {\n        case 0:\ncode_r0x0044f464:\n            iStack576 = 0;\n            if ((*(*0x4658d4 + 1 + uVar8 * 2) & 0x80) != 0) {\n                fcn.0044f1ba();\n                puStack564 = param_2 + 2;\n            }\n            fcn.0044f1ba();\n            break;\n        case 1:\n            piStack540 = 0xffffffff;\n            uStack592 = 0;\n            iStack584 = 0;\n            piStack572 = NULL;\n            iStack560 = 0;\n            uStack532 = 0;\n            iStack576 = 0;\n            break;\n        case 2:\n            if (uVar8 == 0x20) {\n                uStack532 = uStack532 | 2;\n            }\n            else if (uVar8 == 0x23) {\n                uStack532 = uStack532 | 0x80;\n            }\n            else if (uVar8 == 0x2b) {\n                uStack532 = uStack532 | 1;\n            }\n            else if (uVar8 == 0x2d) {\n                uStack532 = uStack532 | 4;\n            }\n            else if (uVar8 == 0x30) {\n                uStack532 = uStack532 | 8;\n            }\n            break;\n        case 3:\n            if (uVar8 == 0x2a) {\n                piStack572 = *param_3;\n                ppiStack536 = param_3 + 1;\n                if (piStack572 < 0) {\n                    uStack532 = uStack532 | 4;\n                    piStack572 = -piStack572;\n                }\n            }\n            else {\n                piStack572 = uVar8 + -0x30 + piStack572 * 10;\n            }\n            break;\n        case 4:\n            piStack540 = NULL;\n            break;\n        case 5:\n            if (uVar8 == 0x2a) {\n                piStack540 = *param_3;\n                ppiStack536 = param_3 + 1;\n                if (piStack540 < 0) {\n                    piStack540 = 0xffffffff;\n                }\n            }\n            else {\n                piStack540 = uVar8 + -0x30 + piStack540 * 10;\n            }\n            break;\n        case 6:\n            if (uVar8 == 0x49) {\n                uVar1 = *puStack564;\n                if ((uVar1 == 0x36) && (param_2[2] == 0x34)) {\n                    puStack564 = param_2 + 3;\n                    uStack532 = uStack532 | 0x8000;\n                }\n                else if ((uVar1 == 0x33) && (param_2[2] == 0x32)) {\n                    puStack564 = param_2 + 3;\n                    uStack532 = uStack532 & 0xffff7fff;\n                }\n                else if (((((uVar1 != 100) && (uVar1 != 0x69)) && (uVar1 != 0x6f)) &&\n                         ((uVar1 != 0x75 && (uVar1 != 0x78)))) && (uVar1 != 0x58)) {\n                    iStack596 = 0;\n                    goto code_r0x0044f464;\n                }\n            }\n            else if (uVar8 == 0x68) {\n                uStack532 = uStack532 | 0x20;\n            }\n            else if (uVar8 == 0x6c) {\n                uStack532 = uStack532 | 0x10;\n            }\n            else if (uVar8 == 0x77) {\n                uStack532 = uStack532 | 0x800;\n            }\n            break;\n        case 7:\n            if (uVar8 < 'h') {\n                if (uVar8 < 'e') {\n                    if (uVar8 < 'Y') {\n                        if (uVar8 != 0x58) {\n                            if (uVar8 == 0x43) {\n                                if ((uStack532 & 0x830) == 0) {\n                                    uStack532 = uStack532 | 0x800;\n                                }\n                                goto code_r0x0044f55e;\n                            }\n                            if ((uVar8 != 0x45) && (uVar8 != 0x47)) {\n                                if (uVar8 == 0x53) {\n                                    if ((uStack532 & 0x830) == 0) {\n                                        uStack532 = uStack532 | 0x800;\n                                    }\n                                    goto code_r0x0044f4e7;\n                                }\n                                goto code_r0x0044f8b2;\n                            }\n                            uStack592 = 1;\n                            uVar8 = uVar8 + 0x20;\n                            goto code_r0x0044f532;\n                        }\ncode_r0x0044f764:\n                        iStack588 = 7;\ncode_r0x0044f767:\n                        iStack548 = 0x10;\n                        if ((uStack532 & 0x80) != 0) {\n                            cStack555 = iStack588 + 'Q';\n                            uStack556 = 0x30;\n                            iStack560 = 2;\n                        }\n                        goto code_r0x0044f5a9;\n                    }\n                    if (uVar8 == 0x5a) {\n                        ppiStack536 = param_3 + 1;\n                        piVar6 = *param_3;\n                        piVar4 = *0x4658dc;\n                        piVar2 = *0x4658dc;\n                        if ((piVar6 == NULL) || (piStack544 = piVar6[1],  piVar2 = *0x4658dc,  piStack544 == NULL))\n                        goto code_r0x0044f6d8;\n                        iStack548 = *piVar6;\n                        if ((uStack532 & 0x800) == 0) {\n                            iStack576 = 0;\n                        }\n                        else {\n                            iStack548 = iStack548 / 2;\n                            iStack576 = 1;\n                        }\n                    }\n                    else if (uVar8 == 99) {\ncode_r0x0044f55e:\n                        ppiStack536 = param_3 + 1;\n                        if ((uStack532 & 0x810) == 0) {\n                            aiStack528[0]._0_1_ = *param_3;\n                            iStack548 = 1;\n                        }\n                        else {\n                            iStack548 = fcn.004557d2(aiStack528, *param_3);\n                            if (iStack548 < 0) {\n                                iStack584 = 1;\n                            }\n                        }\n                        piStack544 = aiStack528;\n                    }\n                    else if (uVar8 == 100) goto code_r0x0044f59e;\n                }\n                else {\ncode_r0x0044f532:\n                    uStack532 = uStack532 | 0x40;\n                    piVar6 = aiStack528;\n                    piVar4 = aiStack528;\n                    if (piStack540 < 0) {\n                        piStack540 = 0x6;\n                    }\n                    else if (piStack540 == NULL) {\n                        if (uVar8 == 0x67) {\n                            piStack540 = 0x1;\n                        }\n                    }\n                    else {\n                        if (0x200 < piStack540) {\n                            piStack540 = 0x200;\n                        }\n                        if ((0xa3 < piStack540) &&\n                           (piStack544 = aiStack528,  piStack580 = fcn.00449f7f(piStack540 + 0x15d), \n                           piVar6 = piStack580,  piVar4 = piStack580,  piStack580 == NULL)) {\n                            piStack540 = 0xa3;\n                            piVar6 = aiStack528;\n                            piVar4 = piStack544;\n                        }\n                    }\n                    piStack544 = piVar4;\n                    piStack612 = *ppiStack536;\n                    piStack608 = ppiStack536[1];\n                    ppiStack536 = ppiStack536 + 2;\n                    (**0x465f90)(&piStack612, piVar6, uVar8, piStack540, uStack592);\n                    uVar3 = uStack532 & 0x80;\n                    if ((uVar3 != 0) && (piStack540 == NULL)) {\n                        (**0x465f9c)(piVar6);\n                    }\n                    if ((uVar8 == 0x67) && (uVar3 == 0)) {\n                        (**0x465f94)(piVar6);\n                    }\n                    piVar4 = piVar6;\n                    piVar2 = piStack544;\n                    if (*piVar6 == '-') {\n                        uStack532 = uStack532 | 0x100;\n                        piVar4 = piVar6 + 1;\n                        piVar2 = piVar6 + 1;\n                    }\ncode_r0x0044f6d8:\n                    piStack544 = piVar2;\n                    iStack548 = fcn.00449fa0(piVar4);\n                }\ncode_r0x0044f8b2:\n                uVar3 = uStack532;\n                if (iStack584 == 0) {\n                    if ((uStack532 & 0x40) != 0) {\n                        if ((uStack532 & 0x100) == 0) {\n                            if ((uStack532 & 1) == 0) {\n                                if ((uStack532 & 2) == 0) goto code_r0x0044f8ea;\n                                uStack556 = 0x20;\n                            }\n                            else {\n                                uStack556 = 0x2b;\n                            }\n                        }\n                        else {\n                            uStack556 = 0x2d;\n                        }\n                        iStack560 = 1;\n                    }\ncode_r0x0044f8ea:\n                    arg_ch = piStack572 + (-iStack548 - iStack560);\n                    if ((uStack532 & 0xc) == 0) {\n                        fcn.0044f1ed(0x20, arg_ch, uStack568);\n                    }\n                    arg_10h = uStack568;\n                    fcn.0044f211(iStack560);\n                    if (((uVar3 & 8) != 0) && ((uVar3 & 4) == 0)) {\n                        fcn.0044f1ed(0x30, arg_ch, arg_10h);\n                    }\n                    if ((iStack576 == 0) || (iStack548 < 1)) {\n                        fcn.0044f211(iStack548);\n                    }\n                    else {\n                        iStack600 = iStack548;\n                        piVar6 = piStack544;\n                        do {\n                            iStack600 = iStack600 + -1;\n                            iVar5 = fcn.004557d2(&uStack17 + 1, *piVar6);\n                            piVar6 = piVar6 + 2;\n                            if (iVar5 < 1) break;\n                            fcn.0044f211(iVar5);\n                        } while (iStack600 != 0);\n                    }\n                    if ((uStack532 & 4) != 0) {\n                        fcn.0044f1ed(0x20, arg_ch, uStack568);\n                    }\n                }\n            }\n            else {\n                if (uVar8 == 0x69) {\ncode_r0x0044f59e:\n                    uStack532 = uStack532 | 0x40;\ncode_r0x0044f5a2:\n                    iStack548 = 10;\ncode_r0x0044f5a9:\n                    if ((uStack532 & 0x8000) == 0) {\n                        ppiStack536 = param_3 + 1;\n                        if ((uStack532 & 0x20) == 0) {\n                            piVar6 = *param_3;\n                            if ((uStack532 & 0x40) == 0) {\n                                piVar4 = NULL;\n                                goto code_r0x0044f7fc;\n                            }\n                        }\n                        else if ((uStack532 & 0x40) == 0) {\n                            piVar6 = *param_3;\n                        }\n                        else {\n                            piVar6 = *param_3;\n                        }\n                        piVar4 = piVar6 >> 0x1f;\n                    }\n                    else {\n                        piVar6 = *param_3;\n                        piVar4 = param_3[1];\n                        ppiStack536 = param_3 + 2;\n                    }\ncode_r0x0044f7fc:\n                    if ((((uStack532 & 0x40) != 0) && (piVar4 < 1)) && (piVar4 < 0)) {\n                        bVar9 = piVar6 != NULL;\n                        piVar6 = -piVar6;\n                        piVar4 = -(piVar4 + bVar9);\n                        uStack532 = uStack532 | 0x100;\n                    }\n                    if ((uStack532 & 0x8000) == 0) {\n                        piVar4 = NULL;\n                    }\n                    iVar10 = CONCAT44(piVar4, piVar6);\n                    if (piStack540 < 0) {\n                        piStack540 = 0x1;\n                    }\n                    else {\n                        uStack532 = uStack532 & 0xfffffff7;\n                        if (0x200 < piStack540) {\n                            piStack540 = 0x200;\n                        }\n                    }\n                    if ((piVar6 | piVar4) == 0) {\n                        iStack560 = 0;\n                    }\n                    piVar6 = &uStack17;\n                    while( true ) {\n                        iVar5 = iVar10;\n                        piVar4 = piStack540 + -1;\n                        if ((piStack540 < 1) && (iVar10 == 0)) break;\n                        piStack540 = piVar4;\n                        iVar10 = fcn.00454960();\n                        iVar7 = extraout_ECX + 0x30;\n                        if (0x39 < iVar7) {\n                            iVar7 = iVar7 + iStack588;\n                        }\n                        *piVar6 = iVar7;\n                        piVar6 = piVar6 + -1;\n                        iStack600 = iVar5;\n                    }\n                    iStack548 = &uStack17 + -piVar6;\n                    piStack544 = piVar6 + 1;\n                    piStack540 = piVar4;\n                    if (((uStack532 & 0x200) != 0) && ((*piStack544 != '0' || (iStack548 == 0)))) {\n                        *piVar6 = '0';\n                        iStack548 = &uStack17 + -piVar6 + 1;\n                        piStack544 = piVar6;\n                    }\n                    goto code_r0x0044f8b2;\n                }\n                if (uVar8 != 0x6e) {\n                    if (uVar8 == 0x6f) {\n                        iStack548 = 8;\n                        if ((uStack532 & 0x80) != 0) {\n                            uStack532 = uStack532 | 0x200;\n                        }\n                        goto code_r0x0044f5a9;\n                    }\n                    if (uVar8 == 0x70) {\n                        piStack540 = 0x8;\n                        goto code_r0x0044f764;\n                    }\n                    if (uVar8 == 0x73) {\ncode_r0x0044f4e7:\n                        piVar6 = piStack540;\n                        if (piStack540 == 0xffffffff) {\n                            piVar6 = 0x7fffffff;\n                        }\n                        ppiStack536 = param_3 + 1;\n                        piStack544 = *param_3;\n                        if ((uStack532 & 0x810) == 0) {\n                            piVar4 = piStack544;\n                            if (piStack544 == NULL) {\n                                piVar4 = *0x4658dc;\n                                piStack544 = *0x4658dc;\n                            }\n                            for (; (piVar6 != NULL && (piVar6 = piVar6 + -1,  *piVar4 != '\\0')); piVar4 = piVar4 + 1) {\n                            }\n                            iStack548 = piVar4 - piStack544;\n                        }\n                        else {\n                            if (piStack544 == NULL) {\n                                piStack544 = *0x4658e0;\n                            }\n                            iStack576 = 1;\n                            for (piVar4 = piStack544; (piVar6 != NULL && (piVar6 = piVar6 + -1,  *piVar4 != 0));\n                                piVar4 = piVar4 + 2) {\n                            }\n                            iStack548 = piVar4 - piStack544 >> 1;\n                        }\n                        goto code_r0x0044f8b2;\n                    }\n                    if (uVar8 != 0x75) {\n                        if (uVar8 != 0x78) goto code_r0x0044f8b2;\n                        iStack588 = 0x27;\n                        goto code_r0x0044f767;\n                    }\n                    goto code_r0x0044f5a2;\n                }\n                ppiStack536 = param_3 + 1;\n                if ((uStack532 & 0x20) == 0) {\n                    **param_3 = iStack552;\n                }\n                else {\n                    **param_3 = iStack552;\n                }\n                iStack584 = 1;\n            }\n            if (piStack580 != NULL) {\n                fcn.0044a128(piStack580);\n                piStack580 = NULL;\n            }\n        }\n        uVar8 = *puStack564;\n        iVar5 = iStack596;\n        param_3 = ppiStack536;\n        param_2 = puStack564;\n    } while( true );\n}\n",
        "token_count": 4545
    },
    "00450421": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: lpBuffer\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.00450421(uint32_t arg_8h, char *arg_ch, char *nNumberOfBytesToRead)\n\n{\n    int32_t *piVar1;\n    uint8_t *puVar2;\n    uint8_t uVar3;\n    char cVar4;\n    char *pcVar5;\n    int32_t iVar6;\n    uint *puVar7;\n    char *pcVar8;\n    int32_t iVar9;\n    int32_t lpNumberOfBytesRead;\n    char *var_8h;\n    uint lpBuffer;\n    \n    var_8h = NULL;\n    if (nNumberOfBytesToRead != NULL) {\n        piVar1 = (arg_8h >> 5) * 4 + 0x480a60;\n        iVar9 = (arg_8h & 0x1f) * 0x24;\n        uVar3 = *(*piVar1 + iVar9 + 4);\n        if ((uVar3 & 2) == 0) {\n            pcVar8 = arg_ch;\n            if (((uVar3 & 0x48) != 0) && (*(*piVar1 + iVar9 + 5) != '\\n')) {\n                nNumberOfBytesToRead = nNumberOfBytesToRead + -1;\n                *arg_ch = *(*piVar1 + 5 + iVar9);\n                pcVar8 = arg_ch + 1;\n                var_8h = 0x1;\n                *(*piVar1 + 5 + iVar9) = 10;\n            }\n            iVar6 = (**0x4592c8)(*(*piVar1 + iVar9), pcVar8, nNumberOfBytesToRead, &lpNumberOfBytesRead, 0);\n            if (iVar6 == 0) {\n                iVar9 = (*_sym.imp.KERNEL32.DLL_GetLastError)();\n                if (iVar9 == 5) {\n                    puVar7 = fcn.0044ddb5();\n                    *puVar7 = 9;\n                    puVar7 = fcn.0044ddbe();\n                    *puVar7 = 5;\n                }\n                else {\n                    if (iVar9 == 0x6d) {\n                        return 0;\n                    }\n                    fcn.0044ddc7(iVar9);\n                }\n                return -1;\n            }\n            if ((*(*piVar1 + 4 + iVar9) & 0x80) == 0) {\n                return var_8h + lpNumberOfBytesRead;\n            }\n            if ((lpNumberOfBytesRead == 0) || (*arg_ch != '\\n')) {\n                puVar2 = *piVar1 + 4 + iVar9;\n                *puVar2 = *puVar2 & 0xfb;\n            }\n            else {\n                puVar2 = *piVar1 + 4 + iVar9;\n                *puVar2 = *puVar2 | 4;\n            }\n            var_8h = arg_ch + var_8h + lpNumberOfBytesRead;\n            nNumberOfBytesToRead = arg_ch;\n            pcVar8 = arg_ch;\n            if (arg_ch < var_8h) {\n                do {\n                    cVar4 = *nNumberOfBytesToRead;\n                    if (cVar4 == '\\x1a') {\n                        if ((*(*piVar1 + 4 + iVar9) & 0x40) == 0) {\n                            puVar2 = *piVar1 + 4 + iVar9;\n                            *puVar2 = *puVar2 | 2;\n                        }\n                        break;\n                    }\n                    if (cVar4 == '\\r') {\n                        if (nNumberOfBytesToRead < var_8h + -1) {\n                            if (nNumberOfBytesToRead[1] == '\\n') {\n                                pcVar5 = nNumberOfBytesToRead + 2;\n                                goto code_r0x004505ae;\n                            }\ncode_r0x004505ca:\n                            nNumberOfBytesToRead = nNumberOfBytesToRead + 1;\n                            *pcVar8 = '\\r';\n                        }\n                        else {\n                            pcVar5 = nNumberOfBytesToRead + 1;\n                            iVar6 = (**0x4592c8)(*(*piVar1 + iVar9), &lpBuffer, 1, &lpNumberOfBytesRead, 0);\n                            if (((iVar6 == 0) && (iVar6 = (*_sym.imp.KERNEL32.DLL_GetLastError)(),  iVar6 != 0)) ||\n                               (lpNumberOfBytesRead == 0)) goto code_r0x004505ca;\n                            if ((*(*piVar1 + 4 + iVar9) & 0x48) == 0) {\n                                if ((pcVar8 == arg_ch) && (lpBuffer == '\\n')) goto code_r0x004505ae;\n                                fcn.00455b36(arg_8h, 0xffffffff, 0xffffffff, 1);\n                                if (lpBuffer == '\\n') goto code_r0x004505ce;\n                                goto code_r0x004505ca;\n                            }\n                            if (lpBuffer == '\\n') {\ncode_r0x004505ae:\n                                nNumberOfBytesToRead = pcVar5;\n                                *pcVar8 = '\\n';\n                            }\n                            else {\n                                *pcVar8 = '\\r';\n                                *(*piVar1 + 5 + iVar9) = lpBuffer;\n                                nNumberOfBytesToRead = pcVar5;\n                            }\n                        }\n                        pcVar8 = pcVar8 + 1;\n                        pcVar5 = nNumberOfBytesToRead;\n                    }\n                    else {\n                        *pcVar8 = cVar4;\n                        pcVar8 = pcVar8 + 1;\n                        pcVar5 = nNumberOfBytesToRead + 1;\n                    }\ncode_r0x004505ce:\n                    nNumberOfBytesToRead = pcVar5;\n                } while (nNumberOfBytesToRead < var_8h);\n            }\n            return pcVar8 - arg_ch;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 1315
    },
    "00450a46": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00450a46(void)\n\n{\n    int32_t *piVar1;\n    uint *puVar2;\n    uint *puVar3;\n    uint uVar4;\n    uint *puVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    int32_t iVar8;\n    int32_t *piVar9;\n    uchar auStack68 [46];\n    int16_t iStack22;\n    int32_t *piStack20;\n    \n    puVar3 = fcn.00449f7f(0x480);\n    if (puVar3 == NULL) {\n        uVar4 = 0xffffffff;\n    }\n    else {\n        *0x480a4c = 0x20;\n        *0x480a60 = puVar3;\n        for (; puVar3 < *0x480a60 + 0x120; puVar3 = puVar3 + 9) {\n            *puVar3 = 0xffffffff;\n            puVar3[2] = 0;\n            *(puVar3 + 1) = 0;\n            *(puVar3 + 5) = 10;\n        }\n        (**0x4592a4)(auStack68);\n        if ((iStack22 != 0) && (piStack20 != NULL)) {\n            iVar8 = *piStack20;\n            piStack20 = piStack20 + 1;\n            piVar9 = iVar8 + piStack20;\n            if (0x7ff < iVar8) {\n                iVar8 = 0x800;\n            }\n            iVar6 = iVar8;\n            if (*0x480a4c < iVar8) {\n                puVar3 = 0x480a64;\n                do {\n                    puVar5 = fcn.00449f7f(0x480);\n                    iVar6 = *0x480a4c;\n                    if (puVar5 == NULL) break;\n                    *0x480a4c = *0x480a4c + 0x20;\n                    *puVar3 = puVar5;\n                    puVar2 = puVar5;\n                    for (; puVar5 < puVar2 + 0x120; puVar5 = puVar5 + 9) {\n                        *puVar5 = 0xffffffff;\n                        puVar5[2] = 0;\n                        *(puVar5 + 1) = 0;\n                        *(puVar5 + 5) = 10;\n                        puVar2 = *puVar3;\n                    }\n                    puVar3 = puVar3 + 1;\n                    iVar6 = iVar8;\n                } while (*0x480a4c < iVar8);\n            }\n            uVar7 = 0;\n            if (0 < iVar6) {\n                do {\n                    if (((*piVar9 != -1) && ((*piStack20 & 1) != 0)) &&\n                       (((*piStack20 & 8) != 0 || (iVar8 = (*_sym.imp.KERNEL32.DLL_GetFileType)(*piVar9),  iVar8 != 0)))\n                       ) {\n                        piVar1 = *((uVar7 >> 5) * 4 + 0x480a60) + (uVar7 & 0x1f) * 0x24;\n                        *piVar1 = *piVar9;\n                        *(piVar1 + 1) = *piStack20;\n                        iVar8 = fcn.004548d2(piVar1 + 3, 4000);\n                        if (iVar8 == 0) {\n                            return 0xffffffff;\n                        }\n                        piVar1[2] = piVar1[2] + 1;\n                    }\n                    piVar9 = piVar9 + 1;\n                    uVar7 = uVar7 + 1;\n                    piStack20 = piStack20 + 1;\n                } while (uVar7 < iVar6);\n            }\n        }\n        iVar8 = 0;\n        do {\n            piVar9 = *0x480a60 + iVar8 * 9;\n            if (*piVar9 == -1) {\n                *(piVar9 + 1) = 0x81;\n                if (iVar8 == 0) {\n                    iVar6 = -10;\n                }\n                else {\n                    iVar6 = -0xb - (iVar8 != 1);\n                }\n                iVar6 = (*_sym.imp.KERNEL32.DLL_GetStdHandle)(iVar6);\n                if ((iVar6 == -1) || (uVar7 = (*_sym.imp.KERNEL32.DLL_GetFileType)(iVar6),  uVar7 == 0)) {\n                    *(piVar9 + 1) = *(piVar9 + 1) | 0x40;\n                }\n                else {\n                    *piVar9 = iVar6;\n                    if ((uVar7 & 0xff) == 2) {\n                        *(piVar9 + 1) = *(piVar9 + 1) | 0x40;\n                    }\n                    else if ((uVar7 & 0xff) == 3) {\n                        *(piVar9 + 1) = *(piVar9 + 1) | 8;\n                    }\n                    iVar6 = fcn.004548d2(piVar9 + 3, 4000);\n                    if (iVar6 == 0) {\n                        return 0xffffffff;\n                    }\n                    piVar9[2] = piVar9[2] + 1;\n                }\n            }\n            else {\n                *(piVar9 + 1) = *(piVar9 + 1) | 0x80;\n            }\n            iVar8 = iVar8 + 1;\n        } while (iVar8 < 3);\n        (**0x4592a0)(*0x480a4c);\n        uVar4 = 0;\n    }\n    return uVar4;\n}\n",
        "token_count": 1266
    },
    "00450fbe": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00450fbe(uint arg_8h)\n\n{\n    int32_t *piVar1;\n    uint32_t arg_8h_00;\n    uint uVar2;\n    uint *puVar3;\n    int32_t unaff_EBP;\n    int32_t iVar4;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.0044dc28(0x45b370, 0xc);\n    arg_8h_00 = *(unaff_EBP + 8);\n    if (arg_8h_00 < *0x480a4c) {\n        piVar1 = (arg_8h_00 >> 5) * 4 + 0x480a60;\n        iVar4 = (arg_8h_00 & 0x1f) * 0x24;\n        if ((*(*piVar1 + 4 + iVar4) & 1) != 0) {\n            fcn.00450d80(arg_8h_00);\n            *(unaff_EBP + -4) = 0;\n            if ((*(*piVar1 + 4 + iVar4) & 1) == 0) {\ncode_r0x0045103e:\n                puVar3 = fcn.0044ddb5();\n                *puVar3 = 9;\n                *(unaff_EBP + -0x1c) = 0xffffffff;\n            }\n            else {\n                uVar2 = fcn.00450d3f(arg_8h_00);\n                iVar4 = (*_sym.imp.KERNEL32.DLL_FlushFileBuffers)(uVar2);\n                if (iVar4 == 0) {\n                    uVar2 = (*_sym.imp.KERNEL32.DLL_GetLastError)();\n                    *(unaff_EBP + -0x1c) = uVar2;\n                }\n                else {\n                    *(unaff_EBP + -0x1c) = 0;\n                }\n                if (*(unaff_EBP + -0x1c) != 0) {\n                    puVar3 = fcn.0044ddbe();\n                    *puVar3 = *(unaff_EBP + -0x1c);\n                    goto code_r0x0045103e;\n                }\n            }\n            *(unaff_EBP + -4) = 0xffffffff;\n            fcn.0045105e();\n            goto code_r0x00451074;\n        }\n    }\n    puVar3 = fcn.0044ddb5();\n    *puVar3 = 9;\ncode_r0x00451074:\n    fcn.0044dc63();\n    return;\n}\n",
        "token_count": 589
    },
    "00451a23": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.00451a23(uint arg_8h, uint arg_ch, uint arg_10h, uint noname_3, uint arg_18h, uint noname_5, uint arg_20h)\n\n{\n    int32_t iVar1;\n    uchar auStack144 [64];\n    uint32_t uStack80;\n    uint32_t uStack20;\n    \n    uStack20 = *0x465718 ^ &stack0xfffffffc;\n    iVar1 = fcn.004516b9(arg_8h, &arg_18h, arg_20h);\n    if (iVar1 == 0) {\n        uStack80 = uStack80 & 0xfffffffe;\n        fcn.00451414(auStack144, &arg_20h, arg_8h, arg_ch, &arg_10h, &arg_18h);\n    }\n    iVar1 = fcn.00451905(arg_8h);\n    if ((*0x465fa8 == 0) && (iVar1 != 0)) {\n        fcn.00451932(iVar1, arg_ch, arg_10h, noname_3, 0, 0, arg_18h, noname_5, arg_20h);\n    }\n    else {\n        fcn.004518dd(iVar1);\n        fcn.00451af6(arg_20h, 0xffff);\n    }\n    fcn.0044ce09();\n    return;\n}\n",
        "token_count": 321
    },
    "00451c4e": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00451c4e(void)\n\n{\n    uint unaff_EBX;\n    uint in_stack_fffffd2c;\n    uint in_stack_fffffd30;\n    uint var_2c8h;\n    \n    fcn.0044e150();\n    fcn.00451cda(unaff_EBX, in_stack_fffffd2c, in_stack_fffffd30);\n    return;\n}\n",
        "token_count": 90
    },
    "00452696": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00452696(uint param_1, uint32_t param_2, uint16_t param_3)\n\n{\n    uint in_EAX;\n    int32_t iVar1;\n    float10 fVar2;\n    float10 fVar3;\n    uint in_stack_0000001c;\n    ushort uStack00000020;\n    uint32_t in_stack_00000020;\n    ushort uStack00000022;\n    uint16_t in_stack_00000024;\n    \n    if ((((((CONCAT22(param_3, param_2._2_2_) ^ 0x700) & 0x700) == 0) &&\n         (*(((param_2._2_2_ & 0x7800) >> 0xb) + 0x465adc) != '\\0')) && ((param_3 & 0x7fff) != 0x7fff)) &&\n       ((((in_stack_00000024 & 0x7fff) != 0 && ((in_stack_00000024 & 0x7fff) != 0x7fff)) &&\n        (((in_stack_00000020 & 0x7fffffff) == 0 && ((param_2 & 0x7fffffff) == 0)))))) {\n        if ((param_3 & 0x7fff) + 0x3f < (in_stack_00000024 & 0x7fff)) {\n            iVar1 = ((in_stack_00000024 & 0x7fff) - (param_3 & 0x7fff) & 0x3f | 0x20) + 1;\n            fVar3 = ABS(CONCAT28(in_stack_00000024 & 0x7fff | param_3 & 0x8000, \n                                 CONCAT26(param_2._2_2_, CONCAT24(param_2, param_1))));\n            fVar2 = ABS(CONCAT28(in_stack_00000024, \n                                 CONCAT26(uStack00000022, CONCAT24(uStack00000020, in_stack_0000001c))));\n            do {\n                if (fVar3 <= fVar2) {\n                    fVar2 = fVar2 - fVar3;\n                }\n                fVar3 = fVar3 * *0x465b0c;\n                iVar1 = iVar1 + -1;\n            } while (iVar1 != 0);\n        }\n        else {\n            while (-1 < (in_stack_00000024 & 0x7fff) - ((param_3 & 0x7fff) + 10)) {\n                fVar2 = CONCAT28(in_stack_00000024, \n                                 CONCAT26(uStack00000022, CONCAT24(uStack00000020, in_stack_0000001c)));\n                fVar3 = CONCAT28((in_stack_00000024 & 0x7fff) - ((in_stack_00000024 & 0x7fff) - param_3 & 7 | 4) |\n                                 param_3 & 0x8000, CONCAT26(param_2._2_2_, CONCAT24(param_2, param_1)));\n                fVar2 = fVar2 - (fVar2 / fVar3) * fVar3;\n                in_stack_0000001c = SUB104(fVar2, 0);\n                uStack00000020 = fVar2 >> 0x20;\n                uStack00000022 = fVar2 >> 0x30;\n                in_stack_00000024 = fVar2 >> 0x40;\n            }\n        }\n    }\n    return in_EAX;\n}\n",
        "token_count": 778
    },
    "00452c88": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_28h\n\nvoid fcn.00452c88(void)\n\n{\n    char cVar1;\n    code *pcVar2;\n    uint uVar3;\n    char *pcVar4;\n    int32_t iVar5;\n    int32_t unaff_EBP;\n    char *pcVar6;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.0044dc28(0x45b4e8, 0x18);\n    *(unaff_EBP + -0x20) = 0;\n    fcn.0044cb7b(7);\n    *(unaff_EBP + -4) = 0;\n    uVar3 = *0x4678e4;\n    *(unaff_EBP + -0x28) = *0x4678e4;\n    *0x467654 = 0;\n    *0x465cc4 = 0xffffffff;\n    *0x465cb8 = 0xffffffff;\n    pcVar4 = fcn.00455fc0(0x45b4e0);\n    *(unaff_EBP + -0x24) = pcVar4;\n    if ((pcVar4 == NULL) || (*pcVar4 == '\\0')) {\n        if (*0x467658 != 0) {\n            fcn.0044a128(*0x467658);\n            *0x467658 = 0;\n        }\n        iVar5 = (**0x459330)(0x4675a8);\n        pcVar2 = *0x459198;\n        if (iVar5 != -1) {\n            *0x467654 = 1;\n            *0x465c20 = *0x4675a8 * 0x3c;\n            if (*0x4675ee != 0) {\n                *0x465c20 = *0x465c20 + *0x4675fc * 0x3c;\n            }\n            if ((*0x467642 == 0) || (*0x467650 == 0)) {\n                *0x465c24 = 0;\n                *0x465c28 = 0;\n            }\n            else {\n                *0x465c24 = 1;\n                *0x465c28 = (*0x467650 - *0x4675fc) * 0x3c;\n            }\n            iVar5 = (**0x459198)(uVar3, 0, 0x4675ac, 0xffffffff, *0x465cb0, 0x3f, 0, unaff_EBP + -0x1c);\n            if ((iVar5 == 0) || (*(unaff_EBP + -0x1c) != 0)) {\n                **0x465cb0 = 0;\n            }\n            else {\n                (*0x465cb0)[0x3f] = 0;\n            }\n            iVar5 = (*pcVar2)(uVar3, 0, 0x467600, 0xffffffff, *0x465cb4, 0x3f, 0, unaff_EBP + -0x1c);\n            if ((iVar5 == 0) || (*(unaff_EBP + -0x1c) != 0)) {\n                **0x465cb4 = 0;\n            }\n            else {\n                (*0x465cb4)[0x3f] = 0;\n            }\n        }\n    }\n    else {\n        if (*0x467658 != 0) {\n            iVar5 = fcn.0044a500(pcVar4, *0x467658);\n            if (iVar5 == 0) goto code_r0x00452e8c;\n            if (*0x467658 != 0) {\n                fcn.0044a128(*0x467658);\n            }\n        }\n        iVar5 = fcn.00449fa0(pcVar4);\n        *0x467658 = fcn.00449f7f(iVar5 + 1);\n        if (*0x467658 != 0) {\n            fcn.0044a030(*0x467658, pcVar4);\n            *(unaff_EBP + -4) = 0xffffffff;\n            fcn.00452ea3();\n            fcn.00453f50(*0x465cb0, pcVar4, 3);\n            (*0x465cb0)[3] = 0;\n            pcVar6 = pcVar4 + 3;\n            if (*pcVar6 == '-') {\n                *(unaff_EBP + -0x20) = 1;\n                pcVar6 = pcVar4 + 4;\n            }\n            *0x465c20 = fcn.0044a621(pcVar6);\n            *0x465c20 = *0x465c20 * 0xe10;\n            for (; (cVar1 = *pcVar6,  cVar1 == '+' || (('/' < cVar1 && (cVar1 < ':')))); pcVar6 = pcVar6 + 1) {\n            }\n            if (*pcVar6 == ':') {\n                pcVar6 = pcVar6 + 1;\n                iVar5 = fcn.0044a621(pcVar6);\n                *0x465c20 = *0x465c20 + iVar5 * 0x3c;\n                for (; ('/' < *pcVar6 && (*pcVar6 < ':')); pcVar6 = pcVar6 + 1) {\n                }\n                if (*pcVar6 == ':') {\n                    pcVar6 = pcVar6 + 1;\n                    iVar5 = fcn.0044a621(pcVar6);\n                    *0x465c20 = *0x465c20 + iVar5;\n                    for (; ('/' < *pcVar6 && (*pcVar6 < ':')); pcVar6 = pcVar6 + 1) {\n                    }\n                }\n            }\n            if (*(unaff_EBP + -0x20) != 0) {\n                *0x465c20 = -*0x465c20;\n            }\n            *0x465c24 = *pcVar6;\n            if (*0x465c24 == 0) {\n                **0x465cb4 = 0;\n            }\n            else {\n                fcn.00453f50(*0x465cb4, pcVar6, 3);\n                (*0x465cb4)[3] = 0;\n            }\n            goto code_r0x00452f2a;\n        }\n    }\ncode_r0x00452e8c:\n    fcn.004542b2(unaff_EBP + -0x10, 0xffffffff);\ncode_r0x00452f2a:\n    fcn.0044dc63();\n    return;\n}\n",
        "token_count": 1589
    },
    "00452f30": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl\nfcn.00452f30(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h, int32_t arg_18h, int32_t arg_1ch, \n            int32_t arg_20h, int32_t arg_24h, int32_t arg_28h)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t in_ECX;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar2 = arg_10h % 4;\n    if (arg_ch == 1) {\n        if (((iVar2 == 0) && (arg_10h % 100 != 0)) || ((arg_10h + 0x76c) % 400 == 0)) {\n            iVar4 = *(in_EAX * 4 + 0x465fa8);\n        }\n        else {\n            iVar4 = *(in_EAX * 4 + 0x465fdc);\n        }\n        iVar5 = iVar4 + 1;\n        iVar3 = (arg_10h * 0x16d + -0x63db + (arg_10h + -1) / 4 + iVar5 + ((arg_10h + 299) / 400 - (arg_10h + -1) / 100)\n                ) % 7;\n        iVar1 = (arg_14h * 7 - iVar3) + arg_18h;\n        if (iVar3 <= arg_18h) {\n            iVar5 = iVar4 + -6;\n        }\n        iVar5 = iVar5 + iVar1;\n        if (arg_14h == 5) {\n            if (((iVar2 == 0) && (arg_10h % 100 != 0)) || ((arg_10h + 0x76c) % 400 == 0)) {\n                iVar1 = *(in_EAX * 4 + 0x465fac);\n            }\n            else {\n                iVar1 = *(in_EAX * 4 + 0x465fe0);\n            }\n            if (iVar1 < iVar5) {\n                iVar5 = iVar5 + -7;\n            }\n        }\n    }\n    else {\n        if (((iVar2 == 0) && (iVar1 = arg_10h / 100,  arg_10h % 100 != 0)) ||\n           (iVar1 = (arg_10h + 0x76c) / 400,  (arg_10h + 0x76c) % 400 == 0)) {\n            iVar5 = *(in_EAX * 4 + 0x465fa8);\n        }\n        else {\n            iVar5 = *(in_EAX * 4 + 0x465fdc);\n        }\n        iVar5 = iVar5 + arg_1ch;\n    }\n    iVar2 = (in_ECX * 0x3c + arg_20h) * 0x3c;\n    if (arg_8h == 1) {\n        *0x465cc0 = (iVar2 + arg_24h) * 1000 + arg_28h;\n        *0x465cb8 = arg_10h;\n        *0x465cbc = iVar5;\n    }\n    else {\n        *0x465ccc = (iVar2 + *0x465c28 + arg_24h) * 1000 + arg_28h;\n        if (*0x465ccc < 0) {\n            *0x465ccc = *0x465ccc + 86400000;\n            *0x465cc8 = iVar5 + -1;\n        }\n        else {\n            iVar1 = 86400000;\n            *0x465cc8 = iVar5;\n            if (86399999 < *0x465ccc) {\n                *0x465ccc = *0x465ccc + -86400000;\n                *0x465cc8 = iVar5 + 1;\n            }\n        }\n        *0x465cc4 = arg_10h;\n    }\n    return iVar1;\n}\n",
        "token_count": 927
    },
    "004532f9": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t * fcn.004532f9(int32_t *param_1)\n\n{\n    bool bVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    \n    iVar6 = *param_1;\n    bVar1 = false;\n    iVar2 = fcn.0044c752();\n    if (iVar6 < 0) {\n        return NULL;\n    }\n    if (*(iVar2 + 0x44) == 0) {\n        iVar3 = fcn.00449f7f(0x24);\n        *(iVar2 + 0x44) = iVar3;\n        piVar4 = 0x467660;\n        if (iVar3 == 0) goto code_r0x00453333;\n    }\n    piVar4 = *(iVar2 + 0x44);\ncode_r0x00453333:\n    iVar5 = iVar6 % 0x7861f80;\n    iVar6 = (iVar6 / 0x7861f80) * 4;\n    iVar2 = iVar6 + 0x46;\n    iVar3 = iVar5;\n    if (0x1e1337f < iVar5) {\n        iVar3 = iVar5 + -0x1e13380;\n        iVar2 = iVar6 + 0x47;\n        if (0x1e1337f < iVar3) {\n            iVar3 = iVar5 + -0x3c26700;\n            iVar2 = iVar6 + 0x48;\n            if (iVar3 < 0x1e28500) {\n                bVar1 = true;\n            }\n            else {\n                iVar2 = iVar6 + 0x49;\n                iVar3 = iVar5 + -0x5a4ec00;\n            }\n        }\n    }\n    piVar4[5] = iVar2;\n    iVar6 = 0x465fac;\n    piVar4[7] = iVar3 / 0x15180;\n    if (!bVar1) {\n        iVar6 = 0x465fe0;\n    }\n    iVar5 = 1;\n    iVar2 = *(iVar6 + 4);\n    while (iVar2 < piVar4[7]) {\n        iVar5 = iVar5 + 1;\n        iVar2 = *(iVar6 + iVar5 * 4);\n    }\n    piVar4[4] = iVar5 + -1;\n    piVar4[3] = piVar4[7] - *(iVar6 + (iVar5 + -1) * 4);\n    piVar4[6] = (*param_1 / 0x15180 + 4) % 7;\n    piVar4[2] = (iVar3 % 0x15180) / 0xe10;\n    iVar6 = (iVar3 % 0x15180) % 0xe10;\n    piVar4[1] = iVar6 / 0x3c;\n    piVar4[8] = 0;\n    *piVar4 = iVar6 % 0x3c;\n    return piVar4;\n}\n",
        "token_count": 688
    },
    "00453829": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00453829(int16_t *arg_8h, int16_t **arg_ch, int32_t *arg_10h, int32_t *arg_14h)\n\n{\n    bool bVar1;\n    bool bVar2;\n    int16_t *in_EAX;\n    int16_t *piVar3;\n    int16_t iVar4;\n    uint32_t uVar5;\n    \n    bVar1 = false;\n    *arg_14h = 0;\n    *arg_10h = 1;\n    if (arg_ch != NULL) {\n        *arg_ch = in_EAX;\n        arg_ch = arg_ch + 1;\n    }\n    do {\n        if (*arg_8h == 0x22) {\n            bVar1 = !bVar1;\n            iVar4 = 0x22;\n        }\n        else {\n            *arg_14h = *arg_14h + 1;\n            if (in_EAX != NULL) {\n                *in_EAX = *arg_8h;\n                in_EAX = in_EAX + 1;\n            }\n            iVar4 = *arg_8h;\n            if (iVar4 == 0) goto code_r0x0045389f;\n        }\n        arg_8h = arg_8h + 1;\n    } while ((bVar1) || ((iVar4 != 0x20 && (iVar4 != 9))));\n    if (in_EAX != NULL) {\n        in_EAX[-1] = 0;\n    }\ncode_r0x0045389f:\n    bVar1 = false;\n    while (*arg_8h != 0) {\n        for (; (*arg_8h == 0x20 || (*arg_8h == 9)); arg_8h = arg_8h + 1) {\n        }\n        if (*arg_8h == 0) break;\n        if (arg_ch != NULL) {\n            *arg_ch = in_EAX;\n            arg_ch = arg_ch + 1;\n        }\n        *arg_10h = *arg_10h + 1;\n        while( true ) {\n            bVar2 = true;\n            uVar5 = 0;\n            for (; *arg_8h == 0x5c; arg_8h = arg_8h + 1) {\n                uVar5 = uVar5 + 1;\n            }\n            if (*arg_8h == 0x22) {\n                piVar3 = arg_8h;\n                if ((uVar5 & 1) == 0) {\n                    if ((!bVar1) || (piVar3 = arg_8h + 1,  *piVar3 != 0x22)) {\n                        bVar2 = false;\n                        piVar3 = arg_8h;\n                    }\n                    bVar1 = !bVar1;\n                }\n                uVar5 = uVar5 >> 1;\n                arg_8h = piVar3;\n            }\n            for (; uVar5 != 0; uVar5 = uVar5 - 1) {\n                if (in_EAX != NULL) {\n                    *in_EAX = 0x5c;\n                    in_EAX = in_EAX + 1;\n                }\n                *arg_14h = *arg_14h + 1;\n            }\n            iVar4 = *arg_8h;\n            if ((iVar4 == 0) || ((!bVar1 && ((iVar4 == 0x20 || (iVar4 == 9)))))) break;\n            if (bVar2) {\n                if (in_EAX != NULL) {\n                    *in_EAX = iVar4;\n                    in_EAX = in_EAX + 1;\n                }\n                *arg_14h = *arg_14h + 1;\n            }\n            arg_8h = arg_8h + 1;\n        }\n        if (in_EAX != NULL) {\n            *in_EAX = 0;\n            in_EAX = in_EAX + 1;\n        }\n        *arg_14h = *arg_14h + 1;\n    }\n    if (arg_ch != NULL) {\n        *arg_ch = NULL;\n    }\n    *arg_10h = *arg_10h + 1;\n    return;\n}\n",
        "token_count": 935
    },
    "00454074": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n// WARNING: Variable defined which should be unmapped: var_28h_2\n// WARNING: Variable defined which should be unmapped: var_24h_2\n// WARNING: Variable defined which should be unmapped: var_20h_2\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: lpCharType\n// WARNING: Variable defined which should be unmapped: var_38h\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_20h\n\nvoid __cdecl\nfcn.00454074(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint arg_20h_2, \n            uint noname_7, uint arg_8h, uint lpMultiByteStr, uint cbMultiByte, uint arg_14h, uint CodePage, uint arg_1ch\n            , uint arg_20h)\n\n{\n    int32_t iVar1;\n    uint *arg_8h_00;\n    uint uVar2;\n    int32_t noname_1_00;\n    int32_t unaff_EBP;\n    int32_t iVar3;\n    int32_t noname_0_00;\n    uint unaff_retaddr;\n    uint dwInfoType;\n    uint var_ch;\n    uint var_10h;\n    uint var_14h;\n    uint var_18h_2;\n    uint var_4h;\n    uint var_2ch;\n    uint var_28h_2;\n    uint var_24h_2;\n    uint var_20h_2;\n    int32_t lpCharType;\n    int32_t var_38h;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    \n    fcn.0044dc28();\n    iVar3 = 0;\n    if (*0x4678ec == 0) {\n        var_38h = 0x45409e;\n        iVar1 = (**0x459360)();\n        if (iVar1 == 0) {\n            iVar1 = (*_sym.imp.KERNEL32.DLL_GetLastError)();\n            if (iVar1 == 0x78) {\n                *0x4678ec = 2;\n            }\n        }\n        else {\n            *0x4678ec = 1;\n        }\n    }\n    if ((*0x4678ec == 2) || (*0x4678ec == 0)) {\n        iVar1 = *(unaff_EBP + 0x1c);\n        if (*(unaff_EBP + 0x1c) == 0) {\n            iVar1 = *0x4678d4;\n        }\n        noname_0_00 = *(unaff_EBP + 0x18);\n        if (*(unaff_EBP + 0x18) == 0) {\n            noname_0_00 = *0x4678e4;\n        }\n        noname_1_00 = fcn.00455d9f(iVar1);\n        if (noname_1_00 != -1) {\n            if (noname_1_00 != noname_0_00) {\n                lpCharType = noname_0_00;\n                var_38h = noname_1_00;\n                iVar3 = fcn.00455de6(noname_0_00, noname_1_00, *(unaff_EBP + 0xc), unaff_EBP + 0x10, 0, 0, 0x45ba48, \n                                     0x1c, unaff_retaddr);\n                if (iVar3 == 0) goto code_r0x00454225;\n                *(unaff_EBP + 0xc) = iVar3;\n            }\n            lpCharType = 0x454216;\n            var_38h = iVar1;\n            (**0x45935c)();\n            if (iVar3 != 0) {\n                lpCharType = iVar3;\n                fcn.0044a128(iVar3);\n            }\n        }\n    }\n    else if (*0x4678ec == 1) {\n        *(unaff_EBP + -0x24) = 0;\n        *(unaff_EBP + -0x20) = 0;\n        if (*(unaff_EBP + 0x18) == 0) {\n            *(unaff_EBP + 0x18) = *0x4678e4;\n        }\n        var_38h = (*(unaff_EBP + 0x20) != 0) * 8 + 1;\n        lpCharType = *(unaff_EBP + 0x18);\n        arg_8h_00 = &fcn.00454074::lpCharType;\n        iVar3 = (*_sym.imp.KERNEL32.DLL_MultiByteToWideChar)();\n        *(unaff_EBP + -0x28) = iVar3;\n        if (iVar3 != 0) {\n            *(unaff_EBP + -4) = 0;\n            fcn.0044c510();\n            *(unaff_EBP + -0x18) = &fcn.00454074::lpCharType;\n            *(unaff_EBP + -0x2c) = &fcn.00454074::lpCharType;\n            fcn.00449b00(&fcn.00454074::lpCharType, 0, iVar3 * 2);\n            *(unaff_EBP + -4) = 0xffffffff;\n            if (*0x10 == 0x20) {\n                arg_8h_00 = fcn.0045096f(2, iVar3);\n                if (arg_8h_00 == NULL) goto code_r0x00454225;\n                *(unaff_EBP + -0x20) = 1;\n            }\n            iVar3 = (*_sym.imp.KERNEL32.DLL_MultiByteToWideChar)\n                              (*(unaff_EBP + 0x18), 1, *(unaff_EBP + 0xc), *(unaff_EBP + 0x10), arg_8h_00, iVar3);\n            if (iVar3 != 0) {\n                uVar2 = (**0x459360)(*(unaff_EBP + 8), arg_8h_00, iVar3, *(unaff_EBP + 0x14));\n                *(unaff_EBP + -0x24) = uVar2;\n            }\n            if (*(unaff_EBP + -0x20) != 0) {\n                fcn.0044a128(arg_8h_00);\n            }\n        }\n    }\ncode_r0x00454225:\n    *(unaff_EBP + -0x3c) = 0x45422d;\n    fcn.0044dc63();\n    return;\n}\n",
        "token_count": 1546
    },
    "004545c0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004545c0(int32_t arg_8h)\n\n{\n    uint8_t uVar1;\n    uint8_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t extraout_ECX;\n    uint extraout_ECX_00;\n    int32_t iVar5;\n    uint8_t *puVar6;\n    uint8_t *puVar7;\n    uint *puVar8;\n    uint32_t var_1ch;\n    uint32_t lpCPInfo;\n    uint var_12h;\n    uint32_t var_4h;\n    \n    var_4h = *0x465718 ^ &stack0xfffffffc;\n    if (arg_8h != 0) {\n        iVar5 = 0;\n        uVar3 = 0;\ncode_r0x004545e4:\n        if (*(uVar3 + 0x465e98) != arg_8h) goto code_r0x004545ec;\n        puVar8 = 0x480820;\n        for (iVar4 = 0x40; iVar4 != 0; iVar4 = iVar4 + -1) {\n            *puVar8 = 0;\n            puVar8 = puVar8 + 1;\n        }\n        var_1ch = 0;\n        *puVar8 = 0;\n        puVar6 = iVar5 * 0x30 + 0x465ea8;\n        do {\n            uVar2 = *puVar6;\n            puVar7 = puVar6;\n            while ((uVar2 != 0 && (uVar1 = puVar7[1],  uVar1 != 0))) {\n                uVar3 = uVar2;\n                if (uVar3 <= uVar1) {\n                    uVar2 = *(var_1ch + 0x465e90);\n                    do {\n                        *(uVar3 + 0x480821) = *(uVar3 + 0x480821) | uVar2;\n                        uVar3 = uVar3 + 1;\n                    } while (uVar3 <= uVar1);\n                }\n                puVar7 = puVar7 + 2;\n                uVar2 = *puVar7;\n            }\n            var_1ch = var_1ch + 1;\n            puVar6 = puVar6 + 8;\n        } while (var_1ch < 4);\n        *0x480924 = arg_8h;\n        *0x48081c = 1;\n        *0x480814 = fcn.0045435e();\n        *0x480930 = *(extraout_ECX + 0x465e9c);\n        *0x480934 = *(extraout_ECX + 0x465ea0);\n        *0x480938 = *(extraout_ECX + 0x465ea4);\n        goto code_r0x00454739;\n    }\ncode_r0x00454734:\n    fcn.0045438d();\ncode_r0x00454739:\n    fcn.004543b6();\ncode_r0x00454745:\n    fcn.0044ce09();\n    return;\ncode_r0x004545ec:\n    uVar3 = uVar3 + 0x30;\n    iVar5 = iVar5 + 1;\n    if (0xef < uVar3) goto code_r0x004545f7;\n    goto code_r0x004545e4;\ncode_r0x004545f7:\n    iVar5 = (**0x459354)(arg_8h, &lpCPInfo);\n    if (iVar5 != 1) {\n        if (*0x467914 == 0) goto code_r0x00454745;\n        goto code_r0x00454734;\n    }\n    puVar8 = 0x480820;\n    for (iVar5 = 0x40; iVar5 != 0; iVar5 = iVar5 + -1) {\n        *puVar8 = 0;\n        puVar8 = puVar8 + 1;\n    }\n    *puVar8 = 0;\n    *0x480924 = arg_8h;\n    *0x480814 = 0;\n    if (lpCPInfo < 2) {\n        *0x48081c = 0;\n    }\n    else {\n        if (var_12h != '\\0') {\n            puVar6 = &var_12h + 1;\n            do {\n                uVar2 = *puVar6;\n                if (uVar2 == 0) break;\n                for (uVar3 = puVar6[-1]; uVar3 <= uVar2; uVar3 = uVar3 + 1) {\n                    *(uVar3 + 0x480821) = *(uVar3 + 0x480821) | 4;\n                }\n                puVar7 = puVar6 + 1;\n                puVar6 = puVar6 + 2;\n            } while (*puVar7 != 0);\n        }\n        uVar3 = 1;\n        do {\n            *(uVar3 + 0x480821) = *(uVar3 + 0x480821) | 8;\n            uVar3 = uVar3 + 1;\n        } while (uVar3 < 0xff);\n        *0x480814 = fcn.0045435e();\n        *0x48081c = extraout_ECX_00;\n    }\n    *0x480930 = 0;\n    *0x480934 = 0;\n    *0x480938 = 0;\n    goto code_r0x00454739;\n}\n",
        "token_count": 1233
    },
    "00454ba6": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n// WARNING: Variable defined which should be unmapped: var_2ch_2\n// WARNING: Variable defined which should be unmapped: var_28h_2\n\nvoid __cdecl\nfcn.00454ba6(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, uint noname_13\n            , uint noname_14, uint noname_15, uint noname_16, uint noname_17, uint noname_18, uint lpWideCharStr, \n            uint arg_10h, uint noname_21, uint CodePage, uint arg_1ch)\n\n{\n    int16_t *piVar1;\n    int32_t arg_10h_00;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t unaff_EBP;\n    uint dwInfoType;\n    uint lpSrcStr;\n    uint cchSrc;\n    uint var_14h;\n    uint var_30h;\n    uint Locale;\n    uint var_28h;\n    uint var_ch;\n    uint var_18h;\n    uint var_18h_2;\n    uint var_4h;\n    uint uStack72;\n    uint uStack68;\n    uint uStack64;\n    uint uStack60;\n    uint var_34h_2;\n    uchar *var_30h_3;\n    uint var_2ch_2;\n    int32_t var_28h_2;\n    uint var_24h_2;\n    uint var_40h;\n    uint lpCharType;\n    uint uStack28;\n    uint var_34h;\n    uint var_30h_2;\n    uint uStack16;\n    uint var_24h;\n    \n    fcn.0044dc28();\n    if (*0x467920 == 0) {\n        uStack16 = 1;\n        var_30h_2 = 0x462068;\n        var_34h = 1;\n        uStack28 = 0x454bd0;\n        iVar2 = (**0x459360)();\n        if (iVar2 == 0) {\n            iVar2 = (*_sym.imp.KERNEL32.DLL_GetLastError)();\n            if (iVar2 == 0x78) {\n                *0x467920 = 2;\n            }\n        }\n        else {\n            *0x467920 = 1;\n        }\n    }\n    if (*0x467920 == 1) {\n        uStack16 = *(unaff_EBP + 0x10);\n        var_30h_2 = *(unaff_EBP + 0xc);\n        var_34h = *(unaff_EBP + 8);\n        uStack28 = 0x454c0c;\n        (**0x459360)();\n        goto code_r0x00454dc2;\n    }\n    if ((*0x467920 != 2) && (*0x467920 != 0)) goto code_r0x00454dc2;\n    *(unaff_EBP + -0x30) = 0;\n    *(unaff_EBP + -0x2c) = 0;\n    if (*(unaff_EBP + 0x1c) == 0) {\n        *(unaff_EBP + 0x1c) = *0x4678d4;\n    }\n    if (*(unaff_EBP + 0x18) == 0) {\n        *(unaff_EBP + 0x18) = *0x4678e4;\n    }\n    uStack16 = 0x454c42;\n    iVar2 = fcn.00455d9f(*(unaff_EBP + 0x1c));\n    if ((*(unaff_EBP + 0x18) != iVar2) && (iVar2 != -1)) {\n        *(unaff_EBP + 0x18) = iVar2;\n    }\n    uStack16 = 0;\n    var_30h_2 = 0;\n    var_34h = 0;\n    uStack28 = *(unaff_EBP + 0x10);\n    lpCharType = *(unaff_EBP + 0xc);\n    var_40h = 0;\n    var_24h_2 = *(unaff_EBP + 0x18);\n    var_28h_2 = 0x454c64;\n    iVar2 = (**0x459198)();\n    *(unaff_EBP + -0x28) = iVar2;\n    if (iVar2 == 0) goto code_r0x00454dc2;\n    *(unaff_EBP + -4) = 0;\n    var_28h_2 = 0x454c84;\n    fcn.0044c510();\n    *(unaff_EBP + -0x18) = &fcn.00454ba6::var_24h_2;\n    *(unaff_EBP + -0x24) = &fcn.00454ba6::var_24h_2;\n    var_2ch_2 = 0;\n    var_34h_2 = 0x454c94;\n    var_30h_3 = &fcn.00454ba6::var_24h_2;\n    var_28h_2 = iVar2;\n    fcn.00449b00();\n    *(unaff_EBP + -4) = 0xffffffff;\n    if (*(unaff_EBP + -0x24) == 0) {\n        var_2ch_2 = 1;\n        var_30h_3 = 0x454cc5;\n        var_28h_2 = iVar2;\n        iVar3 = fcn.0045096f(1, iVar2);\n        *(unaff_EBP + -0x24) = iVar3;\n        if (iVar3 == 0) goto code_r0x00454dc2;\n        *(unaff_EBP + -0x30) = 1;\n    }\n    var_28h_2 = 0;\n    var_2ch_2 = 0;\n    var_34h_2 = *(unaff_EBP + -0x24);\n    uStack60 = *(unaff_EBP + 0x10);\n    uStack64 = *(unaff_EBP + 0xc);\n    uStack68 = 0;\n    uStack72 = *(unaff_EBP + 0x18);\n    var_30h_3 = iVar2;\n    iVar3 = (**0x459198)();\n    if (iVar3 != 0) {\n        *(unaff_EBP + -4) = 1;\n        fcn.0044c510();\n        *(unaff_EBP + -0x18) = &stack0xffffffb8;\n        *(unaff_EBP + -0x20) = &stack0xffffffb8;\n        *(unaff_EBP + -4) = 0xffffffff;\n        if (*(unaff_EBP + -0x20) == 0) {\n            iVar3 = fcn.00449f7f(iVar2 * 2 + 2);\n            *(unaff_EBP + -0x20) = iVar3;\n            if (iVar3 == 0) goto code_r0x00454db1;\n            *(unaff_EBP + -0x2c) = 1;\n        }\n        if (*(unaff_EBP + 0x1c) == 0) {\n            *(unaff_EBP + 0x1c) = *0x4678d4;\n        }\n        arg_10h_00 = *(unaff_EBP + 0x10) * 2;\n        iVar3 = *(unaff_EBP + -0x20);\n        piVar1 = arg_10h_00 + iVar3;\n        *piVar1 = -1;\n        piVar1[-1] = -1;\n        uVar4 = (**0x45935c)(*(unaff_EBP + 0x1c), *(unaff_EBP + 8), *(unaff_EBP + -0x24), iVar2, iVar3);\n        *(unaff_EBP + -0x34) = uVar4;\n        if ((piVar1[-1] == -1) || (*piVar1 != -1)) {\n            *(unaff_EBP + -0x34) = 0;\n        }\n        else {\n            fcn.0044af60(*(unaff_EBP + 0x14), *(unaff_EBP + -0x20), arg_10h_00);\n        }\n        if (*(unaff_EBP + -0x2c) != 0) {\n            fcn.0044a128(*(unaff_EBP + -0x20));\n        }\n    }\ncode_r0x00454db1:\n    if (*(unaff_EBP + -0x30) != 0) {\n        fcn.0044a128(*(unaff_EBP + -0x24));\n    }\ncode_r0x00454dc2:\n    *(unaff_EBP + -0x44) = 0x454dca;\n    fcn.0044dc63();\n    return;\n}\n",
        "token_count": 2062
    },
    "00454f24": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00454f24(uint32_t *arg_8h)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    code *pcVar3;\n    uint32_t *puVar4;\n    uint32_t *puVar5;\n    int32_t *piVar6;\n    int32_t iVar7;\n    uint32_t *puVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    int32_t iVar11;\n    int32_t iVar12;\n    int32_t in_FS_OFFSET;\n    uint lpBuffer;\n    int16_t *var_1ch;\n    uint var_ch;\n    int32_t var_8h;\n    uint32_t *var_4h;\n    \n    puVar4 = arg_8h;\n    pcVar3 = *0x459378;\n    puVar8 = arg_8h[2];\n    if ((puVar8 & 3) != 0) {\n        return 0;\n    }\n    var_4h = *(*(in_FS_OFFSET + 0x18) + 8);\n    if ((var_4h <= puVar8) && (puVar8 < *(*(in_FS_OFFSET + 0x18) + 4))) {\n        return 0;\n    }\n    puVar1 = arg_8h + 3;\n    if (*puVar1 == 0xffffffff) {\n        return 1;\n    }\n    uVar10 = 0;\n    arg_8h = NULL;\n    puVar5 = puVar8;\n    do {\n        if ((*puVar5 != 0xffffffff) && (uVar10 <= *puVar5)) {\n            return 0;\n        }\n        if (puVar5[1] != 0) {\n            arg_8h = arg_8h + 1;\n        }\n        uVar10 = uVar10 + 1;\n        puVar5 = puVar5 + 3;\n    } while (uVar10 <= *puVar1);\n    if ((arg_8h != NULL) && ((puVar1 = puVar4[-2],  puVar1 < var_4h || (puVar4 <= puVar1)))) {\n        return 0;\n    }\n    uVar10 = puVar8 & 0xfffff000;\n    iVar12 = 0;\n    if (0 < *0x467928) {\n        do {\n            if (*(iVar12 * 4 + 0x467930) == uVar10) {\n                if (iVar12 < 1) {\n                    return 1;\n                }\n                iVar7 = (**0x459378)(0x467970, 1);\n                if (iVar7 != 0) {\n                    return 1;\n                }\n                if (*(iVar12 * 4 + 0x467930) == uVar10) goto code_r0x0045511f;\n                iVar12 = *0x467928 + -1;\n                if (iVar12 < 0) goto code_r0x0045510d;\n                goto code_r0x004550fd;\n            }\n            iVar12 = iVar12 + 1;\n        } while (iVar12 < *0x467928);\n    }\n    iVar12 = (**0x45928c)(puVar8, &lpBuffer, 0x1c);\n    if (iVar12 == 0) {\n        return 0xffffffff;\n    }\n    if (var_8h != 0x1000000) {\n        return 0xffffffff;\n    }\n    if ((var_ch & 0xcc) != 0) {\n        if (((*var_1ch != 0x5a4d) || (piVar6 = *(var_1ch + 0x1e) + var_1ch,  *piVar6 != 0x4550)) ||\n           (*(piVar6 + 6) != 0x10b)) {\n            return 0xffffffff;\n        }\n        uVar9 = *(piVar6 + 5);\n        if (*(piVar6 + 6) == 0) {\n            return 0xffffffff;\n        }\n        uVar2 = *(piVar6 + uVar9 + 0x24);\n        if (((uVar2 <= puVar8 - var_1ch) && (puVar8 - var_1ch < *(piVar6 + uVar9 + 0x20) + uVar2)) &&\n           ((*(piVar6 + uVar9 + 0x3f) & 0x80) != 0)) {\n            return 0;\n        }\n    }\n    iVar7 = (**0x459378)(0x467970, 1);\n    iVar12 = *0x467928;\n    if (iVar7 != 0) {\n        return 1;\n    }\n    iVar7 = *0x467928;\n    if (0 < *0x467928) {\n        puVar8 = *0x467928 * 4 + 0x46792c;\n        do {\n            if (*puVar8 == uVar10) break;\n            iVar7 = iVar7 + -1;\n            puVar8 = puVar8 + -1;\n        } while (0 < iVar7);\n    }\n    if (iVar7 == 0) {\n        iVar7 = 0xf;\n        if (*0x467928 < 0x10) {\n            iVar7 = *0x467928;\n        }\n        iVar11 = 0;\n        if (-1 < iVar7) {\n            do {\n                puVar8 = iVar11 * 4 + 0x467930;\n                uVar9 = *puVar8;\n                iVar11 = iVar11 + 1;\n                *puVar8 = uVar10;\n                uVar10 = uVar9;\n            } while (iVar11 <= iVar7);\n        }\n        if (iVar12 < 0x10) {\n            *0x467928 = iVar12 + 1;\n        }\n    }\n    (**0x459378)(0x467970, 0);\n    return 1;\n    while (iVar12 = iVar12 + -1,  -1 < iVar12) {\ncode_r0x004550fd:\n        if (*(iVar12 * 4 + 0x467930) == uVar10) break;\n    }\n    if (iVar12 < 0) {\ncode_r0x0045510d:\n        if (*0x467928 < 0x10) {\n            *0x467928 = *0x467928 + 1;\n        }\n        iVar12 = *0x467928 + -1;\n    }\n    else if (iVar12 == 0) goto code_r0x00455137;\ncode_r0x0045511f:\n    iVar7 = 0;\n    if (-1 < iVar12) {\n        do {\n            puVar8 = iVar7 * 4 + 0x467930;\n            uVar9 = *puVar8;\n            iVar7 = iVar7 + 1;\n            *puVar8 = uVar10;\n            uVar10 = uVar9;\n        } while (iVar7 <= iVar12);\n    }\ncode_r0x00455137:\n    (*pcVar3)(0x467970, 0);\n    return 1;\n}\n",
        "token_count": 1586
    },
    "0045528f": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045528f(int32_t arg_8h, int32_t *arg_ch, uint arg_10h)\n\n{\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    if (arg_8h != 0) {\n        fcn.00456c3a(&var_8h, arg_10h);\n        *arg_ch = var_8h;\n        arg_ch[1] = var_4h;\n        return;\n    }\n    fcn.00456c7f(&arg_8h, arg_10h);\n    *arg_ch = arg_8h;\n    return;\n}\n",
        "token_count": 145
    },
    "004552ea": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004552ea(int32_t arg_8h, int32_t arg_ch, uint arg_10h)\n\n{\n    int32_t *in_EAX;\n    uchar *puVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uchar *unaff_EBX;\n    \n    if (arg_10h != '\\0') {\n        fcn.004552cd();\n    }\n    if (*in_EAX == 0x2d) {\n        *unaff_EBX = 0x2d;\n        unaff_EBX = unaff_EBX + 1;\n    }\n    puVar1 = unaff_EBX;\n    if (0 < arg_8h) {\n        puVar1 = unaff_EBX + 1;\n        *unaff_EBX = *puVar1;\n        *puVar1 = *0x465e74;\n    }\n    puVar1 = fcn.0044a030(puVar1 + arg_8h + (arg_10h == '\\0'), 0x45bc78);\n    if (arg_ch != 0) {\n        *puVar1 = 0x45;\n    }\n    if (*in_EAX[3] != '0') {\n        iVar2 = in_EAX[1] + -1;\n        if (iVar2 < 0) {\n            iVar2 = -iVar2;\n            puVar1[1] = 0x2d;\n        }\n        if (99 < iVar2) {\n            iVar3 = iVar2 / 100;\n            iVar2 = iVar2 % 100;\n            puVar1[2] = puVar1[2] + iVar3;\n        }\n        if (9 < iVar2) {\n            iVar3 = iVar2 / 10;\n            iVar2 = iVar2 % 10;\n            puVar1[3] = puVar1[3] + iVar3;\n        }\n        puVar1[4] = puVar1[4] + iVar2;\n    }\n    return;\n}\n",
        "token_count": 441
    },
    "00455408": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuchar * __cdecl fcn.00455408(uchar *arg_8h, int32_t arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *in_EAX;\n    uchar *puVar3;\n    \n    iVar1 = in_EAX[1];\n    if ((arg_10h != '\\0') && (iVar1 + -1 == arg_ch)) {\n        iVar2 = *in_EAX;\n        arg_8h[(iVar2 == 0x2d) + iVar1 + -1] = 0x30;\n        (arg_8h + (iVar2 == 0x2d) + iVar1 + -1)[1] = 0;\n    }\n    puVar3 = arg_8h;\n    if (*in_EAX == 0x2d) {\n        *arg_8h = 0x2d;\n        puVar3 = arg_8h + 1;\n    }\n    if (in_EAX[1] < 1) {\n        fcn.004552cd();\n        *puVar3 = 0x30;\n        puVar3 = puVar3 + 1;\n    }\n    else {\n        puVar3 = puVar3 + in_EAX[1];\n    }\n    if (0 < arg_ch) {\n        fcn.004552cd();\n        *puVar3 = *0x465e74;\n        iVar1 = in_EAX[1];\n        if (iVar1 < 0) {\n            if ((arg_10h != '\\0') || (SBORROW4(arg_ch, -iVar1) == arg_ch + iVar1 < 0)) {\n                arg_ch = -iVar1;\n            }\n            fcn.004552cd();\n            fcn.00449b00(puVar3 + 1, 0x30, arg_ch);\n        }\n    }\n    return arg_8h;\n}\n",
        "token_count": 423
    },
    "00455676": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00455676(int32_t arg_8h, int32_t *arg_ch, uint16_t *arg_10h)\n\n{\n    int32_t iVar1;\n    uint arg_8h_00;\n    uint32_t uStack148;\n    uchar auStack144 [48];\n    ulong uStack96;\n    uint32_t uStack80;\n    uint32_t uStack20;\n    \n    uStack20 = *0x465718 ^ &stack0xfffffffc;\n    uStack148 = *arg_10h;\n    iVar1 = *arg_ch;\n    if (iVar1 == 1) {\ncode_r0x004556d0:\n        arg_8h_00 = 8;\ncode_r0x004556d2:\n        iVar1 = fcn.004516b9(arg_8h_00, arg_ch + 6, uStack148);\n        if (iVar1 == 0) {\n            if (((arg_8h == 0x10) || (arg_8h == 0x16)) || (arg_8h == 0x1d)) {\n                uStack96 = *(arg_ch + 4);\n                uStack80 = uStack80 & 0xffffffe3 | 3;\n            }\n            else {\n                uStack80 = uStack80 & 0xfffffffe;\n            }\n            fcn.00451414(auStack144, &uStack148, arg_8h_00, arg_8h, arg_ch + 2, arg_ch + 6);\n        }\n    }\n    else {\n        if (iVar1 == 2) {\n            arg_8h_00 = 4;\n            goto code_r0x004556d2;\n        }\n        if (iVar1 == 3) {\n            arg_8h_00 = 0x11;\n            goto code_r0x004556d2;\n        }\n        if (iVar1 == 4) {\n            arg_8h_00 = 0x12;\n            goto code_r0x004556d2;\n        }\n        if (iVar1 == 5) goto code_r0x004556d0;\n        if (iVar1 == 7) {\n            *arg_ch = 1;\n        }\n        else if (iVar1 == 8) {\n            arg_8h_00 = 0x10;\n            goto code_r0x004556d2;\n        }\n    }\n    fcn.00451af6(uStack148, 0xffff);\n    if ((*arg_ch != 8) && (*0x465fa8 == 0)) {\n        iVar1 = fcn.004018da(arg_ch);\n        if (iVar1 != 0) goto code_r0x0045575d;\n    }\n    fcn.004518dd(*arg_ch);\ncode_r0x0045575d:\n    fcn.0044ce09();\n    return;\n}\n",
        "token_count": 629
    },
    "004557f9": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.004557f9(uint *arg_8h, uint32_t *arg_ch, uint lpFileName, uint32_t arg_14h, uint arg_18h)\n\n{\n    int32_t *piVar1;\n    uint8_t *puVar2;\n    uint8_t uVar3;\n    uint32_t uVar4;\n    uint *puVar5;\n    uint32_t arg_8h_00;\n    int32_t iVar6;\n    int32_t iVar7;\n    uint uVar8;\n    int32_t *piVar9;\n    int32_t in_ECX;\n    bool bVar10;\n    uint lpSecurityAttributes;\n    uint var_1ch;\n    uint32_t var_18h;\n    uint var_14h;\n    uint32_t dwDesiredAccess;\n    uint dwCreationDisposition;\n    uint32_t dwShareMode;\n    uint var_1h;\n    \n    bVar10 = -1 < arg_14h;\n    lpSecurityAttributes = 0xc;\n    var_1ch = 0;\n    if (bVar10) {\n        var_1h._0_1_ = 0;\n    }\n    else {\n        var_1h._0_1_ = 0x10;\n    }\n    var_18h = bVar10;\n    if (((arg_14h & 0x8000) == 0) && (((arg_14h & 0x4000) != 0 || (*0x467998 != 0x8000)))) {\n        var_1h._0_1_ = var_1h | 0x80;\n    }\n    uVar4 = arg_14h & 3;\n    if (uVar4 == 0) {\n        dwDesiredAccess = 0x80000000;\n    }\n    else if (uVar4 == 1) {\n        dwDesiredAccess = 0x40000000;\n    }\n    else {\n        if (uVar4 != 2) goto code_r0x00455880;\n        dwDesiredAccess = 0xc0000000;\n    }\n    if (in_ECX == 0x10) {\n        dwShareMode = 0;\n    }\n    else if (in_ECX == 0x20) {\n        dwShareMode = 1;\n    }\n    else if (in_ECX == 0x30) {\n        dwShareMode = 2;\n    }\n    else {\n        if (in_ECX != 0x40) {\ncode_r0x00455880:\n            puVar5 = fcn.0044ddb5();\n            *puVar5 = 0x16;\n            puVar5 = fcn.0044ddbe();\n            *puVar5 = 0;\n            return 0xffffffff;\n        }\n        dwShareMode = 3;\n    }\n    uVar4 = arg_14h & 0x700;\n    if (uVar4 < 0x401) {\n        if ((uVar4 == 0x400) || (uVar4 == 0)) {\n            dwCreationDisposition = 3;\n        }\n        else if (uVar4 == 0x100) {\n            dwCreationDisposition = 4;\n        }\n        else {\n            if (uVar4 == 0x200) goto code_r0x00455927;\n            if (uVar4 != 0x300) goto code_r0x0045590d;\n            dwCreationDisposition = 2;\n        }\n    }\n    else {\n        if (uVar4 != 0x500) {\n            if (uVar4 == 0x600) {\ncode_r0x00455927:\n                dwCreationDisposition = 5;\n                goto code_r0x00455937;\n            }\n            if (uVar4 != 0x700) {\ncode_r0x0045590d:\n                puVar5 = fcn.0044ddb5();\n                *puVar5 = 0x16;\n                puVar5 = fcn.0044ddbe();\n                *puVar5 = 0;\n                return 0xffffffff;\n            }\n        }\n        dwCreationDisposition = 1;\n    }\ncode_r0x00455937:\n    uVar4 = 0x80;\n    if (((arg_14h & 0x100) != 0) && (-1 < (~*0x4673c8 & arg_18h))) {\n        uVar4 = 1;\n    }\n    if ((arg_14h & 0x40) != 0) {\n        dwDesiredAccess._0_3_ = CONCAT12(1, dwDesiredAccess);\n        dwDesiredAccess = dwDesiredAccess | dwDesiredAccess;\n        uVar4 = uVar4 | 0x4000000;\n        if (*0x4673cc == 2) {\n            dwShareMode = dwShareMode | 4;\n        }\n    }\n    if ((arg_14h & 0x1000) != 0) {\n        uVar4 = uVar4 | 0x100;\n    }\n    if ((arg_14h & 0x20) == 0) {\n        if ((arg_14h & 0x10) != 0) {\n            uVar4 = uVar4 | 0x10000000;\n        }\n    }\n    else {\n        uVar4 = uVar4 | 0x8000000;\n    }\n    arg_8h_00 = fcn.00450e42();\n    if (arg_8h_00 == 0xffffffff) {\n        puVar5 = fcn.0044ddb5();\n        *puVar5 = 0x18;\n        puVar5 = fcn.0044ddbe();\n        *puVar5 = 0;\n    }\n    else {\n        *arg_8h = 1;\n        *arg_ch = arg_8h_00;\n        iVar6 = (**0x4592d8)(lpFileName, dwDesiredAccess, dwShareMode, &lpSecurityAttributes, dwCreationDisposition, \n                             uVar4, 0);\n        if (iVar6 != -1) {\n            iVar7 = (*_sym.imp.KERNEL32.DLL_GetFileType)(iVar6);\n            if (iVar7 != 0) {\n                if (iVar7 == 2) {\n                    var_1h._0_1_ = var_1h | 0x40;\n                }\n                else if (iVar7 == 3) {\n                    var_1h._0_1_ = var_1h | 8;\n                }\n                fcn.00450c44(arg_8h_00, iVar6);\n                uVar3 = var_1h | 1;\n                piVar1 = (arg_8h_00 >> 5) * 4 + 0x480a60;\n                iVar6 = (arg_8h_00 & 0x1f) * 0x24;\n                var_1h._0_1_ = var_1h & 0x48;\n                *(iVar6 + 4 + *piVar1) = uVar3;\n                if (((var_1h == 0) && (uVar3 < '\\0')) && ((arg_14h & 2) != 0)) {\n                    dwDesiredAccess = fcn.0044fc95(arg_8h_00, 0xffffffff, 2);\n                    if (dwDesiredAccess == -1) {\n                        piVar9 = fcn.0044ddbe();\n                        if (*piVar9 == 0x83) goto code_r0x00455a79;\n                    }\n                    else {\n                        var_14h = 0;\n                        iVar7 = fcn.00450421(arg_8h_00, &var_14h, 1);\n                        if ((((iVar7 != 0) || (var_14h != 0x1a)) ||\n                            (iVar7 = fcn.004574ff(arg_8h_00, dwDesiredAccess),  iVar7 != -1)) &&\n                           (iVar7 = fcn.0044fc95(arg_8h_00, 0, 0),  iVar7 != -1)) goto code_r0x00455a79;\n                    }\n                    fcn.004501f7(arg_8h_00);\n                    return 0xffffffff;\n                }\ncode_r0x00455a79:\n                if (var_1h != 0) {\n                    return arg_8h_00;\n                }\n                if ((arg_14h & 8) == 0) {\n                    return arg_8h_00;\n                }\n                puVar2 = iVar6 + 4 + *piVar1;\n                *puVar2 = *puVar2 | 0x20;\n                return arg_8h_00;\n            }\n            (*_sym.imp.KERNEL32.DLL_CloseHandle)(iVar6);\n        }\n        uVar8 = (*_sym.imp.KERNEL32.DLL_GetLastError)();\n        fcn.0044ddc7(uVar8);\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 2009
    },
    "00455b26": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00455b26(void)\n\n{\n    int32_t unaff_EBP;\n    uint var_20h;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x1c) != 0) {\n        fcn.00450e20(*(unaff_EBP + -0x20));\n    }\n    return;\n}\n",
        "token_count": 80
    },
    "00456041": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.00456041(uint *arg_8h, uint32_t *arg_ch, uint lpFileName, uint32_t arg_14h, uint arg_18h)\n\n{\n    int32_t *piVar1;\n    uint8_t *puVar2;\n    uint8_t uVar3;\n    uint32_t uVar4;\n    uint *puVar5;\n    uint32_t arg_8h_00;\n    int32_t iVar6;\n    int32_t iVar7;\n    uint uVar8;\n    int32_t *piVar9;\n    int32_t in_ECX;\n    bool bVar10;\n    uint lpSecurityAttributes;\n    uint var_18h;\n    uint32_t var_14h;\n    uint32_t dwDesiredAccess;\n    uint dwCreationDisposition;\n    uint32_t dwShareMode;\n    char var_2h;\n    uint var_1h;\n    \n    bVar10 = -1 < arg_14h;\n    lpSecurityAttributes = 0xc;\n    var_18h = 0;\n    if (bVar10) {\n        var_1h._0_1_ = 0;\n    }\n    else {\n        var_1h._0_1_ = 0x10;\n    }\n    var_14h = bVar10;\n    if (((arg_14h & 0x8000) == 0) && (((arg_14h & 0x4000) != 0 || (*0x467998 != 0x8000)))) {\n        var_1h._0_1_ = var_1h | 0x80;\n    }\n    uVar4 = arg_14h & 3;\n    if (uVar4 == 0) {\n        dwDesiredAccess = 0x80000000;\n    }\n    else if (uVar4 == 1) {\n        dwDesiredAccess = 0x40000000;\n    }\n    else {\n        if (uVar4 != 2) goto code_r0x004560c8;\n        dwDesiredAccess = 0xc0000000;\n    }\n    if (in_ECX == 0x10) {\n        dwShareMode = 0;\n    }\n    else if (in_ECX == 0x20) {\n        dwShareMode = 1;\n    }\n    else if (in_ECX == 0x30) {\n        dwShareMode = 2;\n    }\n    else {\n        if (in_ECX != 0x40) {\ncode_r0x004560c8:\n            puVar5 = fcn.0044ddb5();\n            *puVar5 = 0x16;\n            puVar5 = fcn.0044ddbe();\n            *puVar5 = 0;\n            return 0xffffffff;\n        }\n        dwShareMode = 3;\n    }\n    uVar4 = arg_14h & 0x700;\n    if (uVar4 < 0x401) {\n        if ((uVar4 == 0x400) || (uVar4 == 0)) {\n            dwCreationDisposition = 3;\n        }\n        else if (uVar4 == 0x100) {\n            dwCreationDisposition = 4;\n        }\n        else {\n            if (uVar4 == 0x200) goto code_r0x0045616f;\n            if (uVar4 != 0x300) goto code_r0x00456155;\n            dwCreationDisposition = 2;\n        }\n    }\n    else {\n        if (uVar4 != 0x500) {\n            if (uVar4 == 0x600) {\ncode_r0x0045616f:\n                dwCreationDisposition = 5;\n                goto code_r0x0045617f;\n            }\n            if (uVar4 != 0x700) {\ncode_r0x00456155:\n                puVar5 = fcn.0044ddb5();\n                *puVar5 = 0x16;\n                puVar5 = fcn.0044ddbe();\n                *puVar5 = 0;\n                return 0xffffffff;\n            }\n        }\n        dwCreationDisposition = 1;\n    }\ncode_r0x0045617f:\n    uVar4 = 0x80;\n    if (((arg_14h & 0x100) != 0) && (-1 < (~*0x4673c8 & arg_18h))) {\n        uVar4 = 1;\n    }\n    if ((arg_14h & 0x40) != 0) {\n        dwDesiredAccess._0_3_ = CONCAT12(1, dwDesiredAccess);\n        dwDesiredAccess = dwDesiredAccess | dwDesiredAccess;\n        uVar4 = uVar4 | 0x4000000;\n        if (*0x4673cc == 2) {\n            dwShareMode = dwShareMode | 4;\n        }\n    }\n    if ((arg_14h & 0x1000) != 0) {\n        uVar4 = uVar4 | 0x100;\n    }\n    if ((arg_14h & 0x20) == 0) {\n        if ((arg_14h & 0x10) != 0) {\n            uVar4 = uVar4 | 0x10000000;\n        }\n    }\n    else {\n        uVar4 = uVar4 | 0x8000000;\n    }\n    arg_8h_00 = fcn.00450e42();\n    if (arg_8h_00 == 0xffffffff) {\n        puVar5 = fcn.0044ddb5();\n        *puVar5 = 0x18;\n        puVar5 = fcn.0044ddbe();\n        *puVar5 = 0;\n    }\n    else {\n        *arg_8h = 1;\n        *arg_ch = arg_8h_00;\n        iVar6 = (*_sym.imp.KERNEL32.DLL_CreateFileA)\n                          (lpFileName, dwDesiredAccess, dwShareMode, &lpSecurityAttributes, dwCreationDisposition, uVar4\n                           , 0);\n        if (iVar6 != -1) {\n            iVar7 = (*_sym.imp.KERNEL32.DLL_GetFileType)(iVar6);\n            if (iVar7 != 0) {\n                if (iVar7 == 2) {\n                    var_1h._0_1_ = var_1h | 0x40;\n                }\n                else if (iVar7 == 3) {\n                    var_1h._0_1_ = var_1h | 8;\n                }\n                fcn.00450c44(arg_8h_00, iVar6);\n                uVar3 = var_1h | 1;\n                piVar1 = (arg_8h_00 >> 5) * 4 + 0x480a60;\n                iVar6 = (arg_8h_00 & 0x1f) * 0x24;\n                var_1h._0_1_ = var_1h & 0x48;\n                *(iVar6 + 4 + *piVar1) = uVar3;\n                if (((var_1h == 0) && (uVar3 < '\\0')) && ((arg_14h & 2) != 0)) {\n                    dwDesiredAccess = fcn.0044fc95(arg_8h_00, 0xffffffff, 2);\n                    if (dwDesiredAccess == -1) {\n                        piVar9 = fcn.0044ddbe();\n                        if (*piVar9 == 0x83) goto code_r0x004562c1;\n                    }\n                    else {\n                        var_2h = '\\0';\n                        iVar7 = fcn.00450421(arg_8h_00, &var_2h, 1);\n                        if ((((iVar7 != 0) || (var_2h != '\\x1a')) ||\n                            (iVar7 = fcn.004574ff(arg_8h_00, dwDesiredAccess),  iVar7 != -1)) &&\n                           (iVar7 = fcn.0044fc95(arg_8h_00, 0, 0),  iVar7 != -1)) goto code_r0x004562c1;\n                    }\n                    fcn.004501f7(arg_8h_00);\n                    return 0xffffffff;\n                }\ncode_r0x004562c1:\n                if (var_1h != 0) {\n                    return arg_8h_00;\n                }\n                if ((arg_14h & 8) == 0) {\n                    return arg_8h_00;\n                }\n                puVar2 = iVar6 + 4 + *piVar1;\n                *puVar2 = *puVar2 | 0x20;\n                return arg_8h_00;\n            }\n            (*_sym.imp.KERNEL32.DLL_CloseHandle)(iVar6);\n        }\n        uVar8 = (*_sym.imp.KERNEL32.DLL_GetLastError)();\n        fcn.0044ddc7(uVar8);\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 2018
    },
    "0045636d": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0045636d(void)\n\n{\n    int32_t unaff_EBP;\n    uint var_20h;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x1c) != 0) {\n        fcn.00450e20(*(unaff_EBP + -0x20));\n    }\n    return;\n}\n",
        "token_count": 80
    },
    "004564ce": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004564ce(uint8_t *arg_8h, uint8_t *arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint var_4h;\n    \n    iVar1 = fcn.0044c752();\n    iVar1 = *(iVar1 + 100);\n    if (iVar1 != *0x4654bc) {\n        iVar1 = fcn.0044c6de();\n    }\n    if (*(iVar1 + 0x14) == 0) {\n        iVar2 = fcn.00456480(arg_8h, arg_ch);\n    }\n    else {\n        do {\n            iVar2 = fcn.00457104(iVar1, *arg_8h);\n            arg_8h = arg_8h + 1;\n            iVar3 = fcn.00457104(iVar1, *arg_ch);\n            arg_ch = arg_ch + 1;\n            if (iVar2 == 0) break;\n        } while (iVar2 == iVar3);\n        iVar2 = iVar2 - iVar3;\n    }\n    return iVar2;\n}\n",
        "token_count": 253
    },
    "00456916": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00456916(int32_t param_1, int32_t param_2)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    \n    iVar2 = param_2 / 0x20;\n    uVar1 = *(param_1 + iVar2 * 4) & ~(-1 << (0x1fU - param_2 % 0x20 & 0x1f));\n    while( true ) {\n        if (uVar1 != 0) {\n            return 0;\n        }\n        iVar2 = iVar2 + 1;\n        if (2 < iVar2) break;\n        uVar1 = *(param_1 + iVar2 * 4);\n    }\n    return 1;\n}\n",
        "token_count": 163
    },
    "00456cc4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00456fa4)\n// WARNING: Removing unreachable block (ram,0x00456f1d)\n// WARNING: Removing unreachable block (ram,0x00457080)\n// WARNING: Removing unreachable block (ram,0x00456f30)\n// WARNING: Removing unreachable block (ram,0x00456f38)\n// WARNING: Removing unreachable block (ram,0x00456f3e)\n// WARNING: Removing unreachable block (ram,0x00456f41)\n// WARNING: Removing unreachable block (ram,0x00456f48)\n// WARNING: Removing unreachable block (ram,0x00456f52)\n// WARNING: Removing unreachable block (ram,0x0045701c)\n// WARNING: Removing unreachable block (ram,0x00457016)\n// WARNING: Removing unreachable block (ram,0x00457022)\n// WARNING: Removing unreachable block (ram,0x0045703f)\n// WARNING: Removing unreachable block (ram,0x00457041)\n// WARNING: Removing unreachable block (ram,0x00457049)\n// WARNING: Removing unreachable block (ram,0x0045704c)\n// WARNING: Removing unreachable block (ram,0x00457051)\n// WARNING: Removing unreachable block (ram,0x00457054)\n// WARNING: Removing unreachable block (ram,0x00457089)\n// WARNING: Removing unreachable block (ram,0x0045705b)\n// WARNING: Removing unreachable block (ram,0x00457062)\n// WARNING: Removing unreachable block (ram,0x004570a0)\n// WARNING: Removing unreachable block (ram,0x004570a7)\n// WARNING: Removing unreachable block (ram,0x004570af)\n\nvoid __cdecl\nfcn.00456cc4(uint arg_8h, uint arg_ch, char *arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h)\n\n{\n    char cVar1;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ah;\n    uint var_26h;\n    uint var_20h;\n    uint var_9h;\n    uint var_4h;\n    \n    for (; (((cVar1 = *arg_10h,  cVar1 == ' ' || (cVar1 == '\\t')) || (cVar1 == '\\n')) || (cVar1 == '\\r'));\n        arg_10h = arg_10h + 1) {\n    }\n    // WARNING: Could not recover jumptable at 0x00456d33. Too many branches\n    // WARNING: Treating indirect jump as call\n    // switch table (12 cases) at 0x4570d4\n    (**0x4570d4)();\n    return;\n}\n",
        "token_count": 698
    },
    "00457104": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.00457104(uint32_t arg_8h, uint32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint32_t in_ECX;\n    uint unaff_EBX;\n    uint unaff_EBP;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    uint noname_3;\n    uint unaff_retaddr;\n    uint in_stack_0000000c;\n    uint in_stack_00000010;\n    uint in_stack_00000014;\n    uint in_stack_00000018;\n    uint in_stack_0000001c;\n    uint in_stack_00000020;\n    uint in_stack_00000024;\n    uint in_stack_00000028;\n    uint in_stack_0000002c;\n    uint in_stack_00000030;\n    uint in_stack_00000034;\n    uint32_t var_4h;\n    \n    uVar2 = arg_ch;\n    uVar1 = arg_8h;\n    if ((*(arg_8h + 0x14) == 0) || ((*(arg_8h + 0x24) != 0 && (arg_ch < 0x80)))) {\n        if ((0x40 < arg_ch) && (arg_ch < 0x5b)) {\n            return arg_ch + 0x20;\n        }\n    }\n    else {\n        noname_3 = 1;\n        var_4h = in_ECX;\n        if (arg_ch < 0x100) {\n            if (*(arg_8h + 0x28) < 2) {\n                uVar3 = *(*(arg_8h + 0x48) + arg_ch * 2) & 1;\n            }\n            else {\n                uVar3 = fcn.0044f091(arg_8h, arg_ch, 1);\n            }\n            if (uVar3 == 0) {\n                return uVar2;\n            }\n        }\n        if ((*(*(uVar1 + 0x48) + 1 + (uVar2 >> 8 & 0xffU) * 2) & 0x80) == 0) {\n            arg_8h = arg_8h & 0xffff0000 | uVar2 & 0xff;\n        }\n        else {\n            arg_8h = arg_8h & 0xff000000 | CONCAT11(uVar2, uVar2 >> 8);\n            noname_3 = 2;\n        }\n        iVar4 = fcn.00456537(*(uVar1 + 0x14), 0x100, &arg_8h, noname_3, &var_4h, 3, *(uVar1 + 4), 1, unaff_EDI, \n                             unaff_ESI, unaff_EBX, var_4h, unaff_EBP, unaff_retaddr, arg_8h, arg_ch, in_stack_0000000c, \n                             in_stack_00000010, in_stack_00000014, in_stack_00000018, in_stack_0000001c, \n                             in_stack_00000020, in_stack_00000024, in_stack_00000028, in_stack_0000002c, \n                             in_stack_00000030, in_stack_00000034);\n        if (iVar4 != 0) {\n            if (iVar4 != 1) {\n                return CONCAT11(var_4h, var_4h._1_1_);\n            }\n            return var_4h & 0xff;\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 836
    },
    "00457644": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00457644(uint arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    uint unaff_EBP;\n    uint unaff_retaddr;\n    uint in_stack_00000010;\n    uint in_stack_00000014;\n    uint in_stack_00000018;\n    uint in_stack_0000001c;\n    uint in_stack_00000020;\n    uint in_stack_00000024;\n    uint in_stack_00000028;\n    uint in_stack_0000002c;\n    uint in_stack_00000030;\n    uint in_stack_00000034;\n    uint in_stack_00000038;\n    uint in_stack_0000003c;\n    uint in_stack_00000040;\n    uint in_stack_00000044;\n    uint in_stack_00000048;\n    uint in_stack_0000004c;\n    uint in_stack_00000050;\n    \n    iVar1 = fcn.0044c752();\n    iVar1 = *(iVar1 + 0x60);\n    if (iVar1 != *0x480818) {\n        iVar1 = fcn.00454551();\n    }\n    if (arg_10h == 0) {\n        return 0;\n    }\n    iVar1 = fcn.00457ecf(*(iVar1 + 0xc), 1, arg_8h, arg_10h, arg_ch, arg_10h, *(iVar1 + 4), unaff_EBP, unaff_retaddr, \n                         arg_8h, arg_ch, arg_10h, in_stack_00000010, in_stack_00000014, in_stack_00000018, \n                         in_stack_0000001c, in_stack_00000020, in_stack_00000024, in_stack_00000028, in_stack_0000002c, \n                         in_stack_00000030, in_stack_00000034, in_stack_00000038, in_stack_0000003c, in_stack_00000040, \n                         in_stack_00000044, in_stack_00000048, in_stack_0000004c, in_stack_00000050);\n    if (iVar1 == 0) {\n        return 0x7fffffff;\n    }\n    return iVar1 + -2;\n}\n",
        "token_count": 510
    },
    "00457953": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00457953(int32_t *arg_8h, int32_t *arg_ch)\n\n{\n    int16_t iVar1;\n    uint16_t uVar2;\n    uint16_t uVar3;\n    int32_t iVar4;\n    uint16_t uVar5;\n    uint32_t uVar6;\n    uint16_t uVar7;\n    int32_t var_30h;\n    int32_t var_2ch;\n    uint16_t *var_28h;\n    int32_t var_24h;\n    int32_t *var_20h;\n    uint *var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x465718 ^ &stack0xfffffffc;\n    var_24h = 0;\n    var_10h._0_1_ = 0;\n    var_10h._1_1_ = 0;\n    var_10h._2_2_ = 0;\n    var_ch._0_2_ = 0;\n    var_ch._2_2_ = 0;\n    var_8h._0_2_ = 0;\n    var_8h._2_1_ = 0;\n    var_8h._3_1_ = 0;\n    uVar5 = *(arg_ch + 10) & 0x7fff;\n    uVar3 = *(arg_8h + 10) & 0x7fff;\n    uVar7 = (*(arg_ch + 10) ^ *(arg_8h + 10)) & 0x8000;\n    uVar2 = uVar5 + uVar3;\n    if (((uVar3 < 0x7fff) && (uVar5 < 0x7fff)) && (uVar2 < 0xbffe)) {\n        if (uVar2 < 0x3fc0) {\ncode_r0x00457a02:\n            arg_8h[2] = 0;\n            arg_8h[1] = 0;\n            *arg_8h = 0;\n            goto code_r0x00457b7a;\n        }\n        if (uVar3 == 0) {\n            uVar2 = uVar2 + 1;\n            var_14h._0_2_ = 0;\n            if ((((arg_8h[2] & 0x7fffffffU) != 0) || (arg_8h[1] != 0)) || (*arg_8h != 0)) goto code_r0x004579ec;\n        }\n        else {\ncode_r0x004579ec:\n            if (((uVar5 == 0) && (uVar2 = uVar2 + 1,  (arg_ch[2] & 0x7fffffffU) == 0)) &&\n               ((arg_ch[1] == 0 && (*arg_ch == 0)))) goto code_r0x00457a02;\n            var_2ch = 0;\n            var_1ch = &var_ch;\n            var_18h = 5;\n            do {\n                if (0 < var_18h) {\n                    var_28h = var_2ch * 2 + arg_8h;\n                    var_20h = arg_ch + 2;\n                    var_30h = var_18h;\n                    do {\n                        iVar4 = fcn.00457791(var_1ch[-1], *var_20h * *var_28h, var_1ch + -1);\n                        if (iVar4 != 0) {\n                            *var_1ch = *var_1ch + 1;\n                        }\n                        var_28h = var_28h + 1;\n                        var_20h = var_20h + -2;\n                        var_30h = var_30h + -1;\n                    } while (var_30h != 0);\n                }\n                var_1ch = var_1ch + 2;\n                var_2ch = var_2ch + 1;\n                var_18h = var_18h + -1;\n            } while (0 < var_18h);\n            var_14h._0_2_ = uVar2 + 0xc002;\n            if (var_14h < 1) {\ncode_r0x00457ab6:\n                var_14h._0_2_ = var_14h - 1;\n                if (var_14h < 0) {\n                    uVar6 = -var_14h;\n                    var_14h._0_2_ = 0;\n                    do {\n                        if ((var_10h & 1) != 0) {\n                            var_24h = var_24h + 1;\n                        }\n                        fcn.0045783e(&var_10h);\n                        uVar6 = uVar6 - 1;\n                    } while (uVar6 != 0);\n                    if (var_24h != 0) {\n                        var_10h._0_1_ = var_10h | 1;\n                    }\n                }\n            }\n            else {\n                do {\n                    if ((var_8h._3_1_ & 0x80) != 0) break;\n                    fcn.00457810(&var_10h);\n                    var_14h._0_2_ = var_14h - 1;\n                } while (0 < var_14h);\n                if (var_14h < 1) goto code_r0x00457ab6;\n            }\n            if ((0x8000 < CONCAT11(var_10h._1_1_, var_10h)) ||\n               ((CONCAT22(var_10h._2_2_, CONCAT11(var_10h._1_1_, var_10h)) & 0x1ffff) == 0x18000)) {\n                if (CONCAT22(var_ch, var_10h._2_2_) == -1) {\n                    var_10h._2_2_ = 0;\n                    var_ch._0_2_ = 0;\n                    if (CONCAT22(var_8h, var_ch._2_2_) == -1) {\n                        var_ch._2_2_ = 0;\n                        var_8h._0_2_ = 0;\n                        if (CONCAT11(var_8h._3_1_, var_8h._2_1_) == -1) {\n                            var_14h._0_2_ = var_14h + 1;\n                            var_8h._2_1_ = 0;\n                            var_8h._3_1_ = 0x80;\n                        }\n                        else {\n                            iVar1 = CONCAT11(var_8h._3_1_, var_8h._2_1_) + 1;\n                            var_8h._2_1_ = iVar1;\n                            var_8h._3_1_ = iVar1 >> 8;\n                        }\n                    }\n                    else {\n                        iVar4 = CONCAT22(var_8h, var_ch._2_2_) + 1;\n                        var_ch._2_2_ = iVar4;\n                        var_8h._0_2_ = iVar4 >> 0x10;\n                    }\n                }\n                else {\n                    iVar4 = CONCAT22(var_ch, var_10h._2_2_) + 1;\n                    var_10h._2_2_ = iVar4;\n                    var_ch._0_2_ = iVar4 >> 0x10;\n                }\n            }\n            if (0x7ffe < var_14h) goto code_r0x00457b5f;\n            *arg_8h = var_10h._2_2_;\n            *(arg_8h + 2) = CONCAT22(var_ch._2_2_, var_ch);\n            *(arg_8h + 6) = CONCAT13(var_8h._3_1_, CONCAT12(var_8h._2_1_, var_8h));\n            var_14h._0_2_ = var_14h | uVar7;\n        }\n        *(arg_8h + 10) = var_14h;\n    }\n    else {\ncode_r0x00457b5f:\n        arg_8h[1] = 0;\n        *arg_8h = 0;\n        arg_8h[2] = (-(uVar7 != 0) & 0x80000000) + 0x7fff8000;\n    }\ncode_r0x00457b7a:\n    fcn.0044ce09();\n    return;\n}\n",
        "token_count": 1925
    },
    "00457c17": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl\nfcn.00457c17(int32_t arg_8h, uint32_t noname_1, uint32_t noname_2, int32_t arg_14h, uint32_t arg_18h, int16_t *arg_1ch)\n\n{\n    int16_t *piVar1;\n    char cVar2;\n    int16_t *piVar3;\n    int16_t *piVar4;\n    int16_t iVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    uint uVar8;\n    int32_t var_34h;\n    uint var_30h;\n    int16_t *var_2ch;\n    int32_t var_28h;\n    uint32_t var_24h;\n    uint32_t var_20h;\n    uint var_1ch;\n    uchar var_18h;\n    uchar var_17h;\n    uchar var_16h;\n    uchar var_15h;\n    uchar var_14h;\n    uchar var_13h;\n    uchar var_12h;\n    uchar var_11h;\n    ushort var_10h;\n    uint var_eh;\n    uint32_t var_ah;\n    uchar var_6h;\n    char var_5h;\n    uint32_t var_4h;\n    \n    var_28h = arg_8h;\n    var_24h = noname_1;\n    var_4h = *0x465718 ^ &stack0xfffffffc;\n    var_20h = var_20h & 0xffff0000 | noname_2 & 0xffff;\n    uVar7 = noname_2 & 0x7fff;\n    var_1ch._0_1_ = 0xcc;\n    var_1ch._1_1_ = 0xcc;\n    var_1ch._2_1_ = 0xcc;\n    var_1ch._3_1_ = 0xcc;\n    var_18h = 0xcc;\n    var_17h = 0xcc;\n    var_16h = 0xcc;\n    var_15h = 0xcc;\n    var_14h = 0xcc;\n    var_13h = 0xcc;\n    var_12h = 0xfb;\n    var_11h = 0x3f;\n    if ((noname_2 & 0x8000) == 0) {\n        *(arg_1ch + 1) = 0x20;\n    }\n    else {\n        *(arg_1ch + 1) = 0x2d;\n    }\n    if (((uVar7 == 0) && (noname_1 == 0)) && (arg_8h == 0)) {\ncode_r0x00457d99:\n        *(arg_1ch + 2) = 0x30;\ncode_r0x00457e9e:\n        *arg_1ch = 0;\n        *(arg_1ch + 1) = 0x20;\n        *(arg_1ch + 3) = 1;\n        *(arg_1ch + 5) = 0;\n    }\n    else {\n        if (uVar7 == 0x7fff) {\n            *arg_1ch = 1;\n            if (((noname_1 == 0x80000000) && (arg_8h == 0)) || ((noname_1 & 0x40000000) != 0)) {\n                if (((noname_2 & 0x8000) == 0) || (noname_1 != 0xc0000000)) {\n                    if ((noname_1 != 0x80000000) || (arg_8h != 0)) goto code_r0x00457d0f;\n                    uVar8 = 0x45bd84;\n                }\n                else {\n                    if (arg_8h != 0) {\ncode_r0x00457d0f:\n                        uVar8 = 0x45bd7c;\n                        goto code_r0x00457d14;\n                    }\n                    uVar8 = 0x45bd8c;\n                }\n                fcn.0044a030(arg_1ch + 2, uVar8);\n                *(arg_1ch + 3) = 5;\n            }\n            else {\n                uVar8 = 0x45bd94;\ncode_r0x00457d14:\n                fcn.0044a030(arg_1ch + 2, uVar8);\n                *(arg_1ch + 3) = 6;\n            }\n            goto code_r0x00457e7e;\n        }\n        var_10h = 0;\n        iVar5 = ((uVar7 >> 8) + (noname_1 >> 0x18) * 2) * 0x4d + -0x134312f4 + uVar7 * 0x4d10 >> 0x10;\n        var_6h = uVar7;\n        var_5h = uVar7 >> 8;\n        var_eh = arg_8h;\n        var_ah = noname_1;\n        fcn.00457b89(&var_10h, -iVar5, 1);\n        if (0x3ffe < CONCAT11(var_5h, var_6h)) {\n            iVar5 = iVar5 + 1;\n            fcn.00457953(&var_10h, &var_1ch);\n        }\n        *arg_1ch = iVar5;\n        if (((arg_18h & 1) != 0) && (arg_14h = arg_14h + iVar5,  arg_14h < 1)) goto code_r0x00457d99;\n        if (0x15 < arg_14h) {\n            arg_14h = 0x15;\n        }\n        iVar6 = CONCAT11(var_5h, var_6h) - 0x3ffe;\n        var_6h = 0;\n        var_5h = '\\0';\n        var_2ch = 0x8;\n        do {\n            fcn.00457810(&var_10h);\n            var_2ch = var_2ch + -1;\n        } while (var_2ch != NULL);\n        if (iVar6 < 0) {\n            for (uVar7 = -iVar6 & 0xff; uVar7 != 0; uVar7 = uVar7 - 1) {\n                fcn.0045783e(&var_10h);\n            }\n        }\n        var_34h = arg_14h + 1;\n        piVar3 = arg_1ch + 2;\n        var_2ch = piVar3;\n        if (0 < var_34h) {\n            do {\n                var_ah._2_2_ = var_ah >> 0x10;\n                var_eh._2_2_ = var_eh >> 0x10;\n                var_28h = CONCAT22(var_eh, var_10h);\n                var_24h = CONCAT22(var_ah, var_eh._2_2_);\n                var_20h = CONCAT13(var_5h, CONCAT12(var_6h, var_ah._2_2_));\n                fcn.00457810(&var_10h);\n                fcn.00457810(&var_10h);\n                fcn.004577b2(&var_10h, &var_28h);\n                fcn.00457810(&var_10h);\n                piVar3 = var_2ch + 1;\n                var_34h = var_34h + -1;\n                *var_2ch = var_5h + '0';\n                var_5h = '\\0';\n                var_2ch = piVar3;\n            } while (var_34h != 0);\n        }\n        piVar4 = piVar3 + -1;\n        piVar1 = arg_1ch + 2;\n        if (*(piVar3 + -1) < '5') {\n            for (; (piVar1 <= piVar4 && (*piVar4 == '0')); piVar4 = piVar4 + -1) {\n            }\n            if (piVar4 < piVar1) {\n                *piVar1 = 0x30;\n                goto code_r0x00457e9e;\n            }\n        }\n        else {\n            for (; (piVar1 <= piVar4 && (*piVar4 == '9')); piVar4 = piVar4 + -1) {\n                *piVar4 = 0x30;\n            }\n            if (piVar4 < piVar1) {\n                piVar4 = piVar4 + 1;\n                *arg_1ch = *arg_1ch + 1;\n            }\n            *piVar4 = *piVar4 + '\\x01';\n        }\n        cVar2 = (piVar4 - arg_1ch) + -3;\n        *(arg_1ch + 3) = cVar2;\n        *(cVar2 + 4 + arg_1ch) = 0;\n    }\ncode_r0x00457e7e:\n    fcn.0044ce09();\n    return;\n}\n",
        "token_count": 2037
    },
    "00457eb3": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.00457eb3(int32_t param_1)\n\n{\n    char *in_EAX;\n    int32_t iVar1;\n    \n    iVar1 = param_1;\n    if (param_1 != 0) {\n        do {\n            iVar1 = iVar1 + -1;\n            if (*in_EAX == '\\0') goto code_r0x00457ec7;\n            in_EAX = in_EAX + 1;\n        } while (iVar1 != 0);\n    }\n    iVar1 = iVar1 + -1;\ncode_r0x00457ec7:\n    return (param_1 - iVar1) + -1;\n}\n",
        "token_count": 144
    },
    "00457ecf": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n// WARNING: Variable defined which should be unmapped: var_48h_3\n// WARNING: Variable defined which should be unmapped: var_44h_2\n// WARNING: Variable defined which should be unmapped: lpString1\n// WARNING: Variable defined which should be unmapped: var_38h\n// WARNING: Variable defined which should be unmapped: var_48h_2\n// WARNING: Variable defined which should be unmapped: var_64h\n// WARNING: Variable defined which should be unmapped: lpMultiByteStr\n// WARNING: Variable defined which should be unmapped: var_50h_2\n// WARNING: Variable defined which should be unmapped: var_54h\n\nvoid __cdecl\nfcn.00457ecf(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, uint noname_13\n            , uint noname_14, uint noname_15, uint noname_16, uint noname_17, uint noname_18, uint noname_19, \n            uint noname_20, uint noname_21, uint arg_8h, uint arg_ch, uint arg_10h, uint cbMultiByte, uint arg_18h, \n            uint cchCount2, uint CodePage)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint8_t *puVar4;\n    uint8_t *puVar5;\n    uint *arg_8h_00;\n    int32_t iVar6;\n    uint32_t unaff_EBP;\n    int32_t iVar7;\n    uint unaff_retaddr;\n    uint Locale;\n    uint dwCmpFlags;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_20h_2;\n    uint lpString2;\n    uint lpCPInfo;\n    uint var_4h_2;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_1ch_2;\n    uint var_20h;\n    uint var_4h;\n    uint var_58h;\n    uint var_50h_3;\n    uint var_48h_3;\n    uint var_44h_2;\n    uint lpString1;\n    uint var_34h_3;\n    uint var_30h_2;\n    uchar auStack48 [2];\n    uint var_2ah;\n    int32_t var_54h;\n    int32_t var_50h_2;\n    uint var_48h_2;\n    uint var_64h;\n    uint var_38h;\n    uint lpMultiByteStr;\n    uint uVar8;\n    \n    uVar8 = 0x48;\n    fcn.0044dc28();\n    *(unaff_EBP - 0x1c) = *0x465718 ^ unaff_EBP;\n    puVar5 = *(unaff_EBP + 0x10);\n    *(unaff_EBP - 0x3c) = puVar5;\n    puVar4 = *(unaff_EBP + 0x18);\n    *(unaff_EBP - 0x34) = puVar4;\n    iVar7 = 0;\n    if (*0x4679b8 == 0) {\n        var_50h_2 = 0x457f0e;\n        iVar2 = (**0x45919c)();\n        if (iVar2 == 0) {\n            iVar2 = (*_sym.imp.KERNEL32.DLL_GetLastError)();\n            if (iVar2 == 0x78) {\n                *0x4679b8 = 2;\n            }\n        }\n        else {\n            *0x4679b8 = 1;\n        }\n    }\n    if (0 < *(unaff_EBP + 0x14)) {\n        uVar3 = fcn.00457eb3();\n        *(unaff_EBP + 0x14) = uVar3;\n    }\n    iVar2 = *(unaff_EBP + 0x1c);\n    if (0 < iVar2) {\n        iVar2 = fcn.00457eb3();\n        *(unaff_EBP + 0x1c) = iVar2;\n    }\n    if ((*0x4679b8 == 2) || (*0x4679b8 == 0)) {\n        *(unaff_EBP - 0x40) = 0;\n        if (*(unaff_EBP + 8) == 0) {\n            *(unaff_EBP + 8) = *0x4678d4;\n        }\n        iVar2 = *(unaff_EBP + 0x20);\n        if (*(unaff_EBP + 0x20) == 0) {\n            iVar2 = *0x4678e4;\n        }\n        iVar6 = fcn.00455d9f(*(unaff_EBP + 8));\n        if (iVar6 == -1) goto code_r0x00458246;\n        if (iVar6 != iVar2) {\n            var_50h_2 = 0x4581df;\n            iVar7 = fcn.00455de6(iVar2, iVar6, *(unaff_EBP - 0x3c), unaff_EBP + 0x14, 0, 0, 0x45bda0, uVar8, \n                                 unaff_retaddr);\n            if (iVar7 == 0) goto code_r0x00458246;\n            var_50h_2 = 0x4581fa;\n            iVar2 = fcn.00455de6(iVar2, iVar6, *(unaff_EBP - 0x34), unaff_EBP + 0x1c, 0, 0, 0x45bda0, uVar8, \n                                 unaff_retaddr);\n            *(unaff_EBP - 0x40) = iVar2;\n            if (iVar2 == 0) {\n                fcn.0044a128(iVar7);\n                goto code_r0x00458246;\n            }\n            *(unaff_EBP - 0x3c) = iVar7;\n            *(unaff_EBP - 0x34) = *(unaff_EBP - 0x40);\n        }\n        var_50h_2 = 0x45822e;\n        (**0x459380)();\n        if (iVar7 != 0) {\n            var_54h = 0x45823a;\n            var_50h_2 = iVar7;\n            fcn.0044a128(iVar7);\n            var_54h = *(unaff_EBP - 0x40);\n            stack0xffffffd4 = 0x458242;\n            fcn.0044a128(var_54h);\n        }\n        goto code_r0x00458246;\n    }\n    if (*0x4679b8 != 1) goto code_r0x00458246;\n    *(unaff_EBP - 0x50) = 0;\n    *(unaff_EBP - 0x44) = 0;\n    *(unaff_EBP - 0x48) = 0;\n    if (*(unaff_EBP + 0x20) == 0) {\n        *(unaff_EBP + 0x20) = *0x4678e4;\n    }\n    if ((*(unaff_EBP + 0x14) == 0) || (iVar2 == 0)) {\n        if ((*(unaff_EBP + 0x14) == iVar2) ||\n           (((1 < iVar2 || (1 < *(unaff_EBP + 0x14))) || (iVar7 = (**0x459354)(),  iVar7 == 0)))) goto code_r0x00458246;\n        if (0 < *(unaff_EBP + 0x14)) {\n            if (1 < *(unaff_EBP - 0x30)) {\n                puVar4 = unaff_EBP - 0x2a;\n                uVar1 = *(unaff_EBP - 0x2a);\n                while (((uVar1 != 0 && (puVar4[1] != 0)) && ((*puVar5 < *puVar4 || (puVar4[1] < *puVar5))))) {\n                    puVar4 = puVar4 + 2;\n                    uVar1 = *puVar4;\n                }\n            }\n            goto code_r0x00458246;\n        }\n        if (0 < *(unaff_EBP + 0x1c)) {\n            if (1 < *(unaff_EBP - 0x30)) {\n                puVar5 = unaff_EBP - 0x2a;\n                uVar1 = *(unaff_EBP - 0x2a);\n                while (((uVar1 != 0 && (puVar5[1] != 0)) && ((uVar1 = *puVar4,  uVar1 < *puVar5 || (puVar5[1] < uVar1)))\n                       )) {\n                    puVar5 = puVar5 + 2;\n                    uVar1 = *puVar5;\n                }\n            }\n            goto code_r0x00458246;\n        }\n    }\n    var_50h_2 = 0x45804c;\n    iVar7 = (*_sym.imp.KERNEL32.DLL_MultiByteToWideChar)();\n    *(unaff_EBP - 0x4c) = iVar7;\n    if (iVar7 == 0) goto code_r0x00458246;\n    *(unaff_EBP - 4) = 0;\n    var_50h_2 = 0x45806a;\n    fcn.0044c510();\n    *(unaff_EBP - 0x18) = &stack0xffffffe0;\n    *(unaff_EBP - 0x38) = &stack0xffffffe0;\n    *(unaff_EBP - 4) = 0xffffffff;\n    iVar2 = *(unaff_EBP - 0x38);\n    if (iVar2 == 0) {\n        var_50h_2 = iVar7 * 2;\n        var_54h = 0x4580a4;\n        iVar2 = fcn.00449f7f();\n        *(unaff_EBP - 0x38) = iVar2;\n        if (iVar2 == 0) goto code_r0x00458246;\n        *(unaff_EBP - 0x50) = 1;\n    }\n    unique0x00007a00 = *(unaff_EBP + 0x14);\n    var_30h_2 = 1;\n    var_34h_3 = *(unaff_EBP + 0x20);\n    _auStack48 = puVar5;\n    var_54h = iVar2;\n    var_50h_2 = iVar7;\n    iVar2 = (*_sym.imp.KERNEL32.DLL_MultiByteToWideChar)();\n    if (iVar2 != 0) {\n        arg_8h_00 = &fcn.00457ecf::var_34h_3;\n        iVar2 = (*_sym.imp.KERNEL32.DLL_MultiByteToWideChar)\n                          (*(unaff_EBP + 0x20), 9, *(unaff_EBP - 0x34), *(unaff_EBP + 0x1c), 0, 0);\n        *(unaff_EBP - 0x54) = iVar2;\n        if (iVar2 != 0) {\n            *(unaff_EBP - 4) = 1;\n            fcn.0044c510();\n            *(unaff_EBP - 0x18) = &fcn.00457ecf::var_34h_3;\n            *(unaff_EBP - 0x58) = &fcn.00457ecf::var_34h_3;\n            *(unaff_EBP - 4) = 0xffffffff;\n            if (*0x10 == 0x38) {\n                arg_8h_00 = fcn.00449f7f(iVar2 * 2);\n                if (arg_8h_00 == NULL) goto code_r0x00458181;\n                *(unaff_EBP - 0x44) = 1;\n            }\n            iVar6 = (*_sym.imp.KERNEL32.DLL_MultiByteToWideChar)\n                              (*(unaff_EBP + 0x20), 1, *(unaff_EBP - 0x34), *(unaff_EBP + 0x1c), arg_8h_00, iVar2);\n            if (iVar6 != 0) {\n                uVar8 = (**0x45919c)(*(unaff_EBP + 8), *(unaff_EBP + 0xc), *(unaff_EBP - 0x38), iVar7, arg_8h_00, iVar2)\n                ;\n                *(unaff_EBP - 0x48) = uVar8;\n            }\n            if (*(unaff_EBP - 0x44) != 0) {\n                fcn.0044a128(arg_8h_00);\n            }\n        }\n    }\ncode_r0x00458181:\n    if (*(unaff_EBP - 0x50) != 0) {\n        fcn.0044a128(*(unaff_EBP - 0x38));\n    }\ncode_r0x00458246:\n    *(unaff_EBP - 0x68) = 0x458253;\n    fcn.0044ce09();\n    *(unaff_EBP - 0x68) = 0x458258;\n    fcn.0044dc63();\n    return;\n}\n",
        "token_count": 3086
    },
    "004582a6": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t * fcn.004582a6(void)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    int32_t *unaff_EDI;\n    uint var_4h;\n    \n    iVar3 = 0;\n    if (unaff_EDI != NULL) {\n        iVar1 = *unaff_EDI;\n        piVar2 = unaff_EDI;\n        while (iVar1 != 0) {\n            piVar2 = piVar2 + 1;\n            iVar3 = iVar3 + 1;\n            iVar1 = *piVar2;\n        }\n        piVar2 = fcn.00449f7f(iVar3 * 4 + 4);\n        if (piVar2 == NULL) {\n            fcn.0044c2ef(9);\n        }\n        iVar3 = *unaff_EDI;\n        piVar4 = piVar2;\n        while (iVar3 != 0) {\n            iVar3 = fcn.004584dd(iVar3);\n            *piVar4 = iVar3;\n            piVar4 = piVar4 + 1;\n            unaff_EDI = unaff_EDI + 1;\n            iVar3 = *unaff_EDI;\n        }\n        *piVar4 = 0;\n        return piVar2;\n    }\n    return unaff_EDI;\n}\n",
        "token_count": 308
    },
    "00458307": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00458307(int32_t *arg_8h, int32_t arg_ch)\n\n{\n    int32_t arg_8h_00;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    uchar *puVar4;\n    int32_t *piVar5;\n    bool bVar6;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint lpValue;\n    \n    var_10h = 0;\n    if (arg_8h == NULL) {\n        return 0xffffffff;\n    }\n    arg_8h_00 = *arg_8h;\n    if (arg_8h_00 == 0) {\n        return 0xffffffff;\n    }\n    iVar1 = fcn.00458508(arg_8h_00, 0x3d);\n    if (iVar1 == 0) {\n        return 0xffffffff;\n    }\n    if (arg_8h_00 == iVar1) {\n        return 0xffffffff;\n    }\n    bVar6 = *(iVar1 + 1) == '\\0';\n    if (*0x4673ec == *0x4673f0) {\n        *0x4673ec = fcn.004582a6();\n    }\n    if (*0x4673ec == NULL) {\n        if ((arg_ch != 0) && (*0x4673f4 != NULL)) {\n            iVar2 = fcn.00457692();\n            if (iVar2 != 0) {\n                return 0xffffffff;\n            }\n            goto code_r0x004583bc;\n        }\n        if (!bVar6) {\n            *0x4673ec = fcn.00449f7f(4);\n            if (*0x4673ec == NULL) {\n                return 0xffffffff;\n            }\n            **0x4673ec = 0;\n            if (*0x4673f4 == NULL) {\n                *0x4673f4 = fcn.00449f7f(4);\n                if (*0x4673f4 == NULL) {\n                    return 0xffffffff;\n                }\n                **0x4673f4 = 0;\n            }\n            goto code_r0x004583bc;\n        }\ncode_r0x0045838a:\n        var_10h = 0;\n    }\n    else {\ncode_r0x004583bc:\n        piVar3 = *0x4673ec;\n        iVar2 = fcn.00458259(arg_8h_00);\n        if ((iVar2 < 0) || (*piVar3 == 0)) {\n            if (bVar6) {\n                fcn.0044a128(arg_8h_00);\n                *arg_8h = 0;\n                goto code_r0x0045838a;\n            }\n            if (iVar2 < 0) {\n                iVar2 = -iVar2;\n            }\n            piVar3 = fcn.0044da00(*0x4673ec, iVar2 * 4 + 8);\n            if (piVar3 == NULL) {\n                return 0xffffffff;\n            }\n            (piVar3 + iVar2)[1] = 0;\n            piVar3[iVar2] = arg_8h_00;\n            *arg_8h = 0;\ncode_r0x0045845f:\n            *0x4673ec = piVar3;\n        }\n        else {\n            piVar5 = piVar3 + iVar2;\n            fcn.0044a128(*piVar5);\n            if (bVar6) {\n                while (*piVar5 != 0) {\n                    iVar2 = iVar2 + 1;\n                    *piVar5 = piVar5[1];\n                    piVar5 = piVar3 + iVar2;\n                }\n                piVar3 = fcn.0044da00(*0x4673ec, iVar2 << 2);\n                if (piVar3 != NULL) goto code_r0x0045845f;\n            }\n            else {\n                *piVar5 = arg_8h_00;\n                *arg_8h = 0;\n            }\n        }\n        if (arg_ch != 0) {\n            iVar2 = fcn.00449fa0(arg_8h_00);\n            iVar2 = fcn.00449f7f(iVar2 + 2);\n            if (iVar2 != 0) {\n                fcn.0044a030(iVar2, arg_8h_00);\n                puVar4 = (iVar2 - arg_8h_00) + iVar1;\n                *puVar4 = 0;\n                iVar1 = (**0x459388)(iVar2, ~-bVar6 & puVar4 + 1);\n                if (iVar1 == 0) {\n                    var_10h = 0xffffffff;\n                }\n                fcn.0044a128(iVar2);\n            }\n        }\n        if (bVar6) {\n            fcn.0044a128(arg_8h_00);\n        }\n    }\n    return var_10h;\n}\n",
        "token_count": 1115
    },
    "00458508": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t * __cdecl fcn.00458508(uint32_t *arg_8h, uint32_t arg_ch)\n\n{\n    uint8_t uVar1;\n    uint8_t uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint32_t *puVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    \n    iVar3 = fcn.0044c752();\n    iVar3 = *(iVar3 + 0x60);\n    if (iVar3 != *0x480818) {\n        iVar3 = fcn.00454551();\n    }\n    if (*(iVar3 + 8) == 0) {\n        uVar7 = arg_8h & 3;\n        while (uVar7 != 0) {\n            if (*arg_8h == arg_ch) {\n                return arg_8h;\n            }\n            if (*arg_8h == 0) {\n                return NULL;\n            }\n            uVar7 = arg_8h + 1 & 3;\n            arg_8h = arg_8h + 1;\n        }\n        while( true ) {\n            while( true ) {\n                uVar7 = *arg_8h;\n                uVar6 = uVar7 ^ CONCAT22(CONCAT11(arg_ch, arg_ch), CONCAT11(arg_ch, arg_ch));\n                uVar4 = uVar7 ^ 0xffffffff ^ uVar7 + 0x7efefeff;\n                puVar5 = arg_8h + 1;\n                if (((uVar6 ^ 0xffffffff ^ uVar6 + 0x7efefeff) & 0x81010100) != 0) break;\n                arg_8h = puVar5;\n                if ((uVar4 & 0x81010100) != 0) {\n                    if ((uVar4 & 0x1010100) != 0) {\n                        return NULL;\n                    }\n                    if ((uVar7 + 0x7efefeff & 0x80000000) == 0) {\n                        return NULL;\n                    }\n                }\n            }\n            uVar7 = *arg_8h;\n            if (uVar7 == arg_ch) {\n                return arg_8h;\n            }\n            if (uVar7 == 0) {\n                return NULL;\n            }\n            uVar2 = uVar7 >> 8;\n            if (uVar2 == arg_ch) {\n                return arg_8h + 1;\n            }\n            if (uVar2 == 0) break;\n            uVar2 = uVar7 >> 0x10;\n            if (uVar2 == arg_ch) {\n                return arg_8h + 2;\n            }\n            if (uVar2 == 0) {\n                return NULL;\n            }\n            uVar2 = uVar7 >> 0x18;\n            if (uVar2 == arg_ch) {\n                return arg_8h + 3;\n            }\n            arg_8h = puVar5;\n            if (uVar2 == 0) {\n                return NULL;\n            }\n        }\n        return NULL;\n    }\n    while( true ) {\n        uVar2 = *arg_8h;\n        uVar7 = uVar2;\n        if (uVar2 == 0) break;\n        if ((*(uVar7 + 0x1d + iVar3) & 4) == 0) {\n            puVar5 = arg_8h;\n            if (arg_ch == uVar7) break;\n        }\n        else {\n            uVar1 = *(arg_8h + 1);\n            if (uVar1 == 0) {\n                return NULL;\n            }\n            puVar5 = arg_8h + 1;\n            if (arg_ch == CONCAT11(uVar2, uVar1)) {\n                return arg_8h;\n            }\n        }\n        arg_8h = puVar5 + 1;\n    }\n    return ~-(arg_ch != uVar7) & arg_8h;\n}\n",
        "token_count": 880
    },
    "00401637": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00401637(int32_t hWnd, uint wParam, uint32_t nHeight)\n\n{\n    char cVar1;\n    uint uVar2;\n    uint32_t unaff_EDI;\n    \n    if ((hWnd == *0x467a00) || (*0x467a00 == 0)) {\n        if (unaff_EDI < 0x12) {\n            if (unaff_EDI == 0x11) {\n                *0x4679d8 = 4 - ((nHeight & 0x80000000) != 0);\n                *0x4679c2 = 0;\n                *0x4679c1 = 1;\n                fcn.0042ab9f();\n                fcn.00420568(0x479e08);\n                goto code_r0x004017eb;\n            }\n            if (unaff_EDI == 1) {\n                (*_sym.imp.USER32.dll_SetTimer)(hWnd, 1, 0x2ee, 0);\n                *0x480810 = (*_sym.imp.USER32.dll_RegisterWindowMessageW)(0x45bdb8);\n                if (*0x47a6b8 == 0) {\n                    *0x47a6b8 = (*_sym.imp.USER32.dll_CreatePopupMenu)();\n                }\n            }\n            else if (unaff_EDI == 2) {\n                (*_sym.imp.USER32.dll_KillTimer)(hWnd, 1);\n                fcn.00412f89();\n                (*_sym.imp.USER32.dll_PostQuitMessage)(0);\n            }\n            else if (unaff_EDI == 5) {\n                (*_sym.imp.USER32.dll_MoveWindow)(*0x4679fc, 0, 0, nHeight & 0xffff, nHeight >> 0x10, 1);\n            }\n            else if (unaff_EDI == 7) {\n                (*_sym.imp.USER32.dll_SetFocus)(*0x4679fc);\n            }\n            else {\n                if (unaff_EDI != 0x10) goto code_r0x00401779;\n                *0x4679c2 = 1;\n                *0x4679c1 = 1;\n                fcn.0042ab9f();\n            }\n        }\n        else if (unaff_EDI == 0x111) {\n            cVar1 = fcn.0041286e(nHeight);\n            if (cVar1 != '\\x01') goto code_r0x004017eb;\n        }\n        else {\n            if (unaff_EDI != 0x113) {\n                if (unaff_EDI == 0x312) {\n                    if (*0x4679c8 == '\\0') {\n                        fcn.0040d9f1(&wParam);\n                    }\n                }\n                else {\n                    if (unaff_EDI == 0x401) {\n                        fcn.00412fe4(hWnd, nHeight);\n                        goto code_r0x004017ab;\n                    }\ncode_r0x00401779:\n                    if ((unaff_EDI == *0x480810) && (*0x4679c6 == '\\x01')) {\n                        fcn.00412f89();\n                        fcn.00412a78();\n                    }\n                }\n                goto code_r0x004017eb;\n            }\n            fcn.0041279c(hWnd);\n        }\ncode_r0x004017ab:\n        uVar2 = 0;\n    }\n    else {\ncode_r0x004017eb:\n        uVar2 = (*_sym.imp.USER32.dll_DefWindowProcW)(hWnd);\n    }\n    return uVar2;\n}\n",
        "token_count": 793
    },
    "0040240e": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040240e(int32_t *arg_8h)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t *unaff_EBX;\n    uint var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    pcVar1 = _sym.imp.USER32.dll_SendMessageW;\n    if (*unaff_EBX == 0) {\n        uVar2 = 0;\n    }\n    else {\n        (*_sym.imp.USER32.dll_SendMessageW)(*unaff_EBX, 0xb0, &var_4h, &var_10h);\n        var_ch = var_4h;\n        var_8h = (*pcVar1)(*unaff_EBX, 0xc9, var_4h, 0);\n        if (var_8h < 1) {\n            var_4h = var_4h + 1;\n        }\n        else {\n            while( true ) {\n                iVar3 = (*pcVar1)(*unaff_EBX, 0xc9, var_4h, 0);\n                if (var_8h != iVar3) break;\n                var_4h = var_4h + -1;\n            }\n            var_4h = var_ch - var_4h;\n        }\n        *arg_8h = var_4h;\n        uVar2 = CONCAT31(var_4h >> 8, 1);\n    }\n    return uVar2;\n}\n",
        "token_count": 344
    },
    "004030b4": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004030b4(uint hWnd, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    if (arg_ch == '\\x01') {\n        iVar1 = (*_sym.imp.USER32.dll_SendMessageTimeoutW)(hWnd, 0, 0, 0, 2, 5000, &arg_ch);\n        if (iVar1 == 0) {\n            return;\n        }\n        uVar2 = 1;\n    }\n    else {\n        uVar2 = 0;\n    }\n    uVar2 = (*_sym.imp.USER32.dll_GetWindowThreadProcessId)(hWnd, 0, uVar2);\n    uVar2 = (*_sym.imp.KERNEL32.DLL_GetCurrentThreadId)(uVar2);\n    (*_sym.imp.USER32.dll_AttachThreadInput)(uVar2);\n    return;\n}\n",
        "token_count": 192
    },
    "00403196": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "log keystrokes"
        ],
        "decompiled_code": "\nvoid fcn.00403196(uint param_1, uint param_2, char param_3)\n\n{\n    char cVar1;\n    uint uVar2;\n    \n    if (param_3 == '\\x01') {\n        uVar2 = param_2;\n        cVar1 = fcn.00403c8c(param_2);\n        if (cVar1 != '\\0') {\n            return;\n        }\n    }\n    else {\n        uVar2 = 0;\n    }\n    uVar2 = (*_sym.imp.USER32.dll_GetWindowThreadProcessId)(param_2, 0, uVar2);\n    uVar2 = (*_sym.imp.KERNEL32.DLL_GetCurrentThreadId)(uVar2);\n    (*_sym.imp.USER32.dll_AttachThreadInput)(uVar2);\n    return;\n}\n",
        "token_count": 178
    },
    "00406243": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00406243(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, uint arg_14h)\n\n{\n    uint16_t uVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    int32_t in_EAX;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t in_ECX;\n    int32_t iVar6;\n    int32_t iVar7;\n    uint uVar8;\n    uint uVar9;\n    int32_t var_24h;\n    int32_t **var_20h;\n    uint var_1ch;\n    uint hWnd;\n    uint var_14h;\n    int32_t nWidth;\n    int32_t nHeight;\n    int32_t X;\n    int32_t var_4h;\n    \n    if (in_EAX == -1) {\n        uVar8 = 0;\n    }\n    else {\n        iVar2 = *(in_ECX + 0x54 + in_EAX * 4);\n        if (arg_8h == 1) {\n            uVar8 = 0;\n        }\n        else {\n            iVar4 = fcn.004499a1(arg_ch - *(iVar2 + 0x40));\n            if ((((iVar4 < 5) && (iVar4 = fcn.004499a1(arg_10h - *(iVar2 + 0x42)),  iVar4 < 5)) || (arg_ch == 0)) ||\n               (arg_10h == 0)) {\n                uVar8 = 0;\n            }\n            else {\n                arg_8h = *(iVar2 + 0x44);\n                if (arg_8h < 1) {\n                    arg_8h = arg_ch;\n                }\n                var_4h = *(iVar2 + 0x46);\n                if (var_4h < 1) {\n                    var_4h = arg_10h;\n                }\n                var_24h = 3;\n                if (2 < *(iVar2 + 0x14)) {\n                    var_20h = iVar2 + 0x5c;\n                    do {\n                        piVar3 = *var_20h;\n                        if ((piVar3 != NULL) && (iVar4 = *piVar3,  iVar4 != 0)) {\n                            X = (*(piVar3 + 0x1a) * arg_ch) / arg_8h;\n                            iVar6 = *(piVar3 + 0x1b);\n                            iVar7 = *(piVar3 + 0x6e);\n                            iVar5 = (*(piVar3 + 0x6a) * arg_10h) / var_4h;\n                            nWidth = (iVar6 * arg_ch) / arg_8h;\n                            nHeight = (iVar7 * arg_10h) / var_4h;\n                            uVar1 = *(piVar3 + 0x66);\n                            if (uVar1 != 0) {\n                                if (((uVar1 & 0x100) != 0) && (nWidth = iVar6,  (uVar1 & 6) == 0)) {\n                                    if ((uVar1 & 8) == 0) {\n                                        if (arg_ch / 2 < X) {\n                                            X = (arg_ch - (((arg_8h - *(piVar3 + 0x1a)) - iVar6) * arg_ch) / arg_8h) -\n                                                iVar6;\n                                        }\n                                    }\n                                    else {\n                                        X = (arg_ch - arg_8h) / 2 + *(piVar3 + 0x1a);\n                                    }\n                                }\n                                uVar1 = *(piVar3 + 0x66);\n                                if (((uVar1 & 0x200) != 0) && (nHeight = iVar7,  (uVar1 & 0x60) == 0)) {\n                                    if (uVar1 < '\\0') {\n                                        iVar5 = (arg_10h - var_4h) / 2 + *(piVar3 + 0x6a);\n                                    }\n                                    else if (arg_10h / 2 < iVar5) {\n                                        iVar5 = (arg_10h - (((var_4h - *(piVar3 + 0x6a)) - iVar7) * arg_10h) / var_4h) -\n                                                iVar7;\n                                    }\n                                }\n                                if ((*(piVar3 + 0x66) & 2) != 0) {\n                                    X = *(piVar3 + 0x1a);\n                                }\n                                if ((*(piVar3 + 0x66) & 4) != 0) {\n                                    if ((*(piVar3 + 0x66) & 2) == 0) {\n                                        X = ((iVar6 - nWidth) - arg_8h) + *(piVar3 + 0x1a) + arg_ch;\n                                    }\n                                    else {\n                                        nWidth = ((iVar6 - X) - arg_8h) + *(piVar3 + 0x1a) + arg_ch;\n                                    }\n                                }\n                                uVar1 = *(piVar3 + 0x66);\n                                if ((uVar1 & 0x20) != 0) {\n                                    iVar5 = *(piVar3 + 0x6a);\n                                }\n                                if ((uVar1 & 0x40) != 0) {\n                                    if ((uVar1 & 0x20) == 0) {\n                                        iVar5 = ((iVar7 - nHeight) - var_4h) + *(piVar3 + 0x6a) + arg_10h;\n                                    }\n                                    else {\n                                        nHeight = ((iVar7 - iVar5) - var_4h) + *(piVar3 + 0x6a) + arg_10h;\n                                    }\n                                }\n                            }\n                            (*_sym.imp.USER32.dll_MoveWindow)(iVar4, X, iVar5, nWidth, nHeight, 0);\n                            if (*(piVar3 + 0x1c) == '\\0') {\n                                uVar9 = 0xffff;\n                                iVar5 = 0;\n                                uVar8 = 0x142;\n                            }\n                            else {\n                                if ((*(piVar3 + 0x1c) != '\\x16') || ((*(piVar3 + 0x72) & 0x20) != 0))\n                                goto code_r0x004064bc;\n                                uVar9 = 0;\n                                iVar5 = piVar3[9];\n                                uVar8 = 0x469;\n                            }\n                            (*_sym.imp.USER32.dll_SendMessageW)(iVar4, uVar8, iVar5, uVar9);\n                        }\ncode_r0x004064bc:\n                        var_24h = var_24h + 1;\n                        var_20h = var_20h + 1;\n                    } while (var_24h <= *(iVar2 + 0x14));\n                }\n                *(iVar2 + 0x40) = arg_ch;\n                *(iVar2 + 0x42) = arg_10h;\n                (*_sym.imp.USER32.dll_InvalidateRect)(arg_14h, 0, 1);\n                uVar8 = 1;\n            }\n        }\n    }\n    return uVar8;\n}\n",
        "token_count": 1602
    },
    "00406e84": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00406e84(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint *puVar1;\n    int16_t iVar2;\n    int32_t in_EAX;\n    uint uVar3;\n    int16_t iVar4;\n    uint uVar5;\n    uint lpRect;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (arg_ch != 0) {\n        uVar3 = fcn.00403eaf(arg_ch);\n        *(in_EAX + 0x1c) = uVar3;\n    }\n    if (*(in_EAX + 0x1c) == -1) {\n        return 0;\n    }\n    puVar1 = *(in_EAX + 0x54 + *(in_EAX + 0x1c) * 4);\n    uVar3 = *puVar1;\n    if (*(puVar1 + 0x3a) != '\\0') {\n        *(puVar1 + 0x3a) = 0;\n        if ((-1 < puVar1[0x1053]) && (*(puVar1 + 0x1056) != '\\0')) {\n            fcn.0040b756(puVar1[0x1055]);\n            *(puVar1 + 0x1056) = '\\0';\n        }\n        (*_sym.imp.USER32.dll_GetClientRect)(*puVar1, &lpRect);\n        iVar2 = var_8h - lpRect;\n        iVar4 = var_4h - var_ch;\n        if ((iVar2 == 0) || (iVar4 == 0)) {\n            return 0xffffffff;\n        }\n        *(puVar1 + 0x11) = iVar2;\n        *(puVar1 + 0x10) = iVar2;\n        *(puVar1 + 0x46) = iVar4;\n        *(puVar1 + 0x42) = iVar4;\n        (*_sym.imp.USER32.dll_GetWindowRect)(*puVar1, &lpRect);\n        *(puVar1 + 0x12) = var_8h - lpRect;\n        *(puVar1 + 0x4a) = var_4h - var_ch;\n    }\n    if (8 < arg_8h) {\n        if (arg_8h != 9) {\n            if (arg_8h == 0x40) {\n                uVar5 = 1;\n            }\n            else {\n                if (arg_8h != 0x41) {\n                    if (arg_8h == 0x42) {\n                        *(puVar1 + 0x39) = 1;\n                        (*_sym.imp.USER32.dll_LockWindowUpdate)(uVar3);\n                        return 1;\n                    }\n                    if (arg_8h != 0x43) {\n                        return 1;\n                    }\n                    *(puVar1 + 0x39) = 0;\n                    (*_sym.imp.USER32.dll_LockWindowUpdate)(0);\n                    (*_sym.imp.USER32.dll_InvalidateRect)(*puVar1, 0, 1);\n                    return 1;\n                }\n                uVar5 = 0;\n            }\n            (*_sym.imp.USER32.dll_EnableWindow)(uVar3, uVar5);\n            return 1;\n        }\ncode_r0x00407011:\n        if (*(puVar1 + 0xe) != '\\0') {\n            (*_sym.imp.USER32.dll_ShowWindow)(uVar3, arg_8h);\n            fcn.00412348(uVar3);\n            return 1;\n        }\n        return 0;\n    }\n    if (arg_8h != 8) {\n        if (arg_8h == 0) {\n            (*_sym.imp.USER32.dll_ShowWindow)(uVar3, 0);\n            *(puVar1 + 0xe) = 0;\n            return 1;\n        }\n        if (arg_8h != 1) {\n            if (arg_8h == 2) {\n                *(puVar1 + 0xe) = 1;\n            }\n            else {\n                if (arg_8h == 3) goto code_r0x00407011;\n                if (arg_8h < 4) {\n                    return 1;\n                }\n                if (arg_8h < 6) goto code_r0x00406fa1;\n                if (arg_8h != 6) {\n                    return 1;\n                }\n            }\n            if (*(puVar1 + 0xe) != '\\0') {\n                (*_sym.imp.USER32.dll_ShowWindow)(uVar3, 6);\n                return 1;\n            }\n            return 0;\n        }\n    }\ncode_r0x00406fa1:\n    if (*(puVar1 + 0xe) == '\\0') {\n        (*_sym.imp.USER32.dll_ShowWindow)(uVar3, arg_8h);\n        if ((arg_8h != 8) && (arg_8h != 4)) {\n            fcn.00412348(uVar3);\n        }\n        *(puVar1 + 0xe) = 1;\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 1151
    },
    "004082c1": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nbool __cdecl fcn.004082c1(uint32_t arg_8h, int32_t dwNewLong)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    uint *hWnd_00;\n    char cVar3;\n    int32_t in_EAX;\n    uint32_t uVar4;\n    uint var_10h;\n    int32_t var_ch;\n    int32_t hWnd;\n    int32_t var_4h;\n    \n    var_4h = 0;\n    cVar3 = fcn.00404081(&var_ch);\n    if (cVar3 == '\\0') {\n        return false;\n    }\n    piVar2 = in_EAX + 0x54 + hWnd * 4;\n    iVar1 = var_ch * 4 + 0x50;\n    hWnd_00 = *(iVar1 + *piVar2);\n    hWnd = *hWnd_00;\n    if (arg_8h == 0xffffffff) goto code_r0x0040837d;\n    cVar3 = *(hWnd_00 + 0x1c);\n    if (cVar3 == '\\x02') {\n        uVar4 = arg_8h | 4;\ncode_r0x00408345:\n        arg_8h = uVar4 | 0x10000;\n        (*_sym.imp.USER32.dll_SendMessageW)(hWnd, 0xcf, (uVar4 & 0x800) != 0, 0);\n    }\n    else {\n        uVar4 = arg_8h;\n        if (cVar3 == '\\x03') goto code_r0x00408345;\n        if (cVar3 == '\\x06') {\n            arg_8h = arg_8h | 0xe;\n        }\n        else if (cVar3 == '\\a') {\n            arg_8h = arg_8h | 3;\n        }\n        else if (cVar3 == '\\n') {\n            arg_8h = arg_8h | 0x4000000;\n        }\n        else if (cVar3 == '\\x16') {\n            return false;\n        }\n    }\n    var_4h = (*_sym.imp.USER32.dll_SetWindowLongW)(hWnd, 0xfffffff0, arg_8h | 0x50000000);\ncode_r0x0040837d:\n    if ((dwNewLong != -1) &&\n       (var_4h = (*_sym.imp.USER32.dll_SetWindowLongW)(hWnd, 0xffffffec, dwNewLong), \n       *(*(*piVar2 + iVar1) + 0x70) == '\\x13')) {\n        var_4h = (*_sym.imp.USER32.dll_SendMessageW)(hWnd, 0x1036, 0, dwNewLong);\n    }\n    fcn.004040f0(hWnd_00, 1);\n    if ((*(hWnd_00 + 0x1c) == '\\x02') || (*(hWnd_00 + 0x1c) == '\\x03')) {\n        (*_sym.imp.USER32.dll_SetWindowPos)(*hWnd_00, 0, 0, 0, 0, 0, 0x27);\n    }\n    return var_4h != 0;\n}\n",
        "token_count": 722
    },
    "004085b5": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004085b5(uint noname_0, uint arg_ch, uint *arg_10h, int32_t nHeight, uint arg_18h, uint arg_1ch)\n\n{\n    uint uVar1;\n    uint32_t in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    uint *in_ECX;\n    uint hWnd;\n    uint var_8h;\n    uint hDC;\n    \n    uVar1 = *in_ECX;\n    if (in_ECX[0xd] != 0) {\n        (**0x459108)(in_ECX[0xd]);\n    }\n    uVar2 = (*_sym.imp.USER32.dll_GetDC)(0);\n    iVar3 = (*_sym.imp.GDI32.dll_GetDeviceCaps)(uVar2, 0x5a);\n    (*_sym.imp.USER32.dll_ReleaseDC)(0, uVar2);\n    uVar2 = (*_sym.imp.GDI32.dll_CreateFontW)\n                      ((iVar3 * nHeight) / -0x2d0, 0, 0, 0, arg_18h, in_EAX & 2, in_EAX & 4, in_EAX & 8, 1, 4, 0, 2, 0, \n                       *arg_10h);\n    (*_sym.imp.USER32.dll_SendMessageW)(uVar1, 0x30, uVar2, 1);\n    if ((*(in_ECX + 0x1c) == '\\x01') && (arg_1ch != '\\0')) {\n        (*_sym.imp.USER32.dll_MoveWindow)\n                  (*in_ECX, *(in_ECX + 0x1a), *(in_ECX + 0x6a), *(in_ECX + 0x1b), *(in_ECX + 0x6e), 0);\n    }\n    in_ECX[0xd] = uVar2;\n    fcn.004040f0(in_ECX, 1);\n    return;\n}\n",
        "token_count": 446
    },
    "00408c98": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00408c98(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t *piVar3;\n    uint *puVar4;\n    int32_t unaff_EBP;\n    int32_t iVar5;\n    int32_t unaff_EDI;\n    \n    piVar3 = unaff_EDI + 0x50 + in_EAX * 4;\n    iVar1 = (*_sym.imp.USER32.dll_SendMessageW)(**piVar3, 0xf0, 0);\n    if ((iVar1 != 0) || (unaff_EBP != 0)) {\n        iVar1 = in_EAX;\n        if (2 < in_EAX) {\n            do {\n                puVar4 = *piVar3;\n                if ((puVar4 == NULL) || (*(puVar4 + 0x1c) != '\\x1a')) break;\n                uVar2 = (*_sym.imp.USER32.dll_GetWindowLongW)(*puVar4, 0xfffffff0);\n                if ((uVar2 & 0x20000) != 0) goto code_r0x00408cf5;\n                iVar1 = iVar1 + -1;\n                piVar3 = piVar3 + -1;\n            } while (2 < iVar1);\n        }\n        iVar1 = iVar1 + 1;\ncode_r0x00408cf5:\n        iVar5 = in_EAX + 1;\n        if (iVar5 <= *(unaff_EDI + 0x14)) {\n            piVar3 = unaff_EDI + 0x50 + iVar5 * 4;\n            do {\n                puVar4 = *piVar3;\n                if ((puVar4 == NULL) || (*(puVar4 + 0x1c) != '\\x1a')) break;\n                uVar2 = (*_sym.imp.USER32.dll_GetWindowLongW)(*puVar4, 0xfffffff0);\n                if ((uVar2 & 0x20000) != 0) break;\n                iVar5 = iVar5 + 1;\n                piVar3 = piVar3 + 1;\n            } while (iVar5 <= *(unaff_EDI + 0x14));\n        }\n        if (iVar1 <= iVar5 + -1) {\n            puVar4 = unaff_EDI + 0x50 + iVar1 * 4;\n            iVar5 = ((iVar5 + -1) - iVar1) + 1;\n            do {\n                (*_sym.imp.USER32.dll_SendMessageW)(**puVar4, 0xf1, 0, 0);\n                puVar4 = puVar4 + 1;\n                iVar5 = iVar5 + -1;\n            } while (iVar5 != 0);\n        }\n        if (unaff_EBP == 1) {\n            (*_sym.imp.USER32.dll_SendMessageW)(*_pe_dos_header, 0xf1, 1, 0);\n        }\n        else {\n            puVar4 = unaff_EDI + 0x50 + iVar1 * 4;\n            uVar2 = (*_sym.imp.USER32.dll_GetWindowLongW)(**puVar4, 0xfffffff0);\n            (*_sym.imp.USER32.dll_SetWindowLongW)(**puVar4, 0xfffffff0, uVar2 | 0x10000);\n        }\n    }\n    return;\n}\n",
        "token_count": 748
    },
    "00408de6": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00408de6(int32_t param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t unaff_EBX;\n    int32_t unaff_ESI;\n    int32_t unaff_EDI;\n    \n    if (*(param_1 + 4) == 1) {\n        if (param_2 != -1) {\n            *(in_EAX + 0x405c) = param_2;\n        }\n        if (unaff_ESI != -1) {\n            *(in_EAX + 0x4060) = unaff_ESI;\n        }\n    }\n    else if (*(param_1 + 4) == 2) {\n        if (param_2 != -1) {\n            *(in_EAX + 0x405c) = *(in_EAX + 0x405c) + *(in_EAX + 0x4064) + param_2;\n        }\n        if (unaff_ESI != -1) {\n            *(in_EAX + 0x4060) = *(in_EAX + 0x4060) + *(in_EAX + 0x4068) + unaff_ESI;\n        }\n    }\n    else {\n        if (param_2 != -1) {\n            *(in_EAX + 0x405c) = *(in_EAX + 0x405c) + param_2;\n        }\n        if (unaff_ESI != -1) {\n            *(in_EAX + 0x4060) = *(in_EAX + 0x4060) + unaff_ESI;\n        }\n    }\n    if (0 < unaff_EDI) {\n        *(in_EAX + 0x4064) = unaff_EDI;\n    }\n    if (0 < unaff_EBX) {\n        *(in_EAX + 0x4068) = unaff_EBX;\n    }\n    return;\n}\n",
        "token_count": 424
    },
    "00408e68": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00408e68(int32_t *arg_8h)\n\n{\n    uint8_t uVar1;\n    int16_t iVar2;\n    uint *puVar3;\n    uint *puVar4;\n    code *pcVar5;\n    code *pcVar6;\n    char cVar7;\n    int32_t iVar8;\n    int32_t **ppiVar9;\n    int32_t *piVar10;\n    int32_t *arg_8h_00;\n    uint uVar11;\n    uint lParam;\n    int32_t var_30h;\n    uint var_28h;\n    int32_t var_20h;\n    int32_t *var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    cVar7 = fcn.00404081(&var_ch);\n    pcVar6 = _sym.imp.USER32.dll_SendMessageW;\n    pcVar5 = _sym.imp.COMCTL32.dll_ImageList_Destroy;\n    if (cVar7 == '\\0') {\n        return 0;\n    }\n    puVar3 = *(var_8h + 0x54 + var_4h * 4);\n    arg_8h_00 = puVar3[var_ch + 0x14];\n    uVar1 = *(arg_8h_00 + 0x1c);\n    var_10h = arg_8h_00;\n    if (uVar1 < 0x12) {\n        if (uVar1 == 0x11) {\n            (*_sym.imp.USER32.dll_SendMessageW)(arg_8h_00[9], 0x1101, 0, arg_8h_00[2]);\n            goto code_r0x00409368;\n        }\n        if (uVar1 < 0xd) {\n            if (uVar1 == 0xc) {\n                uVar11 = 3;\n                var_4h = 3;\n                if (2 < puVar3[5]) {\n                    piVar10 = puVar3 + 0x17;\n                    do {\n                        iVar8 = *piVar10;\n                        if ((iVar8 != 0) && (*(iVar8 + 4) == arg_8h_00[1])) {\n                            if ((*(iVar8 + 0x70) == '\\x0f') || (*(iVar8 + 0x70) == '\\x0e')) {\n                                fcn.00404018(uVar11, puVar3);\n                            }\n                            else {\n                                *(iVar8 + 4) = 0;\n                            }\n                        }\n                        var_4h = var_4h + 1;\n                        piVar10 = piVar10 + 1;\n                    } while (var_4h <= puVar3[5]);\n                }\n                iVar8 = puVar3[0x1058];\n                if (arg_8h_00[1] == iVar8) {\n                    (*_sym.imp.USER32.dll_DestroyMenu)(iVar8);\n                    puVar3[0x1058] = 0;\n                }\n                else {\n                    (*_sym.imp.USER32.dll_DestroyMenu)(arg_8h_00[1]);\n                }\n                goto code_r0x00409368;\n            }\n            if (1 < uVar1) {\n                if (uVar1 < 4) {\n                    iVar8 = puVar3[0x1061];\n                    if ((iVar8 != -1) && (arg_8h == iVar8)) {\n                        puVar3[0x1061] = -1;\n                    }\n                }\n                else {\n                    if (uVar1 == 10) {\n                        iVar8 = puVar3[5];\n                        if (2 < iVar8) {\n                            arg_8h = puVar3 + iVar8 + 0x14;\n                            do {\n                                if ((*arg_8h != 0) && (*(*arg_8h + 0x70) == '\\v')) {\n                                    fcn.00408e68(iVar8);\n                                }\n                                arg_8h = arg_8h + -1;\n                                iVar8 = iVar8 + -1;\n                            } while (2 < iVar8);\n                        }\n                        puVar3[0x1052] = 0;\n                        puVar3[0x1053] = 0xffffffff;\n                        puVar3[0x1054] = 0xffffffff;\n                        puVar3[0x1055] = 0;\n                        *(puVar3 + 0x1056) = 0;\n                        (*_sym.imp.USER32.dll_DestroyWindow)(*arg_8h_00);\n                        if (arg_8h_00[0xc] != 0) {\n                            (*_sym.imp.COMCTL32.dll_ImageList_Destroy)(arg_8h_00[0xc]);\n                        }\n                        goto code_r0x00409368;\n                    }\n                    if (uVar1 == 0xb) {\n                        arg_8h = puVar3[0x1054];\n                        (*_sym.imp.USER32.dll_SendMessageW)(puVar3[0x1052], 0x1308, *(arg_8h_00 + 0x73), 0);\n                        iVar8 = fcn.00403ee1(puVar3[0x1052]);\n                        if ((*(puVar3[iVar8 + 0x14] + 0x30) != 0) && (*(arg_8h_00 + 0x1a) != -1)) {\n                            (*_sym.imp.COMCTL32.dll_ImageList_Remove)\n                                      (*(puVar3[iVar8 + 0x14] + 0x30), *(arg_8h_00 + 0x1a));\n                        }\n                        var_4h = 3;\n                        if (2 < puVar3[5]) {\n                            piVar10 = puVar3 + 0x17;\n                            do {\n                                iVar8 = *piVar10;\n                                if ((iVar8 != 0) && (uVar1 = *(iVar8 + 0x73),  uVar1 != 0xff)) {\n                                    if ((uVar1 == *(arg_8h_00 + 0x73)) && (*(iVar8 + 0x70) != '\\v')) {\n                                        fcn.00408e68(var_4h);\n                                    }\n                                    else {\n                                        if (*(arg_8h_00 + 0x73) < uVar1) {\n                                            *(*piVar10 + 0x73) = *(*piVar10 + 0x73) + -1;\n                                        }\n                                        if ((((*(*piVar10 + 0x70) == '\\v') && (-1 < *(arg_8h_00 + 0x1a))) &&\n                                            (iVar2 = *(*piVar10 + 0x68),  -1 < iVar2)) && (*(arg_8h_00 + 0x1a) < iVar2))\n                                        {\n                                            *(*piVar10 + 0x68) = *(*piVar10 + 0x68) + -1;\n                                            lParam = 2;\n                                            var_30h = *(*piVar10 + 0x68);\n                                            (*_sym.imp.USER32.dll_SendMessageW)\n                                                      (puVar3[0x1052], 0x133d, *(*piVar10 + 0x73), &lParam);\n                                        }\n                                    }\n                                }\n                                var_4h = var_4h + 1;\n                                piVar10 = piVar10 + 1;\n                            } while (var_4h <= puVar3[5]);\n                        }\n                        if (*(arg_8h_00 + 0x73) == arg_8h) {\n                            if (arg_8h == puVar3[0x1053]) {\ncode_r0x00409007:\n                                arg_8h = arg_8h - 1;\n                            }\n                        }\n                        else {\n                            puVar3[0x1054] = 0xffffffff;\n                            if (*(arg_8h_00 + 0x73) < arg_8h) goto code_r0x00409007;\n                        }\n                        *(arg_8h_00 + 0x73) = 0xff;\n                        fcn.0040b756(arg_8h);\n                        puVar3[0x1053] = puVar3[0x1053] + -1;\n                        puVar3[0x1055] = 0;\n                        arg_8h_00 = var_10h;\n                        goto code_r0x00409368;\n                    }\n                }\n            }\n        }\n        else if (0xd < uVar1) {\n            if (uVar1 < 0x10) {\n                if (uVar1 == 0xe) {\n                    uVar11 = 3;\n                    var_4h = 3;\n                    if (2 < puVar3[5]) {\n                        piVar10 = puVar3 + 0x17;\n                        do {\n                            iVar8 = *piVar10;\n                            if (((iVar8 != 0) && (*(iVar8 + 4) == arg_8h_00[1])) && (*(iVar8 + 0x70) == '\\x0f')) {\n                                fcn.00404018(uVar11, puVar3);\n                            }\n                            var_4h = var_4h + 1;\n                            piVar10 = piVar10 + 1;\n                        } while (var_4h <= puVar3[5]);\n                    }\n                }\n                pcVar5 = _sym.imp.USER32.dll_DeleteMenu;\n                iVar8 = (*_sym.imp.USER32.dll_DeleteMenu)(arg_8h_00[1], arg_8h, 0);\n                if (iVar8 == 0) {\n                    (*pcVar5)(puVar3[0x1057], arg_8h, 0);\n                }\n                (*_sym.imp.USER32.dll_DrawMenuBar)(*puVar3);\n                goto code_r0x00409368;\n            }\n            if (uVar1 == 0x10) {\n                if (arg_8h_00[0xc] != 0) {\n                    (*_sym.imp.COMCTL32.dll_ImageList_Destroy)(arg_8h_00[0xc]);\n                }\n                uVar11 = 3;\n                var_4h = 3;\n                if (2 < puVar3[5]) {\n                    piVar10 = puVar3 + 0x17;\n                    do {\n                        iVar8 = *piVar10;\n                        if (((iVar8 != 0) && (*(iVar8 + 0x24) == *arg_8h_00)) && (*(iVar8 + 0x70) == '\\x11')) {\n                            fcn.00404018(uVar11, puVar3);\n                        }\n                        var_4h = var_4h + 1;\n                        piVar10 = piVar10 + 1;\n                    } while (var_4h <= puVar3[5]);\n                }\n            }\n        }\n    }\n    else if (uVar1 == 0x13) {\n        if (arg_8h_00[10] != 0) {\n            (*_sym.imp.COMCTL32.dll_ImageList_Destroy)(arg_8h_00[10]);\n        }\n        if (arg_8h_00[0xb] != 0) {\n            (*pcVar5)(arg_8h_00[0xb]);\n        }\n        var_4h = 3;\n        if (2 < puVar3[5]) {\n            piVar10 = puVar3 + 0x17;\n            do {\n                iVar8 = *piVar10;\n                if (((iVar8 != 0) && (*(iVar8 + 0x70) == '\\x14')) && (*(iVar8 + 0x24) == *arg_8h_00)) {\n                    fcn.00408e68(var_4h);\n                }\n                var_4h = var_4h + 1;\n                piVar10 = piVar10 + 1;\n            } while (var_4h <= puVar3[5]);\n        }\n        for (iVar8 = *(arg_8h_00 + 0x1d); iVar8 < 0; iVar8 = iVar8 + -1) {\n            (*_sym.imp.USER32.dll_SendMessageW)(*arg_8h_00, 0x101c, iVar8, 0);\n        }\n    }\n    else {\n        if (uVar1 == 0x14) {\n            var_20h = arg_8h;\n            var_28h = 1;\n            iVar8 = (*_sym.imp.USER32.dll_SendMessageW)(arg_8h_00[9], 0x1053, 0xffffffff, &var_28h);\n            if (iVar8 == -1) {\n                return 0;\n            }\n            (*pcVar6)(arg_8h_00[9], 0x1008, iVar8, 0);\n            goto code_r0x00409368;\n        }\n        if (uVar1 == 0x15) {\n            return 0;\n        }\n        if (uVar1 == 0x16) {\n            iVar8 = 3;\n            if (2 < puVar3[5]) {\n                ppiVar9 = puVar3 + 0x17;\n                do {\n                    piVar10 = *ppiVar9;\n                    if (((piVar10 != NULL) && (*(piVar10 + 0x1c) == '\\x03')) && (*piVar10 == arg_8h_00[9])) {\n                        puVar4 = puVar3[iVar8 + 0x14];\n                        (*_sym.imp.USER32.dll_MoveWindow)\n                                  (*puVar4, *(puVar4 + 0x1a), *(puVar4 + 0x6a), *(puVar4 + 0x1b), *(puVar4 + 0x6e), 0);\n                        break;\n                    }\n                    iVar8 = iVar8 + 1;\n                    ppiVar9 = ppiVar9 + 1;\n                } while (iVar8 <= puVar3[5]);\n            }\n        }\n        else if (uVar1 == 0x1b) {\n            fcn.0040c4de(arg_8h_00);\n        }\n        else if (uVar1 == 0x1d) {\n            fcn.0040d206();\n            goto code_r0x00409368;\n        }\n    }\n    (*_sym.imp.USER32.dll_DestroyWindow)(*arg_8h_00);\ncode_r0x00409368:\n    pcVar5 = *0x459108;\n    if (arg_8h_00[0xd] != 0) {\n        (**0x459108)(arg_8h_00[0xd]);\n    }\n    if (arg_8h_00[0x11] != 0) {\n        (*pcVar5)(arg_8h_00[0x11]);\n    }\n    if (arg_8h_00[0x12] != 0) {\n        (*_sym.imp.USER32.dll_DestroyIcon)(arg_8h_00[0x12]);\n    }\n    fcn.00404018(puVar3);\n    return 1;\n}\n",
        "token_count": 3328
    },
    "0040b944": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040b944(int32_t arg_8h, uint arg_ch, int32_t item, int16_t *arg_14h, uint arg_18h, int32_t arg_1ch)\n\n{\n    int32_t *piVar1;\n    uint uVar2;\n    char cVar3;\n    uint *in_EAX;\n    int32_t iVar4;\n    int32_t unaff_EBX;\n    uint *puVar5;\n    uint lpmii;\n    uint var_30h;\n    uint var_2ch;\n    uint var_24h;\n    uint var_20h;\n    int16_t *var_10h;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    lpmii = 0x2c;\n    puVar5 = &var_30h;\n    for (iVar4 = 10; iVar4 != 0; iVar4 = iVar4 + -1) {\n        *puVar5 = 0;\n        puVar5 = puVar5 + 1;\n    }\n    if (item == -1) {\n        if (in_EAX[0x1059] == 0) {\n            return 0;\n        }\n        *(unaff_EBX + 4) = in_EAX[0x1057];\n    }\n    else {\n        cVar3 = fcn.00404081(&var_8h);\n        if (cVar3 == '\\0') {\n            return 0;\n        }\n        piVar1 = arg_8h + 0x54 + var_4h * 4;\n        in_EAX = *piVar1;\n        if (in_EAX[0x1059] == 0) {\n            return 0;\n        }\n        uVar2 = *(in_EAX[var_8h + 0x14] + 4);\n        *(unaff_EBX + 4) = uVar2;\n        if (*(*(*piVar1 + var_8h * 4 + 0x50) + 0x70) == '\\x0e') {\n            var_30h = 4;\n            iVar4 = (*_sym.imp.USER32.dll_GetMenuItemInfoW)(uVar2, item, 0, &lpmii);\n            if (iVar4 == 0) {\n                return 0;\n            }\n            *(unaff_EBX + 4) = var_20h;\n        }\n        iVar4 = (*_sym.imp.USER32.dll_IsMenu)(*(unaff_EBX + 4));\n        if (iVar4 == 0) {\n            return 0;\n        }\n    }\n    var_30h = 0x13;\n    var_2ch = 0;\n    if (arg_1ch == 1) {\n        var_2ch = 0x200;\n    }\n    if (*arg_14h == 0) {\n        var_2ch = 0x800;\n    }\n    else {\n        var_10h = arg_14h;\n    }\n    var_24h = arg_ch;\n    iVar4 = (*_sym.imp.USER32.dll_InsertMenuItemW)(*(unaff_EBX + 4), arg_18h, 1, &lpmii);\n    if (iVar4 == 0) {\n        return 0;\n    }\n    *(unaff_EBX + 0x68) = arg_18h;\n    (*_sym.imp.USER32.dll_DrawMenuBar)(*in_EAX);\n    return 1;\n}\n",
        "token_count": 763
    },
    "0040c86f": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040c86f(uint arg_8h, uint arg_ch)\n\n{\n    uint8_t uVar1;\n    uint arg_10h;\n    uint Y;\n    uint nYEnd;\n    uint nXEnd;\n    int32_t in_EAX;\n    uint *puVar2;\n    uint *puVar3;\n    uint var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_ch = 0;\n    var_10h = 0;\n    var_8h = 0;\n    var_14h = in_EAX;\n    if (in_EAX != 0) {\n        do {\n            var_4h = 0;\n            if (0 < *(var_14h + 0xc)) {\n                puVar3 = var_14h + 0x10;\n                puVar2 = var_14h + 0x14;\n                do {\n                    uVar1 = *(var_14h + 0x810 + var_4h);\n                    arg_10h = *puVar3;\n                    Y = *puVar2;\n                    nYEnd = var_10h;\n                    nXEnd = var_ch;\n                    if (1 < uVar1) {\n                        if (uVar1 < 8) {\n                            fcn.0040ccaa(arg_8h, arg_ch, arg_10h, var_8h);\n                            nYEnd = Y;\n                            nXEnd = arg_10h;\n                            if ((*(var_14h + 0x810 + var_4h) & 0xfe) == 4) {\n                                fcn.0040cc51(arg_10h, Y, var_ch, var_10h, var_8h);\n                                fcn.0040ccaa(arg_8h, arg_ch, puVar3[2], var_8h);\n                                nYEnd = puVar2[2];\n                                nXEnd = puVar3[2];\n                                var_4h = var_4h + 2;\n                                puVar2 = puVar2 + 4;\n                                puVar3 = puVar3 + 4;\n                                fcn.0040cc51(*puVar3, *puVar2, nXEnd, nYEnd, var_8h);\n                                fcn.0040ccaa(arg_8h, arg_ch, *puVar3, var_8h);\n                            }\n                        }\n                        else if (uVar1 == 0x14) {\n                            var_8h = arg_10h;\n                        }\n                    }\n                    var_ch = nXEnd;\n                    var_10h = nYEnd;\n                    var_4h = var_4h + 1;\n                    puVar2 = puVar2 + 2;\n                    puVar3 = puVar3 + 2;\n                } while (var_4h < *(var_14h + 0xc));\n            }\n            var_14h = *(var_14h + 4);\n        } while (var_14h != 0);\n    }\n    fcn.0040cd34(arg_ch, 0xffffffff);\n    return;\n}\n",
        "token_count": 716
    },
    "0040cda5": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040cda5(uint hdc, int32_t arg_ch, uint32_t arg_10h, int32_t arg_14h)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t in_ECX;\n    uint lplb;\n    uint var_8h;\n    uint var_4h;\n    \n    if ((in_EAX != -1) &&\n       (((*(in_ECX + 0x1188) != in_EAX || (*(in_ECX + 0x1184) != arg_14h)) || (*(in_ECX + 0x118c) != arg_10h)))) {\n        if (*(in_ECX + 0x1178) != 0) {\n            (**0x459108)(*(in_ECX + 0x1178));\n            *(in_ECX + 0x1188) = 0xffffffff;\n            *(in_ECX + 0x1178) = 0;\n        }\n        *(in_ECX + 0x1184) = arg_14h;\n        *(in_ECX + 0x1188) = in_EAX;\n        *(in_ECX + 0x118c) = arg_10h;\n        lplb = 0;\n        var_4h = 0;\n        if (arg_14h != 1) {\n            arg_10h = arg_10h | 0x10000;\n        }\n        uVar1 = (*_sym.imp.GDI32.dll_ExtCreatePen)(arg_10h, arg_14h, &lplb, 0, 0);\n        *(in_ECX + 0x1178) = uVar1;\n        uVar1 = (*_sym.imp.GDI32.dll_SelectObject)(hdc, uVar1);\n        *(in_ECX + 0x117c) = uVar1;\n        if (*(in_ECX + 0x1180) == '\\0') {\n            (*_sym.imp.GDI32.dll_BeginPath)(hdc);\n            *(in_ECX + 0x1180) = '\\x01';\n        }\n    }\n    if ((arg_ch != -1) && (arg_ch != -2)) {\n        uVar1 = fcn.0040652a();\n        (*_sym.imp.GDI32.dll_SelectObject)(hdc, uVar1);\n    }\n    return;\n}\n",
        "token_count": 524
    },
    "0040ce86": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040ce86(uint hdc, int32_t arg_ch, int32_t arg_10h)\n\n{\n    uint8_t uVar1;\n    uint *in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    uint nYEnd;\n    \n    iVar3 = 0;\n    uVar2 = 0;\n    nYEnd = 0;\n    if (0 < arg_10h) {\n        do {\n            uVar1 = *(iVar3 + arg_ch);\n            if (1 < uVar1) {\n                if (uVar1 < 4) {\n                    (*_sym.imp.GDI32.dll_LineTo)(hdc, *in_EAX, in_EAX[1]);\n                }\n                else if (uVar1 < 6) {\n                    (*_sym.imp.GDI32.dll_PolyBezierTo)(hdc, in_EAX, 3);\n                    iVar3 = iVar3 + 2;\n                    in_EAX = in_EAX + 4;\n                }\n                else if (uVar1 == 6) {\n                    nYEnd = in_EAX[1];\n                    uVar2 = *in_EAX;\n                    (*_sym.imp.GDI32.dll_MoveToEx)(hdc, uVar2, nYEnd, 0);\n                }\n            }\n            if ((*(iVar3 + arg_ch) & 1) != 0) {\n                (*_sym.imp.GDI32.dll_LineTo)(hdc, uVar2, nYEnd);\n            }\n            iVar3 = iVar3 + 1;\n            in_EAX = in_EAX + 2;\n        } while (iVar3 < arg_10h);\n    }\n    return 1;\n}\n",
        "token_count": 372
    },
    "0040e818": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040e818(int32_t arg_8h, int32_t arg_ch)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t in_EAX;\n    int32_t iVar4;\n    int32_t in_ECX;\n    int32_t lpRect;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_4h = 0;\n    if (arg_ch != 1) {\n        iVar4 = (*_sym.imp.USER32.dll_GetDlgItem)(*(arg_8h + 0x48), 1);\n        pcVar1 = _sym.imp.USER32.dll_MoveWindow;\n        if (iVar4 != 0) {\n            (*_sym.imp.USER32.dll_GetWindowRect)(iVar4, &lpRect);\n            iVar3 = var_10h;\n            iVar2 = lpRect;\n            if (var_ch < lpRect) {\n                lpRect = var_ch;\n                var_ch = iVar2;\n            }\n            if (var_8h < var_10h) {\n                var_10h = var_8h;\n                var_8h = iVar3;\n            }\n            var_4h = (in_EAX - (var_8h - var_10h)) + -10;\n            (*pcVar1)(iVar4, (10 - (var_ch - lpRect)) / 2 + in_ECX / 4, var_4h, var_ch - lpRect, var_8h - var_10h, 0);\n        }\n        iVar4 = (*_sym.imp.USER32.dll_GetDlgItem)(*(arg_8h + 0x48), 2);\n        if (iVar4 != 0) {\n            (*_sym.imp.USER32.dll_GetWindowRect)(iVar4, &lpRect);\n            iVar3 = var_10h;\n            iVar2 = lpRect;\n            if (var_ch < lpRect) {\n                lpRect = var_ch;\n                var_ch = iVar2;\n            }\n            if (var_8h < var_10h) {\n                var_10h = var_8h;\n                var_8h = iVar3;\n            }\n            (*pcVar1)(iVar4, (in_ECX * 3) / 4 - ((var_ch - lpRect) + 10) / 2, var_4h, var_ch - lpRect, var_8h - var_10h\n                      , 0);\n        }\n        iVar4 = (*_sym.imp.USER32.dll_GetDlgItem)(*(arg_8h + 0x48), 0x3e9);\n        if (iVar4 != 0) {\n            (*_sym.imp.USER32.dll_GetWindowRect)(iVar4, &lpRect);\n            iVar3 = var_10h;\n            iVar2 = lpRect;\n            if (var_ch < lpRect) {\n                lpRect = var_ch;\n                var_ch = iVar2;\n            }\n            if (var_8h < var_10h) {\n                var_10h = var_8h;\n                var_8h = iVar3;\n            }\n            var_4h = var_4h + (-5 - (var_8h - var_10h));\n            (*pcVar1)(iVar4, 10, var_4h, in_ECX + -0x14, var_8h - var_10h, 0);\n        }\n        iVar4 = (*_sym.imp.USER32.dll_GetDlgItem)(*(arg_8h + 0x48), 0x3ea);\n        if (iVar4 != 0) {\n            (*pcVar1)(iVar4, 10, 10, in_ECX + -0x14, var_4h + -5, 0);\n        }\n        (*_sym.imp.USER32.dll_InvalidateRect)(*(arg_8h + 0x48), 0, 1);\n    }\n    return;\n}\n",
        "token_count": 879
    },
    "004100b2": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: lpFilePart\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.004100b2(uint lpFileName, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    uint8_t uVar1;\n    char cVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint arg_8h;\n    uint8_t uVar6;\n    ushort unaff_BX;\n    uint *unaff_ESI;\n    int16_t iStackY11438;\n    uchar auStackY11436 [8192];\n    uint var_ca8h;\n    uint var_aa4h;\n    uint lpBuffer;\n    uint var_694h;\n    uint var_490h;\n    uint lpPathName;\n    uint var_78h;\n    uint uStackY80;\n    uint *puStackY76;\n    uint *var_18h;\n    uint *lpFilePart;\n    uint var_ch;\n    uint *var_8h;\n    uchar auStack8 [3];\n    uint var_1h;\n    \n    _auStack8 = 0x4100bf;\n    fcn.0044c510();\n    *0x47c7a4 = *0x47c7a4 + 1;\n    if (*0x47c7a4 < 0x30) {\n        _auStack8 = CONCAT13(1, CONCAT12(1, unaff_BX));\n        var_1h._0_1_ = 0;\n        var_ch = 0x410106;\n        var_8h = unaff_ESI;\n        fcn.00413ddf();\n        var_ch = lpFileName;\n        lpFilePart = 0x410116;\n        cVar2 = fcn.00413def(lpFileName);\n        if (cVar2 == '\\0') {\n            lpFilePart = NULL;\n            var_18h = 0x45c794;\n            fcn.0040fa7c(var_ch, arg_10h, arg_18h, 0x45c794, arg_14h, 0);\n        }\n        else {\n            lpFilePart = &fcn.004100b2::lpBuffer;\n            var_18h = 0x41014a;\n            (**0x459314)();\n            var_18h = &fcn.004100b2::lpFilePart;\n            (*_sym.imp.KERNEL32.DLL_GetFullPathNameW)();\n            fcn.0044a246(&fcn.004100b2::var_490h, &fcn.004100b2::var_18h, &fcn.004100b2::var_694h, \n                         &fcn.004100b2::var_aa4h, &fcn.004100b2::var_ca8h);\n            fcn.004495f8();\n            puStackY76 = &fcn.004100b2::lpPathName;\n            uStackY80 = 0x4101a7;\n            fcn.004495ce();\n            (**0x459310)();\n            uVar6 = var_1h;\n            do {\n                if ((auStack8[2] != '\\x01') || (cVar2 = fcn.0041435f(),  cVar2 == '\\0')) break;\n                var_8h = var_8h + 1;\n                fcn.0040ff05();\n                cVar2 = fcn.0040ff3e();\n                if (cVar2 == '\\0') {\n                    puStackY76 = 0x4102d2;\n                    fcn.0040fa7c(var_ch, arg_10h, var_8h, 0x45c76c, &stack0xffffd354, 0);\n                    _auStack8 = _auStack8 & 0xffffff;\n                    break;\n                }\n                fcn.0040fed6();\n                uVar1 = 0;\n                iVar4 = fcn.0044985c();\n                if (((2 < iVar4) && (iVar5 = fcn.0044a22c(),  iVar5 != 0)) && (*(&stack0xffffd352 + iVar4 * 2) == 0x5f))\n                {\n                    *(&stack0xffffd352 + iVar4 * 2) = 0;\n                    uVar1 = 1;\n                }\n                if (uVar6 == 1) {\n                    fcn.0040fbd5();\n                }\n                else {\n                    iVar4 = fcn.00410305(var_ch, &fcn.004100b2::var_490h, &fcn.004100b2::var_8h, &fcn.004100b2::var_78h)\n                    ;\n                    if (iVar4 == 0) {\n                        _auStack8 = _auStack8 & 0xffffff;\n                    }\n                    else if (1 < iVar4) {\n                        if (iVar4 < 4) {\n                            puStackY76 = var_8h;\n                            uStackY80 = 0x41029d;\n                            fcn.0040fb68();\n                        }\n                        else if (iVar4 == 4) {\n                            _auStack8 = _auStack8 & 0xff00ffff;\n                        }\n                    }\n                }\n                uVar6 = uVar1;\n            } while (var_1h == '\\x01');\n            fcn.00413fd1();\n            (**0x459310)();\n        }\n        uVar3 = fcn.00413fd1();\n    }\n    else {\n        var_8h = NULL;\n        var_ch = arg_14h;\n        lpFilePart = 0x45c7c8;\n        var_18h = arg_10h;\n        uVar3 = fcn.0040fa7c(arg_8h, arg_10h, arg_18h, 0x45c7c8, arg_14h, 0);\n        var_1h._0_1_ = 0;\n    }\n    *0x47c7a4 = *0x47c7a4 + -1;\n    return uVar3 & 0xffffff00 | var_1h;\n}\n",
        "token_count": 1429
    },
    "00410ba0": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00410ba0(int32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    uint8_t uVar2;\n    uint in_EAX;\n    uint8_t *puVar3;\n    int32_t iVar4;\n    uint uVar5;\n    int32_t unaff_EDI;\n    uint var_14h;\n    uint32_t var_10h;\n    uint var_ch;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    uVar1 = var_10h;\n    puVar3 = fcn.00416a25(arg_8h);\n    arg_8h = 0;\n    var_10h = var_10h & 0xffffff00;\n    var_ch = 0;\n    *(unaff_EDI + 0x248) = in_EAX;\n    fcn.00410d91(unaff_EDI, 1);\n    iVar4 = fcn.00449fa0(puVar3);\n    uVar5 = fcn.00449614(iVar4 + 1);\n    if (*(unaff_EDI + 8) == '\\x01') {\n        uVar2 = fcn.00410eee(0x14, 0);\n        var_10h = uVar1 & 0xffffff00 | uVar2;\n        var_ch = fcn.0041129b();\n    }\n    uVar2 = *puVar3;\n    do {\n        var_8h = var_8h & 0xffffff00 | uVar2;\n        if (uVar2 == 0) {\n            if (*(unaff_EDI + 8) == '\\x01') {\n                fcn.0041154e(var_ch);\n                fcn.00410eee(0x14, var_10h);\n            }\n            fcn.0044951c(puVar3);\n            fcn.0044951c(uVar5);\n            fcn.00410d91(unaff_EDI, 0);\n            return;\n        }\n        arg_8h = arg_8h + 1;\n        if (uVar2 == 0x21) {\n            *(unaff_EDI + 0x244) = *(unaff_EDI + 0x244) | 1;\n        }\n        else if (uVar2 == 0x23) {\n            *(unaff_EDI + 0x244) = *(unaff_EDI + 0x244) | 0x10;\n        }\n        else if (uVar2 == 0x2b) {\n            *(unaff_EDI + 0x244) = *(unaff_EDI + 0x244) | 2;\n        }\n        else if (uVar2 == 0x5e) {\n            *(unaff_EDI + 0x244) = *(unaff_EDI + 0x244) | 8;\n        }\n        else {\n            if (uVar2 == 0x7b) {\n                iVar4 = fcn.0041200b();\n                if (iVar4 != 0) {\n                    fcn.00410f54(0x7b, 1);\n                    goto code_r0x00410c95;\n                }\n                fcn.00411baf(unaff_EDI);\n            }\n            else {\n                fcn.00410f54(var_8h, 1);\n            }\n            *(unaff_EDI + 0x244) = *(unaff_EDI + 0x244) & 0x3f00;\n        }\ncode_r0x00410c95:\n        uVar2 = puVar3[arg_8h];\n    } while( true );\n}\n",
        "token_count": 804
    },
    "00410ce7": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00410ce7(uint arg_8h)\n\n{\n    char cVar1;\n    uint8_t uVar2;\n    uint in_EAX;\n    char *pcVar3;\n    uint32_t in_ECX;\n    char *pcVar4;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    pcVar3 = fcn.00416a25(arg_8h);\n    var_4h = 0;\n    var_8h = in_ECX & 0xffffff00;\n    *(in_ECX + 0x248) = in_EAX;\n    fcn.00410d91(in_ECX, 1);\n    if (*(in_ECX + 8) == '\\x01') {\n        uVar2 = fcn.00410eee(0x14, 0);\n        var_8h = in_ECX & 0xffffff00 | uVar2;\n        var_4h = fcn.0041129b();\n    }\n    cVar1 = *pcVar3;\n    pcVar4 = pcVar3;\n    while (cVar1 != '\\0') {\n        pcVar4 = pcVar4 + 1;\n        fcn.00410f54();\n        *(in_ECX + 0x244) = *(in_ECX + 0x244) & 0x3f00;\n        cVar1 = *pcVar4;\n    }\n    if (*(in_ECX + 8) == '\\x01') {\n        fcn.0041154e(var_4h);\n        fcn.00410eee(0x14, var_8h);\n    }\n    fcn.00410d91(in_ECX, 0);\n    fcn.0044951c(pcVar3);\n    return;\n}\n",
        "token_count": 391
    },
    "00411aac": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00411aac(uint arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t in_EAX;\n    uint bScan;\n    int32_t in_ECX;\n    uint uVar2;\n    uint extraout_ECX;\n    uint lpKeyState;\n    \n    bScan = (*_sym.imp.USER32.dll_MapVirtualKeyW)();\n    uVar2 = 0;\n    if ((((*(in_ECX + 0x248) == 0) || (in_EAX == 0x14)) || (in_EAX == 0x90)) || (in_EAX == 0x91)) {\n        if (arg_8h != '\\x01') {\n            fcn.0041142d();\n            uVar2 = extraout_ECX;\n        }\n        fcn.00410e88(in_EAX, bScan, uVar2);\n    }\n    else {\n        (*_sym.imp.USER32.dll_GetKeyboardState)(&lpKeyState);\n        if (arg_8h != '\\x01') {\n            fcn.0041142d();\n        }\n        uVar1 = *(in_ECX + 0x244);\n        if (((((uVar1 & 1) == 0) && ((uVar1 & 0x100) == 0)) && (in_EAX != 0x12)) ||\n           (((uVar1 & 8) != 0 || ((uVar1 & 0x800) != 0)))) {\n            uVar2 = 0x101;\n        }\n        else {\n            uVar2 = 0x105;\n        }\n        (*_sym.imp.USER32.dll_PostMessageW)(*(in_ECX + 0x248), uVar2);\n        *(&lpKeyState + in_EAX) = *(&lpKeyState + in_EAX) ^ 0x80;\n        (*_sym.imp.USER32.dll_SetKeyboardState)(&lpKeyState);\n    }\n    fcn.00412048(in_ECX);\n    return;\n}\n",
        "token_count": 440
    },
    "0041200b": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint8_t __fastcall fcn.0041200b(uint param_1, int32_t *param_2)\n\n{\n    char cVar1;\n    uint8_t uVar2;\n    char in_AL;\n    int32_t unaff_EBX;\n    int32_t unaff_ESI;\n    int32_t iVar3;\n    uint var_4h;\n    \n    uVar2 = 1;\n    iVar3 = 0;\n    while( true ) {\n        cVar1 = *(unaff_ESI + *param_2);\n        if ((cVar1 == '\\0') || (uVar2 != 1)) break;\n        if (cVar1 == in_AL) {\n            uVar2 = 0;\n        }\n        else {\n            *(iVar3 + unaff_EBX) = cVar1;\n            iVar3 = iVar3 + 1;\n        }\n        *param_2 = *param_2 + 1;\n    }\n    *(iVar3 + unaff_EBX) = 0;\n    return -(in_AL != '\\0') & uVar2;\n}\n",
        "token_count": 233
    },
    "004122d6": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.004122d6(void)\n\n{\n    code *pcVar1;\n    char *unaff_ESI;\n    uint var_230h;\n    uint var_1bh;\n    uint var_15h;\n    uint var_4h;\n    \n    fcn.0040eb4d();\n    unaff_ESI[1] = var_15h;\n    *unaff_ESI = var_1bh;\n    pcVar1 = _sym.imp.USER32.dll_SystemParametersInfoW;\n    if ((var_15h == '\\x01') || (var_1bh == '\\x01')) {\n        (*_sym.imp.USER32.dll_SystemParametersInfoW)(0x2000, 0, &var_4h, 0);\n        *(unaff_ESI + 4) = var_4h;\n        (*pcVar1)(0x2001, 0, 0, 2);\n    }\n    return;\n}\n",
        "token_count": 214
    },
    "0041232a": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0041232a(void)\n\n{\n    char *in_EAX;\n    \n    if ((in_EAX[1] == '\\x01') || (*in_EAX == '\\x01')) {\n        (*_sym.imp.USER32.dll_SystemParametersInfoW)(0x2001, 0, *(in_EAX + 4), 2);\n    }\n    return;\n}\n",
        "token_count": 83
    },
    "00412469": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.00412469(void)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uint *unaff_ESI;\n    uint lpVersionInformation;\n    int32_t var_104h;\n    \n    *unaff_ESI = 0;\n    unaff_ESI[2] = 0;\n    unaff_ESI[3] = 0;\n    unaff_ESI[5] = 0;\n    lpVersionInformation = 0x114;\n    (*_sym.imp.KERNEL32.DLL_GetVersionExW)(&lpVersionInformation);\n    *(unaff_ESI + 6) = var_104h == 2;\n    puVar1 = unaff_ESI + 8;\n    iVar2 = 0x10;\n    do {\n        *puVar1 = 0;\n        puVar1 = puVar1 + 2;\n        iVar2 = iVar2 + -1;\n    } while (iVar2 != 0);\n    return;\n}\n",
        "token_count": 214
    },
    "004124b7": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004124b7(void)\n\n{\n    int32_t *in_EAX;\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    \n    iVar2 = 0x10;\n    if (*(in_EAX + 6) == '\\x01') {\n        piVar3 = in_EAX + 7;\n        do {\n            if (piVar3[1] != 0) {\n                pcVar1 = fcn.00412667(*piVar3, piVar3[1], 0, 0x8000);\n                (*pcVar1)();\n                (*_sym.imp.KERNEL32.DLL_CloseHandle)(*piVar3);\n            }\n            piVar3 = piVar3 + 2;\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    else {\n        piVar3 = in_EAX + 8;\n        do {\n            if (*piVar3 != 0) {\n                (**0x459120)(*piVar3);\n                (*_sym.imp.KERNEL32.DLL_CloseHandle)(piVar3[-1]);\n            }\n            piVar3 = piVar3 + 2;\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    pcVar1 = _sym.imp.KERNEL32.DLL_FreeLibrary;\n    if (in_EAX[3] != 0) {\n        (*_sym.imp.KERNEL32.DLL_FreeLibrary)(in_EAX[3]);\n    }\n    if (*in_EAX != 0) {\n        (*pcVar1)(*in_EAX);\n    }\n    return;\n}\n",
        "token_count": 362
    },
    "0041252f": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041252f(uint dwMaximumSizeLow, uint lpdwProcessId)\n\n{\n    int32_t *piVar1;\n    uint uVar2;\n    code *pcVar3;\n    int32_t unaff_ESI;\n    int32_t iVar4;\n    uint *puVar5;\n    \n    iVar4 = 0;\n    piVar1 = unaff_ESI + 0x20;\n    do {\n        if (*piVar1 == 0) break;\n        iVar4 = iVar4 + 1;\n        piVar1 = piVar1 + 2;\n    } while (iVar4 < 0x10);\n    if (iVar4 == 0x10) {\n        uVar2 = 0;\n    }\n    else {\n        if (*(unaff_ESI + 0x18) == '\\x01') {\n            (*_sym.imp.USER32.dll_GetWindowThreadProcessId)(lpdwProcessId, &lpdwProcessId);\n            uVar2 = (*_sym.imp.KERNEL32.DLL_OpenProcess)(0x438, 0, lpdwProcessId);\n            *(unaff_ESI + 0x1c + iVar4 * 8) = uVar2;\n            puVar5 = unaff_ESI + 0x20 + iVar4 * 8;\n            pcVar3 = fcn.00412651(uVar2, 0, dwMaximumSizeLow, 0x1000, 4);\n            uVar2 = (*pcVar3)();\n        }\n        else {\n            uVar2 = (**0x459128)(0xffffffff, 0, 4, 0, dwMaximumSizeLow, 0);\n            *(unaff_ESI + 0x1c + iVar4 * 8) = uVar2;\n            puVar5 = unaff_ESI + 0x20 + iVar4 * 8;\n            uVar2 = (**0x45912c)(uVar2, 0xf001f, 0, 0, 0);\n        }\n        *puVar5 = uVar2;\n    }\n    return uVar2;\n}\n",
        "token_count": 461
    },
    "004125c1": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004125c1(uint param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t unaff_ESI;\n    \n    iVar1 = 0;\n    piVar2 = in_EAX + 0x20;\n    do {\n        if (*piVar2 == unaff_ESI) break;\n        iVar1 = iVar1 + 1;\n        piVar2 = piVar2 + 2;\n    } while (iVar1 < 0x10);\n    if (iVar1 != 0x10) {\n        if (*(in_EAX + 0x18) == '\\x01') {\n            (**0x459130)(*(in_EAX + 0x1c + iVar1 * 8));\n        }\n        else {\n            fcn.0044a6b0(unaff_ESI, param_1, param_2);\n        }\n    }\n    return;\n}\n",
        "token_count": 216
    },
    "00412609": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00412609(uint param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t unaff_ESI;\n    \n    iVar1 = 0;\n    piVar2 = in_EAX + 0x20;\n    do {\n        if (*piVar2 == unaff_ESI) break;\n        iVar1 = iVar1 + 1;\n        piVar2 = piVar2 + 2;\n    } while (iVar1 < 0x10);\n    if (iVar1 != 0x10) {\n        if (*(in_EAX + 0x18) == '\\x01') {\n            (**0x459134)(*(in_EAX + 0x1c + iVar1 * 8));\n        }\n        else {\n            fcn.0044a6b0(param_1, unaff_ESI, param_2);\n        }\n    }\n    return;\n}\n",
        "token_count": 215
    },
    "00412a78": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00412a78(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t unaff_EBX;\n    uint *puVar3;\n    bool bVar4;\n    uint uStack156;\n    uint auStack152 [4];\n    uint uStack136;\n    \n    iVar1 = *0x479bdc;\n    uStack156 = 0x98;\n    puVar3 = auStack152;\n    for (iVar2 = 0x25; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar3 = 0;\n        puVar3 = puVar3 + 1;\n    }\n    iVar2 = *(unaff_EBX + 0xe14);\n    if (*(unaff_EBX + 0xe14) == 0) {\n        *(unaff_EBX + 0xe14) = *0x479bdc;\n        *(unaff_EBX + 0xe18) = iVar1;\n        iVar2 = iVar1;\n    }\n    iVar1 = *0x479be0;\n    if (*(unaff_EBX + 0xe1c) == 0) {\n        *(unaff_EBX + 0xe1c) = *0x479be0;\n        *(unaff_EBX + 0xe20) = iVar1;\n    }\n    if (*(unaff_EBX + 0xe18) != iVar2) {\n        (*_sym.imp.USER32.dll_DestroyIcon)(*(unaff_EBX + 0xe18));\n        *(unaff_EBX + 0xe18) = 0;\n    }\n    bVar4 = *(unaff_EBX + 0x42c) == 0;\n    auStack152[0] = *0x467a00;\n    auStack152[1] = 1;\n    auStack152[2] = 3;\n    auStack152[3] = 0x401;\n    uStack136 = 0;\n    if (!bVar4) {\n        uStack136 = fcn.00412d2a(unaff_EBX, *(unaff_EBX + 0x10));\n        bVar4 = *(unaff_EBX + 0x42c) == 0;\n        *(unaff_EBX + 0xe18) = uStack136;\n    }\n    if ((bVar4) || (*(unaff_EBX + 0xe18) == 0)) {\n        uStack136 = *(unaff_EBX + 0xe14);\n        *(unaff_EBX + 0xe18) = uStack136;\n    }\n    if (*0x4679c6 == '\\x01') {\n        (**0x4593f8)(1);\n    }\n    else {\n        (**0x4593f8)(0, &uStack156);\n        *0x4679c6 = '\\x01';\n    }\n    fcn.00412ddb();\n    return;\n}\n",
        "token_count": 643
    },
    "004134e7": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004134e7(uint32_t arg_8h)\n\n{\n    int32_t in_EAX;\n    bool bVar1;\n    \n    if ((arg_8h & 1) == 0) {\n        if ((arg_8h & 2) != 0) {\n            fcn.00412f89();\n            goto code_r0x0041350e;\n        }\n    }\n    else {\n        fcn.00412a78();\ncode_r0x0041350e:\n        fcn.00413495(in_EAX);\n    }\n    if ((arg_8h & 4) == 0) {\n        if ((arg_8h & 8) == 0) goto code_r0x00413544;\n        bVar1 = *0x4679c6 == '\\x01';\n        *(in_EAX + 9) = 0;\n        if (bVar1) {\n            fcn.00412a78();\n        }\n    }\n    else {\n        *(in_EAX + 9) = 1;\n    }\n    fcn.00413495(in_EAX);\ncode_r0x00413544:\n    if ((arg_8h & 0x10) != 0) {\n        *(in_EAX + 0x83c) = 0;\n        *(in_EAX + 9) = 0;\n    }\n    return 1;\n}\n",
        "token_count": 308
    },
    "004136de": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004136de(int32_t uPosition)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    int32_t *piVar3;\n    char cVar4;\n    int32_t in_ECX;\n    int32_t iVar5;\n    int32_t **ppiVar6;\n    uint *puVar7;\n    uint var_38h;\n    uint var_34h;\n    int32_t var_24h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t item;\n    \n    item = -1;\n    var_8h = in_ECX;\n    cVar4 = fcn.00413365();\n    if (((cVar4 != '\\0') && (6 < item)) && (item <= *(in_ECX + 0x1644))) {\n        puVar1 = *(in_ECX + 0xe28 + item * 4);\n        uVar2 = *puVar1;\n        if (*(puVar1 + 1) == '\\x01') {\n            var_38h = 0x2c;\n            puVar7 = &var_34h;\n            for (iVar5 = 10; iVar5 != 0; iVar5 = iVar5 + -1) {\n                *puVar7 = 0;\n                puVar7 = puVar7 + 1;\n            }\n            var_34h = 4;\n            iVar5 = (*_sym.imp.USER32.dll_GetMenuItemInfoW)(uVar2, item, 0, &var_38h);\n            if (iVar5 == 0) {\n                return 0;\n            }\n            var_ch = var_24h;\n            uPosition = 7;\n            if (6 < *(in_ECX + 0x1644)) {\n                ppiVar6 = in_ECX + 0xe44;\n                do {\n                    piVar3 = *ppiVar6;\n                    if ((piVar3 != NULL) && (*piVar3 == var_24h)) {\n                        if (*(piVar3 + 1) == '\\x01') {\n                            fcn.004136de(uPosition);\n                        }\n                        else {\n                            (*_sym.imp.USER32.dll_DeleteMenu)(var_24h, uPosition, 0);\n                            *(*ppiVar6 + 1) = 0xff;\n                            **ppiVar6 = 0;\n                            *(*ppiVar6 + 5) = 0;\n                            *(*ppiVar6 + 6) = 0;\n                            fcn.004171ba();\n                            fcn.0041330a(var_8h);\n                            var_24h = var_ch;\n                        }\n                    }\n                    uPosition = uPosition + 1;\n                    ppiVar6 = ppiVar6 + 1;\n                    in_ECX = var_8h;\n                } while (uPosition <= *(var_8h + 0x1644));\n            }\n        }\n        iVar5 = (*_sym.imp.USER32.dll_DeleteMenu)(*puVar1, item, 0);\n        if (iVar5 != 0) {\n            *puVar1 = 0;\n            *(puVar1 + 1) = 0xff;\n            *(puVar1 + 5) = 0;\n            *(puVar1 + 6) = 0;\n            fcn.004171ba();\n            fcn.0041330a(in_ECX);\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 748
    },
    "004147b3": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004147b3(uint arg_8h, int32_t *arg_ch)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int32_t iVar3;\n    char *unaff_EDI;\n    uint var_a84h;\n    uint var_878h;\n    uint var_66ch;\n    uint var_460h;\n    uint var_254h;\n    int32_t var_24ch;\n    uint var_230h;\n    int32_t var_28h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t hLibModule;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_4h;\n    \n    var_28h = 0;\n    var_20h = 0;\n    var_ch = 0;\n    var_4h = 0;\n    hLibModule = 0;\n    var_10h = 0;\n    fcn.004164f5();\n    if (var_20h != 0) {\n        fcn.0041651c();\n        if (var_4h != 0) {\n            fcn.00416543();\n            if (var_10h != 0) {\n                var_254h = 0x22c;\n                pcVar1 = fcn.00416471(2, 0);\n                uVar2 = (*pcVar1)();\n                pcVar1 = fcn.00416487(uVar2, &var_254h);\n                (*pcVar1)();\n                *unaff_EDI = '\\0';\n                var_1ch = fcn.00449794(arg_8h);\n                while (*unaff_EDI == '\\0') {\n                    pcVar1 = fcn.0041649d(uVar2, &var_254h);\n                    iVar3 = (*pcVar1)();\n                    if (iVar3 != 1) break;\n                    fcn.0044a246(&var_230h, &var_878h, &var_a84h, &var_460h, &var_66ch);\n                    fcn.004495ce(&var_460h, &var_66ch);\n                    iVar3 = fcn.00449521(&var_460h, arg_8h);\n                    if ((iVar3 == 0) || ((var_1ch != 0 && (var_1ch == var_24ch)))) {\n                        *unaff_EDI = '\\x01';\n                        *arg_ch = var_24ch;\n                    }\n                }\n                (*_sym.imp.KERNEL32.DLL_CloseHandle)(uVar2);\n                pcVar1 = _sym.imp.KERNEL32.DLL_FreeLibrary;\n                if (hLibModule != 0) {\n                    (*_sym.imp.KERNEL32.DLL_FreeLibrary)(hLibModule);\n                }\n                if (var_ch != 0) {\n                    (*pcVar1)(var_ch);\n                }\n                if (var_28h != 0) {\n                    (*pcVar1)(var_28h);\n                }\n                return 1;\n            }\n            if (hLibModule != 0) {\n                (*_sym.imp.KERNEL32.DLL_FreeLibrary)(hLibModule);\n            }\n        }\n        if (var_ch != 0) {\n            (*_sym.imp.KERNEL32.DLL_FreeLibrary)(var_ch);\n        }\n    }\n    if (var_28h != 0) {\n        (*_sym.imp.KERNEL32.DLL_FreeLibrary)(var_28h);\n    }\n    return 0;\n}\n",
        "token_count": 775
    },
    "00414b2c": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00414b2c(uint hWnd, uint lpText, uint lpCaption, uint uType)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar2 = 0;\n    *0x477a20 = '\\0';\n    if (in_EAX != 0) {\n        *0x477a21 = 1;\n        var_ch = (*_sym.imp.KERNEL32.DLL_GetCurrentThreadId)();\n        iVar2 = fcn.0044b52a(0, 0, 0x414bb5, &var_ch, 0, &var_4h);\n    }\n    uVar1 = (*_sym.imp.USER32.dll_MessageBoxW)(hWnd, lpText, lpCaption, uType);\n    if (iVar2 != 0) {\n        *0x477a21 = 0;\n        (**0x459140)(iVar2, 0xffffffff);\n        (*_sym.imp.KERNEL32.DLL_CloseHandle)(iVar2);\n    }\n    if (*0x477a20 == '\\x01') {\n        uVar1 = 0xffffffff;\n    }\n    return uVar1;\n}\n",
        "token_count": 279
    },
    "00414d8d": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00414d8d(uint lpFileName, uint arg_ch, int32_t arg_10h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint uVar4;\n    \n    cVar1 = fcn.00415010(lpFileName);\n    if ((cVar1 != '\\0') && (*0x479bb5 != '\\0')) {\n        return 1;\n    }\n    iVar2 = (**0x4592d8)(lpFileName, 0x40000000, 1, 0, 3, 0x2000080, 0);\n    if (iVar2 == -1) {\n        return 0;\n    }\n    if (arg_10h == 0) {\n        uVar3 = 0;\n        uVar4 = arg_ch;\n    }\n    else {\n        uVar4 = 0;\n        uVar3 = arg_ch;\n        if (arg_10h == 1) {\n            uVar3 = 0;\n            goto code_r0x00414ded;\n        }\n    }\n    arg_ch = 0;\ncode_r0x00414ded:\n    (*_sym.imp.KERNEL32.DLL_SetFileTime)(iVar2, arg_ch, uVar3, uVar4);\n    (*_sym.imp.KERNEL32.DLL_CloseHandle)(iVar2);\n    return 1;\n}\n",
        "token_count": 304
    },
    "004151b5": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.004151b5(uint arg_8h)\n\n{\n    bool bVar1;\n    char cVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint8_t uVar6;\n    uint var_c90h;\n    uint var_a84h;\n    uint var_878h;\n    uint var_66ch;\n    uint lpFindFileData;\n    uint var_434h;\n    uint lpFileName;\n    uint var_1h;\n    \n    var_1h._0_1_ = 0;\n    fcn.00415029(arg_8h);\n    cVar2 = fcn.00415010(&lpFileName);\n    if (cVar2 != '\\0') {\n        fcn.004495ce(&lpFileName, 0x45d108);\n    }\n    fcn.0044a246(&lpFileName, &var_878h, &var_66ch, &var_a84h, &var_c90h);\n    iVar3 = (*_sym.imp.KERNEL32.DLL_FindFirstFileW)(&lpFileName, &lpFindFileData);\n    bVar1 = true;\n    uVar6 = var_1h;\n    if (iVar3 != -1) {\n        while (uVar6 = var_1h,  bVar1) {\n            if ((lpFindFileData & 0x10) == 0) {\n                var_1h._0_1_ = bVar1;\n                fcn.004495f8(&lpFileName, &var_878h);\n                fcn.004495ce(&lpFileName, &var_66ch);\n                fcn.004495ce(&lpFileName, &var_434h);\n                iVar4 = (**0x459154)(&lpFileName);\n                if (iVar4 != 1) {\n                    uVar6 = 0;\n                    break;\n                }\n            }\n            iVar4 = (**0x459158)(iVar3, &lpFindFileData);\n            if (iVar4 == 0) {\n                bVar1 = false;\n            }\n        }\n    }\n    uVar5 = (*_sym.imp.KERNEL32.DLL_FindClose)(iVar3);\n    return uVar5 & 0xffffff00 | uVar6;\n}\n",
        "token_count": 526
    },
    "004156ef": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nbool fcn.004156ef(int32_t param_1)\n\n{\n    int16_t *piVar1;\n    code *pcVar2;\n    char cVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint uVar6;\n    ushort *puVar7;\n    \n    iVar4 = fcn.0044985c(param_1);\n    piVar1 = param_1 + (iVar4 + -1) * 2;\n    if (*piVar1 == 0x5c) {\n        *piVar1 = 0;\n    }\n    uVar5 = (*_sym.imp.KERNEL32.DLL_GetFileAttributesW)(param_1);\n    if (uVar5 == 0xffffffff) {\n        iVar4 = (*_sym.imp.KERNEL32.DLL_GetLastError)();\n        pcVar2 = *0x45916c;\n        if (iVar4 == 2) {\n            iVar4 = (**0x45916c)(param_1, 0);\n            if (iVar4 != 0) {\n                return true;\n            }\n        }\n        else if (iVar4 != 3) {\n            return false;\n        }\n        uVar6 = fcn.004161b7(param_1);\n        puVar7 = fcn.0044b5d7(uVar6, 0x5c);\n        if (puVar7 != NULL) {\n            *puVar7 = 0;\n            cVar3 = fcn.004156ef(uVar6);\n            fcn.0044951c(uVar6);\n            if (cVar3 != '\\0') {\n                iVar4 = (*pcVar2)(param_1, 0);\n                return iVar4 != 0;\n            }\n            return false;\n        }\n        fcn.0044951c(uVar6);\n    }\n    else if ((uVar5 & 0x10) != 0) {\n        return true;\n    }\n    return false;\n}\n",
        "token_count": 425
    },
    "00415b10": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_2h\n\nuint __cdecl fcn.00415b10(uint arg_8h, uint arg_ch)\n\n{\n    code *pcVar1;\n    char cVar2;\n    int32_t iVar3;\n    ushort uStackY65540;\n    uint uStackY68;\n    uint uStackY64;\n    uint uStackY60;\n    uchar *puStackY56;\n    uint uStackY52;\n    uint uStackY48;\n    uint uStackY44;\n    uint uStackY40;\n    uchar *puStackY36;\n    uint var_2h;\n    \n    fcn.0044c510();\n    cVar2 = fcn.00415e77(arg_8h, 5000);\n    if (cVar2 == '\\0') {\n        uStackY65540 = 0;\n        iVar3 = (*_sym.imp.USER32.dll_IsWindowVisible)();\n        pcVar1 = _sym.imp.USER32.dll_SendMessageW;\n        if (((iVar3 != 0) || (*0x467a1c == '\\x01')) && (iVar3 = (*_sym.imp.USER32.dll_SendMessageW)(),  0 < iVar3)) {\n            puStackY36 = &stack0xfffefffc;\n            uStackY40 = 0x7fff;\n            uStackY44 = 0xd;\n            uStackY48 = arg_8h;\n            uStackY52 = 0x415b79;\n            (*pcVar1)();\n            puStackY56 = &stack0xfffefffc;\n            uStackY52 = 0x7fff;\n            uStackY60 = 0x415b8e;\n            fcn.00415abd();\n            uStackY60 = 0x7fff;\n            uStackY64 = 0x45d0f8;\n            uStackY68 = 0x415b99;\n            fcn.00415abd();\n        }\n    }\n    return 1;\n}\n",
        "token_count": 439
    },
    "00415e9a": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "log keystrokes"
        ],
        "decompiled_code": "\nvoid fcn.00415e9a(uint param_1, char param_2)\n\n{\n    char cVar1;\n    uint uVar2;\n    \n    if (param_2 == '\\x01') {\n        cVar1 = fcn.00415e77(param_1, 5000);\n        if (cVar1 != '\\0') {\n            return;\n        }\n        uVar2 = 1;\n    }\n    else {\n        uVar2 = 0;\n    }\n    uVar2 = (*_sym.imp.USER32.dll_GetWindowThreadProcessId)(param_1, 0, uVar2);\n    uVar2 = (*_sym.imp.KERNEL32.DLL_GetCurrentThreadId)(uVar2);\n    (*_sym.imp.USER32.dll_AttachThreadInput)(uVar2);\n    return;\n}\n",
        "token_count": 177
    },
    "004192a2": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\ndouble * __fastcall fcn.004192a2(double *param_1)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t *in_EAX;\n    int32_t iVar4;\n    int32_t arg_8h;\n    uint arg_10h;\n    uint arg_ch;\n    uint extraout_ECX;\n    int32_t iVar5;\n    float10 fVar6;\n    ulong uVar7;\n    uint var_4h;\n    \n    iVar5 = *(param_1 + 1);\n    if (iVar5 == 1) {\n        if (in_EAX[2] == 1) {\n            uVar1 = *in_EAX;\n            uVar2 = *param_1;\n            iVar5 = (uVar1 >> 0x1f) + (uVar2 >> 0x1f) + CARRY4(uVar1, uVar2);\n            if (uVar1 + uVar2 >> 0x1f == iVar5) {\n                *param_1 = uVar1 + uVar2;\n            }\n            else {\n                *(param_1 + 1) = 2;\n                *param_1 = uVar1 + uVar2;\n                *(param_1 + 4) = iVar5;\n            }\n            goto code_r0x004193e2;\n        }\n        if (in_EAX[2] == 2) {\n            uVar1 = *param_1;\n            uVar2 = *in_EAX;\n            uVar3 = in_EAX[1];\n            *param_1 = uVar1 + *in_EAX;\n            *(param_1 + 4) = (uVar1 >> 0x1f) + uVar3 + CARRY4(uVar1, uVar2);\n            *(param_1 + 1) = 2;\n            goto code_r0x004193e2;\n        }\ncode_r0x004193d2:\n        fcn.00419caf();\n    }\n    else {\n        if (iVar5 == 2) {\n            if ((in_EAX[2] == 1) || (in_EAX[2] == 2)) {\n                uVar7 = fcn.004187bd();\n                uVar1 = *param_1;\n                *param_1 = *param_1 + uVar7;\n                *(param_1 + 4) = *(param_1 + 4) + (uVar7 >> 0x20) + CARRY4(uVar1, uVar7);\n                goto code_r0x004193e2;\n            }\n            goto code_r0x004193d2;\n        }\n        if (iVar5 != 3) {\n            if (iVar5 != 4) {\n                if (iVar5 < 9) goto code_r0x004193e2;\n                if (10 < iVar5) {\n                    if (iVar5 != 0xb) goto code_r0x004193e2;\n                    if (in_EAX[2] == 0xb) {\n                        iVar4 = fcn.00418606();\n                        iVar5 = **param_1;\n                        arg_8h = fcn.00449614(iVar4 + iVar5);\n                        fcn.0044a6b0(arg_8h, (*param_1)[1], **param_1);\n                        arg_10h = fcn.00418606();\n                        arg_ch = fcn.00418678(extraout_ECX);\n                        fcn.0044a6b0(**param_1 + arg_8h, arg_ch, arg_10h);\n                        fcn.0044951c(*(*param_1 + 4));\n                        *(*param_1 + 4) = arg_8h;\n                        **param_1 = iVar4 + iVar5;\n                        goto code_r0x004193e2;\n                    }\n                }\n            }\n            goto code_r0x004193d2;\n        }\n    }\n    fVar6 = fcn.00418692();\n    *param_1 = fVar6 + *param_1;\ncode_r0x004193e2:\n    fcn.004189fc();\n    return param_1;\n}\n",
        "token_count": 922
    },
    "004193f0": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\ndouble * __fastcall fcn.004193f0(double *param_1)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t *in_EAX;\n    int32_t iVar4;\n    int32_t iVar5;\n    float10 fVar6;\n    ulong uVar7;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar4 = *(param_1 + 1);\n    if (iVar4 == 1) {\n        if (in_EAX[2] == 1) {\n            uVar1 = *param_1;\n            uVar2 = *in_EAX;\n            iVar5 = uVar1 - uVar2;\n            iVar4 = ((uVar1 >> 0x1f) - (uVar2 >> 0x1f)) - (uVar1 < uVar2);\n            if ((iVar5 == uVar1 - uVar2) && (iVar5 >> 0x1f == iVar4)) {\n                *param_1 = iVar5;\n            }\n            else {\n                *(param_1 + 1) = 2;\n                *param_1 = uVar1 - uVar2;\n                *(param_1 + 4) = iVar4;\n            }\n            goto code_r0x0041942e;\n        }\n        if (in_EAX[2] == 2) {\n            uVar1 = *param_1;\n            uVar2 = *in_EAX;\n            uVar3 = in_EAX[1];\n            *param_1 = uVar1 - *in_EAX;\n            *(param_1 + 4) = ((uVar1 >> 0x1f) - uVar3) - (uVar1 < uVar2);\n            *(param_1 + 1) = 2;\n            goto code_r0x0041942e;\n        }\ncode_r0x0041941e:\n        fcn.00419caf();\n    }\n    else {\n        if (iVar4 == 2) {\n            if ((in_EAX[2] == 1) || (in_EAX[2] == 2)) {\n                uVar7 = fcn.004187bd();\n                uVar1 = *param_1;\n                *param_1 = *param_1 - uVar7;\n                *(param_1 + 4) = (*(param_1 + 4) - (uVar7 >> 0x20)) - (uVar1 < uVar7);\n                goto code_r0x0041942e;\n            }\n            goto code_r0x0041941e;\n        }\n        if (iVar4 != 3) {\n            if ((iVar4 != 4) && ((iVar4 < 9 || (0xb < iVar4)))) goto code_r0x0041942e;\n            goto code_r0x0041941e;\n        }\n    }\n    fVar6 = fcn.00418692();\n    *param_1 = *param_1 - fVar6;\ncode_r0x0041942e:\n    fcn.004189fc();\n    return param_1;\n}\n",
        "token_count": 689
    },
    "004194be": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\ndouble * __fastcall fcn.004194be(double *param_1)\n\n{\n    int64_t iVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    float10 fVar5;\n    ulong uVar6;\n    \n    iVar2 = *(param_1 + 1);\n    if (iVar2 == 1) {\n        if (in_EAX[2] == 1) {\n            iVar1 = *param_1 * *in_EAX;\n            iVar4 = iVar1 >> 0x20;\n            iVar2 = iVar1;\n            iVar3 = *param_1 * *in_EAX;\n            if ((iVar3 - iVar2 == 0) && (iVar3 >> 0x1f == iVar4)) {\n                *param_1 = iVar3;\n            }\n            else {\n                *(param_1 + 1) = 2;\n                *param_1 = iVar2;\n                *(param_1 + 4) = iVar4;\n            }\n            goto code_r0x004194ed;\n        }\n        if (in_EAX[2] == 2) {\n            uVar6 = fcn.0044d040(*param_1, *param_1 >> 0x1f, *in_EAX, in_EAX[1]);\n            *param_1 = uVar6;\n            *(param_1 + 4) = uVar6 >> 0x20;\n            *(param_1 + 1) = 2;\n            goto code_r0x004194ed;\n        }\ncode_r0x004194dd:\n        fcn.00419caf();\n    }\n    else {\n        if (iVar2 == 2) {\n            if ((in_EAX[2] == 1) || (in_EAX[2] == 2)) {\n                uVar6 = fcn.004187bd();\n                uVar6 = fcn.0044d040(uVar6, *param_1, *(param_1 + 4));\n                *param_1 = uVar6;\n                *(param_1 + 4) = uVar6 >> 0x20;\n                goto code_r0x004194ed;\n            }\n            goto code_r0x004194dd;\n        }\n        if (iVar2 != 3) {\n            if (((iVar2 != 4) && (iVar2 != 9)) && (iVar2 != 0xb)) goto code_r0x004194ed;\n            goto code_r0x004194dd;\n        }\n    }\n    fVar5 = fcn.00418692();\n    *param_1 = fVar5 * *param_1;\ncode_r0x004194ed:\n    fcn.004189fc();\n    return param_1;\n}\n",
        "token_count": 609
    },
    "00419578": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.00419578(void)\n\n{\n    int32_t iVar1;\n    double *in_EAX;\n    float10 fVar2;\n    \n    iVar1 = *(in_EAX + 1);\n    if (iVar1 < 1) goto code_r0x004195ae;\n    if (iVar1 < 3) {\ncode_r0x0041959c:\n        fcn.00419caf();\n    }\n    else if (iVar1 != 3) {\n        if (((iVar1 != 4) && (iVar1 != 9)) && (iVar1 != 0xb)) goto code_r0x004195ae;\n        goto code_r0x0041959c;\n    }\n    fVar2 = fcn.00418692();\n    *in_EAX = *in_EAX / fVar2;\ncode_r0x004195ae:\n    fcn.004189fc();\n    return;\n}\n",
        "token_count": 198
    },
    "00419622": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00419622(uint param_1)\n\n{\n    int32_t in_EAX;\n    \n    // switch table (11 cases) at 0x41971e\n    switch(param_1) {\n    case 1:\n        if (in_EAX == 1) {\n            return 1;\n        }\n        if (in_EAX == 2) {\n            return 2;\n        }\n        if (in_EAX < 3) {\n            return 0;\n        }\n        if (4 < in_EAX) {\n            if (in_EAX == 7) {\n                return 7;\n            }\n            if (in_EAX == 9) {\n                return 9;\n            }\n            if (in_EAX == 0xb) {\n                return 1;\n            }\n            return 0;\n        }\n        return 3;\n    case 2:\n        if (in_EAX < 1) {\n            return 0;\n        }\n        if (2 < in_EAX) {\n            if (in_EAX < 5) {\n                return 3;\n            }\n            if (in_EAX == 7) {\n                return 7;\n            }\n            if (in_EAX == 9) {\n                return 9;\n            }\n            if (in_EAX != 0xb) {\n                return 0;\n            }\n        }\n        return 2;\n    case 3:\n        if (in_EAX < 1) {\n            return 0;\n        }\n        if (4 < in_EAX) {\n            if (in_EAX == 9) {\n                return 9;\n            }\n            if (in_EAX != 0xb) {\n                return 0;\n            }\n        }\n        return 3;\n    case 4:\n        if (in_EAX < 1) {\n            return 0;\n        }\n        if (in_EAX < 4) {\n            return 3;\n        }\n        if (in_EAX == 4) {\n            return 4;\n        }\n        break;\n    default:\n        return 0;\n    case 7:\n        if (in_EAX < 1) {\n            return 0;\n        }\n        if (in_EAX < 3) {\n            return 7;\n        }\n        if (in_EAX == 4) {\n            return 7;\n        }\n        if (in_EAX == 7) {\n            return 7;\n        }\n        if (in_EAX == 9) {\n            return 9;\n        }\n        if (in_EAX == 0xb) {\n            return 7;\n        }\n        return 0;\n    case 8:\n        if (in_EAX != 8) {\n            return 0;\n        }\n        return 8;\n    case 9:\n        goto code_r0x00419719;\n    case 10:\n        if (in_EAX == 10) {\n            return 10;\n        }\n        return 0;\n    case 0xb:\n        if (in_EAX == 1) {\n            return 1;\n        }\n        if (in_EAX == 2) {\n            return 2;\n        }\n        if (in_EAX == 3) {\n            return 3;\n        }\n        if (in_EAX == 4) {\n            return 0xb;\n        }\n    }\n    if (in_EAX == 7) {\n        return 7;\n    }\n    if (in_EAX != 9) {\n        if (in_EAX == 0xb) {\n            return 0xb;\n        }\n        return 0;\n    }\ncode_r0x00419719:\n    return 9;\n}\n",
        "token_count": 785
    },
    "00419a96": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.00419a96(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    unkuint3 Var2;\n    \n    iVar1 = *(in_EAX + 8);\n    Var2 = iVar1 >> 8;\n    if (((iVar1 != 3) && (iVar1 != 1)) && (iVar1 != 2)) {\n        return Var2 << 8;\n    }\n    return CONCAT31(Var2, 1);\n}\n",
        "token_count": 107
    },
    "00419aae": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.00419aae(void)\n\n{\n    int32_t iVar1;\n    double *in_EAX;\n    uint32_t uVar2;\n    double dVar3;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = *(in_EAX + 1);\n    uVar2 = 0;\n    if (iVar1 == 3) {\n        uVar2 = fcn.0044ba72(SUB84(*in_EAX, 0), *in_EAX >> 0x20);\n        if ((uVar2 & 0x1f8) == 0) {\n            return uVar2;\n        }\n        dVar3 = fcn.00458664();\n        if (dVar3 != *in_EAX) {\n            return uVar2;\n        }\n    }\n    else if (iVar1 == 1) {\n        dVar3 = *in_EAX;\n    }\n    else {\n        if (iVar1 != 2) {\n            return 0;\n        }\n        dVar3 = *in_EAX;\n    }\n    if (dVar3 == 0.0) {\n        uVar2 = uVar2 | 0x40000;\n    }\n    else {\n        if ((dVar3 & 1) == 0) {\n            uVar2 = uVar2 | 0x200000;\n        }\n        else {\n            uVar2 = uVar2 | 0x100000;\n        }\n        if ((dVar3 < 0x100000000) && (dVar3 < 0)) {\n            uVar2 = uVar2 | 0x10000;\n        }\n        else {\n            uVar2 = uVar2 | 0x20000;\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 392
    },
    "00419cd9": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00419cd9(void)\n\n{\n    uint uVar1;\n    uint *unaff_ESI;\n    \n    if (unaff_ESI[2] != 1) {\n        uVar1 = fcn.00418733();\n        fcn.0041858e();\n        *unaff_ESI = uVar1;\n        unaff_ESI[2] = 1;\n    }\n    return;\n}\n",
        "token_count": 92
    },
    "004203f1": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004203f1(int32_t arg_8h)\n\n{\n    code *pcVar1;\n    char cVar2;\n    uint uVar3;\n    int32_t iVar4;\n    int32_t in_ECX;\n    ulong uVar5;\n    uint lpMsg;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    if (*(in_ECX + 0x284) < 0x418) {\n        iVar4 = *(in_ECX + 0x284) + 1;\n        *(in_ECX + 0x284) = iVar4;\n        if ((iVar4 == 1) &&\n           (cVar2 = fcn.004327a9(in_ECX, 0x45d5fc, &var_4h, &var_10h, &var_ch, &var_8h),  cVar2 == '\\x01')) {\n            fcn.00421702(in_ECX, var_4h + 1, 1, 0);\n        }\n        *(in_ECX + 0x350) = 0;\n        while( true ) {\n            if ((*(in_ECX + 0x294) != '\\0') || (*(in_ECX + 0x350) != '\\0')) goto code_r0x004204e2;\n            fcn.00420336();\n            if (*(in_ECX + 0x290) == 1) break;\n            cVar2 = fcn.0042066a();\n            if (cVar2 != '\\x01') {\n                *(in_ECX + 0x28c) = arg_8h;\n                arg_8h = arg_8h + 1;\n                uVar5 = fcn.0040fd7d();\n                if (uVar5 == 0) {\n                    *(in_ECX + 0x290) = 1;\n                }\n                else {\n                    fcn.0043247e(*(in_ECX + 0x6e4) + -0x28 + (uVar5 >> 0x20) * 0x28, &arg_8h);\n                }\n            }\n        }\n        fcn.00418bb9(0);\ncode_r0x004204e2:\n        *(in_ECX + 0x350) = 0;\n        if (*(in_ECX + 0x284) == 1) {\n            *0x4679c1 = 1;\n            fcn.0042ab9f();\n            fcn.00406b83(0x478410);\n            if (*(in_ECX + 0x294) != '\\x01') {\n                fcn.00420568(in_ECX);\n                (*_sym.imp.USER32.dll_LockWindowUpdate)(0);\n                (*_sym.imp.USER32.dll_DestroyWindow)(*0x467a00);\n                pcVar1 = *0x459428;\n                while (iVar4 = (*pcVar1)(&lpMsg, 0, 0, 0),  0 < iVar4) {\n                    (**0x459420)(&lpMsg);\n                    (**0x459424)(&lpMsg);\n                }\n            }\n        }\n        else {\n            *(in_ECX + 0x284) = *(in_ECX + 0x284) + -1;\n        }\n        uVar3 = 0;\n    }\n    else {\n        *0x4679c0 = 0;\n        fcn.0041fdea(0x9a, 0xffffffff);\n        uVar3 = 1;\n    }\n    return uVar3;\n}\n",
        "token_count": 796
    },
    "00421de9": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00421de9(int32_t arg_8h, uint arg_ch)\n\n{\n    code *pcVar1;\n    char cVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint *puVar6;\n    uint var_20ch;\n    \n    uVar3 = fcn.00418641();\n    fcn.00415029(uVar3);\n    cVar2 = fcn.00414fbc(&var_20ch);\n    if (cVar2 != '\\0') {\n        if (*(arg_8h + 0xc) == 2) {\n            puVar6 = &var_20ch;\n            uVar5 = 0;\n            uVar3 = 0;\n        }\n        else {\n            puVar6 = &var_20ch;\n            uVar5 = 0;\n            uVar3 = fcn.00418641(0, puVar6);\n        }\n        uVar3 = fcn.00418641(uVar3, uVar5, puVar6);\n        pcVar1 = *0x4591b4;\n        iVar4 = (**0x4591b4)(uVar3);\n        if (iVar4 != 0) {\n            (*pcVar1)(0, 0, 0, &var_20ch);\n            return 0;\n        }\n    }\n    fcn.00418bb9(0);\n    return 0;\n}\n",
        "token_count": 319
    },
    "00421ea4": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint __cdecl fcn.00421ea4(int32_t arg_8h, uint arg_ch)\n\n{\n    int16_t iVar1;\n    bool bVar2;\n    uint arg_8h_00;\n    int32_t iVar3;\n    int32_t *piVar4;\n    int32_t iVar5;\n    int16_t aiStackY66100 [32768];\n    uint var_230h;\n    uint var_24h;\n    uint var_18h;\n    uint var_ch;\n    int32_t *var_8h;\n    int32_t var_4h;\n    \n    fcn.0044c510();\n    arg_8h_00 = fcn.00418641();\n    fcn.00415029(arg_8h_00);\n    fcn.00418641();\n    iVar3 = (**0x4591b8)();\n    if (iVar3 != 0) {\n        var_8h = fcn.00449614();\n        if (var_8h == NULL) {\n            var_8h = NULL;\n        }\n        else {\n            *var_8h = 0;\n            var_8h[1] = 0;\n            var_8h[2] = 0;\n            var_8h[3] = 0;\n            var_8h[4] = 0;\n        }\n        bVar2 = false;\n        iVar5 = 0;\n        *var_8h = 0;\n        arg_8h = 0;\n        if (0 < iVar3) {\n            do {\n                iVar1 = aiStackY66100[iVar5];\n                if ((iVar1 == 0x3b) && (*var_8h == iVar5)) {\n                    bVar2 = true;\n                }\n                else if ((iVar1 != 0x3d) || ((var_8h[1] != 0 || (bVar2)))) {\n                    if (iVar1 == 0) {\n                        aiStackY66100[iVar5] = 0xd;\n                        if ((var_8h[2] == 0) || (bVar2)) {\n                            var_8h[3] = 0;\n                            var_8h[2] = 0;\n                            var_8h[1] = 0;\ncode_r0x00421fd2:\n                            *var_8h = iVar5 + 1;\n                        }\n                        else {\n                            arg_8h = arg_8h + 1;\n                            var_8h[3] = iVar5;\n                            if (aiStackY66100[iVar5 + 1] != 0) {\n                                piVar4 = fcn.00449614();\n                                if (piVar4 == NULL) {\n                                    piVar4 = NULL;\n                                }\n                                else {\n                                    *piVar4 = 0;\n                                    piVar4[1] = 0;\n                                    piVar4[2] = 0;\n                                    piVar4[3] = 0;\n                                    piVar4[4] = 0;\n                                }\n                                var_8h[4] = piVar4;\n                                var_8h = piVar4;\n                                goto code_r0x00421fd2;\n                            }\n                        }\n                        bVar2 = false;\n                        if (aiStackY66100[iVar5 + 1] == 0) break;\n                    }\n                }\n                else {\n                    var_8h[1] = iVar5;\n                    var_8h[2] = iVar5 + 1;\n                }\n                iVar5 = iVar5 + 1;\n            } while (iVar5 < iVar3);\n            if (0 < arg_8h) {\n                fcn.0041a000(2);\n                fcn.004268e5();\n                fcn.00416d61();\n                fcn.00416d61();\n                if (0 < arg_8h) {\n                    var_4h = arg_8h;\n                    do {\n                        fcn.004171ba();\n                        fcn.00417171();\n                        fcn.00426905();\n                        fcn.004171ba();\n                        fcn.00417171();\n                        fcn.00426905();\n                        fcn.0044951c();\n                        var_4h = var_4h + -1;\n                    } while (var_4h != 0);\n                }\n                fcn.0044951c();\n                fcn.0044951c();\n                return 0;\n            }\n        }\n    }\n    fcn.00421898();\n    return 0;\n}\n",
        "token_count": 1025
    },
    "00423988": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00423988(int32_t *arg_8h, uint arg_ch)\n\n{\n    uint8_t uVar1;\n    uint32_t uVar2;\n    int16_t *piVar3;\n    uint *puVar4;\n    int32_t iVar5;\n    int32_t *unaff_ESI;\n    uint unaff_EDI;\n    uint var_1658h;\n    uint var_658h;\n    uint var_450h;\n    uint var_248h;\n    uint var_3ch;\n    uint var_38h;\n    int32_t *var_34h;\n    int32_t *var_30h;\n    int32_t *var_2ch;\n    uint *var_28h;\n    int32_t *var_24h;\n    uint *var_20h;\n    uint *var_1ch;\n    uint *var_18h;\n    uint *var_14h;\n    uint var_10h;\n    uint var_ch;\n    int32_t *var_8h;\n    uint32_t var_4h;\n    \n    var_4h = 0x423995;\n    fcn.0044c510();\n    var_248h._0_2_ = 0;\n    var_10h = 0;\n    puVar4 = &fcn.00423988::var_248h + 2;\n    var_ch = unaff_EDI;\n    var_8h = unaff_ESI;\n    for (iVar5 = 0x82; iVar5 != 0; iVar5 = iVar5 + -1) {\n        *puVar4 = 0;\n        puVar4 = puVar4 + 1;\n    }\n    var_4h = 0x200;\n    var_14h = 0x4239c0;\n    (*_sym.imp.ole32.dll_CoInitialize)();\n    var_14h = &fcn.00423988::var_8h;\n    var_18h = 0x4239cd;\n    (**0x4593f4)();\n    var_18h = 0x4239e8;\n    uVar2 = fcn.00418733();\n    if ((uVar2 & 1) != 0) {\n        var_4h = 0x40;\n    }\n    var_18h = 0x423a07;\n    uVar1 = fcn.00418733();\n    if ((uVar1 & 2) != 0) {\n        var_4h = var_4h | 0x40;\n    }\n    var_18h = 0x423a23;\n    uVar2 = fcn.00418733();\n    if ((uVar2 & 4) != 0) {\n        var_4h = var_4h | 0x10;\n    }\n    var_18h = 0x423a41;\n    piVar3 = fcn.00418641();\n    if (*piVar3 == 0) {\n        var_30h = NULL;\n    }\n    else {\n        var_18h = &fcn.00423988::arg_8h;\n        var_1ch = 0x423a52;\n        iVar5 = (**0x4593f0)();\n        if (iVar5 == 0) {\n            var_ch = 0;\n            var_18h = 0x423a6f;\n            var_18h = fcn.00418641();\n            var_1ch = &fcn.00423988::var_658h;\n            var_20h = 0x423a7c;\n            fcn.004495f8();\n            var_18h = &fcn.00423988::var_38h;\n            var_1ch = &fcn.00423988::var_ch;\n            var_20h = &fcn.00423988::var_3ch;\n            var_24h = &fcn.00423988::var_658h;\n            var_28h = NULL;\n            var_2ch = NULL;\n            var_30h = arg_8h;\n            var_34h = 0x423a9c;\n            (**(*arg_8h + 0xc))();\n            var_34h = arg_8h;\n            var_38h = 0x423aa5;\n            (**(*arg_8h + 8))();\n            var_30h = var_ch;\n        }\n    }\n    var_2ch = &fcn.00423988::var_248h;\n    var_34h = NULL;\n    var_18h = 0x423ad0;\n    var_18h = fcn.00418641();\n    var_1ch = &fcn.00423988::var_1658h;\n    var_20h = 0x423add;\n    fcn.004495f8();\n    var_28h = &fcn.00423988::var_1658h;\n    var_20h = 0x423ba5;\n    var_18h = 0x423b05;\n    var_18h = fcn.00418641();\n    var_1ch = &fcn.00423988::var_450h;\n    var_20h = 0x423b12;\n    fcn.004495f8();\n    var_24h = var_4h;\n    var_18h = NULL;\n    var_1ch = 0x423b30;\n    puVar4 = (**0x4593e4)();\n    if (puVar4 == NULL) {\n        var_1ch = NULL;\n        var_20h = 0x423b7b;\n        fcn.00421898();\n        var_20h = 0x45bfe0;\n    }\n    else {\n        var_1ch = &fcn.00423988::var_248h;\n        var_20h = 0x423b45;\n        fcn.00418c7e();\n        var_20h = &fcn.00423988::var_248h;\n        var_28h = 0x423b53;\n        var_24h = puVar4;\n        (**0x4593ec)();\n        var_2ch = var_8h;\n        var_30h = 0x423b5d;\n        var_28h = puVar4;\n        (**(*var_8h + 0x14))();\n        if (var_248h == 0) goto code_r0x00423b88;\n        var_20h = &fcn.00423988::var_248h;\n    }\n    var_24h = 0x423b88;\n    fcn.00418c7e();\ncode_r0x00423b88:\n    var_24h = var_8h;\n    var_28h = 0x423b91;\n    (**(*var_8h + 8))();\n    if (var_14h == NULL) {\n        var_1ch = 0x423b9f;\n        (*_sym.imp.ole32.dll_CoUninitialize)();\n    }\n    return 0;\n}\n",
        "token_count": 1612
    },
    "00423bcd": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00423bcd(uint32_t arg_8h, uint arg_ch)\n\n{\n    int16_t *piVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    uint uVar5;\n    uint *puVar6;\n    uint *puVar7;\n    uint var_238h;\n    uint var_38h;\n    int32_t var_34h;\n    int16_t *var_28h;\n    uint var_24h;\n    uint var_1ch;\n    uint var_18h;\n    int16_t *var_14h;\n    uint32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_10h = *(arg_8h + 0xc);\n    arg_8h = 0;\n    var_ch = 0x100;\n    uVar2 = fcn.00418641();\n    var_14h = fcn.004161b7(uVar2);\n    uVar2 = fcn.00418641();\n    var_18h = fcn.004161b7(uVar2);\n    if (2 < var_10h) {\n        arg_8h = fcn.00418733();\n    }\n    piVar1 = var_14h;\n    iVar3 = fcn.004498e1(var_14h, 0x45fdd0, 3);\n    var_34h = 2 - (iVar3 != 0);\n    var_24h = var_18h;\n    var_1ch = 0;\n    if ((*piVar1 == 0) || (var_28h = piVar1,  *piVar1 == 0x2a)) {\n        var_28h = NULL;\n    }\n    if (*piVar1 == 0x2a) {\n        arg_8h = arg_8h | 0x80;\n    }\n    if ((var_10h < 4) || (*0x479bb5 != '\\0')) {\n        puVar4 = &var_8h;\n        puVar7 = &var_ch;\n        puVar6 = &var_238h;\n        uVar2 = 0;\n    }\n    else {\n        if (var_10h != 4) {\n            puVar4 = &var_8h;\n            puVar7 = &var_ch;\n            puVar6 = &var_238h;\n            uVar2 = fcn.00418641(arg_8h, puVar6, puVar7, puVar4);\n            uVar5 = fcn.00418641(uVar2);\n            goto code_r0x00423d28;\n        }\n        puVar4 = &var_8h;\n        puVar7 = &var_ch;\n        puVar6 = &var_238h;\n        uVar2 = fcn.00418641(arg_8h, puVar6, puVar7, puVar4);\n    }\n    uVar5 = 0;\ncode_r0x00423d28:\n    iVar3 = sub.MPR.dll_WNetUseConnectionW(0, &var_38h, uVar5, uVar2, arg_8h, puVar6, puVar7, puVar4);\n    if (iVar3 != 0) {\n        fcn.00418bb9(0);\n        if ((((iVar3 == 5) || (iVar3 == 0x55)) || (iVar3 == 0x4b2)) ||\n           (((iVar3 == 0x4b0 || (iVar3 == 0x43)) || (iVar3 == 0x56)))) {\n            fcn.00421898(0);\n        }\n        else {\n            fcn.00421898(0);\n            fcn.004218c6(0);\n        }\n    }\n    piVar1 = var_14h;\n    if (*var_14h == 0x2a) {\n        if ((var_8h._1_1_ & 1) == 0) {\n            puVar4 = 0x45bfe0;\n        }\n        else {\n            puVar4 = &var_238h;\n        }\n        fcn.00418c7e(puVar4);\n    }\n    fcn.0044951c(piVar1);\n    fcn.0044951c(var_18h);\n    return 0;\n}\n",
        "token_count": 972
    },
    "00425eda": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00425eda(int32_t arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint arg_ch_00;\n    uint arg_8h_00;\n    uint32_t in_ECX;\n    uint32_t var_4h;\n    \n    var_4h = in_ECX & 0xffffff00;\n    if ((2 < *(arg_8h + 0xc)) && (iVar2 = fcn.00418733(),  iVar2 != 0)) {\n        var_4h = CONCAT31(in_ECX >> 8, 1);\n    }\n    arg_ch_00 = fcn.00418641();\n    arg_8h_00 = fcn.00418641();\n    cVar1 = fcn.0041578c(arg_8h_00, arg_ch_00, var_4h);\n    if (cVar1 == '\\0') {\n        fcn.00418bb9(0);\n    }\n    return 0;\n}\n",
        "token_count": 237
    },
    "00426359": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00426359(int32_t arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint arg_ch_00;\n    uint arg_8h_00;\n    uint32_t in_ECX;\n    uint32_t var_4h;\n    \n    var_4h = in_ECX & 0xffffff00;\n    if ((2 < *(arg_8h + 0xc)) && (iVar2 = fcn.00418733(),  iVar2 != 0)) {\n        var_4h = CONCAT31(in_ECX >> 8, 1);\n    }\n    arg_ch_00 = fcn.00418641();\n    arg_8h_00 = fcn.00418641();\n    cVar1 = fcn.004158d2(arg_8h_00, arg_ch_00, var_4h);\n    if (cVar1 == '\\0') {\n        fcn.00418bb9(0);\n    }\n    return 0;\n}\n",
        "token_count": 237
    },
    "00426c6c": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00426c6c(int32_t arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    char cVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint in_ECX;\n    uint *arg_10h;\n    uint *arg_14h;\n    uint *arg_18h;\n    uint *arg_1ch;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = arg_8h;\n    iVar3 = fcn.00421c76();\n    if (iVar3 != 0) {\n        arg_1ch = &arg_8h;\n        arg_18h = &var_4h;\n        arg_14h = &var_8h;\n        arg_10h = &var_ch;\n        uVar4 = fcn.00418641();\n        cVar2 = fcn.004327a9(in_ECX, uVar4, arg_10h, arg_14h, arg_18h, arg_1ch);\n        if (cVar2 == '\\0') {\n            fcn.0041fdea(0x85, 0xffffffff);\n            return 1;\n        }\n    }\n    uVar4 = 0;\n    if (2 < *(iVar1 + 0xc)) {\n        uVar4 = fcn.00418850();\n    }\n    uVar4 = fcn.00418641(uVar4);\n    fcn.00418733(uVar4);\n    uVar4 = fcn.00409e03();\n    fcn.00418bb9(uVar4);\n    return 0;\n}\n",
        "token_count": 368
    },
    "0042702c": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0042702c(int32_t arg_8h, uint arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint arg_ch_00;\n    uint uVar3;\n    float10 fVar4;\n    double dVar5;\n    uint var_10h;\n    uint var_4h;\n    \n    iVar2 = arg_8h;\n    var_4h = 0xffffffff;\n    uVar1 = *(arg_8h + 0xc);\n    fcn.00416d61();\n    arg_8h = 0xffffffff;\n    fcn.00418bb9(0);\n    if (4 < uVar1) {\n        if (*(iVar2 + 0xc) < 5) {\n            iVar2 = iVar2 + 0x18;\n        }\n        else {\n            iVar2 = *(*(iVar2 + 8) + 0x10);\n        }\n        if (*(iVar2 + 8) != 4) goto code_r0x0042711e;\n        fcn.00418661();\n        fcn.00416e71();\n    }\n    if (3 < uVar1) {\n        arg_8h = fcn.00418733();\n    }\n    if (2 < uVar1) {\n        var_4h = fcn.00418733();\n    }\n    uVar3 = var_10h;\n    fVar4 = fcn.00418692();\n    dVar5 = fVar4;\n    arg_ch_00 = fcn.00418733();\n    uVar3 = fcn.004084e1(0x478410, arg_ch_00, SUB84(dVar5, 0), dVar5 >> 0x20, var_4h, uVar3, arg_8h);\n    fcn.00418bb9(uVar3);\ncode_r0x0042711e:\n    fcn.0044951c(var_10h);\n    return 0;\n}\n",
        "token_count": 437
    },
    "004277cd": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004277cd(int32_t arg_8h, uint arg_ch)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    uint arg_ch_00;\n    uint *arg_14h;\n    uint in_stack_ffffffc4;\n    uint in_stack_ffffffc8;\n    uint in_stack_ffffffcc;\n    uint in_stack_ffffffd0;\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    var_10h = 0;\n    var_4h = 0;\n    uVar1 = *(arg_8h + 0xc);\n    var_8h = 1;\n    fcn.00418bb9(0xffffffff);\n    if (3 < uVar1) {\n        fcn.00418733();\n    }\n    if (2 < uVar1) {\n        if (*(arg_8h + 0xc) < 3) {\n            arg_8h = arg_8h + 0x18;\n        }\n        else {\n            arg_8h = *(*(arg_8h + 8) + 8);\n        }\n        fcn.00418a19(arg_8h);\n    }\n    arg_14h = &var_10h;\n    fcn.0041835f();\n    uVar2 = fcn.00418641();\n    arg_ch_00 = fcn.00418733();\n    uVar2 = fcn.00407ab7(0x478410, arg_ch_00, uVar2, arg_14h, in_stack_ffffffc4, in_stack_ffffffc8, in_stack_ffffffcc, \n                         in_stack_ffffffd0);\n    fcn.00418bb9(uVar2);\n    fcn.0041858e();\n    return 0;\n}\n",
        "token_count": 402
    },
    "00427927": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00427927(int32_t arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    uint var_ch;\n    \n    fcn.00416d61();\n    if (2 < *(arg_8h + 0xc)) {\n        fcn.00418661();\n        fcn.00416e71();\n    }\n    fcn.00418641(var_ch);\n    uVar1 = fcn.00418733();\n    uVar1 = fcn.0040867d(0x478410, uVar1);\n    fcn.00418bb9(uVar1);\n    fcn.0044951c(var_ch);\n    return 0;\n}\n",
        "token_count": 152
    },
    "00427a18": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00427a18(int32_t arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint arg_ch_00;\n    uint arg_8h_00;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    arg_8h_00 = 0xffffffff;\n    arg_ch_00 = 0xffffffff;\n    var_10h = 0xffffffff;\n    var_ch = 0xffffffff;\n    var_8h = 0xffffffff;\n    var_4h = 0xffffffff;\n    iVar1 = fcn.00418733();\n    if (iVar1 < 1) {\n        var_4h = 0;\n    }\n    else {\n        if (7 < *(arg_8h + 0xc)) {\n            var_4h = fcn.00418733();\n        }\n        if (6 < *(arg_8h + 0xc)) {\n            var_8h = fcn.00418733();\n        }\n        if (5 < *(arg_8h + 0xc)) {\n            var_ch = fcn.00418733();\n        }\n        if (4 < *(arg_8h + 0xc)) {\n            var_10h = fcn.00418733();\n        }\n        if (3 < *(arg_8h + 0xc)) {\n            arg_ch_00 = fcn.00418733();\n        }\n        if (2 < *(arg_8h + 0xc)) {\n            arg_8h_00 = fcn.00418733();\n        }\n        fcn.00418733();\n        fcn.00418733();\n        fcn.0040c25b(arg_8h_00, arg_ch_00, var_10h, var_ch, var_8h, var_4h);\n    }\n    fcn.00418bb9(var_4h);\n    return 0;\n}\n",
        "token_count": 431
    },
    "00427b36": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00427b36(int32_t arg_8h, uint arg_ch)\n\n{\n    uint arg_ch_00;\n    uint arg_8h_00;\n    uint uVar1;\n    uint var_4h;\n    \n    uVar1 = 0xffffffff;\n    if (4 < *(arg_8h + 0xc)) {\n        fcn.00418733();\n    }\n    if (3 < *(arg_8h + 0xc)) {\n        uVar1 = fcn.00418733();\n    }\n    arg_ch_00 = fcn.00418733();\n    arg_8h_00 = fcn.00418733();\n    fcn.00418733();\n    uVar1 = fcn.00408164(arg_8h_00, arg_ch_00, uVar1);\n    fcn.00418bb9(uVar1);\n    return 0;\n}\n",
        "token_count": 200
    },
    "00427d12": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00427d12(int32_t arg_8h, uint arg_ch)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    char cVar3;\n    uint8_t uVar4;\n    uint uVar5;\n    uint var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    uVar2 = var_4h;\n    var_ch = 0;\n    var_8h = 0;\n    uVar1 = *(arg_8h + 0xc);\n    var_4h = var_4h & 0xffffff00;\n    if ((2 < uVar1) && (cVar3 = fcn.00419b6a(0x28),  cVar3 == '\\0')) {\n        var_ch = fcn.00418641();\n    }\n    if ((3 < uVar1) && (cVar3 = fcn.00419b6a(0x28),  cVar3 == '\\0')) {\n        var_8h = fcn.00418733();\n    }\n    if ((4 < uVar1) && (cVar3 = fcn.00419b6a(0x28),  cVar3 == '\\0')) {\n        uVar4 = fcn.00418733();\n        var_4h = uVar2 & 0xffffff00 | uVar4 & 0xffffff01;\n        fcn.00418733();\n    }\n    uVar5 = fcn.00418641();\n    fcn.00418733();\n    uVar5 = fcn.004083ee(uVar5, var_ch, var_8h, var_4h);\n    fcn.00418bb9(uVar5);\n    return 0;\n}\n",
        "token_count": 390
    },
    "00427edd": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00427edd(int32_t arg_8h, uint arg_ch)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    uint var_4h;\n    \n    uVar1 = *(arg_8h + 0xc);\n    uVar2 = 0;\n    if (2 < uVar1) {\n        fcn.00418733();\n    }\n    if (3 < uVar1) {\n        fcn.00418733();\n    }\n    if (4 < uVar1) {\n        uVar2 = fcn.00418850();\n    }\n    uVar2 = fcn.00418733(uVar2);\n    uVar2 = fcn.00418733(uVar2);\n    uVar2 = fcn.00408d93(uVar2);\n    fcn.00418bb9(uVar2);\n    return 0;\n}\n",
        "token_count": 196
    },
    "0042800d": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0042800d(int32_t arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint uVar3;\n    uint uVar4;\n    char cVar5;\n    \n    if (*(arg_8h + 0xc) < 3) {\n        iVar1 = arg_8h + 0x18;\n    }\n    else {\n        iVar1 = *(*(arg_8h + 8) + 8);\n    }\n    cVar5 = *(iVar1 + 8) == 4;\n    if (*(arg_8h + 0xc) < 4) {\n        arg_8h = arg_8h + 0x18;\n    }\n    else {\n        arg_8h = *(*(arg_8h + 8) + 0xc);\n    }\n    if (*(arg_8h + 8) == 4) {\n        cVar5 = cVar5 + '\\x02';\n    }\n    if (cVar5 == '\\0') {\n        uVar2 = fcn.00418733();\n        uVar3 = fcn.00418733();\n        uVar4 = fcn.00418733();\n        fcn.00418733();\n        uVar2 = fcn.00407286(uVar4, uVar3, uVar2);\n    }\n    else if (cVar5 == '\\x01') {\n        uVar2 = fcn.00418733();\n        uVar3 = fcn.00418641();\n        uVar4 = fcn.00418733();\n        fcn.00418733();\n        uVar2 = fcn.00407286(uVar4, uVar3, uVar2);\n    }\n    else if (cVar5 == '\\x02') {\n        uVar2 = fcn.00418641();\n        uVar3 = fcn.00418733();\n        uVar4 = fcn.00418733();\n        fcn.00418733();\n        uVar2 = fcn.00407286(uVar4, uVar3, uVar2);\n    }\n    else {\n        if (cVar5 != '\\x03') {\n            return 0;\n        }\n        uVar2 = fcn.00418641();\n        uVar3 = fcn.00418641();\n        uVar4 = fcn.00418733();\n        fcn.00418733();\n        uVar2 = fcn.00407286(uVar4, uVar3, uVar2);\n    }\n    fcn.00418bb9(uVar2);\n    return 0;\n}\n",
        "token_count": 573
    },
    "00428224": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint __cdecl fcn.00428224(int32_t arg_8h, uint arg_ch)\n\n{\n    uint32_t uVar1;\n    uint Msg;\n    int32_t iVar2;\n    uint wParam;\n    ushort uStackY8216;\n    uint uStackY68;\n    uint *arg_14h;\n    uint *arg_18h;\n    uint var_14h;\n    uchar *var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_4h = 0x428231;\n    fcn.0044c510();\n    uVar1 = *(arg_8h + 0xc);\n    wParam = 0;\n    arg_8h = 0;\n    if (3 < uVar1) {\n        var_10h = 0x428252;\n        arg_8h = fcn.00418733();\n    }\n    if (2 < uVar1) {\n        var_10h = 0x428270;\n        wParam = fcn.00418733();\n    }\n    uStackY8216 = 0xfff;\n    var_10h = &stack0xffffdfe8;\n    arg_18h = &fcn.00428224::var_8h;\n    arg_14h = &fcn.00428224::var_ch;\n    iVar2 = arg_8h;\n    Msg = fcn.00418733();\n    fcn.00418733();\n    iVar2 = fcn.004072c8(Msg, wParam, iVar2, arg_14h, arg_18h, &fcn.00428224::var_10h, var_10h);\n    if (iVar2 == 0) {\n        fcn.00418bb9();\n        fcn.00421898();\n    }\n    else if (arg_8h == 1) {\n        fcn.00418c7e();\n    }\n    else {\n        fcn.0041a000(1);\n        fcn.0041a132(1);\n        fcn.00418bb9();\n        fcn.0041a132(1);\n        fcn.00418bb9();\n        if (arg_8h == 2) {\n            fcn.0041a132(1);\n            fcn.00418bb9();\n            uStackY68 = 0x42835e;\n            fcn.0041a132(1);\n            fcn.00418bb9();\n        }\n    }\n    return 0;\n}\n",
        "token_count": 626
    },
    "004286c2": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004286c2(int32_t arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    uint uVar2;\n    uint in_ECX;\n    int32_t arg_ch_00;\n    uint *arg_10h;\n    uint *arg_14h;\n    uint *arg_18h;\n    uint *arg_1ch;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    arg_1ch = &var_4h;\n    arg_18h = &var_8h;\n    arg_14h = &arg_8h;\n    arg_10h = &var_ch;\n    uVar2 = fcn.00418641();\n    cVar1 = fcn.004327a9(in_ECX, uVar2, arg_10h, arg_14h, arg_18h, arg_1ch);\n    if (cVar1 == '\\0') {\n        fcn.0041fdea(0x85, 0xffffffff);\n        uVar2 = 1;\n    }\n    else {\n        if (arg_8h < 5) {\n            arg_ch_00 = arg_8h;\n            uVar2 = fcn.00418641();\n            fcn.00418733();\n            fcn.0040d33b(uVar2, arg_ch_00);\n        }\n        else {\n            fcn.00421898(0);\n        }\n        fcn.00418bb9();\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 346
    },
    "004298e5": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004298e5(int32_t arg_8h, uint arg_ch)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    int16_t *piVar3;\n    uint32_t uVar4;\n    uint8_t uVar5;\n    uint8_t uVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    uint var_ch;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    var_8h = 0x10;\n    var_4h = 1;\n    if (*(arg_8h + 0xc) < 3) goto code_r0x004299bb;\n    if (*(arg_8h + 0xc) < 3) {\n        iVar2 = arg_8h + 0x18;\n    }\n    else {\n        iVar2 = *(*(arg_8h + 8) + 8);\n    }\n    if (((*(iVar2 + 8) == 10) && (iVar2 = fcn.00418878(),  iVar2 == 0x28)) || (iVar2 = fcn.00418641(),  iVar2 == 0))\n    goto code_r0x004299bb;\n    piVar3 = fcn.00418641();\n    iVar1 = *piVar3;\n    if (iVar1 == 0x42) {\ncode_r0x004299b4:\n        var_8h = 8;\n    }\n    else {\n        if (iVar1 == 0x44) {\ncode_r0x004299ab:\n            var_8h = 0x20;\n            goto code_r0x004299bb;\n        }\n        if (iVar1 != 0x57) {\n            if (iVar1 == 0x62) goto code_r0x004299b4;\n            if (iVar1 == 100) goto code_r0x004299ab;\n            if (iVar1 != 0x77) {\n                fcn.0041fdea(0x8b, 0xffffffff);\n                return 1;\n            }\n        }\n        var_8h = 0x10;\n    }\ncode_r0x004299bb:\n    if (1 < *(arg_8h + 0xc)) {\n        var_4h = fcn.00418733();\n    }\n    uVar4 = fcn.00418733();\n    uVar5 = var_8h;\n    if (var_8h < 0x20) {\n        uVar7 = -1 << (uVar5 & 0x1f);\n    }\n    else {\n        uVar7 = 0;\n    }\n    for (; var_4h < 0; var_4h = var_4h + var_8h) {\n    }\n    for (; var_8h <= var_4h; var_4h = var_4h - var_8h) {\n    }\n    if (var_4h != 0) {\n        uVar6 = uVar5 - var_4h;\n        uVar8 = (1 << (uVar6 & 0x1f)) - 1;\n        uVar9 = (uVar8 & uVar4) << (var_4h & 0x1f);\n        if (var_8h < 0x20) {\n            uVar9 = uVar9 & (1 << (uVar5 & 0x1f)) - 1U;\n        }\n        if (var_8h < 0x20) {\n            uVar8 = ((1 << (uVar5 & 0x1f)) - uVar8) - 1;\n        }\n        else {\n            uVar8 = ~uVar8;\n        }\n        uVar4 = 0x7fffffff >> (uVar6 - 1 & 0x1f) & (uVar8 & uVar4) >> (uVar6 & 0x1f) | uVar7 & uVar4 | uVar9;\n    }\n    fcn.00418bb9(uVar4);\n    return 0;\n}\n",
        "token_count": 914
    },
    "00429f51": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00429f51(int32_t arg_8h, uint arg_ch)\n\n{\n    double dVar1;\n    int32_t iVar2;\n    float10 fVar3;\n    ulong uVar4;\n    \n    iVar2 = arg_8h;\n    if (*(arg_8h + 0xc) == 1) {\n        arg_8h = 0;\n    }\n    else {\n        arg_8h = fcn.00418733();\n    }\n    fVar3 = fcn.0042a201(*0x462080, arg_8h);\n    dVar1 = fVar3;\n    fVar3 = fcn.00418692();\n    if (fVar3 < *0x462048) {\n        fVar3 = fcn.00418692();\n        fVar3 = fcn.0042a1ad(fVar3 * dVar1 - *0x462090);\n    }\n    else {\n        fVar3 = fcn.00418692();\n        fVar3 = fcn.0042a1d9(fVar3 * dVar1 + *0x462090);\n    }\n    fcn.00418c65(fVar3 / dVar1);\n    if (*(iVar2 + 0xc) == 1) {\n        uVar4 = fcn.004187bd();\n        fcn.00418c2c(uVar4);\n    }\n    return 0;\n}\n",
        "token_count": 314
    },
    "0042b01c": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Removing unreachable block (ram,0x0042b32d)\n// WARNING: Removing unreachable block (ram,0x0042b085)\n// WARNING: Removing unreachable block (ram,0x0042b092)\n// WARNING: Removing unreachable block (ram,0x0042b08d)\n// WARNING: Removing unreachable block (ram,0x0042b097)\n// WARNING: Removing unreachable block (ram,0x0042b0c9)\n// WARNING: Removing unreachable block (ram,0x0042b0d1)\n// WARNING: Removing unreachable block (ram,0x0042b0d6)\n// WARNING: Removing unreachable block (ram,0x0042b0e6)\n// WARNING: Removing unreachable block (ram,0x0042b0fd)\n// WARNING: Removing unreachable block (ram,0x0042b144)\n// WARNING: Removing unreachable block (ram,0x0042b24a)\n// WARNING: Removing unreachable block (ram,0x0042b26a)\n// WARNING: Removing unreachable block (ram,0x0042b2ea)\n// WARNING: Removing unreachable block (ram,0x0042b30f)\n// WARNING: Removing unreachable block (ram,0x0042b314)\n// WARNING: Removing unreachable block (ram,0x0042b319)\n// WARNING: Removing unreachable block (ram,0x0042b160)\n// WARNING: Removing unreachable block (ram,0x0042b1b2)\n// WARNING: Removing unreachable block (ram,0x0042b1c5)\n// WARNING: Removing unreachable block (ram,0x0042b1d2)\n// WARNING: Removing unreachable block (ram,0x0042b214)\n// WARNING: Removing unreachable block (ram,0x0042b22a)\n// WARNING: Removing unreachable block (ram,0x0042b22f)\n// WARNING: Removing unreachable block (ram,0x0042b234)\n// WARNING: Removing unreachable block (ram,0x0042b239)\n// WARNING: Removing unreachable block (ram,0x0042b242)\n// WARNING: Removing unreachable block (ram,0x0042b181)\n// WARNING: Removing unreachable block (ram,0x0042b1aa)\n// WARNING: Removing unreachable block (ram,0x0042b31c)\n// WARNING: Removing unreachable block (ram,0x0042b12c)\n// WARNING: Removing unreachable block (ram,0x0042b277)\n// WARNING: Removing unreachable block (ram,0x0042b2bf)\n// WARNING: Removing unreachable block (ram,0x0042b2c4)\n// WARNING: Removing unreachable block (ram,0x0042b2c9)\n// WARNING: Removing unreachable block (ram,0x0042b2cc)\n// WARNING: Removing unreachable block (ram,0x0042b2ce)\n// WARNING: Removing unreachable block (ram,0x0042b31e)\n// WARNING: Removing unreachable block (ram,0x0042b323)\n// WARNING: Removing unreachable block (ram,0x0042b328)\n// WARNING: Removing unreachable block (ram,0x0042b074)\n// WARNING: Removing unreachable block (ram,0x0042b0ef)\n// WARNING: Removing unreachable block (ram,0x0042b332)\n\nuint __cdecl fcn.0042b01c(uint arg_8h, uint arg_ch)\n\n{\n    uint var_1878h;\n    uint var_1074h;\n    uint var_870h;\n    uint var_6ch;\n    uint var_4ch;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_14h;\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.0044c510();\n    fcn.00418bb9();\n    fcn.00421898();\n    fcn.0043026d();\n    fcn.0041fdea(0x8c, 0xffffffff);\n    return 1;\n}\n",
        "token_count": 1046
    },
    "0042b41e": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0042b5b6)\n// WARNING: Removing unreachable block (ram,0x0042b49f)\n// WARNING: Removing unreachable block (ram,0x0042b43f)\n// WARNING: Removing unreachable block (ram,0x0042b45e)\n// WARNING: Removing unreachable block (ram,0x0042b470)\n// WARNING: Removing unreachable block (ram,0x0042b476)\n// WARNING: Removing unreachable block (ram,0x0042b445)\n// WARNING: Removing unreachable block (ram,0x0042b469)\n// WARNING: Removing unreachable block (ram,0x0042b450)\n// WARNING: Removing unreachable block (ram,0x0042b456)\n// WARNING: Removing unreachable block (ram,0x0042b47c)\n// WARNING: Removing unreachable block (ram,0x0042b486)\n// WARNING: Removing unreachable block (ram,0x0042b489)\n// WARNING: Removing unreachable block (ram,0x0042b4af)\n// WARNING: Removing unreachable block (ram,0x0042b4df)\n// WARNING: Removing unreachable block (ram,0x0042b4e1)\n// WARNING: Removing unreachable block (ram,0x0042b4e6)\n// WARNING: Removing unreachable block (ram,0x0042b4ff)\n// WARNING: Removing unreachable block (ram,0x0042b505)\n// WARNING: Removing unreachable block (ram,0x0042b512)\n// WARNING: Removing unreachable block (ram,0x0042b520)\n// WARNING: Removing unreachable block (ram,0x0042b554)\n// WARNING: Removing unreachable block (ram,0x0042b55a)\n// WARNING: Removing unreachable block (ram,0x0042b563)\n// WARNING: Removing unreachable block (ram,0x0042b56d)\n// WARNING: Removing unreachable block (ram,0x0042b5a1)\n// WARNING: Removing unreachable block (ram,0x0042b5ac)\n// WARNING: Removing unreachable block (ram,0x0042b5b1)\n// WARNING: Removing unreachable block (ram,0x0042b5bb)\n// WARNING: Removing unreachable block (ram,0x0042b5c0)\n// WARNING: Removing unreachable block (ram,0x0042b5c5)\n\nuint32_t __cdecl fcn.0042b41e(uint arg_8h)\n\n{\n    uint32_t uVar1;\n    uint var_38h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_24h;\n    uint hLibModule;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = fcn.00430246();\n    return uVar1 & 0xffffff00;\n}\n",
        "token_count": 649
    },
    "0042b9fa": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0042b9fa(uint32_t arg_8h, uint arg_ch)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint8_t *puVar4;\n    int32_t in_ECX;\n    uint8_t *puVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    double dVar8;\n    uint var_5ch;\n    int32_t var_58h;\n    int32_t var_54h;\n    uint var_50h;\n    int32_t var_4ch;\n    uint32_t var_48h;\n    int32_t var_30h;\n    int32_t var_2ch;\n    int32_t var_20h;\n    int32_t var_1ch;\n    uint uStack28;\n    int32_t var_14h;\n    double dStack28;\n    int32_t var_10h;\n    uint8_t *var_ch;\n    uint8_t *var_8h;\n    int32_t var_4h;\n    uint uVar9;\n    \n    var_10h = 1;\n    if ((4 < *(arg_8h + 0xc)) && (iVar2 = fcn.00418733(),  1 < iVar2)) {\n        var_10h = fcn.00418733();\n    }\n    fcn.0042f346(*(in_ECX + 0x2a4));\n    uVar6 = 0;\n    var_30h = fcn.00418733();\n    var_30h = var_30h + var_20h;\n    var_2ch = fcn.00418733();\n    var_2ch = var_2ch + var_1ch;\n    iVar2 = fcn.00418733();\n    iVar3 = fcn.00418733();\n    iVar7 = ((iVar2 + var_20h) - var_30h) + 1;\n    iVar2 = ((iVar3 + var_1ch) - var_2ch) + 1;\n    var_ch = (*_sym.imp.USER32.dll_GetDC)(0);\n    var_8h = (*_sym.imp.GDI32.dll_CreateCompatibleBitmap)(var_ch, iVar7, iVar2);\n    var_4h = (*_sym.imp.GDI32.dll_CreateCompatibleDC)(var_ch);\n    pcVar1 = _sym.imp.GDI32.dll_SelectObject;\n    var_14h = (*_sym.imp.GDI32.dll_SelectObject)(var_4h, var_8h);\n    (*_sym.imp.GDI32.dll_BitBlt)(var_4h, 0, 0, iVar7, iVar2, var_ch, var_30h, var_2ch, 0xcc0020);\n    (*pcVar1)(var_4h, var_14h);\n    var_54h = -iVar2;\n    var_5ch = 0x28;\n    var_50h._0_2_ = 1;\n    var_50h._2_2_ = 0x18;\n    var_4ch = 0;\n    var_58h = iVar7;\n    (*_sym.imp.GDI32.dll_GetDIBits)(var_4h, var_8h, 0, iVar2, 0, &var_5ch, 0);\n    if (var_4ch != 0) {\n        var_48h = var_48h * 3 >> 1;\n    }\n    dStack28 = CONCAT44(var_48h, uStack28);\n    puVar4 = fcn.00449614(var_48h + 1);\n    iVar2 = (*_sym.imp.GDI32.dll_GetDIBits)(var_4h, var_8h, 0, iVar2, puVar4, &var_5ch, 0);\n    (**0x459108)(var_8h);\n    (*_sym.imp.GDI32.dll_DeleteDC)(var_4h);\n    (*_sym.imp.USER32.dll_ReleaseDC)(0, var_ch);\n    if (iVar2 == 0) {\n        uVar9 = 0;\n        fcn.00418bb9();\n    }\n    else {\n        var_ch._0_2_ = 4 - (iVar7 * 3) % 4;\n        if (var_ch == 4) {\n            var_ch._0_2_ = 0;\n        }\n        iVar2 = iVar7 * var_10h;\n        var_8h = puVar4 + iVar7 * 3;\n        var_4h = var_10h * 3;\n        arg_8h = 1;\n        puVar5 = puVar4;\n        var_ch = puVar4;\n        if (puVar4 < var_8h) {\n            do {\n                var_10h = 0x15ae;\n                do {\n                    iVar3 = arg_8h + puVar5[2];\n                    iVar7 = iVar3 + puVar5[1];\n                    arg_8h = iVar7 + *puVar5;\n                    uVar6 = uVar6 + iVar3 + iVar7 + arg_8h;\n                    puVar5 = puVar5 + iVar2 * 3 + var_ch;\n                    if (puVar4 + var_14h <= puVar5) {\n                        puVar5 = var_ch + var_4h;\n                        var_ch = puVar5;\n                    }\n                    var_10h = var_10h + -3;\n                } while ((var_10h != 0) && (var_ch < var_8h));\n                arg_8h = (arg_8h >> 0x10) * 0xf + (arg_8h & 0xffff);\n                uVar6 = (uVar6 & 0xffff) + (uVar6 >> 0x10) * 0xf;\n            } while (var_ch < var_8h);\n            if (0xfff0 < arg_8h) {\n                arg_8h = arg_8h - 0xfff1;\n            }\n        }\n        uVar6 = (uVar6 >> 0x10) * 0xf + (uVar6 & 0xffff);\n        if (0xfff0 < uVar6) {\n            uVar6 = uVar6 - 0xfff1;\n        }\n        arg_8h = uVar6 << 0x10 | arg_8h;\n        dVar8 = arg_8h;\n        if (arg_8h < 0) {\n            dVar8 = dVar8 + *0x462098;\n        }\n        dStack28 = dVar8;\n        fcn.00418c65(dVar8);\n        uVar9 = dVar8 >> 0x20;\n    }\n    fcn.0044951c(puVar4, uVar9);\n    return 0;\n}\n",
        "token_count": 1523
    },
    "0042c448": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint fcn.0042c448(uint32_t param_1, int32_t param_2)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uchar auStack188 [132];\n    int32_t iStack56;\n    int32_t iStack52;\n    int32_t iStack48;\n    int32_t iStack44;\n    int32_t iStack40;\n    uint32_t uStack36;\n    int32_t *piStack28;\n    uint32_t uStack24;\n    uint32_t uStack20;\n    int32_t iStack16;\n    int32_t iStack12;\n    int32_t *piStack8;\n    \n    pcVar1 = *0x459108;\n    iStack16 = -1;\n    iStack40 = -1;\n    piStack8 = 0x1f4;\n    iStack12 = 400;\n    uStack24 = 0;\n    uStack20 = 0x50000001;\n    uStack36 = 0x88c00000;\n    piStack28 = 0x8;\n    if (*0x4679e4 != 0) {\n        if (*0x4679e8 != 0) {\n            (**0x459108)(*0x4679e8);\n            *0x4679e8 = 0;\n        }\n        if (*0x4679e0 != 0) {\n            (*pcVar1)(*0x4679e0);\n            *0x4679e0 = 0;\n        }\n        (*_sym.imp.USER32.dll_DestroyWindow)(*0x4679e4);\n        *0x4679e4 = 0;\n    }\n    if (param_2 == 2) {\n        return 0;\n    }\n    uVar3 = (*_sym.imp.USER32.dll_GetDesktopWindow)(&iStack56);\n    (*_sym.imp.USER32.dll_GetWindowRect)(uVar3);\n    uVar2 = param_1;\n    if ((2 < param_1) && (iVar4 = fcn.00418733(),  iVar4 != -1)) {\n        piStack8 = fcn.00418733();\n    }\n    if ((3 < uVar2) && (iVar4 = fcn.00418733(),  iVar4 != -1)) {\n        iStack12 = fcn.00418733();\n    }\n    if (4 < uVar2) {\n        iStack16 = fcn.00418733();\n    }\n    if (5 < uVar2) {\n        iStack40 = fcn.00418733();\n    }\n    if ((6 < uVar2) && (iVar4 = fcn.00418733(),  iVar4 != -1)) {\n        uStack24 = fcn.00418733();\n        if (param_2 == 1) {\n            if ((uStack24 & 8) != 0) {\n                uStack20 = 0x50000002;\n            }\n            if ((uStack24 & 4) != 0) {\n                uStack20 = (uStack20 & 2U | 0xa0000001) >> 1;\n            }\n        }\n        if ((uStack24 & 2) != 0) {\n            piStack28 = NULL;\n        }\n        if ((uStack24 & 1) != 0) {\n            uStack36 = 0x88800000;\n        }\n        if ((uStack24 & 0x10) != 0) {\n            uStack36 = uStack36 ^ 0x8000000;\n        }\n    }\n    if (iStack16 == -1) {\n        iStack16 = (iStack48 - piStack8) / 2;\n    }\n    if (iStack40 == -1) {\n        iStack40 = (iStack44 - iStack12) / 2;\n    }\n    (*_sym.imp.USER32.dll_SetRect)(&iStack56, 0, 0, piStack8, iStack12);\n    (*_sym.imp.USER32.dll_AdjustWindowRectEx)(&iStack56, uStack36, 0, piStack28);\n    uVar3 = fcn.00418641(uStack36, iStack16, iStack40, iStack48 - iStack56, iStack44 - iStack52, *0x467a00, 0, 0, 0);\n    *0x4679e4 = (*_sym.imp.USER32.dll_CreateWindowExW)(piStack28, 0x45bea4, uVar3);\n    (*_sym.imp.USER32.dll_GetClientRect)(*0x4679e4, &iStack56);\n    piStack8 = iStack48 - iStack56;\n    iStack12 = iStack44 - iStack52;\n    if (param_2 == 0) {\n        piStack28 = NULL;\n        param_2 = (*_sym.imp.USER32.dll_CreateWindowExW)\n                            (0, 0x45c390, 0, 0x5000000e, 0, 0, piStack8, iStack12, *0x4679e4, 0, 0, 0);\n        uVar3 = fcn.00418641(0x80000000, 0, 0, 3, 0, 0);\n        iVar4 = (**0x4592d8)(uVar3);\n        if (iVar4 == -1) {\n            return 0;\n        }\n        uStack24 = (**0x4592d4)(iVar4, 0);\n        uVar3 = (**0x4592d0)(2, uStack24);\n        uVar5 = (**0x4592cc)(uVar3);\n        (**0x4592c8)(iVar4, uVar5, uStack24, &iStack12, 0);\n        (**0x4592c4)(uVar3);\n        (*_sym.imp.KERNEL32.DLL_CloseHandle)(iVar4);\n        (*_sym.imp.ole32.dll_CreateStreamOnHGlobal)(uVar3, 1, &piStack8);\n        (**0x4593d8)(piStack8, 0, 0, 0x45a7b0, &piStack28);\n        (**(*piStack8 + 8))(piStack8);\n        (**0x4592c0)(uVar3);\n        if (piStack28 == NULL) {\n            return 0;\n        }\n        (**(*piStack28 + 0xc))(piStack28, &param_1);\n        param_1 = (*_sym.imp.USER32.dll_CopyImage)(param_1, 0, 0, 0, 0x2000);\n        (**(*piStack28 + 8))(piStack28);\n        (*_sym.imp.USER32.dll_SendMessageW)(param_2, 0x172, 0, param_1);\n        *0x4679e0 = param_1;\n        (*_sym.imp.USER32.dll_SetWindowPos)(param_2, 0, 0, 0, iStack48 - iStack56, iStack44 - iStack52, 0x20);\n    }\n    else {\n        iStack16 = 0xc;\n        piStack28 = 0x190;\n        uVar3 = fcn.00418641(uStack20, 0, 0, piStack8, iStack12, *0x4679e4, 0, 0, 0);\n        param_2 = (*_sym.imp.USER32.dll_CreateWindowExW)(0, 0x45c390, uVar3);\n        uVar3 = (*_sym.imp.GDI32.dll_CreateDCW)(0x460560, 0, 0, 0);\n        uVar5 = (*_sym.imp.GDI32.dll_GetStockObject)(0x11);\n        (*_sym.imp.GDI32.dll_SelectObject)(uVar3, uVar5);\n        (*_sym.imp.GDI32.dll_GetTextFaceW)(uVar3, 0x40, auStack188);\n        uStack20 = (*_sym.imp.GDI32.dll_GetDeviceCaps)(uVar3, 0x5a);\n        (*_sym.imp.GDI32.dll_DeleteDC)(uVar3);\n        if (7 < param_1) {\n            uVar3 = fcn.00418641();\n            iVar4 = fcn.0044985c(uVar3);\n            if (iVar4 != 0) {\n                uVar3 = fcn.00418641();\n                fcn.004495f8(auStack188, uVar3);\n            }\n        }\n        if ((8 < param_1) && (iVar4 = fcn.00418733(),  5 < iVar4)) {\n            iStack16 = fcn.00418733();\n        }\n        if (((9 < param_1) && (iVar4 = fcn.00418733(),  -1 < iVar4)) && (iVar4 = fcn.00418733(),  iVar4 < 0x3e9)) {\n            piStack28 = fcn.00418733();\n        }\n        *0x4679e8 = (*_sym.imp.GDI32.dll_CreateFontW)\n                              ((uStack20 * iStack16) / -0x48, 0, 0, 0, piStack28, 0, 0, 0, 1, 4, 0, 2, 0, auStack188);\n        (*_sym.imp.USER32.dll_SendMessageW)(param_2, 0x30, *0x4679e8, 1);\n        if ((uStack24 & 0x20) != 0) {\n            param_1 = (*_sym.imp.USER32.dll_GetDC)(param_2);\n            uStack24 = (*_sym.imp.GDI32.dll_SelectObject)(param_1, *0x4679e8);\n            fcn.00418641();\n            fcn.0041633d(param_1);\n            (*_sym.imp.GDI32.dll_SelectObject)(param_1, uStack24);\n            (*_sym.imp.USER32.dll_ReleaseDC)(param_2, param_1);\n            (*_sym.imp.USER32.dll_MoveWindow)(param_2, 0, (iStack12 - piStack28) / 2, piStack8, piStack28, 1);\n        }\n    }\n    (*_sym.imp.USER32.dll_ShowWindow)(*0x4679e4, 4);\n    return 0;\n}\n",
        "token_count": 2330
    },
    "0042cb4d": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0042cb4d(int32_t arg_8h, uint32_t arg_ch, int32_t arg_10h)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    uint uVar3;\n    uint32_t uVar4;\n    uint uVar5;\n    int32_t iVar6;\n    uint lpFaceName;\n    uint var_2ch;\n    int32_t pvParam;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint dwExStyle;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint32_t dwStyle;\n    \n    var_ch = -1;\n    var_8h = -1;\n    dwStyle = 0x88c00000;\n    dwExStyle = 8;\n    fcn.00416d61();\n    if (*0x4679f8 != 0) {\n        (*_sym.imp.USER32.dll_DestroyWindow)(*0x4679f8);\n        *0x4679f8 = 0;\n    }\n    if (arg_10h == 1) {\n        fcn.0044951c(var_2ch);\n    }\n    else {\n        if (2 < arg_ch) {\n            uVar3 = fcn.00418641();\n            fcn.00416e83(&var_2ch, uVar3);\n        }\n        if (3 < arg_ch) {\n            var_ch = fcn.00418733();\n        }\n        if (4 < arg_ch) {\n            var_8h = fcn.00418733();\n        }\n        if (5 < arg_ch) {\n            uVar4 = fcn.00418733();\n            if ((uVar4 & 1) != 0) {\n                dwStyle = 0x88000000;\n            }\n            uVar4 = fcn.00418733();\n            if ((uVar4 & 2) != 0) {\n                dwExStyle = 0;\n            }\n            uVar4 = fcn.00418733();\n            if ((uVar4 & 0x10) != 0) {\n                dwStyle = dwStyle ^ 0x8000000;\n            }\n        }\n        (*_sym.imp.USER32.dll_SystemParametersInfoW)(0x30, 0, &pvParam, 0);\n        if (var_ch == -1) {\n            var_ch = (var_18h + -300) / 2;\n        }\n        if (var_8h == -1) {\n            var_8h = (var_14h + -100) / 2;\n        }\n        (*_sym.imp.USER32.dll_SetRect)(&pvParam, 0, 0, 300, 100);\n        (*_sym.imp.USER32.dll_AdjustWindowRectEx)(&pvParam, dwStyle, 0, dwExStyle);\n        uVar3 = fcn.00418641(dwStyle, var_ch, var_8h, var_18h - pvParam, var_14h - var_1ch, *0x467a00, 0, 0, 0);\n        pcVar2 = _sym.imp.USER32.dll_CreateWindowExW;\n        *0x4679f8 = (*_sym.imp.USER32.dll_CreateWindowExW)(dwExStyle, 0x45bea4, uVar3);\n        (*_sym.imp.USER32.dll_GetClientRect)(*0x4679f8, &pvParam);\n        uVar3 = fcn.00418641(0x50000000, (var_18h - pvParam) + -0x119, 4, 0x500, 0x18, *0x4679f8, 0, 0, 0);\n        *0x4679f0 = (*pcVar2)(0, 0x45c390, uVar3);\n        uVar3 = (*_sym.imp.GDI32.dll_CreateDCW)(0x460560, 0, 0, 0);\n        uVar5 = (*_sym.imp.GDI32.dll_GetStockObject)(0x11);\n        (*_sym.imp.GDI32.dll_SelectObject)(uVar3, uVar5);\n        (*_sym.imp.GDI32.dll_GetTextFaceW)(uVar3, 0x40, &lpFaceName);\n        iVar6 = (*_sym.imp.GDI32.dll_GetDeviceCaps)(uVar3, 0x5a);\n        (*_sym.imp.GDI32.dll_DeleteDC)(uVar3);\n        uVar3 = (*_sym.imp.GDI32.dll_CreateFontW)\n                          ((iVar6 * -10) / 0x48, 0, 0, 0, 600, 0, 0, 0, 1, 4, 0, 2, 0, &lpFaceName);\n        pcVar1 = _sym.imp.USER32.dll_SendMessageW;\n        (*_sym.imp.USER32.dll_SendMessageW)(*0x4679f0, 0x30, uVar3, 1);\n        *0x4679f4 = (*pcVar2)(0x200, 0x46053c, 0, 0x50000001, ((var_18h - pvParam) + -0x104) / 2, 0x1e, 0x104, 0x14, \n                              *0x4679f8, 0, 0, 0);\n        (*pcVar1)(*0x4679f4, 0x401, 0, 0x640000);\n        (*pcVar1)(*0x4679f4, 0x404, 1, 0);\n        *0x4679ec = (*pcVar2)(0, 0x45c390, var_2ch, 0x50000000, (var_18h - pvParam) + -0x118, 0x37, 0x500, 0x32, \n                              *0x4679f8, 0, 0, 0);\n        uVar3 = (*_sym.imp.GDI32.dll_GetStockObject)(0x11, 1);\n        (*pcVar1)(*0x4679ec, 0x30, uVar3);\n        (*_sym.imp.USER32.dll_ShowWindow)(*0x4679f8, 4);\n        fcn.0044951c(var_2ch);\n    }\n    return 0;\n}\n",
        "token_count": 1428
    },
    "0042d07e": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_54h\n// WARNING: Variable defined which should be unmapped: var_5ch\n// WARNING: Variable defined which should be unmapped: var_58h\n// WARNING: Variable defined which should be unmapped: var_60h\n\nuint __cdecl fcn.0042d07e(int32_t arg_8h, uint arg_ch)\n\n{\n    uint16_t uVar1;\n    char cVar2;\n    int32_t iVar3;\n    int16_t *piVar4;\n    uint uVar5;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_40h;\n    uint var_3ch;\n    uint var_30h;\n    uint var_24h;\n    double dStack20;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    iVar3 = *(arg_8h + 0xc);\n    var_8h = iVar3;\n    fcn.0040e5ad();\n    if (iVar3 != 2) {\n        if (iVar3 != 3) {\n            if (iVar3 != 4) {\n                if (iVar3 != 6) {\n                    if (iVar3 != 8) {\n                        if (iVar3 != 9) {\n                            fcn.0041fdea(0x70, 0xffffffff);\n                            uVar5 = 1;\n                            goto code_r0x0042d4de;\n                        }\n                        cVar2 = fcn.00419b6a(0x28);\n                        if (cVar2 == '\\0') {\n                            iVar3 = fcn.00418733();\n                            dStack20 = iVar3;\n                            if (dStack20 < *0x462048 == (dStack20 == *0x462048)) goto code_r0x0042d136;\n                        }\n                        dStack20 = *0x462078;\n                    }\ncode_r0x0042d136:\n                    cVar2 = fcn.00419b6a(0x28);\n                    if (cVar2 == '\\0') {\n                        fcn.00418733();\n                    }\n                    cVar2 = fcn.00419b6a(0x28);\n                    if (cVar2 == '\\0') {\n                        fcn.00418733();\n                    }\n                }\n                iVar3 = fcn.00418733();\n                if (((iVar3 != -1) && (cVar2 = fcn.00419b6a(0x28),  cVar2 == '\\0')) &&\n                   (iVar3 = fcn.00418733(),  -1 < iVar3)) {\n                    fcn.00418733();\n                }\n                iVar3 = fcn.00418733();\n                if (((iVar3 != -1) && (cVar2 = fcn.00419b6a(0x28),  cVar2 == '\\0')) &&\n                   (iVar3 = fcn.00418733(),  -1 < iVar3)) {\n                    fcn.00418733();\n                }\n            }\n            cVar2 = fcn.00419b6a(0x28);\n            if (cVar2 == '\\0') {\n                piVar4 = fcn.00418641();\n                if (*piVar4 != 0) {\n                    fcn.0040f809(*piVar4);\n                    arg_8h = 1;\n                    while( true ) {\n                        iVar3 = fcn.00418641();\n                        uVar1 = *(iVar3 + arg_8h * 2);\n                        if (uVar1 == 0) break;\n                        if (uVar1 < 0x30) {\ncode_r0x0042d3c3:\n                            fcn.00421898(0);\n                            var_30h = 0x45bfe0;\n                            goto code_r0x0042d4d4;\n                        }\n                        if (uVar1 < 0x3a) {\n                            fcn.00418641();\n                            while( true ) {\n                                iVar3 = fcn.00418641();\n                                iVar3 = fcn.0044a199(*(iVar3 + 2 + arg_8h * 2));\n                                if (iVar3 == 0) break;\n                                arg_8h = arg_8h + 1;\n                                fcn.00418641();\n                            }\n                        }\n                        else if ((uVar1 != 0x4d) && (uVar1 != 0x6d)) goto code_r0x0042d3c3;\n                        arg_8h = arg_8h + 1;\n                    }\n                }\n            }\n        }\n        cVar2 = fcn.00419b6a(0x28);\n        if (cVar2 == '\\0') {\n            var_58h = fcn.00418641();\n        }\n        else {\n            var_58h = 0x45bfe0;\n        }\n        fcn.00416e83(&var_30h, var_58h);\n    }\n    cVar2 = fcn.00419b6a(0x28);\n    if (cVar2 == '\\0') {\n        uVar5 = fcn.00418641();\n    }\n    else {\n        uVar5 = 0x45bfe0;\n    }\n    fcn.00416e83(&var_24h, uVar5);\n    cVar2 = fcn.00419b6a(0x28);\n    if (cVar2 == '\\0') {\n        uVar5 = fcn.00418641();\n    }\n    else {\n        uVar5 = *(var_4h + 0x25c);\n    }\n    fcn.00416e83(&var_3ch, uVar5);\n    iVar3 = fcn.0040ea7a(*0x467a08, 0);\n    if (iVar3 != 1) {\n        fcn.00421898(0);\n        var_30h = 0x45bfe0;\n    }\ncode_r0x0042d4d4:\n    fcn.00418c7e(var_30h);\n    uVar5 = 0;\ncode_r0x0042d4de:\n    fcn.0042d4ef();\n    return uVar5;\n}\n",
        "token_count": 1405
    },
    "0042ea6e": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_38h\n// WARNING: Variable defined which should be unmapped: var_34h\n// WARNING: Variable defined which should be unmapped: var_3ch\n// WARNING: Variable defined which should be unmapped: var_44h\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_8h\n\nuint32_t __cdecl fcn.0042ea6e(uint arg_8h, uint arg_ch, uint32_t arg_10h, uint32_t arg_14h, uint32_t arg_18h)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint *extraout_ECX;\n    int32_t iVar6;\n    int32_t extraout_ECX_00;\n    uint *unaff_EBX;\n    int32_t unaff_ESI;\n    uchar auStackY8432 [8192];\n    uint var_ech;\n    uint var_6ch;\n    uint uStackY84;\n    uint var_44h;\n    uint uStack68;\n    uint *var_3ch;\n    uchar *var_38h;\n    uint var_34h;\n    uint arg_ch_00;\n    uint *puVar7;\n    uint var_24h;\n    uint *var_1ch;\n    uint *var_18h;\n    int32_t var_8h;\n    uint *var_4h;\n    \n    var_4h = 0x42ea7b;\n    uVar2 = fcn.0044c510();\n    if (arg_18h != '\\0') {\n        var_18h = &fcn.0042ea6e::var_8h;\n        var_1ch = &fcn.0042ea6e::var_1ch;\n        var_8h = unaff_ESI;\n        var_4h = unaff_EBX;\n        cVar1 = fcn.004327a9(arg_8h, arg_ch, var_1ch, var_18h, &fcn.0042ea6e::arg_18h, &fcn.0042ea6e::var_4h);\n        if (cVar1 != '\\0') {\n            fcn.00417dba();\n            var_4h = extraout_ECX;\n            if ((((extraout_ECX[3] == 2) && ((*(extraout_ECX[2] + 4))[2] == 5)) &&\n                (iVar4 = **(extraout_ECX[2] + 4),  iVar4 != 0)) && (*(iVar4 + 0x20c) == '\\x01')) {\n                fcn.0041835f();\n                var_34h = 0x42eafd;\n                fcn.0041a132(1);\n                arg_ch_00 = 0x45ffc4;\n                uVar3 = fcn.00418641();\n                var_34h = 0x42eb11;\n                iVar4 = fcn.00449521(uVar3, arg_ch_00);\n                if (iVar4 == 0) {\n                    iVar6 = 1;\n                    iVar4 = fcn.0041a1ed();\n                    if (extraout_ECX_00 < iVar4) {\n                        do {\n                            var_34h = 0x42eb32;\n                            fcn.0041a132(1);\n                            fcn.00417dfb();\n                            iVar6 = iVar6 + 1;\n                            iVar4 = fcn.0041a1ed();\n                        } while (iVar6 < iVar4);\n                    }\n                    arg_14h = 0;\n                    var_4h = &fcn.0042ea6e::var_6ch;\n                }\n                fcn.0041858e();\n            }\n            puVar7 = var_4h;\n            if ((arg_18h <= var_4h[3] - arg_14h) && (var_4h[3] - arg_14h <= var_8h)) {\n                var_38h = &stack0xffffdf10;\n                var_34h = 0xfff;\n                var_3ch = 0x42eb96;\n                fcn.0044bc6f(var_38h, 0xfff, 0x45ffbc, arg_ch);\n                fcn.0042eceb();\n                arg_18h = arg_14h;\n                if (arg_14h < puVar7[3]) {\n                    do {\n                        var_3ch = &fcn.0042ea6e::var_ech;\n                        var_34h = 0x45ff90;\n                        var_38h = 0x40;\n                        uStack68 = 0x42ebc4;\n                        fcn.0044bc6f(var_3ch, 0x40, 0x45ff90, arg_18h);\n                        var_34h = 0x42ebd4;\n                        fcn.0040f269();\n                        puVar7 = &fcn.0042ea6e::var_ech;\n                        var_44h = 0x42ebe7;\n                        fcn.00416d81();\n                        var_44h = 0x42ebf3;\n                        fcn.00416b13(puVar7, var_3ch, var_38h, var_34h);\n                        uVar2 = arg_18h;\n                        var_44h = 0xfff;\n                        if (arg_18h == arg_14h) {\n                            uVar3 = 0x45ff8c;\n                        }\n                        else {\n                            uVar3 = 0x45ff84;\n                        }\n                        uStackY84 = 0x42ec18;\n                        fcn.0044a3a1(&stack0xffffdf10, uVar3, 0xfff);\n                        var_44h = 0xfff;\n                        uStackY84 = 0x42ec33;\n                        fcn.0044a3a1(&stack0xffffdf10, &fcn.0042ea6e::var_ech, 0xfff);\n                        arg_18h = uVar2 + 1;\n                    } while (arg_18h < var_4h[3]);\n                }\n                uVar2 = 0;\n                var_38h = &stack0xffffdf10;\n                var_34h = 0x45fdd8;\n                var_3ch = 0x42ec5e;\n                fcn.0044a3a1(var_38h, 0x45fdd8, 0xfff);\n                var_44h = 0x45d544;\n                var_3ch = NULL;\n                var_34h = 0;\n                var_38h = 0x42ec89;\n                fcn.00428899(0, &fcn.0042ea6e::var_44h);\n                if (1 < var_38h) {\n                    var_38h = arg_10h;\n                    var_3ch = &fcn.0042ea6e::var_44h;\n                    uStack68 = arg_8h;\n                    arg_18h = 0;\n                    var_44h = 0x42eca5;\n                    iVar4 = fcn.004327f6();\n                    if (iVar4 != 0) {\n                        var_44h = 0;\n                        fcn.00418bb9();\n                        goto code_r0x0042ecaf;\n                    }\n                }\n                uVar2 = 1;\ncode_r0x0042ecaf:\n                fcn.0042190c();\n                fcn.00416d3d();\n                uVar5 = fcn.00417ddb();\n                return uVar5 & 0xffffff00 | uVar2;\n            }\n            fcn.00417ddb();\n        }\n        uVar2 = fcn.00418bb9();\n    }\n    return uVar2 & 0xffffff00;\n}\n",
        "token_count": 1819
    },
    "0042ee13": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0042ee13(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint in_ECX;\n    uint *puVar2;\n    uint var_28h;\n    uint var_20h;\n    uint32_t var_1ch;\n    uint var_18h;\n    uint var_8h;\n    \n    var_8h = 0xffffffff;\n    var_28h = 0x45d544;\n    var_20h = 0;\n    var_1ch = 0;\n    var_18h = 0;\n    *0x4679c0 = 1;\n    puVar2 = &var_28h;\n    fcn.00418641();\n    iVar1 = fcn.00428899(in_ECX, puVar2);\n    if ((iVar1 == 0) && (1 < var_1ch)) {\n        puVar2 = &var_28h;\n        arg_8h = 0;\n        iVar1 = fcn.00437a3e(puVar2, &arg_8h, arg_ch);\n        if (iVar1 == 0) {\n            *0x4679c0 = 0;\n            goto code_r0x0042eea9;\n        }\n    }\n    *0x4679c0 = 0;\n    fcn.00421898(0);\n    puVar2 = 0x45bfe0;\n    fcn.00418c7e();\ncode_r0x0042eea9:\n    fcn.0042190c(puVar2);\n    return 0;\n}\n",
        "token_count": 354
    },
    "0042eeba": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0042eeba(int32_t arg_8h, uint arg_ch)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint extraout_EDX;\n    int16_t *piVar4;\n    uint in_stack_ffffffb0;\n    uint in_stack_ffffffb4;\n    uint in_stack_ffffffb8;\n    uint in_stack_ffffffc4;\n    uint in_stack_ffffffc8;\n    uint arg_14h;\n    uint *arg_18h;\n    int32_t var_18h;\n    uint32_t var_14h;\n    int16_t *var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    var_8h = 0;\n    var_1h._0_1_ = '\\x01';\n    var_14h = 0;\n    var_10h = fcn.00418641();\n    if (*var_10h != 0x40) {\n        arg_14h = 0x42eefe;\n        iVar2 = fcn.0044b5b5(var_10h, 0x5b);\n        if (iVar2 == 0) {\n            if (*(arg_8h + 0xc) == 3) {\n                uVar3 = fcn.00418733();\n                if ((uVar3 & 1) != 0) {\n                    var_8h = 1;\n                }\n                uVar1 = fcn.00418733();\n                if ((uVar1 & 2) != 0) {\n                    var_8h = 2;\n                }\n                uVar3 = fcn.00418733();\n                if ((uVar3 & 4) != 0) {\n                    var_1h._0_1_ = '\\0';\n                }\n            }\n            arg_18h = &fcn.0042eeba::var_18h;\n            piVar4 = var_10h;\n            fcn.00416d81();\n            fcn.00416b63(piVar4, in_stack_ffffffc4, in_stack_ffffffc8, arg_14h, arg_18h);\n            if (var_18h == 0) {\n                if (var_1h != '\\0') {\n                    piVar4 = var_10h;\n                    fcn.00416d81();\n                    fcn.00416b13(piVar4, in_stack_ffffffb0, in_stack_ffffffb4, in_stack_ffffffb8);\n                    return 0;\n                }\n            }\n            else if ((var_14h & 0x100) == 0) {\n                if (*(arg_8h + 0xc) < 2) {\n                    arg_8h = arg_8h + 0x18;\n                }\n                else {\n                    arg_8h = *(*(arg_8h + 8) + 4);\n                }\n                fcn.00418a19(arg_8h);\n                return 0;\n            }\n            fcn.00421898(0);\n            fcn.00418bb9(extraout_EDX);\n            return 0;\n        }\n    }\n    fcn.00418bb9(0);\n    fcn.00421898(0);\n    return 0;\n}\n",
        "token_count": 759
    },
    "0042f0f6": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0042f0f6(int32_t arg_8h, uint arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    code *pcVar4;\n    int32_t arg_ch_00;\n    int32_t iVar5;\n    uint var_204h;\n    uint var_74h;\n    uint var_50h;\n    int32_t var_4ch;\n    int32_t var_48h;\n    int32_t var_34h;\n    int32_t var_30h;\n    uint var_2ch;\n    int32_t var_28h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_8h;\n    uint var_4h;\n    \n    uVar1 = *(arg_8h + 0xc);\n    var_10h = 0;\n    var_8h = 0;\n    var_28h = 0;\n    var_20h = 0;\n    var_1ch = 0;\n    var_14h = 0;\n    var_2ch = 4000;\n    fcn.00418bb9(0);\n    if ((1 < uVar1) && (iVar2 = fcn.00418733(),  0 < iVar2)) {\n        var_2ch = fcn.00418733();\n    }\n    fcn.00430309();\n    if ((var_8h == 0) || (iVar2 = sub.WSOCK32.dll_WSAStartup(0x101, &var_204h),  iVar2 != 0)) {\ncode_r0x0042f1cb:\n        fcn.00421898(0);\n        if (var_10h != 0) {\n            (*_sym.imp.KERNEL32.DLL_FreeLibrary)(var_10h);\n        }\n        return 0;\n    }\n    uVar3 = fcn.00418641();\n    uVar3 = fcn.00416a25(uVar3);\n    var_30h = sub.WSOCK32.dll_inet_addr(uVar3);\n    var_34h = sub.WSOCK32.dll_gethostbyname(uVar3);\n    fcn.0044951c(uVar3);\n    if (var_34h == 0) goto code_r0x0042f1cb;\n    fcn.00430309();\n    if (((var_8h != 0) && (fcn.00430330(),  var_20h != 0)) && (fcn.00430357(),  var_14h != 0)) {\n        pcVar4 = fcn.004301dd();\n        iVar2 = (*pcVar4)();\n        if (iVar2 != -1) {\n            fcn.00449b00(&var_74h, 0xffffffaa, 0x24);\n            arg_ch_00 = (**0x4592d0)(0x40, 0x40);\n            if (arg_ch_00 != 0) {\n                *(arg_ch_00 + 0x10) = &var_74h;\n                *(arg_ch_00 + 0xc) = 0x24;\n                iVar5 = var_30h;\n                if (var_30h == -1) {\n                    iVar5 = ***(var_34h + 0xc);\n                }\n                pcVar4 = fcn.00430209(iVar2, iVar5, &var_74h, 0x24, 0, arg_ch_00, 0x40, var_2ch);\n                (*pcVar4)();\n                fcn.0044a6b0(&var_50h, arg_ch_00, 0x1c);\n                if (var_4ch == 0) {\n                    if (var_48h == 0) {\n                        var_48h = 1;\n                    }\n                    fcn.00418bb9(var_48h);\n                }\n                else {\n                    fcn.00421898(0);\n                }\n                pcVar4 = fcn.004301f3(iVar2);\n                (*pcVar4)();\n                (**0x4592c0)(arg_ch_00);\n                sub.WSOCK32.dll_WSACleanup();\n                goto code_r0x0042f262;\n            }\n            pcVar4 = fcn.004301f3(iVar2);\n            (*pcVar4)();\n        }\n    }\n    fcn.00421898(0);\ncode_r0x0042f262:\n    pcVar4 = _sym.imp.KERNEL32.DLL_FreeLibrary;\n    if (var_1ch != 0) {\n        (*_sym.imp.KERNEL32.DLL_FreeLibrary)(var_1ch);\n    }\n    if (var_28h != 0) {\n        (*pcVar4)(var_28h);\n    }\n    if (var_10h == 0) {\n        return 0;\n    }\n    (*pcVar4)(var_10h);\n    return 0;\n}\n",
        "token_count": 1118
    },
    "0042f346": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042f346(int32_t arg_8h)\n\n{\n    uint uVar1;\n    uint *unaff_ESI;\n    uint lpRect;\n    uint var_ch;\n    \n    uVar1 = (*_sym.imp.USER32.dll_GetForegroundWindow)();\n    if (arg_8h == 0) {\n        (*_sym.imp.USER32.dll_GetWindowRect)(uVar1, &lpRect);\n        *unaff_ESI = lpRect;\n        unaff_ESI[1] = var_ch;\n    }\n    else {\n        unaff_ESI[1] = 0;\n        *unaff_ESI = 0;\n        if (arg_8h == 2) {\n            (*_sym.imp.USER32.dll_ClientToScreen)(uVar1);\n        }\n    }\n    return;\n}\n",
        "token_count": 178
    },
    "0042f687": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0042f687(int32_t arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    uint hostshort;\n    uint arg_ch_00;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint in_ECX;\n    uint var_10h;\n    \n    hostshort = fcn.00418733();\n    arg_ch_00 = fcn.00418641();\n    cVar1 = fcn.0042f973(in_ECX, arg_ch_00, hostshort);\n    if (cVar1 != '\\0') {\n        iVar2 = sub.WSOCK32.dll_socket(2, 1, 6);\n        if (iVar2 == -1) {\n            sub.WSOCK32.dll_WSAGetLastError(0);\n            fcn.00421898();\n        }\n        else {\n            iVar3 = sub.WSOCK32.dll_connect(iVar2, &var_10h, 0x10);\n            if (iVar3 != 0) {\n                sub.WSOCK32.dll_WSAGetLastError(0);\n                fcn.00421898();\n                sub.WSOCK32.dll_closesocket(iVar2);\n            }\n        }\n    }\n    fcn.00418bb9();\n    return 0;\n}\n",
        "token_count": 279
    },
    "0042f72d": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0042f72d(int32_t arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    uint hostshort;\n    uint arg_ch_00;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint var_18h;\n    uint var_8h;\n    uint var_4h;\n    \n    var_8h = 5;\n    if (2 < *(arg_8h + 0xc)) {\n        var_8h = fcn.00418733();\n    }\n    hostshort = fcn.00418733();\n    arg_ch_00 = fcn.00418641();\n    cVar1 = fcn.0042f973(var_4h, arg_ch_00, hostshort);\n    if (cVar1 != '\\0') {\n        iVar2 = sub.WSOCK32.dll_socket(2, 1, 6);\n        if (iVar2 == -1) {\n            sub.WSOCK32.dll_WSAGetLastError(0);\n            fcn.00421898();\n        }\n        else {\n            iVar3 = sub.WSOCK32.dll_bind(iVar2, &var_18h, 0x10);\n            if ((iVar3 != -1) && (iVar3 = sub.WSOCK32.dll_listen(iVar2, var_8h),  iVar3 == 0)) goto code_r0x0042f7f2;\n            sub.WSOCK32.dll_WSAGetLastError(0);\n            fcn.00421898();\n            sub.WSOCK32.dll_closesocket(iVar2);\n        }\n    }\n    iVar2 = -1;\ncode_r0x0042f7f2:\n    fcn.00418bb9(iVar2);\n    return 0;\n}\n",
        "token_count": 387
    },
    "00430f16": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00430f16(int32_t arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint uVar4;\n    uint var_68h;\n    uint var_58h;\n    int32_t *var_50h;\n    uint var_48h;\n    uint var_3ch;\n    uint var_30h;\n    int32_t var_2ch;\n    uint var_24h;\n    ushort uStack36;\n    uint var_1ch;\n    int32_t var_18h;\n    int32_t *var_14h;\n    int32_t *var_10h;\n    int32_t *var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_18h = *(arg_8h + 0xc);\n    uVar4 = 0;\n    var_8h = fcn.00418641();\n    fcn.00416d61();\n    var_24h = *0x4609c8;\n    uStack36 = *0x4609cc;\n    fcn.00416d61();\n    var_ch = NULL;\n    var_10h = NULL;\n    fcn.00418c7e(0x45bfe0);\n    if (*0x478409 == '\\0') {\n        (*_sym.imp.ole32.dll_OleInitialize)(0);\n        *0x478409 = '\\x01';\n    }\n    iVar2 = fcn.0044985c(var_8h);\n    if (iVar2 == 0) {\n        if (var_18h == 2) {\n            uVar3 = fcn.00418641();\n            uVar3 = fcn.004161b7(uVar3);\n            iVar2 = (*_sym.imp.ole32.dll_CLSIDFromProgID)(uVar3, &fcn.00430f16::var_68h);\n            fcn.0044951c(uVar3);\n            if (iVar2 < 0) goto code_r0x00431025;\n        }\n        iVar2 = (**0x4593dc)(&fcn.00430f16::var_68h, 0, &fcn.00430f16::var_14h);\n        if (-1 < iVar2) {\n            var_58h._0_2_ = 9;\n            iVar2 = (***var_14h)(var_14h, 0x45a910, &fcn.00430f16::var_50h);\n            (**(*var_14h + 8))(var_14h);\n            if (-1 < iVar2) {\n                fcn.00418cde(&fcn.00430f16::var_58h);\n                goto code_r0x00431155;\n            }\n        }\n    }\n    else {\n        cVar1 = fcn.00414fbc(var_8h);\n        if (cVar1 != '\\0') {\n            fcn.00416e83(&fcn.00430f16::var_30h, var_8h);\n            while (iVar2 = fcn.00417258(0x430ff7),  iVar2 != -1) {\n                uVar3 = fcn.00417404(&fcn.00430f16::var_48h, iVar2 + 1);\n                fcn.00416ebe(uVar3);\n                fcn.0044951c(var_48h);\n                fcn.00416f01();\n                fcn.004171ba();\n            }\n            if (var_2ch != 0) {\n                fcn.00416ebe(&fcn.00430f16::var_30h);\n            }\n            var_8h = var_3ch;\n        }\n        iVar2 = (*_sym.imp.ole32.dll_CreateBindCtx)(0, &fcn.00430f16::var_ch);\n        if (-1 < iVar2) {\n            uVar3 = fcn.004161b7(var_8h);\n            iVar2 = (*_sym.imp.ole32.dll_MkParseDisplayName)\n                              (var_ch, uVar3, &fcn.00430f16::var_1ch, &fcn.00430f16::var_10h);\n            fcn.0044951c(uVar3);\n            if (iVar2 < 0) {\n                fcn.00430d6b(var_4h, iVar2, 0, 0);\n                var_50h = var_ch;\n            }\n            else {\n                var_58h._0_2_ = 9;\n                iVar2 = (**(*var_10h + 0x20))(var_10h, var_ch, 0, 0x45a910, &fcn.00430f16::var_50h);\n                if (iVar2 < 0) {\n                    fcn.00430d6b(var_4h, iVar2, 0, 0);\n                }\n                (**(*var_10h + 8))(var_10h);\n                fcn.00418cde(&fcn.00430f16::var_58h);\n                var_50h = var_ch;\n            }\ncode_r0x00431155:\n            (**(*var_50h + 8))(var_50h);\n            goto code_r0x0043115b;\n        }\n    }\ncode_r0x00431025:\n    uVar4 = fcn.00430d6b(var_4h, iVar2, 0, 0);\ncode_r0x0043115b:\n    fcn.0044951c(var_3ch);\n    fcn.0044951c(var_30h);\n    return uVar4;\n}\n",
        "token_count": 1263
    },
    "004314fd": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_58h\n\nuint __cdecl fcn.004314fd(int32_t arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint32_t extraout_EDX;\n    uint uVar5;\n    uint var_58h;\n    uint var_30h;\n    uint uStack48;\n    uint uStack44;\n    uint uStack40;\n    uint var_20h;\n    uint *var_14h;\n    int32_t *var_10h;\n    int32_t *var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_ch = NULL;\n    var_8h = 0;\n    fcn.00417dba();\n    fcn.00416d61();\n    fcn.00418c7e(0x45bfe0);\n    cVar1 = fcn.00419b83();\n    if (cVar1 == '\\0') goto code_r0x00431707;\n    if (extraout_EDX == 0) {\n        piVar2 = arg_8h + 0x18;\n    }\n    else {\n        piVar2 = **(arg_8h + 8);\n    }\n    piVar2 = *(*piVar2 + 8);\n    if ((extraout_EDX < 2) || (iVar3 = fcn.00418733(),  iVar3 < 2)) {\n        iVar3 = (**(*piVar2 + 0x10))(piVar2, 0, 0, &var_ch);\n        if ((-1 < iVar3) && (iVar3 = (**(*var_ch + 0xc))(var_ch, &var_14h),  -1 < iVar3)) {\n            var_30h = *var_14h;\n            uStack48 = var_14h[1];\n            uStack44 = var_14h[2];\n            uStack40 = var_14h[3];\n            (**(*var_ch + 0x4c))(var_ch, var_14h);\n            (**(*var_ch + 8))(var_ch);\n            iVar3 = (*_sym.imp.ole32.dll_StringFromIID)(&var_30h, &var_8h);\n            if (-1 < iVar3) {\n                uVar5 = fcn.004161b7(var_8h);\n                (*_sym.imp.ole32.dll_CoTaskMemFree)(var_8h);\n                fcn.00416e83(&var_20h, 0x460904);\n                fcn.00417064(uVar5);\n                fcn.00430cb0(var_4h, arg_ch, var_20h, 0);\n                fcn.0044951c(uVar5);\n            }\n        }\n        goto code_r0x00431707;\n    }\n    iVar3 = (***piVar2)(piVar2, 0x45a860, &var_10h);\n    if (iVar3 < 0) goto code_r0x00431707;\n    iVar3 = (**(*var_10h + 0x3c))(var_10h, &var_30h);\n    if ((-1 < iVar3) && (iVar3 = (*_sym.imp.ole32.dll_StringFromCLSID)(&var_30h, &var_8h),  iVar3 == 0)) {\n        iVar3 = fcn.004161b7(var_8h);\n        (*_sym.imp.ole32.dll_CoTaskMemFree)(var_8h);\n        if (iVar3 != 0) {\n            fcn.00416e83(&var_20h, 0x460988);\n            fcn.00417064(iVar3);\n            iVar4 = fcn.00418733();\n            if (iVar4 == 2) {\n                uVar5 = 0;\ncode_r0x0043164b:\n                fcn.00430cb0(var_4h, arg_ch, var_20h, uVar5);\n            }\n            else {\n                if (iVar4 == 3) {\n                    uVar5 = 0x460978;\n                    goto code_r0x0043164b;\n                }\n                if (iVar4 != 4) {\n                    uVar5 = 0x46091c;\n                    goto code_r0x0043164b;\n                }\n                fcn.00430cb0(var_4h, arg_ch, var_20h, 0x460958);\n                iVar4 = fcn.00421c76();\n                if (iVar4 == 0) {\n                    uVar5 = 0x46093c;\n                    goto code_r0x0043164b;\n                }\n            }\n            fcn.0044951c(iVar3);\n        }\n    }\n    (**(*var_10h + 8))(var_10h);\ncode_r0x00431707:\n    iVar3 = fcn.00421c76();\n    if (iVar3 == 0) {\n        fcn.00421898(0);\n    }\n    fcn.0044951c(var_20h);\n    fcn.00417ddb();\n    return 0;\n}\n",
        "token_count": 1154
    },
    "00431787": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00431787(int32_t arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    int32_t in_stack_ffffff70;\n    uint *arg_10h;\n    uint uVar7;\n    uint *arg_14h;\n    uint *arg_18h;\n    uint *arg_1ch;\n    uint var_6ch;\n    int32_t *var_64h;\n    uint var_5ch;\n    uint uStack92;\n    uint uStack88;\n    uint uStack84;\n    int32_t var_4ch;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    int32_t *var_30h;\n    int32_t var_2ch;\n    int32_t *var_28h;\n    int32_t *var_24h;\n    uint var_20h;\n    int32_t *var_1ch;\n    int32_t *var_18h;\n    uint32_t var_14h;\n    uint *var_10h;\n    int32_t *var_ch;\n    int32_t *var_8h;\n    uint var_4h;\n    \n    var_4ch = 0;\n    var_44h = 1;\n    var_40h = 0;\n    var_8h = NULL;\n    var_ch = NULL;\n    var_10h = NULL;\n    fcn.00418c7e(0x45bfe0);\n    iVar5 = arg_8h;\n    if (*(arg_8h + 0xc) == 0) {\n        iVar3 = arg_8h + 0x18;\n    }\n    else {\n        iVar3 = **(arg_8h + 8);\n    }\n    if (*(iVar3 + 8) == 8) {\n        if (*(arg_8h + 0xc) == 0) {\n            iVar3 = arg_8h + 0x18;\n        }\n        else {\n            iVar3 = **(arg_8h + 8);\n        }\n        fcn.00418a19(iVar3);\n        cVar1 = fcn.00419b83();\n        if (cVar1 == '\\0') {\n            uVar2 = 1;\n            uVar7 = 0x460798;\ncode_r0x0043192a:\n            in_stack_ffffff70 = 2;\n            goto code_r0x00431802;\n        }\n        piVar4 = *(var_4ch + 8);\n        in_stack_ffffff70 = (***piVar4)(piVar4, 0x45a7f0, &fcn.00431787::var_24h);\n        if (in_stack_ffffff70 < 0) {\ncode_r0x00431b81:\n            uVar2 = 1;\n            uVar7 = 0;\n            goto code_r0x00431802;\n        }\n        if (*(iVar5 + 0xc) == 3) {\n            uVar7 = fcn.00418641();\n            in_stack_ffffff70 = fcn.0043081f(&fcn.00431787::var_5ch, uVar7);\n            piVar4 = var_24h;\n            if (-1 < in_stack_ffffff70) {\ncode_r0x00431b54:\n                in_stack_ffffff70 = (**(*var_24h + 0x10))(var_24h, &fcn.00431787::var_5ch, &fcn.00431787::var_28h);\n                if ((-1 < in_stack_ffffff70) &&\n                   ((var_ch != NULL ||\n                    (in_stack_ffffff70 = fcn.00430960(&fcn.00431787::var_5ch, &fcn.00431787::var_ch), \n                    in_stack_ffffff70 == 0)))) {\n                    arg_8h = fcn.00449614(200);\n                    if (arg_8h == 0) {\n                        piVar4 = NULL;\n                    }\n                    else {\n                        uVar7 = fcn.00418641();\n                        piVar4 = fcn.00417688(var_28h, &fcn.00431787::var_4ch, var_ch, uVar7);\n                    }\n                    if (piVar4 == NULL) {\n                        uVar2 = 1;\n                        uVar7 = 0x4606d8;\n                        in_stack_ffffff70 = 10;\n                    }\n                    else {\n                        in_stack_ffffff70 = (**(*piVar4 + 0x1c))();\n                        if (-1 < in_stack_ffffff70) {\n                            (**(*var_28h + 8))(var_28h);\n                            (**(*var_ch + 8))(var_ch);\n                            goto code_r0x00431c0d;\n                        }\n                        (**(*piVar4 + 8))(piVar4);\n                        uVar2 = 1;\n                        uVar7 = 0;\n                    }\n                    goto code_r0x00431802;\n                }\n                goto code_r0x00431b81;\n            }\ncode_r0x00431b2f:\n            (**(*piVar4 + 8))(piVar4);\n        }\n        else {\n            iVar5 = (***piVar4)(piVar4, 0x45a7d0, &fcn.00431787::var_1ch);\n            if (-1 < iVar5) {\n                var_2ch = (**(*var_1ch + 0x10))(var_1ch, 1, &fcn.00431787::var_5ch);\n                (**(*var_1ch + 8))(var_1ch);\n                if (-1 < var_2ch) goto code_r0x00431b54;\n            }\n            iVar5 = (***piVar4)(piVar4, 0x45a7e0, &fcn.00431787::var_30h);\n            if (((-1 < iVar5) && (iVar5 = (**(*var_30h + 0xc))(var_30h, &fcn.00431787::var_8h),  -1 < iVar5)) &&\n               (iVar5 = (**(*var_8h + 0xc))(var_8h, &fcn.00431787::var_10h),  -1 < iVar5)) {\ncode_r0x00431a97:\n                iVar5 = 0;\n                if (*(var_10h + 0xc) != 0) {\n                    do {\n                        iVar3 = (**(*var_8h + 0x24))(var_8h, iVar5, &fcn.00431787::var_20h);\n                        if (((-1 < iVar3) && ((var_20h & 1) != 0)) &&\n                           (((var_20h & 2) != 0 &&\n                            ((iVar3 = (**(*var_8h + 0x20))(var_8h, iVar5, &fcn.00431787::var_34h),  -1 < iVar3 &&\n                             (iVar3 = (**(*var_8h + 0x38))(var_8h, var_34h, &fcn.00431787::var_ch),  -1 < iVar3))))))\n                        break;\n                        iVar5 = iVar5 + 1;\n                    } while (iVar5 < *(var_10h + 0xc));\n                }\n                (**(*var_8h + 0x4c))(var_8h, var_10h);\n                (**(*var_8h + 8))(var_8h);\n                if (var_ch == NULL) {\n                    uVar2 = 1;\n                    uVar7 = 0x460720;\n                    in_stack_ffffff70 = 7;\n                    goto code_r0x00431802;\n                }\n                in_stack_ffffff70 = (**(*var_ch + 0xc))(var_ch, &fcn.00431787::var_10h);\n                piVar4 = var_ch;\n                if (-1 < in_stack_ffffff70) {\n                    var_5ch = *var_10h;\n                    uStack92 = var_10h[1];\n                    uStack88 = var_10h[2];\n                    uStack84 = var_10h[3];\n                    (**(*var_ch + 0x4c))(var_ch, var_10h);\n                    goto code_r0x00431b54;\n                }\n                goto code_r0x00431b2f;\n            }\n            (**(*piVar4 + 0x10))(piVar4, 0, 0, &fcn.00431787::var_ch);\n            in_stack_ffffff70 = (**(*var_ch + 0x48))(var_ch, &fcn.00431787::var_18h, &fcn.00431787::var_14h);\n            (**(*var_ch + 8))(var_ch);\n            var_ch = NULL;\n            uVar6 = (**(*var_18h + 0xc))(var_18h);\n            var_14h = 0;\n            if (uVar6 != 0) {\n                do {\n                    in_stack_ffffff70 = (**(*var_18h + 0x10))(var_18h, var_14h, &fcn.00431787::var_8h);\n                    if (in_stack_ffffff70 < 0) break;\n                    in_stack_ffffff70 = (**(*var_8h + 0xc))(var_8h, &fcn.00431787::var_10h);\n                    if (in_stack_ffffff70 < 0) {\n                        (**(*var_8h + 8))(var_8h);\n                        break;\n                    }\n                    if (var_10h[10] == 5) break;\n                    (**(*var_8h + 0x4c))(var_8h, var_10h);\n                    (**(*var_8h + 8))(var_8h);\n                    var_14h = var_14h + 1;\n                    in_stack_ffffff70 = -0x7fffbffb;\n                } while (var_14h < uVar6);\n            }\n            (**(*var_18h + 8))(var_18h);\n            if (-1 < in_stack_ffffff70) goto code_r0x00431a97;\n        }\n        uVar2 = 1;\n        uVar7 = 0;\n    }\n    else {\n        uVar2 = fcn.00418641(0x4608e8);\n        uVar7 = 0x4317f4;\n        iVar3 = fcn.00449703(uVar2);\n        if (iVar3 == 0) {\n            if (*(iVar5 + 0xc) == 1) {\n                if ((*0x478408 != '\\0') && (*0x478404 != NULL)) {\n                    fcn.00418c7e((*0x478404)[0xc]);\n                }\n            }\n            else {\n                if ((*0x478408 != '\\0') && (*0x478404 != NULL)) {\n                    uVar2 = 0x460838;\n                    goto code_r0x0043192a;\n                }\n                arg_1ch = &fcn.00431787::arg_8h;\n                arg_18h = &fcn.00431787::var_2ch;\n                arg_14h = &fcn.00431787::var_38h;\n                arg_10h = &fcn.00431787::var_3ch;\n                uVar7 = fcn.00418641();\n                cVar1 = fcn.004327a9(var_4h, uVar7, arg_10h, arg_14h, arg_18h, arg_1ch);\n                if (cVar1 == '\\0') {\n                    fcn.00421898(0);\n                    goto code_r0x00431c2f;\n                }\n                arg_8h = fcn.00449614(200);\n                if (arg_8h == 0) {\n                    piVar4 = NULL;\n                }\n                else {\n                    uVar7 = fcn.00418641();\n                    piVar4 = fcn.00417688(0, 0, 0, uVar7);\n                }\n                if (piVar4 == NULL) {\n                    uVar2 = 1;\n                    uVar7 = 0x4607f0;\n                    in_stack_ffffff70 = 0x13;\n                    goto code_r0x00431802;\n                }\n                *0x478408 = '\\x01';\n                *0x478404 = piVar4;\ncode_r0x00431c0d:\n                var_6ch._0_2_ = 9;\n                var_64h = piVar4;\n                fcn.00418cde(&fcn.00431787::var_6ch);\n                (**(*piVar4 + 8))(piVar4);\n                *0x478400 = 1;\n            }\ncode_r0x00431c2f:\n            uVar7 = 0;\n            goto code_r0x00431c31;\n        }\n        uVar2 = 0x4608b0;\n        uVar7 = 1;\n    }\ncode_r0x00431802:\n    uVar7 = fcn.00430d6b(var_4h, in_stack_ffffff70, uVar7, uVar2);\ncode_r0x00431c31:\n    fcn.0041858e();\n    return uVar7;\n}\n",
        "token_count": 3008
    },
    "00431c42": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00431c42(uint arg_8h, int16_t **arg_ch, int32_t arg_10h)\n\n{\n    int32_t *piVar1;\n    int16_t *piVar2;\n    code *pcVar3;\n    char cVar4;\n    int32_t *in_EAX;\n    int32_t iVar5;\n    uint uVar6;\n    uint var_94h;\n    uint pvarg;\n    int32_t *var_6ch;\n    uint var_64h;\n    int32_t *var_5ch;\n    uint var_50h;\n    int32_t var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uchar var_18h;\n    uchar var_17h;\n    uchar var_16h;\n    uchar var_15h;\n    uchar var_14h;\n    uchar var_13h;\n    uchar var_12h;\n    uchar var_11h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    \n    var_10h = 0;\n    var_28h = 0x4606c4;\n    var_24h = 0x4606a8;\n    var_4ch = 0;\n    var_48h = 0;\n    var_44h = 0;\n    var_40h = 0;\n    var_20h = 0x20404;\n    var_1ch._0_2_ = 0;\n    var_1ch._2_2_ = 0;\n    var_18h = 0xc0;\n    var_17h = 0;\n    var_16h = 0;\n    var_15h = 0;\n    var_14h = 0;\n    var_13h = 0;\n    var_12h = 0;\n    var_11h = 0x46;\n    fcn.00449b00(&var_94h, 0, 0x20);\n    if (((in_EAX == NULL) || (arg_10h == 0)) || (arg_ch == NULL)) {\ncode_r0x00431e9b:\n        uVar6 = 0x460658;\n    }\n    else {\n        cVar4 = fcn.00419b83();\n        if (cVar4 == '\\0') {\n            if (((*in_EAX == 0) || (in_EAX[2] != 8)) || (piVar1 = *(*in_EAX + 8),  piVar1 == NULL)) {\n                uVar6 = 0x460658;\n                iVar5 = 2;\n                goto code_r0x00431ea6;\n            }\n            iVar5 = (**(*piVar1 + 0x14))(piVar1, 0x45a940, &var_28h, 1, 0x400, &var_8h);\n            if (((iVar5 < 0) || (var_8h == -1)) &&\n               ((iVar5 = (**(*piVar1 + 0x14))(piVar1, 0x45a940, &var_24h, 1, 0x400, &var_8h),  iVar5 < 0 ||\n                (var_8h == -1)))) {\n                var_8h = -4;\n            }\n            var_4ch = fcn.00449614(0x10);\n            var_44h = 0;\n            var_ch = var_4ch;\n            (**0x4593d4)(&pvarg);\n            iVar5 = (**(*piVar1 + 0x18))(piVar1, var_8h, 0x45a940, 0x800, 3, &var_4ch, &pvarg, &var_94h, &var_50h);\n            fcn.0044951c(var_ch);\n            if (iVar5 < 0) {\n                uVar6 = 0;\n                if (iVar5 == -0x7ffdfff7) {\n                    iVar5 = -0x7ffdfff7;\n                }\n                goto code_r0x00431ea6;\n            }\n            if (var_6ch == NULL) goto code_r0x00431e9b;\n            var_64h._0_2_ = 0xd;\n            iVar5 = (***var_6ch)(var_6ch, &var_20h, &var_5ch);\n            (**(*var_6ch + 8))(var_6ch);\n            if (var_5ch == NULL) {\n                uVar6 = 0;\n                goto code_r0x00431ea6;\n            }\n            (**(*var_5ch + 0x14))(var_5ch);\n            fcn.00418cde(&var_64h);\n            (**(*var_5ch + 8))(var_5ch);\n        }\n        piVar2 = *arg_ch;\n        if (piVar2 == NULL) goto code_r0x00431e9b;\n        if (*piVar2 == 0xd) {\n            piVar1 = *(piVar2 + 4);\n            (**0x4593d4)(&var_3ch);\n            pcVar3 = *0x4593cc;\n            (**0x4593cc)(&var_3ch);\n            var_ch = (**(*piVar1 + 0xc))(piVar1, 1, &var_3ch, &var_10h);\n            if ((-1 < var_ch) || (var_ch == 1)) {\n                if ((var_10h == 0) || (var_ch == 1)) {\n                    var_3ch._0_2_ = 1;\n                    fcn.00418bb9(0);\n                }\n                fcn.00418cde(&var_3ch);\n                (*pcVar3)(&var_3ch);\n                return 0;\n            }\n            fcn.00418bb9(0);\n            uVar6 = 0;\n            iVar5 = var_ch;\n            goto code_r0x00431ea6;\n        }\n        uVar6 = 0x460608;\n    }\n    iVar5 = 1;\ncode_r0x00431ea6:\n    uVar6 = fcn.00430d6b(arg_8h, iVar5, uVar6, 1);\n    return uVar6;\n}\n",
        "token_count": 1466
    },
    "00433622": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00433622(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    uint uVar5;\n    uint var_64h;\n    uint var_3ch;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_14h;\n    uint var_10h;\n    uint var_8h;\n    \n    fcn.00417dba();\n    var_1ch = 0;\n    var_14h = 1;\n    var_10h = 0;\n    var_3ch = 0;\n    var_34h = 1;\n    var_30h = 0;\n    var_2ch = 0;\n    var_24h = 1;\n    var_20h = 0;\n    var_8h = 0x45bfe0;\n    fcn.00418a19(arg_10h);\n    while( true ) {\n        iVar2 = fcn.0040f269();\n        if (*(iVar2 + 8) != 9) {\n            fcn.00417eaa();\n            iVar2 = *in_EAX;\n            iVar3 = fcn.0040f269();\n            if (*(iVar3 + 8) == 8) {\n                var_8h = 0x45bfe0;\n                *in_EAX = iVar2 + -1;\n            }\n            else {\n                puVar4 = fcn.0040f269();\n                var_8h = *puVar4;\n            }\n        }\n        iVar2 = *in_EAX;\n        iVar3 = fcn.0040f269();\n        if (*(iVar3 + 8) == 8) {\n            iVar2 = fcn.00432206(arg_8h, &var_64h);\n            if (iVar2 != 0) goto code_r0x00433788;\n        }\n        else {\n            *in_EAX = iVar2 + 1;\n        }\n        iVar2 = fcn.0040f269();\n        if (*(iVar2 + 8) == 2) break;\n        iVar2 = fcn.004321d4(arg_8h, &var_1ch, var_8h, &var_64h);\n        if (iVar2 != 0) goto code_r0x00433788;\n        fcn.00418bb9(0);\n        cVar1 = fcn.00419b83();\n        if (cVar1 == '\\0') {\ncode_r0x00433815:\n            uVar5 = 0;\n            goto code_r0x0043378b;\n        }\n        fcn.00418a19(&var_2ch);\n        fcn.00418bb9();\n        iVar2 = *in_EAX;\n        iVar3 = fcn.0040f269();\n        if (*(iVar3 + 8) == 0xf) goto code_r0x00433815;\n        iVar3 = fcn.0040f269();\n        if (*(iVar3 + 8) == 2) {\n            *in_EAX = iVar2 + -1;\n        }\n        else {\n            iVar2 = fcn.0040f269();\n            if (*(iVar2 + 8) != 0x21) {\n                fcn.0041ffd0(0x72, 0x460ac0);\ncode_r0x00433788:\n                uVar5 = 1;\ncode_r0x0043378b:\n                fcn.0041858e();\n                fcn.0041858e();\n                fcn.0041858e();\n                fcn.00417ddb();\n                return uVar5;\n            }\n        }\n    }\n    *in_EAX = *in_EAX + 1;\n    iVar2 = fcn.00437a3e(arg_ch, in_EAX, &var_3ch);\n    if (iVar2 != 0) goto code_r0x00433788;\n    iVar2 = fcn.0040f269();\n    if (*(iVar2 + 8) == 0xf) {\n        fcn.00417dfb(&var_3ch);\n        uVar5 = fcn.00432179(arg_8h, var_8h);\n        goto code_r0x0043378b;\n    }\n    iVar2 = fcn.0040f269();\n    fcn.0041fdea(0x72, *(iVar2 + 0xc));\n    goto code_r0x00433788;\n}\n",
        "token_count": 1039
    },
    "00435d86": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00435d86(int32_t param_1)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    uint unaff_EDI;\n    uint in_stack_ffffffe0;\n    uint in_stack_ffffffe4;\n    \n    if (*(param_1 + 0x284) == 1) {\n        fcn.0040f269();\n    }\n    else {\n        *in_EAX = *in_EAX + 1;\n        iVar1 = fcn.0040f269();\n        if ((*(iVar1 + 8) != 0xf) && (iVar1 = fcn.00437a3e(unaff_EDI, in_EAX, param_1 + 0x340),  iVar1 != 0)) {\n            return;\n        }\n        iVar1 = fcn.0040f269();\n        if (*(iVar1 + 8) == 0xf) {\n            *(param_1 + 0x296) = *(param_1 + 0x296) | 1;\n            return;\n        }\n        iVar1 = fcn.0040f269();\n        in_stack_ffffffe4 = *(iVar1 + 0xc);\n        in_stack_ffffffe0 = 0x72;\n    }\n    fcn.0041fdea(in_stack_ffffffe0, in_stack_ffffffe4);\n    return;\n}\n",
        "token_count": 304
    },
    "0043828a": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0043828a(uint arg_8h, int32_t *arg_ch)\n\n{\n    double dVar1;\n    int32_t iVar2;\n    char cVar3;\n    int32_t *piVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint uVar7;\n    float10 fVar8;\n    uint var_18h;\n    uint var_10h;\n    uint var_ch;\n    double dStack12;\n    \n    uVar7 = 1;\n    piVar4 = fcn.004388ea();\n    iVar2 = *piVar4;\n    if (((iVar2 == 10) || (iVar2 == 0x10)) || (iVar2 == 0x11)) {\n        if (*arg_ch < 1) goto code_r0x004387bd;\n    }\n    else if (*arg_ch < 2) goto code_r0x004387bd;\n    // switch table (17 cases) at 0x4387ce\n    switch(iVar2) {\n    case 0:\n        uVar7 = fcn.004388ea();\n        fcn.00418a19(uVar7);\n        fcn.004388d0();\n        fcn.004388ea();\n        goto code_r0x00438305;\n    case 1:\n        uVar7 = fcn.004388ea();\n        fcn.00418a19(uVar7);\n        fcn.004388d0();\n        fcn.004388ea();\ncode_r0x00438305:\n        fcn.0041996d();\ncode_r0x004383af:\n        fcn.004388ea();\n        fcn.00418bb9();\n        break;\n    case 2:\n        uVar7 = fcn.004388ea();\n        fcn.00418a19(uVar7);\n        fcn.004388d0();\n        fcn.004388ea();\n        goto code_r0x0043838d;\n    case 3:\n        uVar7 = fcn.004388ea();\n        fcn.00418a19(uVar7);\n        fcn.004388d0();\n        fcn.004388ea();\ncode_r0x0043838d:\n        cVar3 = fcn.0041996d();\n        if (cVar3 == '\\0') {\n            fcn.004388ea();\n            fcn.0041974a();\n        }\n        goto code_r0x004383af;\n    case 4:\n        uVar7 = fcn.004388ea();\n        fcn.00418a19(uVar7);\n        fcn.004388d0();\n        fcn.004388ea();\n        fcn.0041974a();\n        goto code_r0x004384e6;\n    case 5:\n        uVar7 = fcn.004388ea();\n        fcn.00418a19(uVar7);\n        fcn.004388d0();\n        fcn.004388ea();\n        fcn.0041974a();\n        goto code_r0x004384e6;\n    case 6:\n        uVar7 = fcn.004388ea();\n        fcn.00418a19(uVar7);\n        fcn.004388d0();\n        fcn.004388ea();\n        fcn.0041993a();\n        goto code_r0x004384e6;\n    case 7:\n        uVar7 = fcn.004388ea();\n        fcn.00418a19(uVar7);\n        fcn.004388d0();\n        fcn.004388ea();\n        fcn.00419a0e();\n        goto code_r0x004384e6;\n    case 8:\n        uVar7 = fcn.004388ea();\n        fcn.00418a19(uVar7);\n        fcn.004388d0();\n        fcn.004388ea();\n        fcn.00419a2a();\n        goto code_r0x004384e6;\n    case 9:\n        uVar7 = fcn.004388ea();\n        fcn.00418a19(uVar7);\n        fcn.004388d0();\n        fcn.004388ea();\n        fcn.00419ea4();\n        break;\n    case 10:\n        fcn.004388ea();\n        fcn.004195bc();\ncode_r0x004384e6:\n        fcn.004388ea();\n        fcn.0041923e();\n        break;\n    case 0xb:\n        uVar7 = fcn.004388ea();\n        fcn.00418a19(uVar7);\n        fcn.004388d0();\n        fcn.004388ea();\n        fcn.004192a2();\n        break;\n    case 0xc:\n        uVar7 = fcn.004388ea();\n        fcn.00418a19(uVar7);\n        fcn.004388d0();\n        fcn.004388ea();\n        fcn.004193f0();\n        break;\n    case 0xd:\n        uVar7 = fcn.004388ea();\n        fcn.00418a19(uVar7);\n        fcn.004388d0();\n        goto code_r0x00438585;\n    case 0xe:\n        uVar7 = fcn.004388ea();\n        fcn.00418a19(uVar7);\n        fcn.004388d0();\n        fcn.004388ea();\n        fcn.00419578();\n        break;\n    case 0xf:\n        uVar7 = fcn.004388ea();\n        fcn.00418a19(uVar7);\n        fcn.004388d0();\n        uVar5 = fcn.00419aae();\n        fcn.004388ea();\n        uVar6 = fcn.00419aae();\n        if ((uVar5 & 0x40060) == 0) {\n            if (((uVar6 & 0x40060) == 0) || ((uVar5 & 0x701f8) == 0)) {\n                if (((uVar5 & 0x204) == 0) || ((uVar6 & 0x701f8) == 0)) {\n                    if (((uVar6 & 0x204) == 0) || ((uVar5 & 0x701f8) == 0)) {\n                        if (((uVar6 & 0x10038) == 0) || ((uVar5 & 0xffff0000) == 0)) {\n                            fVar8 = fcn.00418692();\n                            fcn.004388ea(fVar8);\n                            fVar8 = fcn.00418692();\n                            fVar8 = fcn.0042a201(fVar8);\n                        }\n                        else {\n                            fVar8 = fcn.00418692();\n                            fcn.004388ea(fVar8);\n                            fVar8 = fcn.00418692();\n                            fVar8 = fcn.0042a23e(fVar8);\n                            fVar8 = fcn.0042a201(fVar8);\n                            dStack12 = fVar8;\n                            if ((uVar5 & 0x100000) == 0) goto code_r0x0043879d;\n                            fcn.00418c65(*0x462078);\n                            fVar8 = fcn.00418692();\n                            fVar8 = fVar8 * dStack12;\n                        }\n                        goto code_r0x0043879a;\n                    }\n                    if (((uVar6 & 0x200) == 0) && ((uVar5 & 0x100000) != 0)) {\n                        if ((uVar5 & 0x10000) != 0) goto code_r0x00438706;\n                        goto code_r0x004386ed;\n                    }\n                    uVar5 = uVar5 & 0x10038;\n                }\n                else {\n                    fcn.004388ea();\n                    fVar8 = fcn.00418692();\n                    fVar8 = fcn.0044c02c(SUB84(fVar8, 0), fVar8 >> 0x20);\n                    dVar1 = fVar8;\n                    if (dVar1 < *0x462040) {\n                        uVar5 = uVar5 & 0x200;\n                    }\n                    else {\n                        if (((dVar1 < *0x462040) << 8 | (dVar1 == *0x462040) << 0xe) != 0) {\n                            fVar8 = *0x465450 * *0x462048;\n                            goto code_r0x0043879a;\n                        }\n                        uVar5 = uVar5 & 0x200;\n                    }\n                }\njoined_r0x00438700:\n                if (uVar5 == 0) {\n                    fVar8 = *0x465450;\n                }\n                else {\ncode_r0x00438706:\n                    fVar8 = 0;\n                }\n                goto code_r0x0043879a;\n            }\n            if ((uVar5 & 0x100000) == 0) {\n                uVar5 = uVar5 & 0x10038;\n                goto joined_r0x00438700;\n            }\n            if ((uVar5 & 0x10000) == 0) {\n                dStack12 = 0.0;\n                if ((uVar6 & 0x20) == 0) goto code_r0x0043879d;\n                goto code_r0x00438706;\n            }\n            dStack12 = *0x465450;\n            if ((uVar6 & 0x20) != 0) {\ncode_r0x004386ed:\n                fVar8 = -*0x465450;\n                goto code_r0x0043879a;\n            }\n        }\n        else {\n            fVar8 = 1;\ncode_r0x0043879a:\n            dStack12 = fVar8;\n        }\ncode_r0x0043879d:\n        fcn.004388ea(dStack12);\n        fcn.00418c65();\n        break;\n    case 0x10:\n        fcn.00418bb9(0xffffffff);\ncode_r0x00438585:\n        fcn.004388ea();\n        fcn.004194be();\n    }\n    fcn.004366eb();\n    uVar7 = 0;\ncode_r0x004387bd:\n    fcn.0041858e();\n    return uVar7;\n}\n",
        "token_count": 2306
    },
    "00438b6e": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Removing unreachable block (ram,0x00438bc1)\n\nuint __cdecl fcn.00438b6e(int32_t arg_8h)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint var_8h;\n    uint var_1h;\n    \n    iVar3 = arg_8h;\n    uVar2 = fcn.00418641(&arg_8h);\n    cVar1 = fcn.00414778(uVar2);\n    if (cVar1 == '\\0') {\n        fcn.0041fdea(0x88, 0xffffffff);\n        uVar2 = 1;\n    }\n    else {\n        uVar2 = fcn.00418733();\n        if (((1 < *(iVar3 + 0xc)) && (iVar3 = fcn.00418733(),  iVar3 != 0)) &&\n           (iVar3 = fcn.0043ca29(uVar2),  iVar3 != 0)) {\n            fcn.00417f34();\n        }\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 266
    },
    "0043964a": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0043964a(uint arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.00418bb9(0);\n    fcn.00421898(0);\n    uVar1 = fcn.00418641(&var_8h);\n    fcn.00414778(uVar1);\n    if (arg_8h._3_1_ == '\\0') {\n        return 0;\n    }\n    uVar1 = 0x200;\n    iVar2 = (*_sym.imp.KERNEL32.DLL_OpenProcess)(0x200, 0, var_8h);\n    if (iVar2 == 0) {\n        return 0;\n    }\n    iVar3 = fcn.00418733();\n    if (iVar3 == 0) {\n        uVar1 = 0x40;\ncode_r0x00439727:\n        (**0x459228)(iVar2, uVar1);\n        fcn.00418bb9(1);\n        uVar1 = 0;\n    }\n    else {\n        if (iVar3 != 1) {\n            if (iVar3 == 2) {\n                uVar1 = 0x20;\n            }\n            else if (iVar3 == 3) {\n                if ((*0x479bb5 != '\\0') || (*0x479bc6 != '\\0')) goto code_r0x0043973e;\n                uVar1 = 0x8000;\n            }\n            else if (iVar3 == 4) {\n                uVar1 = 0x80;\n            }\n            else {\n                if (iVar3 != 5) goto code_r0x00439746;\n                uVar1 = 0x100;\n            }\n            goto code_r0x00439727;\n        }\n        if ((*0x479bb5 == '\\0') && (*0x479bc6 == '\\0')) {\n            uVar1 = 0x4000;\n            goto code_r0x00439727;\n        }\n    }\ncode_r0x0043973e:\n    fcn.00421898(uVar1);\ncode_r0x00439746:\n    (*_sym.imp.KERNEL32.DLL_CloseHandle)(iVar2);\n    return 0;\n}\n",
        "token_count": 518
    },
    "0043ae88": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0043ae88(int32_t arg_8h, uint arg_ch)\n\n{\n    uint32_t in_ECX;\n    uint arg_10h;\n    uint32_t var_4h;\n    \n    arg_10h = 0;\n    var_4h = in_ECX & 0xffffff00;\n    if (3 < *(arg_8h + 0xc)) {\n        var_4h = CONCAT31(in_ECX >> 8, 1);\n        arg_10h = fcn.00418733();\n    }\n    if (*(arg_8h + 0xc) < 3) {\n        arg_8h = arg_8h + 0x18;\n    }\n    else {\n        arg_8h = *(*(arg_8h + 8) + 8);\n    }\n    fcn.0043b13e(in_ECX, arg_8h, arg_10h, var_4h, 1, arg_ch);\n    fcn.00421898();\n    return 0;\n}\n",
        "token_count": 240
    },
    "0043aff6": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0043aff6(uint arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t extraout_ECX;\n    int32_t *unaff_ESI;\n    uint in_stack_ffffffd4;\n    uint in_stack_ffffffd8;\n    uint in_stack_ffffffdc;\n    uint arg_18h;\n    uint in_stack_ffffffe8;\n    \n    cVar1 = fcn.00419b58();\n    if (cVar1 != '\\0') {\n        if (*(extraout_ECX + 8) == 4) {\n            arg_18h = 0x43b021;\n            iVar2 = extraout_ECX;\n            fcn.0041835f();\n            fcn.0041835f();\n            iVar2 = fcn.0043b5a8(arg_ch, in_stack_ffffffd4, in_stack_ffffffd8, in_stack_ffffffdc, arg_18h, iVar2, \n                                 in_stack_ffffffe8);\n        }\n        else {\n            iVar2 = fcn.00418733();\n        }\n        *unaff_ESI = iVar2;\n        fcn.0041a132(2);\n        iVar2 = fcn.00418733();\n        if ((*unaff_ESI <= iVar2) && (0 < *unaff_ESI)) {\n            iVar2 = fcn.0041a132(2);\n            if (*(iVar2 + 8) == 0xb) {\n                iVar2 = fcn.00418678();\n            }\n            else {\n                iVar2 = fcn.00418733();\n            }\n            fcn.0041a132(2);\n            iVar3 = fcn.00418733();\n            return iVar3 + iVar2;\n        }\n    }\n    fcn.00421898();\n    return 0;\n}\n",
        "token_count": 417
    },
    "0043b0b1": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0043b0b1(int32_t arg_8h, uint arg_ch)\n\n{\n    uint32_t in_ECX;\n    uint arg_10h;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    arg_10h = 0;\n    var_4h = in_ECX & 0xffffff00;\n    if (2 < *(arg_8h + 0xc)) {\n        var_4h = CONCAT31(in_ECX >> 8, 1);\n        arg_10h = fcn.00418733();\n    }\n    if (*(arg_8h + 0xc) < 3) {\n        arg_8h = arg_8h + 0x18;\n    }\n    else {\n        arg_8h = *(*(arg_8h + 8) + 8);\n    }\n    fcn.0043b13e(in_ECX, arg_8h, arg_10h, var_4h, 0, arg_ch);\n    fcn.00421898();\n    return 0;\n}\n",
        "token_count": 249
    },
    "0043b7ba": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043b7ba(int16_t *arg_8h, uint32_t arg_ch, uint noname_2, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    int16_t *piVar1;\n    \n    fcn.00416e83(arg_14h, 0x45bfe0);\n    fcn.00416e83(arg_18h, 0x45bfe0);\n    fcn.00416e83(arg_1ch, 0x45bfe0);\n    if ((1 < arg_ch) && (*arg_8h == 0x5c)) {\n        if (arg_ch < 2) {\n            piVar1 = arg_8h + arg_ch;\n        }\n        else {\n            piVar1 = arg_8h + 1;\n        }\n        if (*piVar1 == 0x5c) {\n            fcn.004171ba();\n            fcn.00417258(0x45c9ac);\n            fcn.00417113(&arg_8h);\n            fcn.004171ba();\n            goto code_r0x0043b859;\n        }\n    }\n    fcn.00416e83(arg_14h, 0x45bfe0);\ncode_r0x0043b859:\n    fcn.00417258(0x45c9ac);\n    fcn.00417113(&arg_8h);\n    fcn.00417113(&arg_8h);\n    fcn.004174f1(0x45c9ac);\n    fcn.0044951c(arg_8h);\n    return;\n}\n",
        "token_count": 367
    },
    "0043c855": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_3ch\n// WARNING: Variable defined which should be unmapped: var_38h\n// WARNING: Variable defined which should be unmapped: var_34h\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint __cdecl fcn.0043c855(int32_t arg_8h, uint arg_ch)\n\n{\n    code *pcVar1;\n    char cVar2;\n    uint arg_8h_00;\n    uint *puVar3;\n    uint unaff_EDI;\n    uchar auStackY32840 [32736];\n    uint uStackY104;\n    uint uStackY100;\n    uint uStackY96;\n    uchar *puStackY92;\n    uint uStackY88;\n    int32_t iStackY84;\n    uint *puStackY80;\n    uint *puStackY76;\n    uint *puStackY72;\n    uint *var_40h;\n    uint32_t var_3ch;\n    uint *var_38h;\n    uint var_34h;\n    uint var_28h;\n    uint in_stack_ffffffd8;\n    uint arg_14h;\n    uint *var_1ch;\n    uint *var_18h;\n    uint *var_14h;\n    uint uStack20;\n    uint var_ch;\n    uint var_8h;\n    uint *var_4h;\n    \n    var_4h = 0x43c862;\n    fcn.0044c510();\n    var_4h = NULL;\n    var_38h = 0x3fff;\n    uStack20 = 0x43c87c;\n    var_ch = unaff_EDI;\n    fcn.00416d61();\n    uStack20 = 0x43c884;\n    fcn.00416d61();\n    uStack20 = 0x43c88c;\n    fcn.00416d61();\n    uStack20 = 0x45bfe0;\n    var_14h = 0x43c899;\n    fcn.00418c7e();\n    var_14h = &fcn.0043c855::var_34h;\n    var_18h = &fcn.0043c855::var_28h;\n    var_1ch = &fcn.0043c855::var_18h;\n    arg_14h = 0x43c8bc;\n    arg_8h_00 = fcn.00418641();\n    fcn.00416d81();\n    fcn.0043b7ba(arg_8h_00, var_28h, in_stack_ffffffd8, arg_14h, var_1ch, var_18h);\n    puVar3 = &fcn.0043c855::var_1ch;\n    var_40h = 0x43c8dd;\n    fcn.00416dcf();\n    var_40h = 0x43c8e5;\n    cVar2 = fcn.0043b8aa(var_3ch, var_38h, var_34h, puVar3);\n    if (cVar2 == '\\0') {\ncode_r0x0043c919:\n        var_40h = NULL;\n        puStackY72 = 0x43c922;\n        fcn.00421898();\n    }\n    else {\n        puVar3 = var_1ch;\n        if (var_14h != NULL) {\n            var_40h = &fcn.0043c855::var_4h;\n            puStackY72 = var_1ch;\n            puStackY76 = var_18h;\n            puStackY80 = 0x43c903;\n            var_38h = (*_sym.imp.ADVAPI32.dll_RegConnectRegistryW)();\n            puVar3 = var_4h;\n            if (var_38h != NULL) {\n                var_3ch = 0x43c90d;\n                var_3ch = fcn.00420169();\n                var_40h = 0x43c916;\n                fcn.00418c7e();\n                goto code_r0x0043c919;\n            }\n        }\n        var_38h = &fcn.0043c855::var_ch;\n        var_3ch = var_3ch | 0x20019;\n        var_40h = NULL;\n        puStackY72 = var_34h;\n        puStackY80 = 0x43c948;\n        puStackY76 = puVar3;\n        var_38h = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExW)();\n        if (var_38h == NULL) {\n            var_38h = NULL;\n            var_3ch = 0;\n            var_40h = &fcn.0043c855::var_40h;\n            puStackY72 = NULL;\n            puStackY76 = &fcn.0043c855::var_38h;\n            puStackY80 = &stack0xffff7fb8;\n            iStackY84 = 0x43c9a9;\n            iStackY84 = fcn.00418733();\n            iStackY84 = iStackY84 + -1;\n            uStackY88 = var_ch;\n            puStackY92 = 0x43c9b4;\n            puStackY92 = (*_sym.imp.ADVAPI32.dll_RegEnumValueW)();\n            if (puStackY92 == NULL) {\n                puStackY92 = &stack0xffff7fb8;\n                uStackY96 = 0x43c9e4;\n                fcn.00418c7e();\n                uStackY96 = 0;\n                uStackY100 = 0x43c9f0;\n                fcn.004218c6();\n            }\n            else {\n                uStackY96 = 0x43c9be;\n                uStackY96 = fcn.00420169();\n                uStackY100 = 0x43c9c7;\n                fcn.00418c7e();\n                uStackY100 = 0;\n                uStackY104 = 0x43c9d3;\n                fcn.00421898();\n            }\n            pcVar1 = _sym.imp.ADVAPI32.dll_RegCloseKey;\n            uStackY100 = var_ch;\n            uStackY104 = 0x43c9fb;\n            (*_sym.imp.ADVAPI32.dll_RegCloseKey)();\n            if (var_14h != NULL) {\n                puStackY72 = var_4h;\n                puStackY76 = 0x43ca05;\n                (*pcVar1)();\n            }\n        }\n        else {\n            var_3ch = 0x43c952;\n            var_3ch = fcn.00420169();\n            var_40h = 0x43c95b;\n            fcn.00418c7e();\n            var_40h = NULL;\n            puStackY72 = 0x43c967;\n            fcn.00421898();\n            if (var_14h != NULL) {\n                puStackY72 = var_4h;\n                puStackY76 = 0x43c979;\n                (*_sym.imp.ADVAPI32.dll_RegCloseKey)();\n            }\n        }\n    }\n    puStackY72 = var_34h;\n    puStackY76 = 0x43ca0d;\n    fcn.0044951c();\n    puStackY76 = var_28h;\n    puStackY80 = 0x43ca15;\n    fcn.0044951c();\n    puStackY80 = var_18h;\n    iStackY84 = 0x43ca1d;\n    fcn.0044951c();\n    return 0;\n}\n",
        "token_count": 1789
    },
    "0043cd1a": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0043cd1a(int32_t arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint var_8h;\n    uint var_4h;\n    \n    var_4h = 0;\n    fcn.00418bb9(0);\n    uVar1 = fcn.00418733();\n    iVar2 = fcn.0043ca29(uVar1);\n    if ((iVar2 == 0) || ((*(iVar2 + 0x28) & 1) == 0)) {\n        fcn.00421898(0);\n    }\n    else if (*(arg_8h + 0xc) == 1) {\n        fcn.00417f34();\n    }\n    else {\n        uVar1 = fcn.00418641();\n        uVar1 = fcn.00416a25(uVar1);\n        uVar3 = fcn.00449fa0(uVar1, &var_4h, 0);\n        iVar2 = (**0x45922c)(*(iVar2 + 0x18), uVar1, uVar3);\n        fcn.0044951c(uVar1);\n        if (iVar2 == 0) {\n            fcn.00421898(0);\n            fcn.00417f34();\n        }\n        fcn.00418bb9(var_4h);\n    }\n    return 0;\n}\n",
        "token_count": 324
    },
    "0043cdf0": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0043cdf0(uint hNamedPipe, uint lpBuffer, uint nBufferSize)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint *unaff_ESI;\n    uint *unaff_EDI;\n    uint lpBytesLeftThisMessage;\n    \n    iVar1 = (*_sym.imp.KERNEL32.DLL_GetFileType)(hNamedPipe);\n    if (iVar1 == 1) {\n        uVar2 = fcn.0043ce4d(hNamedPipe, lpBuffer, nBufferSize, unaff_ESI, unaff_EDI);\n        return uVar2;\n    }\n    if (iVar1 == 3) {\n        uVar2 = (*_sym.imp.KERNEL32.DLL_PeekNamedPipe)(hNamedPipe, lpBuffer, nBufferSize);\n        return uVar2;\n    }\n    if (unaff_ESI != NULL) {\n        *unaff_ESI = 0;\n    }\n    if (unaff_EDI != NULL) {\n        *unaff_EDI = 0;\n    }\n    (*_sym.imp.KERNEL32.DLL_SetLastError)(6);\n    return 0;\n}\n",
        "token_count": 249
    },
    "0043ce4d": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.0043ce4d(int32_t arg_8h, int32_t lpBuffer, int32_t nNumberOfBytesToRead, uint lpNumberOfBytesRead, int32_t *arg_18h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint var_4h;\n    \n    if ((arg_8h != -1) &&\n       (iVar2 = (*_sym.imp.KERNEL32.DLL_GetFileType)(arg_8h),  pcVar1 = _sym.imp.KERNEL32.DLL_SetFilePointer, \n       iVar2 == 1)) {\n        iVar2 = (*_sym.imp.KERNEL32.DLL_SetFilePointer)(arg_8h, 0, 0, 1);\n        if ((lpBuffer != 0) && (nNumberOfBytesToRead != 0)) {\n            iVar3 = (**0x4592c8)(arg_8h, lpBuffer, nNumberOfBytesToRead, lpNumberOfBytesRead, 0);\n            if (iVar3 == 0) {\n                uVar4 = (*_sym.imp.KERNEL32.DLL_GetLastError)();\n                goto code_r0x0043ced7;\n            }\n            (*pcVar1)(arg_8h, iVar2, 0, 0);\n        }\n        if (arg_18h != NULL) {\n            iVar3 = (*pcVar1)(arg_8h, 0, 0, 2);\n            (*pcVar1)(arg_8h, iVar2, 0, 0);\n            *arg_18h = iVar3 - iVar2;\n        }\n        (*_sym.imp.KERNEL32.DLL_SetLastError)(0);\n        return 1;\n    }\n    uVar4 = 6;\ncode_r0x0043ced7:\n    (*_sym.imp.KERNEL32.DLL_SetLastError)(uVar4);\n    return 0;\n}\n",
        "token_count": 425
    },
    "0043d1d5": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0043d1d5(int32_t arg_8h, uint arg_ch)\n\n{\n    code *pcVar1;\n    uchar *arg_8h_00;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint var_14h;\n    uint var_8h;\n    uint var_4h;\n    \n    arg_8h_00 = fcn.00418678();\n    iVar2 = fcn.00418606();\n    fcn.00416d61();\n    if (iVar2 == 0) {\n        fcn.00418c7e(0x45bfe0);\n    }\n    else {\n        if (((*(arg_8h + 0xc) < 2) ||\n            (iVar3 = fcn.00418733(),  pcVar1 = _sym.imp.KERNEL32.DLL_MultiByteToWideChar,  iVar3 < 2)) || (4 < iVar3)) {\n            uVar4 = fcn.004169d1(arg_8h_00);\n            fcn.00417171(uVar4, 0);\n            fcn.0044951c(uVar4);\n        }\n        else {\n            if (iVar3 != 2) {\n                if (iVar3 == 3) {\n                    iVar3 = fcn.00449614(iVar2);\n                    iVar5 = 0;\n                    if (0 < iVar2) {\n                        iVar6 = iVar3 - arg_8h_00;\n                        do {\n                            arg_8h_00[iVar6] = arg_8h_00[1];\n                            *(iVar3 + 1 + iVar5) = *arg_8h_00;\n                            iVar5 = iVar5 + 2;\n                            arg_8h_00 = arg_8h_00 + 2;\n                        } while (iVar5 < iVar2);\n                    }\n                    fcn.00417171(iVar3, 0);\n                    fcn.00418cb1();\n                }\n                else {\n                    if (iVar3 != 4) goto code_r0x0043d35d;\n                    iVar5 = (*_sym.imp.KERNEL32.DLL_MultiByteToWideChar)(0xfde9, 0, arg_8h_00, iVar2, 0, 0);\n                    iVar3 = fcn.00449614(iVar5 * 2);\n                    (*pcVar1)(0xfde9, 0, arg_8h_00, iVar2, iVar3, iVar5);\n                    fcn.00417171(iVar3, 0);\n                    fcn.00418cb1();\n                }\n                fcn.0044951c(iVar3);\n                goto code_r0x0043d35d;\n            }\n            fcn.00417171(arg_8h_00, 0);\n        }\n        fcn.00418cb1();\n    }\ncode_r0x0043d35d:\n    fcn.0044951c(var_14h);\n    return 0;\n}\n",
        "token_count": 677
    },
    "0043d65b": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0043d65b(int32_t arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    int32_t arg_ch_00;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    arg_ch_00 = 0;\n    var_4h = 1;\n    iVar1 = fcn.00418661();\n    puVar2 = fcn.00418661();\n    iVar3 = *(arg_8h + 0xc);\n    if (iVar3 != 2) {\n        if (iVar3 != 3) {\n            if (iVar3 != 4) {\n                iVar3 = 0;\n                goto code_r0x0043d71a;\n            }\n            var_4h = fcn.00418733();\n            if (var_4h == 0) {\n                fcn.00418bb9(0);\n                fcn.00421898(0);\n                return 0;\n            }\n        }\n        arg_ch_00 = fcn.00418733();\n        if ((arg_ch_00 < 0) || (3 < arg_ch_00)) {\n            arg_ch_00 = 0;\n        }\n    }\n    iVar3 = fcn.004172f4(*puVar2, arg_ch_00, var_4h, puVar2[1]);\ncode_r0x0043d71a:\n    if (iVar3 == *(iVar1 + 4)) {\n        iVar3 = 0;\n    }\n    else {\n        iVar3 = iVar3 + 1;\n    }\n    fcn.00418bb9(iVar3);\n    return 0;\n}\n",
        "token_count": 383
    },
    "0043eba5": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0043eba5(int32_t arg_8h, uint arg_ch)\n\n{\n    uint arg_ch_00;\n    int32_t iVar1;\n    uint arg_14h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    arg_14h = 0;\n    var_34h = 0;\n    var_30h = 0;\n    var_2ch = 0;\n    var_28h = 0;\n    var_24h = 0;\n    var_20h = 0;\n    var_1ch._0_1_ = 0;\n    arg_ch_00 = fcn.00418661();\n    var_8h = fcn.00418661();\n    var_ch = fcn.00418661();\n    if (3 < *(arg_8h + 0xc)) {\n        arg_14h = fcn.00418733();\n    }\n    iVar1 = fcn.0040f2c4(var_8h);\n    if (iVar1 == 0) {\n        fcn.00416db5();\n        fcn.0040f4e8(&var_34h, arg_ch_00, var_ch, arg_14h, &var_18h);\n        fcn.00418cb1();\n        fcn.004218c6(0);\n        fcn.0044951c(var_18h);\n    }\n    else {\n        fcn.00418cb1();\n        fcn.00421898(0);\n        fcn.004218c6(0);\n    }\n    fcn.0040f290();\n    return 0;\n}\n",
        "token_count": 433
    },
    "0043ecd7": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0043ecd7(uint arg_8h, int32_t arg_ch, uint arg_10h)\n\n{\n    uint32_t uVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_4h = 0;\n    var_ch = 0xffffffff;\n    var_8h = 0xffffffff;\n    var_10h = 0xffffffff;\n    uVar1 = *(in_EAX + 0xc);\n    if (uVar1 != 0) {\n        uVar2 = fcn.00418641();\n        var_4h = fcn.004161b7(uVar2);\n    }\n    if (1 < uVar1) {\n        var_ch = fcn.00418733();\n    }\n    if (2 < uVar1) {\n        var_8h = fcn.00418733();\n    }\n    if (3 < uVar1) {\n        var_10h = fcn.00418733();\n    }\n    if (arg_ch == 0) {\n        uVar2 = 0;\n    }\n    else {\n        if (arg_ch != 1) goto code_r0x0043eda1;\n        var_10h = 0;\n        uVar2 = 1;\n    }\n    uVar2 = fcn.0041355f(uVar2, var_4h, var_ch, var_8h, var_10h);\n    fcn.00418bb9(uVar2);\ncode_r0x0043eda1:\n    iVar3 = fcn.00418733();\n    if (iVar3 == 0) {\n        fcn.00421898(0);\n    }\n    fcn.0044951c(var_4h);\n    return 0;\n}\n",
        "token_count": 420
    },
    "0043ee26": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0043ee26(uint noname_0, uint arg_ch)\n\n{\n    char cVar1;\n    uint var_10h;\n    uint var_ch;\n    \n    fcn.00416d61();\n    if (*0x47b41c != '\\x01') {\n        cVar1 = fcn.0041338a();\n        if (cVar1 != '\\0') goto code_r0x0043ee63;\n    }\n    var_10h = 0;\n    fcn.00416e83(&var_ch, 0x45bfe0);\ncode_r0x0043ee63:\n    if (*0x47b41c == '\\x01') {\n        fcn.00421898(0);\n    }\n    fcn.00418bb9(var_10h);\n    fcn.0044951c(var_ch);\n    return 0;\n}\n",
        "token_count": 195
    },
    "0043f34e": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint fcn.0043f34e(void)\n\n{\n    uint32_t uVar1;\n    int32_t in_EAX;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    \n    iVar3 = *(in_EAX + 0x290);\n    if ((((iVar3 != 2) && (iVar3 != 3)) && (iVar3 != 4)) && ((iVar3 != 5 && (iVar3 != 6)))) {\n        return 0;\n    }\n    uVar4 = 10;\n    (*_sym.imp.KERNEL32.DLL_Sleep)(10);\n    if (*(in_EAX + 0x7b4) != 0) {\n        uVar2 = (*_sym.imp.WINMM.dll_timeGetTime)();\n        uVar1 = *(in_EAX + 0x7bc);\n        if (uVar2 < uVar1) {\n            uVar2 = (uVar2 - uVar1) - 1;\n        }\n        else {\n            uVar2 = uVar2 - uVar1;\n        }\n        if (*(in_EAX + 0x7b4) <= uVar2) {\n            if (*(in_EAX + 0x290) != 2) {\n                fcn.00418bb9(0);\n            }\n            *(in_EAX + 0x350) = 1;\n            *(in_EAX + 0x290) = 0;\n            return 1;\n        }\n    }\n    iVar3 = *(in_EAX + 0x290);\n    if (iVar3 == 3) {\n        iVar3 = fcn.0043f4ea(1);\ncode_r0x0043f412:\n        if (iVar3 < 0) goto code_r0x0043f418;\n    }\n    else {\n        if (iVar3 == 4) {\n            iVar3 = fcn.0043f4ea(1);\n        }\n        else {\n            if (iVar3 == 5) {\n                iVar3 = fcn.0043f6c4();\n                goto code_r0x0043f412;\n            }\n            if (iVar3 != 6) {\n                return 1;\n            }\n            iVar3 = fcn.0043f6c4();\n        }\n        if (-1 < iVar3) {\n            if (0 < iVar3) {\n                return 1;\n            }\n            goto code_r0x0043f433;\n        }\ncode_r0x0043f418:\n        fcn.00421898(0);\n        uVar4 = 0;\n        fcn.00418bb9();\n    }\n    if (iVar3 == 0) {\n        return 1;\n    }\ncode_r0x0043f433:\n    *(in_EAX + 0x350) = 1;\n    *(in_EAX + 0x290) = 0;\n    fcn.00416122(uVar4);\n    return 1;\n}\n",
        "token_count": 648
    },
    "0043f81c": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0043f81c(int32_t arg_8h, uint arg_ch)\n\n{\n    uint32_t uVar1;\n    char cVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint extraout_EDX;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    uVar1 = *(arg_8h + 0xc);\n    fcn.0043f453();\n    iVar3 = fcn.0043f4ea(1);\n    uVar5 = 0;\n    if (iVar3 < 1) {\n        if (iVar3 < 0) {\n            fcn.00421898(0);\n            uVar5 = extraout_EDX;\n        }\n        fcn.00418bb9(uVar5);\n    }\n    else {\n        fcn.004032d4(0);\n        if ((uVar1 < 5) || (cVar2 = fcn.00419b6a(0x28),  cVar2 != '\\0')) {\n            iVar3 = var_ch - var_14h;\n        }\n        else {\n            iVar3 = fcn.00418733();\n        }\n        if ((uVar1 < 6) || (cVar2 = fcn.00419b6a(0x28),  cVar2 != '\\0')) {\n            iVar4 = var_8h - var_10h;\n        }\n        else {\n            iVar4 = fcn.00418733();\n        }\n        cVar2 = fcn.00419b6a(0x28);\n        if (cVar2 == '\\0') {\n            var_14h = fcn.00418733();\n        }\n        cVar2 = fcn.00419b6a(0x28);\n        if (cVar2 == '\\0') {\n            var_10h = fcn.00418733();\n        }\n        fcn.00403341(var_14h, var_10h, iVar3, iVar4);\n    }\n    return 0;\n}\n",
        "token_count": 482
    },
    "00441a7c": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint __cdecl fcn.00441a7c(int32_t arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t extraout_ECX;\n    bool bVar3;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.0044c510();\n    uVar1 = *(extraout_ECX + 0x794);\n    fcn.00418c7e();\n    fcn.00418c7e();\n    bVar3 = *(arg_8h + 0xc) != 0;\n    if (bVar3) {\n        if (bVar3) {\n            fcn.00418661();\n            fcn.00418cb1();\n        }\n        if (1 < *(arg_8h + 0xc)) {\n            fcn.00418661();\n            fcn.00418cb1();\n        }\n    }\n    else {\n        *(extraout_ECX + 0x794) = 4;\n    }\n    iVar2 = fcn.0043f4ea(0);\n    if (iVar2 < 0) {\n        fcn.00421898();\n        fcn.00418bb9();\n    }\n    else {\n        iVar2 = *(extraout_ECX + 0x7a8);\n        *(extraout_ECX + 0x794) = uVar1;\n        fcn.0041a000(2);\n        fcn.0041a132(2);\n        fcn.00418bb9();\n        arg_8h = 1;\n        if (0 < iVar2) {\n            do {\n                fcn.00421a8a();\n                (*_sym.imp.USER32.dll_GetWindowTextW)();\n                fcn.0041a132(2);\n                fcn.00418c7e();\n                fcn.0041a132(2);\n                fcn.00421a8a();\n                fcn.00418c4c();\n                arg_8h = arg_8h + 1;\n            } while (arg_8h <= iVar2);\n        }\n    }\n    return 0;\n}\n",
        "token_count": 519
    },
    "00441c7b": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00441c7b(int32_t arg_8h, uint arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    uint var_4h;\n    \n    uVar1 = *(arg_8h + 0xc);\n    arg_8h = 4;\n    fcn.0043f453();\n    iVar2 = fcn.0043f4ea(1);\n    if (iVar2 < 1) {\n        if (iVar2 < 0) {\n            fcn.00421898(0);\n        }\n        fcn.00418bb9(0);\n    }\n    else {\n        if (2 < uVar1) {\n            arg_8h = fcn.00418733();\n        }\n        if (3 < uVar1) {\n            fcn.00418733();\n        }\n        if (1 < arg_8h * 2 + -2) {\n            iVar2 = arg_8h * 2 + -3;\n            do {\n                (*_sym.imp.USER32.dll_FlashWindow)(**(in_ECX + 0x718), 1);\n                fcn.00416122();\n                iVar2 = iVar2 + -1;\n            } while (iVar2 != 0);\n        }\n    }\n    return 0;\n}\n",
        "token_count": 295
    },
    "00442110": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nbool __cdecl fcn.00442110(uint *arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t unaff_ESI;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    if (*(unaff_ESI + 0x14) == 1) {\n        fcn.0044a6b0(&var_8h, *(unaff_ESI + 0xc) + *(unaff_ESI + 4), 8);\n    }\n    else {\n        fcn.0044ae2f(&var_8h, 1, 8, *(unaff_ESI + 0x1c));\n    }\n    *(unaff_ESI + 0xc) = *(unaff_ESI + 0xc) + 8;\n    *arg_8h = CONCAT31(CONCAT21(CONCAT11(var_4h, var_4h._1_1_), var_4h._2_1_), var_4h._3_1_);\n    var_4h = var_4h & 0xffffff00;\n    iVar1 = fcn.0044a500(&var_8h, 0x462010);\n    return iVar1 != 0;\n}\n",
        "token_count": 279
    },
    "004422c4": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004422c4(void)\n\n{\n    int32_t *in_EAX;\n    uint32_t uVar1;\n    \n    uVar1 = in_EAX[0x8f];\n    if (in_EAX[6] == 1) {\n        if (uVar1 < in_EAX[0x8d]) {\n            do {\n                *(*in_EAX + in_EAX[2]) = *((in_EAX[0x8f] & 0x1ffffU) + in_EAX[0x8c]);\n                in_EAX[2] = in_EAX[2] + 1;\n                in_EAX[0x8f] = in_EAX[0x8f] + 1;\n            } while (in_EAX[0x8f] < in_EAX[0x8d]);\n        }\n    }\n    else {\n        while (uVar1 < in_EAX[0x8d]) {\n            fcn.00442219();\n            in_EAX[0x8f] = in_EAX[0x8f] + 1;\n            in_EAX[2] = in_EAX[2] + 1;\n            uVar1 = in_EAX[0x8f];\n        }\n    }\n    in_EAX[0x8e] = 0;\n    return;\n}\n",
        "token_count": 294
    },
    "00443313": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_8h\n\nuint __cdecl fcn.00443313(uint arg_8h, uint *arg_ch)\n\n{\n    uint8_t uVar1;\n    uint uVar2;\n    uint uVar3;\n    int32_t iVar4;\n    int32_t *unaff_EBX;\n    uint *puVar5;\n    uint32_t unaff_EDI;\n    uint auStackY69752 [16384];\n    uint var_1074h;\n    uint var_6b4h;\n    uint var_6b0h;\n    uint var_6a8h;\n    uint var_5a0h;\n    uint var_498h;\n    uint var_484h;\n    uint var_480h;\n    uint var_474h;\n    uint var_36fh;\n    uint lpNewFileName;\n    uint lpExistingFileName;\n    uint uStackY88;\n    uint var_28h;\n    uint *var_24h;\n    uint *var_20h;\n    uint *var_1ch;\n    uint *var_18h;\n    uint *var_14h;\n    uint *var_10h;\n    uint *var_ch;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    var_4h = 0x443320;\n    fcn.0044c510();\n    var_ch = arg_8h;\n    var_10h = 0x44332d;\n    var_8h = unaff_EDI;\n    uVar2 = fcn.00416a25();\n    var_10h = arg_ch;\n    var_14h = 0x44333a;\n    uVar3 = fcn.00416a25();\n    var_18h = &fcn.00443313::var_5a0h;\n    var_1ch = 0x443349;\n    var_14h = uVar2;\n    fcn.0044a030();\n    var_20h = &fcn.00443313::lpNewFileName;\n    var_24h = 0x443356;\n    var_1ch = uVar3;\n    fcn.0044a030();\n    var_28h = 0x44335c;\n    var_24h = uVar2;\n    fcn.0044951c();\n    var_28h = uVar3;\n    fcn.0044951c();\n    var_ch = 0x443370;\n    fcn.00441fc3();\n    var_ch = NULL;\n    var_14h = *unaff_EBX;\n    var_10h = 0x1;\n    var_18h = 0x44338f;\n    fcn.0044aaeb(var_14h, 1, 0);\n    var_ch = &fcn.00443313::var_6a8h;\n    var_10h = &fcn.00443313::var_5a0h;\n    var_14h = 0x4433a7;\n    iVar4 = fcn.0044377c(var_10h, var_ch);\n    if (iVar4 != 0) {\n        return var_18h;\n    }\n    var_14h = *unaff_EBX;\n    var_20h = &fcn.00443313::arg_8h + 3;\n    var_18h = 0x1;\n    var_1ch = 0x1;\n    var_24h = 0x4433bf;\n    fcn.0044ae2f(var_20h, 1, 1, var_14h);\n    var_24h = *unaff_EBX;\n    var_28h = 1;\n    fcn.0044ae2f(&fcn.00443313::var_8h, 4, 1, var_24h);\n    puVar5 = var_8h ^ 0x45aa;\n    var_14h = puVar5;\n    fcn.0044ae2f(&fcn.00443313::var_8h, 4, 1, *unaff_EBX);\n    uStackY88 = 0x4433f5;\n    fcn.0044ae2f(&fcn.00443313::var_8h, 4, 1, *unaff_EBX);\n    var_14h = *unaff_EBX;\n    var_18h = var_8h ^ 0xc3d2;\n    var_20h = &fcn.00443313::var_1ch;\n    var_1ch = 0x4;\n    var_24h = 0x443411;\n    fcn.0044ae2f(var_20h, 4, var_18h, var_14h);\n    var_24h = *unaff_EBX;\n    var_28h = 1;\n    fcn.0044ae2f(&fcn.00443313::var_20h, 4, 1, var_24h);\n    fcn.0044ae2f(&fcn.00443313::var_24h, 4, 1, *unaff_EBX);\n    uStackY88 = 0x44343b;\n    fcn.0044ae2f(&fcn.00443313::var_28h, 4, 1, *unaff_EBX);\n    var_14h = &fcn.00443313::lpExistingFileName;\n    var_18h = 0x44344a;\n    fcn.004432dd(var_14h);\n    var_1ch = &fcn.00443313::lpExistingFileName;\n    var_18h = 0x462030;\n    var_20h = 0x44345b;\n    var_ch = fcn.0044c139();\n    if (var_ch == NULL) {\n        return 9;\n    }\n    var_18h = 0x44347f;\n    fcn.00442f4a();\n    var_4h = 0;\n    if (0 < puVar5) {\n        do {\n            if (puVar5 < var_4h + 0x10000) {\n                arg_ch = puVar5 - var_4h;\n            }\n            else {\n                arg_ch = 0x10000;\n            }\n            var_18h = *unaff_EBX;\n            var_4h = var_4h + arg_ch;\n            var_24h = &stack0xfffeef88;\n            var_20h = 0x1;\n            var_28h = 0x4434c3;\n            var_1ch = arg_ch;\n            fcn.0044ae2f(var_24h, 1, arg_ch, var_18h);\n            iVar4 = 0;\n            if (0 < arg_ch) {\n                do {\n                    var_18h = 0x4434d8;\n                    uVar1 = fcn.00443062();\n                    (&stack0xfffeef88)[iVar4] = (&stack0xfffeef88)[iVar4] ^ uVar1;\n                    iVar4 = iVar4 + 1;\n                    puVar5 = var_14h;\n                } while (iVar4 < arg_ch);\n            }\n            var_18h = arg_ch;\n            var_14h = &stack0xfffeef88;\n            var_20h = 0x4434fa;\n            fcn.00441f67(var_14h, arg_ch);\n            var_20h = var_ch;\n            var_24h = arg_ch;\n            var_28h = 1;\n            fcn.0044ac5d(&stack0xfffeef88, 1, arg_ch, var_ch);\n        } while (var_4h < puVar5);\n    }\n    var_18h = var_ch;\n    var_1ch = 0x443522;\n    fcn.0044acf5(var_ch);\n    if (var_18h == var_10h) {\n        if (arg_8h._3_1_ == '\\x01') {\n            var_18h = 0x443540;\n            fcn.00441fc3();\n            var_484h = 0;\n            var_480h = 0;\n            var_18h = &fcn.00443313::lpExistingFileName;\n            var_1ch = &fcn.00443313::var_474h;\n            var_20h = 0x443561;\n            fcn.0044a030();\n            var_20h = &fcn.00443313::lpNewFileName;\n            var_24h = &fcn.00443313::var_36fh;\n            var_28h = 0x443574;\n            fcn.0044a030();\n            var_18h = 0x443582;\n            iVar4 = fcn.00441fef();\n            if (iVar4 != 0) {\n                var_18h = 0x7;\n                goto code_r0x00443588;\n            }\n        }\n        else {\n            var_18h = NULL;\n            var_1ch = &fcn.00443313::lpNewFileName;\n            var_20h = &fcn.00443313::lpExistingFileName;\n            var_24h = 0x4435b0;\n            iVar4 = (**0x459248)();\n            if (iVar4 == 0) {\n                var_18h = &fcn.00443313::lpExistingFileName;\n                var_1ch = 0x4435c1;\n                (**0x459244)();\n                return 7;\n            }\n        }\n        var_18h = &fcn.00443313::lpExistingFileName;\n        var_1ch = 0x4435d3;\n        (**0x459244)();\n        var_1ch = &fcn.00443313::var_28h;\n        var_20h = &fcn.00443313::var_20h;\n        var_24h = &fcn.00443313::lpNewFileName;\n        var_28h = 0x4435e7;\n        fcn.004438ac();\n        uVar2 = 0;\n    }\n    else {\n        var_18h = 0xa;\ncode_r0x00443588:\n        uVar2 = var_18h;\n        var_18h = &fcn.00443313::lpExistingFileName;\n        var_1ch = 0x443596;\n        (**0x459244)();\n    }\n    return uVar2;\n}\n",
        "token_count": 2455
    },
    "004435ef": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004435ef(uint arg_8h, uint *arg_ch, uint32_t *arg_10h)\n\n{\n    uint *in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    uint32_t arg_ch_00;\n    uint in_stack_fffffb5c;\n    uint var_47ch;\n    uint var_374h;\n    uint var_26ch;\n    uint var_268h;\n    uint var_258h;\n    uint var_254h;\n    uint var_ch;\n    uint32_t var_8h;\n    uint32_t var_4h;\n    \n    uVar1 = fcn.00416a25(arg_8h);\n    fcn.0044a030(&var_374h, uVar1);\n    fcn.0044951c(uVar1);\n    fcn.00441fc3();\n    var_8h = 1;\n    fcn.0044aaeb(*in_EAX, in_EAX[1], 0);\n    iVar2 = fcn.0044377c(&var_374h, &var_47ch);\n    if (iVar2 == 0) {\n        fcn.0044ae2f(&arg_8h + 3, 1, 1, *in_EAX);\n        fcn.0044ae2f(&var_4h, 4, 1, *in_EAX);\n        arg_ch_00 = var_4h ^ 0x45aa;\n        fcn.0044ae2f(&var_4h, 4, 1, *in_EAX);\n        *arg_10h = var_4h ^ 0x45aa;\n        fcn.0044ae2f(&var_4h, 4, 1, *in_EAX);\n        fcn.0044aaeb(*in_EAX, 0x10, 1);\n        arg_10h = fcn.00449f7f(*arg_10h);\n        var_ch = fcn.00449f7f(arg_ch_00);\n        fcn.0044ae2f(var_ch, arg_ch_00, 1, *in_EAX);\n        uVar1 = var_ch;\n        fcn.00443295(var_ch, arg_ch_00);\n        fcn.00441f67(uVar1, arg_ch_00);\n        if ((var_4h ^ 0xc3d2) == var_8h) {\n            if (arg_8h._3_1_ == '\\x01') {\n                fcn.00441fc3();\n                var_258h = 1;\n                var_254h = 1;\n                var_26ch = arg_10h;\n                var_268h = uVar1;\n                fcn.00441fef();\n                fcn.0044a128(uVar1);\n            }\n            else {\n                fcn.0044a128(arg_10h);\n                arg_10h = uVar1;\n            }\n            *arg_ch = arg_10h;\n            in_stack_fffffb5c = 0;\n        }\n        else {\n            fcn.0044a128(arg_10h);\n            fcn.0044a128(uVar1);\n            in_stack_fffffb5c = 10;\n        }\n    }\n    return in_stack_fffffb5c;\n}\n",
        "token_count": 738
    },
    "004466e6": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004466e6(char *arg_8h, uint8_t *arg_ch, uint32_t arg_10h, uint32_t arg_14h)\n\n{\n    char cVar1;\n    char *arg_8h_00;\n    int32_t iVar2;\n    uint32_t uVar3;\n    bool bVar4;\n    \n    do {\n        arg_8h_00 = fcn.00443e65(2, 0);\n        cVar1 = *arg_8h_00;\n        uVar3 = arg_10h;\n        if (cVar1 == 'X') {\ncode_r0x0044677e:\n            iVar2 = fcn.004466e6(arg_8h_00, arg_ch, uVar3, arg_14h);\n            if (iVar2 == 0) {\n                return 0;\n            }\n        }\n        else {\n            if (cVar1 == 'Y') {\n                uVar3 = 1;\n                if (CONCAT11(arg_8h_00[3], arg_8h_00[4]) < 0x20) {\n                    uVar3 = 1 << (arg_8h_00[4] & 0x1fU);\n                }\n                uVar3 = uVar3 | arg_10h;\n                goto code_r0x0044677e;\n            }\n            if (((cVar1 == 'R') || (cVar1 == 'W')) || (cVar1 == 'Z')) goto code_r0x0044677e;\n            if ((((cVar1 == '3') || (cVar1 == '4')) || (cVar1 == '<')) && ((*arg_ch & 4) != 0)) {\n                if (arg_8h_00[1] != '\\v') {\n                    return 0;\n                }\n                bVar4 = (arg_10h & arg_14h) == 0;\ncode_r0x00446774:\n                if (!bVar4) {\n                    return 0;\n                }\n            }\n            else if ((cVar1 != '\\x01') && (cVar1 != '\\x02')) {\n                if ((*arg_ch & 2) != 0) {\n                    return 0;\n                }\n                bVar4 = cVar1 == '\\x14';\n                goto code_r0x00446774;\n            }\n        }\n        arg_8h = arg_8h + CONCAT11(arg_8h[1], arg_8h[2]);\n        if (*arg_8h != 'N') {\n            return 1;\n        }\n    } while( true );\n}\n",
        "token_count": 575
    },
    "004492f7": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004492f7(uint8_t *arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t *arg_14h, int32_t arg_18h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    \n    uVar2 = *arg_8h;\n    if (arg_ch == 2) {\n        if (uVar2 == 10) {\ncode_r0x0044932d:\n            *arg_14h = 1;\n            return 1;\n        }\n        if (uVar2 != 0xd) {\n            return 0;\n        }\n    }\n    else {\n        if (uVar2 < 10) {\n            return 0;\n        }\n        if (uVar2 < 0xd) goto code_r0x0044932d;\n        if (uVar2 != 0xd) {\n            if (uVar2 != 0x85) {\n                if (uVar2 < 0x2028) {\n                    return 0;\n                }\n                if (uVar2 < 0x202a) {\n                    *arg_14h = 3;\n                    return 1;\n                }\n                return 0;\n            }\n            iVar1 = (arg_18h != 0) + 1;\n            goto code_r0x00449326;\n        }\n    }\n    if ((arg_8h < arg_10h + -1) && (arg_8h[1] == 10)) {\n        iVar1 = 2;\n    }\n    else {\n        iVar1 = 1;\n    }\ncode_r0x00449326:\n    *arg_14h = iVar1;\n    return 1;\n}\n",
        "token_count": 379
    },
    "0044937c": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0044937c(int32_t arg_8h, int32_t arg_ch, uint8_t *arg_10h, int32_t *arg_14h, int32_t arg_18h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    \n    uVar2 = *(arg_8h + -1);\n    if (arg_ch == 2) {\n        if (uVar2 != 10) {\n            if (uVar2 != 0xd) {\n                return 0;\n            }\ncode_r0x0044939a:\n            *arg_14h = 1;\n            return 1;\n        }\n    }\n    else if (uVar2 != 10) {\n        if (uVar2 < 0xb) {\n            return 0;\n        }\n        if (uVar2 < 0xe) goto code_r0x0044939a;\n        if (uVar2 != 0x85) {\n            if (uVar2 < 0x2028) {\n                return 0;\n            }\n            if (uVar2 < 0x202a) {\n                *arg_14h = 3;\n                return 1;\n            }\n            return 0;\n        }\n        iVar1 = (arg_18h != 0) + 1;\n        goto code_r0x004493f2;\n    }\n    if ((arg_10h < arg_8h + -1) && (*(arg_8h + -2) == '\\r')) {\n        iVar1 = 2;\n    }\n    else {\n        iVar1 = 1;\n    }\ncode_r0x004493f2:\n    *arg_14h = iVar1;\n    return 1;\n}\n",
        "token_count": 381
    },
    "004493fc": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint32_t __thiscall fcn.004493fc(uint32_t param_1, int32_t param_2)\n\n{\n    if (param_2 == 2) {\n        return CONCAT11(param_1, param_1 >> 8);\n    }\n    return (param_1 & 0xff0000 | param_1 >> 0x10) >> 8 | (param_1 & 0xff00 | param_1 << 0x10) << 8;\n}\n",
        "token_count": 106
    },
    "00449ed8": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00449ed8(uint arg_8h)\n\n{\n    uint uVar1;\n    int32_t unaff_EBP;\n    uint32_t arg_8h_00;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.0044dc28(0x45a970, 0xc);\n    arg_8h_00 = *(unaff_EBP + 8);\n    if ((*0x480b80 == 3) && (arg_8h_00 <= *0x480b6c)) {\n        fcn.0044cb7b(4);\n        *(unaff_EBP + -4) = 0;\n        uVar1 = fcn.0044ed95(arg_8h_00);\n        *(unaff_EBP + -0x1c) = uVar1;\n        *(unaff_EBP + -4) = 0xffffffff;\n        fcn.00449f4a();\n        if (*(unaff_EBP + -0x1c) != 0) goto code_r0x00449f41;\n    }\n    if (arg_8h_00 == 0) {\n        arg_8h_00 = 1;\n    }\n    if (*0x480b80 != 1) {\n        arg_8h_00 = arg_8h_00 + 0xf & 0xfffffff0;\n    }\n    (*_sym.imp.KERNEL32.DLL_HeapAlloc)(*0x480b7c, 0, arg_8h_00);\ncode_r0x00449f41:\n    fcn.0044dc63();\n    return;\n}\n",
        "token_count": 379
    },
    "0044a199": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.0044a199(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    \n    iVar1 = fcn.0044c752();\n    iVar1 = *(iVar1 + 100);\n    if (iVar1 != *0x4654bc) {\n        iVar1 = fcn.0044c6de();\n    }\n    if (1 < *(iVar1 + 0x28)) {\n        uVar2 = fcn.0044f091(iVar1, param_1, 4);\n        return uVar2;\n    }\n    return *(*(iVar1 + 0x48) + param_1 * 2) & 4;\n}\n",
        "token_count": 158
    },
    "0044a1d3": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.0044a1d3(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    \n    iVar1 = fcn.0044c752();\n    iVar1 = *(iVar1 + 100);\n    if (iVar1 != *0x4654bc) {\n        iVar1 = fcn.0044c6de();\n    }\n    if (1 < *(iVar1 + 0x28)) {\n        uVar2 = fcn.0044f091(iVar1, param_1, 8);\n        return uVar2;\n    }\n    return *(*(iVar1 + 0x48) + param_1 * 2) & 8;\n}\n",
        "token_count": 160
    },
    "0044a621": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.0044a621(uint8_t *param_1)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint8_t *puVar5;\n    \n    iVar1 = fcn.0044c752();\n    iVar1 = *(iVar1 + 100);\n    if (iVar1 != *0x4654bc) {\n        iVar1 = fcn.0044c6de();\n    }\n    while( true ) {\n        if (*(iVar1 + 0x28) < 2) {\n            uVar2 = *(*(iVar1 + 0x48) + *param_1 * 2) & 8;\n        }\n        else {\n            uVar2 = fcn.0044f091(iVar1, *param_1, 8);\n        }\n        if (uVar2 == 0) break;\n        param_1 = param_1 + 1;\n    }\n    uVar2 = *param_1;\n    puVar5 = param_1 + 1;\n    if ((uVar2 == 0x2d) || (uVar3 = uVar2,  uVar2 == 0x2b)) {\n        uVar3 = *puVar5;\n        puVar5 = param_1 + 2;\n    }\n    iVar1 = 0;\n    while( true ) {\n        if ((uVar3 < 0x30) || (0x39 < uVar3)) {\n            iVar4 = -1;\n        }\n        else {\n            iVar4 = uVar3 - 0x30;\n        }\n        if (iVar4 == -1) break;\n        iVar1 = iVar4 + iVar1 * 10;\n        uVar3 = *puVar5;\n        puVar5 = puVar5 + 1;\n    }\n    if (uVar2 == 0x2d) {\n        iVar1 = -iVar1;\n    }\n    return iVar1;\n}\n",
        "token_count": 441
    },
    "0044aa5c": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.0044aa5c(int32_t param_1, int32_t param_2, int32_t param_3)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    \n    if (((*(param_1 + 0xc) & 0x83) == 0) || (((param_3 != 0 && (param_3 != 1)) && (param_3 != 2)))) {\n        puVar3 = fcn.0044ddb5();\n        *puVar3 = 0x16;\n        iVar2 = -1;\n    }\n    else {\n        *(param_1 + 0xc) = *(param_1 + 0xc) & 0xffffffef;\n        if (param_3 == 1) {\n            iVar2 = fcn.0044c14c(param_1);\n            param_2 = param_2 + iVar2;\n            param_3 = 0;\n        }\n        fcn.0044b80d(param_1);\n        uVar1 = *(param_1 + 0xc);\n        if (uVar1 < '\\0') {\n            *(param_1 + 0xc) = uVar1 & 0xfffffffc;\n        }\n        else if ((((uVar1 & 1) != 0) && ((uVar1 & 8) != 0)) && ((uVar1 & 0x400) == 0)) {\n            *(param_1 + 0x18) = 0x200;\n        }\n        iVar2 = fcn.0044fd09(*(param_1 + 0x10), param_2, param_3);\n        iVar2 = (iVar2 != -1) - 1;\n    }\n    return iVar2;\n}\n",
        "token_count": 392
    },
    "0044b80d": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint fcn.0044b80d(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t arg_10h;\n    \n    uVar2 = 0;\n    if (((param_1[3] & 3) == 2) && ((param_1[3] & 0x108U) != 0)) {\n        arg_10h = *param_1 - param_1[2];\n        if (0 < arg_10h) {\n            iVar1 = fcn.0045014c(param_1[4], param_1[2], arg_10h);\n            if (iVar1 == arg_10h) {\n                if (param_1[3] < '\\0') {\n                    param_1[3] = param_1[3] & 0xfffffffd;\n                }\n            }\n            else {\n                param_1[3] = param_1[3] | 0x20;\n                uVar2 = 0xffffffff;\n            }\n        }\n    }\n    param_1[1] = 0;\n    *param_1 = param_1[2];\n    return uVar2;\n}\n",
        "token_count": 261
    },
    "0044c722": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0044c722(void)\n\n{\n    int32_t arg_8h;\n    code *pcVar1;\n    int32_t *piVar2;\n    \n    if (*0x4655f4 != -1) {\n        (**0x467438)(*0x4655f4);\n        *0x4655f4 = -1;\n    }\n    pcVar1 = *0x459278;\n    piVar2 = 0x4655f8;\n    do {\n        arg_8h = *piVar2;\n        if ((arg_8h != 0) && (piVar2[1] != 1)) {\n            (*pcVar1)(arg_8h);\n            fcn.0044a128(arg_8h);\n            *piVar2 = 0;\n        }\n        piVar2 = piVar2 + 2;\n    } while (piVar2 < 0x465718);\n    piVar2 = 0x4655f8;\n    do {\n        if ((*piVar2 != 0) && (piVar2[1] == 1)) {\n            (*pcVar1)(*piVar2);\n        }\n        piVar2 = piVar2 + 2;\n    } while (piVar2 < 0x465718);\n    return;\n}\n",
        "token_count": 284
    },
    "0044de3a": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_58h\n// WARNING: Could not reconcile some variable overlaps\n\nuint fcn.0044de3a(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint var_58h;\n    uint lpSystemInfo;\n    int32_t var_48h;\n    uint32_t lpBuffer;\n    int32_t var_24h;\n    int32_t var_1ch;\n    uint32_t var_18h;\n    uint var_13h;\n    uint lpflOldProtect;\n    int32_t dwSize;\n    uint32_t lpAddress;\n    \n    fcn.0044c510();\n    iVar1 = (**0x45928c)(&var_58h, &lpBuffer, 0x1c);\n    if (iVar1 != 0) {\n        (**0x4591d4)(&lpSystemInfo);\n        uVar4 = (~(var_48h - 1U) & &var_58h) - var_48h;\n        uVar3 = ((-(*0x4673cc != 1) & 0xfffffff1) + 0x11) * var_48h + var_24h;\n        dwSize = var_48h;\n        if (uVar3 <= uVar4) {\n            lpAddress = uVar4;\n            if (*0x4673cc != 1) {\n                lpAddress = var_24h;\n                do {\n                    iVar1 = (**0x45928c)(lpAddress, &lpBuffer, 0x1c);\n                    if (iVar1 == 0) {\n                        return 0;\n                    }\n                    lpAddress = lpAddress + var_1ch;\n                } while ((var_18h & 0x1000) == 0);\n                lpAddress = lpBuffer;\n                if ((var_13h & 1) != 0) {\n                    return 1;\n                }\n                if (uVar4 < lpBuffer) {\n                    return 0;\n                }\n                if (lpBuffer < uVar3) {\n                    lpAddress = uVar3;\n                }\n                (*_sym.imp.KERNEL32.DLL_VirtualAlloc)(lpAddress, dwSize, 0x1000, 4);\n            }\n            uVar2 = (**0x459284)(lpAddress, dwSize, (-(*0x4673cc != 1) & 0x103) + 1, &lpflOldProtect);\n            return uVar2;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 568
    },
    "0044df1d": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044df1d(int32_t arg_8h, int32_t arg_ch, uint16_t *arg_10h, uint32_t arg_14h)\n\n{\n    char cVar1;\n    uint16_t uVar2;\n    uint32_t uVar3;\n    uint16_t *puVar4;\n    int32_t iVar5;\n    uint *puVar6;\n    int32_t iVar7;\n    uint var_1ch;\n    uint var_18h;\n    uint16_t *lpWideCharStr;\n    int32_t var_10h;\n    uint var_ch;\n    uint32_t var_4h;\n    \n    var_4h = *0x465718 ^ &stack0xfffffffc;\n    uVar3 = 0;\n    lpWideCharStr = arg_10h;\n    var_10h = 0;\n    if (arg_ch == 0) {\n        if (*(arg_8h + 0x14) == 0) {\n            fcn.0044985c(arg_10h);\n            goto code_r0x0044e025;\n        }\n        iVar5 = (**0x459198)(*(arg_8h + 4), 0, arg_10h, 0xffffffff, 0, 0, 0, &var_10h);\njoined_r0x0044e0b2:\n        if (iVar5 != 0) {\njoined_r0x0044e0bb:\n            if (var_10h == 0) goto code_r0x0044e025;\n        }\n    }\n    else {\n        if (arg_14h == 0) goto code_r0x0044e025;\n        if (*(arg_8h + 0x14) == 0) {\n            if (arg_14h != 0) {\n                do {\n                    if (0xff < *arg_10h) goto code_r0x0044e017;\n                    *(arg_ch + uVar3) = *arg_10h;\n                    uVar2 = *arg_10h;\n                    arg_10h = arg_10h + 1;\n                } while ((uVar2 != 0) && (uVar3 = uVar3 + 1,  uVar3 < arg_14h));\n            }\n            goto code_r0x0044e025;\n        }\n        if (*0x465e70 == 1) {\n            puVar4 = arg_10h;\n            uVar3 = arg_14h;\n            if (arg_14h != 0) {\n                do {\n                    if (*puVar4 == 0) break;\n                    puVar4 = puVar4 + 1;\n                    uVar3 = uVar3 - 1;\n                } while (uVar3 != 0);\n                if ((uVar3 != 0) && (*puVar4 == 0)) {\n                    arg_14h = (puVar4 - arg_10h >> 1) + 1;\n                }\n            }\n            iVar5 = (**0x459198)(*(arg_8h + 4), 0, arg_10h, arg_14h, arg_ch, arg_14h, 0, &var_10h);\n            goto joined_r0x0044e0b2;\n        }\n        uVar3 = (**0x459198)(*(arg_8h + 4), 0, arg_10h, 0xffffffff, arg_ch, arg_14h, 0, &var_10h);\n        if (uVar3 != 0) goto joined_r0x0044e0bb;\n        if ((var_10h == 0) && (iVar5 = (*_sym.imp.KERNEL32.DLL_GetLastError)(),  iVar5 == 0x7a)) {\n            while (uVar3 < arg_14h) {\n                iVar5 = (**0x459198)(*(arg_8h + 4), 0, lpWideCharStr, 1, &var_ch, *0x465e70, 0, &var_10h);\n                if ((iVar5 == 0) || (var_10h != 0)) goto code_r0x0044e017;\n                if (arg_14h < iVar5 + uVar3) break;\n                iVar7 = 0;\n                if (0 < iVar5) {\n                    do {\n                        cVar1 = *(&var_ch + iVar7);\n                        *(arg_ch + uVar3) = cVar1;\n                        if (cVar1 == '\\0') goto code_r0x0044e025;\n                        iVar7 = iVar7 + 1;\n                        uVar3 = uVar3 + 1;\n                    } while (iVar7 < iVar5);\n                }\n                lpWideCharStr = lpWideCharStr + 1;\n            }\n            goto code_r0x0044e025;\n        }\n    }\ncode_r0x0044e017:\n    puVar6 = fcn.0044ddb5();\n    *puVar6 = 0x2a;\ncode_r0x0044e025:\n    fcn.0044ce09();\n    return;\n}\n",
        "token_count": 1127
    },
    "0044e503": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint fcn.0044e503(void)\n\n{\n    if ((*0x4673cc == 2) && (4 < *0x4673d8)) {\n        return 1;\n    }\n    return 3;\n}\n",
        "token_count": 50
    },
    "0044fb73": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.0044fb73(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t unaff_EBP;\n    int32_t iVar3;\n    uint *puVar4;\n    uint *puVar5;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.0044dc28(0x45b2b8, 0x10);\n    puVar4 = NULL;\n    *(unaff_EBP + -0x1c) = 0;\n    fcn.0044cb7b(1);\n    *(unaff_EBP + -4) = 0;\n    iVar3 = 0;\n    do {\n        *(unaff_EBP + -0x20) = iVar3;\n        if (*0x481ba0 <= iVar3) {\ncode_r0x0044fc62:\n            if (puVar4 != NULL) {\n                puVar4[1] = 0;\n                puVar4[3] = 0;\n                puVar4[2] = 0;\n                *puVar4 = 0;\n                puVar4[7] = 0;\n                puVar4[4] = 0xffffffff;\n            }\n            *(unaff_EBP + -4) = 0xffffffff;\n            fcn.0044fc8c();\n            fcn.0044dc63();\n            return;\n        }\n        iVar1 = *(*0x480b88 + iVar3 * 4);\n        if (iVar1 == 0) {\n            iVar3 = iVar3 * 4;\n            uVar2 = fcn.00449f7f(0x38);\n            *(iVar3 + *0x480b88) = uVar2;\n            if (*(iVar3 + *0x480b88) != 0) {\n                iVar1 = fcn.004548d2(*(iVar3 + *0x480b88) + 0x20, 4000);\n                if (iVar1 == 0) {\n                    fcn.0044a128(*(iVar3 + *0x480b88));\n                    *(iVar3 + *0x480b88) = 0;\n                }\n                else {\n                    (*_sym.imp.KERNEL32.DLL_EnterCriticalSection)(*(iVar3 + *0x480b88) + 0x20);\n                    puVar5 = *(iVar3 + *0x480b88);\ncode_r0x0044fc5f:\n                    *(unaff_EBP + -0x1c) = puVar5;\n                    puVar4 = puVar5;\n                }\n            }\n            goto code_r0x0044fc62;\n        }\n        if ((*(iVar1 + 0xc) & 0x83) == 0) {\n            if (((2 < iVar3) && (iVar3 < 0x14)) && (iVar1 = fcn.0044cadb(iVar3 + 0x10),  iVar1 == 0))\n            goto code_r0x0044fc62;\n            fcn.0044bdcb(iVar3, *(*0x480b88 + iVar3 * 4));\n            puVar5 = *(*0x480b88 + iVar3 * 4);\n            if ((*(puVar5 + 3) & 0x83) == 0) goto code_r0x0044fc5f;\n            fcn.0044be1d(iVar3, puVar5);\n        }\n        iVar3 = iVar3 + 1;\n    } while( true );\n}\n",
        "token_count": 791
    },
    "0045080b": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0045080b(int32_t arg_8h, uint ExceptionInfo)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    int32_t iVar6;\n    int32_t *piVar7;\n    int32_t iVar8;\n    uint var_4h;\n    \n    iVar4 = fcn.0044c752();\n    piVar1 = *(iVar4 + 0x54);\n    piVar7 = piVar1;\n    do {\n        if (*piVar7 == arg_8h) break;\n        piVar7 = piVar7 + 3;\n    } while (piVar7 < piVar1 + *0x46596c * 3);\n    if ((piVar1 + *0x46596c * 3 <= piVar7) || (*piVar7 != arg_8h)) {\n        piVar7 = NULL;\n    }\n    if ((piVar7 == NULL) || (pcVar2 = piVar7[2],  pcVar2 == NULL)) {\n        uVar5 = (**0x45929c)(ExceptionInfo);\n    }\n    else if (pcVar2 == 0x5) {\n        piVar7[2] = 0;\n        uVar5 = 1;\n    }\n    else {\n        if (pcVar2 != 0x1) {\n            uVar5 = *(iVar4 + 0x58);\n            *(iVar4 + 0x58) = ExceptionInfo;\n            if (piVar7[1] == 8) {\n                if (*0x465960 < *0x465964 + *0x465960) {\n                    iVar6 = *0x465960 * 0xc;\n                    iVar8 = *0x465960;\n                    do {\n                        *(iVar6 + 8 + *(iVar4 + 0x54)) = 0;\n                        iVar8 = iVar8 + 1;\n                        iVar6 = iVar6 + 0xc;\n                    } while (iVar8 < *0x465964 + *0x465960);\n                }\n                iVar8 = *piVar7;\n                uVar3 = *(iVar4 + 0x5c);\n                if (iVar8 == -0x3fffff72) {\n                    *(iVar4 + 0x5c) = 0x83;\n                }\n                else if (iVar8 == -0x3fffff70) {\n                    *(iVar4 + 0x5c) = 0x81;\n                }\n                else if (iVar8 == -0x3fffff6f) {\n                    *(iVar4 + 0x5c) = 0x84;\n                }\n                else if (iVar8 == -0x3fffff6d) {\n                    *(iVar4 + 0x5c) = 0x85;\n                }\n                else if (iVar8 == -0x3fffff73) {\n                    *(iVar4 + 0x5c) = 0x82;\n                }\n                else if (iVar8 == -0x3fffff71) {\n                    *(iVar4 + 0x5c) = 0x86;\n                }\n                else if (iVar8 == -0x3fffff6e) {\n                    *(iVar4 + 0x5c) = 0x8a;\n                }\n                (*pcVar2)(8, *(iVar4 + 0x5c));\n                *(iVar4 + 0x5c) = uVar3;\n            }\n            else {\n                piVar7[2] = 0;\n                (*pcVar2)(piVar7[1]);\n            }\n            *(iVar4 + 0x58) = uVar5;\n        }\n        uVar5 = 0xffffffff;\n    }\n    return uVar5;\n}\n",
        "token_count": 839
    },
    "00450c44": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00450c44(uint32_t param_1, uint param_2)\n\n{\n    int32_t *piVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    uint uVar4;\n    \n    if (param_1 < *0x480a4c) {\n        piVar1 = (param_1 >> 5) * 4 + 0x480a60;\n        iVar3 = (param_1 & 0x1f) * 0x24;\n        if (*(iVar3 + *piVar1) == -1) {\n            if (*0x46545c == 1) {\n                if (param_1 == 0) {\n                    uVar4 = 0xfffffff6;\n                }\n                else if (param_1 == 1) {\n                    uVar4 = 0xfffffff5;\n                }\n                else {\n                    if (param_1 != 2) goto code_r0x00450c9d;\n                    uVar4 = 0xfffffff4;\n                }\n                (*_sym.imp.KERNEL32.DLL_SetStdHandle)(uVar4, param_2);\n            }\ncode_r0x00450c9d:\n            *(iVar3 + *piVar1) = param_2;\n            return 0;\n        }\n    }\n    puVar2 = fcn.0044ddb5();\n    *puVar2 = 9;\n    puVar2 = fcn.0044ddbe();\n    *puVar2 = 0;\n    return 0xffffffff;\n}\n",
        "token_count": 337
    },
    "00450cc0": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00450cc0(uint32_t param_1)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    uint *puVar3;\n    int32_t iVar4;\n    uint uVar5;\n    \n    if (param_1 < *0x480a4c) {\n        piVar1 = (param_1 >> 5) * 4 + 0x480a60;\n        iVar4 = (param_1 & 0x1f) * 0x24;\n        piVar2 = *piVar1 + iVar4;\n        if (((*(piVar2 + 1) & 1) != 0) && (*piVar2 != -1)) {\n            if (*0x46545c == 1) {\n                if (param_1 == 0) {\n                    uVar5 = 0xfffffff6;\n                }\n                else if (param_1 == 1) {\n                    uVar5 = 0xfffffff5;\n                }\n                else {\n                    if (param_1 != 2) goto code_r0x00450d1c;\n                    uVar5 = 0xfffffff4;\n                }\n                (*_sym.imp.KERNEL32.DLL_SetStdHandle)(uVar5, 0);\n            }\ncode_r0x00450d1c:\n            *(iVar4 + *piVar1) = 0xffffffff;\n            return 0;\n        }\n    }\n    puVar3 = fcn.0044ddb5();\n    *puVar3 = 9;\n    puVar3 = fcn.0044ddbe();\n    *puVar3 = 0;\n    return 0xffffffff;\n}\n",
        "token_count": 366
    },
    "0045107a": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n// WARNING: Variable defined which should be unmapped: var_40h\n\nvoid __cdecl\nfcn.0045107a(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, uint noname_13\n            , uint noname_14, uint noname_15, uint noname_16, uint noname_17, uint noname_18, uint noname_19, \n            uint noname_20, uint noname_21, uint noname_22, uint noname_23, uint arg_8h, uint noname_25, \n            uint lpWideCharStr, uint arg_14h, uint noname_28, uint noname_29, uint CodePage)\n\n{\n    int32_t iVar1;\n    int16_t *piVar2;\n    uchar *arg_8h_00;\n    int32_t iVar3;\n    int32_t unaff_EBP;\n    uint var_34h;\n    uint Locale;\n    uint dwMapFlags;\n    uint lpSrcStr;\n    uint cchSrc;\n    uint lpDestStr;\n    uint cchDest;\n    uint var_18h_2;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_20h_3;\n    uint var_4h;\n    uint uVar4;\n    uint uVar5;\n    uint uStack72;\n    uint uStack68;\n    uint uStack64;\n    uint uStack60;\n    uint var_34h_2;\n    uint uStack52;\n    uint var_2ch_3;\n    uint var_28h_3;\n    uint var_24h_3;\n    uint var_20h_4;\n    uint var_1ch_2;\n    uint uStack28;\n    uint uStack24;\n    uint uStack20;\n    uint uStack16;\n    uint var_40h;\n    uint var_4h_2;\n    uint uStack4;\n    \n    uStack4 = 0x24;\n    var_4h_2 = 0x45b380;\n    var_40h = 0x451086;\n    fcn.0044dc28();\n    if (*0x4675a4 == 0) {\n        var_40h = 0;\n        uStack16 = 0;\n        uStack20 = 1;\n        uStack24 = 0x462068;\n        uStack28 = 0x100;\n        var_1ch_2 = 0;\n        var_20h_4 = 0x4510a7;\n        iVar1 = (**0x459300)();\n        if (iVar1 == 0) {\n            var_40h = 0x4510b9;\n            iVar1 = (*_sym.imp.KERNEL32.DLL_GetLastError)();\n            if (iVar1 == 0x78) {\n                *0x4675a4 = 2;\n            }\n        }\n        else {\n            *0x4675a4 = 1;\n        }\n    }\n    if (0 < *(unaff_EBP + 0x14)) {\n        iVar1 = *(unaff_EBP + 0x14);\n        piVar2 = *(unaff_EBP + 0x10);\n        do {\n            iVar1 = iVar1 + -1;\n            if (*piVar2 == 0) goto code_r0x004510e2;\n            piVar2 = piVar2 + 1;\n        } while (iVar1 != 0);\n        iVar1 = -1;\ncode_r0x004510e2:\n        *(unaff_EBP + 0x14) = *(unaff_EBP + 0x14) + (-1 - iVar1);\n    }\n    if (*0x4675a4 == 1) {\n        var_40h = *(unaff_EBP + 0x1c);\n        uStack16 = *(unaff_EBP + 0x18);\n        uStack20 = *(unaff_EBP + 0x14);\n        uStack24 = *(unaff_EBP + 0x10);\n        uStack28 = *(unaff_EBP + 0xc);\n        var_1ch_2 = *(unaff_EBP + 8);\n        var_20h_4 = 0x45110b;\n        (**0x459300)();\n        goto code_r0x004512ca;\n    }\n    if ((*0x4675a4 != 2) && (*0x4675a4 != 0)) goto code_r0x004512ca;\n    *(unaff_EBP + -0x24) = 0;\n    *(unaff_EBP + -0x2c) = 0;\n    *(unaff_EBP + -0x28) = 0;\n    if (*(unaff_EBP + 8) == 0) {\n        *(unaff_EBP + 8) = *0x4678d4;\n    }\n    if (*(unaff_EBP + 0x20) == 0) {\n        *(unaff_EBP + 0x20) = *0x4678e4;\n    }\n    var_40h = *(unaff_EBP + 8);\n    uStack16 = 0x451144;\n    iVar1 = fcn.00455d9f(var_40h);\n    if ((*(unaff_EBP + 0x20) != iVar1) && (iVar1 != -1)) {\n        *(unaff_EBP + 0x20) = iVar1;\n    }\n    var_40h = 0;\n    uStack16 = 0;\n    uStack20 = 0;\n    uStack24 = 0;\n    uStack28 = *(unaff_EBP + 0x14);\n    var_1ch_2 = *(unaff_EBP + 0x10);\n    var_20h_4 = 0;\n    var_24h_3 = *(unaff_EBP + 0x20);\n    var_28h_3 = 0x451166;\n    iVar1 = (**0x459198)();\n    *(unaff_EBP + -0x20) = iVar1;\n    if (iVar1 == 0) goto code_r0x004512ca;\n    *(unaff_EBP + -4) = 0;\n    var_28h_3 = 0x451182;\n    fcn.0044c510();\n    *(unaff_EBP + -0x18) = &fcn.0045107a::var_24h_3;\n    *(unaff_EBP + -0x1c) = &fcn.0045107a::var_24h_3;\n    *(unaff_EBP + -4) = 0xffffffff;\n    if (*(unaff_EBP + -0x1c) == 0) {\n        var_28h_3 = *(unaff_EBP + -0x20);\n        var_2ch_3 = 0x4511b5;\n        iVar1 = fcn.00449f7f();\n        *(unaff_EBP + -0x1c) = iVar1;\n        if (iVar1 == 0) goto code_r0x004512ca;\n        *(unaff_EBP + -0x2c) = 1;\n    }\n    var_28h_3 = 0;\n    var_2ch_3 = 0;\n    uStack52 = *(unaff_EBP + -0x20);\n    var_34h_2 = *(unaff_EBP + -0x1c);\n    uStack60 = *(unaff_EBP + 0x14);\n    uStack64 = *(unaff_EBP + 0x10);\n    uStack68 = 0;\n    uStack72 = *(unaff_EBP + 0x20);\n    iVar1 = (**0x459198)();\n    if (iVar1 == 0) {\ncode_r0x004512aa:\n        arg_8h_00 = *(unaff_EBP + -0x34);\n    }\n    else {\n        arg_8h_00 = &stack0xffffffb8;\n        iVar1 = (*_sym.imp.KERNEL32.DLL_LCMapStringA)\n                          (*(unaff_EBP + 8), *(unaff_EBP + 0xc), *(unaff_EBP + -0x1c), *(unaff_EBP + -0x20), 0, 0);\n        *(unaff_EBP + -0x30) = iVar1;\n        if (iVar1 == 0) goto code_r0x004512aa;\n        *(unaff_EBP + -4) = 1;\n        fcn.0044c510();\n        *(unaff_EBP + -0x18) = &stack0xffffffb8;\n        *(unaff_EBP + -0x34) = &stack0xffffffb8;\n        *(unaff_EBP + -4) = 0xffffffff;\n        if (*0x10 == 0x48) {\n            arg_8h_00 = fcn.00449f7f(iVar1);\n            if (arg_8h_00 != NULL) {\n                *(unaff_EBP + -0x28) = 1;\n                goto code_r0x0045124c;\n            }\n        }\n        else {\ncode_r0x0045124c:\n            iVar3 = (*_sym.imp.KERNEL32.DLL_LCMapStringA)\n                              (*(unaff_EBP + 8), *(unaff_EBP + 0xc), *(unaff_EBP + -0x1c), *(unaff_EBP + -0x20), \n                               arg_8h_00, iVar1);\n            if (iVar3 != 0) {\n                if ((*(unaff_EBP + 0xd) & 4) == 0) {\n                    if (*(unaff_EBP + 0x1c) == 0) {\n                        uVar5 = 0;\n                        uVar4 = 0;\n                    }\n                    else {\n                        uVar5 = *(unaff_EBP + 0x1c);\n                        uVar4 = *(unaff_EBP + 0x18);\n                    }\n                    uVar5 = (*_sym.imp.KERNEL32.DLL_MultiByteToWideChar)\n                                      (*(unaff_EBP + 0x20), 1, arg_8h_00, iVar1, uVar4, uVar5);\n                    *(unaff_EBP + -0x24) = uVar5;\n                }\n                else {\n                    *(unaff_EBP + -0x24) = iVar1;\n                    if (*(unaff_EBP + 0x1c) != 0) {\n                        if (*(unaff_EBP + 0x1c) < iVar1) {\n                            iVar1 = *(unaff_EBP + 0x1c);\n                        }\n                        fcn.00453f50(*(unaff_EBP + 0x18), arg_8h_00, iVar1);\n                    }\n                }\n            }\n        }\n    }\n    if (*(unaff_EBP + -0x28) != 0) {\n        fcn.0044a128(arg_8h_00);\n    }\n    if (*(unaff_EBP + -0x2c) != 0) {\n        fcn.0044a128(*(unaff_EBP + -0x1c));\n    }\ncode_r0x004512ca:\n    *(unaff_EBP + -0x44) = 0x4512d2;\n    fcn.0044dc63();\n    return;\n}\n",
        "token_count": 2629
    },
    "00453568": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00453568(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint uStack300;\n    uchar *puStack296;\n    uint uStack292;\n    uchar auStack276 [4];\n    uchar auStack272 [124];\n    uchar auStack148 [136];\n    uchar uStack12;\n    uint32_t uStack8;\n    \n    uStack8 = *0x465718 ^ auStack148;\n    uVar1 = 0;\n    do {\n        if (param_1 == *(uVar1 * 8 + 0x465cd0)) break;\n        uVar1 = uVar1 + 1;\n    } while (uVar1 < 0x13);\n    if (param_1 == *(uVar1 * 8 + 0x465cd0)) {\n        if ((*0x46741c == 1) || ((*0x46741c == 0 && (*0x46545c == 1)))) {\n            uStack292 = 0;\n            puStack296 = auStack276;\n            uStack300 = *(uVar1 * 8 + 0x465cd4);\n            uStack300 = fcn.00449fa0();\n            (*_sym.imp.KERNEL32.DLL_GetStdHandle)();\n            (**0x45922c)();\n        }\n        else if (param_1 != 0xfc) {\n            uStack292 = 0x104;\n            puStack296 = auStack272;\n            uStack300 = 0;\n            uStack12 = 0;\n            iVar2 = (**0x459334)();\n            if (iVar2 == 0) {\n                fcn.0044a030();\n            }\n            iVar2 = fcn.00449fa0();\n            if (0x3c < iVar2 + 1U) {\n                fcn.00449fa0();\n                fcn.00453f50();\n            }\n            fcn.00449fa0();\n            fcn.00449fa0();\n            fcn.0044c510();\n            fcn.0044a030();\n            fcn.0044a040();\n            fcn.0044a040();\n            fcn.0044a040(&uStack300);\n            fcn.0045637d(&uStack300, 0x45b8b8, 0x12010);\n        }\n    }\n    fcn.0044ce09();\n    return;\n}\n",
        "token_count": 534
    },
    "00453a28": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.00453a28(void)\n\n{\n    char *pcVar1;\n    char cVar2;\n    int16_t iVar3;\n    ushort *puVar4;\n    code *pcVar5;\n    int16_t *piVar6;\n    int16_t *piVar7;\n    int32_t iVar8;\n    char *pcVar9;\n    ushort *arg_8h;\n    int32_t unaff_EBX;\n    int16_t *arg_ch;\n    int32_t iVar10;\n    \n    pcVar5 = *0x459348;\n    arg_ch = NULL;\n    iVar10 = 0;\n    if (*0x467894 == 0) {\n        arg_ch = (**0x459348)();\n        if (arg_ch != NULL) {\n            *0x467894 = 1;\n            goto code_r0x00453a76;\n        }\n        iVar8 = (*_sym.imp.KERNEL32.DLL_GetLastError)();\n        if (iVar8 == 0x78) {\n            *0x467894 = 2;\n        }\n    }\n    if (*0x467894 != 1) {\n        if ((*0x467894 != 2) && (*0x467894 != 0)) {\n            return 0;\n        }\n        pcVar9 = (**0x459340)();\n        if (pcVar9 == NULL) {\n            return 0;\n        }\n        cVar2 = *pcVar9;\n        pcVar1 = pcVar9;\n        while (cVar2 != '\\0') {\n            iVar8 = (*_sym.imp.KERNEL32.DLL_MultiByteToWideChar)(0, 1, pcVar1, 0xffffffff, 0, 0);\n            if (iVar8 == 0) {\n                return 0;\n            }\n            iVar10 = iVar10 + iVar8;\n            iVar8 = fcn.00449fa0(pcVar1);\n            pcVar1 = pcVar1 + iVar8 + 1;\n            cVar2 = *pcVar1;\n        }\n        arg_8h = fcn.00449f7f((iVar10 + 1) * 2);\n        if (arg_8h != NULL) {\n            cVar2 = *pcVar9;\n            pcVar1 = pcVar9;\n            puVar4 = arg_8h;\n            while( true ) {\n                if (cVar2 == '\\0') {\n                    *puVar4 = 0;\n                    (**0x45933c)(pcVar9);\n                    return unaff_EBX;\n                }\n                iVar8 = (*_sym.imp.KERNEL32.DLL_MultiByteToWideChar)\n                                  (0, 1, pcVar1, 0xffffffff, puVar4, (iVar10 + 1) - (puVar4 - arg_8h >> 1));\n                if (iVar8 == 0) break;\n                iVar8 = fcn.00449fa0(pcVar1);\n                pcVar1 = pcVar1 + iVar8 + 1;\n                iVar8 = fcn.0044985c(puVar4);\n                cVar2 = *pcVar1;\n                puVar4 = puVar4 + iVar8 + 1;\n            }\n            fcn.0044a128(arg_8h);\n        }\n        (**0x45933c)(pcVar9);\n        return 0;\n    }\ncode_r0x00453a76:\n    if ((arg_ch == NULL) && (arg_ch = (*pcVar5)(),  arg_ch == NULL)) {\n        return 0;\n    }\n    iVar3 = *arg_ch;\n    piVar7 = arg_ch;\n    while (iVar3 != 0) {\n        do {\n            piVar6 = piVar7;\n            piVar7 = piVar6 + 1;\n        } while (*piVar7 != 0);\n        piVar7 = piVar6 + 2;\n        iVar3 = *piVar7;\n    }\n    iVar10 = piVar7 + (2 - arg_ch);\n    iVar8 = fcn.00449f7f(iVar10);\n    if (iVar8 == 0) {\n        iVar8 = 0;\n    }\n    else {\n        fcn.0044a6b0(iVar8, arg_ch, iVar10);\n    }\n    (**0x459344)(arg_ch);\n    return iVar8;\n}\n",
        "token_count": 946
    },
    "00453b92": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.00453b92(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t arg_8h;\n    \n    pcVar1 = *0x459350;\n    if (*0x467898 == 0) {\n        iVar2 = (**0x459350)();\n        if (iVar2 == 0) {\n            iVar2 = (*_sym.imp.KERNEL32.DLL_GetLastError)();\n            if (iVar2 != 0x78) {\n                return 0;\n            }\n            *0x467898 = 2;\ncode_r0x00453be0:\n            uVar3 = (**0x45934c)();\n            pcVar1 = _sym.imp.KERNEL32.DLL_MultiByteToWideChar;\n            iVar2 = (*_sym.imp.KERNEL32.DLL_MultiByteToWideChar)(0, 1, uVar3, 0xffffffff, 0, 0);\n            if ((iVar2 != 0) && (arg_8h = fcn.00449f7f(iVar2 * 2),  arg_8h != 0)) {\n                iVar2 = (*pcVar1)(0, 1, uVar3, 0xffffffff, arg_8h, iVar2);\n                if (iVar2 != 0) {\n                    return arg_8h;\n                }\n                fcn.0044a128(arg_8h);\n            }\n            return 0;\n        }\n        *0x467898 = 1;\n    }\n    else if (*0x467898 != 1) {\n        if (*0x467898 != 2) {\n            return 0;\n        }\n        goto code_r0x00453be0;\n    }\n    iVar2 = (*pcVar1)();\n    return iVar2;\n}\n",
        "token_count": 396
    },
    "004543b6": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004543b6(void)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uchar uVar4;\n    char cVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    uint8_t *puVar8;\n    uint unaff_ESI;\n    uint *puVar9;\n    uint noname_8;\n    uint noname_9;\n    uint *noname_2;\n    uint noname_11;\n    uchar *noname_4;\n    uint noname_13;\n    uint noname_14;\n    uint noname_15;\n    uint noname_8_00;\n    uint noname_10;\n    uchar *noname_3;\n    uint noname_12;\n    uint noname_13_00;\n    uint noname_14_00;\n    uint noname_7;\n    uchar *arg_8h;\n    uint in_stack_fffffae4;\n    uint in_stack_fffffae8;\n    uint in_stack_fffffaec;\n    uint in_stack_fffffaf0;\n    uint in_stack_fffffaf4;\n    uint in_stack_fffffaf8;\n    uint in_stack_fffffafc;\n    uint in_stack_fffffb00;\n    uint in_stack_fffffb04;\n    uchar auStack1180 [404];\n    uchar auStack776 [256];\n    uchar auStack520 [256];\n    uint auStack264 [64];\n    uint32_t uStack8;\n    \n    uStack8 = *0x465718 ^ auStack1180;\n    arg_8h = &stack0xfffffae4;\n    noname_7 = *0x480924;\n    iVar2 = (**0x459354)();\n    if (iVar2 == 1) {\n        uVar3 = 0;\n        do {\n            *(auStack264 + uVar3) = uVar3;\n            uVar3 = uVar3 + 1;\n        } while (uVar3 < 0x100);\n        uVar1 = in_stack_fffffae8 >> 0x10;\n        auStack264[0]._0_1_ = 0x20;\n        if (uVar1 != 0) {\n            puVar8 = &stack0xfffffaeb;\n            do {\n                uVar3 = uVar1;\n                if (uVar3 <= *puVar8) {\n                    uVar6 = (*puVar8 - uVar3) + 1;\n                    puVar9 = auStack264 + uVar3;\n                    for (uVar7 = uVar6 >> 2; uVar7 != 0; uVar7 = uVar7 - 1) {\n                        *puVar9 = 0x20202020;\n                        puVar9 = puVar9 + 1;\n                    }\n                    for (uVar6 = uVar6 & 3; uVar6 != 0; uVar6 = uVar6 - 1) {\n                        *puVar9 = 0x20;\n                        puVar9 = puVar9 + 1;\n                    }\n                }\n                uVar1 = puVar8[1];\n                puVar8 = puVar8 + 2;\n            } while (uVar1 != 0);\n        }\n        noname_14_00 = 0;\n        noname_3 = &stack0xfffffaf8;\n        noname_10 = 0x100;\n        puVar9 = auStack264;\n        noname_8_00 = 1;\n        noname_12 = *0x480924;\n        noname_13_00 = *0x480814;\n        fcn.00454074(1, puVar9, 0x100, noname_3, *0x480924, *0x480814, 0, noname_7, arg_8h, unaff_ESI, in_stack_fffffae4\n                     , in_stack_fffffae8, in_stack_fffffaec, in_stack_fffffaf0, in_stack_fffffaf4);\n        noname_15 = 0;\n        noname_4 = auStack520;\n        noname_13 = 0x100;\n        noname_11 = 0x100;\n        noname_2 = auStack264;\n        noname_9 = 0x100;\n        noname_8 = *0x480814;\n        noname_14 = *0x480924;\n        fcn.00456537(*0x480814, 0x100, noname_2, 0x100, noname_4, 0x100, *0x480924, 0, noname_8_00, puVar9, noname_10, \n                     noname_3, noname_12, noname_13_00, noname_14_00, noname_7, arg_8h, unaff_ESI, in_stack_fffffae4, \n                     in_stack_fffffae8, in_stack_fffffaec, in_stack_fffffaf0, in_stack_fffffaf4, in_stack_fffffaf8, \n                     in_stack_fffffafc, in_stack_fffffb00, in_stack_fffffb04);\n        fcn.00456537(*0x480814, 0x200, auStack264, 0x100, auStack776, 0x100, *0x480924, 0, noname_8, noname_9, noname_2\n                     , noname_11, noname_4, noname_13, noname_14, noname_15, noname_8_00, puVar9, noname_10, noname_3, \n                     noname_12, noname_13_00, noname_14_00, noname_7, arg_8h, unaff_ESI, in_stack_fffffae4);\n        uVar3 = 0;\n        do {\n            if ((*(&stack0xfffffaf8 + uVar3 * 2) & 1) == 0) {\n                if ((*(&stack0xfffffaf8 + uVar3 * 2) & 2) != 0) {\n                    *(uVar3 + 0x480821) = *(uVar3 + 0x480821) | 0x20;\n                    uVar4 = auStack776[uVar3];\n                    goto code_r0x004544cc;\n                }\n                *(uVar3 + 0x480940) = 0;\n            }\n            else {\n                *(uVar3 + 0x480821) = *(uVar3 + 0x480821) | 0x10;\n                uVar4 = auStack520[uVar3];\ncode_r0x004544cc:\n                *(uVar3 + 0x480940) = uVar4;\n            }\n            uVar3 = uVar3 + 1;\n        } while (uVar3 < 0x100);\n    }\n    else {\n        uVar3 = 0;\n        do {\n            if ((uVar3 < 0x41) || (0x5a < uVar3)) {\n                if ((0x60 < uVar3) && (uVar3 < 0x7b)) {\n                    *(uVar3 + 0x480821) = *(uVar3 + 0x480821) | 0x20;\n                    cVar5 = uVar3 + -0x20;\n                    goto code_r0x0045450f;\n                }\n                *(uVar3 + 0x480940) = 0;\n            }\n            else {\n                *(uVar3 + 0x480821) = *(uVar3 + 0x480821) | 0x10;\n                cVar5 = uVar3 + ' ';\ncode_r0x0045450f:\n                *(uVar3 + 0x480940) = cVar5;\n            }\n            uVar3 = uVar3 + 1;\n        } while (uVar3 < 0x100);\n    }\n    fcn.0044ce09();\n    return;\n}\n",
        "token_count": 1784
    },
    "004548d2": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.004548d2(uint arg_8h, uint arg_ch)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t unaff_EBP;\n    uint var_20h;\n    uint var_4h;\n    \n    fcn.0044dc28(0x45baa0, 0x10);\n    if (*0x467918 == NULL) {\n        if (*0x4673cc != 1) {\n            iVar2 = (*_sym.imp.KERNEL32.DLL_GetModuleHandleA)(0x45c5d8);\n            if (iVar2 != 0) {\n                *0x467918 = (*_sym.imp.KERNEL32.DLL_GetProcAddress)(iVar2, 0x45ba74);\n                if (*0x467918 != NULL) goto code_r0x0045491e;\n            }\n        }\n        *0x467918 = 0x4548c2;\n    }\ncode_r0x0045491e:\n    pcVar1 = *0x467918;\n    *(unaff_EBP + -4) = 0;\n    uVar3 = (*pcVar1)(*(unaff_EBP + 8), *(unaff_EBP + 0xc));\n    *(unaff_EBP + -0x20) = uVar3;\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.0044dc63();\n    return;\n}\n",
        "token_count": 341
    },
    "00454e39": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00454e39(int32_t arg_8h, uint16_t *lpWideCharStr, uint8_t *arg_10h, uint32_t arg_14h)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    \n    if ((arg_10h != NULL) && (arg_14h != 0)) {\n        uVar1 = *arg_10h;\n        if (uVar1 != 0) {\n            if (*(arg_8h + 0x14) == 0) {\n                if (lpWideCharStr != NULL) {\n                    *lpWideCharStr = uVar1;\n                }\n                return 1;\n            }\n            if ((*(*(arg_8h + 0x48) + 1 + uVar1 * 2) & 0x80) == 0) {\n                iVar2 = (*_sym.imp.KERNEL32.DLL_MultiByteToWideChar)\n                                  (*(arg_8h + 4), 9, arg_10h, 1, lpWideCharStr, lpWideCharStr != NULL);\n                if (iVar2 != 0) {\n                    return 1;\n                }\n            }\n            else {\n                iVar2 = *(arg_8h + 0x28);\n                if ((((1 < iVar2) && (iVar2 <= arg_14h)) &&\n                    (iVar2 = (*_sym.imp.KERNEL32.DLL_MultiByteToWideChar)\n                                       (*(arg_8h + 4), 9, arg_10h, iVar2, lpWideCharStr, lpWideCharStr != NULL), \n                    iVar2 != 0)) || ((*(arg_8h + 0x28) <= arg_14h && (arg_10h[1] != 0)))) {\n                    return *(arg_8h + 0x28);\n                }\n            }\n            puVar3 = fcn.0044ddb5();\n            *puVar3 = 0x2a;\n            return 0xffffffff;\n        }\n        if (lpWideCharStr != NULL) {\n            *lpWideCharStr = 0;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 481
    },
    "0045514d": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045514d(uint32_t *arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t var_24h;\n    int32_t var_20h;\n    uint32_t var_1ch;\n    uint32_t var_18h;\n    uint32_t var_14h;\n    uint var_10h;\n    uint32_t var_4h;\n    \n    var_4h = *0x465718 ^ &stack0xfffffffc;\n    var_20h = arg_ch;\n    uVar2 = 0;\n    var_14h = fcn.00456cc4(&var_10h, &var_24h, arg_ch, 0, 0, 0, 0);\n    if ((var_14h & 4) == 0) {\n        iVar1 = fcn.00456c0e(&var_10h, &var_1ch);\n        if (((var_14h & 2) != 0) || (iVar1 == 1)) {\n            uVar2 = 0x80;\n        }\n        if (((var_14h & 1) != 0) || (iVar1 == 2)) {\n            uVar2 = uVar2 | 0x100;\n        }\n    }\n    else {\n        uVar2 = 0x200;\n        var_1ch = 0;\n        var_18h = 0;\n    }\n    arg_8h[1] = var_24h - var_20h;\n    arg_8h[4] = var_1ch;\n    arg_8h[5] = var_18h;\n    *arg_8h = uVar2;\n    fcn.0044ce09();\n    return;\n}\n",
        "token_count": 401
    },
    "00455de6": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n// WARNING: Variable defined which should be unmapped: var_34h\n// WARNING: Variable defined which should be unmapped: lpCPInfo\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_18h\n\nvoid __cdecl\nfcn.00455de6(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint arg_8h, uint arg_ch, uint arg_10h, \n            uint arg_14h, uint arg_18h)\n\n{\n    uint uVar1;\n    int32_t *piVar2;\n    uchar *puVar3;\n    int32_t iVar4;\n    uchar *arg_ch_00;\n    uint *arg_8h_00;\n    uint32_t unaff_EBP;\n    uint var_8h;\n    uint CodePage;\n    uint var_54h_2;\n    uint var_60h;\n    uint var_4ch_2;\n    uint cbMultiByte;\n    uint lpMultiByteStr;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint lpCPInfo;\n    int32_t var_1ch;\n    uchar *var_18h;\n    uint var_4h_2;\n    uint uStack4;\n    \n    uStack4 = 0x44;\n    var_4h_2 = 0x45bcd8;\n    var_18h = 0x455df2;\n    fcn.0044dc28();\n    *(unaff_EBP - 0x1c) = *0x465718 ^ unaff_EBP;\n    uVar1 = *(unaff_EBP + 0x10);\n    *(unaff_EBP - 0x44) = uVar1;\n    piVar2 = *(unaff_EBP + 0x14);\n    *(unaff_EBP - 0x50) = piVar2;\n    *(unaff_EBP - 0x40) = *(unaff_EBP + 0x18);\n    *(unaff_EBP - 0x34) = 0;\n    *(unaff_EBP - 0x4c) = 0;\n    puVar3 = *piVar2;\n    *(unaff_EBP - 0x48) = puVar3;\n    *(unaff_EBP - 0x38) = 0;\n    if (*(unaff_EBP + 8) == *(unaff_EBP + 0xc)) {\n        arg_8h_00 = *(unaff_EBP - 0x54);\n    }\n    else {\n        var_18h = unaff_EBP - 0x30;\n        var_1ch = *(unaff_EBP + 8);\n        iVar4 = (**0x459354)();\n        if ((((iVar4 != 0) && (*(unaff_EBP - 0x30) == 1)) &&\n            (iVar4 = (**0x459354)(*(unaff_EBP + 0xc), unaff_EBP - 0x30),  iVar4 != 0)) && (*(unaff_EBP - 0x30) == 1)) {\n            *(unaff_EBP - 0x38) = 1;\n        }\n        if (*(unaff_EBP - 0x38) == 0) {\n            arg_ch_00 = *(unaff_EBP - 0x3c);\n        }\n        else {\n            arg_ch_00 = puVar3;\n            if (puVar3 == 0xffffffff) {\n                iVar4 = fcn.00449fa0(uVar1);\n                arg_ch_00 = iVar4 + 1;\n            }\n            *(unaff_EBP - 0x3c) = arg_ch_00;\n        }\n        if (*(unaff_EBP - 0x38) == 0) {\n            arg_ch_00 = (*_sym.imp.KERNEL32.DLL_MultiByteToWideChar)\n                                  (*(unaff_EBP + 8), 1, *(unaff_EBP - 0x44), puVar3, 0, 0);\n            *(unaff_EBP - 0x3c) = arg_ch_00;\n            if (arg_ch_00 == NULL) goto code_r0x00455fad;\n        }\n        arg_8h_00 = &fcn.00455de6::var_1ch;\n        *(unaff_EBP - 4) = 0;\n        fcn.0044c510();\n        *(unaff_EBP - 0x18) = &fcn.00455de6::var_1ch;\n        *(unaff_EBP - 0x54) = &fcn.00455de6::var_1ch;\n        fcn.00449b00(&fcn.00455de6::var_1ch, 0, arg_ch_00 * 2);\n        *(unaff_EBP - 4) = 0xffffffff;\n        if (*0x10 == 0x10) {\n            arg_8h_00 = fcn.0045096f(2, arg_ch_00);\n            if (arg_8h_00 == NULL) goto code_r0x00455fad;\n            *(unaff_EBP - 0x4c) = 1;\n        }\n        iVar4 = (*_sym.imp.KERNEL32.DLL_MultiByteToWideChar)\n                          (*(unaff_EBP + 8), 1, *(unaff_EBP - 0x44), *(unaff_EBP - 0x48), arg_8h_00, arg_ch_00);\n        if (iVar4 != 0) {\n            if (*(unaff_EBP - 0x40) == 0) {\n                if (*(unaff_EBP - 0x38) == 0) {\n                    var_18h = NULL;\n                    var_1ch = 0;\n                    arg_ch_00 = (**0x459198)(*(unaff_EBP + 0xc), 0, arg_8h_00, arg_ch_00, 0, 0);\n                    if (arg_ch_00 == NULL) goto code_r0x00455f9e;\n                }\n                var_1ch = 1;\n                var_18h = arg_ch_00;\n                iVar4 = fcn.0045096f(1, arg_ch_00);\n                *(unaff_EBP - 0x34) = iVar4;\n                if (iVar4 != 0) {\n                    var_18h = NULL;\n                    var_1ch = 0;\n                    iVar4 = (**0x459198)(*(unaff_EBP + 0xc), 0, arg_8h_00, arg_ch_00, iVar4, arg_ch_00);\n                    if (iVar4 == 0) {\n                        var_18h = *(unaff_EBP - 0x34);\n                        var_1ch = 0x455f88;\n                        fcn.0044a128(var_18h);\n                        *(unaff_EBP - 0x34) = 0;\n                    }\n                    else if (*(unaff_EBP - 0x48) != -1) {\n                        **(unaff_EBP - 0x50) = iVar4;\n                    }\n                }\n            }\n            else {\n                var_18h = NULL;\n                var_1ch = 0;\n                iVar4 = (**0x459198)(*(unaff_EBP + 0xc), 0, arg_8h_00, arg_ch_00, *(unaff_EBP - 0x40), \n                                     *(unaff_EBP + 0x1c));\n                if (iVar4 != 0) {\n                    *(unaff_EBP - 0x34) = *(unaff_EBP - 0x40);\n                }\n            }\n        }\n    }\ncode_r0x00455f9e:\n    if (*(unaff_EBP - 0x4c) != 0) {\n        var_1ch = 0x455fa9;\n        var_18h = arg_8h_00;\n        fcn.0044a128(arg_8h_00);\n    }\ncode_r0x00455fad:\n    *(unaff_EBP - 100) = 0x455fba;\n    fcn.0044ce09();\n    *(unaff_EBP - 100) = 0x455fbf;\n    fcn.0044dc63();\n    return;\n}\n",
        "token_count": 1907
    },
    "0045637d": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0045637d(uint arg_8h, uint arg_ch, uint32_t arg_10h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar4 = 0;\n    if (*0x467978 == NULL) {\n        iVar2 = (*_sym.imp.KERNEL32.DLL_LoadLibraryA)(0x45c1f4);\n        pcVar1 = _sym.imp.KERNEL32.DLL_GetProcAddress;\n        if ((iVar2 == 0) || (*0x467978 = (*_sym.imp.KERNEL32.DLL_GetProcAddress)(iVar2, 0x45bd4c),  *0x467978 == NULL))\n        {\n            return 0;\n        }\n        *0x46797c = (*pcVar1)(iVar2, 0x45bd3c);\n        *0x467980 = (*pcVar1)(iVar2, 0x45bd28);\n        if ((*0x4673cc == 2) && (*0x467988 = (*pcVar1)(iVar2, 0x45bd0c),  *0x467988 != NULL)) {\n            *0x467984 = (*pcVar1)(iVar2, 0x45bcf4);\n        }\n    }\n    if ((*0x467984 == NULL) ||\n       (((iVar2 = (**0x467984)(),  iVar2 != 0 && (iVar2 = (**0x467988)(iVar2, 1, &var_10h, 0xc, &var_4h),  iVar2 != 0))\n        && ((var_8h & 1) != 0)))) {\n        if (((*0x46797c != NULL) && (iVar4 = (**0x46797c)(),  iVar4 != 0)) && (*0x467980 != NULL)) {\n            iVar4 = (**0x467980)(iVar4);\n        }\n    }\n    else if (*0x4673d8 < 4) {\n        arg_10h = arg_10h | 0x40000;\n    }\n    else {\n        arg_10h = arg_10h | 0x200000;\n    }\n    uVar3 = (**0x467978)(iVar4, arg_8h, arg_ch, arg_10h);\n    return uVar3;\n}\n",
        "token_count": 557
    },
    "00456537": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n// WARNING: Variable defined which should be unmapped: var_3ch_2\n// WARNING: Variable defined which should be unmapped: var_38h\n// WARNING: Variable defined which should be unmapped: var_58h\n// WARNING: Variable defined which should be unmapped: lpSrcStr\n// WARNING: Variable defined which should be unmapped: var_48h\n// WARNING: Variable defined which should be unmapped: var_44h_2\n// WARNING: Variable defined which should be unmapped: var_40h_2\n// WARNING: Variable defined which should be unmapped: var_3ch\n// WARNING: Variable defined which should be unmapped: var_34h\n// WARNING: Variable defined which should be unmapped: var_30h_2\n// WARNING: Variable defined which should be unmapped: var_4ch\n// WARNING: Variable defined which should be unmapped: var_34h_2\n// WARNING: Variable defined which should be unmapped: var_20h\n\nvoid __cdecl\nfcn.00456537(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, uint noname_13\n            , uint noname_14, uint noname_15, uint noname_16, uint noname_17, uint CodePage, uint arg_24h, uint arg_8h, \n            uint arg_ch, uint arg_10h, uint cchSrc, uint arg_18h, uint arg_1ch, uint arg_20h)\n\n{\n    int32_t iVar1;\n    char *pcVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint *noname_2_00;\n    int32_t unaff_EBP;\n    uchar *arg_8h_00;\n    uint var_4ch;\n    uint var_28h_2;\n    uint var_44h;\n    uint var_40h;\n    uint lpWideCharStr;\n    uint lpDestStr;\n    uint cchDest;\n    uint var_30h;\n    uint var_24h_2;\n    uint var_28h;\n    uint var_24h;\n    uint Locale;\n    uint dwMapFlags;\n    uint lpMultiByteStr;\n    uint cbMultiByte;\n    uint var_18h_2;\n    uint var_4h;\n    uint uVar5;\n    uint uVar6;\n    uint var_3ch_2;\n    uint var_38h;\n    uint var_34h_2;\n    uint var_20h;\n    uint lpSrcStr;\n    int32_t var_48h;\n    int32_t var_44h_2;\n    int32_t var_40h_2;\n    uint var_3ch;\n    uint var_58h;\n    uint var_34h;\n    uint var_30h_2;\n    \n    var_30h_2 = 0x3c;\n    var_34h = 0x45bd58;\n    var_58h = 0x456543;\n    fcn.0044dc28();\n    if (*0x467994 == 0) {\n        var_58h = 0;\n        var_3ch = 0;\n        var_40h_2 = 1;\n        var_44h_2 = 0x462068;\n        var_48h = 0x100;\n        lpSrcStr = 0;\n        iVar1 = (**0x459300)();\n        if (iVar1 == 0) {\n            var_58h = 0x456576;\n            iVar1 = (*_sym.imp.KERNEL32.DLL_GetLastError)();\n            if (iVar1 == 0x78) {\n                *0x467994 = 2;\n            }\n        }\n        else {\n            *0x467994 = 1;\n        }\n    }\n    if (0 < *(unaff_EBP + 0x14)) {\n        iVar1 = *(unaff_EBP + 0x14);\n        pcVar2 = *(unaff_EBP + 0x10);\n        do {\n            iVar1 = iVar1 + -1;\n            if (*pcVar2 == '\\0') goto code_r0x0045659d;\n            pcVar2 = pcVar2 + 1;\n        } while (iVar1 != 0);\n        iVar1 = -1;\ncode_r0x0045659d:\n        *(unaff_EBP + 0x14) = *(unaff_EBP + 0x14) + (-1 - iVar1);\n    }\n    if ((*0x467994 != 2) && (*0x467994 != 0)) {\n        if (*0x467994 != 1) goto code_r0x00456904;\n        *(unaff_EBP + -0x2c) = 0;\n        *(unaff_EBP + -0x3c) = 0;\n        *(unaff_EBP + -0x38) = 0;\n        if (*(unaff_EBP + 0x20) == 0) {\n            *(unaff_EBP + 0x20) = *0x4678e4;\n        }\n        var_58h = 0;\n        var_3ch = 0;\n        var_40h_2 = *(unaff_EBP + 0x14);\n        var_44h_2 = *(unaff_EBP + 0x10);\n        var_48h = (*(unaff_EBP + 0x24) != 0) * 8 + 1;\n        lpSrcStr = *(unaff_EBP + 0x20);\n        iVar1 = (*_sym.imp.KERNEL32.DLL_MultiByteToWideChar)();\n        *(unaff_EBP + -0x34) = iVar1;\n        if (iVar1 == 0) goto code_r0x00456904;\n        *(unaff_EBP + -4) = 1;\n        fcn.0044c510();\n        *(unaff_EBP + -0x18) = &fcn.00456537::lpSrcStr;\n        *(unaff_EBP + -0x1c) = &fcn.00456537::lpSrcStr;\n        *(unaff_EBP + -4) = 0xffffffff;\n        if (*(unaff_EBP + -0x1c) == 0) {\n            iVar3 = fcn.00449f7f();\n            *(unaff_EBP + -0x1c) = iVar3;\n            if (iVar3 == 0) goto code_r0x00456904;\n            *(unaff_EBP + -0x3c) = 1;\n        }\n        var_34h_2 = *(unaff_EBP + 0x20);\n        iVar3 = (*_sym.imp.KERNEL32.DLL_MultiByteToWideChar)();\n        if (iVar3 != 0) {\n            iVar3 = (**0x459300)(*(unaff_EBP + 8), *(unaff_EBP + 0xc), *(unaff_EBP + -0x1c), iVar1, 0, 0);\n            *(unaff_EBP + -0x2c) = iVar3;\n            if (iVar3 != 0) {\n                if ((*(unaff_EBP + 0xd) & 4) == 0) {\n                    *(unaff_EBP + -4) = 2;\n                    fcn.0044c510();\n                    *(unaff_EBP + -0x18) = &fcn.00456537::var_34h_2;\n                    *(unaff_EBP + -0x20) = &fcn.00456537::var_34h_2;\n                    *(unaff_EBP + -4) = 0xffffffff;\n                    if (*(unaff_EBP + -0x20) == 0) {\n                        iVar4 = fcn.00449f7f(iVar3 * 2);\n                        *(unaff_EBP + -0x20) = iVar4;\n                        if (iVar4 == 0) goto code_r0x0045676c;\n                        *(unaff_EBP + -0x38) = 1;\n                    }\n                    iVar1 = (**0x459300)(*(unaff_EBP + 8), *(unaff_EBP + 0xc), *(unaff_EBP + -0x1c), iVar1, \n                                         *(unaff_EBP + -0x20), iVar3);\n                    if (iVar1 != 0) {\n                        if (*(unaff_EBP + 0x1c) == 0) {\n                            uVar6 = 0;\n                            uVar5 = 0;\n                        }\n                        else {\n                            uVar6 = *(unaff_EBP + 0x1c);\n                            uVar5 = *(unaff_EBP + 0x18);\n                        }\n                        (**0x459198)(*(unaff_EBP + 0x20), 0, *(unaff_EBP + -0x20), iVar3, uVar5, uVar6, 0, 0);\n                    }\n                }\n                else if ((*(unaff_EBP + 0x1c) != 0) && (iVar3 <= *(unaff_EBP + 0x1c))) {\n                    (**0x459300)(*(unaff_EBP + 8), *(unaff_EBP + 0xc), *(unaff_EBP + -0x1c), iVar1, *(unaff_EBP + 0x18)\n                                 , *(unaff_EBP + 0x1c));\n                }\n            }\n        }\ncode_r0x0045676c:\n        if (*(unaff_EBP + -0x38) != 0) {\n            fcn.0044a128(*(unaff_EBP + -0x20));\n        }\n        if (*(unaff_EBP + -0x3c) != 0) {\n            fcn.0044a128(*(unaff_EBP + -0x1c));\n        }\n        goto code_r0x00456904;\n    }\n    *(unaff_EBP + -0x28) = 0;\n    *(unaff_EBP + -0x30) = 0;\n    *(unaff_EBP + -0x40) = 0;\n    if (*(unaff_EBP + 8) == 0) {\n        *(unaff_EBP + 8) = *0x4678d4;\n    }\n    if (*(unaff_EBP + 0x20) == 0) {\n        *(unaff_EBP + 0x20) = *0x4678e4;\n    }\n    var_58h = *(unaff_EBP + 8);\n    var_3ch = 0x4567bc;\n    iVar1 = fcn.00455d9f(var_58h);\n    *(unaff_EBP + -0x44) = iVar1;\n    if (iVar1 == -1) goto code_r0x00456904;\n    if (iVar1 == *(unaff_EBP + 0x20)) {\n        var_58h = *(unaff_EBP + 0x1c);\n        var_3ch = *(unaff_EBP + 0x18);\n        var_40h_2 = *(unaff_EBP + 0x14);\n        var_44h_2 = *(unaff_EBP + 0x10);\n        var_48h = *(unaff_EBP + 0xc);\n        lpSrcStr = *(unaff_EBP + 8);\n        (*_sym.imp.KERNEL32.DLL_LCMapStringA)();\n    }\n    else {\n        var_58h = 0;\n        var_3ch = 0;\n        var_40h_2 = unaff_EBP + 0x14;\n        var_44h_2 = *(unaff_EBP + 0x10);\n        lpSrcStr = *(unaff_EBP + 0x20);\n        var_48h = iVar1;\n        iVar1 = fcn.00455de6(lpSrcStr, iVar1, var_44h_2, var_40h_2, 0, 0, var_34h, var_30h_2, var_4ch);\n        *(unaff_EBP + -0x28) = iVar1;\n        if (iVar1 == 0) goto code_r0x00456904;\n        var_58h = 0;\n        var_3ch = 0;\n        var_40h_2 = *(unaff_EBP + 0x14);\n        var_48h = *(unaff_EBP + 0xc);\n        lpSrcStr = *(unaff_EBP + 8);\n        noname_2_00 = &fcn.00456537::lpSrcStr;\n        var_44h_2 = iVar1;\n        iVar1 = (*_sym.imp.KERNEL32.DLL_LCMapStringA)();\n        *(unaff_EBP + -0x24) = iVar1;\n        arg_8h_00 = NULL;\n        if (iVar1 != 0) {\n            *(unaff_EBP + -4) = 0;\n            fcn.0044c510();\n            *(unaff_EBP + -0x18) = &fcn.00456537::lpSrcStr;\n            *(unaff_EBP + -0x48) = &fcn.00456537::lpSrcStr;\n            fcn.00449b00();\n            *(unaff_EBP + -4) = 0xffffffff;\n            if (*0x10 == 0x20) {\n                noname_2_00 = fcn.00449f7f();\n                arg_8h_00 = noname_2_00;\n                if (noname_2_00 == NULL) goto code_r0x004568b9;\n                fcn.00449b00();\n                *(unaff_EBP + -0x40) = 1;\n            }\n            var_34h_2 = *(unaff_EBP + 8);\n            iVar1 = (*_sym.imp.KERNEL32.DLL_LCMapStringA)();\n            *(unaff_EBP + -0x24) = iVar1;\n            arg_8h_00 = noname_2_00;\n            if (iVar1 != 0) {\n                var_34h_2 = *(unaff_EBP + -0x44);\n                uVar6 = fcn.00455de6(var_34h_2, *(unaff_EBP + 0x20), noname_2_00, unaff_EBP + -0x24, *(unaff_EBP + 0x18)\n                                     , *(unaff_EBP + 0x1c), lpSrcStr, var_48h, var_44h_2);\n                *(unaff_EBP + -0x30) = uVar6;\n            }\n        }\ncode_r0x004568b9:\n        if (*(unaff_EBP + -0x40) != 0) {\n            fcn.0044a128(arg_8h_00);\n        }\n    }\n    if (*(unaff_EBP + -0x28) != 0) {\n        fcn.0044a128(*(unaff_EBP + -0x28));\n    }\n    iVar1 = *(unaff_EBP + -0x30);\n    if ((iVar1 != 0) && (*(unaff_EBP + 0x18) != iVar1)) {\n        fcn.0044a128(iVar1);\n    }\ncode_r0x00456904:\n    *(unaff_EBP + -0x5c) = 0x45690c;\n    fcn.0044dc63();\n    return;\n}\n",
        "token_count": 3498
    },
    "0040b4dd": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040b4dd(int32_t arg_8h, int32_t *arg_ch, int32_t *arg_10h, uint hWnd, int32_t arg_18h)\n\n{\n    int32_t **ppiVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    code *pcVar4;\n    char cVar5;\n    uint32_t in_EAX;\n    uint arg_14h;\n    int32_t iVar6;\n    uint noname_1;\n    uint arg_8h_00;\n    int32_t var_4h;\n    \n    if (in_EAX == 0xffffffff) {\n        in_EAX = 4;\n    }\n    if ((in_EAX & 0xc) == 0) {\n        in_EAX = in_EAX | 4;\n    }\n    arg_14h = fcn.00408c5e(in_EAX | 2);\n    arg_8h_00 = 0x45c284;\n    noname_1 = 0;\n    iVar6 = fcn.00409d87(0, 0x45c284, 0, arg_14h, 0, 0, 0, 0, hWnd, 0, 0);\n    if (iVar6 != 0) {\n        fcn.00449b60(arg_18h, noname_1, arg_8h_00);\n        fcn.00458664();\n        cVar5 = fcn.00404081(&var_4h);\n        pcVar4 = _sym.imp.USER32.dll_SendMessageW;\n        if (cVar5 != '\\0') {\n            ppiVar1 = arg_8h + 0x54 + arg_18h * 4;\n            piVar2 = *ppiVar1;\n            if ((*arg_ch == *piVar2) && (*(piVar2[var_4h + 0x14] + 0x70) == '\\x03')) {\n                *arg_10h = iVar6;\n                iVar3 = *(*ppiVar1)[var_4h + 0x14];\n                arg_10h[9] = iVar3;\n                (*pcVar4)(iVar6, 0x469, iVar3, 0);\n                (*pcVar4)(iVar6, 0x465, 0, 0x80017fff);\n                if (*(arg_8h + 8) == 0) {\n                    *(arg_10h + 0x66) = 0;\n                }\n                return 1;\n            }\n        }\n        (*_sym.imp.USER32.dll_DestroyWindow)(iVar6);\n    }\n    return 0;\n}\n",
        "token_count": 588
    },
    "00413831": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00413831(uint *arg_8h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    int32_t iVar3;\n    int32_t in_EDX;\n    int32_t extraout_EDX;\n    uint32_t *unaff_ESI;\n    uint *puVar4;\n    uint var_30h;\n    uint var_2ch;\n    uint32_t var_27h;\n    uint var_ch;\n    uint var_8h;\n    int32_t item;\n    \n    item = -1;\n    if (((in_ECX != 5) && (in_ECX != 6)) &&\n       ((iVar2 = in_ECX,  in_ECX == 3 ||\n        ((iVar2 = in_ECX,  in_ECX == 4 ||\n         (cVar1 = fcn.00413365(),  in_EDX = extraout_EDX,  iVar2 = item,  cVar1 != '\\0')))))) {\n        item = iVar2;\n        *unaff_ESI = 0;\n        iVar2 = **(in_EDX + 0xe28 + item * 4);\n        var_30h = 0x2c;\n        puVar4 = &var_2ch;\n        for (iVar3 = 10; iVar3 != 0; iVar3 = iVar3 + -1) {\n            *puVar4 = 0;\n            puVar4 = puVar4 + 1;\n        }\n        if (iVar2 != 0) {\n            var_ch = fcn.00449614(0x208);\n            *arg_8h = var_ch;\n            var_2ch = 0x11;\n            var_8h = 0x104;\n            iVar2 = (*_sym.imp.USER32.dll_GetMenuItemInfoW)(iVar2, item, 0, &var_30h);\n            if ((iVar2 != 0) && ((var_27h & 8) == 0)) {\n                if ((stack0xffffffd8 & 3) == 0) {\n                    *unaff_ESI = *unaff_ESI | 0x40;\n                }\n                else {\n                    *unaff_ESI = *unaff_ESI | 0x80;\n                }\n                if ((stack0xffffffd8 & 0x8080) != 0) {\n                    *(unaff_ESI + 1) = *(unaff_ESI + 1) | 1;\n                }\n                if ((stack0xffffffd8 & 8) == 0) {\n                    *unaff_ESI = *unaff_ESI | 4;\n                }\n                else {\n                    *unaff_ESI = *unaff_ESI | 1;\n                }\n                if ((stack0xffffffd8 & 0x1000) != 0) {\n                    *(unaff_ESI + 1) = *(unaff_ESI + 1) | 2;\n                }\n                return 1;\n            }\n            fcn.0044951c(*arg_8h);\n        }\n    }\n    return 0;\n}\n",
        "token_count": 688
    },
    "00414003": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00414003(uint arg_8h)\n\n{\n    int32_t arg_14h;\n    uint32_t uVar1;\n    int32_t unaff_ESI;\n    \n    *(unaff_ESI + 0xc) = 0;\n    *(unaff_ESI + 8) = 0;\n    arg_14h = fcn.0044aa49(arg_8h, 0x45cea4);\n    if (arg_14h == 0) {\n        return;\n    }\n    uVar1 = fcn.0044ae2f(&arg_8h, 1, 3, arg_14h);\n    fcn.0044acf5(arg_14h);\n    if (1 < uVar1) {\n        if (arg_8h == -1) {\n            if (arg_8h._1_1_ == -2) {\n                *(unaff_ESI + 0xc) = 1;\n                goto code_r0x00414089;\n            }\n        }\n        else if ((arg_8h == -2) && (arg_8h._1_1_ == -1)) {\n            *(unaff_ESI + 0xc) = 2;\n            goto code_r0x00414089;\n        }\n    }\n    if (uVar1 < 3) {\n        return;\n    }\n    if (arg_8h != -0x11) {\n        return;\n    }\n    if (arg_8h._1_1_ != -0x45) {\n        return;\n    }\n    if (arg_8h._2_1_ != -0x41) {\n        return;\n    }\n    *(unaff_ESI + 0xc) = 4;\ncode_r0x00414089:\n    *(unaff_ESI + 8) = 1;\n    return;\n}\n",
        "token_count": 407
    },
    "00419caf": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00419caf(uint param_1)\n\n{\n    double *unaff_ESI;\n    float10 fVar1;\n    double dVar2;\n    \n    if (*(unaff_ESI + 1) != 3) {\n        fVar1 = fcn.00418692(param_1, param_1);\n        dVar2 = fVar1;\n        fcn.0041858e();\n        *unaff_ESI = dVar2;\n        *(unaff_ESI + 1) = 3;\n    }\n    return;\n}\n",
        "token_count": 122
    },
    "00419ea4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nvoid fcn.00419ea4(void)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t arg_8h;\n    uint uVar5;\n    uint arg_ch;\n    uint32_t *in_EAX;\n    uint extraout_ECX;\n    int32_t iVar6;\n    double *unaff_EDI;\n    float10 fVar7;\n    ulong uVar8;\n    \n    iVar6 = *(unaff_EDI + 1);\n    if (iVar6 < 1) {\n        return;\n    }\n    if (iVar6 < 4) goto code_r0x00419edb;\n    if (iVar6 == 4) goto code_r0x00419ee2;\n    if (iVar6 != 7) {\n        if (iVar6 < 9) {\n            return;\n        }\n        if (10 < iVar6) {\n            if (iVar6 != 0xb) {\n                return;\n            }\n            if (in_EAX[2] == 0xb) {\n                iVar6 = *(unaff_EDI + 1);\n                if (iVar6 == 1) {\n                    if (in_EAX[2] == 1) {\n                        uVar1 = *in_EAX;\n                        uVar2 = *unaff_EDI;\n                        iVar6 = (uVar1 >> 0x1f) + (uVar2 >> 0x1f) + CARRY4(uVar1, uVar2);\n                        if (uVar1 + uVar2 >> 0x1f == iVar6) {\n                            *unaff_EDI = uVar1 + uVar2;\n                        }\n                        else {\n                            *(unaff_EDI + 1) = 2;\n                            *unaff_EDI = uVar1 + uVar2;\n                            *(unaff_EDI + 4) = iVar6;\n                        }\n                        goto code_r0x004193e2;\n                    }\n                    if (in_EAX[2] == 2) {\n                        uVar1 = *unaff_EDI;\n                        uVar2 = *in_EAX;\n                        uVar3 = in_EAX[1];\n                        *unaff_EDI = uVar1 + *in_EAX;\n                        *(unaff_EDI + 4) = (uVar1 >> 0x1f) + uVar3 + CARRY4(uVar1, uVar2);\n                        *(unaff_EDI + 1) = 2;\n                        goto code_r0x004193e2;\n                    }\ncode_r0x004193d2:\n                    fcn.00419caf();\n                }\n                else {\n                    if (iVar6 == 2) {\n                        if ((in_EAX[2] == 1) || (in_EAX[2] == 2)) {\n                            uVar8 = fcn.004187bd();\n                            uVar1 = *unaff_EDI;\n                            *unaff_EDI = *unaff_EDI + uVar8;\n                            *(unaff_EDI + 4) = *(unaff_EDI + 4) + (uVar8 >> 0x20) + CARRY4(uVar1, uVar8);\n                            goto code_r0x004193e2;\n                        }\n                        goto code_r0x004193d2;\n                    }\n                    if (iVar6 != 3) {\n                        if (iVar6 != 4) {\n                            if (iVar6 < 9) goto code_r0x004193e2;\n                            if (10 < iVar6) {\n                                if (iVar6 != 0xb) goto code_r0x004193e2;\n                                if (in_EAX[2] == 0xb) {\n                                    iVar4 = fcn.00418606();\n                                    iVar6 = **unaff_EDI;\n                                    arg_8h = fcn.00449614(iVar4 + iVar6);\n                                    fcn.0044a6b0(arg_8h, (*unaff_EDI)[1], **unaff_EDI);\n                                    uVar5 = fcn.00418606();\n                                    arg_ch = fcn.00418678(extraout_ECX);\n                                    fcn.0044a6b0(**unaff_EDI + arg_8h, arg_ch, uVar5);\n                                    fcn.0044951c(*(*unaff_EDI + 4));\n                                    *(*unaff_EDI + 4) = arg_8h;\n                                    **unaff_EDI = iVar4 + iVar6;\n                                    goto code_r0x004193e2;\n                                }\n                            }\n                        }\n                        goto code_r0x004193d2;\n                    }\n                }\n                fVar7 = fcn.00418692();\n                *unaff_EDI = fVar7 + *unaff_EDI;\ncode_r0x004193e2:\n                fcn.004189fc();\n                return;\n            }\n        }\n    }\ncode_r0x00419edb:\n    fcn.00419cfb();\ncode_r0x00419ee2:\n    uVar5 = fcn.00418661();\n    fcn.00416ebe(uVar5);\n    return;\n}\n",
        "token_count": 1123
    },
    "00438812": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nbool fcn.00438812(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    int32_t *unaff_EDI;\n    \n    iVar4 = 0;\n    do {\n        iVar1 = *unaff_EDI;\n        iVar2 = fcn.0040f269();\n        iVar2 = *(iVar2 + 8);\n        if (iVar2 == 8) {\n            iVar4 = iVar4 + 1;\n        }\n        else {\n            if ((iVar2 == 9) && (iVar4 = iVar4 + -1,  iVar4 < 0)) {\n                return false;\n            }\n            if (iVar2 == 0xf) {\n                return iVar4 != 0;\n            }\n        }\n        if (iVar4 == 0) {\n            if (iVar2 == 0) {\n                piVar3 = fcn.0040f269();\n                iVar2 = *piVar3;\n                if (iVar2 != 3) {\n                    if (iVar2 < 0x26) {\n                        return false;\n                    }\n                    if (0x28 < iVar2) {\n                        return false;\n                    }\n                }\n            }\n            else if (iVar2 == 0x11) {\n                return false;\n            }\n        }\n        *unaff_EDI = iVar1 + 1;\n    } while( true );\n}\n",
        "token_count": 309
    },
    "0043fde2": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0043fde2(int32_t arg_8h, uint arg_ch)\n\n{\n    uint32_t uVar1;\n    char cVar2;\n    uint uVar3;\n    int32_t iVar4;\n    int32_t in_ECX;\n    uint arg_ch_00;\n    uint uVar5;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = *(arg_8h + 0xc);\n    arg_8h = 1;\n    cVar2 = fcn.0043fb64();\n    if (cVar2 == '\\0') {\n        fcn.00418bb9(0);\n    }\n    else {\n        if (6 < uVar1) {\n            fcn.00418733();\n        }\n        if (5 < uVar1) {\n            fcn.00418733();\n        }\n        if (4 < uVar1) {\n            arg_8h = fcn.00418733();\n        }\n        arg_ch_00 = 0;\n        if (3 < uVar1) {\n            uVar5 = 0x45cfb4;\n            uVar3 = fcn.00418641();\n            iVar4 = fcn.00449521(uVar3, uVar5);\n            if (iVar4 == 0) {\n                arg_ch_00 = 2;\n            }\n            else {\n                uVar5 = 0x45cfa4;\n                uVar3 = fcn.00418641();\n                iVar4 = fcn.00449521(uVar3, uVar5);\n                if (iVar4 == 0) {\n                    arg_ch_00 = 1;\n                }\n            }\n        }\n        fcn.00401c55(*(in_ECX + 0x7c0), arg_ch_00, arg_8h);\n        fcn.00416122();\n    }\n    return 0;\n}\n",
        "token_count": 422
    },
    "0043ff00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0043ff00(int32_t arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint var_4h;\n    \n    var_4h = 0;\n    cVar1 = fcn.0043fb64();\n    if (cVar1 != '\\0') {\n        if ((4 < *(arg_8h + 0xc)) && (iVar2 = fcn.00418733(),  iVar2 != 0)) {\n            var_4h = 1;\n        }\n        fcn.00418661(var_4h);\n        cVar1 = fcn.00403227();\n        if (cVar1 != '\\0') {\n            return 0;\n        }\n    }\n    fcn.00418bb9(0);\n    return 0;\n}\n",
        "token_count": 185
    },
    "004400c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004400c0(int32_t arg_8h, uint arg_ch)\n\n{\n    uint32_t uVar1;\n    char cVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t iVar5;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    uVar1 = *(arg_8h + 0xc);\n    cVar2 = fcn.0043fb64();\n    if ((cVar2 == '\\0') || (cVar2 = fcn.004032d4(0),  cVar2 == '\\0')) {\n        fcn.00418bb9();\n    }\n    else {\n        if (uVar1 < 6) {\n            iVar3 = var_8h - var_10h;\n        }\n        else {\n            iVar3 = fcn.00418733();\n        }\n        if (uVar1 < 7) {\n            iVar5 = var_4h - var_ch;\n        }\n        else {\n            iVar5 = fcn.00418733();\n        }\n        uVar4 = fcn.00418733(iVar3, iVar5);\n        uVar4 = fcn.00418733(uVar4);\n        fcn.00403341(uVar4);\n    }\n    return 0;\n}\n",
        "token_count": 306
    },
    "004424fa": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nint32_t fcn.004424fa(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar1 = fcn.0044246e();\n    iVar2 = iVar1;\n    iVar3 = 0;\n    if ((iVar1 == 3) && (iVar2 = fcn.0044246e(),  iVar3 = iVar1,  iVar2 == 7)) {\n        iVar3 = 10;\n        iVar2 = fcn.0044246e();\n        if (iVar2 == 0x1f) {\n            iVar3 = 0x29;\n            iVar2 = fcn.0044246e();\n            if (iVar2 == 0xff) {\n                iVar3 = 0x128;\n                while (iVar2 = fcn.0044246e(),  iVar2 == 0xff) {\n                    iVar3 = iVar3 + 0xff;\n                }\n            }\n        }\n    }\n    return iVar2 + 3 + iVar3;\n}\n",
        "token_count": 225
    },
    "0044da00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_1ch\n\nvoid __cdecl fcn.0044da00(uint arg_8h, uint arg_ch)\n\n{\n    int32_t arg_ch_00;\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    int32_t unaff_EBP;\n    uint32_t arg_10h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.0044dc28(0x45acc8, 0x14);\n    arg_ch_00 = *(unaff_EBP + 8);\n    if (arg_ch_00 == 0) {\n        fcn.00449f7f(*(unaff_EBP + 0xc));\n    }\n    else {\n        arg_10h = *(unaff_EBP + 0xc);\n        if (arg_10h == 0) {\n            fcn.0044a128(arg_ch_00);\n        }\n        else if (*0x480b80 == 3) {\n            do {\n                *(unaff_EBP + -0x1c) = 0;\n                if (0xffffffe0 < arg_10h) goto code_r0x0044dba3;\n                fcn.0044cb7b(4);\n                *(unaff_EBP + -4) = 0;\n                iVar1 = fcn.0044e5b6(arg_ch_00);\n                *(unaff_EBP + -0x20) = iVar1;\n                if (iVar1 != 0) {\n                    if (arg_10h <= *0x480b6c) {\n                        iVar1 = fcn.0044eab6(iVar1, arg_ch_00, arg_10h);\n                        if (iVar1 == 0) {\n                            iVar1 = fcn.0044ed95(arg_10h);\n                            *(unaff_EBP + -0x1c) = iVar1;\n                            if (iVar1 != 0) {\n                                uVar2 = *(arg_ch_00 + -4) - 1;\n                                *(unaff_EBP + -0x24) = uVar2;\n                                if (arg_10h <= uVar2) {\n                                    uVar2 = arg_10h;\n                                }\n                                fcn.0044a6b0(*(unaff_EBP + -0x1c), arg_ch_00, uVar2);\n                                uVar3 = fcn.0044e5b6(arg_ch_00);\n                                *(unaff_EBP + -0x20) = uVar3;\n                                fcn.0044e5e1(uVar3, arg_ch_00);\n                            }\n                        }\n                        else {\n                            *(unaff_EBP + -0x1c) = arg_ch_00;\n                        }\n                    }\n                    if (*(unaff_EBP + -0x1c) == 0) {\n                        if (arg_10h == 0) {\n                            arg_10h = 1;\n                            *(unaff_EBP + 0xc) = 1;\n                        }\n                        arg_10h = arg_10h + 0xf & 0xfffffff0;\n                        *(unaff_EBP + 0xc) = arg_10h;\n                        iVar1 = (*_sym.imp.KERNEL32.DLL_HeapAlloc)(*0x480b7c, 0, arg_10h);\n                        *(unaff_EBP + -0x1c) = iVar1;\n                        if (iVar1 != 0) {\n                            uVar2 = *(arg_ch_00 + -4) - 1;\n                            *(unaff_EBP + -0x24) = uVar2;\n                            if (arg_10h <= uVar2) {\n                                uVar2 = arg_10h;\n                            }\n                            fcn.0044a6b0(*(unaff_EBP + -0x1c), arg_ch_00, uVar2);\n                            fcn.0044e5e1(*(unaff_EBP + -0x20), arg_ch_00);\n                        }\n                    }\n                }\n                *(unaff_EBP + -4) = 0xffffffff;\n                fcn.0044db68();\n                if (*(unaff_EBP + -0x20) == 0) {\n                    if (arg_10h == 0) {\n                        arg_10h = 1;\n                    }\n                    arg_10h = arg_10h + 0xf & 0xfffffff0;\n                    *(unaff_EBP + 0xc) = arg_10h;\n                    uVar3 = (*_sym.imp.KERNEL32.DLL_HeapReAlloc)(*0x480b7c, 0, arg_ch_00, arg_10h);\n                    *(unaff_EBP + -0x1c) = uVar3;\n                }\n            } while (((*(unaff_EBP + -0x1c) == 0) && (*0x467590 != 0)) && (iVar1 = fcn.00449646(arg_10h),  iVar1 != 0));\n        }\n        else {\n            do {\n                if (0xffffffe0 < arg_10h) goto code_r0x0044dba3;\n                if (arg_10h == 0) {\n                    arg_10h = 1;\n                }\n                iVar1 = (*_sym.imp.KERNEL32.DLL_HeapReAlloc)(*0x480b7c, 0, arg_ch_00, arg_10h);\n            } while (((iVar1 == 0) && (*0x467590 != 0)) && (iVar1 = fcn.00449646(arg_10h),  iVar1 != 0));\n        }\n    }\ncode_r0x0044dbac:\n    fcn.0044dc63();\n    return;\ncode_r0x0044dba3:\n    fcn.00449646(arg_10h);\n    goto code_r0x0044dbac;\n}\n",
        "token_count": 1329
    },
    "0044e51d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint fcn.0044e51d(int32_t param_1)\n\n{\n    int32_t iVar1;\n    \n    *0x480b7c = (*_sym.imp.KERNEL32.DLL_HeapCreate)(param_1 == 0, 0x1000, 0);\n    if (*0x480b7c == 0) {\n        return 0;\n    }\n    *0x480b80 = fcn.0044e503();\n    if ((*0x480b80 == 3) && (iVar1 = fcn.0044e56e(0x3f8),  iVar1 == 0)) {\n        (*_sym.imp.KERNEL32.DLL_HeapDestroy)(*0x480b7c);\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 175
    },
    "0045096f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0045096f(uint arg_8h, uint arg_ch)\n\n{\n    uint32_t arg_8h_00;\n    uint uVar1;\n    uint32_t uVar2;\n    int32_t unaff_EBP;\n    int32_t iVar3;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.0044dc28(0x45b338, 0x10);\n    uVar2 = *(unaff_EBP + 8);\n    if ((uVar2 != 0) && (0xffffffe0 / uVar2 < *(unaff_EBP + 0xc))) {\ncode_r0x00450a40:\n        fcn.0044dc63();\n        return;\n    }\n    uVar2 = uVar2 * *(unaff_EBP + 0xc);\n    *(unaff_EBP + -0x20) = uVar2;\n    if (uVar2 == 0) {\n        uVar2 = 1;\n    }\n    do {\n        iVar3 = 0;\n        *(unaff_EBP + -0x1c) = 0;\n        if (uVar2 < 0xffffffe1) {\n            if (*0x480b80 == 3) {\n                uVar2 = uVar2 + 0xf & 0xfffffff0;\n                *(unaff_EBP + 0xc) = uVar2;\n                arg_8h_00 = *(unaff_EBP + -0x20);\n                if (*0x480b6c < arg_8h_00) goto code_r0x004509fd;\n                fcn.0044cb7b(4);\n                *(unaff_EBP + -4) = 0;\n                uVar1 = fcn.0044ed95(arg_8h_00);\n                *(unaff_EBP + -0x1c) = uVar1;\n                *(unaff_EBP + -4) = 0xffffffff;\n                fcn.00450a35();\n                iVar3 = *(unaff_EBP + -0x1c);\n                if (iVar3 != 0) {\n                    fcn.00449b00(iVar3, 0, *(unaff_EBP + -0x20));\n                    goto code_r0x004509fd;\n                }\n            }\n            else {\ncode_r0x004509fd:\n                if (iVar3 != 0) goto code_r0x00450a40;\n            }\n            iVar3 = (*_sym.imp.KERNEL32.DLL_HeapAlloc)(*0x480b7c, 8, uVar2);\n        }\n        if (((iVar3 != 0) || (*0x467590 == 0)) || (iVar3 = fcn.00449646(uVar2),  iVar3 == 0)) goto code_r0x00450a40;\n    } while( true );\n}\n",
        "token_count": 657
    },
    "00456a3b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00456a3b(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint8_t uVar3;\n    uint *puVar4;\n    uint var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    uVar3 = arg_ch % 0x20;\n    iVar2 = 0;\n    var_4h = 0;\n    do {\n        uVar1 = *(arg_8h + iVar2 * 4);\n        *(arg_8h + iVar2 * 4) = uVar1 >> (uVar3 & 0x1f) | var_4h;\n        var_4h = (uVar1 & ~(-1 << (uVar3 & 0x1f))) << (0x20 - uVar3 & 0x1f);\n        iVar2 = iVar2 + 1;\n    } while (iVar2 < 3);\n    iVar2 = 2;\n    puVar4 = arg_8h + (2 - arg_ch / 0x20) * 4;\n    do {\n        if (iVar2 < arg_ch / 0x20) {\n            *(arg_8h + iVar2 * 4) = 0;\n        }\n        else {\n            *(arg_8h + iVar2 * 4) = *puVar4;\n        }\n        iVar2 = iVar2 + -1;\n        puVar4 = puVar4 + -1;\n    } while (-1 < iVar2);\n    return;\n}\n",
        "token_count": 353
    },
    "00414e01": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00414e01(uint lptstrFilename, int32_t arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint lpdwHandle;\n    uint puLen;\n    uint32_t var_10h;\n    uint32_t *lplpBuffer;\n    int32_t var_8h;\n    uint pBlock;\n    \n    iVar1 = sub.VERSION.dll_GetFileVersionInfoSizeW(lptstrFilename, &lpdwHandle);\n    if (iVar1 == 0) {\n        uVar2 = 0;\n    }\n    else {\n        pBlock = fcn.00449614(iVar1);\n        sub.VERSION.dll_GetFileVersionInfoW(lptstrFilename, 0, iVar1, pBlock);\n        iVar1 = fcn.0044985c(arg_10h);\n        iVar1 = fcn.00449614(iVar1 * 2 + 0x34);\n        fcn.004495f8(iVar1, 0x45c9ac);\n        iVar3 = fcn.00449703(arg_10h, 0x45c9ac);\n        if (iVar3 != 0) {\n            fcn.004495ce(iVar1, 0x45d19c);\n            iVar3 = fcn.004499ac(arg_10h, 0x45c9ac);\n            if (iVar3 == 0) {\n                iVar3 = sub.VERSION.dll_VerQueryValueW(pBlock, 0x45d168, &lplpBuffer, &puLen);\n                if (iVar3 == 0) {\n                    fcn.004495ce(iVar1, 0x45d154);\n                }\n                else {\n                    var_10h = *lplpBuffer;\n                    fcn.00416666(var_10h);\n                    fcn.00416666(var_10h >> 0x10);\n                }\n                fcn.004495ce(iVar1, 0x45c9ac);\n                fcn.004495ce(iVar1, arg_10h);\n            }\n            else {\n                fcn.004495ce(iVar1, arg_10h);\n            }\n        }\n        iVar3 = fcn.00449521(arg_10h, 0x45d12c);\n        if (iVar3 == 0) {\n            fcn.00449c77(arg_ch, iVar1 + 0x20, 8);\n            *(arg_ch + 0x10) = 0;\n            fcn.0044951c(pBlock);\n            fcn.0044951c(iVar1);\n            uVar2 = 1;\n        }\n        else {\n            iVar3 = sub.VERSION.dll_VerQueryValueW(pBlock, iVar1, &var_8h, &puLen);\n            if (iVar3 == 0) {\n                fcn.0044951c(pBlock);\n                fcn.0044951c(iVar1);\n                uVar2 = 0;\n            }\n            else {\n                iVar3 = fcn.00449703(arg_10h, 0x45c9ac);\n                if (iVar3 == 0) {\n                    fcn.00449872(arg_ch, 0x45d114, *(var_8h + 8) >> 0x10);\n                }\n                else {\n                    fcn.00449c77(arg_ch, var_8h, 0x200);\n                }\n                fcn.0044951c(pBlock);\n                fcn.0044951c(iVar1);\n                uVar2 = 1;\n            }\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 804
    },
    "00442743": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00442743(uint arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t arg_10h;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    int32_t unaff_ESI;\n    uint32_t uVar6;\n    int32_t var_50h;\n    int32_t var_4ch;\n    int32_t var_48h;\n    int32_t var_44h;\n    int32_t var_40h;\n    int32_t var_3ch;\n    int32_t var_38h;\n    int32_t var_34h;\n    int32_t var_30h;\n    int32_t var_2ch;\n    int32_t var_28h;\n    int32_t var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint32_t var_8h;\n    uint32_t var_4h;\n    \n    var_ch = *(unaff_ESI + 0x34);\n    var_4h = *(unaff_ESI + 0x3c);\n    uVar1 = *(unaff_ESI + 0x38);\n    var_8h = *(unaff_ESI + 0x40);\n    var_10h = uVar1;\n    fcn.00442ee7();\n    fcn.00442561(uVar1, var_4h, var_8h, var_50h, 7, 0xd76aa478);\n    fcn.00442561(var_ch, uVar1, var_4h, var_4ch, 0xc, 0xe8c7b756);\n    fcn.00442561(var_8h, var_ch, uVar1, var_48h, 0x11, 0x242070db);\n    fcn.00442561(var_4h, var_8h, var_ch, var_44h, 0x16, 0xc1bdceee);\n    fcn.00442561(var_10h, var_4h, var_8h, var_40h, 7, 0xf57c0faf);\n    fcn.00442561(var_ch, var_10h, var_4h, var_3ch, 0xc, 0x4787c62a);\n    fcn.00442561(var_8h, var_ch, var_10h, var_38h, 0x11, 0xa8304613);\n    fcn.00442561(var_4h, var_8h, var_ch, var_34h, 0x16, 0xfd469501);\n    fcn.00442561(var_10h, var_4h, var_8h, var_30h, 7, 0x698098d8);\n    fcn.00442561(var_ch, var_10h, var_4h, var_2ch, 0xc, 0x8b44f7af);\n    fcn.00442561(var_8h, var_ch, var_10h, var_28h, 0x11, 0xffff5bb1);\n    fcn.00442561(var_4h, var_8h, var_ch, var_24h, 0x16, 0x895cd7be);\n    fcn.00442561(var_10h, var_4h, var_8h, var_20h, 7, 0x6b901122);\n    fcn.00442561(var_ch, var_10h, var_4h, var_1ch, 0xc, 0xfd987193);\n    fcn.00442561(var_8h, var_ch, var_10h, var_18h, 0x11, 0xa679438e);\n    fcn.00442561(var_4h, var_8h, var_ch, var_14h, 0x16, 0x49b40821);\n    fcn.0044259a(var_10h, var_4h, var_8h, var_4ch, 5, 0xf61e2562);\n    fcn.0044259a(var_ch, var_10h, var_4h, var_38h, 9, 0xc040b340);\n    fcn.0044259a(var_8h, var_ch, var_10h, var_24h, 0xe, 0x265e5a51);\n    fcn.0044259a(var_4h, var_8h, var_ch, var_50h, 0x14, 0xe9b6c7aa);\n    fcn.0044259a(var_10h, var_4h, var_8h, var_3ch, 5, 0xd62f105d);\n    fcn.0044259a(var_ch, var_10h, var_4h, var_28h, 9, 0x2441453);\n    fcn.0044259a(var_8h, var_ch, var_10h, var_14h, 0xe, 0xd8a1e681);\n    fcn.0044259a(var_4h, var_8h, var_ch, var_40h, 0x14, 0xe7d3fbc8);\n    fcn.0044259a(var_10h, var_4h, var_8h, var_2ch, 5, 0x21e1cde6);\n    fcn.0044259a(var_ch, var_10h, var_4h, var_18h, 9, 0xc33707d6);\n    fcn.0044259a(var_8h, var_ch, var_10h, var_44h, 0xe, 0xf4d50d87);\n    fcn.0044259a(var_4h, var_8h, var_ch, var_30h, 0x14, 0x455a14ed);\n    fcn.0044259a(var_10h, var_4h, var_8h, var_1ch, 5, 0xa9e3e905);\n    arg_10h = var_ch;\n    fcn.0044259a(var_ch, var_10h, var_4h, var_48h, 9, 0xfcefa3f8);\n    fcn.0044259a(var_8h, arg_10h, var_10h, var_34h, 0xe, 0x676f02d9);\n    fcn.0044259a(var_4h, var_8h, arg_10h, var_20h, 0x14, 0x8d2a4c8a);\n    uVar1 = arg_10h + -0x5c6be + (var_8h ^ var_4h ^ var_10h) + var_3ch;\n    uVar2 = (uVar1 >> 0x1c | uVar1 * 0x10) + var_10h;\n    uVar1 = var_8h + 0x8771f681 + (var_4h ^ var_10h ^ uVar2) + var_30h;\n    uVar4 = (uVar1 >> 0x15 | uVar1 * 0x800) + uVar2;\n    uVar1 = var_4h + 0x6d9d6122 + (uVar4 ^ var_10h ^ uVar2) + var_24h;\n    uVar6 = (uVar1 >> 0x10 | uVar1 * 0x10000) + uVar4;\n    uVar1 = var_10h + 0xfde5380c + (uVar4 ^ uVar6 ^ uVar2) + var_18h;\n    uVar3 = (uVar1 * 0x800000 | uVar1 >> 9) + uVar6;\n    uVar1 = uVar2 + 0xa4beea44 + (uVar4 ^ uVar6 ^ uVar3) + var_4ch;\n    uVar2 = (uVar1 >> 0x1c | uVar1 * 0x10) + uVar3;\n    uVar1 = uVar4 + 0x4bdecfa9 + (uVar6 ^ uVar3 ^ uVar2) + var_40h;\n    uVar5 = (uVar1 >> 0x15 | uVar1 * 0x800) + uVar2;\n    uVar1 = uVar6 + 0xf6bb4b60 + (uVar5 ^ uVar3 ^ uVar2) + var_34h;\n    uVar4 = (uVar1 >> 0x10 | uVar1 * 0x10000) + uVar5;\n    uVar1 = uVar3 + 0xbebfbc70 + (uVar5 ^ uVar4 ^ uVar2) + var_28h;\n    uVar3 = (uVar1 * 0x800000 | uVar1 >> 9) + uVar4;\n    uVar1 = uVar2 + 0x289b7ec6 + (uVar5 ^ uVar4 ^ uVar3) + var_1ch;\n    uVar2 = (uVar1 >> 0x1c | uVar1 * 0x10) + uVar3;\n    uVar1 = uVar5 + 0xeaa127fa + (uVar4 ^ uVar3 ^ uVar2) + var_50h;\n    uVar6 = (uVar1 >> 0x15 | uVar1 * 0x800) + uVar2;\n    uVar1 = uVar4 + 0xd4ef3085 + (uVar6 ^ uVar3 ^ uVar2) + var_44h;\n    uVar5 = (uVar1 >> 0x10 | uVar1 * 0x10000) + uVar6;\n    uVar1 = uVar3 + 0x4881d05 + (uVar6 ^ uVar5 ^ uVar2) + var_38h;\n    uVar3 = (uVar1 * 0x800000 | uVar1 >> 9) + uVar5;\n    uVar1 = uVar2 + 0xd9d4d039 + (uVar6 ^ uVar5 ^ uVar3) + var_2ch;\n    uVar2 = (uVar1 >> 0x1c | uVar1 * 0x10) + uVar3;\n    uVar1 = uVar6 + 0xe6db99e5 + (uVar5 ^ uVar3 ^ uVar2) + var_20h;\n    uVar4 = (uVar1 >> 0x15 | uVar1 * 0x800) + uVar2;\n    uVar1 = uVar5 + 0x1fa27cf8 + (uVar4 ^ uVar3 ^ uVar2) + var_14h;\n    var_4h = (uVar1 >> 0x10 | uVar1 * 0x10000) + uVar4;\n    uVar1 = uVar3 + 0xc4ac5665 + (uVar4 ^ var_4h ^ uVar2) + var_48h;\n    uVar5 = (uVar1 * 0x800000 | uVar1 >> 9) + var_4h;\n    uVar1 = uVar2 + 0xf4292244 + ((~uVar4 | uVar5) ^ var_4h) + var_50h;\n    uVar3 = (uVar1 >> 0x1a | uVar1 * 0x40) + uVar5;\n    uVar1 = uVar4 + 0x432aff97 + ((~var_4h | uVar3) ^ uVar5) + var_34h;\n    uVar2 = (uVar1 >> 0x16 | uVar1 * 0x400) + uVar3;\n    uVar1 = var_4h + 0xab9423a7 + ((~uVar5 | uVar2) ^ uVar3) + var_18h;\n    uVar4 = (uVar1 >> 0x11 | uVar1 * 0x8000) + uVar2;\n    uVar1 = uVar5 + 0xfc93a039 + ((~uVar3 | uVar4) ^ uVar2) + var_3ch;\n    uVar5 = (uVar1 * 0x200000 | uVar1 >> 0xb) + uVar4;\n    uVar1 = uVar3 + 0x655b59c3 + ((~uVar2 | uVar5) ^ uVar4) + var_20h;\n    uVar3 = (uVar1 >> 0x1a | uVar1 * 0x40) + uVar5;\n    uVar1 = uVar2 + 0x8f0ccc92 + ((~uVar4 | uVar3) ^ uVar5) + var_44h;\n    uVar2 = (uVar1 >> 0x16 | uVar1 * 0x400) + uVar3;\n    uVar1 = (uVar4 - 0x100b83) + ((~uVar5 | uVar2) ^ uVar3) + var_28h;\n    uVar4 = (uVar1 >> 0x11 | uVar1 * 0x8000) + uVar2;\n    uVar1 = uVar5 + 0x85845dd1 + ((~uVar3 | uVar4) ^ uVar2) + var_4ch;\n    uVar5 = (uVar1 * 0x200000 | uVar1 >> 0xb) + uVar4;\n    uVar1 = uVar3 + 0x6fa87e4f + ((~uVar2 | uVar5) ^ uVar4) + var_30h;\n    uVar3 = (uVar1 >> 0x1a | uVar1 * 0x40) + uVar5;\n    uVar1 = uVar2 + 0xfe2ce6e0 + ((~uVar4 | uVar3) ^ uVar5) + var_14h;\n    uVar2 = (uVar1 >> 0x16 | uVar1 * 0x400) + uVar3;\n    uVar1 = uVar4 + 0xa3014314 + ((~uVar5 | uVar2) ^ uVar3) + var_38h;\n    uVar4 = (uVar1 >> 0x11 | uVar1 * 0x8000) + uVar2;\n    uVar1 = uVar5 + 0x4e0811a1 + ((~uVar3 | uVar4) ^ uVar2) + var_1ch;\n    uVar6 = (uVar1 * 0x200000 | uVar1 >> 0xb) + uVar4;\n    uVar1 = uVar3 + 0xf7537e82 + ((~uVar2 | uVar6) ^ uVar4) + var_40h;\n    uVar3 = (uVar1 >> 0x1a | uVar1 * 0x40) + uVar6;\n    uVar1 = uVar2 + 0xbd3af235 + ((~uVar4 | uVar3) ^ uVar6) + var_24h;\n    uVar5 = (uVar1 >> 0x16 | uVar1 * 0x400) + uVar3;\n    uVar1 = uVar4 + 0x2ad7d2bb + ((~uVar6 | uVar5) ^ uVar3) + var_48h;\n    uVar2 = (uVar1 >> 0x11 | uVar1 * 0x8000) + uVar5;\n    uVar1 = uVar6 + 0xeb86d391 + ((~uVar3 | uVar2) ^ uVar5) + var_2ch;\n    *(unaff_ESI + 0x38) = *(unaff_ESI + 0x38) + (uVar1 * 0x200000 | uVar1 >> 0xb) + uVar2;\n    *(unaff_ESI + 0x40) = *(unaff_ESI + 0x40) + uVar5;\n    *(unaff_ESI + 0x34) = *(unaff_ESI + 0x34) + uVar3;\n    *(unaff_ESI + 0x3c) = *(unaff_ESI + 0x3c) + uVar2;\n    fcn.00449b00(&var_50h, 0, 0x40);\n    return;\n}\n",
        "token_count": 3868
    },
    "00449e20": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nuint32_t fcn.00449e20(uint32_t *param_1, uint32_t *param_2, uint32_t param_3)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint8_t uVar5;\n    uint8_t uVar6;\n    uint32_t *puVar7;\n    uint32_t *puVar8;\n    bool bVar9;\n    \n    uVar3 = param_3;\n    if (param_3 != 0) {\n        if (((param_1 | param_2) & 3) == 0) {\n            uVar3 = param_3 & 3;\n            param_3 = param_3 >> 2;\n            bVar9 = param_3 == 0;\n            puVar7 = param_1;\n            puVar8 = param_2;\n            if (!bVar9) {\n                do {\n                    param_1 = puVar7;\n                    param_2 = puVar8;\n                    if (param_3 == 0) break;\n                    param_3 = param_3 - 1;\n                    param_2 = puVar8 + 1;\n                    param_1 = puVar7 + 1;\n                    bVar9 = *puVar7 == *puVar8;\n                    puVar7 = param_1;\n                    puVar8 = param_2;\n                } while (bVar9);\n                if (!bVar9) {\n                    uVar3 = param_1[-1];\n                    uVar1 = param_2[-1];\n                    bVar9 = uVar3 < uVar1;\n                    if (((uVar3 == uVar1) &&\n                        (uVar5 = uVar3 >> 8,  uVar6 = uVar1 >> 8,  bVar9 = uVar5 < uVar6,  uVar5 == uVar6)) &&\n                       (uVar5 = uVar3 >> 0x10,  uVar6 = uVar1 >> 0x10,  bVar9 = uVar5 < uVar6,  uVar5 == uVar6)) {\n                        bVar9 = uVar3 >> 0x18 < uVar1 >> 0x18;\n                    }\n                    goto code_r0x00449ea0;\n                }\n            }\n            if (uVar3 != 0) {\n                uVar1 = *param_1;\n                uVar2 = *param_2;\n                bVar9 = uVar1 < uVar2;\n                if (uVar1 != uVar2) {\ncode_r0x00449ea0:\n                    return (1 - bVar9) - (bVar9 != 0);\n                }\n                uVar4 = uVar3 - 1;\n                if (uVar4 != 0) {\n                    uVar5 = uVar2 >> 8;\n                    uVar6 = uVar1 >> 8;\n                    bVar9 = uVar6 < uVar5;\n                    if (uVar6 != uVar5) goto code_r0x00449ea0;\n                    uVar4 = uVar3 - 2;\n                    if (uVar4 != 0) {\n                        bVar9 = (uVar1 & 0xff0000) < (uVar2 & 0xff0000);\n                        if ((uVar1 & 0xff0000) != (uVar2 & 0xff0000)) goto code_r0x00449ea0;\n                        uVar4 = uVar3 - 3;\n                    }\n                }\n                return uVar4;\n            }\n        }\n        else {\n            if ((param_3 & 1) == 0) goto code_r0x00449e53;\n            bVar9 = *param_1 < *param_2;\n            if (*param_1 != *param_2) goto code_r0x00449ea0;\n            param_1 = param_1 + 1;\n            param_2 = param_2 + 1;\n            for (param_3 = param_3 - 1; uVar3 = param_3,  param_3 != 0; param_3 = param_3 - 2) {\ncode_r0x00449e53:\n                bVar9 = *param_1 < *param_2;\n                if ((*param_1 != *param_2) ||\n                   (bVar9 = *(param_1 + 1) < *(param_2 + 1),  *(param_1 + 1) != *(param_2 + 1))) goto code_r0x00449ea0;\n                param_2 = param_2 + 2;\n                param_1 = param_1 + 2;\n            }\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 1048
    },
    "0045786b": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045786b(char *arg_8h, int32_t arg_ch, uint32_t *arg_10h)\n\n{\n    int16_t iVar1;\n    uint32_t uVar2;\n    int32_t var_1ch;\n    char *var_18h;\n    uint var_14h;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    uint32_t var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x465718 ^ &stack0xfffffffc;\n    var_18h = arg_8h;\n    iVar1 = 0x404e;\n    *arg_10h = 0;\n    arg_10h[1] = 0;\n    arg_10h[2] = 0;\n    if (arg_ch != 0) {\n        var_1ch = arg_ch;\n        do {\n            var_10h = *arg_10h;\n            var_ch = arg_10h[1];\n            var_8h = arg_10h[2];\n            fcn.00457810(arg_10h);\n            fcn.00457810(arg_10h);\n            fcn.004577b2(arg_10h, &var_10h);\n            fcn.00457810(arg_10h);\n            var_10h = *var_18h;\n            var_ch = 0;\n            var_8h = 0;\n            fcn.004577b2(arg_10h, &var_10h);\n            var_18h = var_18h + 1;\n            var_1ch = var_1ch + -1;\n        } while (var_1ch != 0);\n    }\n    if (arg_10h[2] == 0) {\n        do {\n            iVar1 = iVar1 + -0x10;\n            uVar2 = arg_10h[1] >> 0x10;\n            arg_10h[1] = *arg_10h >> 0x10 | arg_10h[1] << 0x10;\n            *arg_10h = *arg_10h << 0x10;\n        } while (uVar2 == 0);\n        arg_10h[2] = uVar2;\n    }\n    while ((arg_10h[2] & 0x8000) == 0) {\n        fcn.00457810(arg_10h);\n        iVar1 = iVar1 + -1;\n    }\n    *(arg_10h + 10) = iVar1;\n    fcn.0044ce09();\n    return;\n}\n",
        "token_count": 581
    },
    "00402a79": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23",
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00402a79(uint arg_8h, uint arg_ch)\n\n{\n    uint16_t uVar1;\n    int16_t iVar2;\n    int32_t iVar3;\n    char cVar4;\n    int32_t in_EAX;\n    int16_t *piVar5;\n    uint *puVar6;\n    uint16_t *puVar7;\n    uint8_t uVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    uint32_t uVar11;\n    bool bVar12;\n    ulong uVar13;\n    uint lpsz;\n    uint cchLength;\n    uint32_t var_4h;\n    \n    piVar5 = fcn.00416e60();\n    if (*piVar5 == 0x5b) {\n        iVar3 = *(in_EAX + 4);\n        piVar5 = fcn.00416e60();\n        if (*piVar5 == 0x5d) {\n            uVar11 = iVar3 - 2;\n            uVar9 = 1;\n            var_4h = uVar11;\n            fcn.00416d61();\n            if (uVar11 != 0) {\n                do {\n                    uVar11 = 0x45bfe0;\n                    puVar6 = &lpsz;\n                    fcn.00416e83();\n                    for (; (((piVar5 = fcn.00416e60(puVar6),  *piVar5 != 0x3a &&\n                             (piVar5 = fcn.00416e60(puVar6),  *piVar5 != 0x3b)) &&\n                            (piVar5 = fcn.00416e60(puVar6),  *piVar5 != 0x5d)) && (uVar9 <= var_4h)); uVar9 = uVar9 + 1)\n                    {\n                        puVar7 = fcn.00416e60();\n                        puVar6 = *puVar7;\n                        fcn.00416f01();\n                    }\n                    piVar5 = fcn.00416e60(puVar6);\n                    if (((*piVar5 != 0x3a) && (piVar5 = fcn.00416e60(),  *piVar5 != 0x3b)) &&\n                       (piVar5 = fcn.00416e60(),  *piVar5 != 0x5d)) break;\n                    piVar5 = fcn.00416e60();\n                    if (*piVar5 == 0x3a) {\n                        uVar9 = uVar9 + 1;\n                    }\n                    (*_sym.imp.USER32.dll_CharUpperBuffW)(lpsz, cchLength);\n                    fcn.00416e83(arg_ch, 0x45bfe0);\n                    while (uVar9 <= var_4h) {\n                        puVar7 = fcn.00416e60();\n                        uVar1 = *puVar7;\n                        uVar11 = uVar11 & 0xffff0000 | uVar1;\n                        uVar13 = fcn.00416e60();\n                        uVar10 = uVar13 >> 0x20;\n                        iVar2 = *uVar13;\n                        if (((uVar1 == 0x3b) && (iVar2 != 0x3b)) || ((uVar1 == 0x5d && (iVar2 != 0x5d)))) break;\n                        if (uVar1 == 0x3b) {\n                            bVar12 = iVar2 == 0x3b;\ncode_r0x00402ba8:\n                            if (bVar12) {\n                                uVar10 = uVar9 + 2;\n                            }\n                        }\n                        else {\n                            if (uVar1 == 0x3a) {\n                                bVar12 = iVar2 == 0x3a;\n                                goto code_r0x00402ba8;\n                            }\n                            if (uVar1 == 0x5b) {\n                                bVar12 = iVar2 == 0x5b;\n                                goto code_r0x00402ba8;\n                            }\n                            if (uVar1 == 0x5d) {\n                                bVar12 = iVar2 == 0x5d;\n                                goto code_r0x00402ba8;\n                            }\n                        }\n                        fcn.00416f01(0x5d, uVar11);\n                        uVar9 = uVar10;\n                    }\n                    cVar4 = fcn.00416f96();\n                    if (cVar4 != '\\0') {\n                        uVar8 = 1;\n                        goto code_r0x00402c15;\n                    }\n                    do {\n                        do {\n                            uVar9 = uVar9 + 1;\n                            piVar5 = fcn.00416e60();\n                        } while (*piVar5 == 0x20);\n                        piVar5 = fcn.00416e60();\n                    } while (*piVar5 == 9);\n                } while (uVar9 <= var_4h);\n            }\n            uVar8 = 0;\ncode_r0x00402c15:\n            uVar9 = fcn.0044951c(lpsz);\n            return uVar9 & 0xffffff00 | uVar8;\n        }\n    }\n    return piVar5 & 0xffffff00;\n}\n",
        "token_count": 1164
    },
    "00419d38": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23",
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12"
        ],
        "decompiled_code": "\nuint fcn.00419d38(void)\n\n{\n    char cVar1;\n    uint64_t *in_EAX;\n    uchar *arg_ch;\n    int32_t *piVar2;\n    uint32_t uVar3;\n    int32_t arg_10h;\n    uint var_10h;\n    uint var_ch;\n    int16_t *var_4h;\n    \n    if (*(in_EAX + 1) == 0xb) {\n        return 1;\n    }\n    // switch table (10 cases) at 0x419e6c\n    switch(*(in_EAX + 1)) {\n    case 1:\n    case 7:\n        uVar3 = *in_EAX;\n        goto code_r0x00419e53;\n    case 2:\n        _var_10h = *in_EAX;\n        arg_10h = 8;\n        break;\n    case 3:\n        _var_10h = *in_EAX;\n        arg_10h = 8;\n        break;\n    case 4:\n        var_4h = **(in_EAX + 0xc);\n        if ((*var_4h == 0x30) && ((var_4h[1] == 0x78 || (var_4h[1] == 0x58)))) {\n            arg_10h = (*(in_EAX + 0xc))[1] + -1 >> 1;\n            arg_ch = fcn.00449614(arg_10h);\n            cVar1 = fcn.0041672c(var_4h + 2, arg_ch);\n            if (cVar1 != '\\0') goto code_r0x00419e10;\n            fcn.0044951c(arg_ch);\n        }\n        arg_10h = *(*(in_EAX + 0xc) + 4);\n        if (arg_10h != 0) {\n            arg_ch = fcn.00449614(arg_10h);\n            var_4h = fcn.00416a25(var_4h);\n            fcn.0044a6b0(arg_ch, var_4h, arg_10h);\n            fcn.0044951c(var_4h);\n            goto code_r0x00419e10;\n        }\n        goto code_r0x00419db2;\n    case 5:\n        fcn.00419f8b();\n        fcn.00419f2d();\n    default:\n        arg_10h = 0;\ncode_r0x00419db2:\n        arg_ch = fcn.00449614(1);\n        *arg_ch = 0;\n        goto code_r0x00419e10;\n    case 9:\n        arg_10h = 1;\n        _var_10h = _var_10h & 0xffffffffffffff00 | *in_EAX;\n        break;\n    case 10:\n        uVar3 = *(*in_EAX + 4);\ncode_r0x00419e53:\n        arg_10h = 4;\n        _var_10h = _var_10h & 0xffffffff00000000 | uVar3;\n    }\n    arg_ch = fcn.00449614(arg_10h);\n    fcn.0044a6b0(arg_ch, &var_10h, arg_10h);\ncode_r0x00419e10:\n    piVar2 = fcn.00449614(8);\n    *in_EAX = piVar2;\n    *piVar2 = arg_10h;\n    *(*in_EAX + 4) = arg_ch;\n    fcn.004189fc();\n    *(in_EAX + 1) = 0xb;\n    return 1;\n}\n",
        "token_count": 811
    },
    "004305a7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23",
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004305a7(int32_t *arg_8h, ushort *rgsabound)\n\n{\n    uint16_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t extraout_ECX;\n    int32_t iVar5;\n    float10 fVar6;\n    ushort *rgsabound_00;\n    uint pvargSrc;\n    uint var_20h;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t pvarDest;\n    int32_t var_8h;\n    int32_t cDims;\n    \n    rgsabound_00 = rgsabound;\n    if (rgsabound == NULL) {\n        return 1;\n    }\n    (**0x4593d4)(rgsabound);\n    if (arg_8h == NULL) {\n        *rgsabound_00 = 10;\n        *(rgsabound_00 + 4) = 0x80020004;\n        return 0;\n    }\n    if (9 < arg_8h[2] - 1U) {\n        return 1;\n    }\n    // switch table (10 cases) at 0x4307f7\n    switch(*((arg_8h[2] - 1U) * 4 + 0x4307f7)) {\n    case 0x4305f6:\n        *rgsabound_00 = 0xb;\n        uVar1 = fcn.00418886();\n        rgsabound_00[4] = uVar1 & 0xff;\n        break;\n    case 0x43060c:\n        *rgsabound_00 = 3;\n        rgsabound = fcn.00418733();\n        goto code_r0x00430789;\n    case 0x43061d:\n        *rgsabound_00 = 5;\n        fVar6 = fcn.00418692();\n        *(rgsabound_00 + 4) = fVar6;\n        break;\n    case 0x43062e:\n        *rgsabound_00 = 8;\n        uVar4 = fcn.00418641();\n        iVar3 = fcn.00430569(uVar4);\n        if (iVar3 < 0) {\n            return 1;\n        }\n        uVar4 = (**0x4593b8)(cDims);\n        *(rgsabound_00 + 4) = uVar4;\n        (*_sym.imp.ole32.dll_CoTaskMemFree)(cDims);\n        break;\n    case 0x430663:\n        if (*arg_8h == 0) {\n            cDims = 0;\n        }\n        else {\n            cDims = *(*arg_8h + 0x20c);\n        }\n        iVar3 = (**0x4593b4)(0xc, cDims, &rgsabound);\n        if (iVar3 < 0) {\n            return 1;\n        }\n        iVar3 = 0;\n        if (0 < cDims) {\n            do {\n                *(rgsabound + iVar3 * 4 + 10) = 0;\n                uVar4 = fcn.0041a1ed();\n                *(rgsabound + iVar3 * 4 + 8) = uVar4;\n                iVar3 = extraout_ECX;\n            } while (extraout_ECX < cDims);\n        }\n        rgsabound[1] = 0x880;\n        *(rgsabound + 2) = 0x10;\n        iVar3 = (**0x4593b0)(rgsabound);\n        iVar5 = 0;\n        if (iVar3 < 0) {\ncode_r0x00430770:\n            (**0x4593a8)(rgsabound);\ncode_r0x00430779:\n            return 1;\n        }\n        cDims = (**0x4593c0)(rgsabound, &pvarDest);\n        var_10h = fcn.0041a2fe();\n        if (cDims < 0) {\ncode_r0x00430762:\n            (**0x4593ac)(rgsabound);\n            if (cDims < 0) goto code_r0x00430770;\n        }\n        else {\n            iVar3 = 0;\n            if (0 < var_10h) {\n                do {\n                    (**0x4593d4)(&pvargSrc);\n                    iVar2 = *(var_8h + iVar3 * 4);\n                    if ((iVar2 != 0) && (iVar2 = fcn.004305a7(iVar2, &pvargSrc),  iVar2 != 0)) {\n                        cDims = -0x7fff0001;\n                        break;\n                    }\n                    cDims = (**0x4593d0)(pvarDest + iVar5, &pvargSrc);\n                    iVar3 = iVar3 + 1;\n                    iVar5 = iVar5 + 0x10;\n                } while (iVar3 < var_10h);\n            }\n            (**0x4593bc)(rgsabound);\n            if (cDims < 0) goto code_r0x00430762;\n        }\n        *rgsabound_00 = 0x200c;\ncode_r0x00430789:\n        *(rgsabound_00 + 4) = rgsabound;\n        break;\n    case 0x430779:\n        goto code_r0x00430779;\n    case 0x430791:\n        if (*arg_8h != 0) {\n            (**0x4593d0)(rgsabound_00, *arg_8h);\n        }\n        break;\n    case 0x4307ba:\n        iVar3 = fcn.00418878();\n        if (iVar3 == 0x28) {\n            var_20h = 0;\n            var_18h = 1;\n            var_14h = 0;\n            fcn.00419289(0);\n            uVar4 = fcn.004305a7(&var_20h, rgsabound_00);\n            fcn.0041858e();\n            return uVar4;\n        }\n    case 0x4307a8:\n        uVar4 = fcn.0041886c();\n        uVar4 = fcn.004305a7(uVar4, rgsabound_00);\n        return uVar4;\n    }\n    return 0;\n}\n",
        "token_count": 1447
    },
    "00401b4b": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\nvoid fcn.00401b4b(void)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    int32_t unaff_EDI;\n    \n    iVar1 = *(unaff_EDI + 0xc);\n    if (*(unaff_EDI + 8) == iVar1) {\n        if (iVar1 == 0) {\n            *(unaff_EDI + 0xc) = 2;\n        }\n        else {\n            *(unaff_EDI + 0xc) = iVar1 * 3 + 3U >> 1;\n        }\n        iVar1 = fcn.00449614(*(unaff_EDI + 0xc) << 2);\n        uVar2 = 0;\n        if (*(unaff_EDI + 8) != 0) {\n            do {\n                *(iVar1 + uVar2 * 4) = *(*(unaff_EDI + 4) + uVar2 * 4);\n                uVar2 = uVar2 + 1;\n            } while (uVar2 < *(unaff_EDI + 8));\n        }\n        fcn.0044951c(*(unaff_EDI + 4));\n        *(unaff_EDI + 4) = iVar1;\n    }\n    iVar1 = fcn.00449614(0xc);\n    if (iVar1 == 0) {\n        uVar3 = 0;\n    }\n    else {\n        uVar3 = fcn.00416d61();\n    }\n    *(*(unaff_EDI + 4) + *(unaff_EDI + 8) * 4) = uVar3;\n    *(unaff_EDI + 8) = *(unaff_EDI + 8) + 1;\n    fcn.00416e71();\n    return;\n}\n",
        "token_count": 396
    },
    "00403ccb": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\nvoid fcn.00403ccb(uint *param_1)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    int32_t unaff_ESI;\n    \n    iVar1 = *(unaff_ESI + 0xc);\n    if (*(unaff_ESI + 8) == iVar1) {\n        if (iVar1 == 0) {\n            *(unaff_ESI + 0xc) = 2;\n        }\n        else {\n            *(unaff_ESI + 0xc) = iVar1 * 3 + 3U >> 1;\n        }\n        iVar1 = fcn.00449614(*(unaff_ESI + 0xc) << 2);\n        uVar2 = 0;\n        if (*(unaff_ESI + 8) != 0) {\n            do {\n                *(iVar1 + uVar2 * 4) = *(*(unaff_ESI + 4) + uVar2 * 4);\n                uVar2 = uVar2 + 1;\n            } while (uVar2 < *(unaff_ESI + 8));\n        }\n        fcn.0044951c(*(unaff_ESI + 4));\n        *(unaff_ESI + 4) = iVar1;\n    }\n    uVar3 = fcn.00449614(4);\n    *(*(unaff_ESI + 4) + *(unaff_ESI + 8) * 4) = uVar3;\n    **(*(unaff_ESI + 4) + *(unaff_ESI + 8) * 4) = *param_1;\n    *(unaff_ESI + 8) = *(unaff_ESI + 8) + 1;\n    return;\n}\n",
        "token_count": 382
    },
    "0040f82c": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: lpcbData\n// WARNING: Variable defined which should be unmapped: var_8h\n\nvoid fcn.0040f82c(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uchar *unaff_ESI;\n    int16_t aiStackY132660 [65538];\n    uint var_62ch;\n    uint var_424h;\n    int16_t iStackY546;\n    uint lpFilename;\n    uint uStackY92;\n    uint uStackY88;\n    uint *puStackY84;\n    uint *puStackY80;\n    uint var_10h;\n    uint hKey;\n    int16_t *var_8h;\n    uint lpcbData;\n    \n    fcn.0044c510();\n    *unaff_ESI = 0;\n    unaff_ESI[1] = 0;\n    unaff_ESI[2] = 0;\n    unaff_ESI[3] = 0;\n    *(unaff_ESI + 4) = 0;\n    *(unaff_ESI + 8) = 0;\n    *(unaff_ESI + 0xc) = 0;\n    *(unaff_ESI + 0x10) = 0;\n    *(unaff_ESI + 0x14) = 0x45c610;\n    *(unaff_ESI + 0x18) = 0;\n    *(unaff_ESI + 0x1c) = 0;\n    *(unaff_ESI + 0x20) = 0;\n    *(unaff_ESI + 0x28) = 0x45c60c;\n    *(unaff_ESI + 0x2c) = 0;\n    *(unaff_ESI + 0x30) = 0;\n    *(unaff_ESI + 0x34) = 0;\n    *(unaff_ESI + 0x40) = 0;\n    uVar1 = fcn.00449614();\n    *(unaff_ESI + 0x3c) = uVar1;\n    (**0x459308)();\n    fcn.0044a246(&fcn.0040f82c::lpFilename, &fcn.0040f82c::var_62ch, &fcn.0040f82c::var_424h, 0, 0);\n    fcn.0044a3a1(&fcn.0040f82c::var_424h, 0x45c9e4, 0x104);\n    puStackY80 = 0x40f8e3;\n    fcn.0044a3de(&fcn.0040f82c::lpFilename, &fcn.0040f82c::var_62ch, &fcn.0040f82c::var_424h, 0, 0);\n    puStackY80 = 0x20a;\n    puStackY84 = 0x40f8ed;\n    uVar1 = fcn.00449614();\n    *(*(unaff_ESI + 0x3c) + *(unaff_ESI + 0x40) * 4) = uVar1;\n    uStackY88 = *(*(unaff_ESI + 0x3c) + *(unaff_ESI + 0x40) * 4);\n    *(unaff_ESI + 0x40) = *(unaff_ESI + 0x40) + 1;\n    puStackY84 = &fcn.0040f82c::lpFilename;\n    uStackY92 = 0x40f910;\n    fcn.004495f8();\n    iVar2 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExW)();\n    if (iVar2 == 0) {\n        iVar2 = (*_sym.imp.ADVAPI32.dll_RegQueryValueExW)();\n        if (iVar2 == 0) {\n            var_8h = &stack0xfffdf9cc;\n            lpFilename._0_2_ = 0;\n            do {\n                if ((*var_8h == 0) || (*var_8h == 0x3b)) {\n                    iVar2 = fcn.0044985c();\n                    if (iVar2 != 0) {\n                        iVar2 = fcn.0044985c();\n                        if (*(&stack0xfffffdde + iVar2 * 2) != 0x5c) {\n                            puStackY80 = 0x40f9eb;\n                            fcn.004495ce();\n                        }\n                    }\n                    uVar1 = fcn.00449614();\n                    *(*(unaff_ESI + 0x3c) + *(unaff_ESI + 0x40) * 4) = uVar1;\n                    puStackY84 = *(*(unaff_ESI + 0x3c) + *(unaff_ESI + 0x40) * 4);\n                    *(unaff_ESI + 0x40) = *(unaff_ESI + 0x40) + 1;\n                    puStackY80 = &fcn.0040f82c::lpFilename;\n                    uStackY88 = 0x40fa1b;\n                    fcn.00449c77();\n                    lpFilename._0_2_ = 0;\n                    if (*var_8h == 0) break;\n                }\n                else {\n                    puStackY80 = 0x40f9ad;\n                    fcn.004495ce();\n                }\n                var_8h = var_8h + 1;\n            } while( true );\n        }\n        (*_sym.imp.ADVAPI32.dll_RegCloseKey)();\n    }\n    return;\n}\n",
        "token_count": 1252
    },
    "004146c5": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004146c5(uint hKey, uint lpSubKey, uint lpValueName, uint32_t lpcbData)\n\n{\n    int32_t iVar1;\n    ushort *unaff_ESI;\n    uint phkResult;\n    \n    *unaff_ESI = 0;\n    iVar1 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExW)(hKey, lpSubKey, 0, 1, &phkResult);\n    if (iVar1 == 0) {\n        (*_sym.imp.ADVAPI32.dll_RegQueryValueExW)(phkResult, lpValueName, 0, 0);\n        (*_sym.imp.ADVAPI32.dll_RegCloseKey)(phkResult);\n    }\n    return;\n}\n",
        "token_count": 166
    },
    "00416df9": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\nvoid fcn.00416df9(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t *unaff_ESI;\n    \n    if (unaff_ESI[2] < in_EAX + 1U) {\n        iVar1 = (in_EAX * 3 >> 1) + 1;\n        unaff_ESI[2] = iVar1;\n        iVar1 = fcn.00449614(iVar1 * 2);\n        fcn.0044a6b0(iVar1, *unaff_ESI, unaff_ESI[1] << 1);\n        fcn.0044951c(*unaff_ESI);\n        *unaff_ESI = iVar1;\n        *(iVar1 + unaff_ESI[1] * 2) = 0;\n    }\n    return;\n}\n",
        "token_count": 187
    },
    "00417dfb": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\nvoid fcn.00417dfb(uint param_1)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint *puVar3;\n    int32_t unaff_ESI;\n    \n    iVar1 = *(unaff_ESI + 0x10);\n    if (*(unaff_ESI + 0xc) == iVar1) {\n        if (iVar1 == 0) {\n            *(unaff_ESI + 0x10) = 2;\n        }\n        else {\n            *(unaff_ESI + 0x10) = iVar1 * 3 + 3U >> 1;\n        }\n        iVar1 = fcn.00449614(*(unaff_ESI + 0x10) << 2);\n        uVar2 = 0;\n        if (*(unaff_ESI + 0xc) != 0) {\n            do {\n                *(iVar1 + uVar2 * 4) = *(*(unaff_ESI + 8) + uVar2 * 4);\n                uVar2 = uVar2 + 1;\n            } while (uVar2 < *(unaff_ESI + 0xc));\n        }\n        fcn.0044951c(*(unaff_ESI + 8));\n        *(unaff_ESI + 8) = iVar1;\n    }\n    puVar3 = fcn.00449614(0x10);\n    if (puVar3 == NULL) {\n        puVar3 = NULL;\n    }\n    else {\n        *puVar3 = 0;\n        puVar3[2] = 1;\n        puVar3[3] = 0;\n    }\n    *(*(unaff_ESI + 8) + *(unaff_ESI + 0xc) * 4) = puVar3;\n    *(unaff_ESI + 0xc) = *(unaff_ESI + 0xc) + 1;\n    fcn.00418a19(param_1);\n    return;\n}\n",
        "token_count": 431
    },
    "0042192c": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\nvoid fcn.0042192c(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    \n    iVar1 = *(in_EAX + 0x10);\n    if (*(in_EAX + 0xc) == iVar1) {\n        if (iVar1 == 0) {\n            *(in_EAX + 0x10) = 2;\n        }\n        else {\n            *(in_EAX + 0x10) = iVar1 * 3 + 3U >> 1;\n        }\n        iVar1 = fcn.00449614(*(in_EAX + 0x10) << 2);\n        uVar2 = 0;\n        if (*(in_EAX + 0xc) != 0) {\n            do {\n                *(iVar1 + uVar2 * 4) = *(*(in_EAX + 8) + uVar2 * 4);\n                uVar2 = uVar2 + 1;\n            } while (uVar2 < *(in_EAX + 0xc));\n        }\n        fcn.0044951c(*(in_EAX + 8));\n        *(in_EAX + 8) = iVar1;\n    }\n    iVar1 = fcn.00449614(0x10);\n    if (iVar1 == 0) {\n        iVar1 = 0;\n    }\n    else {\n        *(iVar1 + 8) = 0xffffffff;\n    }\n    *(*(in_EAX + 8) + *(in_EAX + 0xc) * 4) = iVar1;\n    *(in_EAX + 0xc) = *(in_EAX + 0xc) + 1;\n    fcn.00417fb5();\n    return;\n}\n",
        "token_count": 383
    },
    "00430960": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00430960(uint rclsid, uint arg_ch)\n\n{\n    uint32_t uVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint uVar4;\n    float10 fVar5;\n    uint *puVar6;\n    uint arg_8h;\n    uint var_240h;\n    uint pclsid;\n    double dStack44;\n    uint lpSubKey;\n    uint var_14h;\n    int32_t *var_10h;\n    uint lplpsz;\n    uint phkResult;\n    uint32_t var_4h;\n    \n    fcn.00416d61();\n    dStack44 = 1.0;\n    iVar3 = (*_sym.imp.ole32.dll_StringFromIID)(rclsid, &lplpsz);\n    if (-1 < iVar3) {\n        uVar4 = fcn.004161b7(lplpsz);\n        fcn.00416e83(&lpSubKey, 0x460a48);\n        fcn.00417064(uVar4);\n        fcn.00417064(0x460a34);\n        fcn.0044951c(uVar4);\n        (*_sym.imp.ole32.dll_CoTaskMemFree)(lplpsz);\n        iVar3 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExW)(0x80000000, lpSubKey, 0, 0x20019, &phkResult);\n        pcVar2 = _sym.imp.ADVAPI32.dll_RegQueryValueExW;\n        if (iVar3 == 0) {\n            var_4h = 0x1fe;\n            iVar3 = (*_sym.imp.ADVAPI32.dll_RegQueryValueExW)(phkResult, 0, 0, 0, &var_240h, &var_4h);\n            if (iVar3 == 0) {\n                uVar1 = var_4h & 0xfffffffe;\n                var_4h = var_4h >> 1;\n                *(&var_240h + uVar1) = 0;\n                var_14h = fcn.004161b7(&var_240h);\n                iVar3 = (*_sym.imp.ole32.dll_CLSIDFromString)(var_14h, &pclsid);\n                fcn.0044951c(var_14h);\n                if (-1 < iVar3) {\n                    arg_8h = 0x460a24;\n                    var_4h = 0x1fe;\n                    uVar4 = phkResult;\n                    iVar3 = (*pcVar2)(phkResult, 0x460a24, 0, 0, &var_240h, &var_4h);\n                    if (iVar3 == 0) {\n                        uVar1 = var_4h & 0xfffffffe;\n                        var_4h = var_4h >> 1;\n                        *(&var_240h + uVar1) = 0;\n                        fVar5 = fcn.00449b60(&var_240h, uVar4, arg_8h);\n                        dStack44 = fVar5;\n                    }\n                    puVar6 = &var_10h;\n                    uVar4 = 0;\n                    fcn.0044be40(SUB84(dStack44, 0), dStack44 >> 0x20, 0, 0x3ff00000);\n                    fcn.00458664(uVar4, puVar6);\n                    fcn.00458664();\n                    iVar3 = (**0x4593a4)();\n                    if (-1 < iVar3) {\n                        iVar3 = (**(*var_10h + 0x18))(var_10h, rclsid, arg_ch);\n                        (**(*var_10h + 8))(var_10h);\n                    }\n                }\n            }\n            (*_sym.imp.ADVAPI32.dll_RegCloseKey)(phkResult);\n        }\n    }\n    fcn.0044951c(lpSubKey);\n    return iVar3;\n}\n",
        "token_count": 886
    },
    "00430b0e": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00430b0e(uint arg_8h, uint pclsid, int32_t arg_10h, uint arg_14h)\n\n{\n    uint32_t uVar1;\n    code *pcVar2;\n    int16_t *in_EAX;\n    int32_t iVar3;\n    uint uVar4;\n    uint lpData;\n    uint var_50h;\n    uint var_4ch;\n    uint var_3ch;\n    uint var_30h;\n    uint lpSubKey;\n    uint lpMachineName;\n    uint hKey;\n    uint phkResult;\n    uint32_t lpcbData;\n    \n    hKey = 0;\n    phkResult = 0;\n    fcn.00416d61();\n    fcn.00416d61();\n    fcn.00416d61();\n    fcn.00416e83(&lpSubKey, 0x460a00);\n    fcn.00417064(arg_8h);\n    fcn.00417064(0x4609f0);\n    fcn.00416e83(&lpMachineName, 0x45bfe0);\n    if (((in_EAX != NULL) && (*in_EAX != 0x5c)) && (in_EAX[1] != 0x5c)) {\n        fcn.00416e83(&lpMachineName, 0x4609e8);\n        fcn.00417064();\n    }\n    if (arg_10h != 0) {\n        fcn.00449b00(&var_50h, 0, 0x20);\n        var_4ch = 0;\n        fcn.004170ba();\n        fcn.00417064(0x4609dc);\n        var_3ch = var_30h;\n        iVar3 = sub.MPR.dll_WNetAddConnection2W(&var_50h, arg_14h, arg_10h, 0);\n        if (iVar3 != 0) goto code_r0x00430c8e;\n    }\n    iVar3 = (*_sym.imp.ADVAPI32.dll_RegConnectRegistryW)(lpMachineName, reloc.OLEAUT32.dll_SysReAllocString, &hKey);\n    if (iVar3 == 0) {\n        iVar3 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExW)(hKey, lpSubKey, 0, 0x20019, &phkResult);\n        pcVar2 = _sym.imp.ADVAPI32.dll_RegCloseKey;\n        if (iVar3 == 0) {\n            lpcbData = 0x1fe;\n            iVar3 = (*_sym.imp.ADVAPI32.dll_RegQueryValueExW)(phkResult, 0, 0, 0, &lpData, &lpcbData);\n            if (iVar3 == 0) {\n                uVar1 = lpcbData & 0xfffffffe;\n                lpcbData = lpcbData >> 1;\n                *(&lpData + uVar1) = 0;\n                uVar4 = fcn.004161b7(&lpData);\n                iVar3 = (*_sym.imp.ole32.dll_CLSIDFromString)(uVar4, pclsid);\n                fcn.0044951c(uVar4);\n            }\n            (*pcVar2)(phkResult);\n        }\n        (*pcVar2)(hKey);\n    }\ncode_r0x00430c8e:\n    fcn.0044951c(var_30h);\n    fcn.0044951c(lpMachineName);\n    fcn.0044951c(lpSubKey);\n    return iVar3;\n}\n",
        "token_count": 798
    },
    "0043b72c": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\nvoid fcn.0043b72c(uint *param_1)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    int32_t unaff_EBX;\n    uint *puVar4;\n    \n    iVar1 = *(unaff_EBX + 0xc);\n    if (*(unaff_EBX + 8) == iVar1) {\n        if (iVar1 == 0) {\n            *(unaff_EBX + 0xc) = 2;\n        }\n        else {\n            *(unaff_EBX + 0xc) = iVar1 * 3 + 3U >> 1;\n        }\n        iVar1 = fcn.00449614(*(unaff_EBX + 0xc) << 2);\n        uVar2 = 0;\n        if (*(unaff_EBX + 8) != 0) {\n            do {\n                *(iVar1 + uVar2 * 4) = *(*(unaff_EBX + 4) + uVar2 * 4);\n                uVar2 = uVar2 + 1;\n            } while (uVar2 < *(unaff_EBX + 8));\n        }\n        fcn.0044951c(*(unaff_EBX + 4));\n        *(unaff_EBX + 4) = iVar1;\n    }\n    iVar1 = fcn.00449614(0x30);\n    if (iVar1 == 0) {\n        uVar3 = 0;\n    }\n    else {\n        uVar3 = fcn.00417ed7();\n    }\n    *(*(unaff_EBX + 4) + *(unaff_EBX + 8) * 4) = uVar3;\n    puVar4 = *(*(unaff_EBX + 4) + *(unaff_EBX + 8) * 4);\n    for (iVar1 = 0xc; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar4 = *param_1;\n        param_1 = param_1 + 1;\n        puVar4 = puVar4 + 1;\n    }\n    *(unaff_EBX + 8) = *(unaff_EBX + 8) + 1;\n    return;\n}\n",
        "token_count": 491
    },
    "00441ebd": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\nuint32_t fcn.00441ebd(void)\n\n{\n    uint32_t uVar1;\n    \n    *0x4672d0 = *0x4672d0 + -1;\n    if (*0x4672d0 == 0) {\n        fcn.00441dee();\n    }\n    uVar1 = **0x477a28;\n    *0x477a28 = *0x477a28 + 1;\n    uVar1 = uVar1 ^ uVar1 >> 0xb;\n    uVar1 = uVar1 ^ (uVar1 & 0xff3a58ad) << 7;\n    uVar1 = uVar1 ^ (uVar1 & 0xffffdf8c) << 0xf;\n    return (uVar1 >> 0x12 ^ uVar1) >> 1;\n}\n",
        "token_count": 187
    },
    "00443062": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\nuint32_t fcn.00443062(void)\n\n{\n    int32_t *piVar1;\n    uint32_t *puVar2;\n    uint32_t uVar3;\n    int32_t unaff_ESI;\n    \n    piVar1 = unaff_ESI + 0x9c0;\n    *piVar1 = *piVar1 + -1;\n    if (*piVar1 == 0) {\n        fcn.00442f86();\n    }\n    puVar2 = *(unaff_ESI + 0x9c8);\n    uVar3 = *puVar2;\n    *(unaff_ESI + 0x9c8) = puVar2 + 1;\n    uVar3 = uVar3 ^ uVar3 >> 0xb;\n    uVar3 = uVar3 ^ (uVar3 & 0xff3a58ad) << 7;\n    uVar3 = uVar3 ^ (uVar3 & 0xffffdf8c) << 0xf;\n    return (uVar3 >> 0x12 ^ uVar3) >> 1;\n}\n",
        "token_count": 242
    },
    "00449c77": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\nuint * fcn.00449c77(uint *param_1, int16_t *param_2, int32_t param_3)\n\n{\n    int16_t iVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint *puVar4;\n    \n    puVar4 = param_1;\n    if (param_3 != 0) {\n        do {\n            iVar1 = *param_2;\n            *puVar4 = iVar1;\n            puVar4 = puVar4 + 2;\n            param_2 = param_2 + 1;\n            if (iVar1 == 0) break;\n            param_3 = param_3 + -1;\n        } while (param_3 != 0);\n        if ((param_3 != 0) && (uVar2 = param_3 - 1,  uVar2 != 0)) {\n            for (uVar3 = uVar2 >> 1; uVar3 != 0; uVar3 = uVar3 - 1) {\n                *puVar4 = 0;\n                puVar4 = puVar4 + 1;\n            }\n            for (uVar2 = (uVar2 & 1) != 0; uVar2 != 0; uVar2 = uVar2 - 1) {\n                *puVar4 = 0;\n                puVar4 = puVar4 + 2;\n            }\n        }\n    }\n    return param_1;\n}\n",
        "token_count": 322
    },
    "00451414": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.00451414(uint32_t *arg_8h, uint32_t *arg_ch, uint32_t dwExceptionCode, int32_t arg_14h, ulong *arg_18h, \n            ulong *arg_1ch)\n\n{\n    uint32_t *puVar1;\n    ulong *puVar2;\n    uint8_t uVar3;\n    uint32_t uVar4;\n    \n    uVar4 = dwExceptionCode;\n    puVar1 = arg_ch;\n    arg_8h[1] = 0;\n    arg_8h[2] = 0;\n    arg_8h[3] = 0;\n    if ((dwExceptionCode & 0x10) != 0) {\n        arg_8h[1] = arg_8h[1] | 1;\n        dwExceptionCode = 0xc000008f;\n    }\n    if ((uVar4 & 2) != 0) {\n        arg_8h[1] = arg_8h[1] | 2;\n        dwExceptionCode = 0xc0000093;\n    }\n    if ((uVar4 & 1) != 0) {\n        arg_8h[1] = arg_8h[1] | 4;\n        dwExceptionCode = 0xc0000091;\n    }\n    if ((uVar4 & 4) != 0) {\n        arg_8h[1] = arg_8h[1] | 8;\n        dwExceptionCode = 0xc000008e;\n    }\n    if ((uVar4 & 8) != 0) {\n        arg_8h[1] = arg_8h[1] | 0x10;\n        dwExceptionCode = 0xc0000090;\n    }\n    arg_8h[2] = arg_8h[2] ^ (~(*arg_ch << 4) ^ arg_8h[2]) & 0x10;\n    arg_8h[2] = arg_8h[2] ^ (~(*arg_ch << 1) ^ arg_8h[2]) & 8;\n    arg_8h[2] = arg_8h[2] ^ (~(*arg_ch >> 1) ^ arg_8h[2]) & 4;\n    arg_8h[2] = arg_8h[2] ^ (~(*arg_ch >> 3) ^ arg_8h[2]) & 2;\n    arg_8h[2] = arg_8h[2] ^ (~(*arg_ch >> 5) ^ arg_8h[2]) & 1;\n    uVar3 = fcn.00451adf();\n    puVar2 = arg_1ch;\n    if ((uVar3 & 1) != 0) {\n        arg_8h[3] = arg_8h[3] | 0x10;\n    }\n    if ((uVar3 & 4) != 0) {\n        arg_8h[3] = arg_8h[3] | 8;\n    }\n    if ((uVar3 & 8) != 0) {\n        arg_8h[3] = arg_8h[3] | 4;\n    }\n    if ((uVar3 & 0x10) != 0) {\n        arg_8h[3] = arg_8h[3] | 2;\n    }\n    if ((uVar3 & 0x20) != 0) {\n        arg_8h[3] = arg_8h[3] | 1;\n    }\n    uVar4 = *puVar1 & 0xc00;\n    if (uVar4 == 0) {\n        *arg_8h = *arg_8h & 0xfffffffc;\n    }\n    else {\n        if (uVar4 == 0x400) {\n            uVar4 = *arg_8h & 0xfffffffd | 1;\n        }\n        else {\n            if (uVar4 != 0x800) {\n                if (uVar4 == 0xc00) {\n                    *arg_8h = *arg_8h | 3;\n                }\n                goto code_r0x00451571;\n            }\n            uVar4 = *arg_8h & 0xfffffffe | 2;\n        }\n        *arg_8h = uVar4;\n    }\ncode_r0x00451571:\n    uVar4 = *puVar1 & 0x300;\n    if (uVar4 == 0) {\n        uVar4 = *arg_8h & 0xffffffeb | 8;\ncode_r0x004515a7:\n        *arg_8h = uVar4;\n    }\n    else {\n        if (uVar4 == 0x200) {\n            uVar4 = *arg_8h & 0xffffffe7 | 4;\n            goto code_r0x004515a7;\n        }\n        if (uVar4 == 0x300) {\n            *arg_8h = *arg_8h & 0xffffffe3;\n        }\n    }\n    *arg_8h = *arg_8h ^ (arg_14h << 5 ^ *arg_8h) & 0x1ffe0;\n    arg_8h[8] = arg_8h[8] | 1;\n    arg_8h[8] = arg_8h[8] & 0xffffffe3 | 2;\n    *(arg_8h + 4) = *arg_18h;\n    arg_8h[0x18] = arg_8h[0x18] | 1;\n    arg_8h[0x18] = arg_8h[0x18] & 0xffffffe3 | 2;\n    *(arg_8h + 0x14) = *arg_1ch;\n    fcn.00451aea();\n    (**0x45932c)(dwExceptionCode, 0, 1, &arg_8h);\n    if ((*(arg_8h + 2) & 0x10) != 0) {\n        *puVar1 = *puVar1 & 0xfffffffe;\n    }\n    if ((*(arg_8h + 2) & 8) != 0) {\n        *puVar1 = *puVar1 & 0xfffffffb;\n    }\n    if ((*(arg_8h + 2) & 4) != 0) {\n        *puVar1 = *puVar1 & 0xfffffff7;\n    }\n    if ((*(arg_8h + 2) & 2) != 0) {\n        *puVar1 = *puVar1 & 0xffffffef;\n    }\n    if ((*(arg_8h + 2) & 1) != 0) {\n        *puVar1 = *puVar1 & 0xffffffdf;\n    }\n    uVar4 = *arg_8h & 3;\n    if (uVar4 == 0) {\n        *puVar1 = *puVar1 & 0xfffff3ff;\n    }\n    else {\n        if (uVar4 == 1) {\n            uVar4 = *puVar1 & 0xfffff7ff | 0x400;\n        }\n        else {\n            if (uVar4 != 2) {\n                if (uVar4 == 3) {\n                    *(puVar1 + 1) = *(puVar1 + 1) | 0xc;\n                }\n                goto code_r0x00451680;\n            }\n            uVar4 = *puVar1 & 0xfffffbff | 0x800;\n        }\n        *puVar1 = uVar4;\n    }\ncode_r0x00451680:\n    uVar4 = *arg_8h >> 2 & 7;\n    if (uVar4 == 0) {\n        uVar4 = *puVar1 & 0xfffff3ff | 0x300;\n    }\n    else {\n        if (uVar4 != 1) {\n            if (uVar4 == 2) {\n                *puVar1 = *puVar1 & 0xfffff3ff;\n            }\n            goto code_r0x004516af;\n        }\n        uVar4 = *puVar1 & 0xfffff3ff | 0x200;\n    }\n    *puVar1 = uVar4;\ncode_r0x004516af:\n    *puVar2 = *(arg_8h + 0x14);\n    return;\n}\n",
        "token_count": 1891
    },
    "004066ec": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.004066ec(int32_t arg_8h, uint lpWindowName, int32_t arg_10h, int32_t hDC, int32_t xRight, int32_t yBottom, \n            uint32_t dwStyle, uint32_t dwExStyle, int32_t arg_28h)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint uVar6;\n    int32_t iVar7;\n    uint *puVar8;\n    uint *puVar9;\n    uint var_28h;\n    int32_t pvParam;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    puVar8 = NULL;\n    var_4h = 0;\n    piVar3 = arg_8h + 0x54;\n    do {\n        if (*piVar3 == 0) break;\n        var_4h = var_4h + 1;\n        piVar3 = piVar3 + 1;\n    } while (var_4h < 0x400);\n    iVar7 = var_4h;\n    if (var_4h == 0x400) {\n        return 0;\n    }\n    iVar4 = fcn.00449614(0x4190);\n    if (iVar4 != 0) {\n        puVar8 = fcn.00406ab5();\n    }\n    *(arg_8h + 0x54 + iVar7 * 4) = puVar8;\n    puVar9 = puVar8 + 0x14;\n    for (iVar7 = 0x1003; iVar7 != 0; iVar7 = iVar7 + -1) {\n        *puVar9 = 0;\n        puVar9 = puVar9 + 1;\n    }\n    if (dwStyle == 0xffffffff) {\n        dwStyle = 0x80ca0000;\n    }\n    uVar2 = dwStyle;\n    dwStyle = dwStyle | 0x4000000;\n    if ((uVar2 & 0x10000) != 0) {\n        dwStyle = uVar2 | 0x4080000;\n    }\n    if ((dwStyle & 0x40000) != 0) {\n        dwStyle = dwStyle | 0x80000;\n    }\n    if (dwExStyle == 0xffffffff) {\n        dwExStyle = 0;\n    }\n    puVar8[2] = 0;\n    if ((dwExStyle & 0x40) == 0) {\ncode_r0x004067f9:\n        if (xRight == -1) {\n            xRight = 400;\n        }\n        if (yBottom == -1) {\n            yBottom = 400;\n        }\n        if (arg_10h == -1) {\n            (*_sym.imp.USER32.dll_SystemParametersInfoW)(0x30, 0, &pvParam, 0);\n            iVar7 = (*_sym.imp.USER32.dll_GetSystemMetrics)(7);\n            arg_10h = (((var_10h - xRight) + pvParam) - iVar7) / 2;\n        }\n        if (hDC == -1) {\n            (*_sym.imp.USER32.dll_SystemParametersInfoW)(0x30, 0, &pvParam, 0);\n            iVar7 = (*_sym.imp.USER32.dll_GetSystemMetrics)(8);\n            hDC = (((var_ch - yBottom) + var_14h) - iVar7) / 2;\n            if ((dwStyle & 0x400000) != 0) {\n                iVar7 = (*_sym.imp.USER32.dll_GetSystemMetrics)(4);\n                hDC = hDC + iVar7 / -2;\n            }\n        }\n        (*_sym.imp.USER32.dll_SetRect)(&pvParam, 0, 0, xRight, yBottom);\n        (*_sym.imp.USER32.dll_AdjustWindowRectEx)(&pvParam, dwStyle, 0, dwExStyle);\n        uVar5 = (*_sym.imp.USER32.dll_CreateWindowExW)\n                          (dwExStyle, 0x45c444, lpWindowName, dwStyle, arg_10h, hDC, var_10h - pvParam, var_ch - var_14h\n                           , arg_28h, 0, *(arg_8h + 0x48), 0);\n        *puVar8 = uVar5;\n        puVar8[1] = arg_28h;\n        *(puVar8 + 0xf) = arg_10h;\n        *(puVar8 + 0x3e) = hDC;\n        puVar8[10] = 0;\n        uVar5 = (*_sym.imp.USER32.dll_GetSysColorBrush)(0xf);\n        (*_sym.imp.USER32.dll_SetClassLongW)(*puVar8, 0xfffffff6, uVar5);\n        uVar5 = (*_sym.imp.GDI32.dll_GetStockObject)(0x11, 0);\n        (*_sym.imp.USER32.dll_SendMessageW)(*puVar8, 0x30, uVar5);\n        puVar8[0x13] = 0xffffffff;\n        *(puVar8 + 0x3a) = 1;\n        *(puVar8 + 0xe) = 0;\n        *(puVar8 + 0x39) = 0;\n        *(puVar8 + 0x105a) = 1;\n        puVar8[3] = 2;\n        puVar8[4] = 0;\n        puVar8[5] = 0;\n        puVar8[6] = 0xffffffff;\n        puVar8[7] = 0;\n        puVar8[8] = 0;\n        puVar8[9] = 0;\n        puVar8[0x1017] = 0xffffffff;\n        puVar8[0x1018] = 0xffffffff;\n        puVar8[0x1019] = 0xffffffff;\n        puVar8[0x101a] = 0xffffffff;\n        puVar8[0x105f] = 0xffffffff;\n        puVar8[0x1060] = 0xffffffff;\n        puVar8[0x1061] = 0xffffffff;\n        puVar8[0x1052] = 0;\n        puVar8[0x1053] = 0xffffffff;\n        puVar8[0x1054] = 0xffffffff;\n        puVar8[0x1055] = 0;\n        *(puVar8 + 0x1056) = 0;\n        *(puVar8 + 0x4159) = 0;\n        *(puVar8 + 0x415a) = 0;\n        uVar5 = (*_sym.imp.USER32.dll_GetDC)(0);\n        uVar6 = (*_sym.imp.GDI32.dll_GetDeviceCaps)(uVar5, 0x5a, 0x48);\n        iVar7 = (**0x4592dc)(8, uVar6);\n        puVar8[0x101f] = iVar7 * 10;\n        (*_sym.imp.USER32.dll_ReleaseDC)(0, uVar5);\n        puVar8[0x101f] = 0x55;\n        puVar8[0x1020] = 400;\n        puVar8[0x1021] = 0;\n        puVar8[0x1057] = 0;\n        puVar8[0x1058] = 0;\n        puVar8[0x1059] = 0;\n        puVar8[0x105b] = 0;\n        puVar8[0x105c] = 0;\n        *(puVar8 + 0x1049) = 0;\n        puVar8[0x104b] = 0;\n        puVar8[0x104c] = 0;\n        puVar8[0x104d] = 0;\n        puVar8[0x104e] = 0;\n        puVar8[0x104f] = 0;\n        puVar8[0x1050] = 0;\n        fcn.00405ef5(arg_8h, 0xffffffff);\n        *(puVar8 + 0x1051) = 0;\n        uVar5 = (*_sym.imp.USER32.dll_SetTimer)(*puVar8, 2, 0x28, 0x40d3af);\n        puVar8[0x104a] = uVar5;\n        puVar8[0x1062] = 0;\n        puVar8[0x1063] = 0;\n        *(arg_8h + 0x18) = *(arg_8h + 0x18) + 1;\n        *(arg_8h + 0x1c) = var_4h;\n        fcn.00408c31(0);\n        if ((dwStyle & 0x10000000) != 0) {\n            if ((xRight == 0) || (yBottom == 0)) {\n                fcn.00406c05(*puVar8);\n                goto code_r0x00406792;\n            }\n            fcn.00406e84(4, 0);\n        }\n        uVar5 = *puVar8;\n    }\n    else {\n        if (arg_28h != 0) {\n            dwExStyle = dwExStyle ^ 0x40;\n            puVar8[2] = 0x40;\n            iVar7 = fcn.00403eaf(arg_28h);\n            if (-1 < iVar7) {\n                *(*(arg_8h + 0x54 + iVar7 * 4) + 8) = 0x80000000;\n            }\n            (*_sym.imp.USER32.dll_GetWindowRect)(arg_28h, &pvParam);\n            (*_sym.imp.USER32.dll_GetClientRect)(arg_28h, &var_28h);\n            pcVar1 = _sym.imp.USER32.dll_GetSystemMetrics;\n            iVar7 = (*_sym.imp.USER32.dll_GetSystemMetrics)(7);\n            arg_10h = arg_10h + iVar7 + pvParam;\n            var_8h = (*pcVar1)(8);\n            iVar7 = (*pcVar1)(4);\n            hDC = hDC + iVar7 + var_8h + var_14h;\n            goto code_r0x004067f9;\n        }\ncode_r0x00406792:\n        uVar5 = 0;\n    }\n    return uVar5;\n}\n",
        "token_count": 2376
    },
    "0040b380": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.0040b380(int32_t arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            int32_t arg_24h, int32_t arg_28h)\n\n{\n    code *pcVar1;\n    uint32_t arg_14h_00;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t *unaff_EBX;\n    \n    if (arg_24h == -1) {\n        arg_24h = 1;\n    }\n    arg_14h_00 = fcn.00408c5e(arg_24h);\n    if (arg_28h == -1) {\n        arg_28h = 0;\n    }\n    iVar2 = fcn.00409d87(arg_28h, 0x45c2c0, 0, arg_14h_00, arg_14h, arg_18h, arg_1ch, arg_20h, arg_10h, 0, 0);\n    *unaff_EBX = iVar2;\n    pcVar1 = _sym.imp.USER32.dll_SendMessageW;\n    if (iVar2 == 0) {\n        uVar3 = 0;\n    }\n    else {\n        (*_sym.imp.USER32.dll_SendMessageW)(iVar2, 0x405, 0, 0);\n        if ((arg_14h_00 & 1) != 0) {\n            (*pcVar1)(*unaff_EBX, 0x406, 0, 0x640000);\n            (*pcVar1)(*unaff_EBX, 0x414, 10, 0);\n        }\n        if (*(arg_8h + 8) == 0) {\n            *(unaff_EBX + 0x66) = 1;\n        }\n        uVar3 = 1;\n    }\n    return uVar3;\n}\n",
        "token_count": 439
    },
    "00410eee": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint32_t __cdecl fcn.00410eee(uint nVirtKey, uint arg_ch)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    uint32_t uVar3;\n    uint unaff_ESI;\n    uint uVar4;\n    uint var_1h;\n    \n    uVar1 = (*_sym.imp.USER32.dll_GetKeyState)(nVirtKey);\n    uVar3 = uVar1 & 0xffffff01;\n    if (arg_ch != uVar3) {\n        uVar4 = nVirtKey;\n        uVar2 = (*_sym.imp.USER32.dll_MapVirtualKeyW)(nVirtKey, 0, 0);\n        fcn.00410e88(nVirtKey, uVar2, uVar4);\n        fcn.00412048(unaff_ESI);\n        uVar4 = nVirtKey;\n        uVar2 = (*_sym.imp.USER32.dll_MapVirtualKeyW)(nVirtKey, 0, 0);\n        fcn.00410e88(nVirtKey, uVar2, uVar4);\n        uVar3 = fcn.00412048(unaff_ESI);\n        uVar3 = uVar3 & 0xffffff00 | uVar1 & 1;\n    }\n    return uVar3;\n}\n",
        "token_count": 304
    },
    "0041176a": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0041176a(uint32_t arg_8h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t unaff_ESI;\n    uint uVar4;\n    uint lpKeyState;\n    uint8_t var_100h;\n    uint8_t var_ffh;\n    uint var_feh;\n    uint var_b5h;\n    uint8_t var_70h;\n    uint var_6fh;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    uint32_t var_8h;\n    uint32_t var_4h;\n    \n    if ((arg_8h & 0x1f) == 0) {\n        return;\n    }\n    if ((*(unaff_ESI + 0x248) == 0) || (iVar2 = (*_sym.imp.USER32.dll_GetParent)(*(unaff_ESI + 0x248)),  iVar2 == 0)) {\n        if ((arg_8h & 1) != 0) {\n            fcn.00410e88(0x12, *(unaff_ESI + 0x24d), 0);\n        }\n        if ((arg_8h & 8) != 0) {\n            fcn.00410e88(0x11, *(unaff_ESI + 0x24c), 0);\n        }\n        if ((arg_8h & 2) != 0) {\n            fcn.00410e88(*(unaff_ESI + 0x254), *(unaff_ESI + 0x24e), 0);\n        }\n        if ((arg_8h & 4) != 0) {\n            fcn.00410e88(0xa1, *(unaff_ESI + 0x24f), 0);\n        }\n        if ((arg_8h & 0x10) != 0) {\n            fcn.00410e88(0x5b, *(unaff_ESI + 0x250), 0);\n        }\n        goto code_r0x00411979;\n    }\n    (*_sym.imp.USER32.dll_GetKeyboardState)(&lpKeyState);\n    pcVar1 = _sym.imp.USER32.dll_PostMessageW;\n    var_ch = arg_8h & 1;\n    if (((var_ch == 0) || ((arg_8h & 8) != 0)) || ((arg_8h & 0x800) != 0)) {\n        if (var_ch != 0) {\n            uVar3 = *(unaff_ESI + 0x24d) << 0x10 | 0xc0000001;\n            uVar4 = 0x101;\n            goto code_r0x004117fd;\n        }\n    }\n    else {\n        uVar3 = *(unaff_ESI + 0x24d) << 0x10 | 0xe0000001;\n        uVar4 = 0x105;\ncode_r0x004117fd:\n        (*_sym.imp.USER32.dll_PostMessageW)(*(unaff_ESI + 0x248), uVar4, 0x12, uVar3);\n    }\n    var_4h = arg_8h & 8;\n    if (var_4h != 0) {\n        (*pcVar1)(*(unaff_ESI + 0x248), 0x101, 0x11, *(unaff_ESI + 0x24c) << 0x10 | 0xc0000001);\n    }\n    var_8h = arg_8h & 2;\n    if (var_8h != 0) {\n        (*pcVar1)(*(unaff_ESI + 0x248), 0x101, 0x10, *(unaff_ESI + 0x24e) << 0x10 | 0xc0000001);\n    }\n    var_10h = arg_8h & 4;\n    if (var_10h != 0) {\n        (*pcVar1)(*(unaff_ESI + 0x248), 0x101, 0x10, *(unaff_ESI + 0x24f) << 0x10 | 0xc0000001);\n    }\n    if ((arg_8h & 0x10) != 0) {\n        (*pcVar1)(*(unaff_ESI + 0x248), 0x101, 0x5b, *(unaff_ESI + 0x250) << 0x10 | 0xc0000001);\n        var_b5h._0_1_ = var_b5h ^ 0x80;\n    }\n    if (var_8h != 0) {\n        var_100h = var_100h ^ 0x80;\n        var_70h = var_70h ^ 0x80;\n    }\n    if (var_10h != 0) {\n        var_100h = var_100h ^ 0x80;\n        var_6fh._0_1_ = var_6fh ^ 0x80;\n    }\n    if (var_4h != 0) {\n        var_ffh = var_ffh ^ 0x80;\n    }\n    if (var_ch != 0) {\n        var_feh._0_1_ = var_feh ^ 0x80;\n    }\n    (*_sym.imp.USER32.dll_SetKeyboardState)(&lpKeyState);\ncode_r0x00411979:\n    fcn.00412048(unaff_ESI);\n    return;\n}\n",
        "token_count": 1247
    },
    "00413def": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00413def(uint lpFileName)\n\n{\n    uint32_t in_EAX;\n    uint32_t uVar1;\n    uint32_t *in_ECX;\n    uint uVar2;\n    \n    fcn.00413fd1();\n    *in_ECX = in_EAX;\n    if ((in_EAX & 7) == 0) {\n        *in_ECX = in_EAX | 0x2000;\n    }\n    if (((*in_ECX & 0x2000) != 0) || ((*in_ECX & 1) != 0)) {\n        fcn.00414003(lpFileName);\n    }\n    uVar1 = *in_ECX;\n    if ((uVar1 & 0x2000) == 0) {\n        if ((uVar1 & 1) != 0) {\n            uVar1 = fcn.0044aa49(lpFileName, 0x45ce9c);\n            in_ECX[1] = uVar1;\n            if (uVar1 != 0) {\n                fcn.0044aaeb(uVar1, 0, 2);\n            }\n            goto code_r0x00413e88;\n        }\n        if ((uVar1 & 2) != 0) {\n            uVar2 = 0x45ce94;\n            goto code_r0x00413e60;\n        }\n        if ((uVar1 & 4) == 0) {\n            return 0;\n        }\n        uVar1 = (**0x4592d8)(lpFileName, 0x80000000, 3, 0, 3, 0, 0);\n    }\n    else {\n        uVar2 = 0x45cea4;\ncode_r0x00413e60:\n        uVar1 = fcn.0044aa49(lpFileName, uVar2);\n    }\n    in_ECX[1] = uVar1;\ncode_r0x00413e88:\n    if (in_ECX[1] == 0) {\n        return 0;\n    }\n    fcn.00413f0a();\n    fcn.00413f4f();\n    return 1;\n}\n",
        "token_count": 480
    },
    "00414093": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187"
        ],
        "decompiled_code": "\nuint32_t fcn.00414093(uint param_1, uint param_2)\n\n{\n    int32_t unaff_ESI;\n    \n    fcn.0044ac5d(param_1, 1, param_2, *(unaff_ESI + 4));\n    return *(unaff_ESI + 4) & 0xffffff00 | ~(*(*(unaff_ESI + 4) + 0xc) >> 5) & 0xffffff01;\n}\n",
        "token_count": 104
    },
    "004140b8": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.004140b8(uint param_1)\n\n{\n    uint8_t uVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    int32_t unaff_ESI;\n    \n    uVar2 = *(unaff_ESI + 0xc);\n    if ((uVar2 & 1) == 0) {\n        if ((uVar2 & 2) == 0) {\n            if ((uVar2 & 4) == 0) {\n                uVar3 = fcn.00416a25(param_1);\n            }\n            else {\n                uVar3 = fcn.00416ac6();\n            }\n            uVar1 = fcn.00414107(uVar3);\n            uVar2 = fcn.0044951c(uVar3);\n            goto code_r0x00414103;\n        }\n        uVar2 = fcn.00414133();\n    }\n    else {\n        uVar2 = fcn.0041411d(param_1);\n    }\n    uVar1 = uVar2;\ncode_r0x00414103:\n    return uVar2 & 0xffffff00 | uVar1;\n}\n",
        "token_count": 258
    },
    "00417846": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint fcn.00417846(uint param_1, uint8_t param_2)\n\n{\n    fcn.00417765();\n    if ((param_2 & 1) != 0) {\n        fcn.0044951c(param_1);\n    }\n    return param_1;\n}\n",
        "token_count": 65
    },
    "00421b10": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid fcn.00421b10(uint8_t param_1)\n\n{\n    fcn.0041858e();\n    fcn.0041858e();\n    if ((param_1 & 1) != 0) {\n        fcn.0044951c();\n    }\n    return;\n}\n",
        "token_count": 65
    },
    "00421c34": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint fcn.00421c34(uint param_1, uint8_t param_2)\n\n{\n    fcn.00417f90();\n    if ((param_2 & 1) != 0) {\n        fcn.0044951c(param_1);\n    }\n    return param_1;\n}\n",
        "token_count": 67
    },
    "00421c55": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint fcn.00421c55(uint param_1, uint8_t param_2)\n\n{\n    fcn.00417f23();\n    if ((param_2 & 1) != 0) {\n        fcn.0044951c(param_1);\n    }\n    return param_1;\n}\n",
        "token_count": 67
    },
    "004263db": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.004263db(uint32_t arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    uint uVar2;\n    int16_t *piVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint var_30h;\n    uint var_2ch;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint32_t var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    uVar5 = arg_8h;\n    var_ch = *(arg_8h + 0xc);\n    uVar2 = fcn.00418641();\n    fcn.00416d81(uVar2);\n    uVar2 = 1;\n    arg_8h = arg_8h & 0xffffff00;\n    var_4h = CONCAT31(var_4h._1_3_, 1);\n    var_14h = 0;\n    var_10h = 0;\n    var_1ch = 0;\n    var_18h = 0;\n    var_24h = 0;\n    var_20h = 0;\n    (**0x4591d8)(1);\n    piVar3 = fcn.00416e60();\n    if (*piVar3 != 0x5c) {\n        fcn.00417064(0x45c9ac);\n    }\n    cVar1 = fcn.00415010(var_30h);\n    if (cVar1 == '\\0') {\n        fcn.00418bb9(0xffffffff);\n        fcn.00421898(0);\n        uVar2 = 0;\n    }\n    else {\n        if (1 < var_ch) {\n            uVar4 = fcn.00418733();\n            if ((uVar4 & 1) != 0) {\n                arg_8h = CONCAT31(SUB43(uVar5, 1), 1);\n            }\n            uVar5 = fcn.00418733();\n            if ((uVar5 & 2) != 0) {\n                var_4h = var_4h & 0xffffff00;\n            }\n        }\n        cVar1 = fcn.0042655f(var_30h, &var_14h, &var_1ch, &var_24h, arg_8h, var_4h);\n        if (cVar1 != '\\0') {\n            if (arg_8h == '\\0') {\n                fcn.00418c2c(var_14h, var_10h);\n                uVar2 = 0;\n            }\n            else {\n                fcn.0041a000(1);\n                fcn.0041a132(1);\n                fcn.00418c2c(var_14h, var_10h);\n                fcn.0041a132(1);\n                fcn.00418c2c(var_1ch, var_18h);\n                fcn.0041a132(1);\n                fcn.00418c2c(var_24h, var_20h);\n                uVar2 = 0;\n            }\n        }\n    }\n    fcn.0044951c(var_30h);\n    return uVar2;\n}\n",
        "token_count": 754
    },
    "004388f7": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint fcn.004388f7(uint param_1, uint8_t param_2)\n\n{\n    fcn.0041858e();\n    if ((param_2 & 1) != 0) {\n        fcn.0044951c(param_1);\n    }\n    return param_1;\n}\n",
        "token_count": 67
    },
    "00446d44": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00446d44(int32_t *arg_8h, uint8_t *arg_ch, uint32_t arg_10h, uint32_t *arg_14h)\n\n{\n    uint32_t uVar1;\n    uint *arg_10h_00;\n    uint var_50h;\n    uint var_28h;\n    \n    arg_10h_00 = NULL;\n    if ((arg_8h == NULL) || (arg_14h == NULL)) {\n        return 0xfffffffe;\n    }\n    if ((arg_ch != NULL) && ((*arg_ch & 1) != 0)) {\n        arg_10h_00 = *(arg_ch + 4);\n    }\n    if (*arg_8h != 0x50435245) {\n        arg_8h = fcn.0044942d(arg_8h, &var_50h, arg_10h_00, &var_28h);\n        if (arg_8h == NULL) {\n            return 0xfffffffc;\n        }\n        if (arg_10h_00 != NULL) {\n            arg_10h_00 = &var_28h;\n        }\n    }\n    if (0xb < arg_10h) {\n        return 0xfffffffd;\n    }\n    // switch table (12 cases) at 0x446e4c\n    switch(*(arg_10h * 4 + 0x446e4c)) {\n    case 0x446db3:\n        uVar1 = arg_8h[2] & 0x7c7a7f;\n        break;\n    case 0x446dbf:\n        uVar1 = arg_8h[1];\n        break;\n    case 0x446dc4:\n        if (arg_10h_00 != NULL) {\n            arg_10h_00 = *arg_10h_00;\n        }\n        *arg_14h = arg_10h_00;\n        return 0;\n    case 0x446dce:\n        uVar1 = *(arg_8h + 4);\n        break;\n    case 0x446dd4:\n        uVar1 = *(arg_8h + 0x12);\n        break;\n    case 0x446dda:\n        if ((arg_8h[2] & 0x40000000U) == 0) {\n            uVar1 = arg_8h[2] >> 0x1c | 0xfffffffe;\n        }\n        else {\n            uVar1 = *(arg_8h + 5);\n        }\n        goto code_r0x00446df1;\n    case 0x446df5:\n        if ((arg_10h_00 == NULL) || ((*(arg_10h_00 + 1) & 1) == 0)) {\n            uVar1 = 0;\n        }\n        else {\n            uVar1 = *(arg_ch + 4) + 8;\n        }\n        break;\n    case 0x446e0b:\n        if ((arg_8h[2] & 0x20000000U) == 0) {\n            uVar1 = 0xffffffff;\n        }\n        else {\n            uVar1 = *(arg_8h + 0x16);\n        }\n        break;\n    case 0x446e1f:\n        uVar1 = *(arg_8h + 0x1a);\n        break;\n    case 0x446e25:\n        uVar1 = *(arg_8h + 7);\n        break;\n    case 0x446e2b:\n        uVar1 = *(arg_8h + 6) + arg_8h;\ncode_r0x00446df1:\n        *arg_14h = uVar1;\n        return 0;\n    case 0x446e33:\n        *arg_14h = 0x45a350;\n        return 0;\n    }\n    *arg_14h = uVar1;\n    return 0;\n}\n",
        "token_count": 881
    },
    "00446e7c": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00446e7c(int32_t param_1, int32_t param_2, uint8_t *param_3, uint8_t param_4)\n\n{\n    uint8_t uVar1;\n    uint8_t uVar2;\n    int32_t in_EAX;\n    uint8_t *puVar3;\n    uint uVar4;\n    \n    puVar3 = *(*(param_1 + 0xc) + param_2 * 4) + *(param_1 + 0x50);\n    if (*(param_1 + 0x54) - param_3 < in_EAX) {\n        uVar4 = 0;\n    }\n    else if ((param_4 & 1) == 0) {\n        do {\n            if (in_EAX < 1) goto code_r0x00446ebe;\n            uVar1 = *param_3;\n            uVar2 = *puVar3;\n            in_EAX = in_EAX + -1;\n            param_3 = param_3 + 1;\n            puVar3 = puVar3 + 1;\n        } while (uVar2 == uVar1);\ncode_r0x00446ed6:\n        uVar4 = 0;\n    }\n    else {\n        if (0 < in_EAX) {\n            do {\n                uVar1 = *param_3;\n                uVar2 = *puVar3;\n                in_EAX = in_EAX + -1;\n                param_3 = param_3 + 1;\n                puVar3 = puVar3 + 1;\n                if (*(uVar2 + *(param_1 + 0x24)) != *(uVar1 + *(param_1 + 0x24))) goto code_r0x00446ed6;\n            } while (0 < in_EAX);\n        }\ncode_r0x00446ebe:\n        uVar4 = 1;\n    }\n    return uVar4;\n}\n",
        "token_count": 427
    },
    "0044b718": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0044b718(uint arg_8h, uint arg_ch)\n\n{\n    int32_t *piVar1;\n    uint32_t arg_8h_00;\n    uint uVar2;\n    uint *puVar3;\n    int32_t unaff_EBP;\n    int32_t iVar4;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.0044dc28(0x45aa48, 0xc);\n    arg_8h_00 = *(unaff_EBP + 8);\n    if (arg_8h_00 < *0x480a4c) {\n        piVar1 = (arg_8h_00 >> 5) * 4 + 0x480a60;\n        iVar4 = (arg_8h_00 & 0x1f) * 0x24;\n        if ((*(*piVar1 + 4 + iVar4) & 1) != 0) {\n            fcn.00450d80(arg_8h_00);\n            *(unaff_EBP + -4) = 0;\n            if ((*(*piVar1 + 4 + iVar4) & 1) == 0) {\n                puVar3 = fcn.0044ddb5();\n                *puVar3 = 9;\n                *(unaff_EBP + -0x1c) = 0xffffffff;\n            }\n            else {\n                uVar2 = fcn.0044b6ac(arg_8h_00, *(unaff_EBP + 0xc));\n                *(unaff_EBP + -0x1c) = uVar2;\n            }\n            *(unaff_EBP + -4) = 0xffffffff;\n            fcn.0044b793();\n            goto code_r0x0044b7a9;\n        }\n    }\n    puVar3 = fcn.0044ddb5();\n    *puVar3 = 9;\ncode_r0x0044b7a9:\n    fcn.0044dc63();\n    return;\n}\n",
        "token_count": 465
    },
    "0044d074": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0044d074(uint32_t arg_8h, int32_t *arg_ch)\n\n{\n    uint32_t uVar1;\n    uint32_t arg_8h_00;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    \n    piVar2 = arg_ch;\n    uVar1 = arg_ch[3];\n    arg_8h_00 = arg_ch[4];\n    if (((uVar1 & 0x82) == 0) || ((uVar1 & 0x40) != 0)) {\ncode_r0x0044d180:\n        arg_ch[3] = uVar1 | 0x20;\n    }\n    else {\n        if ((uVar1 & 1) != 0) {\n            arg_ch[1] = 0;\n            if ((uVar1 & 0x10) == 0) goto code_r0x0044d180;\n            *arg_ch = arg_ch[2];\n            arg_ch[3] = uVar1 & 0xfffffffe;\n        }\n        uVar1 = arg_ch[3];\n        arg_ch[1] = 0;\n        arg_ch = NULL;\n        piVar2[3] = uVar1 & 0xffffffef | 2;\n        if (((uVar1 & 0x10c) == 0) &&\n           (((piVar2 != 0x4651a0 && (piVar2 != 0x4651c0)) || (iVar3 = fcn.00454e0f(arg_8h_00),  iVar3 == 0)))) {\n            fcn.00454dcb(piVar2);\n        }\n        if ((*(piVar2 + 3) & 0x108) == 0) {\n            iVar3 = 1;\n            arg_ch = fcn.0045014c(arg_8h_00, &arg_8h, 1);\n        }\n        else {\n            iVar4 = piVar2[2];\n            iVar3 = *piVar2;\n            *piVar2 = iVar4 + 1;\n            iVar3 = iVar3 - iVar4;\n            piVar2[1] = piVar2[6] + -1;\n            if (iVar3 < 1) {\n                if (arg_8h_00 == 0xffffffff) {\n                    iVar4 = 0x465970;\n                }\n                else {\n                    iVar4 = *((arg_8h_00 >> 5) * 4 + 0x480a60) + (arg_8h_00 & 0x1f) * 0x24;\n                }\n                if ((*(iVar4 + 4) & 0x20) != 0) {\n                    fcn.0044fd09(arg_8h_00, 0, 2);\n                }\n            }\n            else {\n                arg_ch = fcn.0045014c(arg_8h_00, iVar4, iVar3);\n            }\n            *piVar2[2] = arg_8h;\n        }\n        if (arg_ch == iVar3) {\n            return arg_8h & 0xff;\n        }\n        piVar2[3] = piVar2[3] | 0x20;\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 729
    },
    "0044fd09": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0044fd09(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    uint32_t arg_8h_00;\n    uint uVar2;\n    uint *puVar3;\n    int32_t unaff_EBP;\n    int32_t iVar4;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.0044dc28(0x45b2c8, 0xc);\n    arg_8h_00 = *(unaff_EBP + 8);\n    if (arg_8h_00 < *0x480a4c) {\n        piVar1 = (arg_8h_00 >> 5) * 4 + 0x480a60;\n        iVar4 = (arg_8h_00 & 0x1f) * 0x24;\n        if ((*(*piVar1 + 4 + iVar4) & 1) != 0) {\n            fcn.00450d80(arg_8h_00);\n            *(unaff_EBP + -4) = 0;\n            if ((*(*piVar1 + 4 + iVar4) & 1) == 0) {\n                puVar3 = fcn.0044ddb5();\n                *puVar3 = 9;\n                puVar3 = fcn.0044ddbe();\n                *puVar3 = 0;\n                *(unaff_EBP + -0x1c) = 0xffffffff;\n            }\n            else {\n                uVar2 = fcn.0044fc95(arg_8h_00, *(unaff_EBP + 0xc), *(unaff_EBP + 0x10));\n                *(unaff_EBP + -0x1c) = uVar2;\n            }\n            *(unaff_EBP + -4) = 0xffffffff;\n            fcn.0044fd90();\n            goto code_r0x0044fdae;\n        }\n    }\n    puVar3 = fcn.0044ddb5();\n    *puVar3 = 9;\n    puVar3 = fcn.0044ddbe();\n    *puVar3 = 0;\ncode_r0x0044fdae:\n    fcn.0044dc63();\n    return;\n}\n",
        "token_count": 523
    },
    "0044fdb4": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint64_t __cdecl fcn.0044fdb4(char **arg_8h)\n\n{\n    int32_t *piVar1;\n    uint8_t uVar2;\n    uint64_t uVar3;\n    char **ppcVar4;\n    char *arg_ch;\n    uint *puVar5;\n    char *pcVar6;\n    char *pcVar7;\n    char *pcVar8;\n    char *pcVar9;\n    int32_t arg_10h;\n    int32_t iVar10;\n    int64_t iVar11;\n    int64_t iVar12;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    char *var_4h;\n    \n    ppcVar4 = arg_8h;\n    pcVar7 = arg_8h[4];\n    if (arg_8h[1] < 0) {\n        arg_8h[1] = NULL;\n    }\n    iVar11 = fcn.00455bb9(pcVar7, 0, 0, 1);\n    arg_10h = iVar11 >> 0x20;\n    arg_ch = iVar11;\n    if ((iVar11 < 0x100000000) && (iVar11 < 0)) {\ncode_r0x0044fe71:\n        uVar3 = 0xffffffffffffffff;\n    }\n    else {\n        if ((*(arg_8h + 3) & 0x108) == 0) {\n            return iVar11 - arg_8h[1];\n        }\n        pcVar6 = *arg_8h;\n        pcVar9 = arg_8h[2];\n        var_4h = pcVar6 + -pcVar9;\n        if ((arg_8h[3] & 3) == 0) {\n            if (-1 < arg_8h[3]) {\n                puVar5 = fcn.0044ddb5();\n                *puVar5 = 0x16;\n                goto code_r0x0044fe71;\n            }\n        }\n        else if (((*(*((pcVar7 >> 5) * 4 + 0x480a60) + 4 + (pcVar7 & 0x1f) * 0x24) & 0x80) != 0) &&\n                (pcVar8 = pcVar9,  pcVar9 < pcVar6)) {\n            do {\n                if (*pcVar8 == '\\n') {\n                    var_4h = var_4h + 1;\n                }\n                pcVar8 = pcVar8 + 1;\n            } while (pcVar8 < *arg_8h);\n        }\n        if (iVar11 == 0) {\n            uVar3 = ZEXT48(var_4h);\n        }\n        else {\n            if (((*(arg_8h + 3) & 1) != 0) && (arg_8h[1] != NULL)) {\n                pcVar6 = arg_8h[1] + (pcVar6 - pcVar9);\n                piVar1 = (pcVar7 >> 5) * 4 + 0x480a60;\n                iVar10 = (pcVar7 & 0x1f) * 0x24;\n                if ((*(iVar10 + 4 + *piVar1) & 0x80) != 0) {\n                    iVar12 = fcn.00455bb9(pcVar7, 0, 0, 2);\n                    if (iVar12 == iVar11) {\n                        pcVar7 = arg_8h[2];\n                        pcVar9 = pcVar6 + pcVar7;\n                        arg_8h = pcVar6;\n                        for (; pcVar7 < pcVar9; pcVar7 = pcVar7 + 1) {\n                            if (*pcVar7 == '\\n') {\n                                arg_8h = arg_8h + 1;\n                            }\n                        }\n                        uVar2 = *(ppcVar4 + 0xd) & 0x20;\n                    }\n                    else {\n                        fcn.00455bb9(pcVar7, arg_ch, arg_10h, 0);\n                        pcVar7 = 0x200;\n                        if (((0x200 < pcVar6) || ((arg_8h[3] & 8) == 0)) || ((arg_8h[3] & 0x400) != 0)) {\n                            pcVar7 = arg_8h[6];\n                        }\n                        uVar2 = *(iVar10 + 4 + *piVar1) & 4;\n                        arg_8h = pcVar7;\n                    }\n                    pcVar6 = arg_8h;\n                    if (uVar2 != 0) {\n                        pcVar6 = arg_8h + 1;\n                    }\n                }\n                arg_8h = pcVar6;\n                iVar11 = CONCAT44(arg_10h - (arg_ch < arg_8h), arg_ch + -arg_8h);\n            }\n            uVar3 = iVar11 - 8;\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 1106
    },
    "0045014c": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0045014c(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    uint32_t arg_8h_00;\n    uint uVar2;\n    uint *puVar3;\n    int32_t unaff_EBP;\n    int32_t iVar4;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.0044dc28(0x45b2e8, 0xc);\n    arg_8h_00 = *(unaff_EBP + 8);\n    if (arg_8h_00 < *0x480a4c) {\n        piVar1 = (arg_8h_00 >> 5) * 4 + 0x480a60;\n        iVar4 = (arg_8h_00 & 0x1f) * 0x24;\n        if ((*(*piVar1 + 4 + iVar4) & 1) != 0) {\n            fcn.00450d80(arg_8h_00);\n            *(unaff_EBP + -4) = 0;\n            if ((*(*piVar1 + 4 + iVar4) & 1) == 0) {\n                puVar3 = fcn.0044ddb5();\n                *puVar3 = 9;\n                puVar3 = fcn.0044ddbe();\n                *puVar3 = 0;\n                *(unaff_EBP + -0x1c) = 0xffffffff;\n            }\n            else {\n                uVar2 = fcn.0044ff90(arg_8h_00, *(unaff_EBP + 0xc), *(unaff_EBP + 0x10));\n                *(unaff_EBP + -0x1c) = uVar2;\n            }\n            *(unaff_EBP + -4) = 0xffffffff;\n            fcn.004501d3();\n            goto code_r0x004501f1;\n        }\n    }\n    puVar3 = fcn.0044ddb5();\n    *puVar3 = 9;\n    puVar3 = fcn.0044ddbe();\n    *puVar3 = 0;\ncode_r0x004501f1:\n    fcn.0044dc63();\n    return;\n}\n",
        "token_count": 523
    },
    "0045027a": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0045027a(uint arg_8h)\n\n{\n    int32_t *piVar1;\n    uint32_t arg_8h_00;\n    uint uVar2;\n    uint *puVar3;\n    int32_t unaff_EBP;\n    int32_t iVar4;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.0044dc28(0x45b2f8, 0xc);\n    arg_8h_00 = *(unaff_EBP + 8);\n    if (arg_8h_00 < *0x480a4c) {\n        piVar1 = (arg_8h_00 >> 5) * 4 + 0x480a60;\n        iVar4 = (arg_8h_00 & 0x1f) * 0x24;\n        if ((*(*piVar1 + 4 + iVar4) & 1) != 0) {\n            fcn.00450d80(arg_8h_00);\n            *(unaff_EBP + -4) = 0;\n            if ((*(*piVar1 + 4 + iVar4) & 1) == 0) {\n                puVar3 = fcn.0044ddb5();\n                *puVar3 = 9;\n                *(unaff_EBP + -0x1c) = 0xffffffff;\n            }\n            else {\n                uVar2 = fcn.004501f7(arg_8h_00);\n                *(unaff_EBP + -0x1c) = uVar2;\n            }\n            *(unaff_EBP + -4) = 0xffffffff;\n            fcn.004502f1();\n            goto code_r0x0045030f;\n        }\n    }\n    puVar3 = fcn.0044ddb5();\n    *puVar3 = 9;\n    puVar3 = fcn.0044ddbe();\n    *puVar3 = 0;\ncode_r0x0045030f:\n    fcn.0044dc63();\n    return;\n}\n",
        "token_count": 470
    },
    "004505fe": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.004505fe(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    uint32_t arg_8h_00;\n    uint uVar2;\n    uint *puVar3;\n    int32_t unaff_EBP;\n    int32_t iVar4;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.0044dc28(0x45b308, 0xc);\n    arg_8h_00 = *(unaff_EBP + 8);\n    if (arg_8h_00 < *0x480a4c) {\n        piVar1 = (arg_8h_00 >> 5) * 4 + 0x480a60;\n        iVar4 = (arg_8h_00 & 0x1f) * 0x24;\n        if ((*(*piVar1 + 4 + iVar4) & 1) != 0) {\n            fcn.00450d80(arg_8h_00);\n            *(unaff_EBP + -4) = 0;\n            if ((*(*piVar1 + 4 + iVar4) & 1) == 0) {\n                puVar3 = fcn.0044ddb5();\n                *puVar3 = 9;\n                puVar3 = fcn.0044ddbe();\n                *puVar3 = 0;\n                *(unaff_EBP + -0x1c) = 0xffffffff;\n            }\n            else {\n                uVar2 = fcn.00450421(arg_8h_00, *(unaff_EBP + 0xc), *(unaff_EBP + 0x10));\n                *(unaff_EBP + -0x1c) = uVar2;\n            }\n            *(unaff_EBP + -4) = 0xffffffff;\n            fcn.00450685();\n            goto code_r0x004506a3;\n        }\n    }\n    puVar3 = fcn.0044ddb5();\n    *puVar3 = 9;\n    puVar3 = fcn.0044ddbe();\n    *puVar3 = 0;\ncode_r0x004506a3:\n    fcn.0044dc63();\n    return;\n}\n",
        "token_count": 518
    },
    "00450d3f": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint fcn.00450d3f(uint32_t param_1)\n\n{\n    uint *puVar1;\n    \n    if ((param_1 < *0x480a4c) &&\n       (puVar1 = *((param_1 >> 5) * 4 + 0x480a60) + (param_1 & 0x1f) * 0x24,  (*(puVar1 + 1) & 1) != 0)) {\n        return *puVar1;\n    }\n    puVar1 = fcn.0044ddb5();\n    *puVar1 = 9;\n    puVar1 = fcn.0044ddbe();\n    *puVar1 = 0;\n    return 0xffffffff;\n}\n",
        "token_count": 163
    },
    "00450e42": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.00450e42(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    int32_t unaff_EBP;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.0044dc28(0x45b358, 0x14);\n    *(unaff_EBP + -0x1c) = 0xffffffff;\n    iVar2 = fcn.0044cadb(0xb);\n    if (iVar2 != 0) {\n        fcn.0044cb7b(0xb);\n        *(unaff_EBP + -4) = 0;\n        for (iVar2 = 0; *(unaff_EBP + -0x24) = iVar2,  iVar2 < 0x40; iVar2 = iVar2 + 1) {\n            puVar4 = *(iVar2 * 4 + 0x480a60);\n            if (puVar4 == NULL) {\n                puVar4 = fcn.00449f7f(0x480);\n                *(unaff_EBP + -0x20) = puVar4;\n                if (puVar4 != NULL) {\n                    piVar1 = iVar2 * 4 + 0x480a60;\n                    *piVar1 = puVar4;\n                    *0x480a4c = *0x480a4c + 0x20;\n                    while (puVar4 < *piVar1 + 0x480) {\n                        *(puVar4 + 1) = 0;\n                        *puVar4 = 0xffffffff;\n                        *(puVar4 + 5) = 10;\n                        puVar4[2] = 0;\n                        puVar4 = puVar4 + 9;\n                        *(unaff_EBP + -0x20) = puVar4;\n                    }\n                    *(unaff_EBP + -0x1c) = iVar2 << 5;\n                    iVar2 = fcn.00450d80(iVar2 << 5);\n                    if (iVar2 == 0) {\n                        *(unaff_EBP + -0x1c) = 0xffffffff;\n                    }\n                }\n                break;\n            }\n            for (; *(unaff_EBP + -0x20) = puVar4,  puVar4 < *(iVar2 * 4 + 0x480a60) + 0x480; puVar4 = puVar4 + 9) {\n                if ((*(puVar4 + 1) & 1) == 0) {\n                    if (puVar4[2] == 0) {\n                        fcn.0044cb7b(10);\n                        *(unaff_EBP + -4) = 1;\n                        if (puVar4[2] == 0) {\n                            iVar3 = fcn.004548d2(puVar4 + 3, 4000);\n                            if (iVar3 == 0) {\n                                fcn.004542b2(unaff_EBP + -0x10, 0xffffffff);\n                                goto code_r0x00450faf;\n                            }\n                            puVar4[2] = puVar4[2] + 1;\n                        }\n                        *(unaff_EBP + -4) = 0;\n                        fcn.00450f1b();\n                    }\n                    (*_sym.imp.KERNEL32.DLL_EnterCriticalSection)(puVar4 + 3);\n                    if ((*(puVar4 + 1) & 1) == 0) {\n                        *puVar4 = 0xffffffff;\n                        *(unaff_EBP + -0x1c) = (puVar4 - *(iVar2 * 4 + 0x480a60)) / 0x24 + iVar2 * 0x20;\n                        break;\n                    }\n                    (*_sym.imp.KERNEL32.DLL_LeaveCriticalSection)(puVar4 + 3);\n                }\n            }\n            if (*(unaff_EBP + -0x1c) != -1) break;\n        }\n        *(unaff_EBP + -4) = 0xffffffff;\n        fcn.00450fb5();\n    }\ncode_r0x00450faf:\n    fcn.0044dc63();\n    return;\n}\n",
        "token_count": 970
    },
    "00451905": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t fcn.00451905(uint8_t param_1)\n\n{\n    int32_t iStack4;\n    \n    if ((param_1 & 0x20) == 0) {\n        if ((param_1 & 8) != 0) {\n            return 1;\n        }\n        if ((param_1 & 4) == 0) {\n            if ((param_1 & 1) == 0) {\n                return (param_1 & 2) << 1;\n            }\n            iStack4 = 3;\n        }\n        else {\n            iStack4 = 2;\n        }\n    }\n    else {\n        iStack4 = 5;\n    }\n    return iStack4;\n}\n",
        "token_count": 157
    },
    "00455bb9": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00455bb9(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t *piVar1;\n    uint32_t arg_8h_00;\n    uint *puVar2;\n    int32_t unaff_EBP;\n    int32_t iVar3;\n    ulong uVar4;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.0044dc28(0x45bcc8, 0x10);\n    arg_8h_00 = *(unaff_EBP + 8);\n    if (arg_8h_00 < *0x480a4c) {\n        piVar1 = (arg_8h_00 >> 5) * 4 + 0x480a60;\n        iVar3 = (arg_8h_00 & 0x1f) * 0x24;\n        if ((*(*piVar1 + 4 + iVar3) & 1) != 0) {\n            fcn.00450d80(arg_8h_00);\n            *(unaff_EBP + -4) = 0;\n            if ((*(*piVar1 + 4 + iVar3) & 1) == 0) {\n                puVar2 = fcn.0044ddb5();\n                *puVar2 = 9;\n                puVar2 = fcn.0044ddbe();\n                *puVar2 = 0;\n                *(unaff_EBP + -0x20) = 0xffffffff;\n                *(unaff_EBP + -0x1c) = 0xffffffff;\n            }\n            else {\n                uVar4 = fcn.00455b36(arg_8h_00, *(unaff_EBP + 0xc), *(unaff_EBP + 0x10), *(unaff_EBP + 0x14));\n                *(unaff_EBP + -0x20) = uVar4;\n                *(unaff_EBP + -0x1c) = uVar4 >> 0x20;\n            }\n            *(unaff_EBP + -4) = 0xffffffff;\n            fcn.00455c51();\n            goto code_r0x00455c71;\n        }\n    }\n    puVar2 = fcn.0044ddb5();\n    *puVar2 = 9;\n    puVar2 = fcn.0044ddbe();\n    *puVar2 = 0;\ncode_r0x00455c71:\n    fcn.0044dc63();\n    return;\n}\n",
        "token_count": 585
    },
    "00455c77": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint16_t __cdecl fcn.00455c77(uint arg_8h, int32_t *arg_ch)\n\n{\n    uint32_t arg_8h_00;\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint var_4h;\n    \n    piVar2 = arg_ch;\n    uVar4 = arg_ch[3];\n    arg_8h_00 = arg_ch[4];\n    if (((uVar4 & 0x82) == 0) || ((uVar4 & 0x40) != 0)) {\ncode_r0x00455d90:\n        arg_ch[3] = uVar4 | 0x20;\n    }\n    else {\n        if ((uVar4 & 1) != 0) {\n            arg_ch[1] = 0;\n            if ((uVar4 & 0x10) == 0) goto code_r0x00455d90;\n            *arg_ch = arg_ch[2];\n            arg_ch[3] = uVar4 & 0xfffffffe;\n        }\n        uVar4 = arg_ch[3];\n        arg_ch[3] = uVar4 & 0xffffffef | 2;\n        arg_ch[1] = 0;\n        arg_ch = NULL;\n        if (((uVar4 & 0x10c) == 0) &&\n           (((piVar2 != 0x4651a0 && (piVar2 != 0x4651c0)) || (iVar3 = fcn.00454e0f(arg_8h_00),  iVar3 == 0)))) {\n            fcn.00454dcb(piVar2);\n        }\n        if ((*(piVar2 + 3) & 0x108) == 0) {\n            uVar4 = 2;\n            arg_ch = arg_ch & 0xffff0000 | arg_8h;\n            arg_ch = fcn.0045014c(arg_8h_00, &arg_ch, 2);\n        }\n        else {\n            iVar3 = piVar2[2];\n            iVar1 = *piVar2;\n            *piVar2 = iVar3 + 2;\n            uVar4 = iVar1 - iVar3;\n            piVar2[1] = piVar2[6] + -2;\n            if (uVar4 < 1) {\n                if (arg_8h_00 == 0xffffffff) {\n                    iVar3 = 0x465970;\n                }\n                else {\n                    iVar3 = *((arg_8h_00 >> 5) * 4 + 0x480a60) + (arg_8h_00 & 0x1f) * 0x24;\n                }\n                if ((*(iVar3 + 4) & 0x20) != 0) {\n                    fcn.0044fd09(arg_8h_00, 0, 2);\n                }\n            }\n            else {\n                arg_ch = fcn.0045014c(arg_8h_00, iVar3, uVar4);\n            }\n            *piVar2[2] = arg_8h;\n        }\n        if (arg_ch == uVar4) {\n            return arg_8h;\n        }\n        piVar2[3] = piVar2[3] | 0x20;\n    }\n    return 0xffff;\n}\n",
        "token_count": 750
    },
    "00457397": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint32_t fcn.00457397(void)\n\n{\n    uint32_t uVar1;\n    uint16_t uVar2;\n    uint16_t unaff_BX;\n    \n    uVar1 = 0;\n    if ((unaff_BX & 1) != 0) {\n        uVar1 = 0x10;\n    }\n    if ((unaff_BX & 4) != 0) {\n        uVar1 = uVar1 | 8;\n    }\n    if ((unaff_BX & 8) != 0) {\n        uVar1 = uVar1 | 4;\n    }\n    if ((unaff_BX & 0x10) != 0) {\n        uVar1 = uVar1 | 2;\n    }\n    if ((unaff_BX & 0x20) != 0) {\n        uVar1 = uVar1 | 1;\n    }\n    if ((unaff_BX & 2) != 0) {\n        uVar1 = uVar1 | 0x80000;\n    }\n    uVar2 = unaff_BX & 0xc00;\n    if ((unaff_BX & 0xc00) != 0) {\n        if (uVar2 == 0x400) {\n            uVar1 = uVar1 | 0x100;\n        }\n        else if (uVar2 == 0x800) {\n            uVar1 = uVar1 | 0x200;\n        }\n        else if (uVar2 == 0xc00) {\n            uVar1 = uVar1 | 0x300;\n        }\n    }\n    if ((unaff_BX & 0x300) == 0) {\n        uVar1 = uVar1 | 0x20000;\n    }\n    else if ((unaff_BX & 0x300) == 0x200) {\n        uVar1 = uVar1 | 0x10000;\n    }\n    if ((unaff_BX & 0x1000) != 0) {\n        uVar1 = uVar1 | 0x40000;\n    }\n    return uVar1;\n}\n",
        "token_count": 472
    },
    "00401c55": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00401c55(int32_t *arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    uint32_t in_ECX;\n    uint32_t uVar4;\n    uint uVar5;\n    int32_t lpRect;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (*arg_8h == 0) {\n        return 0;\n    }\n    (*_sym.imp.USER32.dll_GetWindowRect)(*arg_8h, &lpRect);\n    pcVar2 = _sym.imp.USER32.dll_PostMessageW;\n    pcVar1 = _sym.imp.KERNEL32.DLL_Sleep;\n    if (in_ECX == 0xffffffff) {\n        in_ECX = (var_18h - lpRect) / 2;\n    }\n    if (in_EAX == -1) {\n        in_EAX = (var_14h - var_1ch) / 2;\n    }\n    uVar4 = in_EAX << 0x10 | in_ECX & 0xffff;\n    iVar3 = 0;\n    var_ch = 0x201;\n    var_8h = 0x203;\n    var_10h = 0x202;\n    var_4h = 1;\n    if (arg_ch == 2) {\n        var_ch = 0x204;\n        var_10h = 0x205;\n        var_4h = 2;\n    }\n    else {\n        if (arg_ch != 1) goto code_r0x00401d02;\n        var_ch = 0x207;\n        var_10h = 0x208;\n        var_4h = 0x10;\n    }\n    var_8h = 0x206;\ncode_r0x00401d02:\n    arg_ch = 1;\n    if (0 < arg_10h) {\n        do {\n            uVar5 = var_ch;\n            if ((arg_ch / 2) * 2 - arg_ch == 0) {\n                uVar5 = var_8h;\n            }\n            (*pcVar2)(*arg_8h, uVar5, var_4h, uVar4);\n            (*pcVar1)(0);\n            (*pcVar2)(*arg_8h, var_10h, 0, uVar4);\n            (*pcVar1)(0);\n            iVar3 = arg_ch + 1;\n            arg_ch = iVar3;\n        } while (iVar3 <= arg_10h);\n    }\n    return CONCAT31(iVar3 >> 8, 1);\n}\n",
        "token_count": 638
    },
    "00401e02": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint32_t fcn.00401e02(void)\n\n{\n    uint32_t *in_EAX;\n    uint32_t uVar1;\n    uint32_t *unaff_ESI;\n    \n    uVar1 = *in_EAX;\n    if (uVar1 != 0) {\n        uVar1 = (*_sym.imp.USER32.dll_SendMessageW)(uVar1, 0x130b, 0, 0);\n        *unaff_ESI = uVar1;\n        if (uVar1 != 0xffffffff) {\n            *unaff_ESI = uVar1 + 1;\n            return CONCAT31(uVar1 + 1 >> 8, 1);\n        }\n    }\n    return uVar1 & 0xffffff00;\n}\n",
        "token_count": 165
    },
    "00403133": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00403133(uint arg_8h)\n\n{\n    char cVar1;\n    uint32_t in_EAX;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t *unaff_ESI;\n    uint *unaff_EDI;\n    uint var_ch;\n    \n    uVar4 = 0;\n    if (*unaff_ESI == 0) {\ncode_r0x0040318f:\n        return in_EAX & 0xffffff00;\n    }\n    fcn.00416d61();\n    fcn.004030fe(&var_ch);\n    if (arg_8h == '\\0') {\n        iVar3 = fcn.004172a3(*unaff_EDI);\n        if (iVar3 == -1) {\n            in_EAX = fcn.0044951c(var_ch);\n            goto code_r0x0040318f;\n        }\n    }\n    else {\n        cVar1 = fcn.00416f96();\n        if (cVar1 == '\\0') goto code_r0x00403168;\n    }\n    uVar4 = 1;\ncode_r0x00403168:\n    uVar2 = fcn.0044951c(var_ch);\n    return uVar2 & 0xffffff00 | uVar4;\n}\n",
        "token_count": 295
    },
    "00403ee1": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1",
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.00403ee1(int32_t param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    int32_t **ppiVar4;\n    \n    if (in_EAX != -1) {\n        iVar1 = *(param_1 + 0x54 + in_EAX * 4);\n        iVar2 = *(iVar1 + 0x14);\n        iVar3 = 3;\n        if (2 < iVar2) {\n            ppiVar4 = iVar1 + 0x5c;\n            do {\n                if ((*ppiVar4 != NULL) && (**ppiVar4 == param_2)) {\n                    return iVar3;\n                }\n                iVar3 = iVar3 + 1;\n                ppiVar4 = ppiVar4 + 1;\n            } while (iVar3 <= iVar2);\n        }\n        in_EAX = -1;\n    }\n    return in_EAX;\n}\n",
        "token_count": 227
    },
    "00403f19": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t fcn.00403f19(int32_t param_1)\n\n{\n    int32_t in_EAX;\n    \n    if ((in_EAX == -1) || (param_1 == -1)) {\n        param_1 = 0;\n    }\n    else {\n        param_1 = in_EAX * 0x1003 + param_1;\n    }\n    return param_1;\n}\n",
        "token_count": 89
    },
    "00406b0a": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00406b0a(uint arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    char cVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    uint uVar4;\n    \n    if (*(in_EAX + 0x1c) == -1) {\n        uVar4 = 0;\n    }\n    else {\n        uVar4 = **(in_EAX + 0x54 + *(in_EAX + 0x1c) * 4);\n    }\n    iVar3 = fcn.00403eaf(arg_8h);\n    if (iVar3 != -1) {\n        *(in_EAX + 0x1c) = iVar3;\n        if (arg_ch == -1) {\n            return uVar4;\n        }\n        cVar2 = fcn.00404081(&arg_ch);\n        if (cVar2 != '\\0') {\n            iVar3 = *(in_EAX + 0x54 + iVar3 * 4);\n            iVar1 = *(iVar3 + 0x50 + arg_ch * 4);\n            if (*(iVar1 + 0x70) == '\\v') {\n                *(iVar3 + 0x4158) = 1;\n                *(iVar3 + 0x4150) = *(iVar1 + 0x73);\n                return uVar4;\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 319
    },
    "00406da1": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00406da1(int32_t phiconSmall, int32_t arg_ch, int32_t lpszFile, int32_t nIconIndex, int32_t hWnd)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    int32_t unaff_EDI;\n    uint var_4h;\n    \n    if (hWnd != 0) {\n        uVar2 = fcn.00403eaf(hWnd);\n        *(unaff_EDI + 0x1c) = uVar2;\n    }\n    if (*(unaff_EDI + 0x1c) == -1) {\n        var_4h = 0;\n    }\n    else {\n        if (phiconSmall != 0) {\n            fcn.00416e83(*(unaff_EDI + 0x54 + *(unaff_EDI + 0x1c) * 4) + 0x2c, phiconSmall);\n        }\n        puVar1 = *(unaff_EDI + 0x54 + *(unaff_EDI + 0x1c) * 4);\n        hWnd = *puVar1;\n        var_4h = 1;\n        if (lpszFile != 0) {\n            if (nIconIndex < 0) {\n                phiconSmall = (*_sym.imp.USER32.dll_LoadImageW)(0, lpszFile, 1, 0, 0, 0x50);\n            }\n            else {\n                (**0x4593fc)(lpszFile, nIconIndex, 0, &phiconSmall, 1);\n            }\n            if (phiconSmall == 0) {\n                var_4h = 0;\n            }\n            else {\n                if (puVar1[10] != 0) {\n                    (*_sym.imp.USER32.dll_DestroyIcon)(puVar1[10]);\n                }\n                puVar1[10] = phiconSmall;\n                (*_sym.imp.USER32.dll_SendMessageW)(hWnd, 0x80, 0, phiconSmall);\n            }\n        }\n        if (arg_ch != -1) {\n            if (*(unaff_EDI + 1) == '\\0') {\n                fcn.0041683d();\n            }\n            puVar1[0x13] = arg_ch;\n        }\n        if (*(puVar1 + 0xe) != '\\0') {\n            (*_sym.imp.USER32.dll_InvalidateRect)(hWnd, 0, 1);\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 553
    },
    "00408164": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00408164(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    uint *puVar1;\n    int32_t *hWnd_00;\n    int32_t iVar2;\n    char cVar3;\n    int32_t in_EAX;\n    uint uVar4;\n    int32_t in_EDX;\n    int32_t *piVar5;\n    int32_t lpRect;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t *var_ch;\n    int32_t var_8h;\n    int32_t hWnd;\n    \n    cVar3 = fcn.00404081(&hWnd);\n    if (cVar3 == '\\0') {\n        uVar4 = 0;\n    }\n    else {\n        var_8h = *(in_EDX + 0x54 + var_8h * 4);\n        var_ch = *(var_8h + 0x50 + hWnd * 4);\n        if ((((arg_8h != -1) || (arg_ch != -1)) || (arg_10h != -1)) || (in_EAX != -1)) {\n            hWnd = *var_ch;\n            fcn.00408de6();\n            (*_sym.imp.USER32.dll_GetWindowRect)(hWnd, &lpRect);\n            iVar2 = var_8h;\n            hWnd_00 = var_ch;\n            if (arg_10h == -1) {\n                *(var_8h + 0x4064) = var_14h - lpRect;\n            }\n            if (in_EAX == -1) {\n                *(var_8h + 0x4068) = var_10h - var_18h;\n            }\n            if (((*(var_ch + 0x1a) == *(var_8h + 0x405c)) && (*(var_ch + 0x6a) == *(var_8h + 0x4060))) &&\n               ((*(var_ch + 0x1b) == *(var_8h + 0x4064) && (*(var_ch + 0x6e) == *(var_8h + 0x4068))))) {\n                (*_sym.imp.USER32.dll_InvalidateRect)(hWnd, 0, 0);\n            }\n            else {\n                (*_sym.imp.USER32.dll_MoveWindow)\n                          (hWnd, *(var_8h + 0x405c), *(var_8h + 0x4060), *(var_8h + 0x4064), *(var_8h + 0x4068), 1);\n                fcn.00409ae3(1);\n                if ((*(hWnd_00 + 0x1c) == '\\x03') && (arg_10h = 3,  2 < *(iVar2 + 0x14))) {\n                    piVar5 = iVar2 + 0x5c;\n                    do {\n                        puVar1 = *piVar5;\n                        if (((puVar1 != NULL) && (*(puVar1 + 0x1c) == '\\x16')) && (puVar1[9] == hWnd)) {\n                            (*_sym.imp.USER32.dll_SendMessageW)(*puVar1, 0x469, hWnd, 0);\n                        }\n                        arg_10h = arg_10h + 1;\n                        piVar5 = piVar5 + 1;\n                    } while (arg_10h <= *(iVar2 + 0x14));\n                }\n                fcn.004040f0(hWnd_00, 1);\n            }\n        }\n        uVar4 = 1;\n    }\n    return uVar4;\n}\n",
        "token_count": 824
    },
    "0040ad6d": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0040ae2b)\n// WARNING: Removing unreachable block (ram,0x0040ae71)\n// WARNING: Removing unreachable block (ram,0x0040ae86)\n\nuint __cdecl\nfcn.0040ad6d(int32_t arg_8h, uint hWnd, uint arg_10h, uint arg_14h, uint X, uint Y, int32_t nWidth, int32_t nHeight, \n            int32_t arg_28h)\n\n{\n    uint32_t in_EAX;\n    uint arg_14h_00;\n    int32_t iVar1;\n    int32_t *in_ECX;\n    uint hLibModule;\n    uint var_4h;\n    \n    if (in_EAX == 0xffffffff) {\n        in_EAX = 0x100;\n    }\n    arg_14h_00 = fcn.00408c5e(in_EAX | 0xe);\n    if (arg_28h == -1) {\n        arg_28h = 0;\n    }\n    iVar1 = fcn.00409d87(arg_28h, 0x45c390, 0, arg_14h_00, X, Y, 0, 0, arg_10h, 0, 0);\n    *in_ECX = iVar1;\n    if (iVar1 != 0) {\n        if (nWidth == -1) {\n            nWidth = 0x96;\n        }\n        if (nHeight == -1) {\n            nHeight = 0x96;\n        }\n        if (*(arg_8h + 8) == 0) {\n            *(in_ECX + 0x66) = 0x300;\n        }\n        iVar1 = fcn.0040aea4(in_ECX, &nWidth, &nHeight);\n        if (iVar1 != 0) {\n            (*_sym.imp.USER32.dll_MoveWindow)(*in_ECX, X, Y, nWidth, nHeight, 0);\n            fcn.0040d9b0();\n            return 1;\n        }\n        (*_sym.imp.USER32.dll_DestroyWindow)(*in_ECX);\n    }\n    return 0;\n}\n",
        "token_count": 483
    },
    "0040aea4": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040aea4(uint *arg_8h, int32_t *arg_ch, int32_t *arg_10h)\n\n{\n    int16_t *in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    uint uVar3;\n    uint lpvObject;\n    int32_t var_28h;\n    int32_t var_24h;\n    uint lpNumberOfBytesRead;\n    uint nNumberOfBytesToRead;\n    int32_t *lpPictDesc;\n    int32_t *var_8h;\n    uint hgdiobj;\n    \n    var_8h = NULL;\n    if (*in_EAX == 0) {\n        hgdiobj = 0;\ncode_r0x0040afaf:\n        if (arg_8h[0x11] != 0) {\n            (**0x459108)(arg_8h[0x11]);\n        }\n        arg_8h[0x11] = hgdiobj;\n        uVar2 = *arg_8h;\n        (*_sym.imp.USER32.dll_SendMessageW)(uVar2, 0x172, 0, hgdiobj);\n    }\n    else {\n        iVar1 = (**0x4592d8)();\n        if (iVar1 != -1) {\n            nNumberOfBytesToRead = (**0x4592d4)(iVar1, 0);\n            uVar2 = (**0x4592d0)(2, nNumberOfBytesToRead);\n            uVar3 = (**0x4592cc)(uVar2);\n            (**0x4592c8)(iVar1, uVar3, nNumberOfBytesToRead, &lpNumberOfBytesRead, 0);\n            (**0x4592c4)(uVar2);\n            (*_sym.imp.KERNEL32.DLL_CloseHandle)(iVar1);\n            (*_sym.imp.ole32.dll_CreateStreamOnHGlobal)(uVar2, 1, &lpPictDesc);\n            (**0x4593d8)(lpPictDesc, 0, 0, 0x45a7b0, &var_8h);\n            (**(*lpPictDesc + 8))(lpPictDesc);\n            (**0x4592c0)(uVar2);\n            if (var_8h != NULL) {\n                (**(*var_8h + 0xc))(var_8h, &hgdiobj);\n                (*_sym.imp.GDI32.dll_GetObjectW)(hgdiobj, 0x18, &lpvObject);\n                if ((*arg_ch == 0) && (*arg_10h == 0)) {\n                    *arg_ch = var_28h;\n                    *arg_10h = var_24h;\n                }\n                else {\n                    var_24h = *arg_10h;\n                    var_28h = *arg_ch;\n                }\n                hgdiobj = (*_sym.imp.USER32.dll_CopyImage)(hgdiobj, 0, *arg_ch, *arg_10h, 0x2000);\n                (**(*var_8h + 8))(var_8h);\n                goto code_r0x0040afaf;\n            }\n        }\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 708
    },
    "0040b2cd": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.0040b2cd(int32_t arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            int32_t arg_24h, int32_t arg_28h)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t *unaff_EDI;\n    \n    if (arg_24h == -1) {\n        arg_24h = 0;\n    }\n    uVar2 = fcn.00408c5e(arg_24h);\n    if (arg_28h == -1) {\n        arg_28h = 0;\n    }\n    iVar3 = fcn.00409d87(arg_28h, 0x45c2e4, 0, uVar2, arg_14h, arg_18h, arg_1ch, arg_20h, arg_10h, 0, 0);\n    *unaff_EDI = iVar3;\n    pcVar1 = _sym.imp.USER32.dll_SendMessageW;\n    if (iVar3 == 0) {\n        uVar2 = 0;\n    }\n    else {\n        (*_sym.imp.USER32.dll_SendMessageW)(iVar3, 0x2001, 0, 0xff000000);\n        (*pcVar1)(*unaff_EDI, 0x409, 0, 0xff000000);\n        (*pcVar1)(*unaff_EDI, 0x402, 0, 0);\n        (*pcVar1)(*unaff_EDI, 0x401, 0, 0x640000);\n        (*pcVar1)(*unaff_EDI, 0x404, 1, 0);\n        if (*(arg_8h + 8) == 0) {\n            *(unaff_EDI + 0x66) = 1;\n        }\n        uVar2 = 1;\n    }\n    return uVar2;\n}\n",
        "token_count": 454
    },
    "0040b422": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.0040b422(int32_t arg_8h, int32_t *arg_ch, uint arg_10h, int16_t *lpLibFileName, uint arg_18h, uint arg_1ch, \n            int32_t arg_20h, int32_t arg_24h, uint arg_28h)\n\n{\n    code *pcVar1;\n    uint32_t in_EAX;\n    int32_t iVar2;\n    \n    if (in_EAX == 0xffffffff) {\n        in_EAX = 2;\n    }\n    if (in_EAX < 0x10) {\n        in_EAX = in_EAX | 2;\n    }\n    if (arg_20h == -1) {\n        arg_20h = 0x96;\n    }\n    if (arg_24h == -1) {\n        arg_24h = 0x96;\n    }\n    if (*lpLibFileName != 0) {\n        iVar2 = fcn.00409d87(0, 0x45c2a4, 0, in_EAX, arg_18h, arg_1ch, arg_20h, arg_24h, arg_10h, 0, 0);\n        *arg_ch = iVar2;\n        pcVar1 = _sym.imp.USER32.dll_SendMessageW;\n        if (iVar2 != 0) {\n            iVar2 = (*_sym.imp.USER32.dll_SendMessageW)(iVar2, 0x467, 0, lpLibFileName);\n            if (((iVar2 != 0) || (iVar2 = (**0x4592b8)(lpLibFileName),  iVar2 == 0)) ||\n               (iVar2 = (*pcVar1)(*arg_ch, 0x467, iVar2, arg_28h),  iVar2 != 0)) {\n                if (*(arg_8h + 8) == 0) {\n                    *(arg_ch + 0x66) = 0x300;\n                }\n                return 1;\n            }\n            (*_sym.imp.USER32.dll_DestroyWindow)(*arg_ch);\n        }\n    }\n    return 0;\n}\n",
        "token_count": 467
    },
    "0040b5c4": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040b5c4(int32_t arg_8h, uint arg_ch, uint X, uint Y, int32_t cx, int32_t cy, int32_t arg_20h)\n\n{\n    uint32_t in_EAX;\n    uint arg_14h;\n    int32_t iVar1;\n    int32_t in_ECX;\n    int32_t *unaff_EDI;\n    \n    if (*(in_ECX + 0x4148) == 0) {\n        if (in_EAX == 0xffffffff) {\n            in_EAX = 0;\n        }\n        arg_14h = fcn.00408c5e(in_EAX | 0x4010000);\n        if (arg_20h == -1) {\n            arg_20h = 0;\n        }\n        if (cx == -1) {\n            cx = 0x96;\n        }\n        if (cy == -1) {\n            cy = 0x96;\n        }\n        iVar1 = fcn.00409d87(arg_20h, 0x45c264, 0x45bfe0, arg_14h, X, Y, cx, cy, arg_ch, 0, 0);\n        *unaff_EDI = iVar1;\n        if (iVar1 != 0) {\n            fcn.004085b5(arg_8h, in_ECX, in_ECX + 0x4070, *(in_ECX + 0x407c), *(in_ECX + 0x4080), 0);\n            (*_sym.imp.USER32.dll_SetWindowPos)(*unaff_EDI, 0xffffffff, X, Y, cx, cy, 0x20);\n            iVar1 = *unaff_EDI;\n            *(in_ECX + 0x414c) = 0xffffffff;\n            *(in_ECX + 0x4150) = 0xffffffff;\n            *(in_ECX + 0x4148) = iVar1;\n            *(in_ECX + 0x4154) = 0;\n            *(in_ECX + 0x4158) = 1;\n            if (*(arg_8h + 8) == 0) {\n                *(unaff_EDI + 0x66) = 0x300;\n            }\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 519
    },
    "0040b85a": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040b85a(int32_t arg_8h, uint arg_ch, int32_t item, uint arg_14h, uint arg_18h)\n\n{\n    int32_t *piVar1;\n    uint uVar2;\n    char cVar3;\n    uint *in_EAX;\n    int32_t iVar4;\n    int32_t unaff_EBX;\n    uint *puVar5;\n    uint lpmi;\n    uint var_30h;\n    uint var_2ch;\n    uint var_24h;\n    int32_t var_20h;\n    uint var_10h;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    lpmi = 0x2c;\n    puVar5 = &var_30h;\n    for (iVar4 = 10; iVar4 != 0; iVar4 = iVar4 + -1) {\n        *puVar5 = 0;\n        puVar5 = puVar5 + 1;\n    }\n    if (item == -1) {\n        *(unaff_EBX + 4) = in_EAX[0x1057];\n    }\n    else {\n        cVar3 = fcn.00404081(&var_8h);\n        if (cVar3 == '\\0') {\n            return 0;\n        }\n        piVar1 = arg_8h + 0x54 + var_4h * 4;\n        in_EAX = *piVar1;\n        uVar2 = *(in_EAX[var_8h + 0x14] + 4);\n        *(unaff_EBX + 4) = uVar2;\n        if (*(*(*piVar1 + var_8h * 4 + 0x50) + 0x70) != '\\f') {\n            var_30h = 4;\n            iVar4 = (*_sym.imp.USER32.dll_GetMenuItemInfoW)(uVar2, item, 0, &lpmi);\n            if (iVar4 == 0) {\n                return 0;\n            }\n            *(unaff_EBX + 4) = var_20h;\n        }\n        iVar4 = (*_sym.imp.USER32.dll_IsMenu)(*(unaff_EBX + 4));\n        if (iVar4 == 0) {\n            return 0;\n        }\n    }\n    iVar4 = (*_sym.imp.USER32.dll_CreatePopupMenu)();\n    if (iVar4 == 0) {\n        return 0;\n    }\n    var_2ch = 0;\n    var_10h = arg_14h;\n    var_24h = arg_ch;\n    var_30h = 0x16;\n    var_20h = iVar4;\n    (*_sym.imp.USER32.dll_InsertMenuItemW)(*(unaff_EBX + 4), arg_18h, 1, &lpmi);\n    (*_sym.imp.USER32.dll_DrawMenuBar)(*in_EAX);\n    in_EAX[0x1059] = iVar4;\n    return 1;\n}\n",
        "token_count": 663
    },
    "0040c38f": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040c38f(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h, int32_t arg_18h)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint *puVar2;\n    uint *puVar3;\n    \n    for (puVar3 = *(in_EAX + 0x60); puVar3[1] != 0; puVar3 = puVar3[1]) {\n    }\n    puVar2 = puVar3;\n    if (0xff < puVar3[3] + arg_18h) {\n        puVar2 = fcn.00449614(0x910);\n        puVar2[3] = 0;\n        puVar2[1] = 0;\n        *puVar2 = 0;\n        puVar3[1] = puVar2;\n    }\n    iVar1 = puVar2[3];\n    *(iVar1 + 0x810 + puVar2) = arg_ch;\n    if ((arg_ch == 8) && (*(arg_8h + 1) == '\\0')) {\n        if (arg_10h != -1) {\n            fcn.0041683d();\n        }\n        if (arg_14h != -1) {\n            fcn.0041683d();\n        }\n    }\n    puVar2[iVar1 * 2 + 4] = arg_10h;\n    puVar2[iVar1 * 2 + 5] = arg_14h;\n    puVar2[3] = iVar1 + 1;\n    return;\n}\n",
        "token_count": 366
    },
    "00410f54": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00410f54(int32_t param_1, uint param_2)\n\n{\n    int16_t iVar1;\n    int32_t unaff_retaddr;\n    \n    iVar1 = (*_sym.imp.USER32.dll_VkKeyScanA)(param_2);\n    if (iVar1 == 0xffffffff) {\n        fcn.00410ff4();\n    }\n    else {\n        fcn.00411098();\n        fcn.0041154e(*(param_1 + 0x244));\n        if (unaff_retaddr != 0) {\n            do {\n                fcn.00411987(param_1, iVar1 & 0xff, 0);\n                unaff_retaddr = unaff_retaddr + -1;\n            } while (unaff_retaddr != 0);\n        }\n        fcn.0041176a(*(param_1 + 0x244));\n    }\n    return;\n}\n",
        "token_count": 202
    },
    "0041222f": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint32_t fcn.0041222f(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t *unaff_ESI;\n    int32_t unaff_EDI;\n    \n    iVar2 = fcn.00449fa0();\n    iVar5 = 0;\n    uVar3 = iVar2 - 1;\n    *unaff_ESI = 0;\n    iVar2 = 1;\n    while (-1 < uVar3) {\n        cVar1 = *(uVar3 + unaff_EDI);\n        if ((cVar1 < '0') || ('9' < cVar1)) {\n            if ((cVar1 < 'A') || ('F' < cVar1)) {\n                if ((cVar1 < 'a') || ('f' < cVar1)) goto code_r0x00412292;\n                iVar4 = cVar1 + -0x57;\n            }\n            else {\n                iVar4 = cVar1 + -0x37;\n            }\n        }\n        else {\n            iVar4 = cVar1 + -0x30;\n        }\n        *unaff_ESI = *unaff_ESI + iVar4 * iVar2;\n        uVar3 = uVar3 - 1;\n        iVar2 = iVar2 << 4;\n        iVar5 = iVar5 + 1;\n        if (7 < iVar5) break;\n    }\n    if (uVar3 == 0xffffffff) {\n        return 0xffffff01;\n    }\ncode_r0x00412292:\n    *unaff_ESI = 0;\n    return uVar3 & 0xffffff00;\n}\n",
        "token_count": 376
    },
    "004142bc": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint fcn.004142bc(int32_t param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    \n    iVar3 = 0;\n    iVar1 = fcn.0041451b();\n    if (iVar1 == -1) {\n        uVar2 = 0;\n    }\n    else {\n        fcn.004145dc();\n        if (0 < param_2 + -1) {\n            do {\n                iVar1 = fcn.0041451b();\n                if (iVar1 == -1) break;\n                *(iVar3 + param_1) = iVar1;\n                iVar3 = iVar3 + 1;\n            } while (iVar3 < param_2 + -1);\n        }\n        *(iVar3 + param_1) = 0;\n        uVar2 = 1;\n    }\n    return uVar2;\n}\n",
        "token_count": 202
    },
    "00414431": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint fcn.00414431(int32_t param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    \n    iVar3 = 0;\n    iVar1 = fcn.0041451b();\n    if (iVar1 == -1) {\n        uVar2 = 0;\n    }\n    else {\n        fcn.004145dc();\n        if (0 < param_2 + -1) {\n            while (iVar1 = fcn.0041451b(),  iVar1 != -1) {\n                if (iVar1 == 0xd) {\n                    iVar1 = fcn.0041451b();\n                    if ((iVar1 != -1) && (iVar1 != 10)) {\n                        fcn.004145dc();\n                    }\n                    break;\n                }\n                if (iVar1 == 10) break;\n                *(iVar3 + param_1) = iVar1;\n                iVar3 = iVar3 + 1;\n                if (param_2 + -1 <= iVar3) break;\n            }\n        }\n        *(iVar3 + param_1) = 0;\n        uVar2 = 1;\n    }\n    return uVar2;\n}\n",
        "token_count": 268
    },
    "00414599": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint32_t fcn.00414599(void)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    uint32_t uVar2;\n    \n    if ((*(in_EAX + 0xc) & 2) == 0) {\n        uVar2 = fcn.0041451b();\n        uVar1 = fcn.0041451b();\n    }\n    else {\n        uVar1 = fcn.0041451b();\n        uVar2 = fcn.0041451b();\n    }\n    if ((uVar2 == 0xffffffff) || (uVar1 == 0xffffffff)) {\n        uVar2 = 0xffff;\n    }\n    else {\n        uVar2 = (uVar1 & 0xff) << 8 | uVar2;\n    }\n    return uVar2;\n}\n",
        "token_count": 185
    },
    "00414fbc": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint32_t fcn.00414fbc(uint param_1)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = fcn.00414fd1(param_1);\n    return uVar1 & 0xffffff00 | uVar1 != 0xffffffff;\n}\n",
        "token_count": 62
    },
    "00414fd1": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00414fd1(uint lpFileName)\n\n{\n    int32_t iVar1;\n    int32_t lpFindFileData;\n    \n    iVar1 = (*_sym.imp.KERNEL32.DLL_GetFileAttributesW)(lpFileName);\n    if (iVar1 == -1) {\n        iVar1 = (*_sym.imp.KERNEL32.DLL_FindFirstFileW)(lpFileName, &lpFindFileData);\n        if (iVar1 == -1) {\n            return -1;\n        }\n        (*_sym.imp.KERNEL32.DLL_FindClose)(iVar1);\n        iVar1 = lpFindFileData;\n    }\n    return iVar1;\n}\n",
        "token_count": 143
    },
    "00415010": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint fcn.00415010(uint param_1)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = (*_sym.imp.KERNEL32.DLL_GetFileAttributesW)(param_1);\n    if ((uVar1 != 0xffffffff) && ((uVar1 & 0x10) != 0)) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 86
    },
    "004162eb": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.004162eb(uint32_t param_1)\n\n{\n    int32_t in_EAX;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    \n    if (in_EAX != -1) {\n        *0x467a18 = 0;\n        *0x467a0c = in_EAX;\n        *0x467a10 = unaff_ESI;\n        *0x467a14 = unaff_EDI;\n        (**0x459188)(0, 0xe, fcn.004161de, param_1);\n        if (*0x467a18 != 0) {\n            return;\n        }\n    }\n    (*_sym.imp.USER32.dll_LoadImageW)(*0x467a08, param_1 & 0xffff, 1);\n    return;\n}\n",
        "token_count": 177
    },
    "004167a5": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint32_t fcn.004167a5(void)\n\n{\n    uint16_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t *unaff_ESI;\n    int32_t unaff_EDI;\n    \n    iVar2 = fcn.0044985c();\n    iVar5 = 0;\n    uVar3 = iVar2 - 1;\n    *unaff_ESI = 0;\n    iVar2 = 1;\n    while (-1 < uVar3) {\n        uVar1 = *(unaff_EDI + uVar3 * 2);\n        if ((uVar1 < 0x30) || (0x39 < uVar1)) {\n            if ((uVar1 < 0x41) || (0x46 < uVar1)) {\n                if ((uVar1 < 0x61) || (0x66 < uVar1)) goto code_r0x0041680f;\n                iVar4 = uVar1 - 0x57;\n            }\n            else {\n                iVar4 = uVar1 - 0x37;\n            }\n        }\n        else {\n            iVar4 = uVar1 - 0x30;\n        }\n        *unaff_ESI = *unaff_ESI + iVar4 * iVar2;\n        uVar3 = uVar3 - 1;\n        iVar2 = iVar2 << 4;\n        iVar5 = iVar5 + 1;\n        if (7 < iVar5) break;\n    }\n    if (uVar3 == 0xffffffff) {\n        return 0xffffff01;\n    }\ncode_r0x0041680f:\n    *unaff_ESI = 0;\n    return uVar3 & 0xffffff00;\n}\n",
        "token_count": 392
    },
    "004169d1": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004169d1(uint arg_8h)\n\n{\n    code *pcVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint var_4h;\n    \n    if (in_EAX == -1) {\n        iVar2 = fcn.00449fa0(arg_8h);\n        in_EAX = iVar2 + 1;\n    }\n    pcVar1 = _sym.imp.KERNEL32.DLL_MultiByteToWideChar;\n    iVar3 = (*_sym.imp.KERNEL32.DLL_MultiByteToWideChar)(0, 1, arg_8h, in_EAX, 0, 0);\n    iVar2 = iVar3;\n    if (iVar3 != 0) {\n        iVar2 = fcn.00449614(iVar3 * 2);\n        (*pcVar1)(0, 1, arg_8h, in_EAX, iVar2, iVar3);\n    }\n    return iVar2;\n}\n",
        "token_count": 225
    },
    "00416a25": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint fcn.00416a25(uint param_1)\n\n{\n    code *pcVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    uint uVar4;\n    \n    if (in_EAX == -1) {\n        iVar2 = fcn.0044985c(param_1);\n        in_EAX = iVar2 + 1;\n    }\n    pcVar1 = *0x459198;\n    uVar4 = 0;\n    iVar2 = (**0x459198)(0, 0, param_1, in_EAX, 0, 0, 0, 0);\n    if (iVar2 == 0) {\n        uVar3 = 0;\n    }\n    else {\n        uVar3 = fcn.00449614(iVar2);\n        (*pcVar1)(0, 0, uVar4, in_EAX, uVar3, iVar2, 0, 0);\n    }\n    return uVar3;\n}\n",
        "token_count": 222
    },
    "00417002": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t * __thiscall fcn.00417002(int32_t *param_1, int32_t *param_2)\n\n{\n    uint32_t uVar1;\n    int32_t in_EAX;\n    uint32_t unaff_EBX;\n    \n    if ((in_EAX != 0) && (uVar1 = param_2[1],  unaff_EBX < uVar1)) {\n        if ((in_EAX == -1) || (uVar1 < unaff_EBX + in_EAX)) {\n            in_EAX = uVar1 - unaff_EBX;\n        }\n        fcn.00416df9();\n        fcn.0044a6b0(*param_1 + param_1[1] * 2, *param_2 + unaff_EBX * 2, in_EAX * 2);\n        param_1[1] = param_1[1] + in_EAX;\n        *(*param_1 + param_1[1] * 2) = 0;\n    }\n    return param_1;\n}\n",
        "token_count": 234
    },
    "00417064": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t * __thiscall fcn.00417064(int32_t *param_1, uint param_2)\n\n{\n    uint32_t in_EAX;\n    uint32_t uVar1;\n    \n    if (in_EAX != 0) {\n        uVar1 = fcn.0044985c(param_2);\n        if ((in_EAX == 0xffffffff) || (uVar1 < in_EAX)) {\n            in_EAX = uVar1;\n        }\n        fcn.00416df9();\n        fcn.0044a6b0(*param_1 + param_1[1] * 2, param_2, in_EAX * 2);\n        param_1[1] = param_1[1] + in_EAX;\n        *(*param_1 + param_1[1] * 2) = 0;\n    }\n    return param_1;\n}\n",
        "token_count": 198
    },
    "00417113": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00417113(int32_t *param_1, int32_t *param_2)\n\n{\n    uint32_t uVar1;\n    int32_t in_EAX;\n    uint32_t unaff_EBX;\n    \n    if ((in_EAX == 0) || (uVar1 = param_2[1],  uVar1 <= unaff_EBX)) {\n        fcn.004171ba();\n    }\n    else {\n        if ((in_EAX == -1) || (uVar1 < unaff_EBX + in_EAX)) {\n            in_EAX = uVar1 - unaff_EBX;\n        }\n        fcn.00416e39();\n        param_1[1] = in_EAX;\n        fcn.0044a6b0(*param_1, *param_2 + unaff_EBX * 2, in_EAX * 2);\n        *(in_EAX * 2 + *param_1) = 0;\n    }\n    return;\n}\n",
        "token_count": 222
    },
    "004171ba": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004171ba(uint param_1, uint32_t param_2)\n\n{\n    uint32_t uVar1;\n    int32_t in_EAX;\n    int32_t *unaff_EDI;\n    \n    if (in_EAX != 0) {\n        uVar1 = unaff_EDI[1];\n        while (param_2 < uVar1) {\n            if (in_EAX == -1) {\n                in_EAX = uVar1 - param_2;\n            }\n            if (param_2 + in_EAX <= uVar1) {\n                fcn.0044a6b0(*unaff_EDI + param_2 * 2, *unaff_EDI + (param_2 + in_EAX) * 2, \n                             ((uVar1 - param_2) - in_EAX) * 2 + 2);\n                unaff_EDI[1] = unaff_EDI[1] - in_EAX;\n                return;\n            }\n            in_EAX = -1;\n        }\n    }\n    return;\n}\n",
        "token_count": 234
    },
    "0041744d": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041744d(uint arg_8h)\n\n{\n    uint var_ch;\n    \n    fcn.00416d61();\n    fcn.00417113();\n    fcn.00416dcf();\n    fcn.0044951c(var_ch);\n    return arg_8h;\n}\n",
        "token_count": 69
    },
    "004174f1": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.004174f1(uint param_1)\n\n{\n    fcn.00417200(param_1);\n    fcn.004171ba();\n    return;\n}\n",
        "token_count": 38
    },
    "00420169": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint fcn.00420169(int32_t param_1)\n\n{\n    if (param_1 == -1) {\n        param_1 = (*_sym.imp.KERNEL32.DLL_GetLastError)(0, 0x47c7b0, 0xfff, 0);\n    }\n    (**0x4591a8)(0x1000, 0, param_1);\n    return 0x47c7b0;\n}\n",
        "token_count": 97
    },
    "00424b0d": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.00424b0d(uint lpFilePart, uint lpPathName, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint lpBuffer;\n    uint lpInBuffer;\n    uint var_820h;\n    uint32_t var_81ah;\n    uint var_814h;\n    int16_t aiStack532 [2];\n    uint var_20ch;\n    uint var_4h;\n    \n    iVar1 = (*_sym.imp.KERNEL32.DLL_GetFullPathNameW)(lpFilePart, 0x104, &lpBuffer, &lpFilePart);\n    if (iVar1 != 0) {\n        fcn.00449872(&var_20ch, 0x45fbf8, &lpBuffer);\n        iVar1 = fcn.0044985c(&var_20ch);\n        if ((aiStack532[iVar1 + 1] == 0x5c) && (iVar1 = fcn.0044985c(&var_20ch),  aiStack532[iVar1] != 0x3a)) {\n            iVar1 = fcn.0044985c(&var_20ch);\n            aiStack532[iVar1 + 1] = 0;\n        }\n        iVar1 = (**0x45916c)(lpPathName, 0);\n        if ((iVar1 != 0) || (arg_10h != '\\0')) {\n            iVar1 = (**0x4592d8)(lpPathName, 0x40000000, 0, 0, 3, 0x2200000, 0);\n            if (iVar1 != -1) {\n                fcn.00449b00(&lpInBuffer, 0, 0x14);\n                lpInBuffer = 0xa0000003;\n                uVar2 = fcn.0044985c(&var_20ch);\n                var_81ah = (uVar2 & 0x7fff) << 1;\n                var_81ah = var_81ah | var_81ah + 2 << 0x10;\n                fcn.00449c77(&var_814h, &var_20ch, 0x104);\n                var_820h._0_2_ = var_81ah + 0xc;\n                iVar3 = (**0x4591e8)(iVar1, 0x900a4, &lpInBuffer, var_820h + 8, 0, 0, &var_4h, 0);\n                if (iVar3 != 0) {\n                    (*_sym.imp.KERNEL32.DLL_CloseHandle)(iVar1);\n                    return 1;\n                }\n                (*_sym.imp.KERNEL32.DLL_CloseHandle)();\n            }\n            (*_sym.imp.KERNEL32.DLL_RemoveDirectoryW)(lpPathName);\n            iVar1 = 0;\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 659
    },
    "00431176": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint fcn.00431176(uint param_1, uint param_2, uint param_3, int32_t param_4, int32_t param_5, int32_t param_6)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint *puVar4;\n    uint auStack184 [3];\n    uint auStack172 [3];\n    uchar auStack160 [16];\n    uchar auStack144 [8];\n    uint *puStack136;\n    uint uStack128;\n    uint uStack116;\n    uint uStack112;\n    ushort auStack104 [4];\n    int32_t *apiStack96 [2];\n    uint auStack88 [2];\n    uint uStack80;\n    uint uStack76;\n    int32_t iStack72;\n    uint uStack68;\n    uint uStack64;\n    uint uStack60;\n    uint auStack56 [4];\n    uint *puStack40;\n    uint uStack36;\n    uint uStack32;\n    int32_t *piStack28;\n    int32_t iStack24;\n    uint auStack20 [3];\n    int32_t *piStack8;\n    \n    uVar3 = 0;\n    piStack8 = NULL;\n    fcn.00416d61();\n    fcn.00416d61();\n    fcn.00416d61();\n    uStack60 = 0;\n    puVar4 = auStack56;\n    for (iVar2 = 6; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar4 = 0;\n        puVar4 = puVar4 + 1;\n    }\n    fcn.00418bb9(0);\n    if (*0x478409 == '\\0') {\n        (*_sym.imp.ole32.dll_OleInitialize)(0);\n        *0x478409 = '\\x01';\n    }\n    uVar1 = fcn.004161b7(param_2);\n    iVar2 = (*_sym.imp.ole32.dll_CLSIDFromProgID)(uVar1, auStack160);\n    fcn.0044951c(uVar1);\n    if (iVar2 < 0) {\ncode_r0x004311f0:\n        uVar1 = 0;\n        uVar3 = 0;\n    }\n    else {\n        auStack104[0] = 9;\n        if (param_4 == 0) {\n            iVar2 = (*_sym.imp.ole32.dll_CoCreateInstance)(auStack160, 0, 5, 0x45a900, &piStack8);\n            if (-1 < iVar2) {\n                iVar2 = (***piStack8)(piStack8, param_3, apiStack96);\n                (**(*piStack8 + 8))(piStack8);\ncode_r0x00431242:\n                if (iVar2 == 0) {\n                    fcn.00418cde(auStack104);\n                    (**(*apiStack96[0] + 8))(apiStack96[0]);\n                    goto code_r0x0043125b;\n                }\n            }\n            goto code_r0x004311f0;\n        }\n        iVar2 = fcn.00430b0e(param_2, auStack160, param_5, param_6);\n        if (iVar2 != 0) goto code_r0x004311f0;\n        (*_sym.imp.ole32.dll_CoInitializeSecurity)(0, 0xffffffff, 0, 0, 2, 3, 0, 0, 0);\n        fcn.00449b00(auStack144, 0, 0x10);\n        fcn.00430569(param_4);\n        if (param_5 == 0) {\n            puStack136 = NULL;\n        }\n        else {\n            uStack64 = 1;\n            fcn.00416e83(auStack20, param_5);\n            iVar2 = fcn.00417258(0x45c9ac);\n            if (iVar2 == -1) {\n                auStack88[0] = auStack20[0];\n                uStack80 = 0;\n                uStack76 = 0;\n            }\n            else {\n                fcn.00417404(auStack172, iVar2);\n                fcn.00416e71();\n                fcn.0044951c(auStack172[0]);\n                uStack80 = uStack116;\n                uStack76 = uStack112;\n                fcn.0041744d(auStack184);\n                fcn.00416e71();\n                fcn.0044951c(auStack184[0]);\n                auStack88[0] = uStack128;\n            }\n            if (param_6 == 0) {\n                iStack72 = 0;\n                uStack68 = 0;\n            }\n            else {\n                iStack72 = param_6;\n                uStack68 = fcn.0044985c(param_6);\n            }\n            puStack40 = auStack88;\n            puStack136 = &uStack60;\n            auStack56[2] = 2;\n            uStack60 = 9;\n            auStack56[0] = 0;\n            uStack36 = 0;\n            auStack56[3] = 3;\n            auStack56[1] = 0;\n        }\n        apiStack96[0] = NULL;\n        fcn.00449b00(&uStack32, 0, 0xc);\n        piStack28 = apiStack96[0];\n        uStack32 = 0x45a910;\n        iStack24 = 0;\n        iVar2 = (*_sym.imp.ole32.dll_CoCreateInstanceEx)(auStack160, 0, 0x10, auStack144, 1, &uStack32);\n        if ((iVar2 < 0) || (iVar2 = iStack24,  iStack24 < 0)) goto code_r0x004311f0;\n        if (puStack136 != NULL) {\n            iVar2 = (*_sym.imp.ole32.dll_CoSetProxyBlanket)\n                              (piStack28, uStack60, auStack56[0], auStack56[1], auStack56[2], auStack56[3], auStack88, \n                               0x800);\n        }\n        apiStack96[0] = piStack28;\n        auStack104[0] = 9;\n        if (piStack28 != NULL) goto code_r0x00431242;\n        uVar1 = 1;\n        uVar3 = 0x460998;\n        iVar2 = 1;\n    }\n    uVar3 = fcn.00430d6b(param_1, iVar2, uVar3, uVar1);\ncode_r0x0043125b:\n    fcn.0044951c(uStack128);\n    fcn.0044951c(uStack116);\n    fcn.0044951c(auStack20[0]);\n    return uVar3;\n}\n",
        "token_count": 1537
    },
    "0043ca9c": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: lpExitCode\n// WARNING: Variable defined which should be unmapped: lpNumberOfBytesRead\n// WARNING: Variable defined which should be unmapped: var_2h\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Variable defined which should be unmapped: nNumberOfBytesToRead\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.0043ca9c(uint arg_8h, uint32_t arg_ch, uint arg_10h)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t extraout_ECX;\n    ushort unaff_BX;\n    uint32_t unaff_ESI;\n    uchar auStackY65572 [65524];\n    uint uStackY48;\n    int32_t iStackY44;\n    uchar *puStackY40;\n    uint *lpExitCode;\n    uint *lpNumberOfBytesRead;\n    int32_t *var_14h;\n    int32_t hFile;\n    uint32_t nNumberOfBytesToRead;\n    uint32_t var_8h;\n    uchar auStack8 [2];\n    uint var_2h;\n    \n    _auStack8 = 0x43caa9;\n    fcn.0044c510();\n    hFile = 0x45bfe0;\n    _auStack8 = CONCAT12(1, unaff_BX);\n    _auStack8 = _auStack8;\n    lpNumberOfBytesRead = NULL;\n    auStackY65572[0] = 0;\n    var_14h = 0x43cad4;\n    var_8h = unaff_ESI;\n    fcn.00418c7e();\n    hFile = 0;\n    if (arg_ch == 0) {\n        var_14h = 0xfffffff6;\n        lpNumberOfBytesRead = 0x43cb7a;\n        hFile = (*_sym.imp.KERNEL32.DLL_GetStdHandle)();\n        if (hFile == -1) goto code_r0x0043cb0e;\n    }\n    else {\n        var_14h = 0x43caf4;\n        var_14h = fcn.00418733();\n        lpNumberOfBytesRead = 0x43cb03;\n        var_14h = fcn.0043ca29();\n        if ((var_14h == NULL) || ((var_14h[10] & arg_ch) == 0)) {\ncode_r0x0043cb0e:\n            lpNumberOfBytesRead = NULL;\n            lpExitCode = 0x43cb16;\n            fcn.00421898();\n            lpExitCode = NULL;\n            (*_sym.imp.KERNEL32.DLL_GetLastError)();\n            fcn.004218c6();\n            return 0;\n        }\n        if ((arg_ch & 2) == 0) {\n            if ((arg_ch & 4) != 0) {\n                hFile = var_14h[3];\n            }\n        }\n        else {\n            hFile = *var_14h;\n        }\n    }\n    uVar2 = arg_ch != 0;\n    if (*(extraout_ECX + 0xc) < uVar2 || *(extraout_ECX + 0xc) == uVar2) {\n        nNumberOfBytesToRead = 0xffffffff;\n    }\n    else {\n        lpNumberOfBytesRead = 0x43cb68;\n        fcn.0040f269();\n        lpNumberOfBytesRead = 0x43cb6d;\n        nNumberOfBytesToRead = fcn.00418733();\n    }\n    if (*(extraout_ECX + 0xc) == uVar2 + 2) {\n        lpNumberOfBytesRead = 0x43cb9e;\n        fcn.0040f269();\n        lpNumberOfBytesRead = 0x43cba5;\n        cVar1 = fcn.00418886();\n        if (cVar1 != '\\0') {\n            _auStack8 = CONCAT13(1, _auStack8);\n        }\n    }\n    lpNumberOfBytesRead = NULL;\n    lpExitCode = NULL;\n    puStackY40 = 0x43cbbc;\n    iVar3 = fcn.0043cdf0(hFile, 0, 0);\n    if (iVar3 != 0) {\n        if ((var_8h == 0) && (arg_ch != 0)) {\n            lpNumberOfBytesRead = &fcn.0043ca9c::lpExitCode;\n            lpExitCode = var_14h[9];\n            iVar3 = (**0x4591ac)();\n            if (iVar3 == 0) {\n                lpNumberOfBytesRead = 0x43cc33;\n                fcn.00417f34();\ncode_r0x0043cc36:\n                lpNumberOfBytesRead = NULL;\n                lpExitCode = 0x43cc3f;\n                fcn.00421898();\n                lpExitCode = NULL;\n                (*_sym.imp.KERNEL32.DLL_GetLastError)();\n                fcn.004218c6();\n                if (var_2h._1_1_ != '\\0') {\n                    puStackY40 = 0x43cc5e;\n                    fcn.00418bb9();\n                }\n                return 0;\n            }\n            if (lpExitCode != 0x103) {\n                lpNumberOfBytesRead = 0x43cc26;\n                fcn.00417f34();\n                goto code_r0x0043cc36;\n            }\n        }\n        if ((nNumberOfBytesToRead == 0) && (var_2h._1_1_ != '\\0')) {\n            lpNumberOfBytesRead = var_8h;\n            lpExitCode = 0x43cc7a;\n            fcn.00418bb9();\n            return 1;\n        }\n        if (0xffff < var_8h) {\n            var_8h = 0xffff;\n        }\n        if ((nNumberOfBytesToRead < 0) && (nNumberOfBytesToRead = 0xffff,  var_8h != 0)) {\n            nNumberOfBytesToRead = var_8h;\n        }\n        if (var_2h._1_1_ == '\\0') {\n            lpNumberOfBytesRead = NULL;\n            lpExitCode = &fcn.0043ca9c::lpNumberOfBytesRead;\n            puStackY40 = &stack0xfffeffdc;\n            iStackY44 = hFile;\n            uStackY48 = 0x43ccd8;\n            iVar3 = (**0x4592c8)();\n        }\n        else {\n            lpNumberOfBytesRead = nNumberOfBytesToRead;\n            lpExitCode = &stack0xfffeffdc;\n            puStackY40 = 0x43ccbb;\n            iVar3 = fcn.0043cdf0(hFile, lpExitCode, nNumberOfBytesToRead);\n        }\n        if (iVar3 != 0) {\n            (&stack0xfffeffdc)[lpNumberOfBytesRead] = 0;\n            lpNumberOfBytesRead = &stack0xfffeffdc;\n            lpExitCode = 0x43ccfd;\n            uVar4 = fcn.004169d1(lpNumberOfBytesRead);\n            lpExitCode = 0x43cd09;\n            lpNumberOfBytesRead = uVar4;\n            fcn.00418c7e();\n            lpExitCode = uVar4;\n            fcn.0044951c();\n            goto code_r0x0043cd10;\n        }\n    }\n    lpNumberOfBytesRead = NULL;\n    lpExitCode = 0x43cbcf;\n    fcn.00421898();\n    lpExitCode = NULL;\n    (*_sym.imp.KERNEL32.DLL_GetLastError)();\n    fcn.004218c6();\n    if (arg_ch != 0) {\n        fcn.00417f34();\n    }\n    _auStack8 = 0;\ncode_r0x0043cd10:\n    return _auStack8 >> 0x10 & 0xff;\n}\n",
        "token_count": 1773
    },
    "00440efd": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint __cdecl fcn.00440efd(int32_t arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint32_t arg_10h;\n    uint arg_8h_00;\n    int32_t iVar3;\n    int32_t extraout_ECX;\n    uint32_t uVar4;\n    int32_t unaff_EDI;\n    uchar auStackY65564 [65512];\n    uint uStackY52;\n    uint uStackY48;\n    int32_t iStackY44;\n    uint32_t uStackY40;\n    uchar *arg_ch_00;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    fcn.0044c510();\n    uVar4 = *(arg_8h + 0xc);\n    fcn.0043f453();\n    iVar2 = fcn.0043f4ea(1);\n    if (iVar2 < 1) {\n        if (iVar2 < 0) {\n            fcn.00421898();\n        }\n    }\n    else {\n        uVar1 = **(extraout_ECX + 0x718);\n        var_8h = (*_sym.imp.USER32.dll_GetMenu)();\n        if (var_8h != 0) {\n            var_4h = 3;\n            var_ch = unaff_EDI;\n            if (2 < uVar4) {\n                do {\n                    iVar2 = (*_sym.imp.USER32.dll_GetMenuItemCount)();\n                    uVar4 = 0;\n                    if (iVar2 == 0) goto code_r0x00440f40;\n                    while( true ) {\n                        iStackY44 = var_8h;\n                        uStackY48 = 0x440fa9;\n                        uStackY40 = uVar4;\n                        (*_sym.imp.USER32.dll_GetMenuStringW)();\n                        fcn.0040f269();\n                        fcn.00418641();\n                        arg_10h = fcn.0044985c();\n                        arg_ch_00 = &stack0xfffeffe4;\n                        fcn.0040f269();\n                        arg_8h_00 = fcn.00418641();\n                        uStackY40 = 0x440fe0;\n                        iVar3 = fcn.00449827(arg_8h_00, arg_ch_00, arg_10h);\n                        if (iVar3 == 0) break;\n                        uVar4 = uVar4 + 1;\n                        if (iVar2 - 1U < uVar4) goto code_r0x00440f40;\n                    }\n                    if (var_4h == arg_10h) {\n                        var_ch = (*_sym.imp.USER32.dll_GetMenuItemID)();\n                    }\n                    else {\n                        var_8h = (*_sym.imp.USER32.dll_GetSubMenu)();\n                        if (var_8h == 0) goto code_r0x00440f40;\n                    }\n                    var_4h = var_4h + 1;\n                } while (var_4h <= arg_10h);\n                if (var_ch == -1) goto code_r0x00440f40;\n            }\n            fcn.00415e9a();\n            iStackY44 = 0x441051;\n            uStackY40 = uVar1;\n            (*_sym.imp.USER32.dll_PostMessageW)();\n            iStackY44 = 0;\n            uStackY52 = 0x441059;\n            uStackY48 = uVar1;\n            fcn.00415e9a();\n            return 0;\n        }\n    }\ncode_r0x00440f40:\n    fcn.00418bb9();\n    return 0;\n}\n",
        "token_count": 915
    },
    "004438ac": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.004438ac(uint param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint uVar3;\n    \n    uVar3 = 3;\n    uVar2 = 0;\n    iVar1 = (*_sym.imp.KERNEL32.DLL_CreateFileA)(param_1, 0x40000000, 1, 0, 3, 0x80, 0);\n    if (iVar1 != -1) {\n        (*_sym.imp.KERNEL32.DLL_SetFileTime)(iVar1, uVar2, 0, uVar3);\n        (*_sym.imp.KERNEL32.DLL_CloseHandle)(iVar1);\n    }\n    return;\n}\n",
        "token_count": 155
    },
    "00449794": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00449794(int16_t *arg_8h)\n\n{\n    int16_t iVar1;\n    int16_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int16_t *piVar5;\n    \n    while( true ) {\n        iVar3 = fcn.0044cfe4(*arg_8h, 8);\n        if (iVar3 == 0) break;\n        arg_8h = arg_8h + 1;\n    }\n    iVar1 = *arg_8h;\n    piVar5 = arg_8h + 1;\n    if ((iVar1 == 0x2d) || (iVar2 = iVar1,  iVar1 == 0x2b)) {\n        iVar2 = *piVar5;\n        piVar5 = arg_8h + 2;\n    }\n    iVar3 = 0;\n    while( true ) {\n        iVar4 = fcn.0044ce17(iVar2);\n        if (iVar4 == -1) break;\n        iVar3 = iVar4 + iVar3 * 10;\n        iVar2 = *piVar5;\n        piVar5 = piVar5 + 1;\n    }\n    if (iVar1 == 0x2d) {\n        iVar3 = -iVar3;\n    }\n    return iVar3;\n}\n",
        "token_count": 296
    },
    "00449799": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint64_t __cdecl fcn.00449799(int16_t *arg_8h)\n\n{\n    int16_t iVar1;\n    int16_t iVar2;\n    int32_t iVar3;\n    int16_t *piVar4;\n    int64_t iVar5;\n    int32_t var_8h;\n    uint var_4h;\n    \n    while( true ) {\n        iVar3 = fcn.0044cfe4(*arg_8h, 8);\n        if (iVar3 == 0) break;\n        arg_8h = arg_8h + 1;\n    }\n    iVar1 = *arg_8h;\n    piVar4 = arg_8h + 1;\n    if ((iVar1 == 0x2d) || (iVar2 = iVar1,  iVar1 == 0x2b)) {\n        iVar2 = *piVar4;\n        piVar4 = arg_8h + 2;\n    }\n    iVar5 = 0;\n    while( true ) {\n        var_8h = iVar5 >> 0x20;\n        iVar3 = fcn.0044ce17(iVar2);\n        if (iVar3 == -1) break;\n        iVar5 = fcn.0044d040();\n        iVar5 = iVar5 + iVar3;\n        iVar2 = *piVar4;\n        piVar4 = piVar4 + 1;\n    }\n    if (iVar1 == 0x2d) {\n        iVar5 = CONCAT44(-(var_8h + (iVar5 != 0)), -iVar5);\n    }\n    return iVar5;\n}\n",
        "token_count": 350
    },
    "0044bbde": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t fcn.0044bbde(int32_t param_1, uint param_2, uint param_3)\n\n{\n    uint *puVar1;\n    int32_t arg_8h;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar3 = 0;\n    if (param_1 == 0) {\n        puVar1 = fcn.0044ddb5();\n        *puVar1 = 0x16;\n    }\n    else {\n        arg_8h = fcn.0045096f(1, 0x8c);\n        if (arg_8h != 0) {\n            fcn.0044c73f(arg_8h);\n            *(arg_8h + 0x4c) = param_1;\n            *(arg_8h + 0x50) = param_3;\n            iVar3 = (**0x45931c)(0, param_2, 0x44bb4c, arg_8h, 4, arg_8h);\n            *(arg_8h + 4) = iVar3;\n            if ((iVar3 != 0) && (iVar2 = (**0x459320)(iVar3),  iVar2 != -1)) {\n                return iVar3;\n            }\n            iVar3 = (*_sym.imp.KERNEL32.DLL_GetLastError)();\n        }\n        fcn.0044a128(arg_8h);\n        if (iVar3 != 0) {\n            fcn.0044ddc7(iVar3);\n        }\n    }\n    return -1;\n}\n",
        "token_count": 344
    },
    "0044c90a": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.0044c90a(int32_t param_1)\n\n{\n    if (*0x4655f4 != -1) {\n        if (param_1 == 0) {\n            param_1 = (*_fcn.00467430)(*0x4655f4);\n        }\n        fcn.0044c7c3(param_1);\n        (*_fcn.00467434)(*0x4655f4, 0);\n    }\n    return;\n}\n",
        "token_count": 104
    },
    "0044dc7c": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint fcn.0044dc7c(int32_t param_1, int32_t param_2, uint param_3)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t extraout_ECX;\n    uchar *puVar4;\n    int32_t iVar5;\n    int32_t iStack12;\n    uint uStack8;\n    \n    puVar4 = &stack0xfffffffc;\n    if ((*(param_1 + 4) & 6) == 0) {\n        iStack12 = param_1;\n        uStack8 = param_3;\n        *(param_2 + -4) = &iStack12;\n        iVar5 = *(param_2 + 0xc);\n        iVar3 = *(param_2 + 8);\n        iVar2 = fcn.00454f24(param_2);\n        if (iVar2 == 0) {\n            *(param_1 + 4) = *(param_1 + 4) | 8;\n        }\n        else {\n            for (; iVar5 != -1; iVar5 = *(iVar3 + iVar5 * 0xc)) {\n                pcVar1 = *(iVar3 + 4 + iVar5 * 0xc);\n                if (pcVar1 != NULL) {\n                    iVar3 = (*pcVar1)();\n                    param_2 = *(puVar4 + 0xc);\n                    if (iVar3 != 0) {\n                        if (iVar3 < 0) {\n                            return 0;\n                        }\n                        iVar3 = *(param_2 + 8);\n                        fcn.00454270(param_2);\n                        puVar4 = param_2 + 0x10;\n                        fcn.004542b2(param_2, iVar5);\n                        fcn.00454346(1);\n                        *(param_2 + 0xc) = *(iVar3 + extraout_ECX * 4);\n                        param_2 = 0;\n                        iVar5 = 0;\n                        (**(iVar3 + 8 + extraout_ECX * 4))();\n                    }\n                }\n                iVar3 = *(param_2 + 8);\n            }\n        }\n    }\n    else {\n        fcn.004542b2(param_2, 0xffffffff, &stack0xfffffffc, &stack0xfffffffc);\n    }\n    return 1;\n}\n",
        "token_count": 512
    },
    "00450340": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint32_t fcn.00450340(uint8_t **param_1)\n\n{\n    uint8_t uVar1;\n    uint8_t *puVar2;\n    uint8_t *puVar3;\n    int32_t iVar4;\n    \n    puVar3 = param_1[3];\n    if (((puVar3 & 0x83) != 0) && ((puVar3 & 0x40) == 0)) {\n        if ((puVar3 & 2) == 0) {\n            param_1[3] = puVar3 | 1;\n            if ((puVar3 & 0x10c) == 0) {\n                fcn.00454dcb(param_1);\n            }\n            else {\n                *param_1 = param_1[2];\n            }\n            puVar3 = fcn.004505fe(param_1[4], param_1[2], param_1[6]);\n            param_1[1] = puVar3;\n            if ((puVar3 != NULL) && (puVar3 != 0xffffffff)) {\n                if ((param_1[3] & 0x82) == 0) {\n                    puVar2 = param_1[4];\n                    if (puVar2 == 0xffffffff) {\n                        iVar4 = 0x465970;\n                    }\n                    else {\n                        iVar4 = *((puVar2 >> 5) * 4 + 0x480a60) + (puVar2 & 0x1f) * 0x24;\n                    }\n                    if ((*(iVar4 + 4) & 0x82) == 0x82) {\n                        param_1[3] = param_1[3] | 0x2000;\n                    }\n                }\n                if (((param_1[6] == 0x200) && ((param_1[3] & 8) != 0)) && ((param_1[3] & 0x400) == 0)) {\n                    param_1[6] = 0x1000;\n                }\n                param_1[1] = puVar3 + -1;\n                uVar1 = **param_1;\n                *param_1 = *param_1 + 1;\n                return uVar1;\n            }\n            param_1[3] = param_1[3] | (-(puVar3 != NULL) & 0x10) + 0x10;\n            param_1[1] = NULL;\n        }\n        else {\n            param_1[3] = puVar3 | 0x20;\n        }\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 576
    },
    "004506a9": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004506a9(uint32_t arg_8h, uint8_t **arg_ch)\n\n{\n    uint8_t **ppuVar1;\n    uint8_t *puVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    uint var_ch;\n    uint32_t var_4h;\n    \n    var_4h = *0x465718 ^ &stack0xfffffffc;\n    if ((*(arg_ch + 3) & 0x40) == 0) {\n        puVar2 = arg_ch[4];\n        if (puVar2 == 0xffffffff) {\n            iVar3 = 0x465970;\n        }\n        else {\n            iVar3 = *((puVar2 >> 5) * 4 + 0x480a60) + (puVar2 & 0x1f) * 0x24;\n        }\n        if ((*(iVar3 + 4) & 0x80) != 0) {\n            iVar3 = fcn.004557d2(&var_ch, arg_8h);\n            if (iVar3 == -1) {\n                puVar4 = fcn.0044ddb5();\n                *puVar4 = 0x2a;\n            }\n            else {\n                iVar6 = 0;\n                if (0 < iVar3) {\n                    do {\n                        ppuVar1 = arg_ch + 1;\n                        *ppuVar1 = *ppuVar1 + -1;\n                        if (*ppuVar1 < 0) {\n                            uVar5 = fcn.0044d074(*(&var_ch + iVar6), arg_ch);\n                        }\n                        else {\n                            **arg_ch = *(&var_ch + iVar6);\n                            uVar5 = **arg_ch;\n                            *arg_ch = *arg_ch + 1;\n                        }\n                    } while ((uVar5 != 0xffffffff) && (iVar6 = iVar6 + 1,  iVar6 < iVar3));\n                }\n            }\n            goto code_r0x00450774;\n        }\n    }\n    ppuVar1 = arg_ch + 1;\n    *ppuVar1 = *ppuVar1 + -2;\n    if (*ppuVar1 < 0) {\n        fcn.00455c77(arg_8h & 0xffff, arg_ch);\n    }\n    else {\n        **arg_ch = arg_8h;\n        *arg_ch = *arg_ch + 2;\n    }\ncode_r0x00450774:\n    fcn.0044ce09();\n    return;\n}\n",
        "token_count": 571
    },
    "00454754": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00454754(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t *arg_8h_00;\n    int32_t unaff_EBP;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.0044dc28(0x45ba68, 0x14);\n    *(unaff_EBP + -0x20) = 0xffffffff;\n    fcn.0044cb7b(0xd);\n    *(unaff_EBP + -4) = 0;\n    *0x467914 = 0;\n    iVar1 = *(unaff_EBP + 8);\n    if (iVar1 == -2) {\n        *0x467914 = 1;\n        iVar1 = (**0x45936c)();\n    }\n    else if (iVar1 == -3) {\n        *0x467914 = 1;\n        iVar1 = (**0x459368)();\n    }\n    else if (iVar1 == -4) {\n        *0x467914 = 1;\n        iVar1 = *0x4678e4;\n    }\n    *(unaff_EBP + 8) = iVar1;\n    arg_8h_00 = *0x480818;\n    if (iVar1 == *0x480924) {\n        *(unaff_EBP + -0x20) = 0;\n    }\n    else {\n        *(unaff_EBP + -0x24) = *0x480818;\n        if ((arg_8h_00 == NULL) || (*arg_8h_00 != 0)) {\n            arg_8h_00 = fcn.00449f7f(0x220);\n            *(unaff_EBP + -0x24) = arg_8h_00;\n        }\n        if (arg_8h_00 != NULL) {\n            iVar1 = fcn.004545c0(*(unaff_EBP + 8));\n            *(unaff_EBP + -0x20) = iVar1;\n            if (iVar1 == 0) {\n                *arg_8h_00 = 0;\n                arg_8h_00[1] = *0x480924;\n                arg_8h_00[2] = *0x48081c;\n                arg_8h_00[3] = *0x480814;\n                for (iVar1 = 0; *(unaff_EBP + -0x1c) = iVar1,  iVar1 < 5; iVar1 = iVar1 + 1) {\n                    *(arg_8h_00 + iVar1 * 2 + 0x10) = *(iVar1 * 2 + 0x480930);\n                }\n                for (iVar1 = 0; *(unaff_EBP + -0x1c) = iVar1,  iVar1 < 0x101; iVar1 = iVar1 + 1) {\n                    *(iVar1 + 0x1c + arg_8h_00) = *(iVar1 + 0x480820);\n                }\n                for (iVar1 = 0; *(unaff_EBP + -0x1c) = iVar1,  *0x480818 = arg_8h_00,  iVar1 < 0x100; iVar1 = iVar1 + 1)\n                {\n                    *(iVar1 + 0x11d + arg_8h_00) = *(iVar1 + 0x480940);\n                }\n            }\n        }\n        if ((*(unaff_EBP + -0x20) == -1) && (arg_8h_00 != *0x480818)) {\n            fcn.0044a128(arg_8h_00);\n        }\n    }\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.0045489b();\n    fcn.0044dc63();\n    return;\n}\n",
        "token_count": 887
    },
    "004574ff": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.004574ff(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iVar4;\n    int32_t *piVar5;\n    uint *puVar6;\n    uint var_100ch;\n    uint var_1008h;\n    uint var_1004h;\n    uint uStack40;\n    int32_t iStack36;\n    int32_t iStack32;\n    uint *puStack28;\n    uint *puStack24;\n    int32_t iStack20;\n    uint var_4h;\n    \n    fcn.0044c510();\n    iStack20 = 0;\n    puStack24 = arg_8h;\n    puStack28 = 0x457525;\n    iVar1 = fcn.0044fc95();\n    if (iVar1 != -1) {\n        iStack20 = 0;\n        puStack24 = arg_8h;\n        puStack28 = 0x457544;\n        iVar2 = fcn.0044fc95();\n        if (iVar2 != -1) {\n            iVar2 = arg_ch - iVar2;\n            if (iVar2 < 1) {\n                if (iVar2 < 0) {\n                    iStack20 = 0;\n                    puStack24 = arg_ch;\n                    puStack28 = arg_8h;\n                    iStack32 = 0x4575e3;\n                    fcn.0044fc95();\n                    iStack32 = arg_8h;\n                    iStack36 = 0x4575eb;\n                    iStack20 = fcn.00450d3f();\n                    puStack24 = 0x4575f5;\n                    iVar2 = (**0x45937c)();\n                    if (iVar2 == 0) {\n                        iStack20 = 0x457607;\n                        puVar6 = fcn.0044ddb5();\n                        *puVar6 = 0xd;\n                        iStack20 = 0x457612;\n                        puVar6 = fcn.0044ddbe();\n                        iStack20 = 0x45761a;\n                        uVar3 = (*_sym.imp.KERNEL32.DLL_GetLastError)();\n                        *puVar6 = uVar3;\n                    }\n                }\n            }\n            else {\n                iStack20 = 0x1000;\n                puStack28 = &fcn.004574ff::var_1004h;\n                puStack24 = NULL;\n                iStack32 = 0x45756c;\n                fcn.00449b00();\n                iStack32 = 0x8000;\n                iStack36 = arg_8h;\n                uStack40 = 0x457579;\n                uVar3 = fcn.0044b6ac();\n                do {\n                    iStack20 = 0x1000;\n                    if (iVar2 < 0x1000) {\n                        iStack20 = iVar2;\n                    }\n                    puStack24 = &fcn.004574ff::var_1004h;\n                    puStack28 = arg_8h;\n                    iStack32 = 0x45759a;\n                    iVar4 = fcn.0044ff90();\n                    if (iVar4 == -1) {\n                        iStack20 = 0x4575af;\n                        piVar5 = fcn.0044ddbe();\n                        if (*piVar5 == 5) {\n                            iStack20 = 0x4575b9;\n                            puVar6 = fcn.0044ddb5();\n                            *puVar6 = 0xd;\n                        }\n                        break;\n                    }\n                    iVar2 = iVar2 - iVar4;\n                } while (0 < iVar2);\n                puStack24 = arg_8h;\n                puStack28 = 0x4575d0;\n                iStack20 = uVar3;\n                fcn.0044b6ac();\n            }\n            iStack20 = 0;\n            puStack28 = arg_8h;\n            iStack32 = 0x45762c;\n            puStack24 = iVar1;\n            fcn.0044fc95();\n        }\n    }\n    fcn.0044ce09();\n    return;\n}\n",
        "token_count": 932
    },
    "00401d62": {
        "rules": [
            "compute adler32 checksum/59ba9d7991e641c88d7c729645f1cfca"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00401d9b)\n\nbool fcn.00401d62(void)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    code *pcVar3;\n    int32_t iVar4;\n    int32_t *unaff_ESI;\n    \n    iVar1 = *unaff_ESI;\n    if (iVar1 != 0) {\n        fcn.00403196();\n        pcVar2 = _sym.imp.USER32.dll_MapVirtualKeyW;\n        iVar4 = (*_sym.imp.USER32.dll_MapVirtualKeyW)(0x25, 0);\n        pcVar3 = _sym.imp.USER32.dll_PostMessageW;\n        (*_sym.imp.USER32.dll_PostMessageW)(*unaff_ESI, 0x100, 0x27, iVar4 << 0x10 | 1);\n        (*_sym.imp.KERNEL32.DLL_Sleep)(0);\n        iVar4 = (*pcVar2)(0x25, 0);\n        (*pcVar3)(*unaff_ESI, 0x101, 0x27, iVar4 << 0x10 | 0xc0000001);\n        (*_sym.imp.KERNEL32.DLL_Sleep)(0);\n        fcn.00403196();\n    }\n    return iVar1 != 0;\n}\n",
        "token_count": 289
    },
    "0040804b": {
        "rules": [
            "compute adler32 checksum/59ba9d7991e641c88d7c729645f1cfca"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040804b(uint arg_8h)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    code *pcVar3;\n    char cVar4;\n    int32_t in_EAX;\n    int32_t unaff_EBX;\n    uint uVar5;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    cVar4 = fcn.00404081(&var_8h);\n    pcVar3 = _sym.imp.USER32.dll_SendMessageW;\n    if (cVar4 == '\\0') {\n        return 0;\n    }\n    puVar1 = *(*(in_EAX + 0x54 + var_4h * 4) + 0x50 + var_8h * 4);\n    uVar2 = *puVar1;\n    cVar4 = *(puVar1 + 0x1c);\n    if (cVar4 == '\\x01') {\n        if (unaff_EBX < 1) {\n            return 1;\n        }\n        uVar5 = 0x194;\ncode_r0x004080ea:\n        (*_sym.imp.USER32.dll_SendMessageW)(uVar2, uVar5);\n    }\n    else {\n        if (cVar4 != '\\x02') {\n            if (cVar4 != '\\x03') {\n                if (cVar4 == '\\x12') {\n                    uVar5 = 0x406;\n                }\n                else {\n                    if (cVar4 != '\\x16') {\n                        return 0;\n                    }\n                    uVar5 = 0x465;\n                }\n                goto code_r0x004080ea;\n            }\n            (*_sym.imp.USER32.dll_SendMessageW)(uVar2, 0xb1, 0, 0xffffffff);\n        }\n        if (0 < unaff_EBX) {\n            (*pcVar3)(uVar2, 0xc5);\n        }\n    }\n    return 1;\n}\n",
        "token_count": 434
    },
    "004119aa": {
        "rules": [
            "compute adler32 checksum/59ba9d7991e641c88d7c729645f1cfca"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.004119aa(uint arg_8h, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, uint noname_13\n            , uint noname_14, uint noname_15, uint noname_16, uint noname_17, uint noname_18, uint noname_19, \n            uint noname_20, uint noname_21, uint noname_22, uint noname_23, uint noname_24, uint noname_25, \n            uint noname_26, uint noname_27, uint noname_28, uint noname_29, uint arg_80h)\n\n{\n    uint32_t uVar1;\n    int32_t in_EAX;\n    uint bScan;\n    uint8_t extraout_CL;\n    uint8_t uVar2;\n    int32_t in_ECX;\n    uint uVar3;\n    uint extraout_EDX;\n    uint lpKeyState;\n    \n    bScan = (*_sym.imp.USER32.dll_MapVirtualKeyW)();\n    uVar3 = 0;\n    if ((((*(in_ECX + 0x248) == 0) || (in_EAX == 0x14)) || (in_EAX == 0x90)) || (in_EAX == 0x91)) {\n        if (arg_8h != '\\x01') {\n            fcn.0041142d();\n            uVar3 = extraout_EDX;\n        }\n        fcn.00410e88(in_EAX, bScan, uVar3);\n    }\n    else {\n        (*_sym.imp.USER32.dll_GetKeyboardState)(&lpKeyState);\n        *(&lpKeyState + in_EAX) = *(&lpKeyState + in_EAX) | 0x80;\n        (*_sym.imp.USER32.dll_SetKeyboardState)(&lpKeyState);\n        uVar2 = 1;\n        if (arg_8h != '\\x01') {\n            fcn.0041142d();\n            uVar2 = extraout_CL;\n        }\n        uVar1 = *(in_ECX + 0x244);\n        if (((((uVar2 & uVar1) == 0) && ((uVar1 & 0x100) == 0)) && (in_EAX != 0x12)) ||\n           (((uVar1 & 8) != 0 || ((uVar1 & 0x800) != 0)))) {\n            uVar3 = 0x100;\n        }\n        else {\n            uVar3 = 0x104;\n        }\n        (*_sym.imp.USER32.dll_PostMessageW)(*(in_ECX + 0x248), uVar3);\n    }\n    fcn.00412048(in_ECX);\n    return;\n}\n",
        "token_count": 662
    },
    "00416816": {
        "rules": [
            "compute adler32 checksum/59ba9d7991e641c88d7c729645f1cfca"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00416816(uint32_t *param_1)\n\n{\n    uint32_t uVar1;\n    uint var_4h;\n    \n    uVar1 = *param_1;\n    *param_1 = uVar1 >> 0x10 & 0xff | (uVar1 & 0xff) << 0x10 | uVar1 & 0xff00;\n    return;\n}\n",
        "token_count": 92
    },
    "0041683d": {
        "rules": [
            "compute adler32 checksum/59ba9d7991e641c88d7c729645f1cfca"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041683d(uint32_t *param_1)\n\n{\n    uint32_t uVar1;\n    uint var_4h;\n    \n    uVar1 = *param_1;\n    if (0 < uVar1) {\n        *param_1 = uVar1 >> 0x10 & 0xff | (uVar1 & 0xff) << 0x10 | uVar1 & 0xff00;\n    }\n    return;\n}\n",
        "token_count": 105
    },
    "00441f67": {
        "rules": [
            "compute adler32 checksum/59ba9d7991e641c88d7c729645f1cfca",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00441f67(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t *unaff_EDI;\n    int32_t var_4h;\n    \n    if (arg_ch != 0) {\n        uVar1 = *unaff_EDI & 0xffff;\n        uVar2 = *(unaff_EDI + 2);\n        var_4h = 0;\n        if (0 < arg_ch) {\n            do {\n                uVar1 = (*(var_4h + arg_8h) + uVar1) % 0xfff1;\n                uVar2 = (uVar2 + uVar1) % 0xfff1;\n                var_4h = var_4h + 1;\n            } while (var_4h < arg_ch);\n        }\n        *unaff_EDI = uVar2 * 0x10000 + uVar1;\n    }\n    return;\n}\n",
        "token_count": 224
    },
    "00449b00": {
        "rules": [
            "compute adler32 checksum/59ba9d7991e641c88d7c729645f1cfca"
        ],
        "decompiled_code": "\nuint32_t * fcn.00449b00(uint32_t *param_1, uint8_t param_2, uint32_t param_3)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t *puVar4;\n    \n    if (param_3 == 0) {\n        return param_1;\n    }\n    uVar1 = param_2;\n    puVar4 = param_1;\n    if (3 < param_3) {\n        uVar2 = -param_1 & 3;\n        uVar3 = param_3;\n        if (uVar2 != 0) {\n            uVar3 = param_3 - uVar2;\n            do {\n                *puVar4 = param_2;\n                puVar4 = puVar4 + 1;\n                uVar2 = uVar2 - 1;\n            } while (uVar2 != 0);\n        }\n        uVar1 = uVar1 * 0x1010101;\n        param_3 = uVar3 & 3;\n        uVar3 = uVar3 >> 2;\n        if (uVar3 != 0) {\n            for (; uVar3 != 0; uVar3 = uVar3 - 1) {\n                *puVar4 = uVar1;\n                puVar4 = puVar4 + 1;\n            }\n            if (param_3 == 0) {\n                return param_1;\n            }\n        }\n    }\n    do {\n        *puVar4 = uVar1;\n        puVar4 = puVar4 + 1;\n        param_3 = param_3 - 1;\n    } while (param_3 != 0);\n    return param_1;\n}\n",
        "token_count": 387
    },
    "00456ab6": {
        "rules": [
            "compute adler32 checksum/59ba9d7991e641c88d7c729645f1cfca"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00456ab6(uint16_t *arg_8h, uint32_t *arg_ch, int32_t *arg_10h)\n\n{\n    uint16_t uVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    uint var_18h;\n    uint32_t var_ch;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    uVar1 = arg_8h[5];\n    var_ch = *(arg_8h + 3);\n    var_8h = *(arg_8h + 1);\n    var_4h = *arg_8h << 0x10;\n    uVar5 = uVar1 & 0x7fff;\n    iVar6 = uVar5 - 0x3fff;\n    if (iVar6 == -0x3fff) {\n        iVar6 = 0;\n        uVar5 = fcn.00456a22();\n        uVar2 = uVar5;\n        if (uVar5 != 0) {\ncode_r0x00456bce:\n            uVar3 = 0;\n            goto code_r0x00456bd0;\n        }\n    }\n    else {\n        fcn.00456a07(&var_18h, &var_ch);\n        iVar4 = fcn.00456995(&var_ch, arg_10h[2]);\n        if (iVar4 != 0) {\n            iVar6 = uVar5 - 0x3ffe;\n        }\n        iVar4 = arg_10h[1];\n        if (iVar6 < iVar4 - arg_10h[2]) {\n            var_ch = 0;\n            var_8h = 0;\n            uVar5 = var_ch;\n            uVar2 = var_8h;\n        }\n        else {\n            if (iVar4 < iVar6) {\n                if (*arg_10h <= iVar6) {\n                    var_8h = 0;\n                    var_4h = 0;\n                    var_ch = 0x80000000;\n                    fcn.00456a3b(&var_ch, arg_10h[3]);\n                    iVar6 = arg_10h[5] + *arg_10h;\n                    uVar3 = 1;\n                    goto code_r0x00456bd0;\n                }\n                var_ch = var_ch & 0x7fffffff;\n                iVar6 = arg_10h[5] + iVar6;\n                fcn.00456a3b(&var_ch, arg_10h[3]);\n                goto code_r0x00456bce;\n            }\n            fcn.00456a07(&var_ch, &var_18h);\n            fcn.00456a3b(&var_ch, iVar4 - iVar6);\n            fcn.00456995(&var_ch, arg_10h[2]);\n            fcn.00456a3b(&var_ch, arg_10h[3] + 1);\n            uVar5 = var_ch;\n            uVar2 = var_8h;\n        }\n    }\n    var_8h = uVar2;\n    var_ch = uVar5;\n    iVar6 = 0;\n    uVar3 = 2;\ncode_r0x00456bd0:\n    var_ch = iVar6 << (0x1fU - arg_10h[3] & 0x1f) | -((uVar1 & 0x8000) != 0) & 0x80000000 | var_ch;\n    if (arg_10h[4] == 0x40) {\n        arg_ch[1] = var_ch;\n        *arg_ch = var_8h;\n    }\n    else if (arg_10h[4] == 0x20) {\n        *arg_ch = var_ch;\n    }\n    return uVar3;\n}\n",
        "token_count": 864
    },
    "0041672c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/a3d2ca57787b45ac887fefbb531cd56b",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55/f4adb04e51ec4c55be451936d9d27cc9"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.0041672c(uint arg_8h, int32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = fcn.0044985c(arg_8h);\n    uVar2 = (uVar1 / 2) * 2;\n    if (uVar1 == uVar2) {\n        iVar3 = 0;\n        if (0 < uVar1) {\n            do {\n                uVar2 = fcn.004167a5();\n                if (uVar2 == '\\0') {\n                    return uVar2 & 0xffffff00;\n                }\n                uVar2 = iVar3 / 2;\n                iVar3 = iVar3 + 2;\n                *(uVar2 + arg_ch) = var_4h;\n            } while (iVar3 < uVar1);\n        }\n        uVar2 = CONCAT31(uVar2 >> 8, 1);\n    }\n    else {\n        uVar2 = uVar2 & 0xffffff00;\n    }\n    return uVar2;\n}\n",
        "token_count": 283
    },
    "00416e39": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/a3d2ca57787b45ac887fefbb531cd56b",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55/f4adb04e51ec4c55be451936d9d27cc9"
        ],
        "decompiled_code": "\nvoid fcn.00416e39(void)\n\n{\n    int32_t iVar1;\n    int32_t *unaff_ESI;\n    int32_t unaff_EDI;\n    \n    if (unaff_ESI[2] < unaff_EDI + 1U) {\n        unaff_ESI[2] = unaff_EDI + 1U;\n        fcn.0044951c(*unaff_ESI);\n        iVar1 = fcn.00449614(unaff_ESI[2] << 1);\n        *unaff_ESI = iVar1;\n        *(iVar1 + unaff_EDI * 2) = 0;\n    }\n    return;\n}\n",
        "token_count": 146
    },
    "00416f2f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/a3d2ca57787b45ac887fefbb531cd56b",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55/f4adb04e51ec4c55be451936d9d27cc9"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00416f2f(uint arg_8h)\n\n{\n    uint *in_EAX;\n    uint *unaff_EBX;\n    int32_t var_ch;\n    uint var_8h;\n    \n    fcn.00416db5();\n    fcn.0044a6b0(var_ch, *in_EAX, in_EAX[1] << 1);\n    fcn.0044a6b0(var_ch + in_EAX[1] * 2, *unaff_EBX, unaff_EBX[1] * 2 + 2);\n    fcn.00416dcf();\n    fcn.0044951c(var_ch);\n    return arg_8h;\n}\n",
        "token_count": 157
    },
    "0044e9b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/a3d2ca57787b45ac887fefbb531cd56b",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55/f4adb04e51ec4c55be451936d9d27cc9",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0044e9b0(int32_t arg_8h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t *piVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    uint32_t uVar8;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar2 = *(arg_8h + 0x10);\n    iVar7 = 0;\n    for (iVar3 = *(arg_8h + 8); -1 < iVar3; iVar3 = iVar3 << 1) {\n        iVar7 = iVar7 + 1;\n    }\n    iVar3 = iVar7 * 0x204 + 0x144 + iVar2;\n    iVar6 = 0x3f;\n    iVar4 = iVar3;\n    do {\n        *(iVar4 + 8) = iVar4;\n        *(iVar4 + 4) = iVar4;\n        iVar4 = iVar4 + 8;\n        iVar6 = iVar6 + -1;\n    } while (iVar6 != 0);\n    uVar8 = iVar7 * 0x8000 + *(arg_8h + 0xc);\n    iVar4 = (*_sym.imp.KERNEL32.DLL_VirtualAlloc)(uVar8, 0x8000, 0x1000, 4);\n    if (iVar4 == 0) {\n        iVar7 = -1;\n    }\n    else {\n        if (uVar8 <= uVar8 + 0x7000) {\n            piVar5 = uVar8 + 0x10;\n            iVar4 = ((uVar8 + 0x7000) - uVar8 >> 0xc) + 1;\n            do {\n                piVar5[-2] = -1;\n                piVar5[0x3fb] = -1;\n                *piVar5 = piVar5 + 0x3ff;\n                piVar5[-1] = 0xff0;\n                piVar5[1] = piVar5 + -0x401;\n                piVar5[0x3fa] = 0xff0;\n                piVar5 = piVar5 + 0x400;\n                iVar4 = iVar4 + -1;\n            } while (iVar4 != 0);\n        }\n        *(iVar3 + 0x1fc) = uVar8 + 0xc;\n        *(uVar8 + 0x14) = iVar3 + 0x1f8;\n        *(iVar3 + 0x200) = uVar8 + 0x700c;\n        *(uVar8 + 0x7010) = iVar3 + 0x1f8;\n        *(iVar2 + 0x44 + iVar7 * 4) = 0;\n        *(iVar2 + 0xc4 + iVar7 * 4) = 1;\n        cVar1 = *(iVar2 + 0x43);\n        *(iVar2 + 0x43) = cVar1 + '\\x01';\n        if (cVar1 == '\\0') {\n            *(arg_8h + 4) = *(arg_8h + 4) | 1;\n        }\n        *(arg_8h + 8) = *(arg_8h + 8) & ~(0x80000000U >> (iVar7 & 0x1f));\n    }\n    return iVar7;\n}\n",
        "token_count": 767
    },
    "00451358": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/a3d2ca57787b45ac887fefbb531cd56b",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55/f4adb04e51ec4c55be451936d9d27cc9",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nfloat10 __cdecl fcn.00451358(uint32_t arg_8h, uint32_t arg_ch, int32_t *arg_10h)\n\n{\n    uint64_t uVar1;\n    bool bVar2;\n    int32_t iVar3;\n    int32_t extraout_EDX;\n    float10 fVar4;\n    \n    if (CONCAT17(arg_ch._3_1_, CONCAT16(arg_ch._2_1_, CONCAT24(arg_ch, arg_8h))) == *0x462048) {\n        fVar4 = 0;\n        iVar3 = 0;\n    }\n    else if (((arg_ch & 0x7ff00000) == 0) && (((arg_ch & 0xfffff) != 0 || (arg_8h != 0)))) {\n        if (*0x462048 <= CONCAT17(arg_ch._3_1_, CONCAT16(arg_ch._2_1_, CONCAT24(arg_ch, arg_8h)))) {\n            bVar2 = false;\n        }\n        else {\n            bVar2 = true;\n        }\n        while ((arg_ch._2_1_ & 0x10) == 0) {\n            iVar3 = CONCAT13(arg_ch._3_1_, CONCAT12(arg_ch._2_1_, arg_ch)) << 1;\n            arg_ch._0_2_ = iVar3;\n            arg_ch._2_1_ = iVar3 >> 0x10;\n            arg_ch._3_1_ = iVar3 >> 0x18;\n            if ((arg_8h & 0x80000000) != 0) {\n                arg_ch._0_2_ = arg_ch | 1;\n            }\n            arg_8h = arg_8h << 1;\n        }\n        if (bVar2) {\n            arg_ch._3_1_ = arg_ch._3_1_ | 0x80;\n        }\n        uVar1 = CONCAT17(arg_ch._3_1_, CONCAT16(arg_ch._2_1_, CONCAT24(arg_ch, arg_8h))) & 0xffefffffffffffff;\n        fVar4 = fcn.004512d3(uVar1, uVar1 >> 0x20, 0);\n        iVar3 = extraout_EDX;\n    }\n    else {\n        fVar4 = fcn.004512d3(arg_8h, CONCAT17(arg_ch._3_1_, CONCAT16(arg_ch._2_1_, CONCAT24(arg_ch, arg_8h))) >> 0x20, 0\n                            );\n        iVar3 = ((arg_ch >> 0x10 & 0x7ff0) >> 4) - 0x3fe;\n    }\n    *arg_10h = iVar3;\n    return fVar4;\n}\n",
        "token_count": 601
    },
    "00457265": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/a3d2ca57787b45ac887fefbb531cd56b",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55/f4adb04e51ec4c55be451936d9d27cc9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00457265(uint32_t *arg_8h, uint32_t *arg_ch)\n\n{\n    uint16_t uVar1;\n    uint32_t uVar2;\n    uint16_t uVar3;\n    uint16_t uVar4;\n    uint32_t var_4h;\n    \n    uVar1 = *(arg_ch + 6);\n    var_4h = 0x80000000;\n    uVar3 = uVar1 >> 4;\n    uVar4 = uVar3 & 0x7ff;\n    uVar2 = *arg_ch;\n    if ((uVar3 & 0x7ff) == 0) {\n        if (((arg_ch[1] & 0xfffff) == 0) && (uVar2 == 0)) {\n            arg_8h[1] = 0;\n            *arg_8h = 0;\n            *(arg_8h + 2) = 0;\n            return;\n        }\n        uVar4 = uVar4 + 0x3c01;\n        var_4h = 0;\n    }\n    else if (uVar4 == 0x7ff) {\n        uVar4 = 0x7fff;\n    }\n    else {\n        uVar4 = uVar4 + 0x3c00;\n    }\n    arg_8h[1] = uVar2 >> 0x15 | (arg_ch[1] & 0xfffff) << 0xb | var_4h;\n    *arg_8h = uVar2 << 0xb;\n    while (var_4h == 0) {\n        uVar2 = arg_8h[1];\n        uVar4 = uVar4 - 1;\n        arg_8h[1] = uVar2 << 1 | *arg_8h >> 0x1f;\n        *arg_8h = *arg_8h * 2;\n        var_4h = uVar2 << 1 & 0x80000000;\n    }\n    *(arg_8h + 2) = uVar1 & 0x8000 | uVar4;\n    return;\n}\n",
        "token_count": 479
    },
    "00457810": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/a3d2ca57787b45ac887fefbb531cd56b",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55/f4adb04e51ec4c55be451936d9d27cc9"
        ],
        "decompiled_code": "\nvoid fcn.00457810(uint32_t *param_1)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    \n    uVar1 = *param_1;\n    uVar2 = param_1[1];\n    *param_1 = uVar1 * 2;\n    param_1[1] = uVar2 * 2 | uVar1 >> 0x1f;\n    param_1[2] = param_1[2] << 1 | uVar2 >> 0x1f;\n    return;\n}\n",
        "token_count": 125
    },
    "00443ee4": {
        "rules": [
            "parse credit card information/e6f146abe79f47cd84115fe8b7938431"
        ],
        "decompiled_code": "\nint32_t fcn.00443ee4(uint8_t *param_1, uint param_2)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    bool bVar5;\n    \n    iVar3 = -1;\n    iVar4 = 0;\n    do {\n        param_1 = param_1 + 3;\ncode_r0x00443ef3:\n        uVar1 = *param_1;\n    // switch table (25 cases) at 0x444048\n        switch(uVar1) {\n        case 0x48:\n        case 0x49:\n            uVar1 = param_1[0x21];\n            if (0x3f < uVar1) {\n                if (uVar1 < 0x42) {\n                    return -1;\n                }\n                if (0x43 < uVar1) {\n                    if (uVar1 < 0x46) {\n                        return -1;\n                    }\n                    if (uVar1 < 0x48) {\n                        if (CONCAT11(param_1[0x22], param_1[0x23]) != CONCAT11(param_1[0x24], param_1[0x25])) {\n                            return -1;\n                        }\n                        iVar4 = iVar4 + CONCAT11(param_1[0x22], param_1[0x23]);\n                        param_1 = param_1 + 0x26;\n                        goto code_r0x00443ef3;\n                    }\n                }\n            }\n            iVar4 = iVar4 + 1;\n            param_1 = param_1 + 0x21;\n            goto code_r0x00443ef3;\n        case 0x4a:\n        case 0x4b:\n        case 0x4c:\n        case 0x5b:\n        case 0x5c:\n        case 0x5d:\n            goto code_r0x00444044;\n        case 0x4e:\n        case 0x4f:\n        case 0x50:\n        case 0x51:\ncode_r0x00443fc2:\n            if ((-1 < iVar3) && (bVar5 = iVar3 != iVar4,  iVar4 = iVar3,  bVar5)) {\ncode_r0x00444044:\n                return -1;\n            }\n            if (uVar1 != 0x4e) {\n                return iVar4;\n            }\n            iVar3 = iVar4;\n            param_1 = param_1 + 3;\n            iVar4 = 0;\n            goto code_r0x00443ef3;\n        case 0x52:\n        case 0x53:\n        case 0x54:\n        case 0x55:\n            do {\n                param_1 = param_1 + CONCAT11(param_1[1], param_1[2]);\n            } while (*param_1 == 0x4e);\n        case 0x4d:\n        case 0x56:\n        case 0x5e:\n        case 0x5f:\n        case 0x60:\ncode_r0x00443fec:\n            param_1 = param_1 + *(*param_1 + 0x45a2e8);\n            goto code_r0x00443ef3;\n        case 0x57:\n        case 0x58:\n        case 0x59:\n        case 0x5a:\n            if (uVar1 == 0x59) {\n                iVar2 = 2;\n            }\n            else {\n                iVar2 = 0;\n            }\n            iVar2 = fcn.00443ee4(param_1 + iVar2, param_2);\n            if (iVar2 < 0) {\n                return iVar2;\n            }\n            iVar4 = iVar4 + iVar2;\n            do {\n                param_1 = param_1 + CONCAT11(param_1[1], param_1[2]);\n            } while (*param_1 == 0x4e);\n            break;\n        default:\n            if (uVar1 == 0x3b) {\ncode_r0x00443f5c:\n                iVar4 = iVar4 + CONCAT11(param_1[1], param_1[2]);\n                param_1 = param_1 + 4;\n            }\n            else if (uVar1 < 0xf) {\n                if (uVar1 < 0xd) {\n                    if (uVar1 == 0) goto code_r0x00443fc2;\n                    if (uVar1 == 0) {\n                        return -1;\n                    }\n                    if (uVar1 < 5) goto code_r0x00443fec;\n                    if (0xb < uVar1) {\n                        if (uVar1 != 0xc) {\n                            return -1;\n                        }\n                        return -2;\n                    }\n                }\n                else {\n                    param_1 = param_1 + 2;\n                }\n                param_1 = param_1 + 1;\n                iVar4 = iVar4 + 1;\n            }\n            else {\n                if (uVar1 < 0x11) {\n                    return -1;\n                }\n                if (uVar1 < 0x16) goto code_r0x00443fec;\n                if (0x18 < uVar1) {\n                    if (uVar1 != 0x21) {\n                        return -1;\n                    }\n                    goto code_r0x00443f5c;\n                }\n                iVar4 = iVar4 + 1;\n                param_1 = param_1 + 2;\n            }\n            goto code_r0x00443ef3;\n        }\n    } while( true );\n}\n",
        "token_count": 1241
    },
    "0042a1ad": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nfloat fcn.0042a1ad(double param_1)\n\n{\n    return -param_1 - (-param_1 / 1.0) * 1.0;\n}\n",
        "token_count": 40
    },
    "0042a1d9": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nfloat fcn.0042a1d9(double param_1)\n\n{\n    return param_1 - (param_1 / 1.0) * 1.0;\n}\n",
        "token_count": 40
    },
    "0043e205": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0043e205(int32_t arg_8h, uint arg_ch)\n\n{\n    int16_t *piVar1;\n    int16_t iVar2;\n    uint16_t uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint16_t *puVar7;\n    uint arg_10h;\n    int16_t *piVar8;\n    int16_t *piVar9;\n    float10 fVar10;\n    uchar auStackY262180 [131072];\n    int16_t aiStackY131108 [65532];\n    uint var_20h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    fcn.0044c510();\n    fcn.00416db5();\n    piVar8 = NULL;\n    iVar4 = fcn.00418641();\n    iVar5 = fcn.004161b7();\n    var_4h = 1;\n    if (0 < iVar4) {\n        do {\n            iVar6 = 0;\n            piVar9 = piVar8;\n            while( true ) {\n                iVar2 = *(iVar5 + piVar9 * 2);\n                if (((iVar2 == 0x25) || (iVar2 == 0x5c)) || (iVar2 == 0)) break;\n                aiStackY131108[iVar6] = iVar2;\n                iVar6 = iVar6 + 1;\n                piVar9 = piVar9 + 1;\n            }\n            aiStackY131108[iVar6] = 0;\n            piVar8 = aiStackY131108;\n            fcn.00417064();\n            if (iVar2 == 0) break;\n            piVar1 = iVar5 + (piVar9 + 1) * 2;\n            if ((*piVar1 == 0x25) || (iVar2 == 0x5c)) {\n                var_4h = var_4h + -1;\n                piVar8 = piVar9 + 1;\n            }\n            else {\n                if (var_4h == iVar4) break;\n                puVar7 = fcn.00449c37();\n                if (puVar7 != NULL) {\n                    puVar7[1] = 0;\n                    uVar3 = *puVar7;\n                    if (uVar3 < 0x6a) {\n                        if (uVar3 == 0x69) {\ncode_r0x0043e365:\n                            fcn.0040f269();\n                            arg_10h = fcn.00418733();\n                            fcn.00449872(aiStackY131108, piVar1 + -1, arg_10h);\n                        }\n                        else {\n                            if ((uVar3 != 0x45) && (uVar3 != 0x47)) {\n                                if ((uVar3 == 0x58) || (uVar3 == 100)) goto code_r0x0043e365;\n                                if ((uVar3 < 0x65) || (0x67 < uVar3)) goto code_r0x0043e389;\n                            }\n                            fcn.0040f269();\n                            fVar10 = fcn.00418692();\n                            fcn.00449872(aiStackY131108, piVar1 + -1, SUB84(fVar10, 0));\n                        }\n                    }\n                    else {\n                        if (uVar3 == 0x6f) goto code_r0x0043e365;\n                        if (uVar3 == 0x73) {\n                            fcn.0040f269();\n                            fcn.00418641();\n                            fcn.00449c77();\n                            fcn.00449872(aiStackY131108, piVar1 + -1, auStackY262180);\n                        }\n                        else if ((uVar3 == 0x75) || (uVar3 == 0x78)) goto code_r0x0043e365;\n                    }\ncode_r0x0043e389:\n                    piVar8 = fcn.0044985c();\n                    var_14h._0_2_ = iVar5;\n                    puVar7[1] = var_14h;\n                }\n            }\n            fcn.00417064();\n            var_4h = var_4h + 1;\n        } while (var_4h <= iVar4);\n    }\n    fcn.0044951c();\n    fcn.00418c7e();\n    fcn.0044951c();\n    return 0;\n}\n",
        "token_count": 1098
    },
    "0044a6b0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.0044a6b0(uint *arg_8h, uint *arg_ch, uint32_t arg_10h)\n\n{\n    uint *puVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    \n    if ((arg_ch < arg_8h) && (arg_8h < arg_10h + arg_ch)) {\n        arg_ch = (arg_10h - 4) + arg_ch;\n        puVar1 = (arg_10h - 4) + arg_8h;\n        if ((puVar1 & 3) == 0) {\n            uVar3 = arg_10h >> 2;\n            if (uVar3 < 8) goto code_r0x0044a874;\n            for (; uVar3 != 0; uVar3 = uVar3 - 1) {\n                *puVar1 = *arg_ch;\n                arg_ch = arg_ch + -1;\n                puVar1 = puVar1 + -1;\n            }\n    // switch table (4 cases) at 0x44a998\n            switch(*((arg_10h & 3) * 4 + 0x44a998)) {\n            case 0x44a9b0:\ncode_r0x0044a9b0:\n                *(puVar1 + 3) = *(arg_ch + 3);\n                return arg_8h;\n            case 0x44a9c0:\ncode_r0x0044a9c0:\n                *(puVar1 + 3) = *(arg_ch + 3);\n                *(puVar1 + 2) = *(arg_ch + 2);\n                return arg_8h;\n            case 0x44a9d4:\ncode_r0x0044a9d4:\n                *(puVar1 + 3) = *(arg_ch + 3);\n                *(puVar1 + 2) = *(arg_ch + 2);\n                *(puVar1 + 1) = *(arg_ch + 1);\n                return arg_8h;\n            }\n        }\n        else if (arg_10h < 4) {\n    // switch table (4 cases) at 0x44a998\n            switch(*(arg_10h * 4 + 0x44a998)) {\n            case 0x44a9b0:\n                goto code_r0x0044a9b0;\n            case 0x44a9c0:\n                goto code_r0x0044a9c0;\n            case 0x44a9d4:\n                goto code_r0x0044a9d4;\n            }\n        }\n        else {\n            arg_10h = arg_10h - (puVar1 & 3);\n            switch(*((puVar1 & 3) * 4 + 0x44a89c)) {\n            case 0x44a8ac:\n                *(puVar1 + 3) = *(arg_ch + 3);\n                arg_ch = arg_ch + -1;\n                uVar3 = arg_10h >> 2;\n                puVar1 = puVar1 - 1;\n                if (uVar3 < 8) {\ncode_r0x0044a874:\n    // WARNING: Could not recover jumptable at 0x0044a876. Too many branches\n    // WARNING: Treating indirect jump as call\n    // switch table (1 cases) at 0x44a948\n                    puVar1 = (**(uVar3 * -4 + 0x44a948))();\n                    return puVar1;\n                }\n                for (; uVar3 != 0; uVar3 = uVar3 - 1) {\n                    *puVar1 = *arg_ch;\n                    arg_ch = arg_ch + -1;\n                    puVar1 = puVar1 + -1;\n                }\n                switch(*((arg_10h & 3) * 4 + 0x44a998)) {\n                case 0x44a9b0:\n                    goto code_r0x0044a9b0;\n                case 0x44a9c0:\n                    goto code_r0x0044a9c0;\n                case 0x44a9d4:\n                    goto code_r0x0044a9d4;\n                }\n                break;\n            case 0x44a8d0:\n                *(puVar1 + 3) = *(arg_ch + 3);\n                uVar3 = arg_10h >> 2;\n                *(puVar1 + 2) = *(arg_ch + 2);\n                arg_ch = arg_ch + -2;\n                puVar1 = puVar1 - 2;\n                if (uVar3 < 8) goto code_r0x0044a874;\n                for (; uVar3 != 0; uVar3 = uVar3 - 1) {\n                    *puVar1 = *arg_ch;\n                    arg_ch = arg_ch + -1;\n                    puVar1 = puVar1 + -1;\n                }\n                switch(*((arg_10h & 3) * 4 + 0x44a998)) {\n                case 0x44a9b0:\n                    goto code_r0x0044a9b0;\n                case 0x44a9c0:\n                    goto code_r0x0044a9c0;\n                case 0x44a9d4:\n                    goto code_r0x0044a9d4;\n                }\n                break;\n            case 0x44a8f8:\n                *(puVar1 + 3) = *(arg_ch + 3);\n                *(puVar1 + 2) = *(arg_ch + 2);\n                uVar3 = arg_10h >> 2;\n                *(puVar1 + 1) = *(arg_ch + 1);\n                arg_ch = arg_ch + -3;\n                puVar1 = puVar1 - 3;\n                if (uVar3 < 8) goto code_r0x0044a874;\n                for (; uVar3 != 0; uVar3 = uVar3 - 1) {\n                    *puVar1 = *arg_ch;\n                    arg_ch = arg_ch + -1;\n                    puVar1 = puVar1 + -1;\n                }\n                switch(*((arg_10h & 3) * 4 + 0x44a998)) {\n                case 0x44a9b0:\n                    goto code_r0x0044a9b0;\n                case 0x44a9c0:\n                    goto code_r0x0044a9c0;\n                case 0x44a9d4:\n                    goto code_r0x0044a9d4;\n                }\n            }\n        }\n        return arg_8h;\n    }\n    puVar1 = arg_8h;\n    if ((arg_8h & 3) == 0) {\n        uVar2 = arg_10h >> 2;\n        if (uVar2 < 8) goto code_r0x0044a70c;\n        for (; uVar2 != 0; uVar2 = uVar2 - 1) {\n            *puVar1 = *arg_ch;\n            arg_ch = arg_ch + 1;\n            puVar1 = puVar1 + 1;\n        }\n    // switch table (4 cases) at 0x44a7fc\n        switch(*((arg_10h & 3) * 4 + 0x44a7fc)) {\n        case 0x44a814:\ncode_r0x0044a814:\n            *puVar1 = *arg_ch;\n            return arg_8h;\n        case 0x44a820:\ncode_r0x0044a820:\n            *puVar1 = *arg_ch;\n            *(puVar1 + 1) = *(arg_ch + 1);\n            return arg_8h;\n        case 0x44a834:\ncode_r0x0044a834:\n            *puVar1 = *arg_ch;\n            *(puVar1 + 1) = *(arg_ch + 1);\n            *(puVar1 + 2) = *(arg_ch + 2);\n            return arg_8h;\n        }\n    }\n    else if (arg_10h < 4) {\n        switch(*((arg_10h - 4) * 4 + 0x44a80c)) {\n        case 0x44a814:\n            goto code_r0x0044a814;\n        case 0x44a820:\n            goto code_r0x0044a820;\n        case 0x44a834:\n            goto code_r0x0044a834;\n        }\n    }\n    else {\n        uVar3 = (arg_10h - 4) + (arg_8h & 3);\n        switch(*((arg_8h & 3) * 4 + 0x44a710)) {\n        case 0x44a720:\n            *arg_8h = *arg_ch;\n            *(arg_8h + 1) = *(arg_ch + 1);\n            uVar2 = uVar3 >> 2;\n            *(arg_8h + 2) = *(arg_ch + 2);\n            arg_ch = arg_ch + 3;\n            puVar1 = arg_8h + 3;\n            if (uVar2 < 8) {\ncode_r0x0044a70c:\n    // WARNING: Could not recover jumptable at 0x0044a70c. Too many branches\n    // WARNING: Treating indirect jump as call\n    // switch table (8 cases) at 0x44a790\n                puVar1 = (**(uVar2 * 4 + 0x44a790))();\n                return puVar1;\n            }\n            for (; uVar2 != 0; uVar2 = uVar2 - 1) {\n                *puVar1 = *arg_ch;\n                arg_ch = arg_ch + 1;\n                puVar1 = puVar1 + 1;\n            }\n            switch(*((uVar3 & 3) * 4 + 0x44a7fc)) {\n            case 0x44a814:\n                goto code_r0x0044a814;\n            case 0x44a820:\n                goto code_r0x0044a820;\n            case 0x44a834:\n                goto code_r0x0044a834;\n            }\n            break;\n        case 0x44a74c:\n            *arg_8h = *arg_ch;\n            uVar2 = uVar3 >> 2;\n            *(arg_8h + 1) = *(arg_ch + 1);\n            arg_ch = arg_ch + 2;\n            puVar1 = arg_8h + 2;\n            if (uVar2 < 8) goto code_r0x0044a70c;\n            for (; uVar2 != 0; uVar2 = uVar2 - 1) {\n                *puVar1 = *arg_ch;\n                arg_ch = arg_ch + 1;\n                puVar1 = puVar1 + 1;\n            }\n            switch(*((uVar3 & 3) * 4 + 0x44a7fc)) {\n            case 0x44a814:\n                goto code_r0x0044a814;\n            case 0x44a820:\n                goto code_r0x0044a820;\n            case 0x44a834:\n                goto code_r0x0044a834;\n            }\n            break;\n        case 0x44a770:\n            *arg_8h = *arg_ch;\n            uVar2 = uVar3 >> 2;\n            arg_ch = arg_ch + 1;\n            puVar1 = arg_8h + 1;\n            if (uVar2 < 8) goto code_r0x0044a70c;\n            for (; uVar2 != 0; uVar2 = uVar2 - 1) {\n                *puVar1 = *arg_ch;\n                arg_ch = arg_ch + 1;\n                puVar1 = puVar1 + 1;\n            }\n            switch(*((uVar3 & 3) * 4 + 0x44a7fc)) {\n            case 0x44a814:\n                goto code_r0x0044a814;\n            case 0x44a820:\n                goto code_r0x0044a820;\n            case 0x44a834:\n                goto code_r0x0044a834;\n            }\n        }\n    }\n    return arg_8h;\n}\n",
        "token_count": 2769
    },
    "0044af60": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.0044af60(uint *arg_8h, uint *arg_ch, uint32_t arg_10h)\n\n{\n    uint *puVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    \n    if ((arg_ch < arg_8h) && (arg_8h < arg_10h + arg_ch)) {\n        arg_ch = (arg_10h - 4) + arg_ch;\n        puVar1 = (arg_10h - 4) + arg_8h;\n        if ((puVar1 & 3) == 0) {\n            uVar3 = arg_10h >> 2;\n            if (uVar3 < 8) goto code_r0x0044b124;\n            for (; uVar3 != 0; uVar3 = uVar3 - 1) {\n                *puVar1 = *arg_ch;\n                arg_ch = arg_ch + -1;\n                puVar1 = puVar1 + -1;\n            }\n    // switch table (4 cases) at 0x44b248\n            switch(*((arg_10h & 3) * 4 + 0x44b248)) {\n            case 0x44b260:\ncode_r0x0044b260:\n                *(puVar1 + 3) = *(arg_ch + 3);\n                return arg_8h;\n            case 0x44b270:\ncode_r0x0044b270:\n                *(puVar1 + 3) = *(arg_ch + 3);\n                *(puVar1 + 2) = *(arg_ch + 2);\n                return arg_8h;\n            case 0x44b284:\ncode_r0x0044b284:\n                *(puVar1 + 3) = *(arg_ch + 3);\n                *(puVar1 + 2) = *(arg_ch + 2);\n                *(puVar1 + 1) = *(arg_ch + 1);\n                return arg_8h;\n            }\n        }\n        else if (arg_10h < 4) {\n    // switch table (4 cases) at 0x44b248\n            switch(*(arg_10h * 4 + 0x44b248)) {\n            case 0x44b260:\n                goto code_r0x0044b260;\n            case 0x44b270:\n                goto code_r0x0044b270;\n            case 0x44b284:\n                goto code_r0x0044b284;\n            }\n        }\n        else {\n            arg_10h = arg_10h - (puVar1 & 3);\n            switch(*((puVar1 & 3) * 4 + 0x44b14c)) {\n            case 0x44b15c:\n                *(puVar1 + 3) = *(arg_ch + 3);\n                arg_ch = arg_ch + -1;\n                uVar3 = arg_10h >> 2;\n                puVar1 = puVar1 - 1;\n                if (uVar3 < 8) {\ncode_r0x0044b124:\n    // WARNING: Could not recover jumptable at 0x0044b126. Too many branches\n    // WARNING: Treating indirect jump as call\n    // switch table (1 cases) at 0x44b1f8\n                    puVar1 = (**(uVar3 * -4 + 0x44b1f8))();\n                    return puVar1;\n                }\n                for (; uVar3 != 0; uVar3 = uVar3 - 1) {\n                    *puVar1 = *arg_ch;\n                    arg_ch = arg_ch + -1;\n                    puVar1 = puVar1 + -1;\n                }\n                switch(*((arg_10h & 3) * 4 + 0x44b248)) {\n                case 0x44b260:\n                    goto code_r0x0044b260;\n                case 0x44b270:\n                    goto code_r0x0044b270;\n                case 0x44b284:\n                    goto code_r0x0044b284;\n                }\n                break;\n            case 0x44b180:\n                *(puVar1 + 3) = *(arg_ch + 3);\n                uVar3 = arg_10h >> 2;\n                *(puVar1 + 2) = *(arg_ch + 2);\n                arg_ch = arg_ch + -2;\n                puVar1 = puVar1 - 2;\n                if (uVar3 < 8) goto code_r0x0044b124;\n                for (; uVar3 != 0; uVar3 = uVar3 - 1) {\n                    *puVar1 = *arg_ch;\n                    arg_ch = arg_ch + -1;\n                    puVar1 = puVar1 + -1;\n                }\n                switch(*((arg_10h & 3) * 4 + 0x44b248)) {\n                case 0x44b260:\n                    goto code_r0x0044b260;\n                case 0x44b270:\n                    goto code_r0x0044b270;\n                case 0x44b284:\n                    goto code_r0x0044b284;\n                }\n                break;\n            case 0x44b1a8:\n                *(puVar1 + 3) = *(arg_ch + 3);\n                *(puVar1 + 2) = *(arg_ch + 2);\n                uVar3 = arg_10h >> 2;\n                *(puVar1 + 1) = *(arg_ch + 1);\n                arg_ch = arg_ch + -3;\n                puVar1 = puVar1 - 3;\n                if (uVar3 < 8) goto code_r0x0044b124;\n                for (; uVar3 != 0; uVar3 = uVar3 - 1) {\n                    *puVar1 = *arg_ch;\n                    arg_ch = arg_ch + -1;\n                    puVar1 = puVar1 + -1;\n                }\n                switch(*((arg_10h & 3) * 4 + 0x44b248)) {\n                case 0x44b260:\n                    goto code_r0x0044b260;\n                case 0x44b270:\n                    goto code_r0x0044b270;\n                case 0x44b284:\n                    goto code_r0x0044b284;\n                }\n            }\n        }\n        return arg_8h;\n    }\n    puVar1 = arg_8h;\n    if ((arg_8h & 3) == 0) {\n        uVar2 = arg_10h >> 2;\n        if (uVar2 < 8) goto code_r0x0044afbc;\n        for (; uVar2 != 0; uVar2 = uVar2 - 1) {\n            *puVar1 = *arg_ch;\n            arg_ch = arg_ch + 1;\n            puVar1 = puVar1 + 1;\n        }\n    // switch table (4 cases) at 0x44b0ac\n        switch(*((arg_10h & 3) * 4 + 0x44b0ac)) {\n        case 0x44b0c4:\ncode_r0x0044b0c4:\n            *puVar1 = *arg_ch;\n            return arg_8h;\n        case 0x44b0d0:\ncode_r0x0044b0d0:\n            *puVar1 = *arg_ch;\n            *(puVar1 + 1) = *(arg_ch + 1);\n            return arg_8h;\n        case 0x44b0e4:\ncode_r0x0044b0e4:\n            *puVar1 = *arg_ch;\n            *(puVar1 + 1) = *(arg_ch + 1);\n            *(puVar1 + 2) = *(arg_ch + 2);\n            return arg_8h;\n        }\n    }\n    else if (arg_10h < 4) {\n        switch(*((arg_10h - 4) * 4 + 0x44b0bc)) {\n        case 0x44b0c4:\n            goto code_r0x0044b0c4;\n        case 0x44b0d0:\n            goto code_r0x0044b0d0;\n        case 0x44b0e4:\n            goto code_r0x0044b0e4;\n        }\n    }\n    else {\n        uVar3 = (arg_10h - 4) + (arg_8h & 3);\n        switch(*((arg_8h & 3) * 4 + 0x44afc0)) {\n        case 0x44afd0:\n            *arg_8h = *arg_ch;\n            *(arg_8h + 1) = *(arg_ch + 1);\n            uVar2 = uVar3 >> 2;\n            *(arg_8h + 2) = *(arg_ch + 2);\n            arg_ch = arg_ch + 3;\n            puVar1 = arg_8h + 3;\n            if (uVar2 < 8) {\ncode_r0x0044afbc:\n    // WARNING: Could not recover jumptable at 0x0044afbc. Too many branches\n    // WARNING: Treating indirect jump as call\n    // switch table (8 cases) at 0x44b040\n                puVar1 = (**(uVar2 * 4 + 0x44b040))();\n                return puVar1;\n            }\n            for (; uVar2 != 0; uVar2 = uVar2 - 1) {\n                *puVar1 = *arg_ch;\n                arg_ch = arg_ch + 1;\n                puVar1 = puVar1 + 1;\n            }\n            switch(*((uVar3 & 3) * 4 + 0x44b0ac)) {\n            case 0x44b0c4:\n                goto code_r0x0044b0c4;\n            case 0x44b0d0:\n                goto code_r0x0044b0d0;\n            case 0x44b0e4:\n                goto code_r0x0044b0e4;\n            }\n            break;\n        case 0x44affc:\n            *arg_8h = *arg_ch;\n            uVar2 = uVar3 >> 2;\n            *(arg_8h + 1) = *(arg_ch + 1);\n            arg_ch = arg_ch + 2;\n            puVar1 = arg_8h + 2;\n            if (uVar2 < 8) goto code_r0x0044afbc;\n            for (; uVar2 != 0; uVar2 = uVar2 - 1) {\n                *puVar1 = *arg_ch;\n                arg_ch = arg_ch + 1;\n                puVar1 = puVar1 + 1;\n            }\n            switch(*((uVar3 & 3) * 4 + 0x44b0ac)) {\n            case 0x44b0c4:\n                goto code_r0x0044b0c4;\n            case 0x44b0d0:\n                goto code_r0x0044b0d0;\n            case 0x44b0e4:\n                goto code_r0x0044b0e4;\n            }\n            break;\n        case 0x44b020:\n            *arg_8h = *arg_ch;\n            uVar2 = uVar3 >> 2;\n            arg_ch = arg_ch + 1;\n            puVar1 = arg_8h + 1;\n            if (uVar2 < 8) goto code_r0x0044afbc;\n            for (; uVar2 != 0; uVar2 = uVar2 - 1) {\n                *puVar1 = *arg_ch;\n                arg_ch = arg_ch + 1;\n                puVar1 = puVar1 + 1;\n            }\n            switch(*((uVar3 & 3) * 4 + 0x44b0ac)) {\n            case 0x44b0c4:\n                goto code_r0x0044b0c4;\n            case 0x44b0d0:\n                goto code_r0x0044b0d0;\n            case 0x44b0e4:\n                goto code_r0x0044b0e4;\n            }\n        }\n    }\n    return arg_8h;\n}\n",
        "token_count": 2763
    },
    "0044b361": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0044b361(uint uExitCode, uint arg_ch, uint arg_10h)\n\n{\n    uint uVar1;\n    int32_t unaff_EBP;\n    uint var_4h;\n    \n    fcn.0044dc28(0x45aa28, 8);\n    fcn.0044cb7b(8);\n    *(unaff_EBP + -4) = 0;\n    if (*0x46740c == 1) {\n        uVar1 = (**0x4592ac)(*(unaff_EBP + 8));\n        (*_sym.imp.KERNEL32.DLL_TerminateProcess)(uVar1);\n    }\n    *0x467408 = 1;\n    *0x467404 = *(unaff_EBP + 0x10);\n    if (*(unaff_EBP + 0xc) == 0) {\n        if (*0x481bac != NULL) {\n            while( true ) {\n                *0x481ba8 = *0x481ba8 + -1;\n                if (*0x481ba8 < *0x481bac) break;\n                if (**0x481ba8 != NULL) {\n                    (***0x481ba8)();\n                }\n            }\n        }\n        fcn.0044b2df(0x465050);\n    }\n    fcn.0044b2df(0x465058);\n    *(unaff_EBP + -4) = 0xffffffff;\n    func_0x0044b410();\n    if (*(unaff_EBP + 0x10) == 0) {\n        *0x46740c = 1;\n    // WARNING: Subroutine does not return\n        fcn.0044b29d(*(unaff_EBP + 8));\n    }\n    fcn.0044dc63();\n    return;\n}\n",
        "token_count": 418
    },
    "00456948": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.00456948(int32_t param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    \n    puVar3 = param_1 + (param_2 / 0x20) * 4;\n    iVar1 = fcn.00457791(*puVar3, 1 << (0x1fU - param_2 % 0x20 & 0x1f), puVar3);\n    iVar2 = param_2 / 0x20 + -1;\n    if (-1 < iVar2) {\n        puVar3 = param_1 + iVar2 * 4;\n        do {\n            if (iVar1 == 0) {\n                return;\n            }\n            iVar1 = fcn.00457791(*puVar3, 1, puVar3);\n            iVar2 = iVar2 + -1;\n            puVar3 = puVar3 + -1;\n        } while (-1 < iVar2);\n    }\n    return;\n}\n",
        "token_count": 229
    },
    "00412048": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00412048(int32_t arg_8h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t unaff_EDI;\n    uint lpFrequency;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    pcVar1 = _sym.imp.KERNEL32.DLL_QueryPerformanceCounter;\n    if (-1 < unaff_EDI) {\n        if (unaff_EDI == 0) {\n            (*_sym.imp.KERNEL32.DLL_Sleep)(0);\n        }\n        else if ((unaff_EDI < (-(*(arg_8h + 0x219) != '\\0') & 0x28) + 0xf) &&\n                (iVar2 = (*_sym.imp.KERNEL32.DLL_QueryPerformanceCounter)(&var_10h),  iVar2 != 0)) {\n            (**0x45911c)(&lpFrequency);\n            do {\n                (*_sym.imp.KERNEL32.DLL_Sleep)(0);\n                (*pcVar1)(&var_8h);\n                var_18h = var_8h - var_10h;\n                var_14h = (var_4h - var_ch) - (var_8h < var_10h);\n                uVar3 = fcn.00458664();\n            } while (uVar3 < unaff_EDI);\n        }\n        else {\n            (*_sym.imp.KERNEL32.DLL_Sleep)();\n        }\n    }\n    return;\n}\n",
        "token_count": 370
    },
    "00433e3b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00433e3b(uint arg_8h, uint *arg_ch)\n\n{\n    uint var_30h;\n    uint var_28h;\n    uint var_20h;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.004388ea();\n    fcn.00421b33();\n    *arg_ch = var_28h;\n    fcn.0041858e();\n    fcn.0041858e();\n    return;\n}\n",
        "token_count": 130
    },
    "00434c7f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00434c7f(uint *arg_8h)\n\n{\n    int32_t iVar1;\n    uint var_30h;\n    uint var_20h;\n    uint var_10h;\n    \n    fcn.004388ea();\n    fcn.00434cc3();\n    iVar1 = fcn.004388ea();\n    *arg_8h = *(iVar1 + 8);\n    fcn.0041858e();\n    fcn.0041858e();\n    return;\n}\n",
        "token_count": 113
    },
    "0044ce17": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nint32_t fcn.0044ce17(uint16_t param_1)\n\n{\n    int32_t iVar1;\n    bool bVar2;\n    \n    if (0x2f < param_1) {\n        if (param_1 < 0x3a) {\n            return param_1 - 0x30;\n        }\n        iVar1 = 0xff10;\n        if (param_1 < 0xff10) {\n            iVar1 = 0x660;\n            if (param_1 < 0x660) {\n                return -1;\n            }\n            if (param_1 < 0x66a) goto code_r0x0044cf83;\n            iVar1 = 0x6f0;\n            if (param_1 < 0x6f0) {\n                return -1;\n            }\n            if (param_1 < 0x6fa) goto code_r0x0044cf83;\n            iVar1 = 0x966;\n            if (param_1 < 0x966) {\n                return -1;\n            }\n            if (param_1 < 0x970) goto code_r0x0044cf83;\n            iVar1 = 0x9e6;\n            if (param_1 < 0x9e6) {\n                return -1;\n            }\n            if (param_1 < 0x9f0) goto code_r0x0044cf83;\n            iVar1 = 0xa66;\n            if (param_1 < 0xa66) {\n                return -1;\n            }\n            if (param_1 < 0xa70) goto code_r0x0044cf83;\n            iVar1 = 0xae6;\n            if (param_1 < 0xae6) {\n                return -1;\n            }\n            if (param_1 < 0xaf0) goto code_r0x0044cf83;\n            iVar1 = 0xb66;\n            if (param_1 < 0xb66) {\n                return -1;\n            }\n            if (param_1 < 0xb70) goto code_r0x0044cf83;\n            iVar1 = 0xc66;\n            if (param_1 < 0xc66) {\n                return -1;\n            }\n            if (param_1 < 0xc70) goto code_r0x0044cf83;\n            iVar1 = 0xce6;\n            if (param_1 < 0xce6) {\n                return -1;\n            }\n            if (param_1 < 0xcf0) goto code_r0x0044cf83;\n            iVar1 = 0xd66;\n            if (param_1 < 0xd66) {\n                return -1;\n            }\n            if (param_1 < 0xd70) goto code_r0x0044cf83;\n            iVar1 = 0xe50;\n            if (param_1 < 0xe50) {\n                return -1;\n            }\n            if (param_1 < 0xe5a) goto code_r0x0044cf83;\n            iVar1 = 0xed0;\n            if (param_1 < 0xed0) {\n                return -1;\n            }\n            if (param_1 < 0xeda) goto code_r0x0044cf83;\n            iVar1 = 0xf20;\n            if (param_1 < 0xf20) {\n                return -1;\n            }\n            if (param_1 < 0xf2a) goto code_r0x0044cf83;\n            iVar1 = 0x1040;\n            if (param_1 < 0x1040) {\n                return -1;\n            }\n            if (param_1 < 0x104a) goto code_r0x0044cf83;\n            iVar1 = 0x17e0;\n            if (param_1 < 0x17e0) {\n                return -1;\n            }\n            if (param_1 < 0x17ea) goto code_r0x0044cf83;\n            iVar1 = 0x1810;\n            if (param_1 < 0x1810) {\n                return -1;\n            }\n            bVar2 = param_1 < 0x181a;\n        }\n        else {\n            bVar2 = param_1 < 0xff1a;\n        }\n        if (bVar2) {\ncode_r0x0044cf83:\n            return param_1 - iVar1;\n        }\n    }\n    return -1;\n}\n",
        "token_count": 986
    },
    "0045289c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nfloat10 fcn.0045289c(void)\n\n{\n    float10 in_ST0;\n    float10 fVar1;\n    float10 in_ST1;\n    \n    if ((in_ST1 & 0) != 0) {\n        fVar1 = fcn.00452696();\n        return fVar1;\n    }\n    if ((SUB104(in_ST1, 0) | in_ST1 >> 0x20) != 0) {\n        fVar1 = fcn.00452696(in_ST1 * *0x465af4);\n        return fVar1;\n    }\n    return in_ST0 - (in_ST0 / in_ST1) * in_ST1;\n}\n",
        "token_count": 148
    },
    "0041858e": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2",
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2",
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2",
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2",
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041858e(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    \n    fcn.004189fc();\n    iVar1 = param_1[2];\n    if (iVar1 == 8) {\n        if (*param_1 != 0) {\n            (**0x4593cc)(*param_1);\n        }\n        fcn.0044951c(*param_1);\n    }\n    else {\n        if (iVar1 == 10) {\n            iVar1 = *param_1;\n            if (iVar1 == 0) goto code_r0x004185f6;\n            fcn.0044951c(*(iVar1 + 8));\n        }\n        else {\n            if (iVar1 == 5) {\n                fcn.00419f8b();\n                fcn.00419f2d();\n                goto code_r0x004185f9;\n            }\n            if (iVar1 != 0xb) goto code_r0x004185f9;\n            fcn.0044951c(*(*param_1 + 4));\n            iVar1 = *param_1;\n        }\n        fcn.0044951c(iVar1);\n    }\ncode_r0x004185f6:\n    *param_1 = 0;\ncode_r0x004185f9:\n    *param_1 = 0;\n    param_1[2] = 1;\n    return;\n}\n",
        "token_count": 313
    },
    "00419b58": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nuint32_t fcn.00419b58(void)\n\n{\n    uint32_t *in_EAX;\n    \n    if (in_EAX[2] == 5) {\n        return *in_EAX & 0xffffff00 | *(*in_EAX + 0x20e);\n    }\n    return in_EAX & 0xffffff00;\n}\n",
        "token_count": 75
    },
    "00419f2d": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nvoid fcn.00419f2d(void)\n\n{\n    uint *unaff_ESI;\n    \n    if (unaff_ESI[2] == 5) {\n        fcn.0044951c(*unaff_ESI);\n        *unaff_ESI = 0;\n        unaff_ESI[2] = 1;\n    }\n    return;\n}\n",
        "token_count": 79
    },
    "00419f46": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nvoid fcn.00419f46(void)\n\n{\n    int32_t *in_EAX;\n    \n    if (in_EAX[2] != 5) {\n        fcn.0041858e();\n        fcn.00419ef2();\n    }\n    *(*in_EAX + 0x20d) = 0;\n    return;\n}\n",
        "token_count": 76
    },
    "00419f8b": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00419f8b(void)\n\n{\n    int32_t *piVar1;\n    int32_t **unaff_ESI;\n    int32_t iVar2;\n    \n    if (unaff_ESI[2] == 0x5) {\n        if ((*unaff_ESI)[1] != 0) {\n            piVar1 = (*unaff_ESI)[1];\n            *piVar1 = *piVar1 + -1;\n            piVar1 = *unaff_ESI;\n            if (*piVar1[1] == 0) {\n                iVar2 = 0;\n                if (0 < piVar1[2]) {\n                    do {\n                        if (*(*piVar1 + iVar2 * 4) != 0) {\n                            fcn.004388f7();\n                        }\n                        piVar1 = *unaff_ESI;\n                        iVar2 = iVar2 + 1;\n                    } while (iVar2 < piVar1[2]);\n                }\n                fcn.0044951c(**unaff_ESI);\n                fcn.0044951c((*unaff_ESI)[1]);\n            }\n        }\n        **unaff_ESI = 0;\n        (*unaff_ESI)[1] = 0;\n        (*unaff_ESI)[2] = 0;\n        *(*unaff_ESI + 0x83) = 0;\n        *(*unaff_ESI + 0x20e) = 0;\n    }\n    return;\n}\n",
        "token_count": 321
    },
    "0041a000": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0041a000(int32_t arg_8h)\n\n{\n    int32_t **in_EAX;\n    int32_t **ppiVar1;\n    uint *puVar2;\n    uint32_t uVar3;\n    int32_t *piVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t var_4h;\n    \n    ppiVar1 = in_EAX;\n    if (arg_8h != 0) {\n        ppiVar1 = fcn.00419f46();\n        if (0 < arg_8h) {\n            var_4h = arg_8h;\n            do {\n                ppiVar1 = fcn.00419f66();\n                var_4h = var_4h + -1;\n            } while (var_4h != 0);\n        }\n    }\n    if (in_EAX[2] == 0x5) {\n        fcn.004189fc();\n        fcn.00419f8b();\n        *(*in_EAX + 0x83) = *(*in_EAX + 0x20d);\n        (*in_EAX)[2] = 1;\n        ppiVar1 = *in_EAX;\n        iVar6 = 0;\n        if ('\\0' < *(ppiVar1 + 0x83)) {\n            iVar5 = 0xc;\n            do {\n                *(iVar5 + ppiVar1) = *(iVar5 + 0x100 + ppiVar1);\n                piVar4 = *in_EAX;\n                piVar4[2] = *(iVar5 + piVar4) * piVar4[2];\n                ppiVar1 = *in_EAX;\n                if (0xffffff < ppiVar1[2]) goto code_r0x0041a0be;\n                iVar6 = iVar6 + 1;\n                iVar5 = iVar5 + 4;\n            } while (iVar6 < *(ppiVar1 + 0x83));\n        }\n        iVar6 = fcn.00449614((*in_EAX)[2] << 2);\n        **in_EAX = iVar6;\n        puVar2 = fcn.00449614(4);\n        if (puVar2 == NULL) {\n            puVar2 = NULL;\n        }\n        else {\n            *puVar2 = 1;\n        }\n        (*in_EAX)[1] = puVar2;\n        piVar4 = *in_EAX;\n        iVar6 = 0;\n        if (0 < piVar4[2]) {\n            do {\n                *(*piVar4 + iVar6 * 4) = 0;\n                piVar4 = *in_EAX;\n                iVar6 = iVar6 + 1;\n            } while (iVar6 < piVar4[2]);\n        }\n        uVar3 = piVar4 & 0xffffff00 | 1;\n    }\n    else {\ncode_r0x0041a0be:\n        uVar3 = ppiVar1 & 0xffffff00;\n    }\n    return uVar3;\n}\n",
        "token_count": 669
    },
    "0041a0e7": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nint32_t fcn.0041a0e7(void)\n\n{\n    int32_t iVar1;\n    char cVar2;\n    int32_t *in_EAX;\n    int32_t iVar3;\n    int32_t *piVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    \n    if (in_EAX[2] == 5) {\n        cVar2 = fcn.0041a1ad();\n        if (cVar2 != '\\0') {\n            iVar1 = *in_EAX;\n            iVar5 = *(iVar1 + 0x20c);\n            iVar3 = *(iVar1 + 8);\n            iVar6 = 0;\n            if (0 < iVar5) {\n                piVar4 = iVar1 + 0x10c;\n                do {\n                    iVar3 = iVar3 / piVar4[-0x40];\n                    iVar1 = *piVar4;\n                    piVar4 = piVar4 + 1;\n                    iVar6 = iVar6 + iVar1 * iVar3;\n                    iVar5 = iVar5 + -1;\n                } while (iVar5 != 0);\n            }\n            return iVar6;\n        }\n    }\n    return -1;\n}\n",
        "token_count": 261
    },
    "0041a2fe": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0041a2fe(uint param_1, uint *param_2)\n\n{\n    int32_t *in_EAX;\n    \n    if ((in_EAX[2] == 5) && (*in_EAX != NULL)) {\n        *param_2 = **in_EAX;\n        return *(*in_EAX + 8);\n    }\n    return 0;\n}\n",
        "token_count": 85
    },
    "00432fd3": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00432fd3(uint arg_8h, uint arg_ch)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint *puVar2;\n    uint uVar3;\n    uint var_138h;\n    uint var_34h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = fcn.0040f269();\n    var_4h = *(iVar1 + 0xc);\n    puVar2 = fcn.0040f269();\n    uVar3 = fcn.00416a25(*puVar2);\n    fcn.0044a030(&var_138h, uVar3);\n    fcn.0044951c(uVar3);\n    fcn.00417dba();\n    iVar1 = fcn.00432630(in_EAX, &var_34h, &arg_8h);\n    if (iVar1 == 0) {\n        iVar1 = fcn.0040f005(in_EAX + 0x36c, &var_138h, arg_8h, &var_34h, arg_ch, &var_ch, &var_8h);\n        if (iVar1 == 6) {\n            uVar3 = 0x85;\n        }\n        else {\n            if (iVar1 == 5) goto code_r0x0043303d;\n            if (iVar1 != 7) {\n                uVar3 = 0;\n                fcn.00421898(0);\n                fcn.004218c6(0);\n                goto code_r0x004330a4;\n            }\n            uVar3 = 0x70;\n        }\n        fcn.0041fdea(uVar3, var_4h);\n    }\ncode_r0x0043303d:\n    uVar3 = 1;\ncode_r0x004330a4:\n    fcn.00417ddb();\n    return uVar3;\n}\n",
        "token_count": 433
    },
    "004348e0": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004348e0(uint arg_8h, uint arg_ch, int32_t *arg_10h)\n\n{\n    uint64_t uVar1;\n    char cVar2;\n    int32_t *in_EAX;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint *puVar6;\n    uint in_stack_ffffffa0;\n    uint64_t uVar7;\n    uint var_44h;\n    int32_t var_40h;\n    uint var_38h;\n    uint var_34h;\n    int32_t var_2ch;\n    uint var_28h;\n    uint var_24h;\n    int32_t var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_ch;\n    uint var_8h;\n    \n    *in_EAX = *in_EAX + 1;\n    var_34h = 0;\n    var_28h = 0;\n    var_24h = 0;\n    var_18h = 0;\n    var_14h = 0;\n    var_8h = 0;\n    var_2ch = 1;\n    var_1ch = 1;\n    var_ch = 1;\n    iVar3 = fcn.0040f269();\n    if (*(iVar3 + 8) != 0xf) {\n        iVar3 = fcn.0040f269();\n        uVar7 = CONCAT44(*(iVar3 + 0xc), 0x72);\n        fcn.0041fdea(0x72, *(iVar3 + 0xc));\n        goto code_r0x00434a67;\n    }\n    fcn.004388ea();\n    fcn.00421b33();\n    fcn.00421a3d();\n    if (var_1ch == 8) {\n        uVar7 = CONCAT44(&var_14h, &var_24h);\n        iVar3 = fcn.00431c42(arg_8h, &var_24h, &var_14h);\n        if ((iVar3 != 0) || (var_1ch != 8)) goto code_r0x00434a67;\n        puVar6 = &var_14h;\ncode_r0x004349ef:\n        uVar1 = uVar7 >> 0x20;\n        uVar7 = uVar7 & 0xffffffff00000000;\n        fcn.00418a19(puVar6, uVar1);\n    }\n    else if (var_2ch == 5) {\n        iVar3 = fcn.0041a1ed();\n        uVar7 = CONCAT44(0x4349a6, in_stack_ffffffa0);\n        iVar4 = fcn.00418733();\n        if (iVar3 + -1 <= iVar4) goto code_r0x00434a67;\n        iVar3 = fcn.00418733();\n        uVar5 = iVar3 + 1;\n        fcn.00418bb9();\n        fcn.00419f46();\n        fcn.00418733();\n        fcn.00419f66();\n        uVar7 = uVar5 << 0x20;\n        iVar3 = fcn.0041a132(0);\n        if (iVar3 != 0) {\n            uVar7 = uVar7 & 0xffffffff00000000;\n            puVar6 = fcn.0041a132(0);\n            goto code_r0x004349ef;\n        }\n    }\n    else {\n        fcn.004192a2();\n        uVar7 = 0;\n        fcn.00418c65(0);\n        cVar2 = fcn.0041996d();\n        if (cVar2 == '\\0') {\n            fcn.0041974a();\n        }\n        cVar2 = fcn.0041996d();\n        if ((cVar2 == '\\0') && (cVar2 = fcn.0041974a(),  cVar2 == '\\0')) goto code_r0x00434a67;\n    }\n    uVar7 = uVar7 & 0xffffffff00000000 | ZEXT48(&var_44h);\n    fcn.004219ff();\n    *arg_10h = var_40h + 1;\ncode_r0x00434a67:\n    fcn.0041858e(uVar7);\n    fcn.0041858e();\n    fcn.0041858e();\n    return;\n}\n",
        "token_count": 993
    },
    "0041886c": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\nuint fcn.0041886c(void)\n\n{\n    uint *in_EAX;\n    \n    if (in_EAX[2] == 6) {\n        return *in_EAX;\n    }\n    return 0;\n}\n",
        "token_count": 49
    },
    "004079b5": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004079b5(uint item)\n\n{\n    int32_t *piVar1;\n    uint8_t uVar2;\n    char cVar3;\n    int32_t in_EAX;\n    int32_t iVar4;\n    uint uVar5;\n    uint *unaff_EBX;\n    uint var_34h;\n    uint var_30h;\n    uint var_20h;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    cVar3 = fcn.00404081(&var_8h);\n    if (cVar3 == '\\0') {\ncode_r0x00407a61:\n        uVar5 = 0;\n    }\n    else {\n        piVar1 = in_EAX + 0x54 + var_4h * 4;\n        iVar4 = var_8h * 4 + 0x50;\n        uVar2 = *(*(*piVar1 + iVar4) + 0x70);\n        if (uVar2 < 0x11) {\n            if ((uVar2 == 0x10) || (uVar2 < 0xb)) {\ncode_r0x00407a58:\n                var_20h = **(iVar4 + *piVar1);\n            }\n            else {\n                if (uVar2 != 0xc) {\n                    if (uVar2 == 0xe) {\n                        var_34h = 0x2c;\n                        var_30h = 4;\n                        iVar4 = (*_sym.imp.USER32.dll_GetMenuItemInfoW)(*(*(*piVar1 + iVar4) + 4), item, 0, &var_34h);\n                        if (iVar4 != 0) goto code_r0x00407a6d;\n                    }\n                    goto code_r0x00407a61;\n                }\n                var_20h = *(*(*piVar1 + iVar4) + 4);\n            }\n        }\n        else {\n            if (uVar2 != 0x11) {\n                if ((0x11 < uVar2) && ((uVar2 < 0x14 || ((0x15 < uVar2 && (uVar2 < 0x1d)))))) goto code_r0x00407a58;\n                goto code_r0x00407a61;\n            }\n            var_20h = *(*(*piVar1 + iVar4) + 8);\n        }\ncode_r0x00407a6d:\n        *unaff_EBX = var_20h;\n        uVar5 = 1;\n    }\n    return uVar5;\n}\n",
        "token_count": 567
    },
    "004144a0": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nuint fcn.004144a0(int32_t param_1, int32_t param_2)\n\n{\n    int16_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    \n    iVar3 = 0;\n    iVar1 = fcn.00414599();\n    if (iVar1 == -1) {\n        uVar2 = 0;\n    }\n    else {\n        fcn.004145dc();\n        if (0 < param_2 + -1) {\n            while (iVar1 = fcn.00414599(),  iVar1 != -1) {\n                if (iVar1 == 0xd) {\n                    iVar1 = fcn.00414599();\n                    if ((iVar1 != -1) && (iVar1 != 10)) {\n                        fcn.004145dc();\n                    }\n                    break;\n                }\n                if (iVar1 == 10) break;\n                *(param_1 + iVar3 * 2) = iVar1;\n                iVar3 = iVar3 + 1;\n                if (param_2 + -1 <= iVar3) break;\n            }\n        }\n        *(param_1 + iVar3 * 2) = 0;\n        uVar2 = 1;\n    }\n    return uVar2;\n}\n",
        "token_count": 272
    },
    "0041633d": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041633d(uint hdc)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t *unaff_ESI;\n    int32_t var_ch;\n    int32_t var_4h;\n    \n    iVar3 = 0;\n    var_ch = 0;\n    var_4h = 1;\n    iVar1 = fcn.0044985c();\n    if (0 < iVar1) {\n        do {\n            if (*(in_EAX + iVar3 * 2) == 10) {\n                var_4h = var_4h + 1;\n            }\n            iVar3 = iVar3 + 1;\n            iVar1 = fcn.0044985c();\n        } while (iVar3 < iVar1);\n    }\n    while (iVar1 = fcn.0044b607(in_EAX, 0x45c43c),  iVar1 != 0) {\n        uVar2 = fcn.0044985c(iVar1);\n        (*_sym.imp.GDI32.dll_GetTextExtentPoint32W)(hdc, iVar1, uVar2);\n        if (var_ch < *unaff_ESI) {\n            var_ch = *unaff_ESI;\n        }\n        in_EAX = 0;\n    }\n    *unaff_ESI = var_ch;\n    unaff_ESI[1] = unaff_ESI[1] * var_4h;\n    return;\n}\n",
        "token_count": 331
    },
    "00418878": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nuint fcn.00418878(void)\n\n{\n    uint *in_EAX;\n    \n    if (in_EAX[2] == 10) {\n        return **in_EAX;\n    }\n    return 0;\n}\n",
        "token_count": 48
    },
    "0041974a": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.0041974a(int32_t *param_1)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint32_t uVar2;\n    ushort extraout_var;\n    uint32_t uVar3;\n    uint uVar4;\n    int32_t iVar5;\n    uint32_t extraout_ECX;\n    uint extraout_ECX_00;\n    uint extraout_ECX_01;\n    char extraout_DL;\n    uint8_t uVar6;\n    bool bVar7;\n    float10 fVar8;\n    float10 fVar9;\n    ulong uVar10;\n    int64_t iVar11;\n    int64_t iVar12;\n    uint var_20h;\n    uint var_10h;\n    \n    iVar5 = in_EAX[2];\n    uVar10 = fcn.00419622();\n    uVar2 = uVar10 - 1;\n    // switch table (11 cases) at 0x41990e\n    switch(uVar2) {\n    case 0:\n        uVar3 = fcn.00418733();\n        uVar2 = fcn.00418733();\n        goto code_r0x004197a1;\n    case 1:\n        iVar11 = fcn.004187bd();\n        iVar12 = fcn.004187bd();\n        uVar2 = iVar12;\n        if (iVar11 == iVar12) {\ncode_r0x004197bf:\n            return CONCAT31(uVar2 >> 8, 1);\n        }\n        break;\n    case 2:\n        fVar8 = fcn.00418692();\n        fVar9 = fcn.00418692();\n        fVar8 = fVar8;\n        uVar2 = CONCAT22(extraout_var, (fVar8 < fVar9) << 8 | (fVar8 == fVar9) << 0xe);\n        if (fVar8 == fVar9) goto code_r0x004197bf;\n        break;\n    case 3:\n        fcn.00418661(0);\n        fcn.00418661();\n        iVar5 = fcn.0041754e();\ncode_r0x00419889:\n        return -iVar5 & 0xffffff00U | 1 - (iVar5 != 0);\n    case 6:\n        uVar3 = fcn.00418850();\n        uVar2 = fcn.00418850();\ncode_r0x004197a1:\n        bVar7 = uVar3 == uVar2;\ncode_r0x0041981f:\n        return uVar2 & 0xffffff00 | bVar7;\n    case 7:\n        if (((*param_1 != 0) && (*in_EAX != 0)) && (cVar1 = fcn.00418318(*param_1, *in_EAX),  cVar1 != '\\0')) {\n            return 1;\n        }\n        return 0;\n    case 8:\n        fcn.00418886();\n        uVar2 = fcn.00418886();\n        bVar7 = extraout_DL == uVar2;\n        goto code_r0x0041981f;\n    case 9:\n        fcn.00418878();\n        uVar2 = fcn.00418878();\n        bVar7 = extraout_ECX == uVar2;\n        goto code_r0x0041981f;\n    case 10:\n        if ((uVar10 >> 0x20 == 0xb) && (iVar5 == 0xb)) {\n            fcn.00418606();\n            uVar10 = fcn.00418606();\n            uVar2 = uVar10;\n            if (uVar10 >> 0x20 == uVar2) {\n                uVar4 = fcn.00418606();\n                uVar4 = fcn.00418678(extraout_ECX_00, uVar4);\n                uVar4 = fcn.00418678(uVar4);\n                iVar5 = fcn.00449e20(uVar4);\n                goto code_r0x00419889;\n            }\n            break;\n        }\n        fcn.0041835f(param_1);\n        fcn.0041835f();\n        fcn.00419d38();\n        fcn.00419d38();\n        fcn.00418606();\n        uVar10 = fcn.00418606();\n        if (uVar10 == uVar10 >> 0x20) {\n            uVar4 = fcn.00418606();\n            uVar4 = fcn.00418678(extraout_ECX_01, uVar4);\n            uVar4 = fcn.00418678(uVar4);\n            iVar5 = fcn.00449e20(uVar4);\n            if (iVar5 == 0) {\n                uVar6 = 1;\n                goto code_r0x004198f5;\n            }\n        }\n        uVar6 = 0;\ncode_r0x004198f5:\n        fcn.0041858e();\n        uVar2 = fcn.0041858e();\n        return uVar2 & 0xffffff00 | uVar6;\n    }\n    return uVar2 & 0xffffff00;\n}\n",
        "token_count": 1142
    },
    "00419b6a": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nuint32_t fcn.00419b6a(uint *param_1)\n\n{\n    uint *in_EAX;\n    uint32_t uVar1;\n    \n    if ((in_EAX[2] == 10) && (in_EAX = **in_EAX,  in_EAX == param_1)) {\n        uVar1 = CONCAT31(in_EAX >> 8, 1);\n    }\n    else {\n        uVar1 = in_EAX & 0xffffff00;\n    }\n    return uVar1;\n}\n",
        "token_count": 114
    },
    "004223c1": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_8h\n\nuint __cdecl fcn.004223c1(int32_t arg_8h, uint arg_ch)\n\n{\n    uint arg_8h_00;\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int16_t aiStackY66084 [32768];\n    uint var_220h;\n    uint var_14h;\n    uint var_8h;\n    int32_t *var_4h;\n    \n    fcn.0044c510();\n    arg_8h_00 = fcn.00418641();\n    fcn.00415029(arg_8h_00);\n    aiStackY66084[1] = 10;\n    iVar1 = (**0x4591c0)();\n    if ((iVar1 == 0) || (aiStackY66084[1] == 10)) {\n        fcn.00421898();\n    }\n    else {\n        var_4h = fcn.00449614();\n        if (var_4h == NULL) {\n            var_4h = NULL;\n        }\n        else {\n            *var_4h = 0;\n            var_4h[1] = 0;\n            var_4h[2] = 0;\n        }\n        iVar3 = 0;\n        *var_4h = 0;\n        arg_8h = 0;\n        if (0 < iVar1) {\n            do {\n                piVar2 = var_4h;\n                if (aiStackY66084[iVar3] == 0) {\n                    arg_8h = arg_8h + 1;\n                    var_4h[1] = iVar3;\n                    aiStackY66084[iVar3] = 0xd;\n                    if (aiStackY66084[iVar3 + 1] == 0) break;\n                    piVar2 = fcn.00449614();\n                    if (piVar2 == NULL) {\n                        piVar2 = NULL;\n                    }\n                    else {\n                        *piVar2 = 0;\n                        piVar2[1] = 0;\n                        piVar2[2] = 0;\n                    }\n                    var_4h[2] = piVar2;\n                    *piVar2 = iVar3 + 1;\n                }\n                iVar3 = iVar3 + 1;\n                var_4h = piVar2;\n            } while (iVar3 < iVar1);\n        }\n        fcn.0041a000(1);\n        fcn.00426925();\n        fcn.00416d61();\n        iVar1 = 0;\n        if (0 < arg_8h) {\n            do {\n                fcn.004171ba();\n                fcn.00417171();\n                iVar1 = iVar1 + 1;\n                fcn.00426940();\n                fcn.0044951c();\n            } while (iVar1 < arg_8h);\n        }\n        fcn.0044951c();\n    }\n    return 0;\n}\n",
        "token_count": 679
    },
    "00443d43": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00443d43(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    char *in_ECX;\n    char *pcVar2;\n    int32_t iVar3;\n    bool bVar4;\n    \n    do {\n        cVar1 = *in_ECX;\n        if (cVar1 == '\\0') {\n            return -1;\n        }\n        iVar3 = in_EAX;\n        if (cVar1 == '\\\\') {\n            in_ECX = in_ECX + 1;\n            if (*in_ECX == '\\0') {\n                return -1;\n            }\n            if (*in_ECX == 'Q') {\n                do {\n                    pcVar2 = in_ECX;\n                    in_ECX = pcVar2 + 1;\n                    cVar1 = *in_ECX;\n                    if (cVar1 == '\\0') {\n                        return -1;\n                    }\n                } while ((cVar1 != '\\\\') || (in_ECX = pcVar2 + 2,  *in_ECX != 'E'));\n            }\n        }\n        else if (cVar1 == '[') {\n            while( true ) {\n                pcVar2 = in_ECX;\n                in_ECX = pcVar2 + 1;\n                if (*in_ECX == ']') break;\n                if (*in_ECX == '\\\\') {\n                    in_ECX = pcVar2 + 2;\n                    if (*in_ECX == '\\0') {\n                        return -1;\n                    }\n                    if (*in_ECX == 'Q') {\n                        do {\n                            pcVar2 = in_ECX;\n                            in_ECX = pcVar2 + 1;\n                            cVar1 = *in_ECX;\n                            if (cVar1 == '\\0') {\n                                return -1;\n                            }\n                        } while ((cVar1 != '\\\\') || (in_ECX = pcVar2 + 2,  *in_ECX != 'E'));\n                    }\n                }\n            }\n        }\n        else if ((arg_10h == 0) || (cVar1 != '#')) {\n            if (cVar1 == '(') {\n                if (in_ECX[1] == '?') {\n                    pcVar2 = in_ECX + 2;\n                    if (in_ECX[2] == 'P') {\n                        pcVar2 = in_ECX + 3;\n                    }\n                    in_ECX = pcVar2;\n                    cVar1 = *in_ECX;\n                    if ((((cVar1 == '<') && (in_ECX[1] != '!')) && (in_ECX[1] != '=')) || (cVar1 == '\\'')) {\n                        iVar3 = in_EAX + 1;\n                        if ((arg_8h == 0) && (iVar3 == arg_ch)) goto code_r0x00443e5e;\n                        pcVar2 = in_ECX + 1;\n                        in_ECX = pcVar2;\n                        if (cVar1 == '<') {\n                            cVar1 = '>';\n                        }\n                        for (; *in_ECX != cVar1; in_ECX = in_ECX + 1) {\n                        }\n                        if ((arg_8h != 0) && (arg_ch == in_ECX - pcVar2)) {\n                            iVar3 = fcn.0044a590(arg_8h, pcVar2, arg_ch);\n                            bVar4 = iVar3 == 0;\n                            goto code_r0x00443e4c;\n                        }\n                    }\n                }\n                else {\n                    iVar3 = in_EAX + 1;\n                    if (arg_8h == 0) {\n                        bVar4 = in_EAX + 1 == arg_ch;\ncode_r0x00443e4c:\n                        iVar3 = in_EAX + 1;\n                        if (bVar4) {\ncode_r0x00443e5e:\n                            return in_EAX + 1;\n                        }\n                    }\n                }\n            }\n        }\n        else {\n            do {\n                in_ECX = in_ECX + 1;\n                if (*in_ECX == '\\0') {\n                    return -1;\n                }\n            } while (*in_ECX != '\\n');\n        }\n        in_ECX = in_ECX + 1;\n        in_EAX = iVar3;\n    } while( true );\n}\n",
        "token_count": 950
    },
    "0044cd10": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0044cd10(int32_t arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    uint uVar1;\n    \n    if ((arg_10h == 10) && (arg_8h < 0)) {\n        uVar1 = 1;\n        arg_10h = 10;\n    }\n    else {\n        uVar1 = 0;\n    }\n    fcn.0044ccd2(arg_10h, uVar1);\n    return arg_ch;\n}\n",
        "token_count": 116
    },
    "0044ff90": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nvoid fcn.0044ff90(uint32_t param_1, char *param_2, uint32_t param_3)\n\n{\n    int32_t *piVar1;\n    char cVar2;\n    char *pcVar3;\n    char *pcVar4;\n    int32_t iVar5;\n    uint *puVar6;\n    uint32_t uVar7;\n    int32_t iVar8;\n    int32_t iStack1064;\n    char *pcStack1060;\n    int32_t iStack1056;\n    int32_t iStack1052;\n    char *pcStack1048;\n    int32_t iStack1044;\n    int32_t iStack1040;\n    char acStack1036 [100];\n    uchar auStack936 [928];\n    uint32_t uStack8;\n    \n    uStack8 = *0x465718 ^ auStack936;\n    pcStack1060 = param_2;\n    iStack1052 = 0;\n    iStack1056 = 0;\n    if (param_3 == 0) goto code_r0x00450136;\n    piVar1 = (param_1 >> 5) * 4 + 0x480a60;\n    iVar8 = (param_1 & 0x1f) * 0x24;\n    if ((*(*piVar1 + 4 + iVar8) & 0x20) != 0) {\n        fcn.00455b36(param_1, 0, 0, 2);\n    }\n    if ((*(*piVar1 + iVar8 + 1) & 0x80) == 0) {\n        iVar5 = (**0x45922c)(*(*piVar1 + iVar8), param_2, param_3, &iStack1064, 0);\n        if (iVar5 == 0) {\ncode_r0x004500c8:\n            iStack1040 = (*_sym.imp.KERNEL32.DLL_GetLastError)();\n        }\n        else {\n            iStack1040 = 0;\n            iStack1052 = iStack1064;\n        }\ncode_r0x004500d1:\n        if (iStack1052 != 0) goto code_r0x00450136;\n        param_2 = pcStack1060;\n        if (iStack1040 != 0) {\n            if (iStack1040 == 5) {\n                puVar6 = fcn.0044ddb5();\n                *puVar6 = 9;\n                puVar6 = fcn.0044ddbe();\n                *puVar6 = 5;\n            }\n            else {\n                fcn.0044ddc7(iStack1040);\n            }\n            goto code_r0x00450136;\n        }\n    }\n    else {\n        pcStack1048 = param_2;\n        iStack1040 = 0;\n        if (param_3 != 0) {\n            do {\n                iStack1044 = 0;\n                uVar7 = pcStack1048 - pcStack1060;\n                pcVar4 = acStack1036;\n                do {\n                    if (param_3 <= uVar7) break;\n                    pcVar3 = pcStack1048 + 1;\n                    cVar2 = *pcStack1048;\n                    uVar7 = uVar7 + 1;\n                    if (cVar2 == '\\n') {\n                        iStack1056 = iStack1056 + 1;\n                        *pcVar4 = '\\r';\n                        pcVar4 = pcVar4 + 1;\n                        iStack1044 = iStack1044 + 1;\n                    }\n                    *pcVar4 = cVar2;\n                    pcVar4 = pcVar4 + 1;\n                    iStack1044 = iStack1044 + 1;\n                    pcStack1048 = pcVar3;\n                } while (iStack1044 < 0x400);\n                iVar5 = (**0x45922c)(*(*piVar1 + iVar8), acStack1036, pcVar4 - acStack1036, &iStack1064, 0);\n                if (iVar5 == 0) goto code_r0x004500c8;\n                iStack1052 = iStack1052 + iStack1064;\n            } while ((pcVar4 - acStack1036 <= iStack1064) && (pcStack1048 - pcStack1060 < param_3));\n            goto code_r0x004500d1;\n        }\n    }\n    if (((*(*piVar1 + 4 + iVar8) & 0x40) == 0) || (*param_2 != '\\x1a')) {\n        puVar6 = fcn.0044ddb5();\n        *puVar6 = 0x1c;\n        puVar6 = fcn.0044ddbe();\n        *puVar6 = 0;\n    }\ncode_r0x00450136:\n    fcn.0044ce09();\n    return;\n}\n",
        "token_count": 1074
    },
    "00410a19": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nvoid fcn.00410a19(void)\n\n{\n    code *pcVar1;\n    uchar uVar2;\n    int16_t iVar3;\n    uint *in_EAX;\n    int32_t iVar4;\n    uint pwszKLID;\n    uint var_8h;\n    \n    *in_EAX = 5;\n    in_EAX[1] = 5;\n    in_EAX[0x91] = 0;\n    *(in_EAX + 2) = 1;\n    *(in_EAX + 9) = 0;\n    if (*(in_EAX + 0x219) == '\\0') {\n        in_EAX[0x95] = 0xa0;\n    }\n    else {\n        in_EAX[0x95] = 0x10;\n    }\n    pcVar1 = _sym.imp.USER32.dll_MapVirtualKeyW;\n    uVar2 = (*_sym.imp.USER32.dll_MapVirtualKeyW)(0x5b, 0);\n    *(in_EAX + 0x94) = uVar2;\n    uVar2 = (*pcVar1)(in_EAX[0x95], 0);\n    *(in_EAX + 0x24e) = uVar2;\n    uVar2 = (*pcVar1)(0xa1, 0);\n    *(in_EAX + 0x24f) = uVar2;\n    uVar2 = (*pcVar1)(0x11, 0);\n    *(in_EAX + 0x93) = uVar2;\n    uVar2 = (*pcVar1)(0x12, 0);\n    *(in_EAX + 0x24d) = uVar2;\n    (*_sym.imp.USER32.dll_GetKeyboardLayoutNameA)(&pwszKLID);\n    iVar4 = 1;\n    do {\n        iVar3 = (*_sym.imp.USER32.dll_VkKeyScanA)(*(iVar4 + 0x466890));\n        if (iVar3 == -1) {\n            *(iVar4 + 0x466890) = 0x20;\n        }\n        iVar4 = iVar4 + 1;\n    } while (iVar4 < 8);\n    iVar4 = fcn.0044a500(&var_8h, 0x45ca40);\n    if (iVar4 == 0) {\n        iVar4 = fcn.0044a590(&pwszKLID, 0x45ca38, 4);\n        if (iVar4 == 0) {\n            *0x466892 = 0x20;\n            *0x466895 = 0x20;\n            return;\n        }\n    }\n    else {\n        iVar4 = fcn.0044a500(&var_8h, 0x45ca30);\n        if (iVar4 != 0) {\n            iVar4 = fcn.0044a500(&var_8h + 2, 0x45ca2c);\n            if (iVar4 == 0) {\n                *0x466894 = 0x20;\n                *0x466895 = 0x20;\n                return;\n            }\n            iVar4 = fcn.0044a500(&var_8h + 2, 0x45ca28);\n            if (iVar4 != 0) {\n                iVar4 = fcn.0044a500(&var_8h + 2, 0x45ca24);\n                if (iVar4 == 0) {\n                    *0x466894 = 0x20;\n                    return;\n                }\n                iVar4 = fcn.0044a500(&var_8h + 2, 0x45ca20);\n                if (iVar4 != 0) {\n                    return;\n                }\n                *0x466893 = 0x20;\n                *0x466894 = 0x20;\n                *0x466895 = 0x20;\n                *0x466896 = 0x20;\n                return;\n            }\n        }\n    }\n    *0x466892 = 0x20;\n    *0x466893 = 0x20;\n    *0x466894 = 0x20;\n    *0x466895 = 0x20;\n    *0x466896 = 0x20;\n    return;\n}\n",
        "token_count": 939
    },
    "00413b9d": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00413bb9)\n// WARNING: Removing unreachable block (ram,0x00413bc1)\n\nuint __cdecl fcn.00413b9d(uint arg_8h)\n\n{\n    uint var_4h;\n    \n    fcn.00413365();\n    return 0;\n}\n",
        "token_count": 73
    },
    "00415ed6": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00415ed6(int16_t param_1)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint var_8h;\n    \n    iVar2 = 0;\n    uVar1 = fcn.00416022();\n    fcn.004146c5(0x80000001, 0x45cfcc, 0x45cff4, 3);\n    // switch table (8 cases) at 0x415f5a\n    switch(uVar1) {\n    case 0:\n        return 0;\n    case 1:\n        iVar2 = 2;\n        break;\n    case 2:\n        iVar2 = 8;\n        break;\n    case 3:\n        iVar2 = 0x20;\n        break;\n    case 4:\n    case 6:\n        iVar2 = ((param_1 != 0x31) - 1 & 6) + 2;\n        break;\n    case 5:\n    case 7:\n        iVar2 = ((param_1 != 0x31) - 1 & 0xfffffffa) + 8;\n    }\n    (*_sym.imp.USER32.dll_mouse_event)(iVar2, 0, 0, 0, 0);\n    return 1;\n}\n",
        "token_count": 281
    },
    "00415f7a": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00415f7a(int16_t param_1)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint var_8h;\n    \n    iVar2 = 0;\n    uVar1 = fcn.00416022();\n    fcn.004146c5(0x80000001, 0x45cfcc, 0x45cff4, 4);\n    // switch table (8 cases) at 0x416002\n    switch(uVar1) {\n    case 0:\n        return 0;\n    case 1:\n        iVar2 = 4;\n        break;\n    case 2:\n        iVar2 = 0x10;\n        break;\n    case 3:\n        iVar2 = 0x40;\n        break;\n    case 4:\n    case 6:\n        iVar2 = ((param_1 != 0x31) - 1 & 0xc) + 4;\n        break;\n    case 5:\n    case 7:\n        iVar2 = ((param_1 != 0x31) - 1 & 0xfffffff4) + 0x10;\n    }\n    (*_sym.imp.USER32.dll_mouse_event)(iVar2, 0, 0, 0, 0);\n    return 1;\n}\n",
        "token_count": 286
    },
    "00418733": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00418733(uint32_t param_1)\n\n{\n    int16_t *arg_8h;\n    uint32_t *in_EAX;\n    uint32_t uVar1;\n    uint var_4h;\n    \n    uVar1 = in_EAX[2];\n    if (uVar1 < 8) {\n        if (((uVar1 == 7) || (uVar1 == 1)) || (uVar1 == 2)) {\n            return *in_EAX;\n        }\n        if (uVar1 == 3) {\n            uVar1 = fcn.00458664();\n            return uVar1;\n        }\n        if (uVar1 == 4) {\n            arg_8h = *in_EAX[3];\n            if ((*arg_8h == 0x30) && ((arg_8h[1] == 0x78 || (arg_8h[1] == 0x58)))) {\n                fcn.004167a5();\n                return param_1;\n            }\n            uVar1 = fcn.00449794(arg_8h);\n            return uVar1;\n        }\n    }\n    else {\n        if (uVar1 == 9) {\n            return *in_EAX != '\\0';\n        }\n        if (uVar1 == 10) {\n            return *(*in_EAX + 4);\n        }\n        if (uVar1 == 0xb) {\n            return **(*in_EAX + 4);\n        }\n    }\n    return 0;\n}\n",
        "token_count": 338
    },
    "00418850": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nulong * __fastcall fcn.00418850(ulong *param_1)\n\n{\n    int16_t *arg_8h;\n    int32_t iVar1;\n    ulong *puVar2;\n    \n    iVar1 = *(param_1 + 1);\n    if (iVar1 < 1) {\n        return NULL;\n    }\n    if (4 < iVar1) {\n        if (iVar1 != 7) {\n            return NULL;\n        }\n        return *param_1;\n    }\n    iVar1 = *(param_1 + 1);\n    if (iVar1 != 1) {\n        if (iVar1 == 2) {\n            return *param_1;\n        }\n        if (iVar1 == 3) {\n            puVar2 = fcn.0041a317(10, 0, *param_1, *param_1 >> 0x20);\n            return puVar2;\n        }\n        if (iVar1 == 4) {\n            arg_8h = **(param_1 + 0xc);\n            if ((*arg_8h == 0x30) && ((arg_8h[1] == 0x78 || (arg_8h[1] == 0x58)))) {\n                fcn.004167a5();\n                return param_1;\n            }\n            puVar2 = fcn.00449799(arg_8h);\n            return puVar2;\n        }\n        if (iVar1 != 7) {\n            if (iVar1 == 9) {\n                if (*param_1 == '\\0') {\n                    return NULL;\n                }\n                return 0x1;\n            }\n            if (iVar1 != 0xb) {\n                return NULL;\n            }\n            return **(*param_1 + 4);\n        }\n    }\n    return *param_1;\n}\n",
        "token_count": 394
    },
    "0042066a": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nuint32_t fcn.0042066a(void)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    int32_t lpExitCode;\n    \n    uVar1 = fcn.00420cda();\n    if (uVar1 == '\\x01') goto code_r0x00420711;\n    if (*0x4679c8 != '\\x01') {\n        uVar1 = fcn.00420c3b();\n        if ((((uVar1 == '\\x01') || (uVar1 = fcn.00420dc8(),  uVar1 == '\\x01')) ||\n            (uVar1 = fcn.00421085(),  uVar1 == '\\x01')) || (uVar1 = fcn.00420f71(),  uVar1 == '\\x01'))\n        goto code_r0x00420711;\n        if (*(in_EAX + 0x290) != 7) {\n            uVar1 = fcn.00438918();\n            if (uVar1 == '\\0') {\n                uVar1 = fcn.0043f34e();\n                return uVar1;\n            }\n            goto code_r0x00420711;\n        }\n        (**0x4591ac)(*(in_EAX + 0x81c), &lpExitCode);\n        if (lpExitCode != 0x103) {\n            (*_sym.imp.KERNEL32.DLL_CloseHandle)(*(in_EAX + 0x81c));\n            uVar1 = fcn.00418bb9(lpExitCode);\n            *(in_EAX + 0x290) = 0;\n            *(in_EAX + 0x350) = 1;\n            goto code_r0x00420711;\n        }\n    }\n    uVar1 = (*_sym.imp.KERNEL32.DLL_Sleep)(10);\ncode_r0x00420711:\n    return uVar1 & 0xffffff00 | 1;\n}\n",
        "token_count": 428
    },
    "0043f4ea": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0043f4ea(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    uint32_t arg_20h;\n    uint32_t arg_1ch;\n    uint arg_10h;\n    uint arg_ch;\n    uint hWnd;\n    \n    iVar1 = in_EAX + 0x7a0;\n    fcn.00410987();\n    if (*(in_EAX + 0x700) == 7) {\n        arg_8h = fcn.00418850();\n        iVar1 = (*_sym.imp.USER32.dll_IsWindow)(arg_8h);\n        if (iVar1 == 0) {\n            uVar2 = 0;\n        }\n        else {\n            fcn.00402a4f(arg_8h);\n            fcn.00403ccb(&arg_8h);\n            uVar2 = 1;\n        }\n    }\n    else {\n        arg_20h = *(in_EAX + 0x79c);\n        arg_1ch = *(in_EAX + 0x79d);\n        uVar2 = *(in_EAX + 0x794);\n        hWnd = arg_8h;\n        arg_10h = fcn.00418661();\n        arg_ch = fcn.00418661();\n        uVar2 = fcn.00403677(in_EAX + 0x718, arg_ch, arg_10h, iVar1, uVar2, arg_1ch, arg_20h, hWnd);\n    }\n    return uVar2;\n}\n",
        "token_count": 349
    },
    "0044b6ac": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nint32_t fcn.0044b6ac(uint32_t param_1, int32_t param_2)\n\n{\n    int32_t *piVar1;\n    uint8_t *puVar2;\n    uint8_t uVar3;\n    uint *puVar4;\n    int32_t iVar5;\n    \n    piVar1 = (param_1 >> 5) * 4 + 0x480a60;\n    iVar5 = (param_1 & 0x1f) * 0x24;\n    uVar3 = *(*piVar1 + 4 + iVar5);\n    if (param_2 == 0x8000) {\n        puVar2 = *piVar1 + 4 + iVar5;\n        *puVar2 = *puVar2 & 0x7f;\n    }\n    else {\n        if (param_2 != 0x4000) {\n            puVar4 = fcn.0044ddb5();\n            *puVar4 = 0x16;\n            return -1;\n        }\n        puVar2 = *piVar1 + 4 + iVar5;\n        *puVar2 = *puVar2 | 0x80;\n    }\n    return (-((uVar3 & 0x80) != 0) & 0xffffc000) + 0x8000;\n}\n",
        "token_count": 292
    },
    "00410ff4": {
        "rules": [
            "calculate modulo 256 via x86 assembly"
        ],
        "decompiled_code": "\nvoid fcn.00410ff4(void)\n\n{\n    uint32_t *puVar1;\n    uint8_t uVar2;\n    uint32_t in_EAX;\n    uint32_t uVar3;\n    int32_t unaff_EBX;\n    uint32_t uVar4;\n    uint32_t arg_10h;\n    uint var_10h;\n    uint32_t var_4h;\n    \n    uVar3 = in_EAX & 0xff;\n    uVar4 = *((in_EAX - 0x80 & 0xff) + 0x467338);\n    if ((uVar4 < 0x80) && (0x1f < uVar4)) {\n        if (0x7f < uVar3) {\n            uVar2 = *((uVar4 >> 4) + 0x466890);\n            var_4h = var_4h & 0xffffff00 | uVar2;\n            arg_10h = uVar3;\n            if (uVar2 != 0x20) {\n                fcn.00410f54(var_4h, 1);\n                puVar1 = unaff_EBX + 0x244;\n                *puVar1 = *puVar1 & 0x3f00;\n                fcn.00410f54(*((uVar4 & 0xf) + 0x467328), 1);\n                *puVar1 = *puVar1 & 0x3f00;\n                return;\n            }\n            goto code_r0x00411071;\n        }\n    }\n    else {\n        arg_10h = uVar4;\n        if (0x7f < uVar3) goto code_r0x00411071;\n    }\n    arg_10h = uVar3;\ncode_r0x00411071:\n    fcn.0044a5c9(&var_10h, 0x45ca18, arg_10h);\n    fcn.00411baf(unaff_EBX);\n    *(unaff_EBX + 0x244) = *(unaff_EBX + 0x244) & 0x3f00;\n    return;\n}\n",
        "token_count": 472
    },
    "0041142d": {
        "rules": [
            "parse credit card information/3266979fad224c5386fccfb7f2b301b7"
        ],
        "decompiled_code": "\nuint fcn.0041142d(void)\n\n{\n    int32_t in_EAX;\n    \n    if (((((((((in_EAX != 0x2d) && (in_EAX != 0x2e)) && (in_EAX != 0x23)) && ((in_EAX != 0x28 && (in_EAX != 0x22)))) &&\n           ((in_EAX != 0x25 && ((in_EAX != 0x27 && (in_EAX != 0x24)))))) && (in_EAX != 0x26)) &&\n         (((((in_EAX != 0x21 && (in_EAX != 0x6f)) && (in_EAX != 0x5d)) &&\n           (((in_EAX != 0x5b && (in_EAX != 0x5c)) && ((in_EAX != 0xa5 && ((in_EAX != 0xa3 && (in_EAX != 0x5f)))))))) &&\n          ((in_EAX != 0xa6 && (((in_EAX != 0xa7 && (in_EAX != 0xa8)) && (in_EAX != 0xa9)))))))) &&\n        ((((in_EAX != 0xaa && (in_EAX != 0xab)) &&\n          (((in_EAX != 0xac && ((in_EAX != 0xad && (in_EAX != 0xae)))) && (in_EAX != 0xaf)))) &&\n         ((((in_EAX != 0xb0 && (in_EAX != 0xb1)) && (in_EAX != 0xb2)) && ((in_EAX != 0xb3 && (in_EAX != 0xb4)))))))) &&\n       ((in_EAX != 0xb5 && ((in_EAX != 0xb6 && (in_EAX != 0xb7)))))) {\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 422
    },
    "0043381c": {
        "rules": [
            "parse credit card information/3266979fad224c5386fccfb7f2b301b7"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043381c(int32_t *arg_8h)\n\n{\n    int32_t *in_EAX;\n    uint *puVar1;\n    uint in_ECX;\n    int32_t in_EDX;\n    uint arg_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    puVar1 = fcn.0040f269();\n    // switch table (38 cases) at 0x433a14\n    switch(*puVar1) {\n    case 4:\n        fcn.00433aac(in_EDX, arg_8h);\n        break;\n    default:\n        fcn.0041fdea(0x81, 0xffffffff);\n        break;\n    case 6:\n    case 7:\n        fcn.00433e3b(in_EDX, arg_8h);\n        break;\n    case 8:\n        fcn.00434fd7();\n        break;\n    case 9:\n        fcn.00433e8b(in_EDX, in_ECX);\n        break;\n    case 10:\n        fcn.00433fac();\n        break;\n    case 0xb:\n        fcn.004341ff(in_EDX, in_ECX);\n        break;\n    case 0xc:\n        fcn.004342f9(in_ECX, arg_8h);\n        break;\n    case 0xd:\n        fcn.0043436d(in_EDX, in_ECX, in_EAX, arg_8h);\n        break;\n    case 0xe:\n        fcn.004348e0(in_EDX, in_ECX, arg_8h);\n        break;\n    case 0x12:\n        fcn.00433ffe(in_EDX, arg_8h);\n        break;\n    case 0x13:\n        fcn.004340fd(in_EDX, arg_8h);\n        break;\n    case 0x14:\n        fcn.00434a86(in_EDX, in_ECX);\n        break;\n    case 0x15:\n        fcn.00434c7f(arg_8h);\n        break;\n    case 0x16:\n        fcn.00434fd7();\n        break;\n    case 0x17:\n        fcn.00434cfa(in_EDX, in_ECX, arg_8h);\n        break;\n    case 0x18:\n        fcn.00434fd7();\n        break;\n    case 0x19:\n        fcn.00435019(in_EDX, in_ECX, arg_8h);\n        break;\n    case 0x1a:\n        arg_14h = 0;\n        goto code_r0x0043398f;\n    case 0x1b:\n        arg_14h = 4;\n        goto code_r0x0043398f;\n    case 0x1c:\n        arg_14h = 1;\n        goto code_r0x0043398f;\n    case 0x1d:\n        arg_14h = 2;\ncode_r0x0043398f:\n        fcn.00435239(in_EDX, in_ECX, in_EAX, arg_14h);\n        break;\n    case 0x1e:\n        fcn.004358a5(in_EDX, in_ECX, in_EAX, 0);\n        break;\n    case 0x1f:\n        *in_EAX = *in_EAX + 1;\n        puVar1 = fcn.0040f269();\n        fcn.004327a9(in_EDX, *puVar1, &var_10h, &var_ch, &var_8h, &var_4h);\n        *arg_8h = var_4h + 1;\n        break;\n    case 0x21:\n        fcn.00435d86();\n    case 0x20:\n        *(in_EDX + 0x350) = 1;\n        break;\n    case 0x22:\n        fcn.00435dfd(in_ECX);\n        break;\n    case 0x24:\n        fcn.00435150();\n        break;\n    case 0x25:\n        fcn.004351f2();\n        break;\n    case 0x29:\n        fcn.00436474(in_EDX, in_ECX, in_EAX, 0);\n    }\n    return;\n}\n",
        "token_count": 972
    },
    "00444259": {
        "rules": [
            "parse credit card information/f44d27b3cce043409e5315cf54d1899b",
            "search for credit card data/ac143e9ae29c414184a69c9308e24693"
        ],
        "decompiled_code": "\nuint __thiscall fcn.00444259(int32_t param_1, uint8_t **param_2)\n\n{\n    int32_t in_EAX;\n    uint8_t *puVar1;\n    \n    puVar1 = in_EAX + 2;\n    if (*puVar1 == 0x5e) {\n        puVar1 = in_EAX + 3;\n    }\n    while ((*(*puVar1 + *(param_1 + 0xc)) & 2) != 0) {\n        puVar1 = puVar1 + 1;\n    }\n    if ((*puVar1 == *(in_EAX + 1)) && (puVar1[1] == 0x5d)) {\n        *param_2 = puVar1;\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 179
    },
    "00449b60": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n// WARNING: Removing unreachable block (ram,0x00449c24)\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_1ch\n\nvoid __cdecl fcn.00449b60(uint arg_8h_2, uint noname_1, uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t unaff_EBP;\n    ushort *puVar2;\n    float10 fVar3;\n    uint var_4h;\n    uint var_34h;\n    uint var_20h;\n    uint var_1ch_2;\n    uint var_18h_2;\n    uint var_1ch;\n    uint var_18h;\n    uint var_4h_2;\n    uint uStack4;\n    \n    uStack4 = 0x18;\n    var_4h_2 = 0x45a960;\n    fcn.0044dc28();\n    puVar2 = *(unaff_EBP + 8);\n    iVar1 = fcn.0044cfe4(*puVar2, 8);\n    if (iVar1 != 0) {\n        do {\n            puVar2 = puVar2 + 1;\n            iVar1 = fcn.0044cfe4(*puVar2, 8);\n        } while (iVar1 != 0);\n        *(unaff_EBP + 8) = puVar2;\n    }\n    iVar1 = fcn.0044e0c7(0, puVar2, 0);\n    *(unaff_EBP + -0x1c) = iVar1;\n    *(unaff_EBP + -4) = 0;\n    fcn.0044c510();\n    *(unaff_EBP + -0x18) = &fcn.00449b60::var_4h_2;\n    *(unaff_EBP + -0x20) = &fcn.00449b60::var_4h_2;\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.0044e0c7(&fcn.00449b60::var_4h_2, *(unaff_EBP + 8), iVar1 + 1);\n    fVar3 = fcn.0044dd7d(&fcn.00449b60::var_4h_2);\n    *(unaff_EBP + -0x28) = fVar3;\n    *(unaff_EBP + -0x38) = 0x449c36;\n    fcn.0044dc63();\n    return;\n}\n",
        "token_count": 583
    },
    "0044fa04": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.0044fa04(uint arg_8h, uint16_t *arg_ch, uint arg_10h, uint *arg_14h)\n\n{\n    uint16_t uVar1;\n    bool bVar2;\n    bool bVar3;\n    bool bVar4;\n    int32_t iVar5;\n    uint32_t arg_ch_00;\n    uint32_t uVar6;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = *arg_ch;\n    bVar4 = false;\n    bVar3 = false;\n    if (uVar1 == 0x61) {\n        arg_ch_00 = 0x109;\n    }\n    else {\n        if (uVar1 == 0x72) {\n            arg_ch_00 = 0;\n            uVar6 = *0x467974 | 1;\n            goto code_r0x0044fa48;\n        }\n        if (uVar1 != 0x77) {\n            return NULL;\n        }\n        arg_ch_00 = 0x301;\n    }\n    uVar6 = *0x467974 | 2;\ncode_r0x0044fa48:\n    bVar2 = true;\ncode_r0x0044fb28:\n    arg_ch = arg_ch + 1;\n    uVar1 = *arg_ch;\n    if ((uVar1 == 0) || (!bVar2)) {\n        iVar5 = fcn.00455ae1(arg_8h, arg_ch_00, arg_10h, 0x1a4);\n        if (iVar5 < 0) {\n            return NULL;\n        }\n        *0x467410 = *0x467410 + 1;\n        arg_14h[3] = uVar6;\n        arg_14h[1] = 0;\n        *arg_14h = 0;\n        arg_14h[2] = 0;\n        arg_14h[7] = 0;\n        arg_14h[4] = iVar5;\n        return arg_14h;\n    }\n    if (uVar1 < 0x55) {\n        if (uVar1 == 0x54) {\n            if ((arg_ch_00 & 0x1000) == 0) {\n                arg_ch_00 = arg_ch_00 | 0x1000;\n                goto code_r0x0044fb28;\n            }\n        }\n        else if (uVar1 == 0x2b) {\n            if ((arg_ch_00 & 2) == 0) {\n                arg_ch_00 = arg_ch_00 & 0xfffffffe | 2;\n                uVar6 = uVar6 & 0xfffffffc | 0x80;\n                goto code_r0x0044fb28;\n            }\n        }\n        else if (uVar1 == 0x44) {\n            if ((arg_ch_00 & 0x40) == 0) {\n                arg_ch_00 = arg_ch_00 | 0x40;\n                goto code_r0x0044fb28;\n            }\n        }\n        else if (uVar1 == 0x52) {\n            if (!bVar3) {\n                bVar3 = true;\n                arg_ch_00 = arg_ch_00 | 0x10;\n                goto code_r0x0044fb28;\n            }\n        }\n        else if ((uVar1 == 0x53) && (!bVar3)) {\n            bVar3 = true;\n            arg_ch_00 = arg_ch_00 | 0x20;\n            goto code_r0x0044fb28;\n        }\n    }\n    else {\n        if (uVar1 == 0x62) {\n            if ((arg_ch_00 & 0xc000) != 0) goto code_r0x0044fb0a;\n            arg_ch_00 = arg_ch_00 | 0x8000;\n            goto code_r0x0044fb28;\n        }\n        if (uVar1 == 99) {\n            if (!bVar4) {\n                bVar4 = true;\n                uVar6 = uVar6 | 0x4000;\n                goto code_r0x0044fb28;\n            }\n        }\n        else {\n            if (uVar1 != 0x6e) {\n                if ((uVar1 != 0x74) || ((arg_ch_00 & 0xc000) != 0)) goto code_r0x0044fb0a;\n                arg_ch_00 = arg_ch_00 | 0x4000;\n                goto code_r0x0044fb28;\n            }\n            if (!bVar4) {\n                bVar4 = true;\n                uVar6 = uVar6 & 0xffffbfff;\n                goto code_r0x0044fb28;\n            }\n        }\n    }\ncode_r0x0044fb0a:\n    bVar2 = false;\n    goto code_r0x0044fb28;\n}\n",
        "token_count": 1091
    },
    "00453400": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.00453400(uint arg_8h, char *arg_ch, uint arg_10h, uint *arg_14h)\n\n{\n    char cVar1;\n    bool bVar2;\n    bool bVar3;\n    bool bVar4;\n    int32_t iVar5;\n    uint32_t arg_ch_00;\n    uint32_t uVar6;\n    uint var_8h;\n    uint var_4h;\n    \n    cVar1 = *arg_ch;\n    bVar4 = false;\n    bVar3 = false;\n    if (cVar1 == 'a') {\n        arg_ch_00 = 0x109;\n    }\n    else {\n        if (cVar1 == 'r') {\n            arg_ch_00 = 0;\n            uVar6 = *0x467974 | 1;\n            goto code_r0x00453441;\n        }\n        if (cVar1 != 'w') {\n            return NULL;\n        }\n        arg_ch_00 = 0x301;\n    }\n    uVar6 = *0x467974 | 2;\ncode_r0x00453441:\n    bVar2 = true;\ncode_r0x00453520:\n    arg_ch = arg_ch + 1;\n    cVar1 = *arg_ch;\n    if ((cVar1 == '\\0') || (!bVar2)) {\n        iVar5 = fcn.00456328(arg_8h, arg_ch_00, arg_10h, 0x1a4);\n        if (iVar5 < 0) {\n            return NULL;\n        }\n        *0x467410 = *0x467410 + 1;\n        arg_14h[3] = uVar6;\n        arg_14h[1] = 0;\n        *arg_14h = 0;\n        arg_14h[2] = 0;\n        arg_14h[7] = 0;\n        arg_14h[4] = iVar5;\n        return arg_14h;\n    }\n    if (cVar1 < 'U') {\n        if (cVar1 == 'T') {\n            if ((arg_ch_00 & 0x1000) == 0) {\n                arg_ch_00 = arg_ch_00 | 0x1000;\n                goto code_r0x00453520;\n            }\n        }\n        else if (cVar1 == '+') {\n            if ((arg_ch_00 & 2) == 0) {\n                arg_ch_00 = arg_ch_00 & 0xfffffffe | 2;\n                uVar6 = uVar6 & 0xfffffffc | 0x80;\n                goto code_r0x00453520;\n            }\n        }\n        else if (cVar1 == 'D') {\n            if ((arg_ch_00 & 0x40) == 0) {\n                arg_ch_00 = arg_ch_00 | 0x40;\n                goto code_r0x00453520;\n            }\n        }\n        else if (cVar1 == 'R') {\n            if (!bVar3) {\n                bVar3 = true;\n                arg_ch_00 = arg_ch_00 | 0x10;\n                goto code_r0x00453520;\n            }\n        }\n        else if ((cVar1 == 'S') && (!bVar3)) {\n            bVar3 = true;\n            arg_ch_00 = arg_ch_00 | 0x20;\n            goto code_r0x00453520;\n        }\n    }\n    else {\n        if (cVar1 == 'b') {\n            if ((arg_ch_00 & 0xc000) != 0) goto code_r0x00453502;\n            arg_ch_00 = arg_ch_00 | 0x8000;\n            goto code_r0x00453520;\n        }\n        if (cVar1 == 'c') {\n            if (!bVar4) {\n                bVar4 = true;\n                uVar6 = uVar6 | 0x4000;\n                goto code_r0x00453520;\n            }\n        }\n        else {\n            if (cVar1 != 'n') {\n                if ((cVar1 != 't') || ((arg_ch_00 & 0xc000) != 0)) goto code_r0x00453502;\n                arg_ch_00 = arg_ch_00 | 0x4000;\n                goto code_r0x00453520;\n            }\n            if (!bVar4) {\n                bVar4 = true;\n                uVar6 = uVar6 & 0xffffbfff;\n                goto code_r0x00453520;\n            }\n        }\n    }\ncode_r0x00453502:\n    bVar2 = false;\n    goto code_r0x00453520;\n}\n",
        "token_count": 1039
    },
    "00454a5b": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_18h_2\n\nvoid __cdecl\nfcn.00454a5b(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint arg_8h, uint arg_ch)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint32_t unaff_EBP;\n    uint uVar4;\n    uint var_8h;\n    uint var_128h_2;\n    uint var_124h_2;\n    uint var_128h;\n    uint lpFilename;\n    uint var_18h_2;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint uStack4;\n    \n    uStack4 = 0x118;\n    var_18h = 0x45bc50;\n    fcn.0044dc28();\n    *(unaff_EBP - 0x1c) = *0x465718 ^ unaff_EBP;\n    pcVar1 = *0x46791c;\n    uVar4 = *(unaff_EBP + 0xc);\n    if (*0x46791c == NULL) {\n        if (*(unaff_EBP + 8) == 1) {\n            uVar4 = 0x45bb58;\n            *(unaff_EBP - 0x128) = 0x45bab8;\n        }\n        else {\n            uVar4 = 0x45bc2c;\n            *(unaff_EBP - 0x128) = 0x45bb78;\n        }\n        *(unaff_EBP - 0x20) = 0;\n        iVar2 = (**0x459334)(0, unaff_EBP - 0x124, 0x104);\n        if (iVar2 == 0) {\n            fcn.0044a030(unaff_EBP - 0x124, 0x45b904);\n        }\n        iVar2 = unaff_EBP - 0x124;\n        iVar3 = fcn.00449fa0(iVar2);\n        if (0x3c < iVar3 + 0xbU) {\n            iVar2 = fcn.00449fa0(iVar2);\n            iVar2 = iVar2 + (unaff_EBP - 0x155);\n            fcn.00453f50(iVar2, 0x45b900, 3);\n        }\n        fcn.00449fa0(iVar2);\n        fcn.0044c510();\n        *(unaff_EBP - 0x18) = &var_18h;\n        fcn.0044a030(&var_18h, uVar4);\n        fcn.0044a040(&var_18h, 0x45b8e0);\n        fcn.0044a040(&var_18h, 0x45baac);\n        fcn.0044a040(&var_18h, iVar2);\n        fcn.0044a040(&var_18h, 0x45b8e0);\n        fcn.0044a040(&var_18h, *(unaff_EBP - 0x128));\n        fcn.0045637d(&var_18h, 0x45b8b8, 0x12010);\n    }\n    else {\n        *(unaff_EBP - 4) = 0;\n        (*pcVar1)(*(unaff_EBP + 8), uVar4);\n        *(unaff_EBP - 4) = 0xffffffff;\n    }\n    fcn.0044b435(3);\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 862
    },
    "00442eb6": {
        "rules": [
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00442eb6(int32_t param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uchar *puVar1;\n    uchar *puVar2;\n    int32_t iVar3;\n    \n    if (param_2 != 0) {\n        puVar2 = param_1 + 1;\n        puVar1 = in_EAX + 2;\n        iVar3 = (param_2 - 1U >> 2) + 1;\n        do {\n            puVar2[-1] = puVar1[-2];\n            *puVar2 = puVar1[-1];\n            puVar2[1] = *puVar1;\n            puVar2[2] = puVar1[1];\n            puVar1 = puVar1 + 4;\n            puVar2 = puVar2 + 4;\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != 0);\n    }\n    return;\n}\n",
        "token_count": 217
    },
    "00442ee7": {
        "rules": [
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00442ee7(int32_t param_1, uint *param_2)\n\n{\n    int32_t in_EAX;\n    ushort *puVar1;\n    int32_t iVar2;\n    \n    if (param_1 != 0) {\n        iVar2 = (param_1 - 1U >> 2) + 1;\n        puVar1 = in_EAX + 2;\n        do {\n            *param_2 = CONCAT31(CONCAT21(*puVar1, *(puVar1 + -1)), *(puVar1 + -1));\n            param_2 = param_2 + 1;\n            iVar2 = iVar2 + -1;\n            puVar1 = puVar1 + 2;\n        } while (iVar2 != 0);\n    }\n    return;\n}\n",
        "token_count": 176
    },
    "00443cae": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/101d11b5106849ad963488c88a9294b9",
            "validate payment card number using luhn algorithm with lookup table/77a25ea9f6f245cfb8807f7953974472"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00443cae(int32_t *arg_8h, int32_t *arg_ch, uint *arg_10h)\n\n{\n    uint8_t *in_EAX;\n    uint8_t *puVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    \n    uVar2 = *in_EAX;\n    iVar4 = 0;\n    if ((*(uVar2 + 0x45a1c8) & 4) == 0) {\ncode_r0x00443ce7:\n        iVar3 = iVar4;\n        if (*in_EAX != 0x7d) {\n            puVar1 = in_EAX + 1;\n            iVar3 = -1;\n            if (*puVar1 != 0x7d) {\n                uVar2 = *puVar1;\n                iVar3 = 0;\n                if ((*(uVar2 + 0x45a1c8) & 4) != 0) {\n                    do {\n                        puVar1 = puVar1 + 1;\n                        iVar3 = iVar3 * 10 + -0x30 + uVar2;\n                        uVar2 = *puVar1;\n                    } while ((*(uVar2 + 0x45a1c8) & 4) != 0);\n                    if ((iVar3 < 0) || (0xffff < iVar3)) goto code_r0x00443d35;\n                }\n                if (iVar3 < iVar4) {\n                    *arg_10h = 4;\n                    return;\n                }\n            }\n        }\n        *arg_8h = iVar4;\n        *arg_ch = iVar3;\n    }\n    else {\n        do {\n            in_EAX = in_EAX + 1;\n            iVar4 = iVar4 * 10 + -0x30 + uVar2;\n            uVar2 = *in_EAX;\n        } while ((*(uVar2 + 0x45a1c8) & 4) != 0);\n        if ((-1 < iVar4) && (iVar4 < 0x10000)) goto code_r0x00443ce7;\ncode_r0x00443d35:\n        *arg_10h = 5;\n    }\n    return;\n}\n",
        "token_count": 500
    },
    "00442600": {
        "rules": [
            "encrypt data using Curve25519/ee72fa54c57a4f96b956b5431c8943ad"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00442600(int32_t arg_8h)\n\n{\n    uint32_t in_EAX;\n    uint32_t uVar1;\n    int32_t in_ECX;\n    uint32_t uVar2;\n    uint32_t var_4h;\n    \n    uVar2 = *(in_ECX + 0x44) + in_EAX * 8;\n    uVar1 = *(in_ECX + 0x44) >> 3 & 0x3f;\n    *(in_ECX + 0x44) = uVar2;\n    if (uVar2 < in_EAX << 3) {\n        *(in_ECX + 0x48) = *(in_ECX + 0x48) + 1;\n    }\n    *(in_ECX + 0x48) = *(in_ECX + 0x48) + (in_EAX >> 0x1d);\n    var_4h = -uVar1 + 0x40;\n    if (in_EAX < var_4h) {\n        var_4h = 0;\n    }\n    else {\n        fcn.0044a6b0(uVar1 + 0x4c + in_ECX, arg_8h, var_4h);\n        fcn.00442743(in_ECX + 0x4c);\n        for (uVar2 = -uVar1 + 0x7f; uVar2 < in_EAX; uVar2 = uVar2 + 0x40) {\n            fcn.00442743(arg_8h + -0x3f + uVar2);\n            var_4h = var_4h + 0x40;\n        }\n        uVar1 = 0;\n    }\n    fcn.0044a6b0(uVar1 + 0x4c + in_ECX, var_4h + arg_8h, in_EAX - var_4h);\n    return;\n}\n",
        "token_count": 433
    },
    "0044269b": {
        "rules": [
            "encrypt data using Curve25519/ee72fa54c57a4f96b956b5431c8943ad"
        ],
        "decompiled_code": "\nvoid fcn.0044269b(void)\n\n{\n    int32_t iVar1;\n    int32_t unaff_ESI;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.00442eb6();\n    fcn.00442600(0x4672d8);\n    fcn.00442600(&var_ch);\n    fcn.00442eb6();\n    fcn.00449b00(unaff_ESI + 0x44, 0, 8);\n    iVar1 = 0;\n    fcn.00449b00(unaff_ESI + 0x34, 0, 0x10);\n    fcn.00449b00(unaff_ESI + 0x4c, 0, 0x40);\n    *(unaff_ESI + 0x10) = 0;\n    do {\n        fcn.0044a5c9(&var_4h, 0x462020, *(iVar1 + unaff_ESI));\n        fcn.0044a040(unaff_ESI + 0x10, &var_4h);\n        iVar1 = iVar1 + 1;\n    } while (iVar1 < 0x10);\n    return;\n}\n",
        "token_count": 269
    },
    "0045375f": {
        "rules": [
            "parse credit card information/92c3fd9898ba41b4bad3ffb6188f4688",
            "search for credit card data/212a26c2b8d740cd9f6579dba482d653"
        ],
        "decompiled_code": "\nuint fcn.0045375f(void)\n\n{\n    uint uVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int16_t *piVar4;\n    int32_t iVar5;\n    \n    iVar5 = 0;\n    piVar4 = *0x467418;\n    if (*0x467418 == NULL) {\n        uVar1 = 0xffffffff;\n    }\n    else {\n        for (; *piVar4 != 0; piVar4 = piVar4 + iVar3 + 1) {\n            if (*piVar4 != 0x3d) {\n                iVar5 = iVar5 + 1;\n            }\n            iVar3 = fcn.0044985c(piVar4);\n        }\n        piVar2 = fcn.00449f7f(iVar5 * 4 + 4);\n        piVar4 = *0x467418;\n        *0x4673f4 = piVar2;\n        if (piVar2 == NULL) {\n            uVar1 = 0xffffffff;\n        }\n        else {\n            for (; *piVar4 != 0; piVar4 = piVar4 + iVar5 + 1) {\n                iVar5 = fcn.0044985c(piVar4);\n                if (*piVar4 != 0x3d) {\n                    iVar3 = fcn.00449f7f((iVar5 + 1) * 2);\n                    *piVar2 = iVar3;\n                    if (iVar3 == 0) {\n                        fcn.0044a128(*0x4673f4);\n                        *0x4673f4 = NULL;\n                        return 0xffffffff;\n                    }\n                    fcn.004495f8(iVar3, piVar4);\n                    piVar2 = piVar2 + 1;\n                }\n            }\n            fcn.0044a128(*0x467418);\n            *0x467418 = NULL;\n            *piVar2 = 0;\n            *0x481ba4 = 1;\n            uVar1 = 0;\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 460
    },
    "004291be": {
        "rules": [
            "decompress data using aPLib/db7317f0dd944ab688d24dced6f5a7c2"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004291be(uint32_t arg_8h, uint arg_ch)\n\n{\n    uint32_t uVar1;\n    uint var_ch;\n    \n    uVar1 = fcn.00418733();\n    if (uVar1 == 0) {\n        fcn.00416d61();\n        fcn.00416e97(0);\n        fcn.00418cb1();\n    }\n    else {\n        if (0xff < uVar1) {\n            fcn.00418c7e(0x45bfe0);\n            fcn.00421898(0);\n            return 0;\n        }\n        if (uVar1 < 0x80) {\n            arg_8h = uVar1 & 0xffff;\n            fcn.00418c7e(&arg_8h);\n            return 0;\n        }\n        arg_8h = CONCAT12(uVar1, arg_8h);\n        var_ch = fcn.004169d1(&arg_8h + 2);\n        fcn.00418c7e(var_ch);\n    }\n    fcn.0044951c(var_ch);\n    return 0;\n}\n",
        "token_count": 256
    },
    "00441f01": {
        "rules": [
            "hash data using aphash/0253f481fbfe42f6972c4d360912dc99"
        ],
        "decompiled_code": "\nfloat10 fcn.00441f01(void)\n\n{\n    double dVar1;\n    uint32_t uVar2;\n    uint var_4h;\n    \n    *0x4672d0 = *0x4672d0 + -1;\n    if (*0x4672d0 == 0) {\n        fcn.00441dee();\n    }\n    uVar2 = **0x477a28;\n    *0x477a28 = *0x477a28 + 1;\n    uVar2 = uVar2 ^ uVar2 >> 0xb;\n    uVar2 = uVar2 ^ (uVar2 & 0xff3a58ad) << 7;\n    uVar2 = uVar2 ^ (uVar2 & 0xffffdf8c) << 0xf;\n    uVar2 = uVar2 >> 0x12 ^ uVar2;\n    dVar1 = uVar2;\n    if (uVar2 < 0) {\n        dVar1 = dVar1 + *0x462098;\n    }\n    return dVar1 * *0x462088;\n}\n",
        "token_count": 246
    },
    "0044e365": {
        "rules": [
            "hash data using aphash/ab9c9a8537c84744923d9bbb8bd71d10"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.0044e365(uint param_1, int32_t param_2)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = *(param_2 + 4) & 0x7ff00000;\n    if (uVar1 != 0x7ff00000) {\n        return uVar1;\n    }\n    return *(param_2 + 4);\n}\n",
        "token_count": 92
    },
    "00450d80": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00450d80(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t unaff_EBP;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.0044dc28(0x45b348, 8);\n    uVar2 = *(unaff_EBP + 8);\n    iVar1 = *((uVar2 >> 5) * 4 + 0x480a60) + (uVar2 & 0x1f) * 0x24;\n    if (*(iVar1 + 8) == 0) {\n        fcn.0044cb7b(10);\n        *(unaff_EBP + -4) = 0;\n        if (*(iVar1 + 8) == 0) {\n            iVar3 = fcn.004548d2(iVar1 + 0xc, 4000);\n            if (iVar3 == 0) {\n                fcn.004542b2(unaff_EBP + -0x10, 0xffffffff);\n                goto code_r0x00450e0e;\n            }\n            *(iVar1 + 8) = *(iVar1 + 8) + 1;\n        }\n        *(unaff_EBP + -4) = 0xffffffff;\n        fcn.00450e17();\n    }\n    (*_sym.imp.KERNEL32.DLL_EnterCriticalSection)(*((uVar2 >> 5) * 4 + 0x480a60) + 0xc + (uVar2 & 0x1f) * 0x24);\ncode_r0x00450e0e:\n    fcn.0044dc63();\n    return;\n}\n",
        "token_count": 401
    },
    "00450e20": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nvoid fcn.00450e20(uint32_t param_1)\n\n{\n    (*_sym.imp.KERNEL32.DLL_LeaveCriticalSection)(*((param_1 >> 5) * 4 + 0x480a60) + 0xc + (param_1 & 0x1f) * 0x24);\n    return;\n}\n",
        "token_count": 76
    },
    "00454e0f": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nuint8_t fcn.00454e0f(uint32_t param_1)\n\n{\n    if (*0x480a4c <= param_1) {\n        return 0;\n    }\n    return *(*((param_1 >> 5) * 4 + 0x480a60) + 4 + (param_1 & 0x1f) * 0x24) & 0x40;\n}\n",
        "token_count": 92
    },
    "00455b36": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nulong __cdecl fcn.00455b36(uint32_t arg_8h, uint arg_ch, uint arg_10h, uint dwMoveMethod)\n\n{\n    uint8_t *puVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    int32_t iVar4;\n    uint lDistanceToMove;\n    uint lpDistanceToMoveHigh;\n    \n    lpDistanceToMoveHigh = arg_10h;\n    iVar2 = fcn.00450d3f(arg_8h);\n    if (iVar2 == -1) {\n        puVar3 = fcn.0044ddb5();\n        *puVar3 = 9;\ncode_r0x00455b90:\n        iVar2 = -1;\n        lpDistanceToMoveHigh = 0xffffffff;\n    }\n    else {\n        iVar2 = (*_sym.imp.KERNEL32.DLL_SetFilePointer)(iVar2, arg_ch, &lpDistanceToMoveHigh, dwMoveMethod);\n        if (iVar2 == -1) {\n            iVar4 = (*_sym.imp.KERNEL32.DLL_GetLastError)();\n            if (iVar4 != 0) {\n                fcn.0044ddc7(iVar4);\n                goto code_r0x00455b90;\n            }\n        }\n        puVar1 = *((arg_8h >> 5) * 4 + 0x480a60) + 4 + (arg_8h & 0x1f) * 0x24;\n        *puVar1 = *puVar1 & 0xfd;\n    }\n    return CONCAT44(lpDistanceToMoveHigh, iVar2);\n}\n",
        "token_count": 350
    },
    "00401801": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00401838)\n// WARNING: Removing unreachable block (ram,0x0040188c)\n\nuint __cdecl fcn.00401801(uint arg_8h, uint noname_1, uint arg_10h)\n\n{\n    uint hLibModule;\n    uint var_4h;\n    \n    *0x467a08 = arg_8h;\n    *0x4679dc = 0;\n    *0x4679d8 = 0;\n    *0x467a04 = 0;\n    fcn.004018b3();\n    fcn.00449622(0x4146a9);\n    fcn.00449661(1);\n    fcn.004122d6();\n    fcn.00401910(0x47bd04, arg_10h);\n    fcn.0040109d();\n    fcn.0041232a();\n    return *0x4679dc;\n}\n",
        "token_count": 211
    },
    "00402963": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00402963(int32_t wParam, uint arg_ch)\n\n{\n    uint32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    int32_t *unaff_EDI;\n    uint var_89ch;\n    uint var_9ch;\n    \n    uVar4 = 0;\n    if (*unaff_EDI == 0) {\n        uVar4 = in_EAX & 0xffffff00;\n    }\n    else {\n        fcn.00412469();\n        iVar1 = (*_sym.imp.USER32.dll_SendMessageW)(*unaff_EDI, 0x406, 0, 0);\n        if ((-1 < wParam) && (wParam < iVar1)) {\n            uVar2 = fcn.0041252f(0x800, *unaff_EDI);\n            (*_sym.imp.USER32.dll_SendMessageW)(*unaff_EDI, 0x40d, wParam, uVar2);\n            fcn.00412609(&var_89ch, 0x800);\n            fcn.00416e83(arg_ch, &var_89ch);\n            uVar4 = 1;\n        }\n        uVar3 = fcn.004124b7();\n        uVar4 = uVar3 & 0xffffff00 | uVar4;\n    }\n    return uVar4;\n}\n",
        "token_count": 316
    },
    "00402c2f": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.00402c2f(int32_t hWndParent, int32_t arg_ch)\n\n{\n    uint uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t unaff_EDI;\n    uint var_1ch;\n    uint var_10h;\n    uint var_1h;\n    \n    uVar3 = 0;\n    *(unaff_EDI + 4) = 0;\n    *(unaff_EDI + 5) = 0;\n    *(unaff_EDI + 6) = 0;\n    *(unaff_EDI + 7) = 0;\n    *(unaff_EDI + 8) = 0;\n    *(unaff_EDI + 0x3c) = 0;\n    *(unaff_EDI + 0x44) = 0;\n    fcn.00416d61();\n    if (*(arg_ch + 4) != 0) {\n        fcn.00416d81(0x45c0cc);\n        var_1h._0_1_ = fcn.00402a79(&var_1ch, &var_10h);\n        fcn.0044951c(var_1ch);\n        if (var_1h != '\\0') {\n            *(unaff_EDI + 4) = 1;\n            fcn.00416e71();\n            *(unaff_EDI + 0x44) = *(unaff_EDI + 0x44) + 1;\n        }\n        fcn.00416d81(0x45c0bc);\n        var_1h._0_1_ = fcn.00402a79(&var_1ch, &var_10h);\n        fcn.0044951c(var_1ch);\n        if (var_1h != '\\0') {\n            *(unaff_EDI + 7) = 1;\n            fcn.00416e71();\n            *(unaff_EDI + 0x44) = *(unaff_EDI + 0x44) + 1;\n        }\n        fcn.00416d81(0x45c0b4);\n        var_1h._0_1_ = fcn.00402a79(&var_1ch, &var_10h);\n        fcn.0044951c(var_1ch);\n        if (var_1h != '\\0') {\n            *(unaff_EDI + 8) = 1;\n            uVar1 = fcn.00449794(var_10h);\n            *(unaff_EDI + 0x44) = *(unaff_EDI + 0x44) + 1;\n            *(unaff_EDI + 0x30) = uVar1;\n        }\n        fcn.00416d81(0x45c0a0);\n        var_1h._0_1_ = fcn.00402a79(&var_1ch, &var_10h);\n        fcn.0044951c(var_1ch);\n        if (var_1h != '\\0') {\n            *(unaff_EDI + 5) = 1;\n            uVar1 = fcn.00449794(var_10h);\n            *(unaff_EDI + 0x44) = *(unaff_EDI + 0x44) + 1;\n            *(unaff_EDI + 0x34) = uVar1;\n        }\n        fcn.00416d81(0x45c094);\n        var_1h._0_1_ = fcn.00402a79(&var_1ch, &var_10h);\n        fcn.0044951c(var_1ch);\n        if (var_1h != '\\0') {\n            *(unaff_EDI + 6) = 1;\n            fcn.00416e71();\n            *(unaff_EDI + 0x44) = *(unaff_EDI + 0x44) + 1;\n        }\n        if (*(unaff_EDI + 0x44) == 0) {\n            *(unaff_EDI + 7) = 1;\n            fcn.00416e71();\n            *(unaff_EDI + 0x44) = *(unaff_EDI + 0x44) + 1;\n        }\n        *(unaff_EDI + 0x40) = 0;\n        (*_sym.imp.USER32.dll_EnumChildWindows)(hWndParent, 0x402e70);\n        if ((*(unaff_EDI + 0x3c) == 0) && (*(unaff_EDI + 7) != '\\0')) {\n            *(unaff_EDI + 4) = 0;\n            *(unaff_EDI + 5) = 0;\n            *(unaff_EDI + 7) = 0;\n            *(unaff_EDI + 0x40) = 0;\n            *(unaff_EDI + 6) = 1;\n            fcn.00416e71();\n            (*_sym.imp.USER32.dll_EnumChildWindows)(hWndParent, 0x402e70);\n        }\n        hWndParent = *(unaff_EDI + 0x3c);\n        if (hWndParent == 0) goto code_r0x00402e11;\n    }\n    fcn.00402a4f(hWndParent);\n    uVar3 = 1;\ncode_r0x00402e11:\n    uVar2 = fcn.0044951c(var_10h);\n    return uVar2 & 0xffffff00 | uVar3;\n}\n",
        "token_count": 1261
    },
    "00407134": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint fcn.00407134(void)\n\n{\n    int32_t iVar1;\n    uint unaff_EBX;\n    int32_t iVar2;\n    int32_t unaff_EDI;\n    int32_t lpRect;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    (*_sym.imp.USER32.dll_GetWindowRect)();\n    iVar2 = (var_4h - var_ch) * (var_8h - lpRect);\n    if ((((lpRect <= *(unaff_EDI + 0x1168)) && (*(unaff_EDI + 0x1168) <= var_8h)) && (var_ch <= *(unaff_EDI + 0x116c)))\n       && ((*(unaff_EDI + 0x116c) <= var_4h && (iVar2 - *(unaff_EDI + 0x1164) == 0 || iVar2 < *(unaff_EDI + 0x1164)))))\n    {\n        iVar1 = (*_sym.imp.USER32.dll_IsWindowVisible)();\n        if (iVar1 != 0) {\n            iVar1 = (*_sym.imp.USER32.dll_GetDlgCtrlID)();\n            if (iVar1 != 0) {\n                *(unaff_EDI + 0x1160) = unaff_EBX;\n                *(unaff_EDI + 0x1164) = iVar2;\n            }\n        }\n    }\n    return 1;\n}\n",
        "token_count": 320
    },
    "0040b0ad": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.0040b0ad(int32_t hWnd, uint arg_ch, uint noname_2, int32_t arg_14h)\n\n{\n    code *pcVar1;\n    char cVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint *unaff_EDI;\n    bool bVar5;\n    uint *puVar6;\n    uint *puVar7;\n    uint uVar8;\n    uint hLibModule;\n    uint32_t nIconIndex;\n    int32_t var_8h;\n    char var_3h;\n    char var_2h;\n    uint var_1h;\n    \n    var_8h = 0;\n    nIconIndex = fcn.00418733();\n    var_1h._0_1_ = '\\0';\n    uVar3 = fcn.0044985c(hWnd);\n    if (4 < uVar3) {\n        uVar8 = 0x45c320;\n        iVar4 = fcn.0044985c(hWnd);\n        iVar4 = fcn.00449521(hWnd + -8 + iVar4 * 2, uVar8);\n        var_1h._0_1_ = '\\x01' - (iVar4 != 0);\n        uVar8 = 0x45c314;\n        iVar4 = fcn.0044985c(hWnd);\n        iVar4 = fcn.00449521(hWnd + -8 + iVar4 * 2, uVar8);\n        var_2h = '\\x01' - (iVar4 != 0);\n        uVar8 = 0x45c308;\n        iVar4 = fcn.0044985c(hWnd);\n        iVar4 = fcn.00449521(hWnd + -8 + iVar4 * 2, uVar8);\n        var_3h = '\\x01' - (iVar4 != 0);\n        if ((var_3h != '\\0') || (var_2h != '\\0')) {\n            iVar4 = (**0x4592bc)(hWnd, 0, 0x32);\n            if (iVar4 != 0) {\n                if (arg_14h == 4) {\n                    uVar8 = fcn.00418641(1, *(unaff_EDI + 0x1b), *(unaff_EDI + 0x6e), 0);\n                    pcVar1 = _sym.imp.USER32.dll_LoadImageW;\n                    var_8h = (*_sym.imp.USER32.dll_LoadImageW)(iVar4, uVar8);\n                    if (var_8h == 0) {\n                        var_8h = (*pcVar1)(iVar4, nIconIndex & 0xffff, 1, *(unaff_EDI + 0x1b), *(unaff_EDI + 0x6e), 0);\n                    }\n                }\n                else {\n                    if (-1 < nIconIndex) {\n                        var_8h = (*_sym.imp.USER32.dll_LoadImageW)\n                                           (iVar4, nIconIndex & 0xffff, 1, *(unaff_EDI + 0x1b), *(unaff_EDI + 0x6e), 0);\n                    }\n                    if (var_8h == 0) {\n                        uVar8 = fcn.00418641(1, *(unaff_EDI + 0x1b), *(unaff_EDI + 0x6e), 0);\n                        var_8h = (*_sym.imp.USER32.dll_LoadImageW)(iVar4, uVar8);\n                    }\n                }\n                (*_sym.imp.KERNEL32.DLL_FreeLibrary)(iVar4);\n            }\n            goto code_r0x0040b21b;\n        }\n        if (var_1h != '\\0') goto code_r0x0040b21b;\n    }\n    var_8h = (*_sym.imp.USER32.dll_LoadImageW)(0, hWnd, 1, *(unaff_EDI + 0x1b), *(unaff_EDI + 0x6e), 0x2010);\ncode_r0x0040b21b:\n    if (((var_8h == 0) && (cVar2 = fcn.00419a96(),  cVar2 != '\\0')) && ((nIconIndex < 1 || (var_1h != '\\0')))) {\n        if (nIconIndex < 0) {\n            nIconIndex = -nIconIndex - 1;\n        }\n        puVar7 = &var_8h;\n        if (*(unaff_EDI + 0x1b) < 0x11) {\n            puVar6 = NULL;\n        }\n        else {\n            puVar6 = puVar7;\n            puVar7 = NULL;\n        }\n        (**0x4593fc)(hWnd, nIconIndex, puVar6, puVar7, 1);\n    }\n    if (unaff_EDI[0x12] != 0) {\n        (*_sym.imp.USER32.dll_DestroyIcon)(unaff_EDI[0x12]);\n    }\n    pcVar1 = _sym.imp.USER32.dll_SendMessageW;\n    uVar8 = *unaff_EDI;\n    unaff_EDI[0x12] = var_8h;\n    (*pcVar1)(uVar8, 0x170, var_8h, 0);\n    (*pcVar1)(uVar8, 100, 0x172, 1);\n    (*_sym.imp.USER32.dll_MoveWindow)\n              (uVar8, *(unaff_EDI + 0x1a), *(unaff_EDI + 0x6a), *(unaff_EDI + 0x1b), *(unaff_EDI + 0x6e), 1);\n    bVar5 = var_8h != 0;\n    uVar3 = fcn.0041858e();\n    return uVar3 & 0xffffff00 | bVar5;\n}\n",
        "token_count": 1333
    },
    "0040b6b1": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040b6b1(uint noname_0, int32_t arg_ch, uint arg_10h)\n\n{\n    uint *in_EAX;\n    uint wParam;\n    int16_t *in_EDX;\n    uint lParam;\n    uint var_10h;\n    uint var_4h;\n    \n    if (in_EAX[0x1052] != 0) {\n        if (*in_EDX != 0) {\n            in_EAX[0x1053] = in_EAX[0x1053] + 1;\n            var_4h = arg_10h;\n            lParam = 9;\n            (*_sym.imp.USER32.dll_SendMessageW)(in_EAX[0x1052], 0x133e, in_EAX[0x1053], &lParam);\n            in_EAX[0x1054] = in_EAX[0x1053];\n            *(in_EAX + 0x1056) = 1;\n            *(arg_ch + 0x68) = 0xffff;\n            return 1;\n        }\n        wParam = in_EAX[0x1055];\n        if (*(in_EAX + 0xe) != '\\0') {\n            wParam = in_EAX[0x1054];\n            in_EAX[0x1054] = 0xffffffff;\n        }\n        fcn.0040b756(wParam);\n        *(in_EAX + 0x1056) = 0;\n        if (*(in_EAX + 0xe) != '\\0') {\n            (*_sym.imp.USER32.dll_InvalidateRect)(*in_EAX, 0, 1);\n        }\n    }\n    return 0;\n}\n",
        "token_count": 370
    },
    "0040d8a9": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040d8a9(uint arg_8h, uint *arg_ch, int32_t arg_10h, uint arg_14h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint uVar5;\n    uint var_ch;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    if ((arg_ch != NULL) && (arg_10h != 0)) {\n        iVar2 = (*_sym.imp.USER32.dll_GetFocus)();\n        var_8h = 0;\n        iVar3 = (*_sym.imp.USER32.dll_IsChild)(*arg_ch, iVar2);\n        pcVar1 = _sym.imp.USER32.dll_SendMessageW;\n        if (iVar3 != 0) {\n            var_8h = (*_sym.imp.USER32.dll_SendMessageW)(iVar2, 0x87, 0, 0);\n        }\n        uVar4 = (*pcVar1)(arg_10h, 0x87, 0, 0);\n        if ((var_8h & 8) != 0) {\n            (*pcVar1)(iVar2, 0xb1, 1, 0xffff);\n        }\n        if ((arg_14h != '\\0') && ((uVar4 & 8) != 0)) {\n            (*pcVar1)(arg_10h, 0xb1, 0, 0xffff0000);\n        }\n        if ((uVar4 & 0x30) == 0) {\n            uVar5 = (*_sym.imp.USER32.dll_GetDlgCtrlID)(arg_ch[7], 0);\n        }\n        else {\n            uVar5 = (*_sym.imp.USER32.dll_GetDlgCtrlID)(arg_10h);\n        }\n        fcn.0040d7c0(arg_8h, uVar5);\n        arg_ch[9] = arg_10h;\n        if (arg_10h != iVar2) {\n            (*_sym.imp.USER32.dll_SetFocus)(arg_10h);\n        }\n    }\n    return;\n}\n",
        "token_count": 471
    },
    "0040fc40": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0040fc40(uint lpFilePart)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    uint32_t uVar4;\n    int32_t unaff_EDI;\n    uint lpBuffer;\n    uint var_4h;\n    \n    (*_sym.imp.KERNEL32.DLL_GetFullPathNameW)(lpFilePart, 0x104, &lpBuffer, &lpFilePart);\n    uVar4 = 0;\n    if (*(unaff_EDI + 0x1c) != 0) {\n        do {\n            puVar1 = fcn.00421a8a();\n            iVar2 = fcn.00449521(*puVar1, &lpBuffer);\n            if (iVar2 == 0) {\n                piVar3 = fcn.00421a8a();\n                *piVar3 = *piVar3 + 1;\n                return uVar4;\n            }\n            uVar4 = uVar4 + 1;\n        } while (uVar4 < *(unaff_EDI + 0x1c));\n    }\n    lpFilePart = fcn.004161b7(&lpBuffer);\n    fcn.00403ccb(&lpFilePart);\n    var_4h = 1;\n    fcn.00403ccb(&var_4h);\n    return *(unaff_EDI + 0x1c) - 1;\n}\n",
        "token_count": 317
    },
    "00412348": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "log keystrokes",
            "find graphical window",
            "find taskbar"
        ],
        "decompiled_code": "\nint32_t fcn.00412348(int32_t param_1)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    code *pcVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint uVar6;\n    uint uVar7;\n    uint uVar8;\n    uint uVar9;\n    uint uVar10;\n    uint uVar11;\n    uint uStack12;\n    \n    iVar4 = (*_sym.imp.USER32.dll_GetForegroundWindow)();\n    if (param_1 == iVar4) {\n        iVar5 = 1;\n    }\n    else {\n        if (iVar4 == 0) {\n            iVar4 = (*_sym.imp.USER32.dll_FindWindowW)(0x45cdd8, 0);\n        }\n        iVar5 = (*_sym.imp.USER32.dll_IsIconic)(param_1);\n        if (iVar5 != 0) {\n            (*_sym.imp.USER32.dll_ShowWindow)(param_1, 9);\n        }\n        iVar5 = (*_sym.imp.USER32.dll_SetForegroundWindow)(param_1);\n        pcVar1 = _sym.imp.USER32.dll_GetWindowThreadProcessId;\n        if (iVar5 == 0) {\n            uVar6 = (*_sym.imp.USER32.dll_GetWindowThreadProcessId)(iVar4, 0);\n            uVar7 = (*_sym.imp.KERNEL32.DLL_GetCurrentThreadId)();\n            uVar8 = (*pcVar1)(uStack12, 0);\n            pcVar1 = _sym.imp.USER32.dll_AttachThreadInput;\n            uVar11 = uVar7;\n            (*_sym.imp.USER32.dll_AttachThreadInput)(uVar7, uVar8, 1);\n            uVar10 = 1;\n            uVar9 = uVar7;\n            (*pcVar1)(uVar7, uVar6, 1);\n            (*pcVar1)(uVar6, uVar8, 1);\n            iVar4 = (*_sym.imp.USER32.dll_SetForegroundWindow)(uStack12);\n            pcVar3 = _sym.imp.USER32.dll_MapVirtualKeyW;\n            if (iVar4 == 0) {\n                uVar6 = (*_sym.imp.USER32.dll_MapVirtualKeyW)(0x12, 0, 0, 0);\n                pcVar2 = _sym.imp.USER32.dll_keybd_event;\n                (*_sym.imp.USER32.dll_keybd_event)(0x12, uVar6);\n                uVar6 = (*pcVar3)(0x12, 0, 2, 0);\n                (*pcVar2)(0x12, uVar6);\n                uVar8 = 0;\n                uVar6 = (*pcVar3)(0x12, 0, 0, 0);\n                (*pcVar2)(0x12, uVar6);\n                uVar6 = (*pcVar3)(0x12, 0, 2, 0);\n                (*pcVar2)(0x12, uVar6);\n                uVar6 = uVar10;\n                uVar7 = uVar11;\n                (*_sym.imp.USER32.dll_SetForegroundWindow)(uVar8);\n            }\n            (*pcVar1)(uVar7, uVar9, 0);\n            iVar5 = 0;\n            (*pcVar1)(uVar7, uVar6);\n            (*pcVar1)(uVar6, uVar9, 0);\n        }\n    }\n    return iVar5;\n}\n",
        "token_count": 755
    },
    "00412f89": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00412f89(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint lpData;\n    uint var_94h;\n    uint var_90h;\n    \n    if (*0x4679c6 != '\\0') {\n        *(param_1 + 0xe18) = 0;\n        *0x4679c6 = '\\0';\n        lpData = 0x98;\n        puVar2 = &var_94h;\n        for (iVar1 = 0x25; iVar1 != 0; iVar1 = iVar1 + -1) {\n            *puVar2 = 0;\n            puVar2 = puVar2 + 1;\n        }\n        var_94h = *0x467a00;\n        var_90h = 1;\n        (**0x4593f8)(2, &lpData);\n    }\n    return;\n}\n",
        "token_count": 207
    },
    "00415cef": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00415cef(int16_t *arg_8h, uint arg_ch)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint var_210h;\n    uint var_ch;\n    \n    fcn.00416d61();\n    fcn.00416e83(&var_ch, 0x45d0dc);\n    fcn.00416f01(0x22);\n    fcn.00417064(arg_8h);\n    fcn.00416f01(0x22);\n    fcn.00417064(0x45d0c0);\n    pcVar1 = _sym.imp.WINMM.dll_mciSendStringW;\n    (*_sym.imp.WINMM.dll_mciSendStringW)(0x45d098, &var_210h, 0x100, 0);\n    if (var_210h != 0) {\n        (*pcVar1)(0x45d07c, 0, 0, 0);\n    }\n    if (*arg_8h != 0) {\n        iVar2 = (*pcVar1)(var_ch, 0, 0, 0);\n        if (iVar2 == 0) {\n            if (arg_ch == '\\0') {\n                uVar3 = 0x45d040;\n            }\n            else {\n                (*pcVar1)(0x45d058, 0, 0, 0);\n                uVar3 = 0x45d07c;\n            }\n            (*pcVar1)(uVar3, 0, 0, 0);\n        }\n    }\n    fcn.0044951c(var_ch);\n    return;\n}\n",
        "token_count": 383
    },
    "00416122": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "delay execution"
        ],
        "decompiled_code": "\nvoid fcn.00416122(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t unaff_EDI;\n    uint lpFrequency;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    pcVar1 = _sym.imp.KERNEL32.DLL_QueryPerformanceCounter;\n    if (-1 < unaff_EDI) {\n        if (((unaff_EDI == 0) || ((-(*0x479bb5 != '\\0') & 0x28) + 0xf <= unaff_EDI)) ||\n           (iVar2 = (*_sym.imp.KERNEL32.DLL_QueryPerformanceCounter)(&var_10h),  iVar2 == 0)) {\n            (*_sym.imp.KERNEL32.DLL_Sleep)();\n        }\n        else {\n            (**0x45911c)(&lpFrequency);\n            do {\n                (*_sym.imp.KERNEL32.DLL_Sleep)(0);\n                (*pcVar1)(&var_8h);\n                var_18h = var_8h - var_10h;\n                var_14h = (var_4h - var_ch) - (var_8h < var_10h);\n                uVar3 = fcn.00458664();\n            } while (uVar3 < unaff_EDI);\n        }\n    }\n    return;\n}\n",
        "token_count": 337
    },
    "00416ebe": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00416ebe(int32_t arg_8h)\n\n{\n    int32_t in_EAX;\n    uint var_ch;\n    \n    if (in_EAX == arg_8h) {\n        fcn.00416f2f(&var_ch);\n        fcn.00416e71();\n        fcn.0044951c(var_ch);\n    }\n    else {\n        fcn.00417002(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 103
    },
    "00417404": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00417404(uint arg_8h, uint32_t arg_ch)\n\n{\n    uint var_ch;\n    \n    fcn.00416d61();\n    fcn.00417113();\n    fcn.00416dcf();\n    fcn.0044951c(var_ch);\n    return arg_8h;\n}\n",
        "token_count": 74
    },
    "004174a6": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004174a6(uint arg_8h)\n\n{\n    uint var_ch;\n    \n    fcn.00416d61();\n    fcn.00417113();\n    fcn.00416dcf();\n    fcn.0044951c(var_ch);\n    return arg_8h;\n}\n",
        "token_count": 69
    },
    "00417867": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00417867(int32_t *arg_8h, uint arg_ch, int32_t **arg_10h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint var_20h;\n    uint var_1ch;\n    uchar var_18h;\n    uchar var_17h;\n    uchar var_16h;\n    uchar var_15h;\n    uchar var_14h;\n    uchar var_13h;\n    uchar var_12h;\n    uchar var_11h;\n    uint var_10h;\n    uint var_ch;\n    uchar var_8h;\n    uchar var_7h;\n    uchar var_6h;\n    uchar var_5h;\n    uchar var_4h;\n    uchar var_3h;\n    uchar var_2h;\n    uchar var_1h;\n    \n    if (*(arg_8h + 2) == '\\0') {\n        iVar1 = fcn.00418318(arg_ch, 0x45a900);\n        if (iVar1 == 0) {\n            iVar1 = fcn.00418318(arg_ch, 0x45a910);\n            if (iVar1 == 0) {\n                iVar1 = fcn.00418318(arg_ch, 0x45ceb8);\n                if (iVar1 == 0) {\n                    var_10h = 0x1b;\n                    var_ch._0_2_ = 0;\n                    var_ch._2_2_ = 0;\n                    var_8h = 0xc0;\n                    var_7h = 0;\n                    var_6h = 0;\n                    var_5h = 0;\n                    var_4h = 0;\n                    var_3h = 0;\n                    var_2h = 0;\n                    var_1h = 0x46;\n                    var_20h = 0x4c1e39e1;\n                    var_1ch._0_2_ = 0xe3e3;\n                    var_1ch._2_2_ = 0x4296;\n                    var_18h = 0xaa;\n                    var_17h = 0x86;\n                    var_16h = 0xec;\n                    var_15h = 0x93;\n                    var_14h = 0x8d;\n                    var_13h = 0x89;\n                    var_12h = 0x6e;\n                    var_11h = 0x92;\n                    iVar1 = fcn.00418318(arg_ch, 0x45a930);\n                    if (iVar1 == 0) {\n                        iVar1 = fcn.00418318(arg_ch, 0x45a920);\n                        if (iVar1 == 0) {\n                            iVar1 = fcn.00418318(arg_ch, 0x45a8f0);\n                            if (iVar1 == 0) {\n                                iVar1 = fcn.00418318(arg_ch, &var_10h);\n                                if (iVar1 == 0) {\n                                    iVar1 = fcn.00418318(arg_ch, 0x45a8e0);\n                                    if (iVar1 == 0) {\n                                        iVar1 = fcn.00418318(arg_ch, 0x45a8d0);\n                                        if (iVar1 == 0) {\n                                            iVar1 = fcn.00418318(arg_ch, &var_20h);\n                                            if (iVar1 == 0) goto code_r0x00417991;\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    goto code_r0x004179a0;\n                }\n            }\n        }\ncode_r0x00417991:\n        *arg_10h = arg_8h;\n        (**(*arg_8h + 4))(arg_8h);\n        uVar2 = 0;\n    }\n    else {\ncode_r0x004179a0:\n        uVar2 = 0x80040202;\n    }\n    return uVar2;\n}\n",
        "token_count": 883
    },
    "0041a317": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0041a317(uint32_t arg_8h, int32_t arg_ch, uint32_t arg_10h, int32_t arg_14h)\n\n{\n    double dVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    float10 extraout_ST0;\n    int64_t iVar6;\n    uint var_10h;\n    uint var_ch;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    iVar5 = arg_14h;\n    uVar2 = arg_10h;\n    if (_arg_10h == *0x462048) {\n        iVar4 = 0;\n    }\n    else {\n        iVar6 = fcn.00458664();\n        iVar4 = iVar6;\n        dVar1 = iVar6;\n        arg_14h = dVar1 >> 0x20;\n        arg_10h = SUB84(dVar1, 0);\n        if (*0x462048 <= extraout_ST0) {\n            var_8h = SUB84(dVar1 + *0x462040, 0);\n            var_4h = dVar1 + *0x462040 >> 0x20;\n            iVar3 = (((var_4h - arg_14h) - (var_8h < arg_10h)) - arg_ch) - (var_8h - arg_10h < arg_8h);\n            iVar5 = (iVar5 - arg_14h) - (uVar2 < arg_10h);\n            if ((iVar3 <= iVar5) && ((iVar3 < iVar5 || ((var_8h - arg_10h) - arg_8h <= uVar2 - arg_10h)))) {\n                iVar4 = iVar4 + 1;\n            }\n        }\n        else {\n            var_8h = SUB84(dVar1 - *0x462040, 0);\n            var_4h = dVar1 - *0x462040 >> 0x20;\n            iVar3 = (((var_4h - arg_14h) - (var_8h < arg_10h)) - arg_ch) - (var_8h - arg_10h < arg_8h);\n            iVar5 = (iVar5 - arg_14h) - (uVar2 < arg_10h);\n            if ((iVar3 <= iVar5) && ((iVar3 < iVar5 || ((var_8h - arg_10h) - arg_8h <= uVar2 - arg_10h)))) {\n                iVar4 = iVar4 + -1;\n            }\n        }\n    }\n    return iVar4;\n}\n",
        "token_count": 596
    },
    "00420568": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00420568(int32_t arg_8h)\n\n{\n    code *pcVar1;\n    char cVar2;\n    uint var_2ch;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    cVar2 = fcn.004327a9(arg_8h, *(arg_8h + 700), &var_4h, &var_10h, &var_ch, &var_8h);\n    if (cVar2 == '\\x01') {\n        var_2ch = 0;\n        var_20h = 0;\n        var_24h = 1;\n        fcn.00416e83(arg_8h + 700, 0x45bfe0);\n        fcn.00418bb9(*0x4679dc);\n        fcn.00416d81(0x45d5e8);\n        pcVar1 = _sym.imp.USER32.dll_CharUpperBuffW;\n        (*_sym.imp.USER32.dll_CharUpperBuffW)(var_1ch, var_18h);\n        fcn.004181c8(0x47bd30, &var_1ch, &var_2ch);\n        fcn.0044951c(var_1ch);\n        fcn.00418bb9(*0x4679d8);\n        fcn.00416d81(0x45d5d0);\n        (*pcVar1)(var_1ch, var_18h);\n        fcn.004181c8(0x47bd30, &var_1ch, &var_2ch);\n        fcn.0044951c(var_1ch);\n        *(arg_8h + 0x290) = 0;\n        *0x4679c8 = 0;\n        fcn.00421702(arg_8h, var_4h + 1, 1, 0);\n        *(arg_8h + 0x290) = 1;\n        fcn.0041858e();\n    }\n    return;\n}\n",
        "token_count": 492
    },
    "0042438f": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "get disk size"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00424400)\n// WARNING: Removing unreachable block (ram,0x0042441c)\n// WARNING: Removing unreachable block (ram,0x0042448d)\n\nuint __cdecl fcn.0042438f(int32_t arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    int16_t *piVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    uint *puVar5;\n    uint *puVar6;\n    uint *puVar7;\n    uint var_48h;\n    uint var_44h;\n    uint var_3ch;\n    uint var_34h;\n    uint var_30h;\n    uint var_28h;\n    uint var_18h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    (**0x4591d8)(1);\n    fcn.00418bb9(0);\n    uVar1 = fcn.00418641();\n    fcn.00416d81(uVar1);\n    piVar2 = fcn.00416e60();\n    if (*piVar2 != 0x5c) {\n        fcn.00417064(0x45c9ac);\n    }\n    fcn.00426870();\n    puVar7 = &var_ch;\n    puVar6 = &var_10h;\n    puVar5 = &var_8h;\n    puVar4 = &var_4h;\n    iVar3 = (**0x4591dc)(var_48h, puVar4, puVar5, puVar6, puVar7);\n    if (iVar3 == 0) {\n        fcn.00421898(0, puVar4, puVar5, puVar6, puVar7);\n    }\n    else {\n        fcn.00418c65();\n    }\n    fcn.0044951c(var_48h);\n    return 0;\n}\n",
        "token_count": 440
    },
    "004244a5": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "get disk size"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00424516)\n// WARNING: Removing unreachable block (ram,0x00424532)\n// WARNING: Removing unreachable block (ram,0x004245a3)\n\nuint __cdecl fcn.004244a5(int32_t arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    int16_t *piVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    uint *puVar5;\n    uint *puVar6;\n    uint *puVar7;\n    uint var_48h;\n    uint var_44h;\n    uint var_3ch;\n    uint var_34h;\n    uint var_30h;\n    uint var_28h;\n    uint var_18h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    (**0x4591d8)(1);\n    fcn.00418bb9(0);\n    uVar1 = fcn.00418641();\n    fcn.00416d81(uVar1);\n    piVar2 = fcn.00416e60();\n    if (*piVar2 != 0x5c) {\n        fcn.00417064(0x45c9ac);\n    }\n    fcn.00426870();\n    puVar7 = &var_10h;\n    puVar6 = &var_ch;\n    puVar5 = &var_8h;\n    puVar4 = &var_4h;\n    iVar3 = (**0x4591dc)(var_48h, puVar4, puVar5, puVar6, puVar7);\n    if (iVar3 == 0) {\n        fcn.00421898(0, puVar4, puVar5, puVar6, puVar7);\n    }\n    else {\n        fcn.00418c65();\n    }\n    fcn.0044951c(var_48h);\n    return 0;\n}\n",
        "token_count": 439
    },
    "00425460": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00425460(int32_t arg_8h, uint arg_ch)\n\n{\n    uint arg_8h_00;\n    int32_t iVar1;\n    uint var_22ch;\n    uint var_20h;\n    uint var_1ch;\n    uint *var_18h;\n    uint var_14h;\n    ushort var_10h;\n    uint var_eh;\n    uint var_ah;\n    uint var_6h;\n    \n    arg_8h_00 = fcn.00418641();\n    fcn.00415029(arg_8h_00);\n    iVar1 = fcn.0044985c(&var_22ch);\n    *(&var_22ch + iVar1 * 2 + 2) = 0;\n    var_18h = &var_22ch;\n    var_ah = 0;\n    var_6h = 0;\n    var_eh = 0;\n    var_20h = 0;\n    var_14h = 0;\n    var_1ch = 3;\n    var_10h = 0x54;\n    iVar1 = (**0x4593e8)(&var_20h);\n    if (iVar1 != 0) {\n        fcn.00418bb9(0);\n    }\n    return 0;\n}\n",
        "token_count": 291
    },
    "004254ea": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0042550a)\n// WARNING: Removing unreachable block (ram,0x00425514)\n// WARNING: Removing unreachable block (ram,0x0042551b)\n// WARNING: Removing unreachable block (ram,0x00425516)\n// WARNING: Removing unreachable block (ram,0x00425520)\n// WARNING: Removing unreachable block (ram,0x00425527)\n// WARNING: Removing unreachable block (ram,0x00425547)\n\nuint __cdecl fcn.004254ea(uint arg_8h, uint arg_ch)\n\n{\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.004268be();\n    fcn.00418bb9(0);\n    return 0;\n}\n",
        "token_count": 166
    },
    "004269b1": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004269b1(int32_t arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint var_34h;\n    uint var_30h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.00416d61();\n    var_14h = 0;\n    var_ch = 1;\n    var_8h = 0;\n    if ((*0x47841c == '\\x01') || (cVar1 = fcn.00404432(),  cVar1 == '\\0')) {\n        var_34h = 0;\n        fcn.00416e83(&var_30h, 0x45bfe0);\n        var_24h = 0;\n        var_20h = 0;\n        var_1ch = 0;\n        var_18h = 0;\n    }\n    if (*0x47841c == '\\x01') {\n        fcn.00421898(0);\n    }\n    if ((*(arg_8h + 0xc) != 0) && (iVar2 = fcn.00418733(),  iVar2 == 1)) {\n        fcn.0041a000(1);\n        fcn.0041a132(1);\n        fcn.00418bb9(var_34h);\n        fcn.0041a132(1);\n        fcn.00418c4c(var_24h);\n        fcn.0041a132(1);\n        fcn.00418c4c(var_20h);\n        fcn.0041a132(1);\n        fcn.00418bb9(var_1ch);\n        fcn.0041a132(1);\n    }\n    fcn.00418bb9(var_34h);\n    fcn.0041858e();\n    fcn.0044951c(var_30h);\n    return 0;\n}\n",
        "token_count": 470
    },
    "00427130": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00427130(uint arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint *arg_10h;\n    uint *arg_14h;\n    uint *arg_18h;\n    uint *arg_1ch;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar2 = fcn.00421c76();\n    if (iVar2 != 0) {\n        arg_1ch = &arg_8h;\n        arg_18h = &var_8h;\n        arg_14h = &var_ch;\n        arg_10h = &var_10h;\n        uVar3 = fcn.00418641();\n        cVar1 = fcn.004327a9(var_4h, uVar3, arg_10h, arg_14h, arg_18h, arg_1ch);\n        if (cVar1 == '\\0') {\n            fcn.0041fdea(0x85, 0xffffffff);\n            return 1;\n        }\n    }\n    uVar3 = fcn.00418641();\n    fcn.00418733();\n    uVar3 = fcn.00409e4b(uVar3);\n    fcn.00418bb9(uVar3);\n    return 0;\n}\n",
        "token_count": 312
    },
    "00428483": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00428483(uint arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint arg_8h_00;\n    uint *arg_10h;\n    uint *arg_14h;\n    uint *arg_18h;\n    uint *arg_1ch;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar2 = fcn.00421c76();\n    if (iVar2 != 0) {\n        arg_1ch = &arg_8h;\n        arg_18h = &var_8h;\n        arg_14h = &var_ch;\n        arg_10h = &var_10h;\n        uVar3 = fcn.00418641();\n        cVar1 = fcn.004327a9(var_4h, uVar3, arg_10h, arg_14h, arg_18h, arg_1ch);\n        if (cVar1 == '\\0') {\n            fcn.0041fdea(0x85, 0xffffffff);\n            return 1;\n        }\n    }\n    uVar3 = fcn.00418641();\n    arg_8h_00 = fcn.00418733();\n    uVar3 = fcn.0040d245(arg_8h_00, uVar3);\n    fcn.00418bb9(uVar3);\n    return 0;\n}\n",
        "token_count": 334
    },
    "0042a2fb": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0042a370)\n\nvoid fcn.0042a2fb(void)\n\n{\n    int32_t *in_EAX;\n    code *pcVar1;\n    uint hLibModule;\n    uint var_4h;\n    \n    if (in_EAX[3] != NULL) {\n        (***in_EAX[3])(1);\n    }\n    *in_EAX[2] = 0;\n    if (*(in_EAX[2] + 0x10) != 0) {\n        pcVar1 = fcn.0043006c(*(in_EAX[2] + 0x10));\n        (*pcVar1)();\n        *(in_EAX[2] + 0x10) = 0;\n    }\n    if (*in_EAX != 0) {\n        pcVar1 = fcn.0043006c(*in_EAX);\n        (*pcVar1)();\n    }\n    if (in_EAX[1] != 0) {\n        pcVar1 = fcn.0043006c(in_EAX[1]);\n        (*pcVar1)();\n    }\n    if (*(in_EAX[2] + 8) != 0) {\n        *(in_EAX[2] + 4) = 0xffffffff;\n    }\n    return;\n}\n",
        "token_count": 285
    },
    "0042a4bf": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0042a4dc)\n// WARNING: Removing unreachable block (ram,0x0042a4e9)\n// WARNING: Removing unreachable block (ram,0x0042a4e4)\n// WARNING: Removing unreachable block (ram,0x0042a4ee)\n// WARNING: Removing unreachable block (ram,0x0042a4fd)\n// WARNING: Removing unreachable block (ram,0x0042a4fa)\n// WARNING: Removing unreachable block (ram,0x0042a4ff)\n// WARNING: Removing unreachable block (ram,0x0042a50d)\n\nuint __cdecl fcn.0042a4bf(uint arg_8h)\n\n{\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0043021f();\n    return 0;\n}\n",
        "token_count": 185
    },
    "0042ab9f": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0042abe3)\n\nuint fcn.0042ab9f(void)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int32_t unaff_ESI;\n    uint hLibModule;\n    uint var_4h;\n    \n    if (*(unaff_ESI + 0x318) == '\\0') {\n        uVar2 = 0;\n    }\n    else {\n        pcVar1 = fcn.0043006c(*(unaff_ESI + 0x328));\n        (*pcVar1)();\n        *(unaff_ESI + 0x328) = 0;\n        while (*(unaff_ESI + 0x318) != '\\0') {\n            (*_sym.imp.KERNEL32.DLL_Sleep)(10);\n        }\n        uVar2 = 1;\n    }\n    return uVar2;\n}\n",
        "token_count": 193
    },
    "0042b33b": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0042b33b(uint arg_8h, uint *arg_ch, uint32_t *arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    uint uVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint var_84ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    int32_t var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint *var_14h;\n    uint var_10h;\n    int32_t hLibModule;\n    int32_t var_4h;\n    \n    hLibModule = 0;\n    var_4h = 0;\n    fcn.004302bb();\n    if (var_4h != 0) {\n        var_34h = 0x400;\n        var_28h = 0x400;\n        var_20h = 0x400;\n        var_18h = 0x400;\n        var_10h = 0x400;\n        var_38h = arg_14h;\n        var_2ch = arg_18h;\n        var_24h = arg_1ch;\n        var_14h = &var_84ch;\n        var_48h = 0x3c;\n        var_40h = 1;\n        var_44h = 0;\n        uVar1 = fcn.0044985c(arg_8h, 0, &var_48h);\n        pcVar2 = fcn.00430185(arg_8h, uVar1);\n        iVar3 = (*pcVar2)();\n        if (iVar3 != 0) {\n            fcn.004495ce();\n            *arg_10h = var_30h;\n            if (var_3ch == 1) {\n                *arg_ch = 1;\n            }\n            else if (var_3ch == 2) {\n                *arg_ch = 2;\n            }\n            else {\n                *arg_ch = 3;\n            }\n            if (hLibModule != 0) {\n                (*_sym.imp.KERNEL32.DLL_FreeLibrary)(hLibModule);\n            }\n            return 1;\n        }\n    }\n    if (hLibModule != 0) {\n        (*_sym.imp.KERNEL32.DLL_FreeLibrary)(hLibModule);\n    }\n    return 0;\n}\n",
        "token_count": 615
    },
    "0042e4f3": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "get memory capacity"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0042e4f3(uint noname_0, uint arg_ch)\n\n{\n    code *pcVar1;\n    uint var_54h;\n    int32_t var_50h;\n    int64_t iStack80;\n    int64_t iStack72;\n    int64_t iStack64;\n    uint var_34h;\n    int32_t var_30h;\n    int32_t var_2ch;\n    int32_t var_28h;\n    int32_t var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_ch;\n    double dStack12;\n    \n    var_14h = 0;\n    var_ch = 0;\n    fcn.004302e2();\n    if (var_ch == 0) {\n        var_34h = 0x20;\n        (**0x459200)(&var_34h);\n        fcn.0041a000(1);\n        dStack12 = var_30h;\n        if (var_30h < 0) {\n            dStack12 = dStack12 + *0x462098;\n        }\n        fcn.00430539(0, dStack12);\n        dStack12 = var_2ch;\n        if (var_2ch < 0) {\n            dStack12 = dStack12 + *0x462098;\n        }\n        fcn.00430539(1, dStack12 / *0x4620b8);\n        dStack12 = var_28h;\n        if (var_28h < 0) {\n            dStack12 = dStack12 + *0x462098;\n        }\n        fcn.00430539(2, dStack12 / *0x4620b8);\n        dStack12 = var_24h;\n        if (var_24h < 0) {\n            dStack12 = dStack12 + *0x462098;\n        }\n        fcn.00430539(3, dStack12 / *0x4620b8);\n        dStack12 = var_20h;\n        if (var_20h < 0) {\n            dStack12 = dStack12 + *0x462098;\n        }\n        fcn.00430539(4, dStack12 / *0x4620b8);\n        dStack12 = var_1ch;\n        if (var_1ch < 0) {\n            dStack12 = dStack12 + *0x462098;\n        }\n        fcn.00430539(5, dStack12 / *0x4620b8);\n        dStack12 = var_18h;\n        if (var_18h < 0) {\n            dStack12 = dStack12 + *0x462098;\n        }\n    }\n    else {\n        var_54h = 0x40;\n        pcVar1 = fcn.004301c7(&var_54h);\n        (*pcVar1)();\n        fcn.0041a000(1);\n        dStack12 = var_50h;\n        if (var_50h < 0) {\n            dStack12 = dStack12 + *0x462098;\n        }\n        fcn.00430539(0, dStack12);\n        dStack12 = iStack80;\n        fcn.00430539(1, dStack12 / *0x4620b8);\n        dStack12 = iStack72;\n        fcn.00430539(2, dStack12 / *0x4620b8);\n        dStack12 = iStack64;\n        fcn.00430539(3, dStack12 / *0x4620b8);\n        dStack12 = CONCAT44(var_30h, var_34h);\n        fcn.00430539(4, dStack12 / *0x4620b8);\n        dStack12 = CONCAT44(var_28h, var_2ch);\n        fcn.00430539(5, dStack12 / *0x4620b8);\n        dStack12 = CONCAT44(var_20h, var_24h);\n    }\n    fcn.00430539(6, dStack12 / *0x4620b8);\n    if (var_14h != 0) {\n        (*_sym.imp.KERNEL32.DLL_FreeLibrary)(var_14h);\n    }\n    return 0;\n}\n",
        "token_count": 985
    },
    "0042f801": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0042f801(int32_t arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    uint var_110h;\n    uint var_10ch;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    uVar1 = fcn.00418733();\n    var_ch = *(in_ECX + 0x894) / 1000;\n    var_110h = 1;\n    var_8h = *(in_ECX + 0x894) - var_ch;\n    var_10ch = uVar1;\n    iVar2 = sub.WSOCK32.dll_select(0, &var_110h, 0, 0, &var_ch);\n    if ((iVar2 < 1) || (iVar2 = sub.WSOCK32.dll___WSAFDIsSet(uVar1, &var_110h),  iVar2 == 0)) {\n        sub.WSOCK32.dll_WSAGetLastError(0);\n        fcn.00421898();\n        uVar1 = 0xffffffff;\n    }\n    else {\n        uVar1 = sub.WSOCK32.dll_accept(uVar1, 0, 0);\n    }\n    fcn.00418bb9(uVar1);\n    return 0;\n}\n",
        "token_count": 305
    },
    "00433489": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1ch\n\nuint32_t __cdecl fcn.00433489(uint *arg_8h, uint32_t *arg_ch, int32_t *arg_10h, int32_t arg_14h, int32_t arg_18h)\n\n{\n    int32_t *piVar1;\n    char cVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint8_t uVar5;\n    uint unaff_ESI;\n    uint *arg_8h_00;\n    uint var_1ch;\n    uint var_14h;\n    uint var_10h;\n    uint var_8h;\n    \n    var_1ch = 0;\n    var_10h = 0;\n    *arg_ch = *arg_ch + 1;\n    var_14h = 1;\n    if (*arg_ch < arg_8h[3]) {\n        do {\n            iVar3 = *arg_10h;\n            if (iVar3 != 0) {\n                iVar3 = *(iVar3 + 0x20c);\n            }\n            if (iVar3 < arg_18h) {\n                fcn.0040f269();\n                arg_8h_00 = 0x7d;\ncode_r0x0043360c:\n                fcn.0041fdea(arg_8h_00, unaff_ESI);\ncode_r0x00433614:\n                uVar5 = 0;\ncode_r0x00433616:\n                uVar4 = fcn.0041858e();\n                return uVar4 & 0xffffff00 | uVar5;\n            }\n            iVar3 = fcn.0040f269();\n            if (*(iVar3 + 8) != 0x13) {\n                iVar3 = *arg_10h;\n                if (iVar3 != 0) {\n                    iVar3 = *(iVar3 + 0x20c);\n                }\n                if (arg_18h < iVar3) {\n                    fcn.0040f269();\n                    arg_8h_00 = 0x7e;\n                }\n                else {\n                    fcn.0040f269();\n                    iVar3 = fcn.00437a3e(arg_8h, arg_ch, &var_1ch);\n                    if (iVar3 != 0) goto code_r0x00433614;\n                    fcn.00419f46();\n                    iVar3 = 0;\n                    if (0 < arg_18h) {\n                        do {\n                            fcn.00419f66();\n                            iVar3 = iVar3 + 1;\n                        } while (iVar3 < arg_18h);\n                    }\n                    iVar3 = fcn.0041a132(0);\n                    if (iVar3 != 0) {\n                        arg_8h_00 = &var_1ch;\n                        fcn.00418a19();\n                        goto code_r0x0043358c;\n                    }\n                    arg_8h_00 = 0x7a;\n                }\n                goto code_r0x0043360c;\n            }\n            *(arg_14h + arg_18h * 4) = 0;\n            arg_8h_00 = arg_8h;\n            cVar2 = fcn.00433489(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n            if (cVar2 == '\\0') goto code_r0x00433614;\ncode_r0x0043358c:\n            iVar3 = fcn.0040f269();\n            if (*(iVar3 + 8) != 0x11) {\n                uVar4 = *arg_ch;\n                iVar3 = fcn.0040f269();\n                if (*(iVar3 + 8) == 0x14) {\n                    *arg_ch = uVar4 + 1;\n                    uVar5 = 1;\n                    goto code_r0x00433616;\n                }\n                fcn.0040f269();\n                goto code_r0x0043360c;\n            }\n            piVar1 = arg_14h + -4 + arg_18h * 4;\n            *piVar1 = *piVar1 + 1;\n            *arg_ch = *arg_ch + 1;\n        } while (*arg_ch < arg_8h[3]);\n    }\n    uVar4 = fcn.0041858e();\n    return uVar4 & 0xffffff00;\n}\n",
        "token_count": 975
    },
    "004341ff": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.004341ff(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    int32_t *unaff_ESI;\n    uint var_38h;\n    int32_t var_34h;\n    int32_t var_30h;\n    uint var_28h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_1h;\n    \n    *in_EAX = *in_EAX + 1;\n    var_20h = 1;\n    var_10h = 1;\n    var_28h = 0;\n    var_1ch = 0;\n    var_18h = 0;\n    var_ch = 0;\n    var_1h._0_1_ = '\\0';\n    var_38h = 2;\n    iVar1 = fcn.0040f269();\n    if (*(iVar1 + 8) == 0xf) {\n        iVar1 = *unaff_ESI;\n        var_34h = iVar1 + -1;\n        arg_ch = 0;\n        while( true ) {\n            *unaff_ESI = iVar1 + 1;\n            iVar1 = fcn.0040fd7d();\n            if ((iVar1 == 0) || (var_1h != '\\0')) break;\n            iVar1 = *unaff_ESI;\n            var_8h = *(arg_8h + 0x6e4) + -0x28 + iVar1 * 0x28;\n            iVar2 = fcn.0040f269();\n            if (*(iVar2 + 8) == 0) {\n                piVar3 = fcn.0040f269();\n                if (*piVar3 == 0xb) {\n                    arg_ch = arg_ch + 1;\n                }\n                else if (*piVar3 == 0xc) {\n                    if (arg_ch == 0) {\n                        var_30h = iVar1 + -1;\n                        var_1h._0_1_ = '\\x01';\n                    }\n                    else {\n                        arg_ch = arg_ch + -1;\n                    }\n                }\n            }\n            iVar1 = *unaff_ESI;\n        }\n        fcn.004219ff(&var_38h);\n        *unaff_ESI = var_34h + 1;\n    }\n    else {\n        iVar1 = fcn.0040f269();\n        fcn.0041fdea(0x72, *(iVar1 + 0xc));\n    }\n    fcn.0041858e();\n    fcn.0041858e();\n    return;\n}\n",
        "token_count": 652
    },
    "00438a5f": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Removing unreachable block (ram,0x00438ab1)\n// WARNING: Removing unreachable block (ram,0x00438abb)\n// WARNING: Removing unreachable block (ram,0x00438ac1)\n\nbool __cdecl fcn.00438a5f(int32_t arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    uint var_1h;\n    \n    fcn.00418641();\n    cVar1 = fcn.00414778();\n    if (cVar1 != '\\0') {\n        fcn.00418bb9();\n    }\n    else {\n        fcn.0041fdea(0x88, 0xffffffff);\n    }\n    return cVar1 == '\\0';\n}\n",
        "token_count": 176
    },
    "0043ef9c": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0043ef9c(uint arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint *arg_10h;\n    uint *arg_14h;\n    uint *arg_18h;\n    uint *arg_1ch;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar2 = fcn.00421c76();\n    if (iVar2 != 0) {\n        arg_1ch = &arg_8h;\n        arg_18h = &var_8h;\n        arg_14h = &var_ch;\n        arg_10h = &var_10h;\n        uVar3 = fcn.00418641();\n        cVar1 = fcn.004327a9(var_4h, uVar3, arg_10h, arg_14h, arg_18h, arg_1ch);\n        if (cVar1 == '\\0') {\n            fcn.0041fdea(0x85, 0xffffffff);\n            return 1;\n        }\n    }\n    uVar3 = fcn.00418641();\n    fcn.00418733();\n    uVar3 = fcn.00413b9d(uVar3);\n    fcn.00418bb9(uVar3);\n    return 0;\n}\n",
        "token_count": 314
    },
    "0043f295": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0043f295(uint arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint *arg_10h;\n    uint *arg_14h;\n    uint *arg_18h;\n    uint *arg_1ch;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar2 = fcn.00421c76();\n    if (iVar2 != 0) {\n        arg_1ch = &arg_8h;\n        arg_18h = &var_8h;\n        arg_14h = &var_ch;\n        arg_10h = &var_10h;\n        uVar3 = fcn.00418641();\n        cVar1 = fcn.004327a9(var_4h, uVar3, arg_10h, arg_14h, arg_18h, arg_1ch);\n        if (cVar1 == '\\0') {\n            fcn.0041fdea(0x85, 0xffffffff);\n            return 1;\n        }\n    }\n    uVar3 = fcn.00418641();\n    fcn.00418733(uVar3);\n    uVar3 = fcn.00413bdf();\n    fcn.00418bb9(uVar3);\n    return 0;\n}\n",
        "token_count": 312
    },
    "0043fcfc": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0043fcfc(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t extraout_EDX;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    fcn.0043f453();\n    iVar1 = fcn.0043f4ea(1);\n    iVar2 = 0;\n    if (iVar1 < 1) {\n        if (iVar1 < 0) {\n            fcn.00421898(0);\n            iVar2 = extraout_EDX;\n        }\n    }\n    else {\n        fcn.004032d4(0);\n        fcn.0041a000(1);\n        fcn.0041a132(1);\n        fcn.00418bb9(var_10h);\n        fcn.0041a132(1);\n        fcn.00418bb9(var_ch);\n        fcn.0041a132(1);\n        fcn.00418bb9(var_8h - var_10h);\n        fcn.0041a132(1);\n        iVar2 = var_4h - var_ch;\n    }\n    fcn.00418bb9(iVar2);\n    return 0;\n}\n",
        "token_count": 297
    },
    "00441203": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00441203(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    fcn.0043f453();\n    fcn.00418bb9(0);\n    iVar1 = fcn.0043f4ea(1);\n    if ((iVar1 < 1) || (iVar1 = (*_sym.imp.USER32.dll_GetClientRect)(**(in_ECX + 0x718), &var_10h),  iVar1 == 0)) {\n        fcn.00421898(0);\n    }\n    else {\n        fcn.0041a000(1);\n        fcn.0041a132(1);\n        fcn.00418bb9(var_8h - var_10h);\n        fcn.0041a132(1);\n        fcn.00418bb9(var_4h - var_ch);\n    }\n    return 0;\n}\n",
        "token_count": 244
    },
    "00443295": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00443295(int32_t arg_8h, uint32_t arg_ch)\n\n{\n    uint8_t uVar1;\n    uint32_t uVar2;\n    uint var_9cch;\n    uint var_ch;\n    uint var_8h;\n    \n    uVar2 = 0;\n    fcn.00442f4a();\n    if (arg_ch != 0) {\n        do {\n            uVar1 = fcn.00443062();\n            *(uVar2 + arg_8h) = *(uVar2 + arg_8h) ^ uVar1;\n            uVar2 = uVar2 + 1;\n        } while (uVar2 < arg_ch);\n    }\n    return;\n}\n",
        "token_count": 161
    },
    "00449a0a": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00449a0a(void)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint unaff_EDI;\n    \n    uVar1 = fcn.0044dbb2(*0x481bac);\n    if (uVar1 < *0x481ba8 + (4 - *0x481bac)) {\n        uVar3 = 0x800;\n        if (uVar1 < 0x800) {\n            uVar3 = uVar1;\n        }\n        iVar2 = fcn.0044da00(*0x481bac, uVar3 + uVar1);\n        if (iVar2 == 0) {\n            iVar2 = fcn.0044da00(*0x481bac, uVar1 + 0x10);\n            if (iVar2 == 0) {\n                return;\n            }\n        }\n        *0x481ba8 = iVar2 + (*0x481ba8 - *0x481bac >> 2) * 4;\n        *0x481bac = iVar2;\n    }\n    **0x481ba8 = unaff_EDI;\n    *0x481ba8 = *0x481ba8 + 1;\n    return;\n}\n",
        "token_count": 277
    },
    "0044c510": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n\nvoid fcn.0044c510(void)\n\n{\n    uint32_t in_EAX;\n    uchar *puVar1;\n    uint unaff_retaddr;\n    \n    if (in_EAX < 0x1000) {\n        *(&stack0x00000000 + -in_EAX) = unaff_retaddr;\n        return;\n    }\n    puVar1 = &stack0x00000004;\n    do {\n        puVar1 = puVar1 + -0x1000;\n        in_EAX = in_EAX - 0x1000;\n    } while (0xfff < in_EAX);\n    *(puVar1 + (-4 - in_EAX)) = unaff_retaddr;\n    return;\n}\n",
        "token_count": 167
    },
    "0044e5b6": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint32_t fcn.0044e5b6(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = *0x480b68;\n    while( true ) {\n        if (*0x480b68 + *0x480b64 * 0x14 <= uVar1) {\n            return 0;\n        }\n        if (param_1 - *(uVar1 + 0xc) < 0x100000) break;\n        uVar1 = uVar1 + 0x14;\n    }\n    return uVar1;\n}\n",
        "token_count": 129
    },
    "00455398": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00455398(uint *arg_8h, int32_t arg_ch, int32_t arg_10h, uint arg_14h)\n\n{\n    int32_t var_2ch;\n    uint var_1ch;\n    uint32_t var_4h;\n    \n    var_4h = *0x465718 ^ &stack0xfffffffc;\n    fcn.0045731f(*arg_8h, arg_8h[1], &var_2ch, &var_1ch);\n    fcn.004571ee((0 < arg_10h) + (var_2ch == 0x2d) + arg_ch, arg_10h + 1, &var_2ch);\n    fcn.004552ea(arg_10h, arg_14h, 0);\n    fcn.0044ce09();\n    return;\n}\n",
        "token_count": 194
    },
    "004554a4": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004554a4(uint *arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    int32_t var_2ch;\n    int32_t var_28h;\n    uint var_1ch;\n    uint32_t var_4h;\n    \n    var_4h = *0x465718 ^ &stack0xfffffffc;\n    fcn.0045731f(*arg_8h, arg_8h[1], &var_2ch, &var_1ch);\n    fcn.004571ee((var_2ch == 0x2d) + arg_ch, var_28h + arg_10h, &var_2ch);\n    fcn.00455408(arg_ch, arg_10h, 0);\n    fcn.0044ce09();\n    return;\n}\n",
        "token_count": 189
    },
    "0045550b": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045550b(uint *arg_8h, int32_t arg_ch, int32_t arg_10h, uint arg_14h)\n\n{\n    char *arg_8h_00;\n    int32_t iVar1;\n    char *pcVar2;\n    int32_t var_2ch;\n    int32_t var_28h;\n    uint var_1ch;\n    uint32_t var_4h;\n    \n    var_4h = *0x465718 ^ &stack0xfffffffc;\n    fcn.0045731f(*arg_8h, arg_8h[1], &var_2ch, &var_1ch);\n    iVar1 = var_28h + -1;\n    arg_8h_00 = (var_2ch == 0x2d) + arg_ch;\n    fcn.004571ee(arg_8h_00, arg_10h, &var_2ch);\n    var_28h = var_28h + -1;\n    if ((var_28h < -4) || (arg_10h <= var_28h)) {\n        fcn.004552ea(arg_10h, arg_14h, 1);\n    }\n    else {\n        if (iVar1 < var_28h) {\n            do {\n                pcVar2 = arg_8h_00;\n                arg_8h_00 = pcVar2 + 1;\n            } while (*pcVar2 != '\\0');\n            pcVar2[-1] = '\\0';\n        }\n        fcn.00455408(arg_ch, arg_10h, 1);\n    }\n    fcn.0044ce09();\n    return;\n}\n",
        "token_count": 372
    },
    "00456480": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00456480(char *arg_8h, char *arg_ch)\n\n{\n    char cVar1;\n    char cVar2;\n    uint8_t uVar3;\n    uint8_t uVar5;\n    uint32_t uVar4;\n    \n    uVar4 = 0xff;\n    do {\n        do {\n            cVar2 = uVar4;\n            if (cVar2 == '\\0') goto code_r0x004564c6;\n            cVar2 = *arg_ch;\n            arg_ch = arg_ch + 1;\n            cVar1 = *arg_8h;\n            uVar4 = CONCAT11(cVar1, cVar2);\n            arg_8h = arg_8h + 1;\n        } while (uVar4 >> 8 == cVar2);\n        uVar3 = cVar1 + 0xbf;\n        uVar3 = uVar3 + (-(uVar3 < 0x1a) & 0x20U) + 0x41;\n        uVar4 = CONCAT11(cVar2 + 0xbfU + (-(cVar2 + 0xbfU < 0x1a) & 0x20U) + 'A', uVar3);\n        uVar5 = uVar4 >> 8;\n    } while (uVar3 == uVar5);\n    cVar2 = (uVar3 < uVar5) * -2 + '\\x01';\ncode_r0x004564c6:\n    return cVar2;\n}\n",
        "token_count": 337
    },
    "00457b89": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00457b89(ushort *arg_8h, uint32_t arg_ch, int32_t arg_10h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint *arg_ch_00;\n    uint var_14h;\n    uint var_10h;\n    ushort uStack16;\n    ushort uStack14;\n    uint uStack12;\n    uint32_t var_4h;\n    \n    var_4h = *0x465718 ^ &stack0xfffffffc;\n    iVar4 = 0x465ff0;\n    if (arg_ch != 0) {\n        if (arg_ch < 0) {\n            arg_ch = -arg_ch;\n            iVar4 = 0x466150;\n        }\n        if (arg_10h == 0) {\n            *arg_8h = 0;\n        }\n        while (arg_ch != 0) {\n            uVar1 = arg_ch >> 3;\n            uVar3 = arg_ch & 7;\n            iVar4 = iVar4 + 0x54;\n            arg_ch = uVar1;\n            if (uVar3 != 0) {\n                arg_ch_00 = iVar4 + uVar3 * 0xc;\n                if (0x7fff < *arg_ch_00) {\n                    var_10h._0_2_ = *arg_ch_00;\n                    var_10h._2_2_ = *arg_ch_00 >> 0x10;\n                    uStack16 = arg_ch_00[1];\n                    uStack14 = arg_ch_00[1] >> 0x10;\n                    uStack12 = arg_ch_00[2];\n                    iVar2 = CONCAT22(uStack16, var_10h._2_2_) + -1;\n                    var_10h._2_2_ = iVar2;\n                    uStack16 = iVar2 >> 0x10;\n                    arg_ch_00 = &var_10h;\n                }\n                fcn.00457953(arg_8h, arg_ch_00);\n            }\n        }\n    }\n    fcn.0044ce09();\n    return;\n}\n",
        "token_count": 493
    },
    "004013e2": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004013e2(int32_t arg_8h)\n\n{\n    int16_t *piVar1;\n    int32_t iVar2;\n    uint in_stack_ffffff7c;\n    uint in_stack_ffffff80;\n    uint in_stack_ffffff84;\n    uint *arg_18h;\n    uint in_stack_ffffff94;\n    uint in_stack_ffffff98;\n    uint in_stack_ffffff9c;\n    uint uVar3;\n    uint in_stack_ffffffac;\n    uint in_stack_ffffffb0;\n    uint in_stack_ffffffb4;\n    uint var_28h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_ch;\n    int16_t *lpFilename;\n    int32_t var_4h;\n    \n    fcn.00416d61();\n    piVar1 = arg_8h + 0x24;\n    lpFilename = piVar1;\n    (**0x459308)(0, piVar1, 0x104);\n    *(arg_8h + 0xc) = piVar1;\n    fcn.00418cb1();\n    uVar3 = 0x45be80;\n    fcn.00416d81();\n    fcn.00416b13(uVar3, in_stack_ffffffac, in_stack_ffffffb0, in_stack_ffffffb4);\n    fcn.00418bb9(0);\n    uVar3 = 0x45be70;\n    fcn.00416d81();\n    fcn.00416b13(uVar3, in_stack_ffffff94, in_stack_ffffff98, in_stack_ffffff9c);\n    arg_18h = &var_ch;\n    uVar3 = 0x45be70;\n    fcn.00416d81();\n    fcn.00416b63(uVar3, in_stack_ffffff7c, in_stack_ffffff80, in_stack_ffffff84, arg_18h);\n    var_4h = *0x47bd1c;\n    fcn.00401ade();\n    iVar2 = fcn.00449521(0x45be54, var_18h);\n    if (iVar2 == 0) {\n        var_4h = var_4h + -1;\n        *0x4679c4 = 1;\n        fcn.00401ade();\n    }\n    iVar2 = fcn.00449521(0x45be2c, var_18h);\n    if (iVar2 == 0) {\n        var_4h = var_4h + -1;\n        *0x4679c3 = 1;\n        fcn.00401ade();\n    }\n    iVar2 = fcn.00449521(0x45be04, var_18h);\n    if (iVar2 == 0) {\n        *(arg_8h + 0x10) = 0;\n        *(arg_8h + 0x14) = 1;\n        (**0x459308)(0, lpFilename, 0x104);\n        fcn.00401ade();\n        fcn.00416e71();\n        var_4h = var_4h + -2;\n        fcn.00401ade();\n    }\n    iVar2 = fcn.00449521(0x45bdd8, var_18h);\n    if (iVar2 == 0) {\n        *(arg_8h + 0x10) = 2;\n        fcn.00401ade();\n        fcn.004495f8(lpFilename, var_18h);\n        var_4h = var_4h + -2;\n        fcn.00401ade();\n    }\n    if (*lpFilename == 0) {\n        fcn.004495f8(lpFilename, var_18h);\n        var_4h = var_4h + -1;\n        fcn.00401ade();\n    }\n    if (var_4h < 0) {\n        var_4h = 0;\n    }\n    iVar2 = var_4h;\n    fcn.0041a000(1);\n    fcn.0041a132(1);\n    fcn.00418bb9(iVar2);\n    iVar2 = 0;\n    if (0 < var_4h) {\n        do {\n            iVar2 = iVar2 + 1;\n            fcn.0041a132(1);\n            fcn.00418cb1();\n            fcn.00401ade();\n        } while (iVar2 < var_4h);\n    }\n    fcn.0041858e();\n    fcn.0044951c(var_18h);\n    return;\n}\n",
        "token_count": 1027
    },
    "0040431f": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040431f(uint arg_8h, uint *arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    int32_t arg_8h_00;\n    char cVar1;\n    uint *puVar2;\n    uint var_ch;\n    uint var_8h;\n    uint *var_4h;\n    \n    arg_8h_00 = arg_ch[0x1061];\n    if (0 < arg_8h_00) {\n        arg_ch[0x1061] = -1;\n        fcn.0040431f(arg_8h_00, arg_ch, arg_10h, arg_14h, arg_18h);\n    }\n    cVar1 = fcn.00404081(&var_ch);\n    if (cVar1 != '\\0') {\n        puVar2 = fcn.00449614(0x20);\n        if (puVar2 == NULL) {\n            puVar2 = NULL;\n        }\n        else {\n            fcn.00416d61();\n        }\n        var_4h = puVar2;\n        fcn.00416e71();\n        *puVar2 = arg_8h;\n        puVar2[4] = *arg_ch;\n        puVar2[5] = arg_10h;\n        puVar2[6] = arg_14h;\n        puVar2[7] = arg_18h;\n        fcn.0040d9f1(&var_4h);\n    }\n    return;\n}\n",
        "token_count": 341
    },
    "004043cb": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004043cb(uint arg_8h, uint *arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint *puVar1;\n    uint unaff_EBX;\n    uint *var_4h;\n    \n    puVar1 = fcn.00449614(0x20);\n    if (puVar1 == NULL) {\n        puVar1 = NULL;\n    }\n    else {\n        fcn.00416d61();\n    }\n    var_4h = puVar1;\n    fcn.00416e71();\n    *puVar1 = unaff_EBX;\n    puVar1[4] = *arg_ch;\n    puVar1[5] = 0;\n    puVar1[6] = arg_10h;\n    puVar1[7] = arg_14h;\n    fcn.0040d9f1(&var_4h);\n    return;\n}\n",
        "token_count": 205
    },
    "0040449e": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid fcn.0040449e(void)\n\n{\n    uint *unaff_EBX;\n    uint *unaff_EDI;\n    \n    *unaff_EDI = *unaff_EBX;\n    fcn.00416e71();\n    unaff_EDI[4] = unaff_EBX[4];\n    unaff_EDI[5] = unaff_EBX[5];\n    unaff_EDI[6] = unaff_EBX[6];\n    unaff_EDI[7] = unaff_EBX[7];\n    return;\n}\n",
        "token_count": 119
    },
    "00408bd2": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t fcn.00408bd2(int32_t param_1, uint param_2)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t *unaff_EDI;\n    \n    uVar1 = fcn.00449c37(*unaff_EDI, param_2);\n    if (uVar1 == 0) {\n        uVar2 = fcn.0044985c(*unaff_EDI);\n        uVar3 = uVar2;\n    }\n    else {\n        uVar2 = uVar1;\n        uVar3 = uVar1 - *unaff_EDI >> 1;\n    }\n    if (uVar3 < 0xfff) {\n        fcn.00449c77(param_1, *unaff_EDI, uVar3);\n        *(param_1 + uVar3 * 2) = 0;\n        if (uVar1 != 0) {\n            uVar3 = uVar3 + 1;\n        }\n        *unaff_EDI = *unaff_EDI + uVar3 * 2;\n        uVar2 = uVar3 * 2 & 0xffffff00 | uVar3 != 0;\n    }\n    else {\n        uVar2 = uVar2 & 0xffffff00;\n    }\n    return uVar2;\n}\n",
        "token_count": 301
    },
    "0040dbb5": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040dbb5(int32_t *arg_8h, uint arg_ch)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    uint uVar4;\n    \n    piVar2 = arg_8h;\n    iVar3 = *(arg_8h[1] + 4);\n    *(arg_8h[1] + 0x10) = *(iVar3 + 0x68);\n    *(arg_8h[1] + 0x18) = *(iVar3 + 0x6c) + *(iVar3 + 0x68);\n    *(arg_8h[1] + 0x14) = *(iVar3 + 0x6a);\n    *(arg_8h[1] + 0x1c) = *(iVar3 + 0x6e) + *(iVar3 + 0x6a);\n    iVar3 = (****(arg_8h[1] + 0xc))(*(arg_8h[1] + 0xc), 0x45a820, &arg_8h);\n    if (iVar3 < 0) {\n        uVar4 = 0x8000ffff;\n    }\n    else {\n        iVar3 = piVar2[1];\n        piVar1 = *(iVar3 + 0xc);\n        (**(*piVar1 + 0x48))(piVar1, 1, iVar3 + 0x20);\n        (**(*arg_8h + 0x1c))(arg_8h, arg_ch, piVar2[1] + 0x10);\n        (**(*arg_8h + 8))(arg_8h);\n        uVar4 = 0;\n    }\n    return uVar4;\n}\n",
        "token_count": 398
    },
    "0040def8": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040def8(int32_t arg_8h, int32_t *arg_ch, int32_t *arg_10h)\n\n{\n    int32_t **ppiVar1;\n    int16_t iVar2;\n    int16_t iVar3;\n    char cVar4;\n    int32_t in_EAX;\n    uint *puVar5;\n    int32_t iVar6;\n    int32_t *in_ECX;\n    int32_t *extraout_EDX;\n    uint arg_14h;\n    int32_t *var_8h;\n    int32_t var_4h;\n    \n    var_4h = -1;\n    ppiVar1 = in_ECX + 3;\n    *in_ECX = 0;\n    *ppiVar1 = NULL;\n    in_ECX[10] = 0;\n    in_ECX[0xc] = 0;\n    in_ECX[0xd] = 0;\n    *(in_ECX + 0xf) = 0;\n    *(in_ECX + 0x3d) = 0;\n    in_ECX[2] = 0;\n    if (arg_ch == NULL) {\n        return;\n    }\n    if (in_EAX == 0) {\n        return;\n    }\n    if (arg_10h == NULL) {\n        return;\n    }\n    if (arg_8h == 0) {\n        return;\n    }\n    *arg_10h = 0;\n    in_ECX[4] = *(in_EAX + 0x68);\n    in_ECX[6] = *(in_EAX + 0x6c) + *(in_EAX + 0x68);\n    in_ECX[5] = *(in_EAX + 0x6a);\n    iVar2 = *(in_EAX + 0x6a);\n    iVar3 = *(in_EAX + 0x6e);\n    in_ECX[1] = in_EAX;\n    *in_ECX = arg_8h;\n    in_ECX[7] = iVar3 + iVar2;\n    var_8h = in_ECX;\n    cVar4 = fcn.00419b83();\n    if ((cVar4 == '\\0') || (var_4h = (****(*extraout_EDX + 8))(*(*extraout_EDX + 8), 0x45a860, ppiVar1),  var_4h < 0)) {\n        arg_14h = 0;\n        iVar6 = var_4h;\n    }\n    else {\n        puVar5 = fcn.00449614(0xc);\n        if (puVar5 == NULL) {\n            puVar5 = NULL;\n        }\n        else {\n            *puVar5 = 0x45c564;\n            puVar5[2] = in_ECX;\n            puVar5[1] = 1;\n        }\n        in_ECX[10] = puVar5;\n        puVar5 = fcn.00449614(8);\n        if (puVar5 == NULL) {\n            puVar5 = NULL;\n        }\n        else {\n            *puVar5 = 0x45c4d0;\n            puVar5[1] = in_ECX;\n        }\n        in_ECX[0xc] = puVar5;\n        puVar5 = fcn.00449614(0xc);\n        if (puVar5 == NULL) {\n            puVar5 = NULL;\n        }\n        else {\n            *puVar5 = 0x45c4c0;\n            puVar5[1] = in_ECX;\n            puVar5[2] = 0;\n        }\n        in_ECX[0xb] = puVar5;\n        puVar5 = fcn.00449614(8);\n        if (puVar5 == NULL) {\n            puVar5 = NULL;\n        }\n        else {\n            *puVar5 = 0x45c488;\n            puVar5[1] = in_ECX;\n        }\n        in_ECX[0xd] = puVar5;\n        (**(**ppiVar1 + 0x14))(*ppiVar1, 0x45c588, 0x45c59c);\n        (**(**ppiVar1 + 0xc))(*ppiVar1, in_ECX[10]);\n        (**(**ppiVar1 + 0x4c))(*ppiVar1, in_ECX[0xd], in_ECX + 0xe);\n        iVar6 = (****ppiVar1)(*ppiVar1, 0x45a800, &arg_ch);\n        if (-1 < iVar6) {\n            (**(*arg_ch + 0x1c))(arg_ch, 1, 2, in_ECX[0xd]);\n            (**(*arg_ch + 8))(arg_ch);\n        }\n        (*_sym.imp.ole32.dll_OleSetContainedObject)(*ppiVar1, 1);\n        (**(**ppiVar1 + 0x2c))(*ppiVar1, 0xffffffff, 0, in_ECX[10], 0xffffffff, *(*in_ECX + 0x14), in_ECX + 4);\n        arg_8h = 5;\n        do {\n            var_4h = (**(**ppiVar1 + 0x38))(*ppiVar1);\n            arg_8h = arg_8h + -1;\n            if (var_4h == 0) goto code_r0x0040e0bb;\n        } while (arg_8h != 0);\n        if (-1 < var_4h) {\ncode_r0x0040e0bb:\n            iVar6 = (****ppiVar1)(*ppiVar1, 0x45a820, &var_8h);\n            if (iVar6 < 0) {\n                fcn.0040e123();\n                arg_14h = 1;\n                goto code_r0x0040e105;\n            }\n            var_4h = (**(*var_8h + 0xc))(var_8h, in_ECX + 2);\n            (**(*var_8h + 8))(var_8h);\n            if (-1 < var_4h) {\n                *arg_10h = in_ECX[2];\n                return;\n            }\n        }\n        fcn.0040e123();\n        arg_14h = 1;\n        iVar6 = var_4h;\n    }\ncode_r0x0040e105:\n    fcn.00430d6b(0x479e08, iVar6, 0, arg_14h);\n    return;\n}\n",
        "token_count": 1445
    },
    "0040e328": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid fcn.0040e328(void)\n\n{\n    uint *puVar1;\n    uint *unaff_ESI;\n    uint unaff_EDI;\n    \n    puVar1 = fcn.00449614(0xc);\n    if (puVar1 == NULL) {\n        puVar1 = NULL;\n    }\n    else {\n        *puVar1 = 0x45c4a8;\n        puVar1[2] = 1;\n        puVar1[1] = unaff_ESI;\n    }\n    *unaff_ESI = puVar1;\n    puVar1 = fcn.00449614(8);\n    if (puVar1 == NULL) {\n        puVar1 = NULL;\n    }\n    else {\n        *puVar1 = 0x45c548;\n        puVar1[1] = unaff_ESI;\n    }\n    unaff_ESI[1] = puVar1;\n    puVar1 = fcn.00449614(8);\n    if (puVar1 == NULL) {\n        puVar1 = NULL;\n    }\n    else {\n        *puVar1 = 0x45c460;\n        puVar1[1] = unaff_ESI;\n    }\n    unaff_ESI[2] = puVar1;\n    puVar1 = fcn.00449614(0xc);\n    if (puVar1 == NULL) {\n        puVar1 = NULL;\n    }\n    else {\n        *puVar1 = 0x45c50c;\n        puVar1[1] = unaff_ESI;\n        puVar1[2] = unaff_EDI;\n    }\n    unaff_ESI[4] = 0;\n    unaff_ESI[3] = puVar1;\n    unaff_ESI[5] = unaff_EDI;\n    *(unaff_ESI + 6) = 0;\n    return;\n}\n",
        "token_count": 414
    },
    "0040e5ad": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid fcn.0040e5ad(void)\n\n{\n    uint *unaff_ESI;\n    \n    fcn.00416d61();\n    fcn.00416d61();\n    fcn.00416d61();\n    unaff_ESI[0x12] = 0;\n    *(unaff_ESI + 8) = 0;\n    fcn.00416e83(unaff_ESI + 9, 0x45bfe0);\n    *(unaff_ESI + 6) = *0x462078;\n    unaff_ESI[2] = 0xffffffff;\n    unaff_ESI[3] = 0xffffffff;\n    *unaff_ESI = 0xffffffff;\n    unaff_ESI[1] = 0xffffffff;\n    unaff_ESI[0x13] = 0;\n    unaff_ESI[5] = 0;\n    unaff_ESI[4] = 0;\n    fcn.00416e83(unaff_ESI + 0xc, 0x45bfe0);\n    fcn.00416e83(unaff_ESI + 0xf, 0x45bfe0);\n    return;\n}\n",
        "token_count": 260
    },
    "0040f279": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid fcn.0040f279(void)\n\n{\n    uint *in_EAX;\n    \n    *in_EAX = 0;\n    in_EAX[1] = 0;\n    in_EAX[2] = 0;\n    in_EAX[3] = 0;\n    in_EAX[4] = 0;\n    in_EAX[5] = 0;\n    *(in_EAX + 6) = 0;\n    return;\n}\n",
        "token_count": 101
    },
    "0040f290": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid fcn.0040f290(void)\n\n{\n    int32_t *unaff_ESI;\n    \n    if (*unaff_ESI != 0) {\n        fcn.0044a128(*unaff_ESI);\n    }\n    *unaff_ESI = 0;\n    if (unaff_ESI[1] != 0) {\n        fcn.0044951c(unaff_ESI[1]);\n    }\n    unaff_ESI[1] = 0;\n    unaff_ESI[2] = 0;\n    unaff_ESI[3] = 0;\n    unaff_ESI[4] = 0;\n    unaff_ESI[5] = 0;\n    *(unaff_ESI + 6) = 0;\n    return;\n}\n",
        "token_count": 171
    },
    "00413c86": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid fcn.00413c86(void)\n\n{\n    int32_t in_EAX;\n    int32_t unaff_EDI;\n    \n    fcn.00416e71();\n    *(in_EAX + 0xc) = *(unaff_EDI + 0xc);\n    *(in_EAX + 0x10) = *(unaff_EDI + 0x10);\n    *(in_EAX + 0x14) = *(unaff_EDI + 0x14);\n    *(in_EAX + 0x18) = *(unaff_EDI + 0x18);\n    return;\n}\n",
        "token_count": 133
    },
    "00417ed7": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid fcn.00417ed7(void)\n\n{\n    uint *in_EAX;\n    \n    in_EAX[10] = 0;\n    *in_EAX = 0;\n    in_EAX[2] = 0;\n    in_EAX[1] = 0;\n    in_EAX[3] = 0;\n    in_EAX[5] = 0;\n    in_EAX[4] = 0;\n    in_EAX[6] = 0;\n    in_EAX[8] = 0;\n    in_EAX[7] = 0;\n    in_EAX[9] = 0;\n    in_EAX[0xb] = 0;\n    return;\n}\n",
        "token_count": 155
    },
    "004181c8": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004181c8(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint32_t in_EAX;\n    int32_t iVar1;\n    uint *puVar2;\n    \n    iVar1 = fcn.00418170(arg_ch);\n    if (iVar1 == 0) {\n        iVar1 = fcn.00449614(0x1c);\n        if (iVar1 == 0) {\n            iVar1 = 0;\n        }\n        else {\n            fcn.00416d61();\n        }\n        fcn.00416e71();\n        *(iVar1 + 0xc) = in_EAX & 0xff00;\n        puVar2 = fcn.00449614(0x10);\n        if (puVar2 == NULL) {\n            puVar2 = NULL;\n        }\n        else {\n            *puVar2 = 0;\n            puVar2[2] = 1;\n            puVar2[3] = 0;\n        }\n        *(iVar1 + 0x10) = puVar2;\n        fcn.00418a19(arg_10h);\n        *(iVar1 + 0x14) = 0;\n        *(iVar1 + 0x18) = 0;\n        fcn.004182c1(arg_ch);\n    }\n    else {\n        fcn.00418a19(arg_10h);\n    }\n    return;\n}\n",
        "token_count": 313
    },
    "0041825b": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041825b(uint arg_8h, uint arg_ch)\n\n{\n    uint32_t in_EAX;\n    int32_t iVar1;\n    uint unaff_EBX;\n    \n    iVar1 = fcn.00418170(arg_ch);\n    if (iVar1 == 0) {\n        iVar1 = fcn.00449614(0x1c);\n        if (iVar1 == 0) {\n            iVar1 = 0;\n        }\n        else {\n            fcn.00416d61();\n        }\n        fcn.00416e71();\n        *(iVar1 + 0x14) = 0;\n        *(iVar1 + 0x18) = 0;\n        *(iVar1 + 0xc) = in_EAX & 0xff00 | 1;\n        *(iVar1 + 0x10) = unaff_EBX;\n        fcn.004182c1(arg_ch);\n    }\n    else {\n        *(iVar1 + 0x10) = unaff_EBX;\n    }\n    return;\n}\n",
        "token_count": 230
    },
    "0041a3d9": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Variable defined which should be unmapped: var_ch\n\nint32_t __cdecl fcn.0041a3d9(int32_t arg_8h)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint auStack14784 [12];\n    uint uStack14736;\n    uint uStack14732;\n    uint uStack14728;\n    uint uStack14724;\n    uint uStack14720;\n    uint uStack14716;\n    uint uStack14712;\n    uint uStack14704;\n    uint uStack14696;\n    uint uStack14692;\n    uint uStack14688;\n    uint uStack14684;\n    uint uStack14680;\n    uint uStack14676;\n    uint uStack14672;\n    uint uStack14664;\n    code *pcStack14656;\n    uint uStack14652;\n    uint uStack14648;\n    uint uStack14644;\n    uint uStack14640;\n    uint uStack14636;\n    uint uStack14632;\n    uint uStack14624;\n    code *pcStack14616;\n    uint uStack14612;\n    uint uStack14608;\n    uint uStack14604;\n    uint uStack14600;\n    uint uStack14596;\n    uint uStack14592;\n    uint uStack14584;\n    uint uStack14576;\n    uint uStack14572;\n    uint uStack14568;\n    uint uStack14564;\n    uint uStack14560;\n    uint uStack14556;\n    uint uStack14552;\n    uint uStack14544;\n    uint uStack14536;\n    uint uStack14532;\n    uint uStack14528;\n    uint uStack14524;\n    uint uStack14520;\n    uint uStack14516;\n    uint uStack14512;\n    uint uStack14504;\n    code *pcStack14496;\n    uint uStack14492;\n    uint uStack14488;\n    uint uStack14484;\n    uint uStack14480;\n    uint uStack14476;\n    uint uStack14472;\n    uint uStack14464;\n    uint uStack14456;\n    uint uStack14452;\n    uint uStack14448;\n    uint uStack14444;\n    uint uStack14440;\n    uint uStack14436;\n    uint uStack14432;\n    uint uStack14424;\n    code *pcStack14416;\n    uint uStack14412;\n    uint uStack14408;\n    uint uStack14404;\n    uint uStack14400;\n    uint uStack14396;\n    uint uStack14392;\n    uint uStack14384;\n    code *pcStack14376;\n    uint uStack14372;\n    uint uStack14368;\n    uint uStack14364;\n    uint uStack14360;\n    uint uStack14356;\n    uint uStack14352;\n    uint uStack14344;\n    uint uStack14336;\n    uint uStack14332;\n    uint uStack14328;\n    uint uStack14324;\n    uint uStack14320;\n    uint uStack14316;\n    uint uStack14312;\n    uint uStack14304;\n    uint uStack14296;\n    uint uStack14292;\n    uint uStack14288;\n    uint uStack14284;\n    uint uStack14280;\n    uint uStack14276;\n    uint uStack14272;\n    uint uStack14264;\n    uint uStack14256;\n    uint uStack14252;\n    uint uStack14248;\n    uint uStack14244;\n    uint uStack14240;\n    uint uStack14236;\n    uint uStack14232;\n    uint uStack14224;\n    uint uStack14216;\n    uint uStack14212;\n    uint uStack14208;\n    uint uStack14204;\n    uint uStack14200;\n    uint uStack14196;\n    uint uStack14192;\n    uint uStack14184;\n    code *pcStack14176;\n    uint uStack14172;\n    uint uStack14168;\n    uint uStack14164;\n    uint uStack14160;\n    uint uStack14156;\n    uint uStack14152;\n    uint uStack14144;\n    code *pcStack14136;\n    uint uStack14132;\n    uint uStack14128;\n    uint uStack14124;\n    uint uStack14120;\n    uint uStack14116;\n    uint uStack14112;\n    uint uStack14104;\n    code *pcStack14096;\n    uint uStack14092;\n    uint uStack14088;\n    uint uStack14084;\n    uint uStack14080;\n    uint uStack14076;\n    uint uStack14072;\n    uint uStack14064;\n    uint uStack14056;\n    uint uStack14052;\n    uint uStack14048;\n    uint uStack14044;\n    uint uStack14040;\n    uint uStack14036;\n    uint uStack14032;\n    uint uStack14024;\n    code *pcStack14016;\n    uint uStack14012;\n    uint uStack14008;\n    uint uStack14004;\n    uint uStack14000;\n    uint uStack13996;\n    uint uStack13992;\n    uint uStack13984;\n    code *pcStack13976;\n    uint uStack13972;\n    uint uStack13968;\n    uint uStack13964;\n    uint uStack13960;\n    uint uStack13956;\n    uint uStack13952;\n    uint uStack13944;\n    uint uStack13936;\n    uint uStack13932;\n    uint uStack13928;\n    uint uStack13924;\n    uint uStack13920;\n    uint uStack13916;\n    uint uStack13912;\n    uint uStack13904;\n    code *pcStack13896;\n    uint uStack13892;\n    uint uStack13888;\n    uint uStack13884;\n    uint uStack13880;\n    uint uStack13876;\n    uint uStack13872;\n    uint uStack13864;\n    code *pcStack13856;\n    uint uStack13852;\n    uint uStack13848;\n    uint uStack13844;\n    uint uStack13840;\n    uint uStack13836;\n    uint uStack13832;\n    uint uStack13824;\n    uint uStack13816;\n    uint uStack13812;\n    uint uStack13808;\n    uint uStack13804;\n    uint uStack13800;\n    uint uStack13796;\n    uint uStack13792;\n    uint uStack13784;\n    uint uStack13776;\n    uint uStack13772;\n    uint uStack13768;\n    uint uStack13764;\n    uint uStack13760;\n    uint uStack13756;\n    uint uStack13752;\n    uint uStack13744;\n    code *pcStack13736;\n    uint uStack13732;\n    uint uStack13728;\n    uint uStack13724;\n    uint uStack13720;\n    uint uStack13716;\n    uint uStack13712;\n    uint uStack13704;\n    uint uStack13696;\n    uint uStack13692;\n    uint uStack13688;\n    uint uStack13684;\n    uint uStack13680;\n    uint uStack13676;\n    uint uStack13672;\n    uint uStack13664;\n    code *pcStack13656;\n    uint uStack13652;\n    uint uStack13648;\n    uint uStack13644;\n    uint uStack13640;\n    uint uStack13636;\n    uint uStack13632;\n    uint uStack13624;\n    code *pcStack13616;\n    uint uStack13612;\n    uint uStack13608;\n    uint uStack13604;\n    uint uStack13600;\n    uint uStack13596;\n    uint uStack13592;\n    uint uStack13584;\n    code *pcStack13576;\n    uint uStack13572;\n    uint uStack13568;\n    uint uStack13564;\n    uint uStack13560;\n    uint uStack13556;\n    uint uStack13552;\n    uint uStack13544;\n    uint uStack13536;\n    uint uStack13532;\n    uint uStack13528;\n    uint uStack13524;\n    uint uStack13520;\n    uint uStack13516;\n    uint uStack13512;\n    uint uStack13504;\n    uint uStack13496;\n    uint uStack13492;\n    uint uStack13488;\n    uint uStack13484;\n    uint uStack13480;\n    uint uStack13476;\n    uint uStack13472;\n    uint uStack13464;\n    uint uStack13456;\n    uint uStack13452;\n    uint uStack13448;\n    uint uStack13444;\n    uint uStack13440;\n    uint uStack13436;\n    uint uStack13432;\n    uint uStack13424;\n    uint uStack13416;\n    uint uStack13412;\n    uint uStack13408;\n    uint uStack13404;\n    uint uStack13400;\n    uint uStack13396;\n    uint uStack13392;\n    uint uStack13384;\n    code *pcStack13376;\n    uint uStack13372;\n    uint uStack13368;\n    uint uStack13364;\n    uint uStack13360;\n    uint uStack13356;\n    uint uStack13352;\n    uint uStack13344;\n    code *pcStack13336;\n    uint uStack13332;\n    uint uStack13328;\n    uint uStack13324;\n    uint uStack13320;\n    uint uStack13316;\n    uint uStack13312;\n    uint uStack13304;\n    uint uStack13296;\n    uint uStack13292;\n    uint uStack13288;\n    uint uStack13284;\n    uint uStack13280;\n    uint uStack13276;\n    uint uStack13272;\n    uint uStack13264;\n    uint uStack13256;\n    uint uStack13252;\n    uint uStack13248;\n    uint uStack13244;\n    uint uStack13240;\n    uint uStack13236;\n    uint uStack13232;\n    uint uStack13224;\n    uint uStack13216;\n    uint uStack13212;\n    uint uStack13208;\n    uint uStack13204;\n    uint uStack13200;\n    uint uStack13196;\n    uint uStack13192;\n    uint uStack13184;\n    code *pcStack13176;\n    uint uStack13172;\n    uint uStack13168;\n    uint uStack13164;\n    uint uStack13160;\n    uint uStack13156;\n    uint uStack13152;\n    uint uStack13144;\n    uint uStack13136;\n    uint uStack13132;\n    uint uStack13128;\n    uint uStack13124;\n    uint uStack13120;\n    uint uStack13116;\n    uint uStack13112;\n    uint uStack13104;\n    code *pcStack13096;\n    uint uStack13092;\n    uint uStack13088;\n    uint uStack13084;\n    uint uStack13080;\n    uint uStack13076;\n    uint uStack13072;\n    uint uStack13064;\n    code *pcStack13056;\n    uint uStack13052;\n    uint uStack13048;\n    uint uStack13044;\n    uint uStack13040;\n    uint uStack13036;\n    uint uStack13032;\n    uint uStack13024;\n    uint uStack13016;\n    uint uStack13012;\n    uint uStack13008;\n    uint uStack13004;\n    uint uStack13000;\n    uint uStack12996;\n    uint uStack12992;\n    uint uStack12984;\n    code *pcStack12976;\n    uint uStack12972;\n    uint uStack12968;\n    uint uStack12964;\n    uint uStack12960;\n    uint uStack12956;\n    uint uStack12952;\n    uint uStack12944;\n    code *pcStack12936;\n    uint uStack12932;\n    uint uStack12928;\n    uint uStack12924;\n    uint uStack12920;\n    uint uStack12916;\n    uint uStack12912;\n    uint uStack12904;\n    uint uStack12896;\n    uint uStack12892;\n    uint uStack12888;\n    uint uStack12884;\n    uint uStack12880;\n    uint uStack12876;\n    uint uStack12872;\n    uint uStack12864;\n    code *pcStack12856;\n    uint uStack12852;\n    uint uStack12848;\n    uint uStack12844;\n    uint uStack12840;\n    uint uStack12836;\n    uint uStack12832;\n    uint uStack12824;\n    uint uStack12816;\n    uint uStack12812;\n    uint uStack12808;\n    uint uStack12804;\n    uint uStack12800;\n    uint uStack12796;\n    uint uStack12792;\n    uint uStack12784;\n    uint uStack12776;\n    uint uStack12772;\n    uint uStack12768;\n    uint uStack12764;\n    uint uStack12760;\n    uint uStack12756;\n    uint uStack12752;\n    uint uStack12744;\n    code *pcStack12736;\n    uint uStack12732;\n    uint uStack12728;\n    uint uStack12724;\n    uint uStack12720;\n    uint uStack12716;\n    uint uStack12712;\n    uint uStack12704;\n    code *pcStack12696;\n    uint uStack12692;\n    uint uStack12688;\n    uint uStack12684;\n    uint uStack12680;\n    uint uStack12676;\n    uint uStack12672;\n    uint uStack12664;\n    uint uStack12656;\n    uint uStack12652;\n    uint uStack12648;\n    uint uStack12644;\n    uint uStack12640;\n    uint uStack12636;\n    uint uStack12632;\n    uint uStack12624;\n    code *pcStack12616;\n    uint uStack12612;\n    uint uStack12608;\n    uint uStack12604;\n    uint uStack12600;\n    uint uStack12596;\n    uint uStack12592;\n    uint uStack12584;\n    code *pcStack12576;\n    uint uStack12572;\n    uint uStack12568;\n    uint uStack12564;\n    uint uStack12560;\n    uint uStack12556;\n    uint uStack12552;\n    uint uStack12544;\n    code *pcStack12536;\n    uint uStack12532;\n    uint uStack12528;\n    uint uStack12524;\n    uint uStack12520;\n    uint uStack12516;\n    uint uStack12512;\n    uint uStack12504;\n    code *pcStack12496;\n    uint uStack12492;\n    uint uStack12488;\n    uint uStack12484;\n    uint uStack12480;\n    uint uStack12476;\n    uint uStack12472;\n    uint uStack12464;\n    uint uStack12456;\n    uint uStack12452;\n    uint uStack12448;\n    uint uStack12444;\n    uint uStack12440;\n    uint uStack12436;\n    uint uStack12432;\n    uint uStack12424;\n    code *pcStack12416;\n    uint uStack12412;\n    uint uStack12408;\n    uint uStack12404;\n    uint uStack12400;\n    uint uStack12396;\n    uint uStack12392;\n    uint uStack12384;\n    code *pcStack12376;\n    uint uStack12372;\n    uint uStack12368;\n    uint uStack12364;\n    uint uStack12360;\n    uint uStack12356;\n    uint uStack12352;\n    uint uStack12344;\n    code *pcStack12336;\n    uint uStack12332;\n    uint uStack12328;\n    uint uStack12324;\n    uint uStack12320;\n    uint uStack12316;\n    uint uStack12312;\n    uint uStack12304;\n    code *pcStack12296;\n    uint uStack12292;\n    uint uStack12288;\n    uint uStack12284;\n    uint uStack12280;\n    uint uStack12276;\n    uint uStack12272;\n    uint uStack12264;\n    uint uStack12256;\n    uint uStack12252;\n    uint uStack12248;\n    uint uStack12244;\n    uint uStack12240;\n    uint uStack12236;\n    uint uStack12232;\n    uint uStack12224;\n    code *pcStack12216;\n    uint uStack12212;\n    uint uStack12208;\n    uint uStack12204;\n    uint uStack12200;\n    uint uStack12196;\n    uint uStack12192;\n    uint uStack12184;\n    code *pcStack12176;\n    uint uStack12172;\n    uint uStack12168;\n    uint uStack12164;\n    uint uStack12160;\n    uint uStack12156;\n    uint uStack12152;\n    uint uStack12144;\n    code *pcStack12136;\n    uint uStack12132;\n    uint uStack12128;\n    uint uStack12124;\n    uint uStack12120;\n    uint uStack12116;\n    uint uStack12112;\n    uint uStack12104;\n    code *pcStack12096;\n    uint uStack12092;\n    uint uStack12088;\n    uint uStack12084;\n    uint uStack12080;\n    uint uStack12076;\n    uint uStack12072;\n    uint uStack12064;\n    code *pcStack12056;\n    uint uStack12052;\n    uint uStack12048;\n    uint uStack12044;\n    uint uStack12040;\n    uint uStack12036;\n    uint uStack12032;\n    uint uStack12024;\n    code *pcStack12016;\n    uint uStack12012;\n    uint uStack12008;\n    uint uStack12004;\n    uint uStack12000;\n    uint uStack11996;\n    uint uStack11992;\n    uint uStack11984;\n    code *pcStack11976;\n    uint uStack11972;\n    uint uStack11968;\n    uint uStack11964;\n    uint uStack11960;\n    uint uStack11956;\n    uint uStack11952;\n    uint uStack11944;\n    uint uStack11936;\n    uint uStack11932;\n    uint uStack11928;\n    uint uStack11924;\n    uint uStack11920;\n    uint uStack11916;\n    uint uStack11912;\n    uint uStack11904;\n    code *pcStack11896;\n    uint uStack11892;\n    uint uStack11888;\n    uint uStack11884;\n    uint uStack11880;\n    uint uStack11876;\n    uint uStack11872;\n    uint uStack11864;\n    code *pcStack11856;\n    uint uStack11852;\n    uint uStack11848;\n    uint uStack11844;\n    uint uStack11840;\n    uint uStack11836;\n    uint uStack11832;\n    uint uStack11824;\n    code *pcStack11816;\n    uint uStack11812;\n    uint uStack11808;\n    uint uStack11804;\n    uint uStack11800;\n    uint uStack11796;\n    uint uStack11792;\n    uint uStack11784;\n    code *pcStack11776;\n    uint uStack11772;\n    uint uStack11768;\n    uint uStack11764;\n    uint uStack11760;\n    uint uStack11756;\n    uint uStack11752;\n    uint uStack11744;\n    code *pcStack11736;\n    uint uStack11732;\n    uint uStack11728;\n    uint uStack11724;\n    uint uStack11720;\n    uint uStack11716;\n    uint uStack11712;\n    uint uStack11704;\n    code *pcStack11696;\n    uint uStack11692;\n    uint uStack11688;\n    uint uStack11684;\n    uint uStack11680;\n    uint uStack11676;\n    uint uStack11672;\n    uint uStack11664;\n    uint uStack11656;\n    uint uStack11652;\n    uint uStack11648;\n    uint uStack11644;\n    uint uStack11640;\n    uint uStack11636;\n    uint uStack11632;\n    uint uStack11624;\n    code *pcStack11616;\n    uint uStack11612;\n    uint uStack11608;\n    uint uStack11604;\n    uint uStack11600;\n    uint uStack11596;\n    uint uStack11592;\n    uint uStack11584;\n    code *pcStack11576;\n    uint uStack11572;\n    uint uStack11568;\n    uint uStack11564;\n    uint uStack11560;\n    uint uStack11556;\n    uint uStack11552;\n    uint uStack11544;\n    code *pcStack11536;\n    uint uStack11532;\n    uint uStack11528;\n    uint uStack11524;\n    uint uStack11520;\n    uint uStack11516;\n    uint uStack11512;\n    uint uStack11504;\n    uint uStack11496;\n    uint uStack11492;\n    uint uStack11488;\n    uint uStack11484;\n    uint uStack11480;\n    uint uStack11476;\n    uint uStack11472;\n    uint uStack11464;\n    uint uStack11456;\n    uint uStack11452;\n    uint uStack11448;\n    uint uStack11444;\n    uint uStack11440;\n    uint uStack11436;\n    uint uStack11432;\n    uint uStack11424;\n    uint uStack11416;\n    uint uStack11412;\n    uint uStack11408;\n    uint uStack11404;\n    uint uStack11400;\n    uint uStack11396;\n    uint uStack11392;\n    uint uStack11384;\n    code *pcStack11376;\n    uint uStack11372;\n    uint uStack11368;\n    uint uStack11364;\n    uint uStack11360;\n    uint uStack11356;\n    uint uStack11352;\n    uint uStack11344;\n    code *pcStack11336;\n    uint uStack11332;\n    uint uStack11328;\n    uint uStack11324;\n    uint uStack11320;\n    uint uStack11316;\n    uint uStack11312;\n    uint uStack11304;\n    code *pcStack11296;\n    uint uStack11292;\n    uint uStack11288;\n    uint uStack11284;\n    uint uStack11280;\n    uint uStack11276;\n    uint uStack11272;\n    uint uStack11264;\n    uint uStack11256;\n    uint uStack11252;\n    uint uStack11248;\n    uint uStack11244;\n    uint uStack11240;\n    uint uStack11236;\n    uint uStack11232;\n    uint uStack11224;\n    uint uStack11216;\n    uint uStack11212;\n    uint uStack11208;\n    uint uStack11204;\n    uint uStack11200;\n    uint uStack11196;\n    uint uStack11192;\n    uint uStack11184;\n    code *pcStack11176;\n    uint uStack11172;\n    uint uStack11168;\n    uint uStack11164;\n    uint uStack11160;\n    uint uStack11156;\n    uint uStack11152;\n    uint uStack11144;\n    code *pcStack11136;\n    uint uStack11132;\n    uint uStack11128;\n    uint uStack11124;\n    uint uStack11120;\n    uint uStack11116;\n    uint uStack11112;\n    uint uStack11104;\n    code *pcStack11096;\n    uint uStack11092;\n    uint uStack11088;\n    uint uStack11084;\n    uint uStack11080;\n    uint uStack11076;\n    uint uStack11072;\n    uint uStack11064;\n    code *pcStack11056;\n    uint uStack11052;\n    uint uStack11048;\n    uint uStack11044;\n    uint uStack11040;\n    uint uStack11036;\n    uint uStack11032;\n    uint uStack11024;\n    code *pcStack11016;\n    uint uStack11012;\n    uint uStack11008;\n    uint uStack11004;\n    uint uStack11000;\n    uint uStack10996;\n    uint uStack10992;\n    uint uStack10984;\n    code *pcStack10976;\n    uint uStack10972;\n    uint uStack10968;\n    uint uStack10964;\n    uint uStack10960;\n    uint uStack10956;\n    uint uStack10952;\n    uint uStack10944;\n    code *pcStack10936;\n    uint uStack10932;\n    uint uStack10928;\n    uint uStack10924;\n    uint uStack10920;\n    uint uStack10916;\n    uint uStack10912;\n    uint uStack10904;\n    code *pcStack10896;\n    uint uStack10892;\n    uint uStack10888;\n    uint uStack10884;\n    uint uStack10880;\n    uint uStack10876;\n    uint uStack10872;\n    uint uStack10864;\n    code *pcStack10856;\n    uint uStack10852;\n    uint uStack10848;\n    uint uStack10844;\n    uint uStack10840;\n    uint uStack10836;\n    uint uStack10832;\n    uint uStack10824;\n    code *pcStack10816;\n    uint uStack10812;\n    uint uStack10808;\n    uint uStack10804;\n    uint uStack10800;\n    uint uStack10796;\n    uint uStack10792;\n    uint uStack10784;\n    code *pcStack10776;\n    uint uStack10772;\n    uint uStack10768;\n    uint uStack10764;\n    uint uStack10760;\n    uint uStack10756;\n    uint uStack10752;\n    uint uStack10744;\n    code *pcStack10736;\n    uint uStack10732;\n    uint uStack10728;\n    uint uStack10724;\n    uint uStack10720;\n    uint uStack10716;\n    uint uStack10712;\n    uint uStack10704;\n    uint uStack10696;\n    uint uStack10692;\n    uint uStack10688;\n    uint uStack10684;\n    uint uStack10680;\n    uint uStack10676;\n    uint uStack10672;\n    uint uStack10664;\n    code *pcStack10656;\n    uint uStack10652;\n    uint uStack10648;\n    uint uStack10644;\n    uint uStack10640;\n    uint uStack10636;\n    uint uStack10632;\n    uint uStack10624;\n    code *pcStack10616;\n    uint uStack10612;\n    uint uStack10608;\n    uint uStack10604;\n    uint uStack10600;\n    uint uStack10596;\n    uint uStack10592;\n    uint uStack10584;\n    code *pcStack10576;\n    uint uStack10572;\n    uint uStack10568;\n    uint uStack10564;\n    uint uStack10560;\n    uint uStack10556;\n    uint uStack10552;\n    uint uStack10544;\n    code *pcStack10536;\n    uint uStack10532;\n    uint uStack10528;\n    uint uStack10524;\n    uint uStack10520;\n    uint uStack10516;\n    uint uStack10512;\n    uint uStack10504;\n    uint uStack10496;\n    uint uStack10492;\n    uint uStack10488;\n    uint uStack10484;\n    uint uStack10480;\n    uint uStack10476;\n    uint uStack10472;\n    uint uStack10464;\n    code *pcStack10456;\n    uint uStack10452;\n    uint uStack10448;\n    uint uStack10444;\n    uint uStack10440;\n    uint uStack10436;\n    uint uStack10432;\n    uint uStack10424;\n    code *pcStack10416;\n    uint uStack10412;\n    uint uStack10408;\n    uint uStack10404;\n    uint uStack10400;\n    uint uStack10396;\n    uint uStack10392;\n    uint uStack10384;\n    code *pcStack10376;\n    uint uStack10372;\n    uint uStack10368;\n    uint uStack10364;\n    uint uStack10360;\n    uint uStack10356;\n    uint uStack10352;\n    uint uStack10344;\n    uint uStack10336;\n    uint uStack10332;\n    uint uStack10328;\n    uint uStack10324;\n    uint uStack10320;\n    uint uStack10316;\n    uint uStack10312;\n    uint uStack10304;\n    uint uStack10296;\n    uint uStack10292;\n    uint uStack10288;\n    uint uStack10284;\n    uint uStack10280;\n    uint uStack10276;\n    uint uStack10272;\n    uint uStack10264;\n    uint uStack10256;\n    uint uStack10252;\n    uint uStack10248;\n    uint uStack10244;\n    uint uStack10240;\n    uint uStack10236;\n    uint uStack10232;\n    uint uStack10224;\n    uint uStack10216;\n    uint uStack10212;\n    uint uStack10208;\n    uint uStack10204;\n    uint uStack10200;\n    uint uStack10196;\n    uint uStack10192;\n    uint uStack10184;\n    code *pcStack10176;\n    uint uStack10172;\n    uint uStack10168;\n    uint uStack10164;\n    uint uStack10160;\n    uint uStack10156;\n    uint uStack10152;\n    uint uStack10144;\n    uint uStack10136;\n    uint uStack10132;\n    uint uStack10128;\n    uint uStack10124;\n    uint uStack10120;\n    uint uStack10116;\n    uint uStack10112;\n    uint uStack10104;\n    uint uStack10096;\n    uint uStack10092;\n    uint uStack10088;\n    uint uStack10084;\n    uint uStack10080;\n    uint uStack10076;\n    uint uStack10072;\n    uint uStack10064;\n    uint uStack10056;\n    uint uStack10052;\n    uint uStack10048;\n    uint uStack10044;\n    uint uStack10040;\n    uint uStack10036;\n    uint uStack10032;\n    uint uStack10024;\n    uint uStack10016;\n    uint uStack10012;\n    uint uStack10008;\n    uint uStack10004;\n    uint uStack10000;\n    uint uStack9996;\n    uint uStack9992;\n    uint uStack9984;\n    uint uStack9976;\n    uint uStack9972;\n    uint uStack9968;\n    uint uStack9964;\n    uint uStack9960;\n    uint uStack9956;\n    uint uStack9952;\n    uint uStack9944;\n    uint uStack9936;\n    uint uStack9932;\n    uint uStack9928;\n    uint uStack9924;\n    uint uStack9920;\n    uint uStack9916;\n    uint uStack9912;\n    uint uStack9904;\n    uint uStack9896;\n    uint uStack9892;\n    uint uStack9888;\n    uint uStack9884;\n    uint uStack9880;\n    uint uStack9876;\n    uint uStack9872;\n    uint uStack9864;\n    uint uStack9856;\n    uint uStack9852;\n    uint uStack9848;\n    uint uStack9844;\n    uint uStack9840;\n    uint uStack9836;\n    uint uStack9832;\n    uint uStack9824;\n    uint uStack9816;\n    uint uStack9812;\n    uint uStack9808;\n    uint uStack9804;\n    uint uStack9800;\n    uint uStack9796;\n    uint uStack9792;\n    uint uStack9784;\n    uint uStack9776;\n    uint uStack9772;\n    uint uStack9768;\n    uint uStack9764;\n    uint uStack9760;\n    uint uStack9756;\n    uint uStack9752;\n    uint uStack9744;\n    uint uStack9736;\n    uint uStack9732;\n    uint uStack9728;\n    uint uStack9724;\n    uint uStack9720;\n    uint uStack9716;\n    uint uStack9712;\n    uint uStack9704;\n    uint uStack9696;\n    uint uStack9692;\n    uint uStack9688;\n    uint uStack9684;\n    uint uStack9680;\n    uint uStack9676;\n    uint uStack9672;\n    uint uStack9664;\n    uint uStack9656;\n    uint uStack9652;\n    uint uStack9648;\n    uint uStack9644;\n    uint uStack9640;\n    uint uStack9636;\n    uint uStack9632;\n    uint uStack9624;\n    uint uStack9616;\n    uint uStack9612;\n    uint uStack9608;\n    uint uStack9604;\n    uint uStack9600;\n    uint uStack9596;\n    uint uStack9592;\n    uint uStack9584;\n    uint uStack9576;\n    uint uStack9572;\n    uint uStack9568;\n    uint uStack9564;\n    uint uStack9560;\n    uint uStack9556;\n    uint uStack9552;\n    uint uStack9544;\n    uint uStack9536;\n    uint uStack9532;\n    uint uStack9528;\n    uint uStack9524;\n    uint uStack9520;\n    uint uStack9516;\n    uint uStack9512;\n    uint uStack9504;\n    uint uStack9496;\n    uint uStack9492;\n    uint uStack9488;\n    uint uStack9484;\n    uint uStack9480;\n    uint uStack9476;\n    uint uStack9472;\n    uint uStack9464;\n    uint uStack9456;\n    uint uStack9452;\n    uint uStack9448;\n    uint uStack9444;\n    uint uStack9440;\n    uint uStack9436;\n    uint uStack9432;\n    uint uStack9424;\n    uint uStack9416;\n    uint uStack9412;\n    uint uStack9408;\n    uint uStack9404;\n    uint uStack9400;\n    uint uStack9396;\n    uint uStack9392;\n    uint uStack9384;\n    uint uStack9376;\n    uint uStack9372;\n    uint uStack9368;\n    uint uStack9364;\n    uint uStack9360;\n    uint uStack9356;\n    uint uStack9352;\n    uint uStack9344;\n    uint uStack9336;\n    uint uStack9332;\n    uint uStack9328;\n    uint uStack9324;\n    uint uStack9320;\n    uint uStack9316;\n    uint uStack9312;\n    uint uStack9304;\n    uint uStack9296;\n    uint uStack9292;\n    uint uStack9288;\n    uint uStack9284;\n    uint uStack9280;\n    uint uStack9276;\n    uint uStack9272;\n    uint uStack9264;\n    uint uStack9256;\n    uint uStack9252;\n    uint uStack9248;\n    uint uStack9244;\n    uint uStack9240;\n    uint uStack9236;\n    uint uStack9232;\n    uint uStack9224;\n    uint uStack9216;\n    uint uStack9212;\n    uint uStack9208;\n    uint uStack9204;\n    uint uStack9200;\n    uint uStack9196;\n    uint uStack9192;\n    uint uStack9184;\n    uint uStack9176;\n    uint uStack9172;\n    uint uStack9168;\n    uint uStack9164;\n    uint uStack9160;\n    uint uStack9156;\n    uint uStack9152;\n    uint uStack9144;\n    uint uStack9136;\n    uint uStack9132;\n    uint uStack9128;\n    uint uStack9124;\n    uint uStack9120;\n    uint uStack9116;\n    uint uStack9112;\n    uint uStack9104;\n    uint uStack9096;\n    uint uStack9092;\n    uint uStack9088;\n    uint uStack9084;\n    uint uStack9080;\n    uint uStack9076;\n    uint uStack9072;\n    uint uStack9064;\n    uint uStack9056;\n    uint uStack9052;\n    uint uStack9048;\n    uint uStack9044;\n    uint uStack9040;\n    uint uStack9036;\n    uint uStack9032;\n    uint uStack9024;\n    uint uStack9016;\n    uint uStack9012;\n    uint uStack9008;\n    uint uStack9004;\n    uint uStack9000;\n    uint uStack8996;\n    uint uStack8992;\n    uint uStack8984;\n    uint uStack8976;\n    uint uStack8972;\n    uint uStack8968;\n    uint uStack8964;\n    uint uStack8960;\n    uint uStack8956;\n    uint uStack8952;\n    uint uStack8944;\n    code *pcStack8936;\n    uint uStack8932;\n    uint uStack8928;\n    uint uStack8924;\n    uint uStack8920;\n    uint uStack8916;\n    uint uStack8912;\n    uint uStack8904;\n    uint uStack8896;\n    uint uStack8892;\n    uint uStack8888;\n    uint uStack8884;\n    uint uStack8880;\n    uint uStack8876;\n    uint uStack8872;\n    uint uStack8864;\n    code *pcStack8856;\n    uint uStack8852;\n    uint uStack8848;\n    uint uStack8844;\n    uint uStack8840;\n    uint uStack8836;\n    uint uStack8832;\n    uint uStack8824;\n    code *pcStack8816;\n    uint uStack8812;\n    uint uStack8808;\n    uint uStack8804;\n    uint uStack8800;\n    uint uStack8796;\n    uint uStack8792;\n    uint uStack8784;\n    code *pcStack8776;\n    uint uStack8772;\n    uint uStack8768;\n    uint uStack8764;\n    uint uStack8760;\n    uint uStack8756;\n    uint uStack8752;\n    uint uStack8744;\n    code *pcStack8736;\n    uint uStack8732;\n    uint uStack8728;\n    uint uStack8724;\n    uint uStack8720;\n    uint uStack8716;\n    uint uStack8712;\n    uint uStack8704;\n    code *pcStack8696;\n    uint uStack8692;\n    uint uStack8688;\n    uint uStack8684;\n    uint uStack8680;\n    uint uStack8676;\n    uint uStack8672;\n    uint uStack8664;\n    uint uStack8656;\n    uint uStack8652;\n    uint uStack8648;\n    uint uStack8644;\n    uint uStack8640;\n    uint uStack8636;\n    uint uStack8632;\n    uint uStack8624;\n    uint uStack8616;\n    uint uStack8612;\n    uint uStack8608;\n    uint uStack8604;\n    uint uStack8600;\n    uint uStack8596;\n    uint uStack8592;\n    uint uStack8584;\n    uint uStack8576;\n    uint uStack8572;\n    uint uStack8568;\n    uint uStack8564;\n    uint uStack8560;\n    uint uStack8556;\n    uint uStack8552;\n    uint uStack8544;\n    code *pcStack8536;\n    uint uStack8532;\n    uint uStack8528;\n    uint uStack8524;\n    uint uStack8520;\n    uint uStack8516;\n    uint uStack8512;\n    uint uStack8504;\n    code *pcStack8496;\n    uint uStack8492;\n    uint uStack8488;\n    uint uStack8484;\n    uint uStack8480;\n    uint uStack8476;\n    uint uStack8472;\n    uint uStack8464;\n    code *pcStack8456;\n    uint uStack8452;\n    uint uStack8448;\n    uint uStack8444;\n    uint uStack8440;\n    uint uStack8436;\n    uint uStack8432;\n    uint uStack8424;\n    code *pcStack8416;\n    uint uStack8412;\n    uint uStack8408;\n    uint uStack8404;\n    uint uStack8400;\n    uint uStack8396;\n    uint uStack8392;\n    uint uStack8384;\n    uint uStack8376;\n    uint uStack8372;\n    uint uStack8368;\n    uint uStack8364;\n    uint uStack8360;\n    uint uStack8356;\n    uint uStack8352;\n    uint uStack8344;\n    code *pcStack8336;\n    uint uStack8332;\n    uint uStack8328;\n    uint uStack8324;\n    uint uStack8320;\n    uint uStack8316;\n    uint uStack8312;\n    uint uStack8304;\n    code *pcStack8296;\n    uint uStack8292;\n    uint uStack8288;\n    uint uStack8284;\n    uint uStack8280;\n    uint uStack8276;\n    uint uStack8272;\n    uint uStack8264;\n    uint uStack8256;\n    uint uStack8252;\n    uint uStack8248;\n    uint uStack8244;\n    uint uStack8240;\n    uint uStack8236;\n    uint uStack8232;\n    uint uStack8224;\n    uint uStack8216;\n    uint uStack8212;\n    uint uStack8208;\n    uint uStack8204;\n    uint uStack8200;\n    uint uStack8196;\n    uint var_1ffch;\n    uint var_1ff4h;\n    uint var_1fech;\n    uint uStack8172;\n    uint uStack8168;\n    uint uStack8164;\n    uint var_1fdch;\n    uint var_1fd8h;\n    uint var_1fd4h;\n    uint var_1fcch;\n    code *var_1fc4h;\n    uint uStack8132;\n    uint uStack8128;\n    uint uStack8124;\n    uint var_1fb4h;\n    uint var_1fb0h;\n    uint var_1fach;\n    uint var_1fa4h;\n    uint var_1f9ch;\n    uint uStack8092;\n    uint uStack8088;\n    uint uStack8084;\n    uint var_1f8ch;\n    uint var_1f88h;\n    uint var_1f84h;\n    uint var_1f7ch;\n    code *var_1f74h;\n    uint uStack8052;\n    uint uStack8048;\n    uint uStack8044;\n    uint var_1f64h;\n    uint var_1f60h;\n    uint var_1f5ch;\n    uint var_1f54h;\n    code *var_1f4ch;\n    uint uStack8012;\n    uint uStack8008;\n    uint uStack8004;\n    uint var_1f3ch;\n    uint var_1f38h;\n    uint var_1f34h;\n    uint var_1f2ch;\n    code *var_1f24h;\n    uint uStack7972;\n    uint uStack7968;\n    uint uStack7964;\n    uint var_1f14h;\n    uint var_1f10h;\n    uint var_1f0ch;\n    uint var_1f04h;\n    uint var_1efch;\n    uint uStack7932;\n    uint uStack7928;\n    uint uStack7924;\n    uint var_1eech;\n    uint var_1ee8h;\n    uint var_1ee4h;\n    uint var_1edch;\n    code *var_1ed4h;\n    uint uStack7892;\n    uint uStack7888;\n    uint uStack7884;\n    uint var_1ec4h;\n    uint var_1ec0h;\n    uint var_1ebch;\n    uint var_1eb4h;\n    uint var_1each;\n    uint uStack7852;\n    uint uStack7848;\n    uint uStack7844;\n    uint var_1e9ch;\n    uint var_1e98h;\n    uint var_1e94h;\n    uint var_1e8ch;\n    code *var_1e84h;\n    uint uStack7812;\n    uint uStack7808;\n    uint uStack7804;\n    uint var_1e74h;\n    uint var_1e70h;\n    uint var_1e6ch;\n    uint var_1e64h;\n    uint var_1e5ch;\n    uint uStack7772;\n    uint uStack7768;\n    uint uStack7764;\n    uint var_1e4ch;\n    uint var_1e48h;\n    uint var_1e44h;\n    uint var_1e3ch;\n    uint var_1e34h;\n    uint uStack7732;\n    uint uStack7728;\n    uint uStack7724;\n    uint var_1e24h;\n    uint var_1e20h;\n    uint var_1e1ch;\n    uint var_1e14h;\n    code *var_1e0ch;\n    uint uStack7692;\n    uint uStack7688;\n    uint uStack7684;\n    uint var_1dfch;\n    uint var_1df8h;\n    uint var_1df4h;\n    uint var_1dech;\n    uint var_1de4h;\n    uint uStack7652;\n    uint uStack7648;\n    uint uStack7644;\n    uint var_1dd4h;\n    uint var_1dd0h;\n    uint var_1dcch;\n    uint var_1dc4h;\n    uint var_1dbch;\n    uint uStack7612;\n    uint uStack7608;\n    uint uStack7604;\n    uint var_1dach;\n    uint var_1da8h;\n    uint var_1da4h;\n    uint var_1d9ch;\n    uint var_1d94h;\n    uint uStack7572;\n    uint uStack7568;\n    uint uStack7564;\n    uint var_1d84h;\n    uint var_1d80h;\n    uint var_1d7ch;\n    uint var_1d74h;\n    code *var_1d6ch;\n    uint uStack7532;\n    uint uStack7528;\n    uint uStack7524;\n    uint var_1d5ch;\n    uint var_1d58h;\n    uint var_1d54h;\n    uint var_1d4ch;\n    code *var_1d44h;\n    uint uStack7492;\n    uint uStack7488;\n    uint uStack7484;\n    uint var_1d34h;\n    uint var_1d30h;\n    uint var_1d2ch;\n    uint var_1d24h;\n    uint var_1d1ch;\n    uint uStack7452;\n    uint uStack7448;\n    uint uStack7444;\n    uint var_1d0ch;\n    uint var_1d08h;\n    uint var_1d04h;\n    uint var_1cfch;\n    uint var_1cf4h;\n    uint uStack7412;\n    uint uStack7408;\n    uint uStack7404;\n    uint var_1ce4h;\n    uint var_1ce0h;\n    uint var_1cdch;\n    uint var_1cd4h;\n    code *var_1ccch;\n    uint uStack7372;\n    uint uStack7368;\n    uint uStack7364;\n    uint var_1cbch;\n    uint var_1cb8h;\n    uint var_1cb4h;\n    uint var_1cach;\n    code *var_1ca4h;\n    uint uStack7332;\n    uint uStack7328;\n    uint uStack7324;\n    uint var_1c94h;\n    uint var_1c90h;\n    uint var_1c8ch;\n    uint var_1c84h;\n    code *var_1c7ch;\n    uint uStack7292;\n    uint uStack7288;\n    uint uStack7284;\n    uint var_1c6ch;\n    uint var_1c68h;\n    uint var_1c64h;\n    uint var_1c5ch;\n    code *var_1c54h;\n    uint uStack7252;\n    uint uStack7248;\n    uint uStack7244;\n    uint var_1c44h;\n    uint var_1c40h;\n    uint var_1c3ch;\n    uint var_1c34h;\n    code *var_1c2ch;\n    uint uStack7212;\n    uint uStack7208;\n    uint uStack7204;\n    uint var_1c1ch;\n    uint var_1c18h;\n    uint var_1c14h;\n    uint var_1c0ch;\n    code *var_1c04h;\n    uint uStack7172;\n    uint uStack7168;\n    uint uStack7164;\n    uint var_1bf4h;\n    uint var_1bf0h;\n    uint var_1bech;\n    uint var_1be4h;\n    code *var_1bdch;\n    uint uStack7132;\n    uint uStack7128;\n    uint uStack7124;\n    uint var_1bcch;\n    uint var_1bc8h;\n    uint var_1bc4h;\n    uint var_1bbch;\n    code *var_1bb4h;\n    uint uStack7092;\n    uint uStack7088;\n    uint uStack7084;\n    uint var_1ba4h;\n    uint var_1ba0h;\n    uint var_1b9ch;\n    uint var_1b94h;\n    code *var_1b8ch;\n    uint uStack7052;\n    uint uStack7048;\n    uint uStack7044;\n    uint var_1b7ch;\n    uint var_1b78h;\n    uint var_1b74h;\n    uint var_1b6ch;\n    code *var_1b64h;\n    uint uStack7012;\n    uint uStack7008;\n    uint uStack7004;\n    uint var_1b54h;\n    uint var_1b50h;\n    uint var_1b4ch;\n    uint var_1b44h;\n    uint var_1b3ch;\n    uint uStack6972;\n    uint uStack6968;\n    uint uStack6964;\n    uint var_1b2ch;\n    uint var_1b28h;\n    uint var_1b24h;\n    uint var_1b1ch;\n    uint var_1b14h;\n    uint uStack6932;\n    uint uStack6928;\n    uint uStack6924;\n    uint var_1b04h;\n    uint var_1b00h;\n    uint var_1afch;\n    uint var_1af4h;\n    uint var_1aech;\n    uint uStack6892;\n    uint uStack6888;\n    uint uStack6884;\n    uint var_1adch;\n    uint var_1ad8h;\n    uint var_1ad4h;\n    uint var_1acch;\n    uint var_1ac4h;\n    uint uStack6852;\n    uint uStack6848;\n    uint uStack6844;\n    uint var_1ab4h;\n    uint var_1ab0h;\n    uint var_1aach;\n    uint var_1aa4h;\n    uint var_1a9ch;\n    uint uStack6812;\n    uint uStack6808;\n    uint uStack6804;\n    uint var_1a8ch;\n    uint var_1a88h;\n    uint var_1a84h;\n    uint var_1a7ch;\n    uint var_1a74h;\n    uint uStack6772;\n    uint uStack6768;\n    uint uStack6764;\n    uint var_1a64h;\n    uint var_1a60h;\n    uint var_1a5ch;\n    uint var_1a54h;\n    uint var_1a4ch;\n    uint uStack6732;\n    uint uStack6728;\n    uint uStack6724;\n    uint var_1a3ch;\n    uint var_1a38h;\n    uint var_1a34h;\n    uint var_1a2ch;\n    code *var_1a24h;\n    uint uStack6692;\n    uint uStack6688;\n    uint uStack6684;\n    uint var_1a14h;\n    uint var_1a10h;\n    uint var_1a0ch;\n    uint var_1a04h;\n    code *var_19fch;\n    uint uStack6652;\n    uint uStack6648;\n    uint uStack6644;\n    uint var_19ech;\n    uint var_19e8h;\n    uint var_19e4h;\n    uint var_19dch;\n    code *var_19d4h;\n    uint uStack6612;\n    uint uStack6608;\n    uint uStack6604;\n    uint var_19c4h;\n    uint var_19c0h;\n    uint var_19bch;\n    uint var_19b4h;\n    uint var_19ach;\n    uint uStack6572;\n    uint uStack6568;\n    uint uStack6564;\n    uint var_199ch;\n    uint var_1998h;\n    uint var_1994h;\n    uint var_198ch;\n    uint var_1984h;\n    uint uStack6532;\n    uint uStack6528;\n    uint uStack6524;\n    uint var_1974h;\n    uint var_1970h;\n    uint var_196ch;\n    uint var_1964h;\n    uint var_195ch;\n    uint uStack6492;\n    uint uStack6488;\n    uint uStack6484;\n    uint var_194ch;\n    uint var_1948h;\n    uint var_1944h;\n    uint var_193ch;\n    uint var_1934h;\n    uint uStack6452;\n    uint uStack6448;\n    uint uStack6444;\n    uint var_1924h;\n    uint var_1920h;\n    uint var_191ch;\n    uint var_1914h;\n    uint var_190ch;\n    uint uStack6412;\n    uint uStack6408;\n    uint uStack6404;\n    uint var_18fch;\n    uint var_18f8h;\n    uint var_18f4h;\n    uint var_18ech;\n    code *var_18e4h;\n    uint uStack6372;\n    uint uStack6368;\n    uint uStack6364;\n    uint var_18d4h;\n    uint var_18d0h;\n    uint var_18cch;\n    uint var_18c4h;\n    uint var_18bch;\n    uint uStack6332;\n    uint uStack6328;\n    uint uStack6324;\n    uint var_18ach;\n    uint var_18a8h;\n    uint var_18a4h;\n    uint var_189ch;\n    code *var_1894h;\n    uint uStack6292;\n    uint uStack6288;\n    uint uStack6284;\n    uint var_1884h;\n    uint var_1880h;\n    uint var_187ch;\n    uint var_1874h;\n    code *var_186ch;\n    uint uStack6252;\n    uint uStack6248;\n    uint uStack6244;\n    uint var_185ch;\n    uint var_1858h;\n    uint var_1854h;\n    uint var_184ch;\n    uint var_1844h;\n    uint uStack6212;\n    uint uStack6208;\n    uint uStack6204;\n    uint var_1834h;\n    uint var_1830h;\n    uint var_182ch;\n    uint var_1824h;\n    code *var_181ch;\n    uint uStack6172;\n    uint uStack6168;\n    uint uStack6164;\n    uint var_180ch;\n    uint var_1808h;\n    uint var_1804h;\n    uint var_17fch;\n    code *var_17f4h;\n    uint uStack6132;\n    uint uStack6128;\n    uint uStack6124;\n    uint var_17e4h;\n    uint var_17e0h;\n    uint var_17dch;\n    uint var_17d4h;\n    uint var_17cch;\n    uint uStack6092;\n    uint uStack6088;\n    uint uStack6084;\n    uint var_17bch;\n    uint var_17b8h;\n    uint var_17b4h;\n    uint var_17ach;\n    uint var_17a4h;\n    uint uStack6052;\n    uint uStack6048;\n    uint uStack6044;\n    uint var_1794h;\n    uint var_1790h;\n    uint var_178ch;\n    uint var_1784h;\n    code *var_177ch;\n    uint uStack6012;\n    uint uStack6008;\n    uint uStack6004;\n    uint var_176ch;\n    uint var_1768h;\n    uint var_1764h;\n    uint var_175ch;\n    code *var_1754h;\n    uint uStack5972;\n    uint uStack5968;\n    uint uStack5964;\n    uint var_1744h;\n    uint var_1740h;\n    uint var_173ch;\n    uint var_1734h;\n    code *var_172ch;\n    uint uStack5932;\n    uint uStack5928;\n    uint uStack5924;\n    uint var_171ch;\n    uint var_1718h;\n    uint var_1714h;\n    uint var_170ch;\n    code *var_1704h;\n    uint uStack5892;\n    uint uStack5888;\n    uint uStack5884;\n    uint var_16f4h;\n    uint var_16f0h;\n    uint var_16ech;\n    uint var_16e4h;\n    code *var_16dch;\n    uint uStack5852;\n    uint uStack5848;\n    uint uStack5844;\n    uint var_16cch;\n    uint var_16c8h;\n    uint var_16c4h;\n    uint var_16bch;\n    code *var_16b4h;\n    uint uStack5812;\n    uint uStack5808;\n    uint uStack5804;\n    uint var_16a4h;\n    uint var_16a0h;\n    uint var_169ch;\n    uint var_1694h;\n    code *var_168ch;\n    uint uStack5772;\n    uint uStack5768;\n    uint uStack5764;\n    uint var_167ch;\n    uint var_1678h;\n    uint var_1674h;\n    uint var_166ch;\n    code *var_1664h;\n    uint uStack5732;\n    uint uStack5728;\n    uint uStack5724;\n    uint var_1654h;\n    uint var_1650h;\n    uint var_164ch;\n    uint var_1644h;\n    code *var_163ch;\n    uint uStack5692;\n    uint uStack5688;\n    uint uStack5684;\n    uint var_162ch;\n    uint var_1628h;\n    uint var_1624h;\n    uint var_161ch;\n    code *var_1614h;\n    uint uStack5652;\n    uint uStack5648;\n    uint uStack5644;\n    uint var_1604h;\n    uint var_1600h;\n    uint var_15fch;\n    uint var_15f4h;\n    code *var_15ech;\n    uint uStack5612;\n    uint uStack5608;\n    uint uStack5604;\n    uint var_15dch;\n    uint var_15d8h;\n    uint var_15d4h;\n    uint var_15cch;\n    code *var_15c4h;\n    uint uStack5572;\n    uint uStack5568;\n    uint uStack5564;\n    uint var_15b4h;\n    uint var_15b0h;\n    uint var_15ach;\n    uint var_15a4h;\n    code *var_159ch;\n    uint uStack5532;\n    uint uStack5528;\n    uint uStack5524;\n    uint var_158ch;\n    uint var_1588h;\n    uint var_1584h;\n    uint var_157ch;\n    code *var_1574h;\n    uint uStack5492;\n    uint uStack5488;\n    uint uStack5484;\n    uint var_1564h;\n    uint var_1560h;\n    uint var_155ch;\n    uint var_1554h;\n    code *var_154ch;\n    uint uStack5452;\n    uint uStack5448;\n    uint uStack5444;\n    uint var_153ch;\n    uint var_1538h;\n    uint var_1534h;\n    uint var_152ch;\n    code *var_1524h;\n    uint uStack5412;\n    uint uStack5408;\n    uint uStack5404;\n    uint var_1514h;\n    uint var_1510h;\n    uint var_150ch;\n    uint var_1504h;\n    code *var_14fch;\n    uint uStack5372;\n    uint uStack5368;\n    uint uStack5364;\n    uint var_14ech;\n    uint var_14e8h;\n    uint var_14e4h;\n    uint var_14dch;\n    code *var_14d4h;\n    uint uStack5332;\n    uint uStack5328;\n    uint uStack5324;\n    uint var_14c4h;\n    uint var_14c0h;\n    uint var_14bch;\n    uint var_14b4h;\n    uint var_14ach;\n    uint uStack5292;\n    uint uStack5288;\n    uint uStack5284;\n    uint var_149ch;\n    uint var_1498h;\n    uint var_1494h;\n    uint var_148ch;\n    uint var_1484h;\n    uint uStack5252;\n    uint uStack5248;\n    uint uStack5244;\n    uint var_1474h;\n    uint var_1470h;\n    uint var_146ch;\n    uint var_1464h;\n    code *var_145ch;\n    uint uStack5212;\n    uint uStack5208;\n    uint uStack5204;\n    uint var_144ch;\n    uint var_1448h;\n    uint var_1444h;\n    uint var_143ch;\n    code *var_1434h;\n    uint uStack5172;\n    uint uStack5168;\n    uint uStack5164;\n    uint var_1424h;\n    uint var_1420h;\n    uint var_141ch;\n    uint var_1414h;\n    uint var_140ch;\n    uint uStack5132;\n    uint uStack5128;\n    uint uStack5124;\n    uint var_13fch;\n    uint var_13f8h;\n    uint var_13f4h;\n    uint var_13ech;\n    code *var_13e4h;\n    uint uStack5092;\n    uint uStack5088;\n    uint uStack5084;\n    uint var_13d4h;\n    uint var_13d0h;\n    uint var_13cch;\n    uint var_13c4h;\n    code *var_13bch;\n    uint uStack5052;\n    uint uStack5048;\n    uint uStack5044;\n    uint var_13ach;\n    uint var_13a8h;\n    uint var_13a4h;\n    uint var_139ch;\n    code *var_1394h;\n    uint uStack5012;\n    uint uStack5008;\n    uint uStack5004;\n    uint var_1384h;\n    uint var_1380h;\n    uint var_137ch;\n    uint var_1374h;\n    code *var_136ch;\n    uint uStack4972;\n    uint uStack4968;\n    uint uStack4964;\n    uint var_135ch;\n    uint var_1358h;\n    uint var_1354h;\n    uint var_134ch;\n    code *var_1344h;\n    uint uStack4932;\n    uint uStack4928;\n    uint uStack4924;\n    uint var_1334h;\n    uint var_1330h;\n    uint var_132ch;\n    uint var_1324h;\n    code *var_131ch;\n    uint uStack4892;\n    uint uStack4888;\n    uint uStack4884;\n    uint var_130ch;\n    uint var_1308h;\n    uint var_1304h;\n    uint var_12fch;\n    code *var_12f4h;\n    uint uStack4852;\n    uint uStack4848;\n    uint uStack4844;\n    uint var_12e4h;\n    uint var_12e0h;\n    uint var_12dch;\n    uint var_12d4h;\n    uint var_12cch;\n    uint uStack4812;\n    uint uStack4808;\n    uint uStack4804;\n    uint var_12bch;\n    uint var_12b8h;\n    uint var_12b4h;\n    uint var_12ach;\n    code *var_12a4h;\n    uint uStack4772;\n    uint uStack4768;\n    uint uStack4764;\n    uint var_1294h;\n    uint var_1290h;\n    uint var_128ch;\n    uint var_1284h;\n    uint var_127ch;\n    uint uStack4732;\n    uint uStack4728;\n    uint uStack4724;\n    uint var_126ch;\n    uint var_1268h;\n    uint var_1264h;\n    uint var_125ch;\n    uint var_1254h;\n    uint uStack4692;\n    uint uStack4688;\n    uint uStack4684;\n    uint var_1244h;\n    uint var_1240h;\n    uint var_123ch;\n    uint var_1234h;\n    uint var_122ch;\n    uint uStack4652;\n    uint uStack4648;\n    uint uStack4644;\n    uint var_121ch;\n    uint var_1218h;\n    uint var_1214h;\n    uint var_120ch;\n    uint var_1204h;\n    uint uStack4612;\n    uint uStack4608;\n    uint uStack4604;\n    uint var_11f4h;\n    uint var_11f0h;\n    uint var_11ech;\n    uint var_11e4h;\n    uint var_11dch;\n    uint uStack4572;\n    uint uStack4568;\n    uint uStack4564;\n    uint var_11cch;\n    uint var_11c8h;\n    uint var_11c4h;\n    uint var_11bch;\n    uint var_11b4h;\n    uint uStack4532;\n    uint uStack4528;\n    uint uStack4524;\n    uint var_11a4h;\n    uint var_11a0h;\n    uint var_119ch;\n    uint var_1194h;\n    uint var_118ch;\n    uint uStack4492;\n    uint uStack4488;\n    uint uStack4484;\n    uint var_117ch;\n    uint var_1178h;\n    uint var_1174h;\n    uint var_116ch;\n    uint var_1164h;\n    uint uStack4452;\n    uint uStack4448;\n    uint uStack4444;\n    uint var_1154h;\n    uint var_1150h;\n    uint var_114ch;\n    uint var_1144h;\n    uint var_113ch;\n    uint uStack4412;\n    uint uStack4408;\n    uint uStack4404;\n    uint var_112ch;\n    uint var_1128h;\n    uint var_1124h;\n    uint var_111ch;\n    uint var_1114h;\n    uint uStack4372;\n    uint uStack4368;\n    uint uStack4364;\n    uint var_1104h;\n    uint var_1100h;\n    uint var_10fch;\n    uint var_10f4h;\n    uint var_10ech;\n    uint uStack4332;\n    uint uStack4328;\n    uint uStack4324;\n    uint var_10dch;\n    uint var_10d8h;\n    uint var_10d4h;\n    uint var_10cch;\n    code *var_10c4h;\n    uint uStack4292;\n    uint uStack4288;\n    uint uStack4284;\n    uint var_10b4h;\n    uint var_10b0h;\n    uint var_10ach;\n    uint var_10a4h;\n    code *var_109ch;\n    uint uStack4252;\n    uint uStack4248;\n    uint uStack4244;\n    uint var_108ch;\n    uint var_1088h;\n    uint var_1084h;\n    uint var_107ch;\n    code *var_1074h;\n    uint uStack4212;\n    uint uStack4208;\n    uint uStack4204;\n    uint var_1064h;\n    uint var_1060h;\n    uint var_105ch;\n    uint var_1054h;\n    uint var_104ch;\n    uint uStack4172;\n    uint uStack4168;\n    uint uStack4164;\n    uint var_103ch;\n    uint var_1038h;\n    uint var_1034h;\n    uint var_102ch;\n    uint var_1024h;\n    uint uStack4132;\n    uint uStack4128;\n    uint uStack4124;\n    uint var_1014h;\n    uint var_1010h;\n    uint var_100ch;\n    uint var_1004h;\n    code *var_ffch;\n    uint uStack4092;\n    uint uStack4088;\n    uint uStack4084;\n    uint var_fech;\n    uint var_fe8h;\n    uint var_fe4h;\n    uint var_fdch;\n    uint var_fd4h;\n    uint uStack4052;\n    uint uStack4048;\n    uint uStack4044;\n    uint var_fc4h;\n    uint var_fc0h;\n    uint var_fbch;\n    uint var_fb4h;\n    code *var_fach;\n    uint uStack4012;\n    uint uStack4008;\n    uint uStack4004;\n    uint var_f9ch;\n    uint var_f98h;\n    uint var_f94h;\n    uint var_f8ch;\n    uint var_f84h;\n    uint uStack3972;\n    uint uStack3968;\n    uint uStack3964;\n    uint var_f74h;\n    uint var_f70h;\n    uint var_f6ch;\n    uint var_f64h;\n    uint var_f5ch;\n    uint uStack3932;\n    uint uStack3928;\n    uint uStack3924;\n    uint var_f4ch;\n    uint var_f48h;\n    uint var_f44h;\n    uint var_f3ch;\n    uint var_f34h;\n    uint uStack3892;\n    uint uStack3888;\n    uint uStack3884;\n    uint var_f24h;\n    uint var_f20h;\n    uint var_f1ch;\n    uint var_f14h;\n    uint var_f0ch;\n    uint uStack3852;\n    uint uStack3848;\n    uint uStack3844;\n    uint var_efch;\n    uint var_ef8h;\n    uint var_ef4h;\n    uint var_eech;\n    code *var_ee4h;\n    uint uStack3812;\n    uint uStack3808;\n    uint uStack3804;\n    uint var_ed4h;\n    uint var_ed0h;\n    uint var_ecch;\n    uint var_ec4h;\n    code *var_ebch;\n    uint uStack3772;\n    uint uStack3768;\n    uint uStack3764;\n    uint var_each;\n    uint var_ea8h;\n    uint var_ea4h;\n    uint var_e9ch;\n    uint var_e94h;\n    uint uStack3732;\n    uint uStack3728;\n    uint uStack3724;\n    uint var_e84h;\n    uint var_e80h;\n    uint var_e7ch;\n    uint var_e74h;\n    uint var_e6ch;\n    uint uStack3692;\n    uint uStack3688;\n    uint uStack3684;\n    uint var_e5ch;\n    uint var_e58h;\n    uint var_e54h;\n    uint var_e4ch;\n    uint var_e44h;\n    uint uStack3652;\n    uint uStack3648;\n    uint uStack3644;\n    uint var_e34h;\n    uint var_e30h;\n    uint var_e2ch;\n    uint var_e24h;\n    uint var_e1ch;\n    uint uStack3612;\n    uint uStack3608;\n    uint uStack3604;\n    uint var_e0ch;\n    uint var_e08h;\n    uint var_e04h;\n    uint var_dfch;\n    code *var_df4h;\n    uint uStack3572;\n    uint uStack3568;\n    uint uStack3564;\n    uint var_de4h;\n    uint var_de0h;\n    uint var_ddch;\n    uint var_dd4h;\n    code *var_dcch;\n    uint uStack3532;\n    uint uStack3528;\n    uint uStack3524;\n    uint var_dbch;\n    uint var_db8h;\n    uint var_db4h;\n    uint var_dach;\n    uint var_da4h;\n    uint uStack3492;\n    uint uStack3488;\n    uint uStack3484;\n    uint var_d94h;\n    uint var_d90h;\n    uint var_d8ch;\n    uint var_d84h;\n    uint var_d7ch;\n    uint uStack3452;\n    uint uStack3448;\n    uint uStack3444;\n    uint var_d6ch;\n    uint var_d68h;\n    uint var_d64h;\n    uint var_d5ch;\n    uint var_d54h;\n    uint uStack3412;\n    uint uStack3408;\n    uint uStack3404;\n    uint var_d44h;\n    uint var_d40h;\n    uint var_d3ch;\n    uint var_d34h;\n    uint var_d2ch;\n    uint uStack3372;\n    uint uStack3368;\n    uint uStack3364;\n    uint var_d1ch;\n    uint var_d18h;\n    uint var_d14h;\n    uint var_d0ch;\n    code *var_d04h;\n    uint uStack3332;\n    uint uStack3328;\n    uint uStack3324;\n    uint var_cf4h;\n    uint var_cf0h;\n    uint var_cech;\n    uint var_ce4h;\n    uint var_cdch;\n    uint uStack3292;\n    uint uStack3288;\n    uint uStack3284;\n    uint var_ccch;\n    uint var_cc8h;\n    uint var_cc4h;\n    uint var_cbch;\n    code *var_cb4h;\n    uint uStack3252;\n    uint uStack3248;\n    uint uStack3244;\n    uint var_ca4h;\n    uint var_ca0h;\n    uint var_c9ch;\n    uint var_c94h;\n    code *var_c8ch;\n    uint uStack3212;\n    uint uStack3208;\n    uint uStack3204;\n    uint var_c7ch;\n    uint var_c78h;\n    uint var_c74h;\n    uint var_c6ch;\n    uint var_c64h;\n    uint uStack3172;\n    uint uStack3168;\n    uint uStack3164;\n    uint var_c54h;\n    uint var_c50h;\n    uint var_c4ch;\n    uint var_c44h;\n    code *var_c3ch;\n    uint uStack3132;\n    uint uStack3128;\n    uint uStack3124;\n    uint var_c2ch;\n    uint var_c28h;\n    uint var_c24h;\n    uint var_c1ch;\n    code *var_c14h;\n    uint uStack3092;\n    uint uStack3088;\n    uint uStack3084;\n    uint var_c04h;\n    uint var_c00h;\n    uint var_bfch;\n    uint var_bf4h;\n    code *var_bech;\n    uint uStack3052;\n    uint uStack3048;\n    uint uStack3044;\n    uint var_bdch;\n    uint var_bd8h;\n    uint var_bd4h;\n    uint var_bcch;\n    code *var_bc4h;\n    uint uStack3012;\n    uint uStack3008;\n    uint uStack3004;\n    uint var_bb4h;\n    uint var_bb0h;\n    uint var_bach;\n    uint var_ba4h;\n    uint var_b9ch;\n    uint uStack2972;\n    uint uStack2968;\n    uint uStack2964;\n    uint var_b8ch;\n    uint var_b88h;\n    uint var_b84h;\n    uint var_b7ch;\n    code *var_b74h;\n    uint uStack2932;\n    uint uStack2928;\n    uint uStack2924;\n    uint var_b64h;\n    uint var_b60h;\n    uint var_b5ch;\n    uint var_b54h;\n    code *var_b4ch;\n    uint uStack2892;\n    uint uStack2888;\n    uint uStack2884;\n    uint var_b3ch;\n    uint var_b38h;\n    uint var_b34h;\n    uint var_b2ch;\n    code *var_b24h;\n    uint uStack2852;\n    uint uStack2848;\n    uint uStack2844;\n    uint var_b14h;\n    uint var_b10h;\n    uint var_b0ch;\n    uint var_b04h;\n    code *var_afch;\n    uint uStack2812;\n    uint uStack2808;\n    uint uStack2804;\n    uint var_aech;\n    uint var_ae8h;\n    uint var_ae4h;\n    uint var_adch;\n    code *var_ad4h;\n    uint uStack2772;\n    uint uStack2768;\n    uint uStack2764;\n    uint var_ac4h;\n    uint var_ac0h;\n    uint var_abch;\n    uint var_ab4h;\n    uint var_aach;\n    uint uStack2732;\n    uint uStack2728;\n    uint uStack2724;\n    uint var_a9ch;\n    uint var_a98h;\n    uint var_a94h;\n    uint var_a8ch;\n    code *var_a84h;\n    uint uStack2692;\n    uint uStack2688;\n    uint uStack2684;\n    uint var_a74h;\n    uint var_a70h;\n    uint var_a6ch;\n    uint var_a64h;\n    uint var_a5ch;\n    uint uStack2652;\n    uint uStack2648;\n    uint uStack2644;\n    uint var_a4ch;\n    uint var_a48h;\n    uint var_a44h;\n    uint var_a3ch;\n    code *var_a34h;\n    uint uStack2612;\n    uint uStack2608;\n    uint uStack2604;\n    uint var_a24h;\n    uint var_a20h;\n    uint var_a1ch;\n    uint var_a14h;\n    code *var_a0ch;\n    uint uStack2572;\n    uint uStack2568;\n    uint uStack2564;\n    uint var_9fch;\n    uint var_9f8h;\n    uint var_9f4h;\n    uint var_9ech;\n    code *var_9e4h;\n    uint uStack2532;\n    uint uStack2528;\n    uint uStack2524;\n    uint var_9d4h;\n    uint var_9d0h;\n    uint var_9cch;\n    uint var_9c4h;\n    code *var_9bch;\n    uint uStack2492;\n    uint uStack2488;\n    uint uStack2484;\n    uint var_9ach;\n    uint var_9a8h;\n    uint var_9a4h;\n    uint var_99ch;\n    code *var_994h;\n    uint uStack2452;\n    uint uStack2448;\n    uint uStack2444;\n    uint var_984h;\n    uint var_980h;\n    uint var_97ch;\n    uint var_974h;\n    uint var_96ch;\n    uint uStack2412;\n    uint uStack2408;\n    uint uStack2404;\n    uint var_95ch;\n    uint var_958h;\n    uint var_954h;\n    uint var_94ch;\n    code *var_944h;\n    uint uStack2372;\n    uint uStack2368;\n    uint uStack2364;\n    uint var_934h;\n    uint var_930h;\n    uint var_92ch;\n    uint var_924h;\n    code *var_91ch;\n    uint uStack2332;\n    uint uStack2328;\n    uint uStack2324;\n    uint var_90ch;\n    uint var_908h;\n    uint var_904h;\n    uint var_8fch;\n    code *var_8f4h;\n    uint uStack2292;\n    uint uStack2288;\n    uint uStack2284;\n    uint var_8e4h;\n    uint var_8e0h;\n    uint var_8dch;\n    uint var_8d4h;\n    uint var_8cch;\n    uint uStack2252;\n    uint uStack2248;\n    uint uStack2244;\n    uint var_8bch;\n    uint var_8b8h;\n    uint var_8b4h;\n    uint var_8ach;\n    uint var_8a4h;\n    uint uStack2212;\n    uint uStack2208;\n    uint uStack2204;\n    uint var_894h;\n    uint var_890h;\n    uint var_88ch;\n    uint var_884h;\n    uint var_87ch;\n    uint uStack2172;\n    uint uStack2168;\n    uint uStack2164;\n    uint var_86ch;\n    uint var_868h;\n    uint var_864h;\n    uint var_85ch;\n    code *var_854h;\n    uint uStack2132;\n    uint uStack2128;\n    uint uStack2124;\n    uint var_844h;\n    uint var_840h;\n    uint var_83ch;\n    uint var_834h;\n    uint var_82ch;\n    uint uStack2092;\n    uint uStack2088;\n    uint uStack2084;\n    uint var_81ch;\n    uint var_818h;\n    uint var_814h;\n    uint var_80ch;\n    code *var_804h;\n    uint uStack2052;\n    uint uStack2048;\n    uint uStack2044;\n    uint var_7f4h;\n    uint var_7f0h;\n    uint var_7ech;\n    uint var_7e4h;\n    code *var_7dch;\n    uint uStack2012;\n    uint uStack2008;\n    uint uStack2004;\n    uint var_7cch;\n    uint var_7c8h;\n    uint var_7c4h;\n    uint var_7bch;\n    code *var_7b4h;\n    uint uStack1972;\n    uint uStack1968;\n    uint uStack1964;\n    uint var_7a4h;\n    uint var_7a0h;\n    uint var_79ch;\n    uint var_794h;\n    code *var_78ch;\n    uint uStack1932;\n    uint uStack1928;\n    uint uStack1924;\n    uint var_77ch;\n    uint var_778h;\n    uint var_774h;\n    uint var_76ch;\n    uint var_764h;\n    uint uStack1892;\n    uint uStack1888;\n    uint uStack1884;\n    uint var_754h;\n    uint var_750h;\n    uint var_74ch;\n    uint var_744h;\n    uint var_73ch;\n    uint uStack1852;\n    uint uStack1848;\n    uint uStack1844;\n    uint var_72ch;\n    uint var_728h;\n    uint var_724h;\n    uint var_71ch;\n    uint var_714h;\n    uint uStack1812;\n    uint uStack1808;\n    uint uStack1804;\n    uint var_704h;\n    uint var_700h;\n    uint var_6fch;\n    uint var_6f4h;\n    uint var_6ech;\n    uint uStack1772;\n    uint uStack1768;\n    uint uStack1764;\n    uint var_6dch;\n    uint var_6d8h;\n    uint var_6d4h;\n    uint var_6cch;\n    code *var_6c4h;\n    uint uStack1732;\n    uint uStack1728;\n    uint uStack1724;\n    uint var_6b4h;\n    uint var_6b0h;\n    uint var_6ach;\n    uint var_6a4h;\n    uint var_69ch;\n    uint uStack1692;\n    uint uStack1688;\n    uint uStack1684;\n    uint var_68ch;\n    uint var_688h;\n    uint var_684h;\n    uint var_67ch;\n    uint var_674h;\n    uint uStack1652;\n    uint uStack1648;\n    uint uStack1644;\n    uint var_664h;\n    uint var_660h;\n    uint var_65ch;\n    uint var_654h;\n    uint var_64ch;\n    uint uStack1612;\n    uint uStack1608;\n    uint uStack1604;\n    uint var_63ch;\n    uint var_638h;\n    uint var_634h;\n    uint var_62ch;\n    code *var_624h;\n    uint uStack1572;\n    uint uStack1568;\n    uint uStack1564;\n    uint var_614h;\n    uint var_610h;\n    uint var_60ch;\n    uint var_604h;\n    uint var_5fch;\n    uint uStack1532;\n    uint uStack1528;\n    uint uStack1524;\n    uint var_5ech;\n    uint var_5e8h;\n    uint var_5e4h;\n    uint var_5dch;\n    code *var_5d4h;\n    uint uStack1492;\n    uint uStack1488;\n    uint uStack1484;\n    uint var_5c4h;\n    uint var_5c0h;\n    uint var_5bch;\n    uint var_5b4h;\n    code *var_5ach;\n    uint uStack1452;\n    uint uStack1448;\n    uint uStack1444;\n    uint var_59ch;\n    uint var_598h;\n    uint var_594h;\n    uint var_58ch;\n    uint var_584h;\n    uint uStack1412;\n    uint uStack1408;\n    uint uStack1404;\n    uint var_574h;\n    uint var_570h;\n    uint var_56ch;\n    uint var_564h;\n    code *var_55ch;\n    uint uStack1372;\n    uint uStack1368;\n    uint uStack1364;\n    uint var_54ch;\n    uint var_548h;\n    uint var_544h;\n    uint var_53ch;\n    code *var_534h;\n    uint uStack1332;\n    uint uStack1328;\n    uint uStack1324;\n    uint var_524h;\n    uint var_520h;\n    uint var_51ch;\n    uint var_514h;\n    uint var_50ch;\n    uint uStack1292;\n    uint uStack1288;\n    uint uStack1284;\n    uint var_4fch;\n    uint var_4f8h;\n    uint var_4f4h;\n    uint var_4ech;\n    code *var_4e4h;\n    uint uStack1252;\n    uint uStack1248;\n    uint uStack1244;\n    uint var_4d4h;\n    uint var_4d0h;\n    uint var_4cch;\n    uint var_4c4h;\n    code *var_4bch;\n    uint uStack1212;\n    uint uStack1208;\n    uint uStack1204;\n    uint var_4ach;\n    uint var_4a8h;\n    uint var_4a4h;\n    uint var_49ch;\n    uint var_494h;\n    uint uStack1172;\n    uint uStack1168;\n    uint uStack1164;\n    uint var_484h;\n    uint var_480h;\n    uint var_47ch;\n    uint var_474h;\n    uint var_46ch;\n    uint uStack1132;\n    uint uStack1128;\n    uint uStack1124;\n    uint var_45ch;\n    uint var_458h;\n    uint var_454h;\n    uint var_44ch;\n    uint var_444h;\n    uint uStack1092;\n    uint uStack1088;\n    uint uStack1084;\n    uint var_434h;\n    uint var_430h;\n    uint var_42ch;\n    uint var_424h;\n    uint var_41ch;\n    uint uStack1052;\n    uint uStack1048;\n    uint uStack1044;\n    uint var_40ch;\n    uint var_408h;\n    uint var_404h;\n    uint var_3fch;\n    uint var_3f4h;\n    uint uStack1012;\n    uint uStack1008;\n    uint uStack1004;\n    uint var_3e4h;\n    uint var_3e0h;\n    uint var_3dch;\n    uint var_3d4h;\n    code *var_3cch;\n    uint uStack972;\n    uint uStack968;\n    uint uStack964;\n    uint var_3bch;\n    uint var_3b8h;\n    uint var_3b4h;\n    uint var_3ach;\n    code *var_3a4h;\n    uint uStack932;\n    uint uStack928;\n    uint uStack924;\n    uint var_394h;\n    uint var_390h;\n    uint var_38ch;\n    uint var_384h;\n    uint var_37ch;\n    uint uStack892;\n    uint uStack888;\n    uint uStack884;\n    uint var_36ch;\n    uint var_368h;\n    uint var_364h;\n    uint var_35ch;\n    code *var_354h;\n    uint uStack852;\n    uint uStack848;\n    uint uStack844;\n    uint var_344h;\n    uint var_340h;\n    uint var_33ch;\n    uint var_334h;\n    uint var_32ch;\n    uint uStack812;\n    uint uStack808;\n    uint uStack804;\n    uint var_31ch;\n    uint var_318h;\n    uint var_314h;\n    uint var_30ch;\n    code *var_304h;\n    uint uStack772;\n    uint uStack768;\n    uint uStack764;\n    uint var_2f4h;\n    uint var_2f0h;\n    uint var_2ech;\n    uint var_2e4h;\n    code *var_2dch;\n    uint uStack732;\n    uint uStack728;\n    uint uStack724;\n    uint var_2cch;\n    uint var_2c8h;\n    uint var_2c4h;\n    uint var_2bch;\n    uint var_2b4h;\n    uint uStack692;\n    uint uStack688;\n    uint uStack684;\n    uint var_2a4h;\n    uint var_2a0h;\n    uint var_29ch;\n    uint var_294h;\n    uint var_28ch;\n    uint uStack652;\n    uint uStack648;\n    uint uStack644;\n    uint var_27ch;\n    uint var_278h;\n    uint var_274h;\n    uint var_26ch;\n    code *var_264h;\n    uint uStack612;\n    uint uStack608;\n    uint uStack604;\n    uint var_254h;\n    uint var_250h;\n    uint var_24ch;\n    uint var_244h;\n    uint var_23ch;\n    uint uStack572;\n    uint uStack568;\n    uint uStack564;\n    uint var_22ch;\n    uint var_228h;\n    uint var_224h;\n    uint var_21ch;\n    code *var_214h;\n    uint uStack532;\n    uint uStack528;\n    uint uStack524;\n    uint var_204h;\n    uint var_200h;\n    uint var_1fch;\n    uint var_1f4h;\n    code *var_1ech;\n    uint uStack492;\n    uint uStack488;\n    uint uStack484;\n    uint var_1dch;\n    uint var_1d8h;\n    uint var_1d4h;\n    uint var_1cch;\n    uint var_1c4h;\n    uint uStack452;\n    uint uStack448;\n    uint uStack444;\n    uint var_1b4h;\n    uint var_1b0h;\n    uint var_1ach;\n    uint var_1a4h;\n    uint var_19ch;\n    uint uStack412;\n    uint uStack408;\n    uint uStack404;\n    uint var_18ch;\n    uint var_188h;\n    uint var_184h;\n    uint var_17ch;\n    code *var_174h;\n    uint uStack372;\n    uint uStack368;\n    uint uStack364;\n    uint var_164h;\n    uint var_160h;\n    uint var_15ch;\n    uint var_154h;\n    uint var_14ch;\n    uint uStack332;\n    uint uStack328;\n    uint uStack324;\n    uint var_13ch;\n    uint var_138h;\n    uint var_134h;\n    uint var_12ch;\n    uint var_124h;\n    uint uStack292;\n    uint uStack288;\n    uint uStack284;\n    uint var_114h;\n    uint var_110h;\n    uint var_10ch;\n    uint var_104h;\n    uint var_fch;\n    uint uStack252;\n    uint uStack248;\n    uint uStack244;\n    uint var_ech;\n    uint var_e8h;\n    uint var_e4h;\n    uint var_dch;\n    code *var_d4h;\n    uint uStack212;\n    uint uStack208;\n    uint uStack204;\n    uint var_c4h;\n    uint var_c0h;\n    uint var_bch;\n    uint var_b4h;\n    uint var_ach;\n    uint uStack172;\n    uint uStack168;\n    uint uStack164;\n    uint var_9ch;\n    uint var_98h;\n    uint var_94h;\n    uint var_8ch;\n    uint var_84h;\n    uint uStack132;\n    uint uStack128;\n    uint uStack124;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_64h;\n    uint var_5ch;\n    uint uStack92;\n    uint uStack88;\n    uint uStack84;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_3ch;\n    uint var_34h;\n    uint uStack52;\n    uint uStack48;\n    uint uStack44;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    int32_t iStack28;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar2 = arg_8h;\n    var_4h = 0x41a3e6;\n    fcn.0044c510();\n    var_10h = 0x41a3f3;\n    fcn.004109e6();\n    var_10h = 0x41a3fe;\n    fcn.00416d61();\n    var_10h = 0x41a409;\n    fcn.00416d61();\n    var_10h = 0x41a414;\n    fcn.00416d61();\n    var_10h = 0x41a41f;\n    fcn.00416d61();\n    var_10h = 0x41a42a;\n    fcn.00416d61();\n    var_10h = 0x41a435;\n    fcn.00416d61();\n    var_10h = 0x41a440;\n    fcn.00416d61();\n    var_10h = 0x41a44b;\n    fcn.00416d61();\n    var_10h = 0x41a456;\n    fcn.00416d61();\n    var_10h = 0x41a461;\n    fcn.00416d61();\n    *(arg_8h + 0x31c) = 0xffffffff;\n    *(arg_8h + 0x318) = 0;\n    *(arg_8h + 800) = 0;\n    *(arg_8h + 0x324) = 0;\n    *(arg_8h + 0x328) = 0;\n    *(arg_8h + 0x32c) = 0;\n    *(arg_8h + 0x330) = 0;\n    *(arg_8h + 0x334) = 0;\n    *(arg_8h + 0x338) = 0;\n    *(arg_8h + 0x340) = 0;\n    *(arg_8h + 0x348) = 1;\n    *(arg_8h + 0x34c) = 0;\n    var_10h = 0x41a4b0;\n    fcn.00416d61();\n    var_10h = arg_8h + 0x36c;\n    var_14h = 0x41a4bc;\n    fcn.0040ef25();\n    var_14h = 0x41a4c7;\n    fcn.004219b7();\n    *(arg_8h + 0x6ac) = 0;\n    *(arg_8h + 0x6b0) = 0;\n    *(arg_8h + 0x6b4) = 0;\n    *(arg_8h + 0x6a8) = 0x45d540;\n    *(arg_8h + 0x6c0) = 0;\n    *(arg_8h + 0x6c4) = 0;\n    *(arg_8h + 0x6c8) = 0;\n    *(arg_8h + 0x6bc) = 0x45d53c;\n    *(arg_8h + 0x6d4) = 0;\n    *(arg_8h + 0x6d8) = 0;\n    *(arg_8h + 0x6dc) = 0;\n    *(arg_8h + 0x6d0) = 0x45d538;\n    *(arg_8h + 0x6f8) = 0;\n    *(arg_8h + 0x704) = 0;\n    *(arg_8h + 0x700) = 1;\n    *(arg_8h + 0x708) = 0;\n    *(arg_8h + 0x714) = 0;\n    *(arg_8h + 0x710) = 1;\n    var_14h = 0x41a52d;\n    fcn.004033f7();\n    *(arg_8h + 0x7a0) = 0x45c0d8;\n    *(arg_8h + 0x7a4) = 0;\n    *(arg_8h + 0x7a8) = 0;\n    *(arg_8h + 0x7ac) = 0;\n    var_14h = 0x41a54f;\n    fcn.004029f3();\n    var_14h = 0x41a55a;\n    fcn.00416d61();\n    var_14h = 0x41a565;\n    fcn.00416d61();\n    var_14h = 0x41a570;\n    fcn.00421ab3();\n    *(arg_8h + 0x8a0) = 0;\n    *(arg_8h + 0x8a8) = 1;\n    *(arg_8h + 0x8ac) = 0;\n    var_14h = 0x45fb5c;\n    iStack28 = arg_8h + 700;\n    *(arg_8h + 0x296) = 0;\n    *(arg_8h + 0x294) = 0;\n    *(arg_8h + 0x290) = 0;\n    *(arg_8h + 0x284) = 0;\n    *(arg_8h + 0x288) = 0;\n    *(arg_8h + 0x280) = 0;\n    *(arg_8h + 0x28c) = 0;\n    *(arg_8h + 0x35c) = 0;\n    *(arg_8h + 0x2a0) = 1;\n    *(arg_8h + 0x2a4) = 1;\n    *(arg_8h + 0x2a8) = 1;\n    *(arg_8h + 0x298) = 1;\n    *(arg_8h + 0x299) = 0;\n    *(arg_8h + 0x29a) = 0;\n    *(arg_8h + 0x29b) = 0;\n    *(arg_8h + 0x29c) = 0;\n    *(arg_8h + 0x2b8) = 0;\n    var_1ch = 0x41a5fe;\n    fcn.00416e83();\n    *(arg_8h + 0x31c) = 0xffffffff;\n    *(arg_8h + 0x830) = 0;\n    *(arg_8h + 0x82c) = 0;\n    *(arg_8h + 0x828) = 0;\n    *(arg_8h + 0x6e4) = 0;\n    *(arg_8h + 0x2c8) = 0;\n    *(arg_8h + 0x2f0) = 0;\n    *(arg_8h + 0x890) = 0;\n    *(arg_8h + 0x29d) = 1;\n    *(arg_8h + 0x894) = 100;\n    *(arg_8h + 0x79c) = 0;\n    *(arg_8h + 0x79d) = 0;\n    *(arg_8h + 0x794) = 1;\n    *(arg_8h + 0x798) = 1;\n    *(arg_8h + 0x840) = 0;\n    *(arg_8h + 0x841) = 0;\n    *(arg_8h + 0x84c) = 0;\n    *(arg_8h + 0x84d) = 0;\n    *(arg_8h + 0x898) = 0;\n    *(arg_8h + 0x820) = 0;\n    *(arg_8h + 0x6e8) = 0;\n    *(arg_8h + 0x318) = 0;\n    *(arg_8h + 0x7b8) = 0xfa;\n    *(arg_8h + 0x2b4) = 0xfa;\n    *(arg_8h + 0x2ac) = 10;\n    *(arg_8h + 0x2b0) = 10;\n    auStack14784[0] = 0x45fb54;\n    auStack14784[2] = 0x429e8c;\n    auStack14784[3] = 0;\n    auStack14784[4] = 0;\n    auStack14784[5] = 0;\n    auStack14784[6] = 1;\n    auStack14784[7] = 1;\n    auStack14784[8] = 1;\n    auStack14784[10] = 0x45fb48;\n    uStack14736 = 0x429d74;\n    uStack14732 = 0;\n    uStack14728 = 0;\n    uStack14724 = 0;\n    uStack14720 = 1;\n    uStack14716 = 1;\n    uStack14712 = 1;\n    uStack14704 = 0x45fb2c;\n    uStack14696 = 0x42a37b;\n    uStack14692 = 0;\n    uStack14688 = 0;\n    uStack14684 = 0;\n    uStack14680 = 0;\n    uStack14676 = 0;\n    uStack14672 = 1;\n    uStack14664 = 0x45fb14;\n    pcStack14656 = fcn.0042a387;\n    uStack14652 = 0;\n    uStack14648 = 0;\n    uStack14644 = 0;\n    uStack14640 = 1;\n    uStack14632 = 1;\n    uStack14624 = 0x45fb0c;\n    uStack14636 = 2;\n    pcStack14616 = fcn.0042913e;\n    uStack14612 = 0;\n    uStack14608 = 0;\n    uStack14604 = 0;\n    uStack14600 = 1;\n    uStack14596 = 1;\n    uStack14592 = 1;\n    uStack14584 = 0x45fb00;\n    uStack14576 = 0x429191;\n    uStack14572 = 0;\n    uStack14568 = 0;\n    uStack14564 = 0;\n    uStack14560 = 1;\n    uStack14556 = 1;\n    uStack14552 = 1;\n    uStack14544 = 0x45faf4;\n    uStack14536 = 0x429dac;\n    uStack14532 = 0;\n    uStack14528 = 0;\n    uStack14524 = 0;\n    uStack14520 = 1;\n    uStack14516 = 1;\n    uStack14512 = 1;\n    uStack14504 = 0x45fae4;\n    pcStack14496 = fcn.0042eeba;\n    uStack14492 = 0;\n    uStack14488 = 0;\n    uStack14484 = 0;\n    uStack14480 = 2;\n    uStack14472 = 1;\n    uStack14464 = 0x45fad8;\n    uStack14476 = 3;\n    uStack14456 = 0x429d3c;\n    uStack14452 = 0;\n    uStack14448 = 0;\n    uStack14444 = 0;\n    uStack14440 = 1;\n    uStack14436 = 1;\n    uStack14432 = 1;\n    uStack14424 = 0x45fab8;\n    pcStack14416 = fcn.0042d792;\n    uStack14412 = 0;\n    uStack14408 = 0;\n    uStack14404 = 0;\n    uStack14400 = 1;\n    uStack14396 = 2;\n    uStack14392 = 1;\n    uStack14384 = 0x45fa94;\n    pcStack14376 = fcn.0042a483;\n    uStack14372 = 0;\n    uStack14368 = 0;\n    uStack14364 = 0;\n    uStack14360 = 0;\n    uStack14356 = 0;\n    uStack14352 = 1;\n    uStack14344 = 0x45fa70;\n    uStack14336 = 0x42a456;\n    uStack14332 = 0;\n    uStack14328 = 0;\n    uStack14324 = 0;\n    uStack14320 = 1;\n    uStack14316 = 1;\n    uStack14312 = 1;\n    uStack14304 = 0x45fa64;\n    uStack14296 = 0x42f388;\n    uStack14292 = 0;\n    uStack14288 = 0;\n    uStack14284 = 0;\n    uStack14280 = 0;\n    uStack14276 = 2;\n    uStack14272 = 1;\n    uStack14264 = 0x45fa54;\n    uStack14256 = 0x4296fa;\n    uStack14252 = 0;\n    uStack14248 = 0;\n    uStack14244 = 0;\n    uStack14240 = 1;\n    uStack14236 = 1;\n    uStack14232 = 1;\n    uStack14224 = 0x45fa40;\n    uStack14216 = 0x43cf10;\n    uStack14212 = 0;\n    uStack14208 = 0;\n    uStack14204 = 0;\n    uStack14200 = 1;\n    uStack14196 = 1;\n    uStack14192 = 1;\n    uStack14184 = 0x45fa2c;\n    pcStack14176 = fcn.0043d127;\n    uStack14172 = 0;\n    uStack14168 = 0;\n    uStack14164 = 0;\n    uStack14160 = 2;\n    uStack14156 = 3;\n    uStack14152 = 1;\n    uStack14144 = 0x45fa0c;\n    pcStack14136 = fcn.0043d1d5;\n    uStack14132 = 0;\n    uStack14128 = 0;\n    uStack14124 = 0;\n    uStack14120 = 1;\n    uStack14116 = 2;\n    uStack14112 = 1;\n    uStack14104 = 0x45f9fc;\n    pcStack14096 = fcn.004297c0;\n    uStack14092 = 0;\n    uStack14088 = 0;\n    uStack14084 = 0;\n    uStack14080 = 2;\n    uStack14076 = 0xff;\n    uStack14072 = 1;\n    uStack14064 = 0x45f9ec;\n    uStack14056 = 0x429866;\n    uStack14052 = 0;\n    uStack14048 = 0;\n    uStack14044 = 0;\n    uStack14040 = 1;\n    uStack14036 = 1;\n    uStack14032 = 1;\n    uStack14024 = 0x45f9e0;\n    pcStack14016 = fcn.00429813;\n    uStack14012 = 0;\n    uStack14008 = 0;\n    uStack14004 = 0;\n    uStack14000 = 2;\n    uStack13996 = 0xff;\n    uStack13992 = 1;\n    uStack13984 = 0x45f9cc;\n    pcStack13976 = fcn.004298e5;\n    uStack13972 = 0;\n    uStack13968 = 0;\n    uStack13964 = 0;\n    uStack13960 = 2;\n    uStack13956 = 3;\n    uStack13952 = 1;\n    uStack13944 = 0x45f9b8;\n    uStack13936 = 0x429a89;\n    uStack13932 = 0;\n    uStack13928 = 0;\n    uStack13924 = 0;\n    uStack13920 = 2;\n    uStack13916 = 2;\n    uStack13912 = 1;\n    uStack13904 = 0x45f9a8;\n    pcStack13896 = fcn.00429892;\n    uStack13892 = 0;\n    uStack13888 = 0;\n    uStack13884 = 0;\n    uStack13880 = 2;\n    uStack13876 = 0xff;\n    uStack13872 = 1;\n    uStack13864 = 0x45f990;\n    pcStack13856 = fcn.0042a4bf;\n    uStack13852 = 0;\n    uStack13848 = 0;\n    uStack13844 = 0;\n    uStack13840 = 1;\n    uStack13836 = 1;\n    uStack13832 = 0;\n    uStack13824 = 0x45f984;\n    uStack13816 = 0x42ea46;\n    uStack13812 = 0;\n    uStack13808 = 0;\n    uStack13804 = 0;\n    uStack13800 = 1;\n    uStack13796 = 1;\n    uStack13792 = 0;\n    uStack13784 = 0x45f978;\n    uStack13776 = 0x42ecfc;\n    uStack13772 = 0;\n    uStack13768 = 0;\n    uStack13764 = 0;\n    uStack13760 = 1;\n    uStack13756 = 0xff;\n    uStack13752 = 1;\n    uStack13744 = 0x45f968;\n    pcStack13736 = fcn.004240f0;\n    uStack13732 = 0;\n    uStack13728 = 0;\n    uStack13724 = 0;\n    uStack13720 = 2;\n    uStack13716 = 2;\n    uStack13712 = 0;\n    uStack13704 = 0x45f958;\n    uStack13696 = 0x42a083;\n    uStack13692 = 0;\n    uStack13688 = 0;\n    uStack13684 = 0;\n    uStack13680 = 1;\n    uStack13676 = 1;\n    uStack13672 = 1;\n    uStack13664 = 0x45f950;\n    pcStack13656 = fcn.004291be;\n    uStack13652 = 0;\n    uStack13648 = 0;\n    uStack13644 = 0;\n    uStack13640 = 1;\n    uStack13636 = 1;\n    uStack13632 = 1;\n    uStack13624 = 0x45f944;\n    pcStack13616 = fcn.00429273;\n    uStack13612 = 0;\n    uStack13608 = 0;\n    uStack13604 = 0;\n    uStack13600 = 1;\n    uStack13596 = 1;\n    uStack13592 = 1;\n    uStack13584 = 0x45f934;\n    pcStack13576 = fcn.0042a62c;\n    uStack13572 = 0;\n    uStack13568 = 0;\n    uStack13564 = 0;\n    uStack13560 = 0;\n    uStack13556 = 0;\n    uStack13552 = 1;\n    uStack13544 = 0x45f924;\n    uStack13536 = 0x42a7fc;\n    uStack13532 = 0;\n    uStack13528 = 0;\n    uStack13524 = 0;\n    uStack13520 = 1;\n    uStack13516 = 1;\n    uStack13512 = 1;\n    uStack13504 = 0x45f90c;\n    uStack13496 = 0x43ca87;\n    uStack13492 = 0;\n    uStack13488 = 0;\n    uStack13484 = 0;\n    uStack13480 = 0;\n    uStack13476 = 2;\n    uStack13472 = 0;\n    uStack13464 = 0x45f8f0;\n    uStack13456 = 0x42f08c;\n    uStack13452 = 0;\n    uStack13448 = 0;\n    uStack13444 = 0;\n    uStack13440 = 1;\n    uStack13436 = 1;\n    uStack13432 = 1;\n    uStack13424 = 0x45f8cc;\n    uStack13416 = 0x42f0c1;\n    uStack13412 = 0;\n    uStack13408 = 0;\n    uStack13404 = 0;\n    uStack13400 = 1;\n    uStack13396 = 1;\n    uStack13392 = 1;\n    uStack13384 = 0x45f8b0;\n    pcStack13376 = fcn.0043fde2;\n    uStack13372 = 0;\n    uStack13368 = 0;\n    uStack13364 = 0;\n    uStack13360 = 3;\n    uStack13356 = 7;\n    uStack13352 = 1;\n    uStack13344 = 0x45f890;\n    pcStack13336 = fcn.0044025b;\n    uStack13332 = 0;\n    uStack13328 = 0;\n    uStack13324 = 0;\n    uStack13320 = 4;\n    uStack13316 = 5;\n    uStack13312 = 1;\n    uStack13304 = 0x45f870;\n    uStack13296 = 0x4401cf;\n    uStack13292 = 0;\n    uStack13288 = 0;\n    uStack13284 = 0;\n    uStack13280 = 3;\n    uStack13276 = 3;\n    uStack13272 = 1;\n    uStack13264 = 0x45f854;\n    uStack13256 = 0x44019f;\n    uStack13252 = 0;\n    uStack13248 = 0;\n    uStack13244 = 0;\n    uStack13240 = 3;\n    uStack13236 = 3;\n    uStack13232 = 1;\n    uStack13224 = 0x45f838;\n    uStack13216 = 0x43fdb2;\n    uStack13212 = 0;\n    uStack13208 = 0;\n    uStack13204 = 0;\n    uStack13200 = 3;\n    uStack13196 = 3;\n    uStack13192 = 1;\n    uStack13184 = 0x45f818;\n    pcStack13176 = fcn.00441341;\n    uStack13172 = 0;\n    uStack13168 = 0;\n    uStack13164 = 0;\n    uStack13160 = 1;\n    uStack13156 = 2;\n    uStack13152 = 1;\n    uStack13144 = 0x45f7f4;\n    uStack13136 = 0x4412fc;\n    uStack13132 = 0;\n    uStack13128 = 0;\n    uStack13124 = 0;\n    uStack13120 = 3;\n    uStack13116 = 3;\n    uStack13112 = 1;\n    uStack13104 = 0x45f7d8;\n    pcStack13096 = fcn.0043ffed;\n    uStack13092 = 0;\n    uStack13088 = 0;\n    uStack13084 = 0;\n    uStack13080 = 3;\n    uStack13076 = 3;\n    uStack13072 = 1;\n    uStack13064 = 0x45f7b8;\n    pcStack13056 = fcn.0043ff73;\n    uStack13052 = 0;\n    uStack13048 = 0;\n    uStack13044 = 0;\n    uStack13040 = 3;\n    uStack13036 = 3;\n    uStack13032 = 1;\n    uStack13024 = 0x45f7a0;\n    uStack13016 = 0x44022d;\n    uStack13012 = 0;\n    uStack13008 = 0;\n    uStack13004 = 0;\n    uStack13000 = 3;\n    uStack12996 = 3;\n    uStack12992 = 1;\n    uStack12984 = 0x45f780;\n    pcStack12976 = fcn.0044094d;\n    uStack12972 = 0;\n    uStack12968 = 0;\n    uStack12964 = 0;\n    uStack12960 = 4;\n    uStack12956 = 6;\n    uStack12952 = 1;\n    uStack12944 = 0x45f768;\n    pcStack12936 = fcn.004400c0;\n    uStack12932 = 0;\n    uStack12928 = 0;\n    uStack12924 = 0;\n    uStack12920 = 5;\n    uStack12916 = 7;\n    uStack12912 = 1;\n    uStack12904 = 0x45f750;\n    uStack12896 = 0x440e63;\n    uStack12892 = 0;\n    uStack12888 = 0;\n    uStack12884 = 0;\n    uStack12880 = 4;\n    uStack12876 = 5;\n    uStack12872 = 1;\n    uStack12864 = 0x45f730;\n    pcStack12856 = fcn.0043ff00;\n    uStack12852 = 0;\n    uStack12848 = 0;\n    uStack12844 = 0;\n    uStack12840 = 4;\n    uStack12836 = 5;\n    uStack12832 = 1;\n    uStack12824 = 0x45f718;\n    uStack12816 = 0x4401fd;\n    uStack12812 = 0;\n    uStack12808 = 0;\n    uStack12804 = 0;\n    uStack12800 = 3;\n    uStack12796 = 3;\n    uStack12792 = 1;\n    uStack12784 = 0x45f710;\n    uStack12776 = 0x429e1c;\n    uStack12772 = 0;\n    uStack12768 = 0;\n    uStack12764 = 0;\n    uStack12760 = 1;\n    uStack12756 = 1;\n    uStack12752 = 1;\n    uStack12744 = 0x45f708;\n    pcStack12736 = fcn.004292fd;\n    uStack12732 = 0;\n    uStack12728 = 0;\n    uStack12724 = 0;\n    uStack12720 = 1;\n    uStack12716 = 1;\n    uStack12712 = 1;\n    uStack12704 = 0x45f6f8;\n    pcStack12696 = fcn.00425eda;\n    uStack12692 = 0;\n    uStack12688 = 0;\n    uStack12684 = 0;\n    uStack12680 = 2;\n    uStack12676 = 3;\n    uStack12672 = 0;\n    uStack12664 = 0x45f6e4;\n    uStack12656 = 0x425f92;\n    uStack12652 = 0;\n    uStack12648 = 0;\n    uStack12644 = 0;\n    uStack12640 = 1;\n    uStack12636 = 1;\n    uStack12632 = 0;\n    uStack12624 = 0x45f6cc;\n    pcStack12616 = fcn.004263db;\n    uStack12612 = 0;\n    uStack12608 = 0;\n    uStack12604 = 0;\n    uStack12600 = 1;\n    uStack12596 = 2;\n    uStack12592 = 1;\n    uStack12584 = 0x45f6bc;\n    pcStack12576 = fcn.00426359;\n    uStack12572 = 0;\n    uStack12568 = 0;\n    uStack12564 = 0;\n    uStack12560 = 2;\n    uStack12556 = 3;\n    uStack12552 = 0;\n    uStack12544 = 0x45f6a8;\n    pcStack12536 = fcn.00425fc8;\n    uStack12532 = 0;\n    uStack12528 = 0;\n    uStack12524 = 0;\n    uStack12520 = 1;\n    uStack12516 = 2;\n    uStack12512 = 0;\n    uStack12504 = 0x45f698;\n    pcStack12496 = fcn.00439bb8;\n    uStack12492 = 0;\n    uStack12488 = 0;\n    uStack12484 = 0;\n    uStack12480 = 3;\n    uStack12476 = 0xff;\n    uStack12472 = 1;\n    uStack12464 = 0x45f684;\n    uStack12456 = 0x43a7ec;\n    uStack12452 = 0;\n    uStack12448 = 0;\n    uStack12444 = 0;\n    uStack12440 = 1;\n    uStack12436 = 1;\n    uStack12432 = 0;\n    uStack12424 = 0x45f674;\n    pcStack12416 = fcn.0043a75c;\n    uStack12412 = 0;\n    uStack12408 = 0;\n    uStack12404 = 0;\n    uStack12400 = 1;\n    uStack12396 = 1;\n    uStack12392 = 0;\n    uStack12384 = 0x45f654;\n    pcStack12376 = fcn.0043a86e;\n    uStack12372 = 0;\n    uStack12368 = 0;\n    uStack12364 = 0;\n    uStack12360 = 1;\n    uStack12356 = 2;\n    uStack12352 = 0;\n    uStack12344 = 0x45f630;\n    pcStack12336 = fcn.0043b0b1;\n    uStack12332 = 0;\n    uStack12328 = 0;\n    uStack12324 = 0;\n    uStack12320 = 2;\n    uStack12316 = 3;\n    uStack12312 = 0;\n    uStack12304 = 0x45f610;\n    pcStack12296 = fcn.0043af7f;\n    uStack12292 = 0;\n    uStack12288 = 0;\n    uStack12284 = 0;\n    uStack12280 = 1;\n    uStack12276 = 2;\n    uStack12272 = 0;\n    uStack12264 = 0x45f5ec;\n    uStack12256 = 0x43af12;\n    uStack12252 = 0;\n    uStack12248 = 0;\n    uStack12244 = 0;\n    uStack12240 = 1;\n    uStack12236 = 1;\n    uStack12232 = 0;\n    uStack12224 = 0x45f5c8;\n    pcStack12216 = fcn.0043ae88;\n    uStack12212 = 0;\n    uStack12208 = 0;\n    uStack12204 = 0;\n    uStack12200 = 3;\n    uStack12196 = 4;\n    uStack12192 = 0;\n    uStack12184 = 0x45f5ac;\n    pcStack12176 = fcn.00423e8a;\n    uStack12172 = 0;\n    uStack12168 = 0;\n    uStack12164 = 0;\n    uStack12160 = 1;\n    uStack12156 = 1;\n    uStack12152 = 1;\n    uStack12144 = 0x45f584;\n    pcStack12136 = fcn.004246a1;\n    uStack12132 = 0;\n    uStack12128 = 0;\n    uStack12124 = 0;\n    uStack12120 = 1;\n    uStack12116 = 1;\n    uStack12112 = 1;\n    uStack12104 = 0x45f568;\n    pcStack12096 = fcn.00424837;\n    uStack12092 = 0;\n    uStack12088 = 0;\n    uStack12084 = 0;\n    uStack12080 = 1;\n    uStack12076 = 1;\n    uStack12072 = 1;\n    uStack12064 = 0x45f548;\n    pcStack12056 = fcn.0042475f;\n    uStack12052 = 0;\n    uStack12048 = 0;\n    uStack12044 = 0;\n    uStack12040 = 1;\n    uStack12036 = 1;\n    uStack12032 = 1;\n    uStack12024 = 0x45f52c;\n    pcStack12016 = fcn.004242bd;\n    uStack12012 = 0;\n    uStack12008 = 0;\n    uStack12004 = 0;\n    uStack12000 = 1;\n    uStack11996 = 1;\n    uStack11992 = 1;\n    uStack11984 = 0x45f514;\n    pcStack11976 = fcn.00423bcd;\n    uStack11972 = 0;\n    uStack11968 = 0;\n    uStack11964 = 0;\n    uStack11960 = 2;\n    uStack11956 = 5;\n    uStack11952 = 0;\n    uStack11944 = 0x45f4fc;\n    uStack11936 = 0x423dd7;\n    uStack11932 = 0;\n    uStack11928 = 0;\n    uStack11924 = 0;\n    uStack11920 = 1;\n    uStack11916 = 1;\n    uStack11912 = 0;\n    uStack11904 = 0x45f4e4;\n    pcStack11896 = fcn.00423e18;\n    uStack11892 = 0;\n    uStack11888 = 0;\n    uStack11884 = 0;\n    uStack11880 = 1;\n    uStack11876 = 1;\n    uStack11872 = 0;\n    uStack11864 = 0x45f4c8;\n    pcStack11856 = fcn.004248f5;\n    uStack11852 = 0;\n    uStack11848 = 0;\n    uStack11844 = 0;\n    uStack11840 = 2;\n    uStack11836 = 2;\n    uStack11832 = 0;\n    uStack11824 = 0x45f4a8;\n    pcStack11816 = fcn.004244a5;\n    uStack11812 = 0;\n    uStack11808 = 0;\n    uStack11804 = 0;\n    uStack11800 = 1;\n    uStack11796 = 1;\n    uStack11792 = 1;\n    uStack11784 = 0x45f488;\n    pcStack11776 = fcn.0042438f;\n    uStack11772 = 0;\n    uStack11768 = 0;\n    uStack11764 = 0;\n    uStack11760 = 1;\n    uStack11756 = 1;\n    uStack11752 = 1;\n    uStack11744 = 0x45f470;\n    pcStack11736 = fcn.004245bb;\n    uStack11732 = 0;\n    uStack11728 = 0;\n    uStack11724 = 0;\n    uStack11720 = 1;\n    uStack11716 = 1;\n    uStack11712 = 1;\n    uStack11704 = 0x45f460;\n    pcStack11696 = fcn.0042a51c;\n    uStack11692 = 0;\n    uStack11688 = 0;\n    uStack11684 = 0;\n    uStack11680 = 1;\n    uStack11676 = 1;\n    uStack11672 = 0;\n    uStack11664 = 0x45f450;\n    uStack11656 = 0x42a575;\n    uStack11652 = 0;\n    uStack11648 = 0;\n    uStack11644 = 0;\n    uStack11640 = 1;\n    uStack11636 = 2;\n    uStack11632 = 0;\n    uStack11624 = 0x45f43c;\n    pcStack11616 = fcn.0042a5e4;\n    uStack11612 = 0;\n    uStack11608 = 0;\n    uStack11604 = 0;\n    uStack11600 = 0;\n    uStack11596 = 0;\n    uStack11592 = 0;\n    uStack11584 = 0x45f430;\n    pcStack11576 = fcn.0042ed73;\n    uStack11572 = 0;\n    uStack11568 = 0;\n    uStack11564 = 0;\n    uStack11560 = 1;\n    uStack11556 = 1;\n    uStack11552 = 1;\n    uStack11544 = 0x45f420;\n    pcStack11536 = fcn.0042ee13;\n    uStack11532 = 0;\n    uStack11528 = 0;\n    uStack11524 = 0;\n    uStack11520 = 1;\n    uStack11516 = 1;\n    uStack11512 = 1;\n    uStack11504 = 0x45f418;\n    uStack11496 = 0x429ccc;\n    uStack11492 = 0;\n    uStack11488 = 0;\n    uStack11484 = 0;\n    uStack11480 = 1;\n    uStack11476 = 1;\n    uStack11472 = 1;\n    uStack11464 = 0x45f3fc;\n    uStack11456 = 0x426324;\n    uStack11452 = 0;\n    uStack11448 = 0;\n    uStack11444 = 0;\n    uStack11440 = 1;\n    uStack11436 = 1;\n    uStack11432 = 1;\n    uStack11424 = 0x45f3e8;\n    uStack11416 = 0x42270b;\n    uStack11412 = 0;\n    uStack11408 = 0;\n    uStack11404 = 0;\n    uStack11400 = 1;\n    uStack11396 = 1;\n    uStack11392 = 0;\n    uStack11384 = 0x45f3d4;\n    pcStack11376 = fcn.0042602e;\n    uStack11372 = 0;\n    uStack11368 = 0;\n    uStack11364 = 0;\n    uStack11360 = 2;\n    uStack11356 = 3;\n    uStack11352 = 0;\n    uStack11344 = 0x45f3ac;\n    pcStack11336 = fcn.00424984;\n    uStack11332 = 0;\n    uStack11328 = 0;\n    uStack11324 = 0;\n    uStack11320 = 2;\n    uStack11316 = 3;\n    uStack11312 = 1;\n    uStack11304 = 0x45f384;\n    pcStack11296 = fcn.00424c88;\n    uStack11292 = 0;\n    uStack11288 = 0;\n    uStack11284 = 0;\n    uStack11280 = 2;\n    uStack11276 = 9;\n    uStack11272 = 1;\n    uStack11264 = 0x45f36c;\n    uStack11256 = 0x42618e;\n    uStack11252 = 0;\n    uStack11248 = 0;\n    uStack11244 = 0;\n    uStack11240 = 1;\n    uStack11236 = 1;\n    uStack11232 = 0;\n    uStack11224 = 0x45f354;\n    uStack11216 = 0x425f5c;\n    uStack11212 = 0;\n    uStack11208 = 0;\n    uStack11204 = 0;\n    uStack11200 = 1;\n    uStack11196 = 1;\n    uStack11192 = 1;\n    uStack11184 = 0x45f330;\n    pcStack11176 = fcn.00425af7;\n    uStack11172 = 0;\n    uStack11168 = 0;\n    uStack11164 = 0;\n    uStack11160 = 1;\n    uStack11156 = 1;\n    uStack11152 = 1;\n    uStack11144 = 0x45f30c;\n    pcStack11136 = fcn.00425c3f;\n    uStack11132 = 0;\n    uStack11128 = 0;\n    uStack11124 = 0;\n    uStack11120 = 1;\n    uStack11116 = 1;\n    uStack11112 = 1;\n    uStack11104 = 0x45f2f0;\n    pcStack11096 = fcn.00425559;\n    uStack11092 = 0;\n    uStack11088 = 0;\n    uStack11084 = 0;\n    uStack11080 = 1;\n    uStack11076 = 1;\n    uStack11072 = 1;\n    uStack11064 = 0x45f2d0;\n    pcStack11056 = fcn.00425d51;\n    uStack11052 = 0;\n    uStack11048 = 0;\n    uStack11044 = 0;\n    uStack11040 = 1;\n    uStack11036 = 2;\n    uStack11032 = 1;\n    uStack11024 = 0x45f2b0;\n    pcStack11016 = fcn.00424f6c;\n    uStack11012 = 0;\n    uStack11008 = 0;\n    uStack11004 = 0;\n    uStack11000 = 1;\n    uStack10996 = 1;\n    uStack10992 = 1;\n    uStack10984 = 0x45f28c;\n    pcStack10976 = fcn.00425e18;\n    uStack10972 = 0;\n    uStack10968 = 0;\n    uStack10964 = 0;\n    uStack10960 = 1;\n    uStack10956 = 2;\n    uStack10952 = 1;\n    uStack10944 = 0x45f274;\n    pcStack10936 = fcn.004234c0;\n    uStack10932 = 0;\n    uStack10928 = 0;\n    uStack10924 = 0;\n    uStack10920 = 1;\n    uStack10916 = 1;\n    uStack10912 = 1;\n    uStack10904 = 0x45f25c;\n    pcStack10896 = fcn.00422f0b;\n    uStack10892 = 0;\n    uStack10888 = 0;\n    uStack10884 = 0;\n    uStack10880 = 1;\n    uStack10876 = 3;\n    uStack10872 = 1;\n    uStack10864 = 0x45f23c;\n    pcStack10856 = fcn.00425a4c;\n    uStack10852 = 0;\n    uStack10848 = 0;\n    uStack10844 = 0;\n    uStack10840 = 1;\n    uStack10836 = 2;\n    uStack10832 = 1;\n    uStack10824 = 0x45f224;\n    pcStack10816 = fcn.004251b3;\n    uStack10812 = 0;\n    uStack10808 = 0;\n    uStack10804 = 0;\n    uStack10800 = 2;\n    uStack10796 = 3;\n    uStack10792 = 0;\n    uStack10784 = 0x45f210;\n    pcStack10776 = fcn.004261c4;\n    uStack10772 = 0;\n    uStack10768 = 0;\n    uStack10764 = 0;\n    uStack10760 = 2;\n    uStack10756 = 3;\n    uStack10752 = 0;\n    uStack10744 = 0x45f1fc;\n    pcStack10736 = fcn.0042253d;\n    uStack10732 = 0;\n    uStack10728 = 0;\n    uStack10724 = 0;\n    uStack10720 = 2;\n    uStack10716 = 2;\n    uStack10712 = 0;\n    uStack10704 = 0x45f1dc;\n    uStack10696 = 0x42353d;\n    uStack10692 = 0;\n    uStack10688 = 0;\n    uStack10684 = 0;\n    uStack10680 = 3;\n    uStack10676 = 5;\n    uStack10672 = 0;\n    uStack10664 = 0x45f1c8;\n    pcStack10656 = fcn.00422a3d;\n    uStack10652 = 0;\n    uStack10648 = 0;\n    uStack10644 = 0;\n    uStack10640 = 1;\n    uStack10636 = 2;\n    uStack10632 = 0;\n    uStack10624 = 0x45f1ac;\n    pcStack10616 = fcn.004227ef;\n    uStack10612 = 0;\n    uStack10608 = 0;\n    uStack10604 = 0;\n    uStack10600 = 1;\n    uStack10596 = 2;\n    uStack10592 = 0;\n    uStack10584 = 0x45f194;\n    pcStack10576 = fcn.00425460;\n    uStack10572 = 0;\n    uStack10568 = 0;\n    uStack10564 = 0;\n    uStack10560 = 1;\n    uStack10556 = 1;\n    uStack10552 = 0;\n    uStack10544 = 0x45f170;\n    pcStack10536 = fcn.004254ea;\n    uStack10532 = 0;\n    uStack10528 = 0;\n    uStack10524 = 0;\n    uStack10520 = 0;\n    uStack10516 = 1;\n    uStack10512 = 0;\n    uStack10504 = 0x45f150;\n    uStack10496 = 0x423555;\n    uStack10492 = 0;\n    uStack10488 = 0;\n    uStack10484 = 0;\n    uStack10480 = 3;\n    uStack10476 = 5;\n    uStack10472 = 0;\n    uStack10464 = 0x45f12c;\n    pcStack10456 = fcn.00423988;\n    uStack10452 = 0;\n    uStack10448 = 0;\n    uStack10444 = 0;\n    uStack10440 = 2;\n    uStack10436 = 4;\n    uStack10432 = 0;\n    uStack10424 = 0x45f110;\n    pcStack10416 = fcn.00425682;\n    uStack10412 = 0;\n    uStack10408 = 0;\n    uStack10404 = 0;\n    uStack10400 = 2;\n    uStack10396 = 3;\n    uStack10392 = 0;\n    uStack10384 = 0x45f0f8;\n    pcStack10376 = fcn.00423154;\n    uStack10372 = 0;\n    uStack10368 = 0;\n    uStack10364 = 0;\n    uStack10360 = 2;\n    uStack10356 = 4;\n    uStack10352 = 0;\n    uStack10344 = 0x45f0e4;\n    uStack10336 = 0x422cd1;\n    uStack10332 = 0;\n    uStack10328 = 0;\n    uStack10324 = 0;\n    uStack10320 = 2;\n    uStack10316 = 2;\n    uStack10312 = 0;\n    uStack10304 = 0x45f0c8;\n    uStack10296 = 0x422cbb;\n    uStack10292 = 0;\n    uStack10288 = 0;\n    uStack10284 = 0;\n    uStack10280 = 2;\n    uStack10276 = 2;\n    uStack10272 = 0;\n    uStack10264 = 0x45f0bc;\n    uStack10256 = 0x42a03d;\n    uStack10252 = 0;\n    uStack10248 = 0;\n    uStack10244 = 0;\n    uStack10240 = 1;\n    uStack10236 = 1;\n    uStack10232 = 1;\n    uStack10224 = 0x45f0a4;\n    uStack10216 = 0x42a966;\n    uStack10212 = 0;\n    uStack10208 = 0;\n    uStack10204 = 0;\n    uStack10200 = 1;\n    uStack10196 = 4;\n    uStack10192 = 0;\n    uStack10184 = 0x45f090;\n    pcStack10176 = fcn.00426ad1;\n    uStack10172 = 0;\n    uStack10168 = 0;\n    uStack10164 = 0;\n    uStack10160 = 1;\n    uStack10156 = 8;\n    uStack10152 = 0;\n    uStack10144 = 0x45f06c;\n    uStack10136 = 0x42756c;\n    uStack10132 = 0;\n    uStack10128 = 0;\n    uStack10124 = 0;\n    uStack10120 = 4;\n    uStack10116 = 8;\n    uStack10112 = 0;\n    uStack10104 = 0x45f044;\n    uStack10096 = 0x427596;\n    uStack10092 = 0;\n    uStack10088 = 0;\n    uStack10084 = 0;\n    uStack10080 = 3;\n    uStack10076 = 7;\n    uStack10072 = 0;\n    uStack10064 = 0x45f018;\n    uStack10056 = 0x4275ab;\n    uStack10052 = 0;\n    uStack10048 = 0;\n    uStack10044 = 0;\n    uStack10040 = 3;\n    uStack10036 = 7;\n    uStack10032 = 0;\n    uStack10024 = 0x45eff0;\n    uStack10016 = 0x4275c0;\n    uStack10012 = 0;\n    uStack10008 = 0;\n    uStack10004 = 0;\n    uStack10000 = 3;\n    uStack9996 = 7;\n    uStack9992 = 0;\n    uStack9984 = 0x45efbc;\n    uStack9976 = 0x4275d5;\n    uStack9972 = 0;\n    uStack9968 = 0;\n    uStack9964 = 0;\n    uStack9960 = 0;\n    uStack9956 = 1;\n    uStack9952 = 0;\n    uStack9944 = 0x45ef98;\n    uStack9936 = 0x4275ea;\n    uStack9932 = 0;\n    uStack9928 = 0;\n    uStack9924 = 0;\n    uStack9920 = 3;\n    uStack9916 = 7;\n    uStack9912 = 0;\n    uStack9904 = 0x45ef70;\n    uStack9896 = 0x4277a3;\n    uStack9892 = 0;\n    uStack9888 = 0;\n    uStack9884 = 0;\n    uStack9880 = 0;\n    uStack9876 = 0;\n    uStack9872 = 0;\n    uStack9864 = 0x45ef4c;\n    uStack9856 = 0x427614;\n    uStack9852 = 0;\n    uStack9848 = 0;\n    uStack9844 = 0;\n    uStack9840 = 3;\n    uStack9836 = 7;\n    uStack9832 = 0;\n    uStack9824 = 0x45ef20;\n    uStack9816 = 0x427629;\n    uStack9812 = 0;\n    uStack9808 = 0;\n    uStack9804 = 0;\n    uStack9800 = 2;\n    uStack9796 = 5;\n    uStack9792 = 0;\n    uStack9784 = 0x45eef8;\n    uStack9776 = 0x42763e;\n    uStack9772 = 0;\n    uStack9768 = 0;\n    uStack9764 = 0;\n    uStack9760 = 3;\n    uStack9756 = 7;\n    uStack9752 = 0;\n    uStack9744 = 0x45eed4;\n    uStack9736 = 0x427653;\n    uStack9732 = 0;\n    uStack9728 = 0;\n    uStack9724 = 0;\n    uStack9720 = 4;\n    uStack9716 = 8;\n    uStack9712 = 0;\n    uStack9704 = 0x45eeac;\n    uStack9696 = 0x427668;\n    uStack9692 = 0;\n    uStack9688 = 0;\n    uStack9684 = 0;\n    uStack9680 = 3;\n    uStack9676 = 7;\n    uStack9672 = 0;\n    uStack9664 = 0x45ee84;\n    uStack9656 = 0x427581;\n    uStack9652 = 0;\n    uStack9648 = 0;\n    uStack9644 = 0;\n    uStack9640 = 3;\n    uStack9636 = 7;\n    uStack9632 = 0;\n    uStack9624 = 0x45ee60;\n    uStack9616 = 0x42767d;\n    uStack9612 = 0;\n    uStack9608 = 0;\n    uStack9604 = 0;\n    uStack9600 = 3;\n    uStack9596 = 7;\n    uStack9592 = 0;\n    uStack9584 = 0x45ee34;\n    uStack9576 = 0x427692;\n    uStack9572 = 0;\n    uStack9568 = 0;\n    uStack9564 = 0;\n    uStack9560 = 3;\n    uStack9556 = 7;\n    uStack9552 = 0;\n    uStack9544 = 0x45ee00;\n    uStack9536 = 0x4276a7;\n    uStack9532 = 0;\n    uStack9528 = 0;\n    uStack9524 = 0;\n    uStack9520 = 2;\n    uStack9516 = 2;\n    uStack9512 = 0;\n    uStack9504 = 0x45eddc;\n    uStack9496 = 0x4276bc;\n    uStack9492 = 0;\n    uStack9488 = 0;\n    uStack9484 = 0;\n    uStack9480 = 1;\n    uStack9476 = 3;\n    uStack9472 = 0;\n    uStack9464 = 0x45edb0;\n    uStack9456 = 0x4276d1;\n    uStack9452 = 0;\n    uStack9448 = 0;\n    uStack9444 = 0;\n    uStack9440 = 2;\n    uStack9436 = 4;\n    uStack9432 = 0;\n    uStack9424 = 0x45ed84;\n    uStack9416 = 0x4275ff;\n    uStack9412 = 0;\n    uStack9408 = 0;\n    uStack9404 = 0;\n    uStack9400 = 3;\n    uStack9396 = 7;\n    uStack9392 = 0;\n    uStack9384 = 0x45ed60;\n    uStack9376 = 0x4277b8;\n    uStack9372 = 0;\n    uStack9368 = 0;\n    uStack9364 = 0;\n    uStack9360 = 3;\n    uStack9356 = 7;\n    uStack9352 = 0;\n    uStack9344 = 0x45ed3c;\n    uStack9336 = 0x4276e6;\n    uStack9332 = 0;\n    uStack9328 = 0;\n    uStack9324 = 0;\n    uStack9320 = 3;\n    uStack9316 = 7;\n    uStack9312 = 0;\n    uStack9304 = 0x45ed10;\n    uStack9296 = 0x4276fb;\n    uStack9292 = 0;\n    uStack9288 = 0;\n    uStack9284 = 0;\n    uStack9280 = 2;\n    uStack9276 = 6;\n    uStack9272 = 0;\n    uStack9264 = 0x45ece8;\n    uStack9256 = 0x427725;\n    uStack9252 = 0;\n    uStack9248 = 0;\n    uStack9244 = 0;\n    uStack9240 = 3;\n    uStack9236 = 7;\n    uStack9232 = 0;\n    uStack9224 = 0x45ecc0;\n    uStack9216 = 0x427710;\n    uStack9212 = 0;\n    uStack9208 = 0;\n    uStack9204 = 0;\n    uStack9200 = 2;\n    uStack9196 = 6;\n    uStack9192 = 0;\n    uStack9184 = 0x45ec9c;\n    uStack9176 = 0x42773a;\n    uStack9172 = 0;\n    uStack9168 = 0;\n    uStack9164 = 0;\n    uStack9160 = 2;\n    uStack9156 = 6;\n    uStack9152 = 0;\n    uStack9144 = 0x45ec70;\n    uStack9136 = 0x42774f;\n    uStack9132 = 0;\n    uStack9128 = 0;\n    uStack9124 = 0;\n    uStack9120 = 1;\n    uStack9116 = 1;\n    uStack9112 = 0;\n    uStack9104 = 0x45ec44;\n    uStack9096 = 0x427764;\n    uStack9092 = 0;\n    uStack9088 = 0;\n    uStack9084 = 0;\n    uStack9080 = 2;\n    uStack9076 = 6;\n    uStack9072 = 0;\n    uStack9064 = 0x45ec10;\n    uStack9056 = 0x427779;\n    uStack9052 = 0;\n    uStack9048 = 0;\n    uStack9044 = 0;\n    uStack9040 = 2;\n    uStack9036 = 2;\n    uStack9032 = 0;\n    uStack9024 = 0x45ebe8;\n    uStack9016 = 0x42778e;\n    uStack9012 = 0;\n    uStack9008 = 0;\n    uStack9004 = 0;\n    uStack9000 = 1;\n    uStack8996 = 2;\n    uStack8992 = 0;\n    uStack8984 = 0x45ebcc;\n    uStack8976 = 0x426ff7;\n    uStack8972 = 0;\n    uStack8968 = 0;\n    uStack8964 = 0;\n    uStack8960 = 1;\n    uStack8956 = 1;\n    uStack8952 = 0;\n    uStack8944 = 0x45eba8;\n    pcStack8936 = fcn.00427c2b;\n    uStack8932 = 0;\n    uStack8928 = 0;\n    uStack8924 = 0;\n    uStack8920 = 1;\n    uStack8916 = 1;\n    uStack8912 = 0;\n    uStack8904 = 0x45eb88;\n    uStack8896 = 0x427c74;\n    uStack8892 = 0;\n    uStack8888 = 0;\n    uStack8884 = 0;\n    uStack8880 = 0;\n    uStack8876 = 1;\n    uStack8872 = 0;\n    uStack8864 = 0x45eb70;\n    pcStack8856 = fcn.00427e57;\n    uStack8852 = 0;\n    uStack8848 = 0;\n    uStack8844 = 0;\n    uStack8840 = 1;\n    uStack8836 = 2;\n    uStack8832 = 0;\n    uStack8824 = 0x45eb50;\n    pcStack8816 = fcn.00428224;\n    uStack8812 = 0;\n    uStack8808 = 0;\n    uStack8804 = 0;\n    uStack8800 = 2;\n    uStack8796 = 4;\n    uStack8792 = 0;\n    uStack8784 = 0x45eb18;\n    pcStack8776 = fcn.004286c2;\n    uStack8772 = 0;\n    uStack8768 = 0;\n    uStack8764 = 0;\n    uStack8760 = 2;\n    uStack8756 = 2;\n    uStack8752 = 0;\n    uStack8744 = 0x45eaf8;\n    pcStack8736 = fcn.0042800d;\n    uStack8732 = 0;\n    uStack8728 = 0;\n    uStack8724 = 0;\n    uStack8712 = 0;\n    uStack8704 = 0x45ead0;\n    uStack8720 = 4;\n    uStack8716 = 4;\n    pcStack8696 = fcn.00427f94;\n    uStack8692 = 0;\n    uStack8688 = 0;\n    uStack8684 = 0;\n    uStack8680 = 1;\n    uStack8676 = 2;\n    uStack8672 = 0;\n    uStack8664 = 0x45eaac;\n    uStack8656 = 0x427289;\n    uStack8652 = 0;\n    uStack8648 = 0;\n    uStack8644 = 0;\n    uStack8640 = 2;\n    uStack8636 = 2;\n    uStack8632 = 0;\n    uStack8624 = 0x45ea8c;\n    uStack8616 = 0x4271eb;\n    uStack8612 = 0;\n    uStack8608 = 0;\n    uStack8604 = 0;\n    uStack8600 = 2;\n    uStack8596 = 2;\n    uStack8592 = 0;\n    uStack8584 = 0x45ea68;\n    uStack8576 = 0x42723a;\n    uStack8572 = 0;\n    uStack8568 = 0;\n    uStack8564 = 0;\n    uStack8560 = 2;\n    uStack8556 = 2;\n    uStack8552 = 0;\n    uStack8544 = 0x45ea48;\n    pcStack8536 = fcn.00427927;\n    uStack8532 = 0;\n    uStack8528 = 0;\n    uStack8524 = 0;\n    uStack8520 = 2;\n    uStack8516 = 3;\n    uStack8512 = 0;\n    uStack8504 = 0x45ea28;\n    pcStack8496 = fcn.0042702c;\n    uStack8492 = 0;\n    uStack8488 = 0;\n    uStack8484 = 0;\n    uStack8480 = 2;\n    uStack8476 = 5;\n    uStack8472 = 0;\n    uStack8464 = 0x45ea04;\n    pcStack8456 = fcn.00427a18;\n    uStack8452 = 0;\n    uStack8448 = 0;\n    uStack8444 = 0;\n    uStack8440 = 2;\n    uStack8436 = 8;\n    uStack8432 = 0;\n    uStack8424 = 0x45e9e4;\n    pcStack8416 = fcn.004277cd;\n    uStack8412 = 0;\n    uStack8408 = 0;\n    uStack8404 = 0;\n    uStack8400 = 2;\n    uStack8396 = 4;\n    uStack8392 = 0;\n    uStack8384 = 0x45e9c4;\n    uStack8376 = 0x4279ae;\n    uStack8372 = 0;\n    uStack8368 = 0;\n    uStack8364 = 0;\n    uStack8360 = 2;\n    uStack8356 = 3;\n    uStack8352 = 0;\n    uStack8344 = 0x45e9a0;\n    pcStack8336 = fcn.00427130;\n    uStack8332 = 0;\n    uStack8328 = 0;\n    uStack8324 = 0;\n    uStack8320 = 2;\n    uStack8316 = 2;\n    uStack8312 = 0;\n    uStack8304 = 0x45e984;\n    pcStack8296 = fcn.00427b36;\n    uStack8292 = 0;\n    uStack8288 = 0;\n    uStack8284 = 0;\n    uStack8280 = 3;\n    uStack8276 = 5;\n    uStack8272 = 0;\n    uStack8264 = 0x45e95c;\n    uStack8256 = 0x427bd9;\n    uStack8252 = 0;\n    uStack8248 = 0;\n    uStack8244 = 0;\n    uStack8240 = 2;\n    uStack8236 = 2;\n    uStack8232 = 0;\n    uStack8224 = 0x45e93c;\n    uStack8216 = 0x42789a;\n    uStack8212 = 0;\n    uStack8208 = 0;\n    uStack8204 = 0;\n    uStack8200 = 2;\n    uStack8196 = 2;\n    var_1ffch = 0;\n    var_1ff4h = 0x45e91c;\n    var_1fech = 0x427caa;\n    uStack8172 = 0;\n    uStack8168 = 0;\n    uStack8164 = 0;\n    var_1fdch = 2;\n    var_1fd8h = 3;\n    var_1fd4h = 0;\n    var_1fcch = 0x45e900;\n    var_1fc4h = fcn.00427d12;\n    uStack8132 = 0;\n    uStack8128 = 0;\n    uStack8124 = 0;\n    var_1fb4h = 2;\n    var_1fb0h = 5;\n    var_1fach = 0;\n    var_1fa4h = 0x45e8ec;\n    var_1f9ch = 0x428373;\n    uStack8092 = 0;\n    uStack8088 = 0;\n    uStack8084 = 0;\n    var_1f8ch = 0;\n    var_1f88h = 1;\n    var_1f84h = 0;\n    var_1f7ch = 0x45e8c8;\n    var_1f74h = fcn.004283a6;\n    uStack8052 = 0;\n    uStack8048 = 0;\n    uStack8044 = 0;\n    var_1f64h = 0;\n    var_1f60h = 1;\n    var_1f5ch = 0;\n    var_1f54h = 0x45e8b4;\n    var_1f4ch = fcn.004269b1;\n    uStack8012 = 0;\n    uStack8008 = 0;\n    uStack8004 = 0;\n    var_1f3ch = 0;\n    var_1f38h = 1;\n    var_1f34h = 0;\n    var_1f2ch = 0x45e894;\n    var_1f24h = fcn.00428483;\n    uStack7972 = 0;\n    uStack7968 = 0;\n    uStack7964 = 0;\n    var_1f14h = 2;\n    var_1f10h = 2;\n    var_1f0ch = 0;\n    var_1f04h = 0x45e878;\n    var_1efch = 0x426d3a;\n    uStack7932 = 0;\n    uStack7928 = 0;\n    uStack7924 = 0;\n    var_1eech = 1;\n    var_1ee8h = 2;\n    var_1ee4h = 0;\n    var_1edch = 0x45e860;\n    var_1ed4h = fcn.00427edd;\n    uStack7892 = 0;\n    uStack7888 = 0;\n    uStack7884 = 0;\n    var_1ec4h = 2;\n    var_1ec0h = 5;\n    var_1ebch = 0;\n    var_1eb4h = 0x45e844;\n    var_1each = 0x426e4f;\n    uStack7852 = 0;\n    uStack7848 = 0;\n    uStack7844 = 0;\n    var_1e9ch = 0;\n    var_1e98h = 3;\n    var_1e94h = 0;\n    var_1e8ch = 0x45e82c;\n    var_1e84h = fcn.00426ecb;\n    uStack7812 = 0;\n    uStack7808 = 0;\n    uStack7804 = 0;\n    var_1e74h = 1;\n    var_1e70h = 5;\n    var_1e6ch = 0;\n    var_1e64h = 0x45e814;\n    var_1e5ch = 0x426dfc;\n    uStack7772 = 0;\n    uStack7768 = 0;\n    uStack7764 = 0;\n    var_1e4ch = 1;\n    var_1e48h = 2;\n    var_1e44h = 0;\n    var_1e3ch = 0x45e7fc;\n    var_1e34h = 0x426d8e;\n    uStack7732 = 0;\n    uStack7728 = 0;\n    uStack7724 = 0;\n    var_1e24h = 1;\n    var_1e20h = 3;\n    var_1e1ch = 0;\n    var_1e14h = 0x45e7e0;\n    var_1e0ch = fcn.00426c6c;\n    uStack7692 = 0;\n    uStack7688 = 0;\n    uStack7684 = 0;\n    var_1dfch = 2;\n    var_1df8h = 3;\n    var_1df4h = 0;\n    var_1dech = 0x45e7c8;\n    var_1de4h = 0x426c1a;\n    uStack7652 = 0;\n    uStack7648 = 0;\n    uStack7644 = 0;\n    var_1dd4h = 0;\n    var_1dd0h = 2;\n    var_1dcch = 0;\n    var_1dc4h = 0x45e7ac;\n    var_1dbch = 0x4278e8;\n    uStack7612 = 0;\n    uStack7608 = 0;\n    uStack7604 = 0;\n    var_1dach = 0;\n    var_1da8h = 1;\n    var_1da4h = 0;\n    var_1d9ch = 0x45e798;\n    var_1d94h = 0x426965;\n    uStack7572 = 0;\n    uStack7568 = 0;\n    uStack7564 = 0;\n    var_1d84h = 1;\n    var_1d80h = 2;\n    var_1d7ch = 0;\n    var_1d74h = 0x45e790;\n    var_1d6ch = fcn.0042a0c9;\n    uStack7532 = 0;\n    uStack7528 = 0;\n    uStack7524 = 0;\n    var_1d5ch = 1;\n    var_1d58h = 2;\n    var_1d54h = 1;\n    var_1d4ch = 0x45e77c;\n    var_1d44h = fcn.0042e1cf;\n    uStack7492 = 0;\n    uStack7488 = 0;\n    uStack7484 = 0;\n    var_1d34h = 1;\n    var_1d30h = 2;\n    var_1d2ch = 0;\n    var_1d24h = 0x45e760;\n    var_1d1ch = 0x42a898;\n    uStack7452 = 0;\n    uStack7448 = 0;\n    uStack7444 = 0;\n    var_1d0ch = 1;\n    var_1d08h = 4;\n    var_1d04h = 0;\n    var_1cfch = 0x45e754;\n    var_1cf4h = 0x429726;\n    uStack7412 = 0;\n    uStack7408 = 0;\n    uStack7404 = 0;\n    var_1ce4h = 1;\n    var_1ce0h = 1;\n    var_1cdch = 1;\n    var_1cd4h = 0x45e744;\n    var_1ccch = fcn.0042aa34;\n    uStack7372 = 0;\n    uStack7368 = 0;\n    uStack7364 = 0;\n    var_1cbch = 1;\n    var_1cb8h = 4;\n    var_1cb4h = 0;\n    var_1cach = 0x45e72c;\n    var_1ca4h = fcn.0042b01c;\n    uStack7332 = 0;\n    uStack7328 = 0;\n    uStack7324 = 0;\n    var_1c94h = 1;\n    var_1c90h = 1;\n    var_1c8ch = 0;\n    var_1c84h = 0x45e718;\n    var_1c7ch = fcn.00421de9;\n    uStack7292 = 0;\n    uStack7288 = 0;\n    uStack7284 = 0;\n    var_1c6ch = 2;\n    var_1c68h = 3;\n    var_1c64h = 0;\n    var_1c5ch = 0x45e708;\n    var_1c54h = fcn.00421c8a;\n    uStack7252 = 0;\n    uStack7248 = 0;\n    uStack7244 = 0;\n    var_1c3ch = 1;\n    var_1c34h = 0x45e6e8;\n    var_1c44h = 4;\n    var_1c40h = 4;\n    var_1c2ch = fcn.00421ea4;\n    uStack7212 = 0;\n    uStack7208 = 0;\n    uStack7204 = 0;\n    var_1c1ch = 2;\n    var_1c18h = 2;\n    var_1c14h = 1;\n    var_1c0ch = 0x45e6c0;\n    var_1c04h = fcn.004223c1;\n    uStack7172 = 0;\n    uStack7168 = 0;\n    uStack7164 = 0;\n    var_1bf4h = 1;\n    var_1bf0h = 1;\n    var_1bech = 1;\n    var_1be4h = 0x45e69c;\n    var_1bdch = fcn.004266e2;\n    uStack7132 = 0;\n    uStack7128 = 0;\n    uStack7124 = 0;\n    var_1bcch = 3;\n    var_1bc8h = 4;\n    var_1bc4h = 0;\n    var_1bbch = 0x45e688;\n    var_1bb4h = fcn.00421d39;\n    uStack7092 = 0;\n    uStack7088 = 0;\n    uStack7084 = 0;\n    var_1b9ch = 0;\n    var_1b94h = 0x45e668;\n    var_1ba4h = 4;\n    var_1ba0h = 4;\n    var_1b8ch = fcn.004220e2;\n    uStack7052 = 0;\n    uStack7048 = 0;\n    uStack7044 = 0;\n    var_1b7ch = 3;\n    var_1b78h = 4;\n    var_1b74h = 0;\n    var_1b6ch = 0x45e654;\n    var_1b64h = fcn.0042d07e;\n    uStack7012 = 0;\n    uStack7008 = 0;\n    uStack7004 = 0;\n    var_1b54h = 2;\n    var_1b50h = 9;\n    var_1b4ch = 0;\n    var_1b44h = 0x45e64c;\n    var_1b3ch = 0x429372;\n    uStack6972 = 0;\n    uStack6968 = 0;\n    uStack6964 = 0;\n    var_1b2ch = 1;\n    var_1b28h = 1;\n    var_1b24h = 1;\n    var_1b1ch = 0x45e63c;\n    var_1b14h = 0x42c3d1;\n    uStack6932 = 0;\n    uStack6928 = 0;\n    uStack6924 = 0;\n    var_1b04h = 0;\n    var_1b00h = 0;\n    var_1afch = 1;\n    var_1af4h = 0x45e62c;\n    var_1aech = 0x4293fd;\n    uStack6892 = 0;\n    uStack6888 = 0;\n    uStack6884 = 0;\n    var_1adch = 1;\n    var_1ad8h = 1;\n    var_1ad4h = 1;\n    var_1acch = 0x45e618;\n    var_1ac4h = 0x429455;\n    uStack6852 = 0;\n    uStack6848 = 0;\n    uStack6844 = 0;\n    var_1ab4h = 1;\n    var_1ab0h = 1;\n    var_1aach = 1;\n    var_1aa4h = 0x45e608;\n    var_1a9ch = 0x430040;\n    uStack6812 = 0;\n    uStack6808 = 0;\n    uStack6804 = 0;\n    var_1a8ch = 1;\n    var_1a88h = 1;\n    var_1a84h = 1;\n    var_1a7ch = 0x45e5f0;\n    var_1a74h = 0x42f01e;\n    uStack6772 = 0;\n    uStack6768 = 0;\n    uStack6764 = 0;\n    var_1a64h = 1;\n    var_1a60h = 1;\n    var_1a5ch = 1;\n    var_1a54h = 0x45e5d8;\n    var_1a4ch = 0x43ae55;\n    uStack6732 = 0;\n    uStack6728 = 0;\n    uStack6724 = 0;\n    var_1a3ch = 1;\n    var_1a38h = 1;\n    var_1a34h = 1;\n    var_1a2ch = 0x45e5c8;\n    var_1a24h = fcn.0042952c;\n    uStack6692 = 0;\n    uStack6688 = 0;\n    uStack6684 = 0;\n    var_1a14h = 1;\n    var_1a10h = 1;\n    var_1a0ch = 1;\n    var_1a04h = 0x45e5b8;\n    var_19fch = fcn.0042978d;\n    uStack6652 = 0;\n    uStack6648 = 0;\n    uStack6644 = 0;\n    var_19ech = 1;\n    var_19e8h = 1;\n    var_19e4h = 1;\n    var_19dch = 0x45e5ac;\n    var_19d4h = fcn.00429481;\n    uStack6612 = 0;\n    uStack6608 = 0;\n    uStack6604 = 0;\n    var_19c4h = 1;\n    var_19c0h = 1;\n    var_19bch = 1;\n    var_19b4h = 0x45e598;\n    var_19ach = 0x42f060;\n    uStack6572 = 0;\n    uStack6568 = 0;\n    uStack6564 = 0;\n    var_199ch = 1;\n    var_1998h = 1;\n    var_1994h = 1;\n    var_198ch = 0x45e584;\n    var_1984h = 0x4295c3;\n    uStack6532 = 0;\n    uStack6528 = 0;\n    uStack6524 = 0;\n    var_1974h = 1;\n    var_1970h = 1;\n    var_196ch = 1;\n    var_1964h = 0x45e578;\n    var_195ch = 0x430ee3;\n    uStack6492 = 0;\n    uStack6488 = 0;\n    uStack6484 = 0;\n    var_194ch = 1;\n    var_1948h = 1;\n    var_1944h = 1;\n    var_193ch = 0x45e564;\n    var_1934h = 0x429429;\n    uStack6452 = 0;\n    uStack6448 = 0;\n    uStack6444 = 0;\n    var_1924h = 1;\n    var_1920h = 1;\n    var_191ch = 1;\n    var_1914h = 0x45e55c;\n    var_190ch = 0x429d04;\n    uStack6412 = 0;\n    uStack6408 = 0;\n    uStack6404 = 0;\n    var_18fch = 1;\n    var_18f8h = 1;\n    var_18f4h = 1;\n    var_18ech = 0x45e544;\n    var_18e4h = fcn.0042e4f3;\n    uStack6372 = 0;\n    uStack6368 = 0;\n    uStack6364 = 0;\n    var_18d4h = 0;\n    var_18d0h = 0;\n    var_18cch = 1;\n    var_18c4h = 0x45e53c;\n    var_18bch = 0x429ec4;\n    uStack6332 = 0;\n    uStack6328 = 0;\n    uStack6324 = 0;\n    var_18ach = 2;\n    var_18a8h = 2;\n    var_18a4h = 1;\n    var_189ch = 0x45e524;\n    var_1894h = fcn.0042bec3;\n    uStack6292 = 0;\n    uStack6288 = 0;\n    uStack6284 = 0;\n    var_1884h = 1;\n    var_1880h = 5;\n    var_187ch = 1;\n    var_1874h = 0x45e504;\n    var_186ch = fcn.0042c020;\n    uStack6252 = 0;\n    uStack6248 = 0;\n    uStack6244 = 0;\n    var_185ch = 5;\n    var_1858h = 6;\n    var_1854h = 1;\n    var_184ch = 0x45e4f0;\n    var_1844h = 0x42c36b;\n    uStack6212 = 0;\n    uStack6208 = 0;\n    uStack6204 = 0;\n    var_1834h = 1;\n    var_1830h = 1;\n    var_182ch = 1;\n    var_1824h = 0x45e4d0;\n    var_181ch = fcn.0042cf49;\n    uStack6172 = 0;\n    uStack6168 = 0;\n    uStack6164 = 0;\n    var_180ch = 0;\n    var_1808h = 0;\n    var_1804h = 1;\n    var_17fch = 0x45e4b8;\n    var_17f4h = fcn.0042bd83;\n    uStack6132 = 0;\n    uStack6128 = 0;\n    uStack6124 = 0;\n    var_17e4h = 0;\n    var_17e0h = 1;\n    var_17dch = 1;\n    var_17d4h = 0x45e4a4;\n    var_17cch = 0x42be63;\n    uStack6092 = 0;\n    uStack6088 = 0;\n    uStack6084 = 0;\n    var_17bch = 2;\n    var_17b8h = 3;\n    var_17b4h = 1;\n    var_17ach = 0x45e494;\n    var_17a4h = 0x42c39e;\n    uStack6052 = 0;\n    uStack6048 = 0;\n    uStack6044 = 0;\n    var_1794h = 1;\n    var_1790h = 1;\n    var_178ch = 1;\n    var_1784h = 0x45e47c;\n    var_177ch = fcn.0042c2dc;\n    uStack6012 = 0;\n    uStack6008 = 0;\n    uStack6004 = 0;\n    var_176ch = 1;\n    var_1768h = 2;\n    var_1764h = 1;\n    var_175ch = 0x45e46c;\n    var_1754h = fcn.0042e73e;\n    uStack5972 = 0;\n    uStack5968 = 0;\n    uStack5964 = 0;\n    var_1744h = 3;\n    var_1740h = 4;\n    var_173ch = 0;\n    var_1734h = 0x45bf8c;\n    var_172ch = fcn.004295f2;\n    uStack5932 = 0;\n    uStack5928 = 0;\n    uStack5924 = 0;\n    var_171ch = 1;\n    var_1718h = 1;\n    var_1714h = 1;\n    var_170ch = 0x45e458;\n    var_1704h = fcn.0043144d;\n    uStack5892 = 0;\n    uStack5888 = 0;\n    uStack5884 = 0;\n    var_16f4h = 1;\n    var_16f0h = 4;\n    var_16ech = 0;\n    var_16e4h = 0x45e444;\n    var_16dch = fcn.00431787;\n    uStack5852 = 0;\n    uStack5848 = 0;\n    uStack5844 = 0;\n    var_16cch = 1;\n    var_16c8h = 3;\n    var_16c4h = 0;\n    var_16bch = 0x45e434;\n    var_16b4h = fcn.00430f16;\n    uStack5812 = 0;\n    uStack5808 = 0;\n    uStack5804 = 0;\n    var_16a4h = 1;\n    var_16a0h = 2;\n    var_169ch = 0;\n    var_1694h = 0x45e424;\n    var_168ch = fcn.004314fd;\n    uStack5772 = 0;\n    uStack5768 = 0;\n    uStack5764 = 0;\n    var_167ch = 1;\n    var_1678h = 2;\n    var_1674h = 1;\n    var_166ch = 0x45e41c;\n    var_1664h = fcn.0042d792;\n    uStack5732 = 0;\n    uStack5728 = 0;\n    uStack5724 = 0;\n    var_1654h = 1;\n    var_1650h = 2;\n    var_164ch = 1;\n    var_1644h = 0x45e410;\n    var_163ch = fcn.0042f0f6;\n    uStack5692 = 0;\n    uStack5688 = 0;\n    uStack5684 = 0;\n    var_162ch = 1;\n    var_1628h = 2;\n    var_1624h = 0;\n    var_161ch = 0x45e3f4;\n    var_1614h = fcn.0042b9fa;\n    uStack5652 = 0;\n    uStack5648 = 0;\n    uStack5644 = 0;\n    var_1604h = 4;\n    var_1600h = 5;\n    var_15fch = 1;\n    var_15f4h = 0x45e3d8;\n    var_15ech = fcn.0042bce5;\n    uStack5612 = 0;\n    uStack5608 = 0;\n    uStack5604 = 0;\n    var_15dch = 2;\n    var_15d8h = 2;\n    var_15d4h = 1;\n    var_15cch = 0x45e3c0;\n    var_15c4h = fcn.0042b5cd;\n    uStack5572 = 0;\n    uStack5568 = 0;\n    uStack5564 = 0;\n    var_15b4h = 5;\n    var_15b0h = 7;\n    var_15ach = 1;\n    var_15a4h = 0x45e3a8;\n    var_159ch = fcn.0043b68a;\n    uStack5532 = 0;\n    uStack5528 = 0;\n    uStack5524 = 0;\n    var_158ch = 1;\n    var_1588h = 1;\n    var_1584h = 1;\n    var_157ch = 0x45e390;\n    var_1574h = fcn.0043b62f;\n    uStack5492 = 0;\n    uStack5488 = 0;\n    uStack5484 = 0;\n    var_1564h = 1;\n    var_1560h = 1;\n    var_155ch = 1;\n    var_1554h = 0x45e374;\n    var_154ch = fcn.00438b6e;\n    uStack5452 = 0;\n    uStack5448 = 0;\n    uStack5444 = 0;\n    var_153ch = 1;\n    var_1538h = 2;\n    var_1534h = 0;\n    var_152ch = 0x45e358;\n    var_1524h = fcn.00438a5f;\n    uStack5412 = 0;\n    uStack5408 = 0;\n    uStack5404 = 0;\n    var_1514h = 1;\n    var_1510h = 1;\n    var_150ch = 1;\n    var_1504h = 0x45e340;\n    var_14fch = fcn.00439758;\n    uStack5372 = 0;\n    uStack5368 = 0;\n    uStack5364 = 0;\n    var_14ech = 0;\n    var_14e8h = 1;\n    var_14e4h = 1;\n    var_14dch = 0x45e318;\n    var_14d4h = fcn.0043964a;\n    uStack5332 = 0;\n    uStack5328 = 0;\n    uStack5324 = 0;\n    var_14c4h = 2;\n    var_14c0h = 2;\n    var_14bch = 0;\n    var_14b4h = 0x45e300;\n    var_14ach = 0x438ae8;\n    uStack5292 = 0;\n    uStack5288 = 0;\n    uStack5284 = 0;\n    var_149ch = 1;\n    var_1498h = 2;\n    var_1494h = 1;\n    var_148ch = 0x45e2dc;\n    var_1484h = 0x438b2b;\n    uStack5252 = 0;\n    uStack5248 = 0;\n    uStack5244 = 0;\n    var_1474h = 1;\n    var_1470h = 2;\n    var_146ch = 1;\n    var_1464h = 0x45e2c4;\n    var_145ch = fcn.0042ca4c;\n    uStack5212 = 0;\n    uStack5208 = 0;\n    uStack5204 = 0;\n    var_144ch = 0;\n    var_1448h = 0;\n    var_1444h = 1;\n    var_143ch = 0x45e2ac;\n    var_1434h = fcn.0042ca32;\n    uStack5172 = 0;\n    uStack5168 = 0;\n    uStack5164 = 0;\n    var_1424h = 2;\n    var_1420h = 6;\n    var_141ch = 1;\n    var_1414h = 0x45e294;\n    var_140ch = 0x42ca66;\n    uStack5132 = 0;\n    uStack5128 = 0;\n    uStack5124 = 0;\n    var_13fch = 1;\n    var_13f8h = 3;\n    var_13f4h = 1;\n    var_13ech = 0x45e284;\n    var_13e4h = fcn.00429b44;\n    uStack5092 = 0;\n    uStack5088 = 0;\n    uStack5084 = 0;\n    var_13d4h = 0;\n    var_13d0h = 3;\n    var_13cch = 1;\n    var_13c4h = 0x45e270;\n    var_13bch = fcn.0043c4bd;\n    uStack5052 = 0;\n    uStack5048 = 0;\n    uStack5044 = 0;\n    var_13ach = 1;\n    var_13a8h = 2;\n    var_13a4h = 0;\n    var_139ch = 0x45e258;\n    var_1394h = fcn.0043c6a4;\n    uStack5012 = 0;\n    uStack5008 = 0;\n    uStack5004 = 0;\n    var_1384h = 2;\n    var_1380h = 2;\n    var_137ch = 1;\n    var_1374h = 0x45e240;\n    var_136ch = fcn.0043c855;\n    uStack4972 = 0;\n    uStack4968 = 0;\n    uStack4964 = 0;\n    var_135ch = 2;\n    var_1358h = 2;\n    var_1354h = 1;\n    var_134ch = 0x45e230;\n    var_1344h = fcn.0043bba1;\n    uStack4932 = 0;\n    uStack4928 = 0;\n    uStack4924 = 0;\n    var_1334h = 2;\n    var_1330h = 2;\n    var_132ch = 1;\n    var_1324h = 0x45e21c;\n    var_131ch = fcn.0043bf0a;\n    uStack4892 = 0;\n    uStack4888 = 0;\n    uStack4884 = 0;\n    var_130ch = 1;\n    var_1308h = 4;\n    var_1304h = 0;\n    var_12fch = 0x45e210;\n    var_12f4h = fcn.00429f51;\n    uStack4852 = 0;\n    uStack4848 = 0;\n    uStack4844 = 0;\n    var_12e4h = 1;\n    var_12e0h = 2;\n    var_12dch = 1;\n    var_12d4h = 0x45e208;\n    var_12cch = 0x438d8d;\n    uStack4812 = 0;\n    uStack4808 = 0;\n    uStack4804 = 0;\n    var_12bch = 1;\n    var_12b8h = 4;\n    var_12b4h = 0;\n    var_12ach = 0x45e1f4;\n    var_12a4h = fcn.00438c34;\n    uStack4772 = 0;\n    uStack4768 = 0;\n    uStack4764 = 0;\n    var_1294h = 0;\n    var_1290h = 4;\n    var_128ch = 0;\n    var_1284h = 0x45e1e4;\n    var_127ch = 0x438de5;\n    uStack4732 = 0;\n    uStack4728 = 0;\n    uStack4724 = 0;\n    var_126ch = 1;\n    var_1268h = 3;\n    var_1264h = 0;\n    var_125ch = 0x45e1d8;\n    var_1254h = 0x42e8d5;\n    uStack4692 = 0;\n    uStack4688 = 0;\n    uStack4684 = 0;\n    var_1244h = 1;\n    var_1240h = 2;\n    var_123ch = 1;\n    var_1234h = 0x45e1c4;\n    var_122ch = 0x42e93c;\n    uStack4652 = 0;\n    uStack4648 = 0;\n    uStack4644 = 0;\n    var_121ch = 1;\n    var_1218h = 3;\n    var_1214h = 1;\n    var_120ch = 0x45e1ac;\n    var_1204h = 0x42e9a7;\n    uStack4612 = 0;\n    uStack4608 = 0;\n    uStack4604 = 0;\n    var_11f4h = 1;\n    var_11f0h = 2;\n    var_11ech = 1;\n    var_11e4h = 0x45e190;\n    var_11dch = 0x4393bc;\n    uStack4572 = 0;\n    uStack4568 = 0;\n    uStack4564 = 0;\n    var_11cch = 1;\n    var_11c8h = 5;\n    var_11c4h = 0;\n    var_11bch = 0x45e16c;\n    var_11b4h = 0x4393d3;\n    uStack4532 = 0;\n    uStack4528 = 0;\n    uStack4524 = 0;\n    var_11a4h = 1;\n    var_11a0h = 5;\n    var_119ch = 0;\n    var_1194h = 0x45e158;\n    var_118ch = 0x439617;\n    uStack4492 = 0;\n    uStack4488 = 0;\n    uStack4484 = 0;\n    var_117ch = 1;\n    var_1178h = 1;\n    var_1174h = 0;\n    var_116ch = 0x45e150;\n    var_1164h = 0x429e54;\n    uStack4452 = 0;\n    uStack4448 = 0;\n    uStack4444 = 0;\n    var_1154h = 1;\n    var_1150h = 1;\n    var_114ch = 1;\n    var_1144h = 0x45e144;\n    var_113ch = 0x42d713;\n    uStack4412 = 0;\n    uStack4408 = 0;\n    uStack4404 = 0;\n    var_112ch = 1;\n    var_1128h = 1;\n    var_1124h = 1;\n    var_111ch = 0x45e130;\n    var_1114h = 0x42e9f2;\n    uStack4372 = 0;\n    uStack4368 = 0;\n    uStack4364 = 0;\n    var_1104h = 1;\n    var_1100h = 2;\n    var_10fch = 1;\n    var_10f4h = 0x45e108;\n    var_10ech = 0x42d50b;\n    uStack4332 = 0;\n    uStack4328 = 0;\n    uStack4324 = 0;\n    var_10dch = 1;\n    var_10d8h = 1;\n    var_10d4h = 1;\n    var_10cch = 0x45e0ec;\n    var_10c4h = fcn.0042c416;\n    uStack4292 = 0;\n    uStack4288 = 0;\n    uStack4284 = 0;\n    var_10b4h = 2;\n    var_10b0h = 7;\n    var_10ach = 1;\n    var_10a4h = 0x45e0d8;\n    var_109ch = fcn.0042c42f;\n    uStack4252 = 0;\n    uStack4248 = 0;\n    uStack4244 = 0;\n    var_108ch = 0;\n    var_1088h = 0;\n    var_1084h = 1;\n    var_107ch = 0x45e0bc;\n    var_1074h = fcn.0042c3ec;\n    uStack4212 = 0;\n    uStack4208 = 0;\n    uStack4204 = 0;\n    var_1064h = 2;\n    var_1060h = 10;\n    var_105ch = 1;\n    var_1054h = 0x45e0b0;\n    var_104ch = 0x429f19;\n    uStack4172 = 0;\n    uStack4168 = 0;\n    uStack4164 = 0;\n    var_103ch = 1;\n    var_1038h = 1;\n    var_1034h = 1;\n    var_102ch = 0x45e0a0;\n    var_1024h = 0x429b21;\n    uStack4132 = 0;\n    uStack4128 = 0;\n    uStack4124 = 0;\n    var_1014h = 1;\n    var_1010h = 1;\n    var_100ch = 1;\n    var_1004h = 0x45e07c;\n    var_ffch = fcn.004410bf;\n    uStack4092 = 0;\n    uStack4088 = 0;\n    uStack4084 = 0;\n    var_fech = 1;\n    var_fe8h = 3;\n    var_fe4h = 1;\n    var_fdch = 0x45e064;\n    var_fd4h = 0x43ca72;\n    uStack4052 = 0;\n    uStack4048 = 0;\n    uStack4044 = 0;\n    var_fc4h = 1;\n    var_fc0h = 3;\n    var_fbch = 0;\n    var_fb4h = 0x45e04c;\n    var_fach = fcn.0043cd1a;\n    uStack4012 = 0;\n    uStack4008 = 0;\n    uStack4004 = 0;\n    var_f9ch = 1;\n    var_f98h = 2;\n    var_f94h = 0;\n    var_f8ch = 0x45e034;\n    var_f84h = 0x43ca5d;\n    uStack3972 = 0;\n    uStack3968 = 0;\n    uStack3964 = 0;\n    var_f74h = 1;\n    var_f70h = 3;\n    var_f6ch = 0;\n    var_f64h = 0x45e024;\n    var_f5ch = 0x4296ce;\n    uStack3932 = 0;\n    uStack3928 = 0;\n    uStack3924 = 0;\n    var_f4ch = 1;\n    var_f48h = 1;\n    var_f44h = 1;\n    var_f3ch = 0x45e00c;\n    var_f34h = 0x43d822;\n    uStack3892 = 0;\n    uStack3888 = 0;\n    uStack3884 = 0;\n    var_f24h = 1;\n    var_f20h = 1;\n    var_f1ch = 1;\n    var_f14h = 0x45dff0;\n    var_f0ch = 0x43d5cf;\n    uStack3852 = 0;\n    uStack3848 = 0;\n    uStack3844 = 0;\n    var_efch = 2;\n    var_ef8h = 3;\n    var_ef4h = 1;\n    var_eech = 0x45dfd4;\n    var_ee4h = fcn.0043e205;\n    uStack3812 = 0;\n    uStack3808 = 0;\n    uStack3804 = 0;\n    var_ed4h = 1;\n    var_ed0h = 0x21;\n    var_ecch = 1;\n    var_ec4h = 0x45dfbc;\n    var_ebch = fcn.0043d65b;\n    uStack3772 = 0;\n    uStack3768 = 0;\n    uStack3764 = 0;\n    var_each = 2;\n    var_ea8h = 4;\n    var_ea4h = 1;\n    var_e9ch = 0x45dfa0;\n    var_e94h = 0x43e4e6;\n    uStack3732 = 0;\n    uStack3728 = 0;\n    uStack3724 = 0;\n    var_e84h = 1;\n    var_e80h = 1;\n    var_e7ch = 1;\n    var_e74h = 0x45df84;\n    var_e6ch = 0x43e493;\n    uStack3692 = 0;\n    uStack3688 = 0;\n    uStack3684 = 0;\n    var_e5ch = 1;\n    var_e58h = 1;\n    var_e54h = 1;\n    var_e4ch = 0x45df68;\n    var_e44h = 0x43e6d8;\n    uStack3652 = 0;\n    uStack3648 = 0;\n    uStack3644 = 0;\n    var_e34h = 1;\n    var_e30h = 1;\n    var_e2ch = 1;\n    var_e24h = 0x45df4c;\n    var_e1ch = 0x43e539;\n    uStack3612 = 0;\n    uStack3608 = 0;\n    uStack3604 = 0;\n    var_e0ch = 1;\n    var_e08h = 1;\n    var_e04h = 1;\n    var_dfch = 0x45df30;\n    var_df4h = fcn.0043e05d;\n    uStack3572 = 0;\n    uStack3568 = 0;\n    uStack3564 = 0;\n    var_de4h = 1;\n    var_de0h = 1;\n    var_ddch = 1;\n    var_dd4h = 0x45df18;\n    var_dcch = fcn.0043e151;\n    uStack3532 = 0;\n    uStack3528 = 0;\n    uStack3524 = 0;\n    var_dbch = 1;\n    var_db8h = 1;\n    var_db4h = 1;\n    var_dach = 0x45defc;\n    var_da4h = 0x43e5df;\n    uStack3492 = 0;\n    uStack3488 = 0;\n    uStack3484 = 0;\n    var_d94h = 1;\n    var_d90h = 1;\n    var_d8ch = 1;\n    var_d84h = 0x45dee0;\n    var_d7ch = 0x43e685;\n    uStack3452 = 0;\n    uStack3448 = 0;\n    uStack3444 = 0;\n    var_d6ch = 1;\n    var_d68h = 1;\n    var_d64h = 1;\n    var_d5ch = 0x45dec4;\n    var_d54h = 0x43e632;\n    uStack3412 = 0;\n    uStack3408 = 0;\n    uStack3404 = 0;\n    var_d44h = 1;\n    var_d40h = 1;\n    var_d3ch = 1;\n    var_d34h = 0x45dea4;\n    var_d2ch = 0x43e58c;\n    uStack3372 = 0;\n    uStack3368 = 0;\n    uStack3364 = 0;\n    var_d1ch = 1;\n    var_d18h = 1;\n    var_d14h = 1;\n    var_d0ch = 0x45de8c;\n    var_d04h = fcn.0043cf4f;\n    uStack3332 = 0;\n    uStack3328 = 0;\n    uStack3324 = 0;\n    var_cf4h = 2;\n    var_cf0h = 2;\n    var_cech = 1;\n    var_ce4h = 0x45de78;\n    var_cdch = 0x43cee4;\n    uStack3292 = 0;\n    uStack3288 = 0;\n    uStack3284 = 0;\n    var_ccch = 1;\n    var_cc8h = 1;\n    var_cc4h = 1;\n    var_cbch = 0x45de60;\n    var_cb4h = fcn.0043d739;\n    uStack3252 = 0;\n    uStack3248 = 0;\n    uStack3244 = 0;\n    var_ca4h = 1;\n    var_ca0h = 1;\n    var_c9ch = 1;\n    var_c94h = 0x45de4c;\n    var_c8ch = fcn.0043d06d;\n    uStack3212 = 0;\n    uStack3208 = 0;\n    uStack3204 = 0;\n    var_c7ch = 2;\n    var_c78h = 3;\n    var_c74h = 1;\n    var_c6ch = 0x45de30;\n    var_c64h = 0x43e72b;\n    uStack3172 = 0;\n    uStack3168 = 0;\n    uStack3164 = 0;\n    var_c54h = 2;\n    var_c50h = 4;\n    var_c4ch = 1;\n    var_c44h = 0x45de08;\n    var_c3ch = fcn.0043eba5;\n    uStack3132 = 0;\n    uStack3128 = 0;\n    uStack3124 = 0;\n    var_c2ch = 3;\n    var_c28h = 4;\n    var_c24h = 1;\n    var_c1ch = 0x45ddec;\n    var_c14h = fcn.0043d887;\n    uStack3092 = 0;\n    uStack3088 = 0;\n    uStack3084 = 0;\n    var_c04h = 3;\n    var_c00h = 5;\n    var_bfch = 1;\n    var_bf4h = 0x45ddd4;\n    var_bech = fcn.0043cfdb;\n    uStack3052 = 0;\n    uStack3048 = 0;\n    uStack3044 = 0;\n    var_bdch = 2;\n    var_bd8h = 2;\n    var_bd4h = 1;\n    var_bcch = 0x45ddbc;\n    var_bc4h = fcn.0043dac2;\n    uStack3012 = 0;\n    uStack3008 = 0;\n    uStack3004 = 0;\n    var_bb4h = 2;\n    var_bb0h = 3;\n    var_bach = 1;\n    var_ba4h = 0x45dda0;\n    var_b9ch = 0x43d7e1;\n    uStack2972 = 0;\n    uStack2968 = 0;\n    uStack2964 = 0;\n    var_b8ch = 1;\n    var_b88h = 1;\n    var_b84h = 1;\n    var_b7ch = 0x45dd84;\n    var_b74h = fcn.0043de97;\n    uStack2932 = 0;\n    uStack2928 = 0;\n    uStack2924 = 0;\n    var_b64h = 2;\n    var_b60h = 2;\n    var_b5ch = 1;\n    var_b54h = 0x45dd64;\n    var_b4ch = fcn.0043d36f;\n    uStack2892 = 0;\n    uStack2888 = 0;\n    uStack2884 = 0;\n    var_b3ch = 1;\n    var_b38h = 2;\n    var_b34h = 1;\n    var_b2ch = 0x45dd44;\n    var_b24h = fcn.0043d4a9;\n    uStack2852 = 0;\n    uStack2848 = 0;\n    uStack2844 = 0;\n    var_b14h = 2;\n    var_b10h = 2;\n    var_b0ch = 1;\n    var_b04h = 0x45dd24;\n    var_afch = fcn.0043d53d;\n    uStack2812 = 0;\n    uStack2808 = 0;\n    uStack2804 = 0;\n    var_aech = 2;\n    var_ae8h = 2;\n    var_ae4h = 1;\n    var_adch = 0x45dd0c;\n    var_ad4h = fcn.0043d78d;\n    uStack2772 = 0;\n    uStack2768 = 0;\n    uStack2764 = 0;\n    var_ac4h = 1;\n    var_ac0h = 1;\n    var_abch = 1;\n    var_ab4h = 0x45dd04;\n    var_aach = 0x429de4;\n    uStack2732 = 0;\n    uStack2728 = 0;\n    uStack2724 = 0;\n    var_a9ch = 1;\n    var_a98h = 1;\n    var_a94h = 1;\n    var_a8ch = 0x45dcf0;\n    var_a84h = fcn.0042f801;\n    uStack2692 = 0;\n    uStack2688 = 0;\n    uStack2684 = 0;\n    var_a74h = 1;\n    var_a70h = 1;\n    var_a6ch = 0;\n    var_a64h = 0x45dcd0;\n    var_a5ch = 0x42f8bb;\n    uStack2652 = 0;\n    uStack2648 = 0;\n    uStack2644 = 0;\n    var_a4ch = 1;\n    var_a48h = 1;\n    var_a44h = 0;\n    var_a3ch = 0x45dcb8;\n    var_a34h = fcn.0042f687;\n    uStack2612 = 0;\n    uStack2608 = 0;\n    uStack2604 = 0;\n    var_a24h = 2;\n    var_a20h = 2;\n    var_a1ch = 0;\n    var_a14h = 0x45dca4;\n    var_a0ch = fcn.0042f72d;\n    uStack2572 = 0;\n    uStack2568 = 0;\n    uStack2564 = 0;\n    var_9fch = 2;\n    var_9f8h = 3;\n    var_9f4h = 0;\n    var_9ech = 0x45dc8c;\n    var_9e4h = fcn.0042f3db;\n    uStack2532 = 0;\n    uStack2528 = 0;\n    uStack2524 = 0;\n    var_9d4h = 1;\n    var_9d0h = 1;\n    var_9cch = 0;\n    var_9c4h = 0x45dc7c;\n    var_9bch = fcn.0042f478;\n    uStack2492 = 0;\n    uStack2488 = 0;\n    uStack2484 = 0;\n    var_9ach = 2;\n    var_9a8h = 3;\n    var_9a4h = 0;\n    var_99ch = 0x45dc6c;\n    var_994h = fcn.0042f5fc;\n    uStack2452 = 0;\n    uStack2448 = 0;\n    uStack2444 = 0;\n    var_984h = 2;\n    var_980h = 2;\n    var_97ch = 0;\n    var_974h = 0x45dc54;\n    var_96ch = 0x42f949;\n    uStack2412 = 0;\n    uStack2408 = 0;\n    uStack2404 = 0;\n    var_95ch = 0;\n    var_958h = 0;\n    var_954h = 0;\n    var_94ch = 0x45dc3c;\n    var_944h = fcn.0042f90a;\n    uStack2372 = 0;\n    uStack2368 = 0;\n    uStack2364 = 0;\n    var_934h = 0;\n    var_930h = 0;\n    var_92ch = 0;\n    var_924h = 0x45dc28;\n    var_91ch = fcn.0042d5a2;\n    uStack2332 = 0;\n    uStack2328 = 0;\n    uStack2324 = 0;\n    var_90ch = 1;\n    var_908h = 1;\n    var_904h = 1;\n    var_8fch = 0x45dc14;\n    var_8f4h = fcn.0042d570;\n    uStack2292 = 0;\n    uStack2288 = 0;\n    uStack2284 = 0;\n    var_8e4h = 0;\n    var_8e0h = 0;\n    var_8dch = 1;\n    var_8d4h = 0x45dc04;\n    var_8cch = 0x441513;\n    uStack2252 = 0;\n    uStack2248 = 0;\n    uStack2244 = 0;\n    var_8bch = 1;\n    var_8b8h = 6;\n    var_8b4h = 1;\n    var_8ach = 0x45dbe4;\n    var_8a4h = 0x43edcb;\n    uStack2212 = 0;\n    uStack2208 = 0;\n    uStack2204 = 0;\n    var_894h = 1;\n    var_890h = 4;\n    var_88ch = 0;\n    var_884h = 0x45dbc4;\n    var_87ch = 0x43edde;\n    uStack2172 = 0;\n    uStack2168 = 0;\n    uStack2164 = 0;\n    var_86ch = 1;\n    var_868h = 4;\n    var_864h = 0;\n    var_85ch = 0x45dbac;\n    var_854h = fcn.0043ee26;\n    uStack2132 = 0;\n    uStack2128 = 0;\n    uStack2124 = 0;\n    var_844h = 0;\n    var_840h = 1;\n    var_83ch = 0;\n    var_834h = 0x45db8c;\n    var_82ch = 0x43edf1;\n    uStack2092 = 0;\n    uStack2088 = 0;\n    uStack2084 = 0;\n    var_81ch = 1;\n    var_818h = 1;\n    var_814h = 0;\n    var_80ch = 0x45db68;\n    var_804h = fcn.0043ee93;\n    uStack2052 = 0;\n    uStack2048 = 0;\n    uStack2044 = 0;\n    var_7f4h = 1;\n    var_7f0h = 1;\n    var_7ech = 0;\n    var_7e4h = 0x45db44;\n    var_7dch = fcn.0043eedf;\n    uStack2012 = 0;\n    uStack2008 = 0;\n    uStack2004 = 0;\n    var_7cch = 1;\n    var_7c8h = 1;\n    var_7c4h = 0;\n    var_7bch = 0x45db24;\n    var_7b4h = fcn.0043ef2e;\n    uStack1972 = 0;\n    uStack1968 = 0;\n    uStack1964 = 0;\n    var_7a4h = 1;\n    var_7a0h = 1;\n    var_79ch = 0;\n    var_794h = 0x45dafc;\n    var_78ch = fcn.0043ef9c;\n    uStack1932 = 0;\n    uStack1928 = 0;\n    uStack1924 = 0;\n    var_77ch = 2;\n    var_778h = 2;\n    var_774h = 0;\n    var_76ch = 0x45dad8;\n    var_764h = 0x43f057;\n    uStack1892 = 0;\n    uStack1888 = 0;\n    uStack1884 = 0;\n    var_754h = 2;\n    var_750h = 2;\n    var_74ch = 0;\n    var_744h = 0x45dab8;\n    var_73ch = 0x43f0a9;\n    uStack1852 = 0;\n    uStack1848 = 0;\n    uStack1844 = 0;\n    var_72ch = 2;\n    var_728h = 2;\n    var_724h = 0;\n    var_71ch = 0x45da9c;\n    var_714h = 0x43f0fa;\n    uStack1812 = 0;\n    uStack1808 = 0;\n    uStack1804 = 0;\n    var_704h = 0;\n    var_700h = 1;\n    var_6fch = 0;\n    var_6f4h = 0x45da84;\n    var_6ech = 0x43f128;\n    uStack1772 = 0;\n    uStack1768 = 0;\n    uStack1764 = 0;\n    var_6dch = 0;\n    var_6d8h = 2;\n    var_6d4h = 0;\n    var_6cch = 0x45da64;\n    var_6c4h = fcn.0043f295;\n    uStack1732 = 0;\n    uStack1728 = 0;\n    uStack1724 = 0;\n    var_6b4h = 2;\n    var_6b0h = 2;\n    var_6ach = 0;\n    var_6a4h = 0x45da40;\n    var_69ch = 0x43f196;\n    uStack1692 = 0;\n    uStack1688 = 0;\n    uStack1684 = 0;\n    var_68ch = 0;\n    var_688h = 2;\n    var_684h = 0;\n    var_67ch = 0x45da24;\n    var_674h = 0x43f204;\n    uStack1652 = 0;\n    uStack1648 = 0;\n    uStack1644 = 0;\n    var_664h = 0;\n    var_660h = 1;\n    var_65ch = 0;\n    var_654h = 0x45da04;\n    var_64ch = 0x43f22a;\n    uStack1612 = 0;\n    uStack1608 = 0;\n    uStack1604 = 0;\n    var_63ch = 0;\n    var_638h = 1;\n    var_634h = 0;\n    var_62ch = 0x45d9f4;\n    var_624h = fcn.0042d610;\n    uStack1572 = 0;\n    uStack1568 = 0;\n    uStack1564 = 0;\n    var_614h = 3;\n    var_610h = 4;\n    var_60ch = 0;\n    var_604h = 0x45d9e4;\n    var_5fch = 0x42ceaa;\n    uStack1532 = 0;\n    uStack1528 = 0;\n    uStack1524 = 0;\n    var_5ech = 1;\n    var_5e8h = 2;\n    var_5e4h = 1;\n    var_5dch = 0x45d9d4;\n    var_5d4h = fcn.0042fd5d;\n    uStack1492 = 0;\n    uStack1488 = 0;\n    uStack1484 = 0;\n    var_5c4h = 2;\n    var_5c0h = 2;\n    var_5bch = 0;\n    var_5b4h = 0x45d9b4;\n    var_5ach = fcn.0042ff96;\n    uStack1452 = 0;\n    uStack1448 = 0;\n    uStack1444 = 0;\n    var_59ch = 1;\n    var_598h = 1;\n    var_594h = 0;\n    var_58ch = 0x45d9a4;\n    var_584h = 0x42febf;\n    uStack1412 = 0;\n    uStack1408 = 0;\n    uStack1404 = 0;\n    var_574h = 2;\n    var_570h = 2;\n    var_56ch = 0;\n    var_564h = 0x45d994;\n    var_55ch = fcn.0042fb28;\n    uStack1372 = 0;\n    uStack1368 = 0;\n    uStack1364 = 0;\n    var_54ch = 2;\n    var_548h = 3;\n    var_544h = 0;\n    var_53ch = 0x45d984;\n    var_534h = fcn.0042f9dd;\n    uStack1332 = 0;\n    uStack1328 = 0;\n    uStack1324 = 0;\n    var_524h = 2;\n    var_520h = 2;\n    var_51ch = 0;\n    var_514h = 0x45d96c;\n    var_50ch = 0x42f949;\n    uStack1292 = 0;\n    uStack1288 = 0;\n    uStack1284 = 0;\n    var_4fch = 0;\n    var_4f8h = 0;\n    var_4f4h = 0;\n    var_4ech = 0x45d954;\n    var_4e4h = fcn.0042f90a;\n    uStack1252 = 0;\n    uStack1248 = 0;\n    uStack1244 = 0;\n    var_4d4h = 0;\n    var_4d0h = 0;\n    var_4cch = 0;\n    var_4c4h = 0x45d930;\n    var_4bch = fcn.0042aa34;\n    uStack1212 = 0;\n    uStack1208 = 0;\n    uStack1204 = 0;\n    var_4ach = 2;\n    var_4a8h = 2;\n    var_4a4h = 0;\n    var_49ch = 0x45d920;\n    var_494h = 0x42934b;\n    uStack1172 = 0;\n    uStack1168 = 0;\n    uStack1164 = 0;\n    var_484h = 1;\n    var_480h = 1;\n    var_47ch = 1;\n    var_474h = 0x45d908;\n    var_46ch = 0x43f73b;\n    uStack1132 = 0;\n    uStack1128 = 0;\n    uStack1124 = 0;\n    var_45ch = 1;\n    var_458h = 2;\n    var_454h = 1;\n    var_44ch = 0x45d8f4;\n    var_444h = 0x43f68a;\n    uStack1092 = 0;\n    uStack1088 = 0;\n    uStack1084 = 0;\n    var_434h = 1;\n    var_430h = 2;\n    var_42ch = 1;\n    var_424h = 0x45d8e0;\n    var_41ch = 0x43f989;\n    uStack1052 = 0;\n    uStack1048 = 0;\n    uStack1044 = 0;\n    var_40ch = 1;\n    var_408h = 2;\n    var_404h = 1;\n    var_3fch = 0x45d8cc;\n    var_3f4h = 0x43f6ff;\n    uStack1012 = 0;\n    uStack1008 = 0;\n    uStack1004 = 0;\n    var_3e4h = 1;\n    var_3e0h = 2;\n    var_3dch = 1;\n    var_3d4h = 0x45d8b8;\n    var_3cch = fcn.00441c7b;\n    uStack972 = 0;\n    uStack968 = 0;\n    uStack964 = 0;\n    var_3bch = 1;\n    var_3b8h = 4;\n    var_3b4h = 1;\n    var_3ach = 0x45d898;\n    var_3a4h = fcn.004413ca;\n    uStack932 = 0;\n    uStack928 = 0;\n    uStack924 = 0;\n    var_394h = 0;\n    var_390h = 0;\n    var_38ch = 1;\n    var_384h = 0x45d878;\n    var_37ch = 0x44106a;\n    uStack892 = 0;\n    uStack888 = 0;\n    uStack884 = 0;\n    var_36ch = 1;\n    var_368h = 2;\n    var_364h = 1;\n    var_35ch = 0x45d854;\n    var_354h = fcn.00441203;\n    uStack852 = 0;\n    uStack848 = 0;\n    uStack844 = 0;\n    var_344h = 1;\n    var_340h = 2;\n    var_33ch = 1;\n    var_334h = 0x45d838;\n    var_32ch = 0x4412a5;\n    uStack812 = 0;\n    uStack808 = 0;\n    uStack804 = 0;\n    var_31ch = 1;\n    var_318h = 2;\n    var_314h = 1;\n    var_30ch = 0x45d824;\n    var_304h = fcn.0043fcfc;\n    uStack772 = 0;\n    uStack768 = 0;\n    uStack764 = 0;\n    var_2f4h = 1;\n    var_2f0h = 2;\n    var_2ech = 1;\n    var_2e4h = 0x45d808;\n    var_2dch = fcn.00441c04;\n    uStack732 = 0;\n    uStack728 = 0;\n    uStack724 = 0;\n    var_2cch = 1;\n    var_2c8h = 2;\n    var_2c4h = 1;\n    var_2bch = 0x45d7f0;\n    var_2b4h = 0x44147f;\n    uStack692 = 0;\n    uStack688 = 0;\n    uStack684 = 0;\n    var_2a4h = 1;\n    var_2a0h = 2;\n    var_29ch = 1;\n    var_294h = 0x45d7d8;\n    var_28ch = 0x43fb08;\n    uStack652 = 0;\n    uStack648 = 0;\n    uStack644 = 0;\n    var_27ch = 1;\n    var_278h = 2;\n    var_274h = 1;\n    var_26ch = 0x45d7c0;\n    var_264h = fcn.0043fa98;\n    uStack612 = 0;\n    uStack608 = 0;\n    uStack604 = 0;\n    var_254h = 1;\n    var_250h = 2;\n    var_24ch = 1;\n    var_244h = 0x45d7b0;\n    var_23ch = 0x43f9dd;\n    uStack572 = 0;\n    uStack568 = 0;\n    uStack564 = 0;\n    var_22ch = 1;\n    var_228h = 2;\n    var_224h = 0;\n    var_21ch = 0x45d7a0;\n    var_214h = fcn.00441a7c;\n    uStack532 = 0;\n    uStack528 = 0;\n    uStack524 = 0;\n    var_204h = 0;\n    var_200h = 2;\n    var_1fch = 1;\n    var_1f4h = 0x45d77c;\n    var_1ech = fcn.00440efd;\n    uStack492 = 0;\n    uStack488 = 0;\n    uStack484 = 0;\n    var_1dch = 3;\n    var_1d8h = 9;\n    var_1d4h = 1;\n    var_1cch = 0x45d75c;\n    var_1c4h = 0x441913;\n    uStack452 = 0;\n    uStack448 = 0;\n    uStack444 = 0;\n    var_1b4h = 0;\n    var_1b0h = 0;\n    var_1ach = 1;\n    var_1a4h = 0x45d734;\n    var_19ch = 0x441949;\n    uStack412 = 0;\n    uStack408 = 0;\n    uStack404 = 0;\n    var_18ch = 0;\n    var_188h = 0;\n    var_184h = 1;\n    var_17ch = 0x45d724;\n    var_174h = fcn.0043f81c;\n    uStack372 = 0;\n    uStack368 = 0;\n    uStack364 = 0;\n    var_164h = 4;\n    var_160h = 6;\n    var_15ch = 1;\n    var_154h = 0x45d70c;\n    var_14ch = 0x43fc86;\n    uStack332 = 0;\n    uStack328 = 0;\n    uStack324 = 0;\n    var_13ch = 3;\n    var_138h = 3;\n    var_134h = 1;\n    var_12ch = 0x45d6f4;\n    var_124h = 0x43f791;\n    uStack292 = 0;\n    uStack288 = 0;\n    uStack284 = 0;\n    var_114h = 3;\n    var_110h = 3;\n    var_10ch = 1;\n    var_104h = 0x45d6dc;\n    var_fch = 0x43fa34;\n    uStack252 = 0;\n    uStack248 = 0;\n    uStack244 = 0;\n    var_ech = 3;\n    var_e8h = 3;\n    var_e4h = 1;\n    var_dch = 0x45d6c4;\n    var_d4h = fcn.0044197f;\n    uStack212 = 0;\n    uStack208 = 0;\n    uStack204 = 0;\n    var_c4h = 3;\n    var_c0h = 3;\n    var_bch = 1;\n    var_b4h = 0x45d6b4;\n    var_ach = 0x43f58a;\n    uStack172 = 0;\n    uStack168 = 0;\n    uStack164 = 0;\n    var_9ch = 1;\n    var_98h = 3;\n    var_94h = 1;\n    var_8ch = 0x45d698;\n    var_84h = 0x43f5ca;\n    uStack132 = 0;\n    uStack128 = 0;\n    uStack124 = 0;\n    var_74h = 1;\n    var_70h = 3;\n    var_6ch = 1;\n    var_64h = 0x45d67c;\n    var_5ch = 0x43f64a;\n    uStack92 = 0;\n    uStack88 = 0;\n    uStack84 = 0;\n    var_4ch = 1;\n    var_48h = 3;\n    var_44h = 1;\n    var_ch = 0;\n    var_8h = 0;\n    var_4h = 0;\n    var_3ch = 0x45d658;\n    var_10h = 0x43f60a;\n    var_34h = 0x43f60a;\n    uStack52 = 0;\n    uStack48 = 0;\n    uStack44 = 0;\n    var_24h = 1;\n    var_1ch = 0x39a8;\n    *(arg_8h + 0x6f0) = 0x171;\n    var_20h = 0x41fa4b;\n    uVar3 = fcn.00449614();\n    *(arg_8h + 0x6ec) = uVar3;\n    var_14h = 0;\n    if (0 < *(arg_8h + 0x6f0)) {\n        arg_8h = 0;\n        do {\n            var_1ch = *(&stack0xffffc640 + arg_8h);\n            var_20h = 0x41fa76;\n            uVar3 = fcn.004161b7();\n            var_14h = var_14h + 1;\n            *(arg_8h + *(iVar2 + 0x6ec)) = uVar3;\n            puVar1 = arg_8h + 8 + *(iVar2 + 0x6ec);\n            *puVar1 = *(&stack0xffffc648 + arg_8h);\n            puVar1[1] = *(&stack0xffffc64c + arg_8h);\n            puVar1[2] = *(&stack0xffffc650 + arg_8h);\n            puVar1[3] = *(&stack0xffffc654 + arg_8h);\n            *(arg_8h + 0x18 + *(iVar2 + 0x6ec)) = *(&stack0xffffc658 + arg_8h);\n            uVar3 = *(&stack0xffffc660 + arg_8h);\n            *(arg_8h + 0x1c + *(iVar2 + 0x6ec)) = *(&stack0xffffc65c + arg_8h);\n            *(arg_8h + 0x20 + *(iVar2 + 0x6ec)) = uVar3;\n            arg_8h = arg_8h + 0x28;\n        } while (var_14h < *(iVar2 + 0x6f0));\n    }\n    return iVar2;\n}\n",
        "token_count": 54812
    },
    "004321d4": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nuint fcn.004321d4(uint param_1, uint param_2, uint param_3)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint unaff_retaddr;\n    \n    if (in_EAX == 0) {\n        uVar1 = 1;\n    }\n    else {\n        fcn.00418c7e(0x45bfe0);\n        uVar1 = fcn.00431eb5(unaff_retaddr, 3, in_EAX, param_2, param_3);\n    }\n    return uVar1;\n}\n",
        "token_count": 129
    },
    "004327a9": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004327a9(uint arg_8h, uint arg_ch, uint *arg_10h, uint *arg_14h, uint *arg_18h, uint *arg_1ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint in_stack_ffffffec;\n    \n    fcn.00416d81();\n    iVar1 = fcn.00413cac(arg_ch, in_stack_ffffffec);\n    if (iVar1 == 0) {\n        uVar2 = 0;\n    }\n    else {\n        *arg_14h = *(iVar1 + 0x10);\n        *arg_18h = *(iVar1 + 0x14);\n        *arg_10h = *(iVar1 + 0xc);\n        uVar2 = *(iVar1 + 0x18);\n        *arg_1ch = uVar2;\n        uVar2 = CONCAT31(uVar2 >> 8, 1);\n    }\n    return uVar2;\n}\n",
        "token_count": 221
    },
    "00441fc3": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid fcn.00441fc3(void)\n\n{\n    uint *in_EAX;\n    \n    *in_EAX = 0;\n    in_EAX[1] = 0;\n    in_EAX[2] = 0;\n    in_EAX[3] = 0;\n    in_EAX[4] = 0;\n    in_EAX[5] = 0;\n    in_EAX[6] = 0;\n    in_EAX[7] = 0;\n    in_EAX[8] = 0;\n    *(in_EAX + 9) = 0;\n    *(in_EAX + 0x129) = 0;\n    in_EAX[0x93] = 0;\n    return;\n}\n",
        "token_count": 162
    },
    "0044942d": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.0044942d(uint *arg_8h, uint *arg_ch, uint *arg_10h, uint *arg_14h)\n\n{\n    ushort uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint *puVar4;\n    \n    iVar2 = fcn.004493fc(4);\n    if (iVar2 == 0x50435245) {\n        puVar4 = arg_ch;\n        for (iVar2 = 10; iVar2 != 0; iVar2 = iVar2 + -1) {\n            *puVar4 = *arg_8h;\n            arg_8h = arg_8h + 1;\n            puVar4 = puVar4 + 1;\n        }\n        uVar3 = fcn.004493fc(4);\n        arg_ch[1] = uVar3;\n        uVar3 = fcn.004493fc(4);\n        arg_ch[2] = uVar3;\n        uVar1 = fcn.004493fc(2);\n        *(arg_ch + 4) = uVar1;\n        uVar1 = fcn.004493fc(2);\n        *(arg_ch + 0x12) = uVar1;\n        uVar1 = fcn.004493fc(2);\n        *(arg_ch + 5) = uVar1;\n        uVar1 = fcn.004493fc(2);\n        *(arg_ch + 0x16) = uVar1;\n        uVar1 = fcn.004493fc(2);\n        *(arg_ch + 6) = uVar1;\n        uVar1 = fcn.004493fc(2);\n        *(arg_ch + 0x1a) = uVar1;\n        uVar1 = fcn.004493fc(2);\n        *(arg_ch + 7) = uVar1;\n        if (arg_10h != NULL) {\n            puVar4 = arg_14h;\n            for (iVar2 = 10; iVar2 != 0; iVar2 = iVar2 + -1) {\n                *puVar4 = *arg_10h;\n                arg_10h = arg_10h + 1;\n                puVar4 = puVar4 + 1;\n            }\n            uVar3 = fcn.004493fc(4);\n            *arg_14h = uVar3;\n            uVar3 = fcn.004493fc(4);\n            arg_14h[1] = uVar3;\n        }\n    }\n    else {\n        arg_ch = NULL;\n    }\n    return arg_ch;\n}\n",
        "token_count": 571
    },
    "00401ade": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00401ade(uint param_1)\n\n{\n    int32_t *in_EAX;\n    \n    if (in_EAX[6] <= *in_EAX) {\n        fcn.00416e83(param_1, 0x45bfe0);\n        return 0;\n    }\n    *in_EAX = *in_EAX + 1;\n    fcn.00421a8a();\n    fcn.00416e71();\n    return 1;\n}\n",
        "token_count": 108
    },
    "00402a26": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00402a26(void)\n\n{\n    int32_t *unaff_ESI;\n    \n    if (*unaff_ESI != 0) {\n        fcn.0044951c(*unaff_ESI);\n    }\n    fcn.0044951c(unaff_ESI[9]);\n    fcn.0044951c(unaff_ESI[6]);\n    fcn.0044951c(unaff_ESI[3]);\n    return;\n}\n",
        "token_count": 100
    },
    "00402fd0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00402fd0(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    int32_t unaff_EDI;\n    uint lpClassName;\n    \n    fcn.00416e83(arg_8h, 0x45bfe0);\n    fcn.004030b4(unaff_EDI, 1);\n    uVar1 = (*_sym.imp.USER32.dll_GetFocus)();\n    *(in_EAX + 0x3c) = uVar1;\n    fcn.004030b4(unaff_EDI, 0);\n    if ((*(in_EAX + 0x3c) != 0) && (iVar2 = (*_sym.imp.USER32.dll_GetParent)(*(in_EAX + 0x3c)),  iVar2 == unaff_EDI)) {\n        fcn.00402a4f(*(in_EAX + 0x3c));\n        *(in_EAX + 0x40) = 0;\n        *(in_EAX + 0x38) = unaff_EDI;\n        (*_sym.imp.USER32.dll_EnumChildWindows)();\n        if (*(in_EAX + 0x3c) != 0) {\n            (*_sym.imp.USER32.dll_GetClassNameW)(*(in_EAX + 0x3c), &lpClassName, 0xff);\n            fcn.00449872(&lpClassName, 0x45c07c, &lpClassName);\n            fcn.00416e83(arg_8h, &lpClassName);\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 362
    },
    "00403eaf": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.00403eaf(int32_t param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t **ppiVar2;\n    int32_t iVar3;\n    \n    iVar3 = 0;\n    iVar1 = 0;\n    ppiVar2 = param_1 + 0x54;\n    while( true ) {\n        if (*(param_1 + 0x18) <= iVar3) {\n            return -1;\n        }\n        if ((*ppiVar2 != NULL) && (iVar3 = iVar3 + 1,  **ppiVar2 == param_2)) break;\n        iVar1 = iVar1 + 1;\n        ppiVar2 = ppiVar2 + 1;\n        if (0x3ff < iVar1) {\n            return -1;\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 195
    },
    "00403f36": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.00403f36(void)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    int32_t unaff_EDI;\n    \n    iVar1 = *(unaff_EDI + 0x14);\n    if (iVar1 < 0x1002) {\n        iVar1 = fcn.00449614(0x80);\n        if (iVar1 == 0) {\n            puVar2 = NULL;\n        }\n        else {\n            puVar2 = fcn.00403ff6();\n        }\n        if (*(unaff_EDI + 0x14) == 0) {\n            *(unaff_EDI + 0x14) = 3;\n        }\n        else {\n            *(unaff_EDI + 0x14) = *(unaff_EDI + 0x14) + 1;\n        }\n        iVar4 = *(unaff_EDI + 0x14);\ncode_r0x00403fb0:\n        *(unaff_EDI + 0x50 + iVar4 * 4) = puVar2;\n        puVar2[0xe] = 0xffffffff;\n        puVar2[0xf] = 0xffffffff;\n        *(puVar2 + 0x19) = 0xffff;\n        *puVar2 = 0;\n        puVar2[1] = 0;\n        puVar2[2] = 0;\n        puVar2[9] = 0;\n        puVar2[10] = 0;\n        puVar2[0xb] = 0;\n        puVar2[0xc] = 0;\n        puVar2[0xd] = 0;\n        puVar2[0x10] = 0;\n        puVar2[0x11] = 0;\n        puVar2[0x12] = 0;\n        *(puVar2 + 0x73) = 0xff;\n        *(puVar2 + 0x1e) = 0;\n        puVar2[0x18] = 0;\n    }\n    else {\n        iVar4 = 3;\n        if (2 < iVar1) {\n            piVar3 = unaff_EDI + 0x5c;\n            do {\n                if (*piVar3 == 0) break;\n                iVar4 = iVar4 + 1;\n                piVar3 = piVar3 + 1;\n            } while (iVar4 <= *(unaff_EDI + 0x14));\n            if (iVar4 <= iVar1) {\n                iVar1 = fcn.00449614(0x80);\n                if (iVar1 == 0) {\n                    puVar2 = NULL;\n                }\n                else {\n                    puVar2 = fcn.00403ff6();\n                }\n                goto code_r0x00403fb0;\n            }\n        }\n        iVar4 = -1;\n    }\n    return iVar4;\n}\n",
        "token_count": 649
    },
    "0040652a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0040652a(void)\n\n{\n    int32_t *piVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t unaff_ESI;\n    int32_t unaff_EDI;\n    \n    iVar3 = 0;\n    piVar1 = unaff_ESI + 0x1054;\n    do {\n        if (*piVar1 == unaff_EDI) {\n            return *(unaff_ESI + 0x1058 + iVar3 * 8);\n        }\n        iVar3 = iVar3 + 1;\n        piVar1 = piVar1 + 2;\n    } while (iVar3 < 0x20);\n    if (0x1f < *(unaff_ESI + 0x1154)) {\n        *(unaff_ESI + 0x1154) = 0;\n    }\n    iVar3 = *(unaff_ESI + 0x1058 + *(unaff_ESI + 0x1154) * 8);\n    if (iVar3 != 0) {\n        (**0x459108)(iVar3);\n    }\n    *(unaff_ESI + 0x1054 + *(unaff_ESI + 0x1154) * 8) = unaff_EDI;\n    uVar2 = (**0x459104)();\n    *(unaff_ESI + 0x1058 + *(unaff_ESI + 0x1154) * 8) = uVar2;\n    uVar2 = *(unaff_ESI + 0x1058 + *(unaff_ESI + 0x1154) * 8);\n    *(unaff_ESI + 0x1154) = *(unaff_ESI + 0x1154) + 1;\n    return uVar2;\n}\n",
        "token_count": 392
    },
    "00406ab5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00406ab5(void)\n\n{\n    int32_t iVar1;\n    \n    fcn.00416d61();\n    fcn.00416d61();\n    iVar1 = 0xd;\n    do {\n        fcn.00416d61();\n        iVar1 = iVar1 + -1;\n    } while (iVar1 != 0);\n    return;\n}\n",
        "token_count": 82
    },
    "00406ae5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00406ae5(uint param_1, code *param_2)\n\n{\n    int32_t in_EAX;\n    \n    if (-1 < in_EAX + -1) {\n        do {\n            (*param_2)();\n            in_EAX = in_EAX + -1;\n        } while (in_EAX != 0);\n    }\n    return;\n}\n",
        "token_count": 81
    },
    "00406b83": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406b83(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t var_4h;\n    \n    piVar2 = arg_8h + 0x54;\n    var_4h = 0x400;\n    do {\n        if (*piVar2 != 0) {\n            fcn.0040c4de(0);\n            (*_sym.imp.USER32.dll_DestroyWindow)(**piVar2);\n            iVar1 = *piVar2;\n            if (iVar1 != 0) {\n                fcn.00406bda();\n                fcn.0044951c(iVar1);\n            }\n            *piVar2 = 0;\n        }\n        piVar2 = piVar2 + 1;\n        var_4h = var_4h + -1;\n    } while (var_4h != 0);\n    fcn.004042e6();\n    return;\n}\n",
        "token_count": 218
    },
    "00409e4b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00409e4b(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    cVar1 = fcn.00404081(&var_8h);\n    if (cVar1 != '\\0') {\n        fcn.00416e83(*(*(in_EAX + 0x54 + var_4h * 4) + 0x50 + var_8h * 4) + 0xc, arg_8h);\n    }\n    return cVar1 != '\\0';\n}\n",
        "token_count": 143
    },
    "0040bc83": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_14h\n\nuint __cdecl\nfcn.0040bc83(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, int32_t arg_20h\n            , int32_t arg_24h, uint32_t arg_28h, int32_t arg_2ch)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t *unaff_EBX;\n    ushort auStackY8228 [4054];\n    uint uStackY120;\n    int32_t iStackY116;\n    uint uStackY112;\n    uint32_t uStackY108;\n    uint *puStackY104;\n    int32_t iStackY100;\n    uint uStackY96;\n    uchar *puStackY92;\n    uchar *puStackY88;\n    uchar *puStackY84;\n    int32_t iStackY80;\n    int32_t iStackY76;\n    uint uStackY72;\n    uint uStackY68;\n    int32_t iStackY64;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    uchar *var_14h;\n    uint var_ch;\n    \n    fcn.0044c510();\n    arg_28h = 0xffffffff;\n    uVar2 = fcn.00408c5e();\n    if (arg_2ch == -1) {\n        arg_2ch = 0x220;\n    }\n    if (arg_20h == -1) {\n        arg_20h = 0x96;\n    }\n    if (arg_24h == -1) {\n        arg_24h = 0x96;\n    }\n    var_14h = NULL;\n    var_18h = arg_10h;\n    var_1ch = arg_24h;\n    var_20h = arg_20h;\n    iStackY64 = 0x40bd00;\n    iStackY76 = fcn.00409d87(arg_2ch, 0x45c22c, 0x45bfe0, uVar2, arg_18h, arg_1ch, arg_20h, arg_24h, arg_10h, 0, 0);\n    *unaff_EBX = iStackY76;\n    pcVar1 = _sym.imp.USER32.dll_SendMessageW;\n    if (iStackY76 == 0) {\n        uVar2 = 0;\n    }\n    else {\n        iStackY64 = arg_2ch;\n        uStackY68 = 0;\n        uStackY72 = 0x1036;\n        iStackY80 = 0x40bd1f;\n        (*_sym.imp.USER32.dll_SendMessageW)();\n        if (*(arg_ch + 0x4148) != 0) {\n            iStackY80 = 0x13;\n            puStackY84 = NULL;\n            puStackY88 = NULL;\n            puStackY92 = NULL;\n            uStackY96 = 0;\n            iStackY100 = 0;\n            puStackY104 = *unaff_EBX;\n            uStackY108 = 0x40bd39;\n            (*_sym.imp.USER32.dll_SetWindowPos)();\n        }\n        var_14h = &stack0xffffdfdc;\n        var_20h = 0xf;\n        var_1ch = 0;\n        while( true ) {\n            puStackY84 = &stack0xffffdfdc;\n            puStackY88 = 0x40bdd7;\n            iStackY80 = arg_8h + 0x14;\n            uVar2 = fcn.00408bd2();\n            if (uVar2 == '\\0') break;\n            puStackY88 = &stack0xffffdfdc;\n            puStackY92 = 0x40bd6a;\n            iVar3 = fcn.0044985c();\n            puStackY92 = &stack0xffffdfdc;\n            puStackY88 = 0x45c220;\n            uStackY96 = 0x40bd7f;\n            fcn.004495ce();\n            puStackY88 = &stack0xffffdfdc;\n            puStackY92 = NULL;\n            uStackY96 = 0x1057;\n            iStackY100 = *unaff_EBX;\n            puStackY104 = 0x40bd93;\n            var_18h = (*pcVar1)();\n            if (0x96 < var_18h) {\n                var_18h = 0x96;\n            }\n            *(&stack0xffffdfdc + iVar3 * 2) = 0;\n            arg_28h = arg_28h + 1;\n            puStackY104 = &fcn.0040bc83::var_20h;\n            uStackY112 = 0x1061;\n            iStackY116 = *unaff_EBX;\n            uStackY120 = 0x40bdc5;\n            uStackY108 = arg_28h;\n            (*pcVar1)();\n        }\n        *(unaff_EBX + 0x76) = 0xffff;\n        *(unaff_EBX + 0x1d) = arg_28h & 0xffff;\n        uVar2 = CONCAT31(uVar2 >> 8 & 0xffff00 | (arg_28h & 0xffff) >> 8, 1);\n    }\n    return uVar2;\n}\n",
        "token_count": 1284
    },
    "0040cf12": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040cf12(uint arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h, float noname_4, float arg_1ch)\n\n{\n    float fVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    float fStack8;\n    \n    if (((arg_1ch < *0x462068) << 8 | (arg_1ch == *0x462068) << 0xe) == 0) {\n        fStack8 = noname_4 / *0x462064;\n        noname_4 = noname_4 + arg_1ch;\n    }\n    else {\n        fStack8 = (noname_4 + arg_1ch) / *0x462064;\n    }\n    fStack8 = fStack8 * *0x462050;\n    fVar1 = (noname_4 / *0x462064) * *0x462050;\n    fcn.0040da38(fStack8);\n    iVar3 = fcn.00458664();\n    fcn.0040da1e(fStack8);\n    iVar4 = fcn.00458664();\n    pcVar2 = _sym.imp.GDI32.dll_LineTo;\n    (*_sym.imp.GDI32.dll_LineTo)(arg_8h, iVar3 + arg_ch, arg_10h - iVar4);\n    if (fStack8 < fVar1 != (fStack8 == fVar1)) {\n        do {\n            fcn.0040da38(fStack8);\n            iVar3 = fcn.00458664();\n            fcn.0040da1e(fStack8);\n            iVar4 = fcn.00458664();\n            (*pcVar2)(arg_8h, iVar3 + arg_ch, arg_10h - iVar4);\n            fStack8 = fStack8 + *0x462054;\n        } while (fStack8 < fVar1 != (fStack8 == fVar1));\n    }\n    return 1;\n}\n",
        "token_count": 460
    },
    "0040d024": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nuint __cdecl fcn.0040d024(uint hdc, int32_t arg_ch, int32_t nYEnd, float X)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint var_4h;\n    \n    iVar1 = fcn.00458664(0, (X - arg_ch) / *0x46205c, (in_EAX - nYEnd) / *0x46205c);\n    (*_sym.imp.GDI32.dll_MoveToEx)(hdc, X, iVar1 + nYEnd);\n    X = 0.0;\n    do {\n        fcn.0040da38(X);\n        iVar1 = fcn.00458664();\n        fcn.0040da1e(X);\n        iVar2 = fcn.00458664();\n        (*_sym.imp.GDI32.dll_LineTo)(hdc, iVar1 + arg_ch, iVar2 + nYEnd);\n        X = X + *0x462054;\n    } while (X < *0x462050 != (X == *0x462050));\n    return 1;\n}\n",
        "token_count": 266
    },
    "0040d33b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040d33b(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    char cVar4;\n    int32_t in_EAX;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    cVar4 = fcn.00404081(&var_8h);\n    if (cVar4 != '\\0') {\n        piVar2 = in_EAX + 0x54 + var_4h * 4;\n        iVar1 = var_8h * 4 + 0x50;\n        iVar3 = *(iVar1 + *piVar2);\n        if (*(iVar3 + 0x70) == '\\x13') {\n            fcn.00416e83(iVar3 + 0x18, arg_8h);\n            *(*(*piVar2 + iVar1) + 0x78) = arg_ch;\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 233
    },
    "0040db44": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040db44(int32_t arg_8h, uint *arg_ch, uint *arg_10h, uint arg_14h, uint arg_18h, uint *arg_1ch)\n\n{\n    uint uVar1;\n    code *pcVar2;\n    \n    *arg_10h = 0;\n    *arg_ch = *(**(arg_8h + 4) + 0xc);\n    pcVar2 = _sym.imp.USER32.dll_CopyRect;\n    (*_sym.imp.USER32.dll_CopyRect)(arg_14h, *(arg_8h + 4) + 0x10);\n    (*pcVar2)(arg_18h, *(arg_8h + 4) + 0x10);\n    arg_1ch[1] = 0;\n    *arg_1ch = 0x14;\n    uVar1 = *(**(arg_8h + 4) + 0x14);\n    arg_1ch[3] = 0;\n    arg_1ch[4] = 0;\n    arg_1ch[2] = uVar1;\n    return 0;\n}\n",
        "token_count": 254
    },
    "0040ddb3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "inject DLL reflectively/5c249d14806d4a4ea88afb4f94553771"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040ddb3(int32_t *arg_8h, int32_t arg_ch)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t **ppiVar3;\n    \n    piVar1 = arg_8h;\n    if ((arg_8h[1] != NULL) && (iVar2 = *arg_8h[1],  iVar2 != 0)) {\n        *(iVar2 + 0x18) = 0;\n    }\n    if (arg_ch == 0) {\n        iVar2 = (****(arg_8h[1] + 0xc))(*(arg_8h[1] + 0xc), 0x45a8a0, &arg_8h);\n        if (iVar2 < 0) {\n            return 0x80004005;\n        }\n        (**(*arg_8h + 0xc))(arg_8h, 0, 0, 0, piVar1 + 2);\n        (**(*arg_8h + 8))(arg_8h);\n    }\n    else {\n        arg_8h[2] = arg_ch;\n    }\n    ppiVar3 = piVar1 + 2;\n    (**(**ppiVar3 + 4))(*ppiVar3);\n    iVar2 = (**(**ppiVar3 + 0xc))(*ppiVar3, *(piVar1[1] + 0x30));\n    if (iVar2 < 0) {\n        return 0x80004005;\n    }\n    (**(**ppiVar3 + 0x28))(*ppiVar3, 1);\n    (**(**ppiVar3 + 0x18))(*ppiVar3, piVar1[1] + 0x10);\n    (**(**ppiVar3 + 0x24))(*ppiVar3, 1);\n    *(*piVar1[1] + 0x18) = 1;\n    return 0;\n}\n",
        "token_count": 433
    },
    "0040ef25": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * fcn.0040ef25(uint *param_1)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    \n    iVar2 = 0x40;\n    puVar1 = param_1;\n    do {\n        *puVar1 = 0;\n        puVar1 = puVar1 + 3;\n        iVar2 = iVar2 + -1;\n    } while (iVar2 != 0);\n    return param_1;\n}\n",
        "token_count": 101
    },
    "0040ef3c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040ef3c(void)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    \n    iVar1 = 0x40;\n    do {\n        if (*in_EAX != 0) {\n            (*_sym.imp.KERNEL32.DLL_FreeLibrary)(*in_EAX);\n        }\n        in_EAX = in_EAX + 3;\n        iVar1 = iVar1 + -1;\n    } while (iVar1 != 0);\n    return;\n}\n",
        "token_count": 108
    },
    "0040f269": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0040f269(uint32_t param_1)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0xc) <= param_1) {\n        return in_EAX + 0x18;\n    }\n    return *(*(in_EAX + 8) + param_1 * 4);\n}\n",
        "token_count": 80
    },
    "0040f2c4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040f2c4(uint *arg_8h)\n\n{\n    int32_t *arg_14h;\n    int32_t *in_EAX;\n    uint arg_8h_00;\n    int32_t iVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.0040f290();\n    arg_8h_00 = fcn.00416a25(*arg_8h);\n    iVar1 = fcn.00446d26(arg_8h_00, 0, &var_8h, &var_4h, 0);\n    *in_EAX = iVar1;\n    fcn.0044951c(arg_8h_00);\n    if (*in_EAX != 0) {\n        arg_14h = in_EAX + 2;\n        fcn.00446d44(*in_EAX, 0, 2, arg_14h);\n        iVar1 = *arg_14h;\n        *arg_14h = (iVar1 + 1) * 3;\n        iVar1 = fcn.00449614((iVar1 + 1) * 0xc);\n        in_EAX[1] = iVar1;\n        var_4h = 0;\n    }\n    return var_4h;\n}\n",
        "token_count": 289
    },
    "0040f336": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0040f336(void)\n\n{\n    uint *in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    int32_t *unaff_ESI;\n    uint var_4h;\n    \n    if (*unaff_ESI != 0) {\n        uVar1 = fcn.00416a25(*in_EAX);\n        iVar2 = fcn.00448bba(*unaff_ESI, 0, uVar1, in_EAX[1], 0, unaff_ESI[4], unaff_ESI[1], unaff_ESI[2]);\n        unaff_ESI[3] = iVar2;\n        fcn.0044951c(uVar1);\n        if (0 < unaff_ESI[3]) {\n            unaff_ESI[3] = 0;\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 197
    },
    "0040fcf9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040fcf9(int32_t param_1)\n\n{\n    int32_t in_EAX;\n    uint *puVar1;\n    \n    if ((param_1 < *(in_EAX + 0x1c)) && (-1 < param_1)) {\n        puVar1 = fcn.00421a8a();\n        return *puVar1;\n    }\n    return 0;\n}\n",
        "token_count": 92
    },
    "0041084e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041084e(uchar *arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    char cVar1;\n    int16_t *in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t var_4h;\n    \n    var_4h = 0;\n    if (*in_EAX == 0x23) {\n        iVar3 = fcn.004498e1(in_EAX, 0x45c754, 0xb);\n        if (iVar3 == 0) {\n            *arg_8h = 1;\n        }\n        else {\n            iVar3 = fcn.004498e1(in_EAX, 0x45c738, 0xd);\n            if (iVar3 == 0) {\n                arg_8h[1] = 1;\n            }\n            else {\n                iVar3 = fcn.004498e1(in_EAX, 0x45c6d0, 0xf);\n                if ((iVar3 == 0) || (iVar3 = fcn.004498e1(in_EAX, 0x45c6c8, 3),  iVar3 == 0)) {\n                    do {\n                        while( true ) {\n                            cVar1 = fcn.00410526(in_EAX, arg_10h, arg_14h);\n                            if (cVar1 == '\\0') goto code_r0x0041094d;\n                            fcn.0040fed6();\n                            fcn.0040ff05();\n                            iVar3 = fcn.004498e1(in_EAX, 0x45c6d0, 0xf);\n                            if ((iVar3 != 0) && (iVar3 = fcn.004498e1(in_EAX, 0x45c6c8, 3),  iVar3 != 0)) break;\n                            var_4h = var_4h + 1;\n                        }\n                        iVar3 = fcn.004498e1(in_EAX, 0x45c66c, 0xd);\n                    } while (((iVar3 != 0) && (iVar3 = fcn.004498e1(in_EAX, 0x45c664, 3),  iVar3 != 0)) ||\n                            (var_4h = var_4h + -1,  -1 < var_4h));\n                }\n            }\n        }\ncode_r0x0041094d:\n        uVar2 = 1;\n    }\n    else {\n        uVar2 = 3;\n    }\n    return uVar2;\n}\n",
        "token_count": 575
    },
    "00412fe4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: lpPoint\n// WARNING: Variable defined which should be unmapped: y\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Variable defined which should be unmapped: lpmii\n// WARNING: Variable defined which should be unmapped: var_34h\n// WARNING: Removing unreachable block (ram,0x004130ae)\n// WARNING: Removing unreachable block (ram,0x004130c9)\n\nvoid __cdecl fcn.00412fe4(uint hWnd, int32_t item)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint *unaff_ESI;\n    uint *puVar3;\n    int32_t *piVar4;\n    uint lpmii;\n    uint var_34h;\n    uint var_2ch;\n    uint var_ch;\n    uint lpPoint;\n    uint32_t y;\n    \n    lpmii = 0x2c;\n    puVar3 = &fcn.00412fe4::var_34h;\n    for (iVar2 = 10; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar3 = 0;\n        puVar3 = puVar3 + 1;\n    }\n    y = 0;\n    if (item == 0x200) {\n        y = 0x40;\n    }\n    else if (item == 0x201) {\n        y = 1;\n    }\n    else if (item == 0x202) {\n        y = 2;\n    }\n    else if (item == 0x203) {\n        y = 4;\n        if (*(unaff_ESI + 10) != '\\0') {\n            var_34h = 1;\n            item = 7;\n            if (6 < unaff_ESI[0x591]) {\n                piVar4 = unaff_ESI + 0x391;\n                do {\n                    if (*piVar4 != NULL) {\n                        (*_sym.imp.USER32.dll_GetMenuItemInfoW)(**piVar4, item, 0, &fcn.00412fe4::lpmii);\n                    }\n                    item = item + 1;\n                    piVar4 = piVar4 + 1;\n                } while (item <= unaff_ESI[0x591]);\n            }\n        }\n    }\n    else if (item == 0x204) {\n        y = 8;\n    }\n    else if (item == 0x205) {\n        y = 0x10;\n    }\n    else {\n        if (item != 0x206) goto code_r0x00413101;\n        y = 0x20;\n    }\n    fcn.00413495(unaff_ESI);\ncode_r0x00413101:\n    pcVar1 = _sym.imp.USER32.dll_DeleteMenu;\n    if (((unaff_ESI[3] & y) != 0) && (*0x4679c7 != '\\0')) {\n        if (*(unaff_ESI + 1) == '\\0') {\n            (*_sym.imp.USER32.dll_DeleteMenu)(*unaff_ESI, 5, 0);\n            (*pcVar1)(*unaff_ESI, 4, 0);\n            (*pcVar1)(*unaff_ESI, 6, 0);\n            (*pcVar1)(*unaff_ESI, 3, 0);\n            *(unaff_ESI + 2) = 0;\n        }\n        else if (*(unaff_ESI + 2) == '\\0') {\n            iVar2 = (*_sym.imp.USER32.dll_GetMenuItemCount)(*unaff_ESI);\n            if (0 < iVar2) {\n                lpPoint = 0;\n                unaff_ESI[0x591] = 4;\n                fcn.0041355f(0, 0x45bfe0, 0xffffffff, 0xffffffff, 0);\n            }\n            unaff_ESI[0x591] = 3;\n            fcn.0041355f(0, unaff_ESI + 0x2d1, 0xffffffff, 0xffffffff, 0);\n            unaff_ESI[0x591] = 5;\n            var_34h = 0x41318c;\n            fcn.0041355f(0, 0x45bfe0, 0xffffffff, 0xffffffff, 0);\n            var_34h = 0;\n            lpmii = 0xffffffff;\n            unaff_ESI[0x591] = 2;\n            fcn.0041355f(0, unaff_ESI + 0x24f, 0xffffffff, 0xffffffff, 0);\n            unaff_ESI[0x591] = 0;\n            *(unaff_ESI + 2) = 1;\n        }\n        iVar2 = (*_sym.imp.USER32.dll_GetMenuItemCount)(*unaff_ESI);\n        if (0 < iVar2) {\n            if (*(unaff_ESI + 1) == '\\0') {\n                *(unaff_ESI + 6) = 0;\n            }\n            else if (*(unaff_ESI + 6) != '\\0') {\n                *0x4679c8 = 1;\n                var_34h = 1;\n                (*_sym.imp.USER32.dll_SetMenuItemInfoW)(*unaff_ESI, 4, 0, &fcn.00412fe4::lpmii);\n            }\n            (*_sym.imp.USER32.dll_GetCursorPos)(&fcn.00412fe4::lpPoint);\n            (*_sym.imp.USER32.dll_SetForegroundWindow)(hWnd);\n            (*_sym.imp.USER32.dll_TrackPopupMenuEx)(*unaff_ESI, 0, lpPoint, y, hWnd, 0);\n            (*_sym.imp.USER32.dll_PostMessageW)(hWnd, 0, 0, 0);\n            fcn.00412ddb();\n        }\n    }\n    return;\n}\n",
        "token_count": 1316
    },
    "00413443": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00413443(uint arg_8h)\n\n{\n    uint *puVar1;\n    uint unaff_EBX;\n    uint *var_4h;\n    \n    puVar1 = fcn.00449614(0x10);\n    if (puVar1 == NULL) {\n        puVar1 = NULL;\n    }\n    else {\n        fcn.00416d61();\n    }\n    var_4h = puVar1;\n    fcn.00416e71();\n    *puVar1 = unaff_EBX;\n    fcn.0040d9f1(&var_4h);\n    return;\n}\n",
        "token_count": 139
    },
    "00413495": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00413495(uint arg_8h)\n\n{\n    uint *puVar1;\n    uint unaff_EDI;\n    uint *var_4h;\n    \n    puVar1 = fcn.00449614(0x10);\n    if (puVar1 == NULL) {\n        puVar1 = NULL;\n    }\n    else {\n        fcn.00416d61();\n    }\n    var_4h = puVar1;\n    fcn.00416e71();\n    *puVar1 = unaff_EDI;\n    fcn.0040d9f1(&var_4h);\n    return;\n}\n",
        "token_count": 139
    },
    "00413cac": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00413cac(uint lpsz, uint cchLength)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t var_4h;\n    \n    iVar4 = 0;\n    if (in_EAX[3] != 0) {\n        (*_sym.imp.USER32.dll_CharUpperBuffW)(lpsz, cchLength);\n        if (in_EAX[2] != 0) {\n            iVar4 = in_EAX[3] + -1;\n            var_4h = 0;\n            if (-1 < iVar4) {\n                do {\n                    iVar3 = (var_4h + iVar4) / 2;\n                    iVar2 = fcn.00449703(lpsz, **(in_EAX[2] + iVar3 * 4));\n                    if (iVar2 < 0) {\n                        iVar4 = iVar3 + -1;\n                    }\n                    else {\n                        if (iVar2 < 1) break;\n                        var_4h = iVar3 + 1;\n                    }\n                } while (var_4h <= iVar4);\n                if (var_4h <= iVar4) {\n                    iVar4 = *(in_EAX[2] + iVar3 * 4);\n                    goto code_r0x00413cbc;\n                }\n            }\n            fcn.0044951c(lpsz);\n            return 0;\n        }\n        iVar2 = *in_EAX;\n        while ((iVar4 = 0,  iVar2 != 0 && (cVar1 = fcn.00416f96(),  iVar4 = iVar2,  cVar1 == '\\0'))) {\n            iVar2 = *(iVar2 + 0x1c);\n        }\n    }\ncode_r0x00413cbc:\n    fcn.0044951c(lpsz);\n    return iVar4;\n}\n",
        "token_count": 424
    },
    "00413ea4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00413ea4(void)\n\n{\n    int32_t unaff_ESI;\n    uint var_10h;\n    uint var_8h;\n    \n    fcn.0044ab34(*(unaff_ESI + 4), &var_8h);\n    fcn.0044aaeb(*(unaff_ESI + 4), 0, 2);\n    fcn.0044ab34(*(unaff_ESI + 4), &var_10h);\n    fcn.0044aaeb(*(unaff_ESI + 4), var_8h, 0);\n    return var_10h;\n}\n",
        "token_count": 138
    },
    "00413f0a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00413f0a(void)\n\n{\n    uint32_t *unaff_ESI;\n    uint arg_ch;\n    \n    if ((*unaff_ESI & 0x2000) == 0) {\n        return;\n    }\n    if ((*unaff_ESI & 0x10) == 0) {\n        if (((unaff_ESI[3] & 3) != 0) && (*(unaff_ESI + 2) != '\\0')) {\n            arg_ch = 2;\n            goto code_r0x00413f39;\n        }\n        if (((unaff_ESI[3] & 4) != 0) && (*(unaff_ESI + 2) != '\\0')) {\n            arg_ch = 3;\n            goto code_r0x00413f39;\n        }\n    }\n    arg_ch = 0;\ncode_r0x00413f39:\n    fcn.0044aaeb(unaff_ESI[1], arg_ch, 0);\n    unaff_ESI[0x15] = 0;\n    unaff_ESI[0x16] = 0;\n    unaff_ESI[0x17] = 0;\n    return;\n}\n",
        "token_count": 262
    },
    "00413f4f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00413f4f(void)\n\n{\n    uint32_t uVar1;\n    uint32_t *unaff_ESI;\n    uint32_t var_8h;\n    uint32_t var_4h;\n    \n    if (((*unaff_ESI & 3) != 0) &&\n       (((*unaff_ESI & 1) == 0 || (fcn.0044ab34(unaff_ESI[1], &var_8h),  (var_8h | var_4h) == 0)))) {\n        uVar1 = *unaff_ESI;\n        if ((uVar1 & 0x20) == 0) {\n            if ((uVar1 & 0x40) == 0) {\n                if (uVar1 < '\\0') {\n                    fcn.0044ac5d(0x45ceb4, 1, 3, unaff_ESI[1]);\n                    unaff_ESI[3] = 4;\n                }\n            }\n            else {\n                fcn.0044ac5d(0x45ceb0, 1, 2, unaff_ESI[1]);\n                unaff_ESI[3] = 2;\n            }\n        }\n        else {\n            fcn.0044ac5d(0x45ceac, 1, 2, unaff_ESI[1]);\n            unaff_ESI[3] = 1;\n        }\n    }\n    return;\n}\n",
        "token_count": 320
    },
    "00414133": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t fcn.00414133(int32_t param_1, uchar *param_2)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    \n    iVar1 = fcn.0044985c(param_2);\n    uVar2 = iVar1 * 2 + 2;\n    iVar1 = fcn.00449614(uVar2);\n    uVar3 = 0;\n    if (uVar2 != 0) {\n        iVar4 = iVar1 - param_2;\n        do {\n            param_2[iVar4] = param_2[1];\n            *(iVar1 + 1 + uVar3) = *param_2;\n            uVar3 = uVar3 + 2;\n            param_2 = param_2 + 2;\n        } while (uVar3 < uVar2);\n    }\n    iVar4 = fcn.0044aeec(iVar1, *(param_1 + 4));\n    uVar2 = fcn.0044951c(iVar1);\n    return uVar2 & 0xffffff00 | -1 < iVar4;\n}\n",
        "token_count": 258
    },
    "00414192": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00414192(uint param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint8_t *unaff_ESI;\n    uint *unaff_EDI;\n    \n    if ((*unaff_ESI & 4) == 0) {\n        uVar2 = fcn.0044ae2f(param_1, 1, *unaff_EDI, *(unaff_ESI + 4));\n        *unaff_EDI = uVar2;\n        if ((*(*(unaff_ESI + 4) + 0xc) & 0x20) == 0) {\n            return 1;\n        }\n        *unaff_EDI = 0;\n    }\n    else {\n        uVar2 = *unaff_EDI;\n        iVar1 = (**0x4592c8)(*(unaff_ESI + 4), param_1, uVar2);\n        if (iVar1 != 0) {\n            return 1;\n        }\n        *unaff_EDI = 0;\n        (*_sym.imp.KERNEL32.DLL_SetFilePointer)(*(unaff_ESI + 4), uVar2, 0, 1);\n    }\n    return 0;\n}\n",
        "token_count": 266
    },
    "0041421a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0041421a(uint arg_8h, uint arg_ch)\n\n{\n    uint8_t uVar1;\n    uint arg_8h_00;\n    uint arg_ch_00;\n    uint32_t uVar2;\n    int32_t unaff_ESI;\n    \n    arg_8h_00 = fcn.00449614();\n    uVar1 = fcn.004142bc(arg_8h_00);\n    if (uVar1 != 0) {\n        arg_ch_00 = fcn.004169d1(arg_8h_00);\n        fcn.0044a6b0(arg_ch, arg_ch_00, unaff_ESI * 2);\n        fcn.0044951c(arg_ch_00);\n    }\n    uVar2 = fcn.0044951c(arg_8h_00);\n    return uVar2 & 0xffffff00 | uVar1;\n}\n",
        "token_count": 206
    },
    "00414269": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00414269(uint arg_8h)\n\n{\n    uint8_t uVar1;\n    uint uVar2;\n    uint uVar3;\n    uint32_t uVar4;\n    int32_t unaff_ESI;\n    int32_t unaff_EDI;\n    uint var_4h;\n    \n    uVar2 = fcn.00449614();\n    uVar1 = fcn.004142bc(uVar2);\n    if (uVar1 != 0) {\n        uVar3 = fcn.00416a7f(uVar2);\n        fcn.00449c77();\n        *(unaff_EDI + -2 + unaff_ESI * 2) = 0;\n        fcn.0044951c(uVar3);\n    }\n    uVar4 = fcn.0044951c(uVar2);\n    return uVar4 & 0xffffff00 | uVar1;\n}\n",
        "token_count": 205
    },
    "0041438e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t fcn.0041438e(uint param_1, uint param_2, uint param_3)\n\n{\n    uint8_t uVar1;\n    uint arg_8h;\n    uint uVar2;\n    uint32_t uVar3;\n    uint unaff_retaddr;\n    \n    arg_8h = fcn.00449614(param_3);\n    uVar1 = fcn.00414431(arg_8h, param_3);\n    if (uVar1 != 0) {\n        uVar2 = fcn.004169d1(arg_8h);\n        fcn.004495f8(unaff_retaddr, uVar2);\n        fcn.0044951c(uVar2);\n    }\n    uVar3 = fcn.0044951c(arg_8h);\n    return uVar3 & 0xffffff00 | uVar1;\n}\n",
        "token_count": 192
    },
    "004143de": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004143de(uint arg_8h)\n\n{\n    uint8_t uVar1;\n    uint uVar2;\n    uint uVar3;\n    uint32_t uVar4;\n    int32_t unaff_ESI;\n    int32_t unaff_EDI;\n    uint var_4h;\n    \n    uVar2 = fcn.00449614();\n    uVar1 = fcn.00414431(uVar2);\n    if (uVar1 != 0) {\n        uVar3 = fcn.00416a7f(uVar2);\n        fcn.00449c77();\n        *(unaff_EDI + -2 + unaff_ESI * 2) = 0;\n        fcn.0044951c(uVar3);\n    }\n    uVar4 = fcn.0044951c(uVar2);\n    return uVar4 & 0xffffff00 | uVar1;\n}\n",
        "token_count": 205
    },
    "0041451b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t fcn.0041451b(void)\n\n{\n    uint8_t uVar1;\n    int32_t unaff_ESI;\n    int32_t iVar2;\n    \n    iVar2 = *(unaff_ESI + 0x58);\n    if (*(unaff_ESI + 0x5c) == iVar2) {\n        if (4 < iVar2) {\n            iVar2 = 4;\n        }\n        fcn.0044af60(unaff_ESI + 0x10, iVar2 + 0x10 + unaff_ESI, 4 - iVar2);\n        fcn.0044a6b0((unaff_ESI - iVar2) + 0x14, (*(unaff_ESI + 0x58) - iVar2) + 0x14 + unaff_ESI, iVar2);\n        *(unaff_ESI + 0x54) = iVar2;\n        iVar2 = fcn.0044ae2f(unaff_ESI + 0x14, 1, 0x40, *(unaff_ESI + 4));\n        *(unaff_ESI + 0x5c) = 0;\n        *(unaff_ESI + 0x58) = iVar2;\n        if (iVar2 == 0) {\n            if ((*(*(unaff_ESI + 4) + 0xc) & 0x30) == 0) {\n                return 0;\n            }\n            return 0xffffffff;\n        }\n    }\n    uVar1 = *(*(unaff_ESI + 0x5c) + 0x14 + unaff_ESI);\n    *(unaff_ESI + 0x5c) = *(unaff_ESI + 0x5c) + 1;\n    return uVar1;\n}\n",
        "token_count": 391
    },
    "004145dc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004145dc(void)\n\n{\n    int32_t unaff_ESI;\n    int32_t unaff_EDI;\n    \n    if (*(unaff_ESI + 0x5c) < unaff_EDI) {\n        if (unaff_EDI <= *(unaff_ESI + 0x54)) {\n            fcn.0044af60(unaff_EDI + 0x14 + unaff_ESI, unaff_ESI + 0x14, *(unaff_ESI + 0x58) - unaff_EDI);\n            fcn.0044a6b0(unaff_ESI + 0x14, (unaff_ESI - unaff_EDI) + 0x14, unaff_EDI);\n            *(unaff_ESI + 0x5c) = 0;\n            return;\n        }\n    }\n    else {\n        *(unaff_ESI + 0x5c) = *(unaff_ESI + 0x5c) - unaff_EDI;\n    }\n    return;\n}\n",
        "token_count": 228
    },
    "0041578c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nchar __cdecl fcn.0041578c(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint lpExistingFileName;\n    uint lpNewFileName;\n    uint var_20h;\n    uint var_1ch;\n    uint *var_18h;\n    uint *var_14h;\n    ushort var_10h;\n    uint var_eh;\n    uint var_ah;\n    uint var_6h;\n    \n    fcn.00415029(arg_8h);\n    fcn.00415029(arg_ch);\n    iVar2 = (*_sym.imp.KERNEL32.DLL_lstrcmpiW)(&lpExistingFileName, &lpNewFileName);\n    if (iVar2 == 0) {\n        if (arg_10h != '\\0') {\n            iVar2 = fcn.00449703(&lpExistingFileName, &lpNewFileName);\n            if (iVar2 != 0) {\n                (*_sym.imp.KERNEL32.DLL_MoveFileW)(&lpExistingFileName, &lpNewFileName);\n            }\n            return '\\x01';\n        }\n        return '\\0';\n    }\n    cVar1 = fcn.00415010(&lpExistingFileName);\n    if (cVar1 == '\\0') {\n        return '\\0';\n    }\n    cVar1 = fcn.00415010(&lpNewFileName);\n    if (cVar1 == '\\0') {\n        cVar1 = fcn.004156ef(&lpNewFileName);\n        if (cVar1 == '\\0') {\n            return '\\0';\n        }\n        arg_10h._0_1_ = fcn.00415010(&lpNewFileName);\n    }\n    if (arg_10h == '\\0') {\n        return '\\0';\n    }\n    fcn.004495ce(&lpExistingFileName, 0x45d108);\n    iVar2 = fcn.0044985c(&lpExistingFileName);\n    *(&lpExistingFileName + iVar2 * 2 + 2) = 0;\n    iVar2 = fcn.0044985c(&lpNewFileName);\n    *(&lpNewFileName + iVar2 * 2 + 2) = 0;\n    var_18h = &lpExistingFileName;\n    var_14h = &lpNewFileName;\n    var_ah = 0;\n    var_6h = 0;\n    var_eh = 0;\n    var_20h = 0;\n    var_1ch = 2;\n    var_10h = 0x614;\n    iVar2 = (**0x4593e8)(&var_20h);\n    return '\\x01' - (iVar2 != 0);\n}\n",
        "token_count": 591
    },
    "004158d2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "move file"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004158d2(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    bool bVar4;\n    uint lpNewFileName;\n    uint lpExistingFileName;\n    uint lpFileOp;\n    uint var_1ch;\n    uint *var_18h;\n    uint *var_14h;\n    ushort var_10h;\n    uint var_eh;\n    uint var_ah;\n    uint var_6h;\n    \n    fcn.00415029(arg_8h);\n    fcn.00415029(arg_ch);\n    uVar2 = fcn.00415010(&lpExistingFileName);\n    if (uVar2 == '\\0') {\n        return uVar2;\n    }\n    uVar2 = fcn.00415010(&lpNewFileName);\n    if (uVar2 != '\\0') {\n        if (arg_10h == '\\0') goto code_r0x00415925;\n        iVar3 = (*_sym.imp.KERNEL32.DLL_lstrcmpiW)(&lpExistingFileName, &lpNewFileName);\n        if ((iVar3 == 0) && (iVar3 = fcn.00449703(&lpExistingFileName, &lpNewFileName),  iVar3 != 0)) {\n            uVar2 = (*_sym.imp.KERNEL32.DLL_MoveFileW)(&lpExistingFileName, &lpNewFileName);\n            bVar4 = uVar2 == 0;\n            goto code_r0x00415973;\n        }\n    }\n    cVar1 = fcn.00415110(&lpExistingFileName, &lpNewFileName);\n    if (cVar1 == '\\0') {\n        iVar3 = fcn.0044985c(&lpExistingFileName);\n        *(&lpExistingFileName + iVar3 * 2 + 2) = 0;\n        iVar3 = fcn.0044985c(&lpNewFileName);\n        *(&lpNewFileName + iVar3 * 2 + 2) = 0;\n        var_18h = &lpExistingFileName;\n        var_14h = &lpNewFileName;\n        var_ah = 0;\n        var_6h = 0;\n        var_eh = 0;\n        lpFileOp = 0;\n        var_1ch = 1;\n        var_10h = 0x614;\n        iVar3 = (**0x4593e8)(&lpFileOp);\n        return -iVar3 & 0xffffff00U | 1 - (iVar3 != 0);\n    }\n    uVar2 = fcn.0041578c(&lpExistingFileName, &lpNewFileName, 1);\n    if (uVar2 != '\\0') {\n        uVar2 = fcn.00415a30(&lpExistingFileName, 1);\n        bVar4 = uVar2 == '\\0';\ncode_r0x00415973:\n        return uVar2 & 0xffffff00 | !bVar4;\n    }\ncode_r0x00415925:\n    return uVar2 & 0xffffff00;\n}\n",
        "token_count": 683
    },
    "0041610a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041610a(void)\n\n{\n    int32_t unaff_ESI;\n    int32_t unaff_EDI;\n    \n    fcn.00449c77();\n    *(unaff_EDI + -2 + unaff_ESI * 2) = 0;\n    return;\n}\n",
        "token_count": 66
    },
    "004161b7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.004161b7(uint param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    iVar1 = fcn.0044985c(param_1);\n    uVar2 = fcn.00449614(iVar1 * 2 + 2);\n    fcn.004495f8(uVar2, param_1);\n    return uVar2;\n}\n",
        "token_count": 88
    },
    "00416c22": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00416c22(void)\n\n{\n    uint var_4h;\n    \n    var_4h = 0;\n    fcn.00416d14(&var_4h);\n    fcn.0041811f(var_4h);\n    return;\n}\n",
        "token_count": 60
    },
    "00416d81": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00416d81(uint param_1)\n\n{\n    int32_t iVar1;\n    uint arg_8h;\n    uint *unaff_ESI;\n    \n    iVar1 = fcn.0044985c(param_1);\n    unaff_ESI[1] = iVar1;\n    unaff_ESI[2] = iVar1 + 1;\n    arg_8h = fcn.00449614((iVar1 + 1) * 2);\n    *unaff_ESI = arg_8h;\n    fcn.0044a6b0(arg_8h, param_1, unaff_ESI[1] * 2 + 2);\n    return;\n}\n",
        "token_count": 152
    },
    "00416db5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00416db5(void)\n\n{\n    int32_t in_EAX;\n    ushort *puVar1;\n    uint *unaff_ESI;\n    \n    unaff_ESI[1] = 0;\n    unaff_ESI[2] = in_EAX + 1;\n    puVar1 = fcn.00449614((in_EAX + 1) * 2);\n    *unaff_ESI = puVar1;\n    *puVar1 = 0;\n    return;\n}\n",
        "token_count": 111
    },
    "00416dcf": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00416dcf(void)\n\n{\n    int32_t iVar1;\n    uint arg_8h;\n    uint *unaff_ESI;\n    uint *unaff_EDI;\n    \n    iVar1 = unaff_EDI[1];\n    unaff_ESI[1] = iVar1;\n    iVar1 = iVar1 + 1;\n    unaff_ESI[2] = iVar1;\n    arg_8h = fcn.00449614(iVar1 * 2);\n    *unaff_ESI = arg_8h;\n    fcn.0044a6b0(arg_8h, *unaff_EDI, unaff_ESI[1] * 2 + 2);\n    return;\n}\n",
        "token_count": 158
    },
    "004170ba": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004170ba(void)\n\n{\n    uint *in_EAX;\n    uint *unaff_EBX;\n    \n    in_EAX[1] = unaff_EBX[1];\n    fcn.00416e39();\n    fcn.0044a6b0(*in_EAX, *unaff_EBX, in_EAX[1] * 2 + 2);\n    return;\n}\n",
        "token_count": 89
    },
    "004170e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004170e0(uint param_1)\n\n{\n    uint *in_EAX;\n    uint uVar1;\n    \n    uVar1 = fcn.0044985c(param_1);\n    in_EAX[1] = uVar1;\n    fcn.00416e39();\n    fcn.0044a6b0(*in_EAX, param_1, in_EAX[1] * 2 + 2);\n    return;\n}\n",
        "token_count": 102
    },
    "00417171": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00417171(int32_t *param_1, int32_t param_2, int32_t param_3)\n\n{\n    int32_t in_EAX;\n    \n    if ((in_EAX == 0) || (in_EAX == -1)) {\n        fcn.004171ba();\n    }\n    else {\n        fcn.00416e39();\n        param_1[1] = in_EAX;\n        fcn.0044a6b0(*param_1, param_2 + param_3 * 2, in_EAX * 2);\n        *(in_EAX * 2 + *param_1) = 0;\n    }\n    return;\n}\n",
        "token_count": 154
    },
    "0041766a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041766a(void)\n\n{\n    uint *in_EAX;\n    uint *unaff_EDI;\n    \n    if (unaff_EDI != in_EAX) {\n        *unaff_EDI = *in_EAX;\n        unaff_EDI[1] = in_EAX[1];\n        fcn.00416e71();\n    }\n    return;\n}\n",
        "token_count": 83
    },
    "00417688": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00417688(int32_t *arg_8h, int32_t arg_ch, int32_t *arg_10h, int32_t arg_14h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint *unaff_EDI;\n    \n    *unaff_EDI = 0x45d4ac;\n    unaff_EDI[6] = 0;\n    unaff_EDI[8] = 1;\n    unaff_EDI[9] = 0;\n    *(unaff_EDI + 2) = 0;\n    *(unaff_EDI + 0xb) = 0;\n    *(unaff_EDI + 0x2d) = 0;\n    unaff_EDI[0xc] = 0;\n    unaff_EDI[4] = 0;\n    unaff_EDI[10] = 0;\n    unaff_EDI[1] = 1;\n    if (arg_14h != 0) {\n        iVar2 = fcn.0044985c(arg_14h);\n        uVar3 = fcn.00449614(iVar2 * 2 + 2);\n        unaff_EDI[0xc] = uVar3;\n        fcn.004495f8(uVar3, arg_14h);\n        if (((arg_8h == NULL) || (arg_ch == 0)) || (arg_10h == NULL)) {\n            *(unaff_EDI + 0xb) = 1;\n            fcn.00418bb9(0);\n            pcVar1 = *0x4593d4;\n            (**0x4593d4)(unaff_EDI + 0xe);\n            (*pcVar1)(unaff_EDI + 0x16);\n            (*pcVar1)(unaff_EDI + 0x1a);\n            (*pcVar1)(unaff_EDI + 0x1e);\n            (*pcVar1)(unaff_EDI + 0x22);\n            (*pcVar1)(unaff_EDI + 0x12);\n            (*pcVar1)(unaff_EDI + 0x26);\n            (*pcVar1)(unaff_EDI + 0x2a);\n        }\n        else {\n            unaff_EDI[4] = arg_8h;\n            (**(*arg_8h + 4))(arg_8h);\n            unaff_EDI[10] = arg_10h;\n            (**(*arg_10h + 4))(arg_10h);\n            fcn.00418a19(arg_ch);\n        }\n    }\n    return;\n}\n",
        "token_count": 582
    },
    "00417765": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00417765(void)\n\n{\n    uint *in_EAX;\n    int32_t *piVar1;\n    int32_t iVar2;\n    \n    *in_EAX = 0x45d4ac;\n    *(in_EAX + 2) = 1;\n    if (in_EAX[0xc] != 0) {\n        fcn.0044951c(in_EAX[0xc]);\n        in_EAX[0xc] = 0;\n    }\n    fcn.00417a7d();\n    piVar1 = in_EAX[4];\n    if (piVar1 != NULL) {\n        (**(*piVar1 + 0x18))(piVar1, in_EAX[3]);\n        (**(*in_EAX[4] + 8))(in_EAX[4]);\n        in_EAX[4] = 0;\n    }\n    piVar1 = in_EAX[10];\n    if (piVar1 != NULL) {\n        (**(*piVar1 + 8))(piVar1);\n        in_EAX[10] = 0;\n    }\n    piVar1 = in_EAX + 6;\n    fcn.00418bb9(0);\n    fcn.004189fc();\n    iVar2 = in_EAX[8];\n    if (iVar2 == 8) {\n        if (*piVar1 != 0) {\n            (**0x4593cc)(*piVar1);\n        }\n        fcn.0044951c(*piVar1);\n    }\n    else {\n        if (iVar2 == 10) {\n            iVar2 = *piVar1;\n            if (iVar2 == 0) goto code_r0x004185f6;\n            fcn.0044951c(*(iVar2 + 8));\n        }\n        else {\n            if (iVar2 == 5) {\n                fcn.00419f8b();\n                fcn.00419f2d();\n                goto code_r0x004185f9;\n            }\n            if (iVar2 != 0xb) goto code_r0x004185f9;\n            fcn.0044951c(*(*piVar1 + 4));\n            iVar2 = *piVar1;\n        }\n        fcn.0044951c(iVar2);\n    }\ncode_r0x004185f6:\n    *piVar1 = 0;\ncode_r0x004185f9:\n    *piVar1 = 0;\n    in_EAX[8] = 1;\n    return;\n}\n",
        "token_count": 547
    },
    "00417fb5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00417fb5(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    ulong *unaff_ESI;\n    ulong *unaff_EDI;\n    \n    if (unaff_ESI != unaff_EDI) {\n        iVar1 = *(unaff_ESI + 1);\n        if ((((iVar1 == 0x18) || (iVar1 == 0xe)) || (iVar1 == 0x10)) || ((iVar1 == 0x15 || (iVar1 == 0x21)))) {\n            fcn.0044951c(*unaff_ESI);\n        }\n        *(unaff_ESI + 1) = *(unaff_EDI + 1);\n        *(unaff_ESI + 0xc) = *(unaff_EDI + 0xc);\n        iVar1 = *(unaff_ESI + 1);\n        if (((iVar1 == 0x18) || (iVar1 == 0xe)) || ((iVar1 == 0x10 || ((iVar1 == 0x15 || (iVar1 == 0x21)))))) {\n            iVar1 = fcn.0044985c(*unaff_EDI);\n            uVar2 = fcn.00449614(iVar1 * 2 + 2);\n            *unaff_ESI = uVar2;\n            fcn.004495f8(uVar2, *unaff_EDI);\n        }\n        else if (iVar1 == 0x1a) {\n            *unaff_ESI = *unaff_EDI;\n            *(unaff_ESI + 4) = *(unaff_EDI + 4);\n        }\n        else if (iVar1 == 0x1b) {\n            *unaff_ESI = *unaff_EDI;\n        }\n        else {\n            *unaff_ESI = *unaff_EDI;\n        }\n    }\n    return;\n}\n",
        "token_count": 411
    },
    "0041804c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041804c(uint param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint *unaff_ESI;\n    \n    iVar1 = unaff_ESI[2];\n    if ((((iVar1 == 0x18) || (iVar1 == 0xe)) || (iVar1 == 0x10)) || ((iVar1 == 0x15 || (iVar1 == 0x21)))) {\n        fcn.0044951c(*unaff_ESI);\n    }\n    iVar1 = fcn.0044985c(param_1);\n    uVar2 = fcn.00449614(iVar1 * 2 + 2);\n    *unaff_ESI = uVar2;\n    fcn.004495f8(uVar2, param_1);\n    return;\n}\n",
        "token_count": 181
    },
    "00418318": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool fcn.00418318(uint param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00449e20(param_1, param_2, 0x10);\n    return iVar1 == 0;\n}\n",
        "token_count": 60
    },
    "004187bd": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong * __fastcall fcn.004187bd(ulong *param_1)\n\n{\n    int32_t iVar1;\n    int16_t *arg_8h;\n    ulong *puVar2;\n    uint var_4h;\n    \n    iVar1 = *(param_1 + 1);\n    if (iVar1 != 1) {\n        if (iVar1 == 2) {\n            return *param_1;\n        }\n        if (iVar1 == 3) {\n            puVar2 = fcn.0041a317(10, 0, *param_1, *param_1 >> 0x20);\n            return puVar2;\n        }\n        if (iVar1 == 4) {\n            arg_8h = **(param_1 + 0xc);\n            if ((*arg_8h == 0x30) && ((arg_8h[1] == 0x78 || (arg_8h[1] == 0x58)))) {\n                fcn.004167a5();\n                return param_1;\n            }\n            puVar2 = fcn.00449799(arg_8h);\n            return puVar2;\n        }\n        if (iVar1 != 7) {\n            if (iVar1 == 9) {\n                if (*param_1 == '\\0') {\n                    return NULL;\n                }\n                return 0x1;\n            }\n            if (iVar1 != 0xb) {\n                return NULL;\n            }\n            return **(*param_1 + 4);\n        }\n    }\n    return *param_1;\n}\n",
        "token_count": 339
    },
    "00418bd2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.00418bd2(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t **unaff_ESI;\n    int32_t unaff_EDI;\n    \n    fcn.0041858e();\n    piVar1 = fcn.00449614(8);\n    *unaff_ESI = piVar1;\n    *piVar1 = unaff_EDI;\n    if (unaff_EDI == 0) {\n        iVar2 = fcn.00449614(1);\n        (*unaff_ESI)[1] = iVar2;\n        *(*unaff_ESI)[1] = 0;\n    }\n    else {\n        iVar2 = fcn.00449614(**unaff_ESI);\n        (*unaff_ESI)[1] = iVar2;\n        fcn.00449b00((*unaff_ESI)[1], 0, **unaff_ESI);\n    }\n    unaff_ESI[2] = 0xb;\n    return (*unaff_ESI)[1];\n}\n",
        "token_count": 231
    },
    "0041a1ad": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t fcn.0041a1ad(void)\n\n{\n    char cVar1;\n    int32_t **in_EAX;\n    int32_t *piVar2;\n    int32_t iVar3;\n    \n    piVar2 = *in_EAX;\n    cVar1 = *(piVar2 + 0x83);\n    if (cVar1 != *(piVar2 + 0x20d)) {\n        return piVar2 & 0xffffff00;\n    }\n    iVar3 = 0;\n    if (0 < cVar1) {\n        piVar2 = piVar2 + 0x43;\n        do {\n            if ((*piVar2 < 0) || (piVar2[-0x40] <= *piVar2)) {\n                return piVar2 & 0xffffff00;\n            }\n            iVar3 = iVar3 + 1;\n            piVar2 = piVar2 + 1;\n        } while (iVar3 < cVar1);\n    }\n    return CONCAT31(piVar2 >> 8, 1);\n}\n",
        "token_count": 228
    },
    "00420721": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00420721(int32_t param_1)\n\n{\n    uint uVar1;\n    uint extraout_EDX;\n    int32_t extraout_EDX_00;\n    int32_t unaff_EBX;\n    uint unaff_EDI;\n    \n    fcn.00418bb9(1);\n    fcn.00421898(0);\n    fcn.004218c6(extraout_EDX);\n    if ((*(unaff_EBX * 0x28 + 0x20 + *(param_1 + 0x6ec)) == extraout_EDX_00) && (*0x4679c0 != extraout_EDX_00)) {\n        fcn.00421898(extraout_EDX_00);\n        fcn.00418c7e(0x45bfe0);\n        uVar1 = 0;\n    }\n    else {\n        uVar1 = (**(unaff_EBX * 0x28 + *(param_1 + 0x6ec) + 8))(unaff_EDI);\n    }\n    return uVar1;\n}\n",
        "token_count": 238
    },
    "00421a8a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00421a8a(uint32_t param_1)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 8) <= param_1) {\n        return in_EAX + 0x10;\n    }\n    return *(*(in_EAX + 4) + param_1 * 4);\n}\n",
        "token_count": 80
    },
    "00421b33": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00421b33(void)\n\n{\n    uint *in_EAX;\n    uint *unaff_ESI;\n    \n    *unaff_ESI = *in_EAX;\n    unaff_ESI[1] = in_EAX[1];\n    unaff_ESI[2] = in_EAX[2];\n    unaff_ESI[3] = in_EAX[3];\n    fcn.00418a19(in_EAX + 4);\n    fcn.00418a19(in_EAX + 8);\n    return;\n}\n",
        "token_count": 119
    },
    "004268e5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004268e5(uint param_1, uint param_2, uint param_3)\n\n{\n    fcn.0041a132(2);\n    fcn.00418bb9(param_3);\n    return;\n}\n",
        "token_count": 52
    },
    "00426905": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00426905(uint param_1, uint param_2, uint param_3)\n\n{\n    fcn.0041a132(2);\n    fcn.00418c7e(param_3);\n    return;\n}\n",
        "token_count": 52
    },
    "0042d4ef": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042d4ef(void)\n\n{\n    int32_t unaff_ESI;\n    \n    fcn.0044951c(*(unaff_ESI + 0x3c));\n    fcn.0044951c(*(unaff_ESI + 0x30));\n    fcn.0044951c(*(unaff_ESI + 0x24));\n    return;\n}\n",
        "token_count": 85
    },
    "00434cc3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00434cc3(void)\n\n{\n    uint *in_EAX;\n    uint *unaff_ESI;\n    \n    *unaff_ESI = *in_EAX;\n    unaff_ESI[1] = in_EAX[1];\n    unaff_ESI[2] = in_EAX[2];\n    unaff_ESI[3] = in_EAX[3];\n    fcn.0041835f(in_EAX + 4);\n    fcn.0041835f(in_EAX + 8);\n    return;\n}\n",
        "token_count": 119
    },
    "0043b5a8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl\nfcn.0043b5a8(uint arg_8h, uint noname_1, uint noname_2, uint noname_3, uint arg_18h, uint noname_5, int32_t arg_20h)\n\n{\n    int32_t iVar1;\n    uint arg_ch;\n    uint arg_8h_00;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint var_4h;\n    \n    if (arg_20h == 4) {\n        fcn.0041a132(2);\n        iVar1 = fcn.00418733();\n        iVar3 = 1;\n        if (0 < iVar1) {\n            do {\n                fcn.0041a132(2);\n                arg_ch = fcn.00418641();\n                arg_8h_00 = fcn.00418641();\n                iVar2 = fcn.00449521(arg_8h_00, arg_ch);\n                if (iVar2 == 0) goto code_r0x0043b616;\n                iVar3 = iVar3 + 1;\n            } while (iVar3 <= iVar1);\n        }\n        iVar3 = -1;\n    }\n    else {\n        iVar3 = fcn.00418733();\n    }\ncode_r0x0043b616:\n    fcn.0041858e();\n    fcn.0041858e();\n    return iVar3;\n}\n",
        "token_count": 312
    },
    "0043ffed": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0043ffed(uint arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    cVar1 = fcn.0043fb64();\n    if (cVar1 == '\\0') {\n        fcn.00418bb9(0);\n        fcn.00421898(0);\n    }\n    else {\n        cVar1 = fcn.004032d4(1);\n        if (cVar1 == '\\x01') {\n            fcn.0041a000(1);\n            fcn.0041a132(1);\n            fcn.00418bb9(var_10h);\n            fcn.0041a132(1);\n            fcn.00418bb9(var_ch);\n            fcn.0041a132(1);\n            fcn.00418bb9(var_8h - var_10h);\n            fcn.0041a132(1);\n            fcn.00418bb9(var_4h - var_ch);\n        }\n        else {\n            fcn.00418bb9(0);\n            fcn.00421898(0);\n        }\n    }\n    return 0;\n}\n",
        "token_count": 289
    },
    "004413ca": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004413ca(uint noname_0, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    var_4h = (*_sym.imp.USER32.dll_GetForegroundWindow)();\n    fcn.00415e9a(var_4h, 1);\n    iVar1 = (*_sym.imp.USER32.dll_GetCaretPos)(&var_ch);\n    if (iVar1 == 0) {\n        fcn.00418bb9(0);\n        fcn.00421898(0);\n    }\n    else {\n        (*_sym.imp.USER32.dll_ClientToScreen)(var_4h, &var_ch);\n        fcn.0042f346(*(in_ECX + 0x2a8));\n        var_ch = var_ch - var_14h;\n        var_8h = var_8h - var_10h;\n        fcn.0041a000(1);\n        fcn.0041a132(1);\n        fcn.00418bb9(var_ch);\n        fcn.0041a132(1);\n        fcn.00418bb9(var_8h);\n    }\n    fcn.00415e9a(var_4h, 0);\n    return 0;\n}\n",
        "token_count": 319
    },
    "00441daf": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encode data using XOR",
            "hash data using fnv/71d430608aea45068f0f63fc2cdc3004"
        ],
        "decompiled_code": "\nvoid fcn.00441daf(void)\n\n{\n    uint in_EAX;\n    uint32_t *puVar1;\n    int32_t iVar2;\n    \n    iVar2 = 1;\n    puVar1 = 0x477a30;\n    *0x477a30 = in_EAX;\n    do {\n        puVar1[1] = (*puVar1 >> 0x1e ^ *puVar1) * 0x6c078965 + iVar2;\n        puVar1 = puVar1 + 1;\n        iVar2 = iVar2 + 1;\n    } while (puVar1 < 0x4783ec);\n    *0x4672d0 = 1;\n    *0x47840c = 1;\n    return;\n}\n",
        "token_count": 168
    },
    "00442219": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00442219(uint param_1, uchar param_2)\n\n{\n    int32_t unaff_ESI;\n    \n    *(*(unaff_ESI + 0x250) + *(unaff_ESI + 600)) = param_2;\n    *(unaff_ESI + 600) = *(unaff_ESI + 600) + 1;\n    if (*(unaff_ESI + 600) == 0x10000) {\n        fcn.0044ac5d(*(unaff_ESI + 0x250), 1, 0x10000, *(unaff_ESI + 0x20));\n        *(unaff_ESI + 600) = 0;\n    }\n    return;\n}\n",
        "token_count": 162
    },
    "00442259": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00442259(void)\n\n{\n    int32_t unaff_ESI;\n    \n    if (*(unaff_ESI + 600) != 0) {\n        fcn.0044ac5d(*(unaff_ESI + 0x250), 1, *(unaff_ESI + 600), *(unaff_ESI + 0x20));\n        *(unaff_ESI + 600) = 0;\n    }\n    return;\n}\n",
        "token_count": 100
    },
    "0044227f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t fcn.0044227f(void)\n\n{\n    uint8_t uVar1;\n    int32_t unaff_ESI;\n    \n    if ((*(unaff_ESI + 0x25c) == 0) || (*(unaff_ESI + 0x25c) == 0x10000)) {\n        fcn.0044ae2f(*(unaff_ESI + 0x254), 1, 0x10000, *(unaff_ESI + 0x1c));\n        *(unaff_ESI + 0x25c) = 0;\n    }\n    uVar1 = *(*(unaff_ESI + 0x25c) + *(unaff_ESI + 0x254));\n    *(unaff_ESI + 0x25c) = *(unaff_ESI + 0x25c) + 1;\n    return *(unaff_ESI + 0x254) & 0xffffff00 | uVar1;\n}\n",
        "token_count": 216
    },
    "0044234b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0044234b(void)\n\n{\n    int32_t iVar1;\n    int32_t unaff_ESI;\n    \n    if (*0x47c7ac < 0x1001) {\n        *0x47c7ac = *0x47c7ac + 1;\n    }\n    else {\n        *0x47c7ac = 0;\n        if (*(unaff_ESI + 0x24c) != NULL) {\n            iVar1 = (**(unaff_ESI + 0x24c))\n                              (*(unaff_ESI + 0xc), *(unaff_ESI + 8), (*(unaff_ESI + 8) * 100) / *(unaff_ESI + 0x10));\n            if (iVar1 == 0) {\n                *(unaff_ESI + 0x240) = 1;\n                return;\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 202
    },
    "00442561": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.00442561(uint32_t arg_8h, uint32_t arg_ch, uint32_t arg_10h, int32_t arg_14h, uint arg_18h, int32_t arg_1ch)\n\n{\n    uint32_t *in_EAX;\n    \n    *in_EAX = *in_EAX + (~arg_8h & arg_10h | arg_8h & arg_ch) + arg_14h + arg_1ch;\n    *in_EAX = (*in_EAX >> (0x20 - arg_18h & 0x1f) | *in_EAX << (arg_18h & 0x1f)) + arg_8h;\n    return;\n}\n",
        "token_count": 161
    },
    "0044259a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.0044259a(uint32_t arg_8h, uint32_t arg_ch, uint32_t arg_10h, int32_t arg_14h, uint arg_18h, int32_t arg_1ch)\n\n{\n    uint32_t *in_EAX;\n    \n    *in_EAX = *in_EAX + (~arg_10h & arg_ch | arg_8h & arg_10h) + arg_14h + arg_1ch;\n    *in_EAX = (*in_EAX >> (0x20 - arg_18h & 0x1f) | *in_EAX << (arg_18h & 0x1f)) + arg_8h;\n    return;\n}\n",
        "token_count": 162
    },
    "004425d3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "hash data with MD5"
        ],
        "decompiled_code": "\nvoid fcn.004425d3(void)\n\n{\n    int32_t unaff_ESI;\n    \n    fcn.00449b00(unaff_ESI + 0x44, 0, 8);\n    *(unaff_ESI + 0x34) = 0x67452301;\n    *(unaff_ESI + 0x38) = 0xefcdab89;\n    *(unaff_ESI + 0x3c) = 0x98badcfe;\n    *(unaff_ESI + 0x40) = 0x10325476;\n    return;\n}\n",
        "token_count": 132
    },
    "00442f4a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encode data using XOR",
            "hash data using fnv/71d430608aea45068f0f63fc2cdc3004"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00442f4a(uint32_t param_1)\n\n{\n    uint32_t *in_EAX;\n    uint32_t *puVar1;\n    int32_t iVar2;\n    \n    iVar2 = 1;\n    *in_EAX = param_1;\n    puVar1 = in_EAX;\n    do {\n        puVar1[1] = (*puVar1 >> 0x1e ^ *puVar1) * 0x6c078965 + iVar2;\n        iVar2 = iVar2 + 1;\n        puVar1 = puVar1 + 1;\n    } while (iVar2 < 0x270);\n    in_EAX[0x270] = 1;\n    in_EAX[0x271] = 1;\n    return;\n}\n",
        "token_count": 175
    },
    "004430a9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004430a9(uint arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t *unaff_EDI;\n    uint var_2ach;\n    uint var_1a4h;\n    uint var_a0h;\n    uint var_10h;\n    \n    uVar1 = fcn.00416a25(arg_8h);\n    uVar2 = fcn.00416a25(arg_ch);\n    fcn.0044a030(&var_2ach, uVar1);\n    fcn.0044a030(&var_1a4h, uVar2);\n    fcn.0044951c(uVar1);\n    fcn.0044951c(uVar2);\n    fcn.004425d3();\n    fcn.00442f1e(&var_1a4h);\n    unaff_EDI[2] = 0;\n    iVar4 = 0;\n    iVar3 = 0;\n    do {\n        iVar3 = iVar3 + *(&var_a0h + iVar4);\n        iVar4 = iVar4 + 1;\n    } while (iVar4 < 0x10);\n    unaff_EDI[2] = iVar3;\n    iVar3 = fcn.0044c139(&var_2ach, 0x46201c);\n    *unaff_EDI = iVar3;\n    if (iVar3 == 0) {\n        iVar3 = 1;\n    }\n    else {\n        iVar3 = fcn.0044319a();\n        if (iVar3 == 0) {\n            fcn.0044ae2f(&var_10h, 1, 0x10, *unaff_EDI);\n            unaff_EDI[2] = 0;\n            iVar3 = 0;\n            iVar4 = 0;\n            do {\n                iVar4 = iVar4 + *(&var_10h + iVar3);\n                iVar3 = iVar3 + 1;\n            } while (iVar3 < 0x10);\n            unaff_EDI[2] = iVar4;\n            iVar3 = fcn.0044c2ae(*unaff_EDI);\n            unaff_EDI[1] = iVar3;\n            iVar3 = 0;\n        }\n        else {\n            fcn.0044acf5(*unaff_EDI);\n        }\n    }\n    return iVar3;\n}\n",
        "token_count": 544
    },
    "0044319a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_8h\n\nuint8_t fcn.0044319a(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint32_t unaff_EBX;\n    uint *unaff_ESI;\n    char acStackY65572 [65532];\n    uint uStackY40;\n    uint *var_20h;\n    uint *var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = 0x4431a7;\n    fcn.0044c510();\n    iVar1 = 0;\n    do {\n        *(&fcn.0044319a::var_20h + iVar1) = *(iVar1 + 0x467320);\n        (&stack0xffffffe4)[iVar1] = *(iVar1 + 0x467318);\n        iVar1 = iVar1 + 1;\n    } while (iVar1 < 8);\n    var_10h = &fcn.0044319a::var_8h;\n    var_ch = 0x462038;\n    var_4h = unaff_EBX;\n    fcn.0044a030();\n    var_20h = 0x4431e2;\n    fcn.0044a6b0(&fcn.0044319a::var_10h, &fcn.0044319a::var_8h, 4);\n    iVar1 = 0;\n    do {\n        var_ch = *unaff_ESI;\n        var_10h = 0x10000;\n        iVar2 = fcn.0044ae2f(&stack0xfffeffdc, 1, 0x10000, var_ch);\n        if (iVar2 < 0x18) {\n            return 3;\n        }\n        iVar3 = 0;\n        if (iVar2 != 0x14 && -1 < iVar2 + -0x14) {\n            do {\n                iVar4 = 0;\n                do {\n                    if (*(&fcn.0044319a::var_20h + iVar4) != (&stack0xfffeffdc)[iVar4 + iVar3]) break;\n                    iVar4 = iVar4 + 1;\n                } while (iVar4 < 0x14);\n                if (iVar4 == 0x14) {\n                    var_ch = 0;\n                    var_10h = iVar1 + 0x14 + iVar3;\n                    fcn.0044aaeb(*unaff_ESI, var_10h, 0);\n                    var_ch = *unaff_ESI;\n                    var_10h = 0x4;\n                    fcn.0044ae2f(&fcn.0044319a::var_8h, 1, 4, var_ch);\n                    var_20h = &fcn.0044319a::var_8h;\n                    var_4h = var_4h & 0xffffff00;\n                    uStackY40 = 0x443282;\n                    iVar1 = fcn.0044a500();\n                    return -(iVar1 != 0) & 4;\n                }\n                iVar3 = iVar3 + 1;\n            } while (iVar3 < iVar2 + -0x14);\n        }\n        var_ch = 1;\n        var_10h = 0xffffffec;\n        iVar1 = iVar1 + -0x14 + iVar2;\n        fcn.0044aaeb(*unaff_ESI, 0xffffffec, 1);\n    } while( true );\n}\n",
        "token_count": 840
    },
    "0044377c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0044377c(uint arg_8h, int32_t arg_ch)\n\n{\n    uint arg_14h;\n    int32_t iVar1;\n    uint *unaff_ESI;\n    uint32_t uVar2;\n    uint var_11ch;\n    uint var_14h;\n    uint var_10h;\n    uint32_t var_ch;\n    uint32_t var_8h;\n    uint var_1h;\n    \n    var_1h._0_1_ = '\\x01';\n    do {\n        fcn.0044ae2f(&var_14h, 1, 4, *unaff_ESI);\n        fcn.00443295(&var_14h, 4);\n        var_10h._0_1_ = 0;\n        iVar1 = fcn.0044a500(&var_14h, 0x462028);\n        if (iVar1 == 0) {\n            fcn.0044ae2f(&var_ch, 4, 1, *unaff_ESI);\n            uVar2 = var_ch ^ 0x29bc;\n            fcn.0044ae2f(&var_11ch, 1, uVar2, *unaff_ESI);\n            fcn.00443295(&var_11ch, uVar2);\n            arg_14h = *unaff_ESI;\n            *(&var_11ch + uVar2) = 0;\n            fcn.0044ae2f(&var_ch, 4, 1, arg_14h);\n            uVar2 = var_ch ^ 0x29ac;\n            fcn.0044ae2f(arg_ch, 1, uVar2, *unaff_ESI);\n            fcn.00443295(arg_ch, uVar2);\n            *(uVar2 + arg_ch) = 0;\n            iVar1 = fcn.0044a500(&var_11ch, arg_8h);\n            if (iVar1 == 0) {\n                return 0;\n            }\n            fcn.0044aaeb(*unaff_ESI, 1, 1);\n            fcn.0044ae2f(&var_8h, 4, 1, *unaff_ESI);\n            var_8h = var_8h ^ 0x45aa;\n            fcn.0044aaeb(*unaff_ESI, var_8h + 0x18, 1);\n        }\n        else {\n            var_1h._0_1_ = '\\0';\n        }\n    } while (var_1h == '\\x01');\n    return 6;\n}\n",
        "token_count": 605
    },
    "00444079": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00444079(uint32_t param_1)\n\n{\n    uint8_t *in_EAX;\n    uint32_t uVar1;\n    \n    do {\n        uVar1 = *in_EAX;\n        if (uVar1 == 0) {\n            return;\n        }\n        if (uVar1 == 0x4a) {\n            uVar1 = CONCAT11(in_EAX[1], in_EAX[2]);\n        }\n        else if (uVar1 == 0x59) {\n            if (CONCAT11(in_EAX[3], in_EAX[4]) == param_1) {\n                return;\n            }\n            uVar1 = *0x45a341;\n        }\n        else {\n            uVar1 = *(uVar1 + 0x45a2e8);\n        }\n        in_EAX = in_EAX + uVar1;\n    } while( true );\n}\n",
        "token_count": 199
    },
    "004440b9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004440b9(void)\n\n{\n    uint8_t *in_EAX;\n    uint32_t uVar1;\n    \n    for (; (uVar1 = *in_EAX,  uVar1 != 0 && (uVar1 != 0x4c)); in_EAX = in_EAX + uVar1) {\n        if (uVar1 == 0x4a) {\n            uVar1 = CONCAT11(in_EAX[1], in_EAX[2]);\n        }\n        else {\n            uVar1 = *(uVar1 + 0x45a2e8);\n        }\n    }\n    return;\n}\n",
        "token_count": 140
    },
    "004440e2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff",
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004440e2(uint arg_8h, char *arg_ch, uint arg_10h)\n\n{\n    uint8_t uVar1;\n    char cVar2;\n    int32_t iVar3;\n    char *arg_8h_00;\n    int32_t iVar4;\n    int32_t iVar5;\n    \n    iVar4 = 1;\ncode_r0x004441aa:\n    arg_8h_00 = fcn.00443e65(0, 1);\n    if (arg_ch <= arg_8h_00) {\n        return 1;\n    }\n    cVar2 = *arg_8h_00;\n    if ((cVar2 != 'X') && (cVar2 != 'Y')) goto code_r0x0044411d;\n    goto code_r0x00444157;\ncode_r0x0044411d:\n    // switch table (77 cases) at 0x4441ca\n    switch(cVar2) {\n    case '\\x05':\n    case '\\x06':\n    case '\\a':\n    case '\\b':\n    case '\\t':\n    case '\\n':\n    case '\\v':\n    case '\\f':\n    case '\\r':\n    case '\\x0e':\n    case '\\x10':\n    case '\\x16':\n    case '\\x17':\n    case '\\x18':\n    case '\\x1b':\n    case '\\x1c':\n    case '!':\n    case '#':\n    case '(':\n    case ')':\n    case '.':\n    case '0':\n    case '5':\n    case '6':\n    case ';':\n    case '=':\ncode_r0x00444153:\n        iVar4 = 0;\ncode_r0x004441c3:\n        return iVar4;\n    case '\\x0f':\n    case '\\x11':\n    case '\\x12':\n    case '\\x13':\n    case '\\x14':\n    case '\\x15':\n    case '\\x19':\n    case '\\x1a':\n    case '\\x1d':\n    case '\\x1e':\n    case '\\x1f':\n    case ' ':\n    case '\\\"':\n    case '$':\n    case '%':\n    case '&':\n    case '\\'':\n    case '*':\n    case '+':\n    case ',':\n    case '-':\n    case '/':\n    case '1':\n    case '2':\n    case '3':\n    case '4':\n    case '7':\n    case '8':\n    case '9':\n    case ':':\n    case '<':\n    case '>':\n    case '?':\n    case '@':\n    case 'A':\n    case 'B':\n    case 'C':\n    case 'D':\n    case 'E':\n    case 'F':\n    case 'G':\n    case 'J':\n    case 'K':\n    case 'L':\n    case 'M':\n        break;\n    case 'H':\n    case 'I':\n        uVar1 = arg_8h_00[0x21];\n        if ((uVar1 < 0x40) ||\n           ((0x41 < uVar1 &&\n            ((uVar1 < 0x44 || ((0x45 < uVar1 && ((0x47 < uVar1 || (CONCAT11(arg_8h_00[0x22], arg_8h_00[0x23]) != 0))))))\n            )))) goto code_r0x00444153;\n        break;\n    case 'N':\n    case 'O':\n    case 'P':\n    case 'Q':\n        goto code_r0x004441c3;\n    default:\ncode_r0x00444157:\n        if (CONCAT11(arg_8h_00[1], arg_8h_00[2]) == 0) {\n            return 1;\n        }\n        iVar5 = 0;\n        do {\n            if ((iVar5 == 0) && (iVar3 = fcn.004440e2(arg_8h_00, arg_ch, arg_10h),  iVar3 != 0)) {\n                iVar5 = iVar4;\n            }\n            arg_8h_00 = arg_8h_00 + CONCAT11(arg_8h_00[1], arg_8h_00[2]);\n        } while (*arg_8h_00 == 'N');\n        if (iVar5 == 0) {\n            return 0;\n        }\n    }\n    goto code_r0x004441aa;\n}\n",
        "token_count": 955
    },
    "00444227": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00444227(uint32_t param_1, uint param_2, uint param_3)\n\n{\n    uint *in_EAX;\n    int32_t iVar1;\n    \n    for (; (in_EAX != NULL && (param_1 <= in_EAX[1])); in_EAX = *in_EAX) {\n        iVar1 = fcn.004440e2(in_EAX[1], param_2, param_3);\n        if (iVar1 == 0) {\n            return 0;\n        }\n    }\n    return 1;\n}\n",
        "token_count": 122
    },
    "004442cd": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004442cd(uint32_t arg_8h, int32_t arg_ch, uchar *arg_10h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uchar *puVar3;\n    int32_t unaff_EDI;\n    \n    iVar1 = fcn.004440b9();\n    do {\n        if (iVar1 == 0) {\n            return;\n        }\n        if (arg_10h < *(unaff_EDI + 0x20)) {\n            puVar3 = arg_10h;\n            do {\n                uVar2 = CONCAT11(*puVar3, puVar3[1]);\n                if (*(unaff_EDI + 0x14) + uVar2 == iVar1 + 1) {\n                    *puVar3 = uVar2 + arg_ch >> 8;\n                    puVar3[1] = arg_ch + puVar3[1];\n                    break;\n                }\n                puVar3 = puVar3 + 2;\n            } while (puVar3 < *(unaff_EDI + 0x20));\n            if (*(unaff_EDI + 0x20) <= puVar3) goto code_r0x00444317;\n        }\n        else {\ncode_r0x00444317:\n            uVar2 = CONCAT11(*(iVar1 + 1), *(iVar1 + 2));\n            if (arg_8h <= *(unaff_EDI + 0x14) + uVar2) {\n                *(iVar1 + 1) = uVar2 + arg_ch >> 8;\n                *(iVar1 + 2) = arg_ch + *(iVar1 + 2);\n            }\n        }\n        iVar1 = fcn.004440b9();\n    } while( true );\n}\n",
        "token_count": 386
    },
    "0044434a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuchar * __fastcall fcn.0044434a(int32_t param_1)\n\n{\n    char cVar1;\n    uchar *in_EAX;\n    int32_t unaff_ESI;\n    \n    *in_EAX = 0x4d;\n    in_EAX[1] = 0xff;\n    in_EAX[2] = param_1 - *(unaff_ESI + 0x18) >> 8;\n    cVar1 = *(unaff_ESI + 0x18);\n    in_EAX[4] = 0;\n    in_EAX[3] = param_1 - cVar1;\n    in_EAX[5] = 0;\n    return in_EAX + 6;\n}\n",
        "token_count": 158
    },
    "004467a7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nuint fcn.004467a7(char *param_1, uint32_t param_2, uint32_t param_3)\n\n{\n    char cVar1;\n    char *pcVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    bool bVar5;\n    ulong uVar6;\n    \n    do {\n        uVar6 = fcn.00443e65(0, 0);\n        pcVar2 = uVar6;\n        cVar1 = *pcVar2;\n        uVar4 = param_2;\n        if (cVar1 == 'X') {\ncode_r0x00446825:\n            iVar3 = fcn.004467a7(pcVar2, uVar4, param_3);\n            if (iVar3 == 0) {\n                return 0;\n            }\n        }\n        else {\n            if (cVar1 == 'Y') {\n                uVar4 = (uVar6 >> 0x20) + 1;\n                if (CONCAT11(pcVar2[3], pcVar2[4]) < 0x20) {\n                    uVar4 = uVar4 << (pcVar2[4] & 0x1fU);\n                }\n                uVar4 = uVar4 | param_2;\n                goto code_r0x00446825;\n            }\n            if (((cVar1 == 'R') || (cVar1 == 'W')) || (cVar1 == 'Z')) goto code_r0x00446825;\n            if (((cVar1 == '3') || (cVar1 == '4')) || (cVar1 == '<')) {\n                if (pcVar2[1] != '\\v') {\n                    return 0;\n                }\n                bVar5 = (param_3 & param_2) == 0;\n            }\n            else {\n                bVar5 = cVar1 == '\\x14';\n            }\n            if (!bVar5) {\n                return 0;\n            }\n        }\n        param_1 = param_1 + CONCAT11(param_1[1], param_1[2]);\n        if (*param_1 != 'N') {\n            return 1;\n        }\n    } while( true );\n}\n",
        "token_count": 479
    },
    "00446d26": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00446d26(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    fcn.004468fb(arg_8h, arg_ch, 0, arg_10h, arg_14h, arg_18h);\n    return;\n}\n",
        "token_count": 77
    },
    "00449298": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00449298(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h, int32_t *arg_18h)\n\n{\n    int32_t *piVar1;\n    int32_t arg_8h_00;\n    int32_t arg_10h_00;\n    \n    if ((arg_14h < 0) || (arg_10h <= arg_14h)) {\n        arg_10h_00 = -7;\n    }\n    else {\n        piVar1 = arg_ch + arg_14h * 8;\n        arg_10h_00 = piVar1[1] - *piVar1;\n        arg_8h_00 = (**0x465148)(arg_10h_00 + 1);\n        if (arg_8h_00 == 0) {\n            arg_10h_00 = -6;\n        }\n        else {\n            fcn.0044a6b0(arg_8h_00, *piVar1 + arg_8h, arg_10h_00);\n            *(arg_8h_00 + arg_10h_00) = 0;\n            *arg_18h = arg_8h_00;\n        }\n    }\n    return arg_10h_00;\n}\n",
        "token_count": 296
    },
    "0044967e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044967e(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint var_2ch;\n    uint32_t var_4h;\n    \n    var_4h = *0x465718 ^ &stack0xfffffffc;\n    fcn.0044cd10(arg_8h, &var_2ch, arg_10h);\n    fcn.0044cca7(arg_ch, &var_2ch, 0x28);\n    fcn.0044ce09();\n    return;\n}\n",
        "token_count": 122
    },
    "004496bf": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004496bf(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint var_54h;\n    uint32_t var_4h;\n    \n    var_4h = *0x465718 ^ &stack0xfffffffc;\n    fcn.0044cda7(arg_8h, arg_ch, &var_54h, arg_14h);\n    fcn.0044cca7(arg_10h, &var_54h, 0x50);\n    fcn.0044ce09();\n    return;\n}\n",
        "token_count": 133
    },
    "00449872": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00449872(uchar *arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint uVar1;\n    uchar *var_20h;\n    int32_t var_1ch;\n    uchar *var_18h;\n    uint var_14h;\n    \n    var_18h = arg_8h;\n    var_20h = arg_8h;\n    var_14h = 0x42;\n    var_1ch = 0x7fffffff;\n    uVar1 = fcn.0044d214(&var_20h, arg_ch, &arg_10h);\n    var_1ch = var_1ch + -1;\n    if (var_1ch < 0) {\n        fcn.0044d074(0, &var_20h);\n    }\n    else {\n        *var_20h = 0;\n        var_20h = var_20h + 1;\n    }\n    var_1ch = var_1ch + -1;\n    if (var_1ch < 0) {\n        fcn.0044d074(0, &var_20h);\n    }\n    else {\n        *var_20h = 0;\n    }\n    return uVar1;\n}\n",
        "token_count": 281
    },
    "0044a040": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t * fcn.0044a040(uint32_t *param_1, uint32_t *param_2)\n\n{\n    uint8_t uVar1;\n    uint32_t uVar2;\n    uint32_t *puVar3;\n    uint32_t uVar4;\n    uint32_t *puVar5;\n    \n    uVar4 = param_1 & 3;\n    puVar3 = param_1;\n    while (uVar4 != 0) {\n        uVar1 = *puVar3;\n        puVar3 = puVar3 + 1;\n        if (uVar1 == 0) goto code_r0x0044a093;\n        uVar4 = puVar3 & 3;\n    }\n    do {\n        do {\n            puVar5 = puVar3;\n            puVar3 = puVar5 + 1;\n        } while (((*puVar5 ^ 0xffffffff ^ *puVar5 + 0x7efefeff) & 0x81010100) == 0);\n        uVar4 = *puVar5;\n        if (uVar4 == '\\0') goto code_r0x0044a0a5;\n        if (uVar4 >> 8 == '\\0') {\n            puVar5 = puVar5 + 1;\n            goto code_r0x0044a0a5;\n        }\n        if ((uVar4 & 0xff0000) == 0) {\n            puVar5 = puVar5 + 2;\n            goto code_r0x0044a0a5;\n        }\n    } while ((uVar4 & 0xff000000) != 0);\ncode_r0x0044a093:\n    puVar5 = puVar3 + -1;\ncode_r0x0044a0a5:\n    uVar4 = param_2 & 3;\n    while (uVar4 != 0) {\n        uVar1 = *param_2;\n        uVar4 = uVar1;\n        param_2 = param_2 + 1;\n        if (uVar1 == 0) goto code_r0x0044a120;\n        *puVar5 = uVar1;\n        puVar5 = puVar5 + 1;\n        uVar4 = param_2 & 3;\n    }\n    do {\n        uVar2 = *param_2;\n        uVar4 = *param_2;\n        param_2 = param_2 + 1;\n        if (((uVar2 ^ 0xffffffff ^ uVar2 + 0x7efefeff) & 0x81010100) != 0) {\n            if (uVar4 == '\\0') {\ncode_r0x0044a120:\n                *puVar5 = uVar4;\n                return param_1;\n            }\n            if (uVar4 >> 8 == '\\0') {\n                *puVar5 = uVar4;\n                return param_1;\n            }\n            if ((uVar4 & 0xff0000) == 0) {\n                *puVar5 = uVar4;\n                *(puVar5 + 2) = 0;\n                return param_1;\n            }\n            if ((uVar4 & 0xff000000) == 0) {\n                *puVar5 = uVar4;\n                return param_1;\n            }\n        }\n        *puVar5 = uVar4;\n        puVar5 = puVar5 + 1;\n    } while( true );\n}\n",
        "token_count": 760
    },
    "0044a030": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t * fcn.0044a030(uint32_t *param_1, uint32_t *param_2)\n\n{\n    uint8_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t *puVar4;\n    \n    uVar3 = param_2 & 3;\n    puVar4 = param_1;\n    while (uVar3 != 0) {\n        uVar1 = *param_2;\n        uVar3 = uVar1;\n        param_2 = param_2 + 1;\n        if (uVar1 == 0) goto code_r0x0044a120;\n        *puVar4 = uVar1;\n        puVar4 = puVar4 + 1;\n        uVar3 = param_2 & 3;\n    }\n    do {\n        uVar2 = *param_2;\n        uVar3 = *param_2;\n        param_2 = param_2 + 1;\n        if (((uVar2 ^ 0xffffffff ^ uVar2 + 0x7efefeff) & 0x81010100) != 0) {\n            if (uVar3 == '\\0') {\ncode_r0x0044a120:\n                *puVar4 = uVar3;\n                return param_1;\n            }\n            if (uVar3 >> 8 == '\\0') {\n                *puVar4 = uVar3;\n                return param_1;\n            }\n            if ((uVar3 & 0xff0000) == 0) {\n                *puVar4 = uVar3;\n                *(puVar4 + 2) = 0;\n                return param_1;\n            }\n            if ((uVar3 & 0xff000000) == 0) {\n                *puVar4 = uVar3;\n                return param_1;\n            }\n        }\n        *puVar4 = uVar3;\n        puVar4 = puVar4 + 1;\n    } while( true );\n}\n",
        "token_count": 439
    },
    "0044a3de": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044a3de(int16_t *arg_8h, int16_t *arg_ch, int16_t *arg_10h, int16_t *arg_14h, int16_t *arg_18h)\n\n{\n    int16_t *piVar1;\n    int16_t iVar2;\n    int16_t *piVar3;\n    \n    if ((arg_ch != NULL) && (*arg_ch != 0)) {\n        *arg_8h = *arg_ch;\n        arg_8h[1] = 0x3a;\n        arg_8h = arg_8h + 2;\n    }\n    if ((arg_10h != NULL) && (iVar2 = *arg_10h,  iVar2 != 0)) {\n        do {\n            piVar3 = arg_10h;\n            piVar1 = arg_8h;\n            *piVar1 = iVar2;\n            arg_10h = piVar3 + 1;\n            iVar2 = *arg_10h;\n            arg_8h = piVar1 + 1;\n        } while (iVar2 != 0);\n        iVar2 = *piVar3;\n        if ((iVar2 != 0x2f) && (iVar2 != 0x5c)) {\n            *arg_8h = 0x5c;\n            arg_8h = piVar1 + 2;\n        }\n    }\n    if (arg_14h != NULL) {\n        for (; *arg_14h != 0; arg_14h = arg_14h + 1) {\n            *arg_8h = *arg_14h;\n            arg_8h = arg_8h + 1;\n        }\n    }\n    if (arg_18h == NULL) {\n        *arg_8h = 0;\n    }\n    else {\n        if ((*arg_18h != 0) && (*arg_18h != 0x2e)) {\n            *arg_8h = 0x2e;\n            arg_8h = arg_8h + 1;\n        }\n        do {\n            iVar2 = *arg_18h;\n            *arg_8h = iVar2;\n            arg_8h = arg_8h + 1;\n            arg_18h = arg_18h + 1;\n        } while (iVar2 != 0);\n    }\n    return;\n}\n",
        "token_count": 526
    },
    "0044a48f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_1ch\n\nvoid __cdecl fcn.0044a48f(uint arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    int32_t unaff_EBP;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.0044dc28(0x45a990, 0x10);\n    fcn.0044bdcb(1, 0x4651a0);\n    *(unaff_EBP + -4) = 0;\n    uVar1 = fcn.0044f108(0x4651a0);\n    *(unaff_EBP + -0x1c) = uVar1;\n    uVar1 = fcn.0044d214(0x4651a0, *(unaff_EBP + 8), unaff_EBP + 0xc);\n    *(unaff_EBP + -0x20) = uVar1;\n    fcn.0044f190(*(unaff_EBP + -0x1c), 0x4651a0);\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.0044a4ea();\n    fcn.0044dc63();\n    return;\n}\n",
        "token_count": 304
    },
    "0044a590": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0044a590(char *arg_8h, char *arg_ch, uint32_t arg_10h)\n\n{\n    char cVar1;\n    char cVar2;\n    uint8_t uVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    char *pcVar6;\n    char *pcVar7;\n    bool bVar8;\n    \n    uVar4 = arg_10h;\n    pcVar6 = arg_8h;\n    if (arg_10h != 0) {\n        do {\n            if (uVar4 == 0) break;\n            uVar4 = uVar4 - 1;\n            cVar1 = *pcVar6;\n            pcVar6 = pcVar6 + 1;\n        } while (cVar1 != '\\0');\n        iVar5 = arg_10h - uVar4;\n        do {\n            pcVar6 = arg_ch;\n            pcVar7 = arg_8h;\n            if (iVar5 == 0) break;\n            iVar5 = iVar5 + -1;\n            pcVar7 = arg_8h + 1;\n            pcVar6 = arg_ch + 1;\n            cVar1 = *arg_ch;\n            cVar2 = *arg_8h;\n            arg_ch = pcVar6;\n            arg_8h = pcVar7;\n        } while (cVar1 == cVar2);\n        uVar3 = pcVar6[-1];\n        arg_10h = 0;\n        bVar8 = uVar3 == pcVar7[-1];\n        if (uVar3 < pcVar7[-1] || bVar8) {\n            if (bVar8) {\n                return 0;\n            }\n            arg_10h = 0xfffffffe;\n        }\n        arg_10h = ~arg_10h;\n    }\n    return arg_10h;\n}\n",
        "token_count": 415
    },
    "0044a5c9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0044a5c9(uchar *arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint uVar1;\n    uchar *var_20h;\n    int32_t var_1ch;\n    uchar *var_18h;\n    uint var_14h;\n    \n    var_1ch = 0x7fffffff;\n    var_14h = 0x42;\n    var_18h = arg_8h;\n    var_20h = arg_8h;\n    uVar1 = fcn.0044f248(&var_20h, arg_ch, &arg_10h);\n    if (arg_8h != NULL) {\n        var_1ch = var_1ch + -1;\n        if (var_1ch < 0) {\n            fcn.0044d074(0, &var_20h);\n        }\n        else {\n            *var_20h = 0;\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 223
    },
    "0044a9ed": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0044a9ed(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t arg_14h;\n    uint *puVar1;\n    uint uVar2;\n    int32_t unaff_EBP;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.0044dc28(0x45a9a0, 0x10);\n    arg_14h = fcn.0044fb73();\n    *(unaff_EBP + -0x1c) = arg_14h;\n    if (arg_14h == 0) {\n        puVar1 = fcn.0044ddb5();\n        *puVar1 = 0x18;\n    }\n    else {\n        *(unaff_EBP + -4) = 0;\n        uVar2 = fcn.0044fa04(*(unaff_EBP + 8), *(unaff_EBP + 0xc), *(unaff_EBP + 0x10), arg_14h);\n        *(unaff_EBP + -0x20) = uVar2;\n        *(unaff_EBP + -4) = 0xffffffff;\n        fcn.0044aa3f();\n    }\n    fcn.0044dc63();\n    return;\n}\n",
        "token_count": 312
    },
    "0044aa49": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0044aa49(uint param_1, uint param_2)\n\n{\n    fcn.0044a9ed(param_1, param_2, 0x40);\n    return;\n}\n",
        "token_count": 46
    },
    "0044aaeb": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0044aaeb(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint uVar1;\n    int32_t unaff_EBP;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.0044dc28(0x45a9b0, 0xc);\n    fcn.0044bd9c(*(unaff_EBP + 8));\n    *(unaff_EBP + -4) = 0;\n    uVar1 = fcn.0044aa5c(*(unaff_EBP + 8), *(unaff_EBP + 0xc), *(unaff_EBP + 0x10));\n    *(unaff_EBP + -0x1c) = uVar1;\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.0044ab2a(0x45a9b0);\n    fcn.0044dc63();\n    return;\n}\n",
        "token_count": 234
    },
    "0044ac5d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0044ac5d(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint uVar1;\n    int32_t unaff_EBP;\n    uint unaff_retaddr;\n    uint var_1ch;\n    uint var_4h;\n    uint noname_1;\n    \n    noname_1 = 0xc;\n    fcn.0044dc28();\n    fcn.0044bd9c(*(unaff_EBP + 0x14));\n    *(unaff_EBP + -4) = 0;\n    uVar1 = fcn.0044ab56(*(unaff_EBP + 8), *(unaff_EBP + 0xc), *(unaff_EBP + 0x10), *(unaff_EBP + 0x14));\n    *(unaff_EBP + -0x1c) = uVar1;\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.0044ac9f(0x45a9c0, noname_1, unaff_retaddr, arg_8h);\n    fcn.0044dc63();\n    return;\n}\n",
        "token_count": 280
    },
    "0044ae2f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0044ae2f(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint uVar1;\n    int32_t unaff_EBP;\n    uint unaff_retaddr;\n    uint var_1ch;\n    uint var_4h;\n    uint noname_1;\n    \n    noname_1 = 0xc;\n    fcn.0044dc28();\n    fcn.0044bd9c(*(unaff_EBP + 0x14));\n    *(unaff_EBP + -4) = 0;\n    uVar1 = fcn.0044ad46(*(unaff_EBP + 8), *(unaff_EBP + 0xc), *(unaff_EBP + 0x10), *(unaff_EBP + 0x14));\n    *(unaff_EBP + -0x1c) = uVar1;\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.0044ae71(0x45a9e0, noname_1, unaff_retaddr, arg_8h);\n    fcn.0044dc63();\n    return;\n}\n",
        "token_count": 279
    },
    "0044ae7b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0044ae7b(uint arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    uint uVar2;\n    int32_t unaff_EBP;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    uint arg_ch_00;\n    \n    arg_ch_00 = 0x14;\n    fcn.0044dc28();\n    uVar1 = fcn.00449fa0(*(unaff_EBP + 8));\n    *(unaff_EBP + -0x1c) = uVar1;\n    uVar1 = *(unaff_EBP + 0xc);\n    fcn.0044bd9c(uVar1);\n    *(unaff_EBP + -4) = 0;\n    uVar2 = fcn.0044f108(uVar1);\n    *(unaff_EBP + -0x20) = uVar2;\n    uVar2 = fcn.0044ab56(*(unaff_EBP + 8), 1, *(unaff_EBP + -0x1c), uVar1);\n    *(unaff_EBP + -0x24) = uVar2;\n    fcn.0044f190(*(unaff_EBP + -0x20), uVar1);\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.0044aee2(0x45a9f0, arg_ch_00);\n    fcn.0044dc63();\n    return;\n}\n",
        "token_count": 393
    },
    "0044aeec": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0044aeec(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int16_t iVar2;\n    uint uVar3;\n    int32_t unaff_EBP;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    uint arg_ch_00;\n    \n    arg_ch_00 = 0x10;\n    fcn.0044dc28();\n    *(unaff_EBP + -0x20) = 0;\n    uVar3 = fcn.0044985c(*(unaff_EBP + 8));\n    *(unaff_EBP + -0x1c) = uVar3;\n    fcn.0044bd9c(*(unaff_EBP + 0xc));\n    *(unaff_EBP + -4) = 0;\n    do {\n        iVar1 = *(unaff_EBP + -0x1c);\n        *(unaff_EBP + -0x1c) = *(unaff_EBP + -0x1c) + -1;\n        if (iVar1 == 0) goto code_r0x0044af3e;\n        iVar2 = fcn.004506a9(**(unaff_EBP + 8), *(unaff_EBP + 0xc));\n        *(unaff_EBP + 8) = *(unaff_EBP + 8) + 2;\n    } while (iVar2 != -1);\n    *(unaff_EBP + -0x20) = 0xffffffff;\ncode_r0x0044af3e:\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.0044af50(0x45aa00, arg_ch_00);\n    fcn.0044dc63();\n    return;\n}\n",
        "token_count": 413
    },
    "0044b2f7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.0044b2f7(uint param_1)\n\n{\n    int32_t iVar1;\n    code **ppcVar2;\n    \n    if (*0x465890 != NULL) {\n        (**0x465890)(param_1);\n    }\n    iVar1 = 0;\n    ppcVar2 = 0x465034;\n    do {\n        if (iVar1 != 0) {\n            return iVar1;\n        }\n        if (*ppcVar2 != NULL) {\n            iVar1 = (**ppcVar2)();\n        }\n        ppcVar2 = ppcVar2 + 1;\n    } while (ppcVar2 < 0x465044);\n    if (iVar1 == 0) {\n        fcn.00449aea(0x4507c7);\n        ppcVar2 = 0x465000;\n        do {\n            if (*ppcVar2 != NULL) {\n                (**ppcVar2)();\n            }\n            ppcVar2 = ppcVar2 + 1;\n        } while (ppcVar2 < 0x465030);\n        iVar1 = 0;\n    }\n    return iVar1;\n}\n",
        "token_count": 254
    },
    "0044b7af": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_1ch\n\nvoid __cdecl fcn.0044b7af(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint uVar1;\n    uint uVar2;\n    int32_t unaff_EBP;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.0044dc28(0x45aa58, 0x14);\n    uVar1 = *(unaff_EBP + 8);\n    *(unaff_EBP + -0x20) = uVar1;\n    fcn.0044bd9c(uVar1);\n    *(unaff_EBP + -4) = 0;\n    uVar2 = fcn.0044f108(uVar1);\n    *(unaff_EBP + -0x1c) = uVar2;\n    uVar2 = fcn.0044f248(uVar1, *(unaff_EBP + 0xc), unaff_EBP + 0x10);\n    *(unaff_EBP + -0x24) = uVar2;\n    fcn.0044f190(*(unaff_EBP + -0x1c), uVar1);\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.0044b803();\n    fcn.0044dc63();\n    return;\n}\n",
        "token_count": 337
    },
    "0044b9c6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nuint32_t __cdecl fcn.0044b9c6(int32_t arg_8h, uint32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t in_ECX;\n    uint unaff_EBP;\n    uint unaff_ESI;\n    uint unaff_retaddr;\n    uint in_stack_0000000c;\n    uint in_stack_00000010;\n    uint in_stack_00000014;\n    uint in_stack_00000018;\n    uint in_stack_0000001c;\n    uint in_stack_00000020;\n    uint in_stack_00000024;\n    uint in_stack_00000028;\n    uint in_stack_0000002c;\n    uint in_stack_00000030;\n    uint in_stack_00000034;\n    uint in_stack_00000038;\n    uint in_stack_0000003c;\n    uint in_stack_00000040;\n    uint in_stack_00000044;\n    uint in_stack_00000048;\n    uint in_stack_0000004c;\n    uint in_stack_00000050;\n    uint32_t var_4h;\n    \n    uVar1 = 0xffff;\n    if (arg_ch != 0xffff) {\n        var_4h = in_ECX;\n        if ((arg_ch < 0x100) && (iVar2 = fcn.0044cf8d(arg_8h, arg_ch, 1),  iVar2 == 0)) {\n            uVar1 = arg_ch & 0xffff;\n        }\n        else {\n            uVar3 = fcn.0045107a(*(arg_8h + 0x14), 0x100, &arg_ch, 1, &var_4h, 1, *(arg_8h + 4), unaff_ESI, var_4h, \n                                 unaff_EBP, unaff_retaddr, arg_8h, arg_ch, in_stack_0000000c, in_stack_00000010, \n                                 in_stack_00000014, in_stack_00000018, in_stack_0000001c, in_stack_00000020, \n                                 in_stack_00000024, in_stack_00000028, in_stack_0000002c, in_stack_00000030, \n                                 in_stack_00000034, in_stack_00000038, in_stack_0000003c, in_stack_00000040, \n                                 in_stack_00000044, in_stack_00000048, in_stack_0000004c, in_stack_00000050);\n            uVar1 = uVar3 & 0xffff0000 | arg_ch & 0xffff;\n            if (uVar3 != 0) {\n                uVar1 = uVar3 & 0xffff0000 | var_4h & 0xffff;\n            }\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 657
    },
    "0044bc6f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0044bc6f(uchar *arg_8h, int32_t arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint uVar1;\n    uchar *var_20h;\n    int32_t var_1ch;\n    uchar *var_18h;\n    uint var_14h;\n    \n    var_18h = arg_8h;\n    var_20h = arg_8h;\n    var_1ch = arg_ch * 2;\n    var_14h = 0x42;\n    uVar1 = fcn.0044d214(&var_20h, arg_10h, &arg_14h);\n    var_1ch = var_1ch + -1;\n    if (var_1ch < 0) {\n        fcn.0044d074(0, &var_20h);\n    }\n    else {\n        *var_20h = 0;\n        var_20h = var_20h + 1;\n    }\n    var_1ch = var_1ch + -1;\n    if (var_1ch < 0) {\n        fcn.0044d074(0, &var_20h);\n    }\n    else {\n        *var_20h = 0;\n    }\n    return uVar1;\n}\n",
        "token_count": 293
    },
    "0044c02c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nfloat10 __cdecl fcn.0044c02c(uint arg_8h, uint arg_ch)\n\n{\n    double dVar1;\n    uint arg_8h_00;\n    int32_t iVar2;\n    float10 fVar3;\n    uint var_8h;\n    uint var_4h;\n    \n    arg_8h_00 = fcn.00451af6(0x133f, 0xffff);\n    if ((arg_ch._2_2_ & 0x7ff0) == 0x7ff0) {\n        iVar2 = fcn.004512fd(arg_8h, CONCAT26(arg_ch._2_2_, CONCAT24(arg_ch, arg_8h)) >> 0x20);\n        if (iVar2 == 1) {\n            fcn.00451af6(arg_8h_00, 0xffff);\n            fVar3 = CONCAT26(arg_ch._2_2_, CONCAT24(arg_ch, arg_8h));\n        }\n        else if (iVar2 == 2) {\n            fcn.00451af6(arg_8h_00, 0xffff);\n            fVar3 = -CONCAT26(arg_ch._2_2_, CONCAT24(arg_ch, arg_8h));\n        }\n        else {\n            dVar1 = CONCAT26(arg_ch._2_2_, CONCAT24(arg_ch, arg_8h));\n            if (iVar2 == 3) {\n                fVar3 = fcn.004519d0(0x15, arg_8h, dVar1 >> 0x20, arg_8h_00);\n            }\n            else {\n                dVar1 = dVar1 + *0x462040;\n                fVar3 = fcn.00451a23(8, 0x15, arg_8h, CONCAT26(arg_ch._2_2_, CONCAT24(arg_ch, arg_8h)) >> 0x20, \n                                     SUB84(dVar1, 0), dVar1 >> 0x20, arg_8h_00);\n            }\n        }\n    }\n    else {\n        fcn.00451af6(arg_8h_00, 0xffff);\n        fVar3 = CONCAT44(arg_ch, arg_8h) & 0x7fffffffffffffff;\n    }\n    return fVar3;\n}\n",
        "token_count": 505
    },
    "0044c0dd": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0044c0dd(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t arg_14h;\n    uint *puVar1;\n    uint uVar2;\n    int32_t unaff_EBP;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.0044dc28(0x45aaa0, 0x10);\n    arg_14h = fcn.0044fb73();\n    *(unaff_EBP + -0x1c) = arg_14h;\n    if (arg_14h == 0) {\n        puVar1 = fcn.0044ddb5();\n        *puVar1 = 0x18;\n    }\n    else {\n        *(unaff_EBP + -4) = 0;\n        uVar2 = fcn.00453400(*(unaff_EBP + 8), *(unaff_EBP + 0xc), *(unaff_EBP + 0x10), arg_14h);\n        *(unaff_EBP + -0x20) = uVar2;\n        *(unaff_EBP + -4) = 0xffffffff;\n        fcn.0044c12f();\n    }\n    fcn.0044dc63();\n    return;\n}\n",
        "token_count": 309
    },
    "0044c139": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0044c139(uint param_1, uint param_2)\n\n{\n    fcn.0044c0dd(param_1, param_2, 0x40);\n    return;\n}\n",
        "token_count": 46
    },
    "0044cadb": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __cdecl fcn.0044cadb(uint arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t arg_8h_00;\n    uint *puVar2;\n    int32_t iVar3;\n    int32_t unaff_EBP;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.0044dc28(0x45aca8, 8);\n    piVar1 = *(unaff_EBP + 8) * 8 + 0x4655f8;\n    if (*piVar1 == 0) {\n        arg_8h_00 = fcn.00449f7f(0x18);\n        if (arg_8h_00 == 0) {\n            puVar2 = fcn.0044ddb5();\n            *puVar2 = 0xc;\n        }\n        else {\n            fcn.0044cb7b(10);\n            *(unaff_EBP + -4) = 0;\n            if (*piVar1 == 0) {\n                iVar3 = fcn.004548d2(arg_8h_00, 4000);\n                if (iVar3 == 0) {\n                    fcn.0044a128(arg_8h_00);\n                    puVar2 = fcn.0044ddb5();\n                    *puVar2 = 0xc;\n                    fcn.004542b2(unaff_EBP + -0x10, 0xffffffff);\n                    goto code_r0x0044cb6c;\n                }\n                *piVar1 = arg_8h_00;\n            }\n            else {\n                fcn.0044a128(arg_8h_00);\n            }\n            *(unaff_EBP + -4) = 0xffffffff;\n            fcn.0044cb72();\n        }\n    }\ncode_r0x0044cb6c:\n    fcn.0044dc63();\n    return;\n}\n",
        "token_count": 455
    },
    "0044cca7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0044cca7(uint param_1, uint param_2, uint param_3)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0044c752();\n    iVar1 = *(iVar1 + 100);\n    if (iVar1 != *0x4654bc) {\n        iVar1 = fcn.0044c6de();\n    }\n    fcn.0044cbac(iVar1, param_1, param_2, param_3);\n    return;\n}\n",
        "token_count": 113
    },
    "0044cf8d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nuint32_t __cdecl fcn.0044cf8d(int32_t arg_8h, uint32_t arg_ch, uint32_t arg_10h)\n\n{\n    int32_t iVar1;\n    uint32_t in_ECX;\n    uint unaff_EBP;\n    uint unaff_retaddr;\n    uint in_stack_00000010;\n    uint in_stack_00000014;\n    uint in_stack_00000018;\n    uint in_stack_0000001c;\n    uint in_stack_00000020;\n    uint in_stack_00000024;\n    uint in_stack_00000028;\n    uint in_stack_0000002c;\n    uint in_stack_00000030;\n    uint in_stack_00000034;\n    uint in_stack_00000038;\n    uint in_stack_0000003c;\n    uint32_t var_4h;\n    \n    if (arg_ch != 0xffff) {\n        if (arg_ch < 0x100) {\n            var_4h = *(*0x4658d8 + (arg_ch & 0xffff) * 2);\n            goto code_r0x0044cfd9;\n        }\n        var_4h = in_ECX;\n        iVar1 = fcn.00454ba6(1, &arg_ch, 1, &var_4h, *(arg_8h + 4), *(arg_8h + 0x14), in_ECX, unaff_EBP, unaff_retaddr, \n                             arg_8h, arg_ch, arg_10h, in_stack_00000010, in_stack_00000014, in_stack_00000018, \n                             in_stack_0000001c, in_stack_00000020, in_stack_00000024, in_stack_00000028, \n                             in_stack_0000002c, in_stack_00000030, in_stack_00000034, in_stack_00000038, \n                             in_stack_0000003c);\n        if (iVar1 != 0) goto code_r0x0044cfd9;\n    }\n    var_4h = 0;\ncode_r0x0044cfd9:\n    return var_4h & 0xffff & arg_10h & 0xffff;\n}\n",
        "token_count": 507
    },
    "0044cfe4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t fcn.0044cfe4(uint32_t param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    \n    if (param_1 < 0x100) {\n        return *(*0x4658d8 + (param_1 & 0xffff) * 2) & param_2;\n    }\n    if (param_1 == 0xffff) {\n        return 0;\n    }\n    iVar1 = fcn.0044c752();\n    iVar1 = *(iVar1 + 100);\n    if (iVar1 != *0x4654bc) {\n        iVar1 = fcn.0044c6de();\n    }\n    uVar2 = fcn.0044cf8d(iVar1, param_1, param_2);\n    return uVar2;\n}\n",
        "token_count": 187
    },
    "0044dd7d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nfloat10 __cdecl fcn.0044dd7d(uchar *arg_8h)\n\n{\n    int32_t iVar1;\n    uint var_18h;\n    \n    while( true ) {\n        iVar1 = fcn.0044a1d3(*arg_8h);\n        if (iVar1 == 0) break;\n        arg_8h = arg_8h + 1;\n    }\n    fcn.00449fa0(arg_8h, 0, 0);\n    iVar1 = fcn.0045514d(&var_18h, arg_8h);\n    return *(iVar1 + 0x10);\n}\n",
        "token_count": 142
    },
    "0044ddb5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.0044ddb5(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0044c752();\n    return iVar1 + 8;\n}\n",
        "token_count": 43
    },
    "0044ddbe": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.0044ddbe(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0044c752();\n    return iVar1 + 0xc;\n}\n",
        "token_count": 44
    },
    "0044e0c7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0044e0c7(uint param_1, uint param_2, uint param_3)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0044c752();\n    iVar1 = *(iVar1 + 100);\n    if (iVar1 != *0x4654bc) {\n        iVar1 = fcn.0044c6de();\n    }\n    fcn.0044df1d(iVar1, param_1, param_2, param_3);\n    return;\n}\n",
        "token_count": 116
    },
    "0044e8f9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * fcn.0044e8f9(void)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    \n    if (*0x480b64 == *0x480b74) {\n        iVar2 = (*_sym.imp.KERNEL32.DLL_HeapReAlloc)(*0x480b7c, 0, *0x480b68, (*0x480b74 * 5 + 0x50) * 4);\n        if (iVar2 == 0) {\n            return NULL;\n        }\n        *0x480b74 = *0x480b74 + 0x10;\n        *0x480b68 = iVar2;\n    }\n    puVar1 = *0x480b68 + *0x480b64 * 0x14;\n    iVar2 = (*_sym.imp.KERNEL32.DLL_HeapAlloc)(*0x480b7c, 8, 0x41c4);\n    puVar1[4] = iVar2;\n    if (iVar2 != 0) {\n        iVar2 = (*_sym.imp.KERNEL32.DLL_VirtualAlloc)(0, 0x100000, 0x2000, 4);\n        puVar1[3] = iVar2;\n        if (iVar2 != 0) {\n            puVar1[2] = 0xffffffff;\n            *puVar1 = 0;\n            puVar1[1] = 0;\n            *0x480b64 = *0x480b64 + 1;\n            *puVar1[4] = 0xffffffff;\n            return puVar1;\n        }\n        (*_sym.imp.KERNEL32.DLL_HeapFree)(*0x480b7c, 0, puVar1[4]);\n    }\n    return NULL;\n}\n",
        "token_count": 392
    },
    "0044f091": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nuint32_t __cdecl fcn.0044f091(int32_t arg_8h, uint32_t arg_ch, uint32_t arg_10h)\n\n{\n    uint noname_2;\n    int32_t iVar1;\n    uint32_t in_ECX;\n    uint unaff_EBP;\n    uint unaff_retaddr;\n    uint in_stack_00000010;\n    uint in_stack_00000014;\n    uint32_t var_4h;\n    \n    if (arg_ch + 1 < 0x101) {\n        arg_ch._2_2_ = *(*(arg_8h + 0x48) + arg_ch * 2);\n    }\n    else {\n        if ((*(*(arg_8h + 0x48) + 1 + (arg_ch >> 8 & 0xffU) * 2) & 0x80) == 0) {\n            var_4h = in_ECX & 0xffff0000 | arg_ch & 0xff;\n            noname_2 = 1;\n        }\n        else {\n            var_4h = CONCAT11(arg_ch, arg_ch >> 8);\n            var_4h = in_ECX & 0xff000000 | var_4h;\n            noname_2 = 2;\n        }\n        iVar1 = fcn.00454074(1, &var_4h, noname_2, &arg_ch + 2, *(arg_8h + 4), *(arg_8h + 0x14), 1, var_4h, unaff_EBP, \n                             unaff_retaddr, arg_8h, arg_ch, arg_10h, in_stack_00000010, in_stack_00000014);\n        if (iVar1 == 0) {\n            return 0;\n        }\n    }\n    return arg_ch._2_2_ & arg_10h;\n}\n",
        "token_count": 428
    },
    "00450783": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.00450783(void)\n\n{\n    int32_t unaff_EBP;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.0044dc28(0x45b318, 0xc);\n    *(unaff_EBP + -0x1c) = 0x4620c4;\n    while (*(unaff_EBP + -0x1c) < 0x4620c4) {\n        *(unaff_EBP + -4) = 0;\n        if (**(unaff_EBP + -0x1c) != NULL) {\n            (***(unaff_EBP + -0x1c))();\n        }\n        *(unaff_EBP + -4) = 0xffffffff;\n        *(unaff_EBP + -0x1c) = *(unaff_EBP + -0x1c) + 4;\n    }\n    fcn.0044dc63();\n    return;\n}\n",
        "token_count": 226
    },
    "00451e21": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00451e21(uint arg_8h, uint arg_ch)\n\n{\n    uint var_2c8h;\n    \n    fcn.00451e54(arg_8h, arg_ch);\n    fcn.0044e150();\n    fcn.00451cd3();\n    return;\n}\n",
        "token_count": 70
    },
    "004530e8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nbool fcn.004530e8(void)\n\n{\n    int32_t iVar1;\n    bool bVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t *unaff_EBX;\n    uint32_t uVar6;\n    \n    if (*0x465c24 == 0) {\n        return false;\n    }\n    iVar1 = unaff_EBX[5];\n    if ((iVar1 != *0x465cb8) || (iVar1 != *0x465cc4)) {\n        if (*0x467654 == 0) {\n            fcn.00452f30(1, 1, iVar1, 1, 0, 0, 0, 0, 0);\n            fcn.00452f30(0, 1, iVar1, 5, 0, 0, 0, 0, 0);\n        }\n        else {\n            if (*0x467640 != 0) {\n                uVar6 = *0x467646;\n                uVar3 = 0;\n                uVar4 = 0;\n            }\n            else {\n                uVar3 = *0x467644;\n                uVar6 = 0;\n                uVar4 = *0x467646;\n            }\n            fcn.00452f30(1, *0x467640 == 0, iVar1, uVar4, uVar3, uVar6, *0x46764a, *0x46764c, *0x46764e);\n            if (*0x4675ec != 0) {\n                uVar6 = *0x4675f2;\n                uVar3 = 0;\n                uVar4 = 0;\n            }\n            else {\n                uVar3 = *0x4675f0;\n                uVar6 = 0;\n                uVar4 = *0x4675f2;\n            }\n            fcn.00452f30(0, *0x4675ec == 0, iVar1, uVar4, uVar3, uVar6, *0x4675f6, *0x4675f8, *0x4675fa);\n        }\n    }\n    iVar1 = unaff_EBX[7];\n    if (*0x465cbc < *0x465cc8) {\n        if ((iVar1 < *0x465cbc) || (*0x465cc8 < iVar1)) {\n            return false;\n        }\n        if ((*0x465cbc < iVar1) && (iVar1 < *0x465cc8)) {\n            return true;\n        }\n    }\n    else {\n        if (iVar1 < *0x465cc8) {\n            return true;\n        }\n        if (*0x465cbc < iVar1) {\n            return true;\n        }\n        if ((*0x465cc8 < iVar1) && (iVar1 < *0x465cbc)) {\n            return false;\n        }\n    }\n    iVar5 = ((unaff_EBX[2] * 0x3c + unaff_EBX[1]) * 0x3c + *unaff_EBX) * 1000;\n    if (iVar1 == *0x465cbc) {\n        bVar2 = *0x465cc0 <= iVar5;\n    }\n    else {\n        bVar2 = iVar5 < *0x465ccc;\n    }\n    return bVar2;\n}\n",
        "token_count": 750
    },
    "00454ef9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00454ef9(uint param_1, uint param_2, uint param_3)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0044c752();\n    iVar1 = *(iVar1 + 100);\n    if (iVar1 != *0x4654bc) {\n        iVar1 = fcn.0044c6de();\n    }\n    fcn.00454e39(iVar1, param_1, param_2, param_3);\n    return;\n}\n",
        "token_count": 113
    },
    "004557d2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004557d2(uint param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0044c752();\n    iVar1 = *(iVar1 + 100);\n    if (iVar1 != *0x4654bc) {\n        iVar1 = fcn.0044c6de();\n    }\n    fcn.00455772(iVar1, param_1, param_2);\n    return;\n}\n",
        "token_count": 103
    },
    "00455ae1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00455ae1(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint uVar1;\n    int32_t unaff_EBP;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.0044dc28(0x45bcb8, 0x14);\n    *(unaff_EBP + -0x1c) = 0;\n    *(unaff_EBP + -4) = 0;\n    uVar1 = fcn.004557f9(unaff_EBP + -0x1c, unaff_EBP + -0x20, *(unaff_EBP + 8), *(unaff_EBP + 0xc), *(unaff_EBP + 0x14)\n                        );\n    *(unaff_EBP + -0x24) = uVar1;\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.00455b26();\n    fcn.0044dc63();\n    return;\n}\n",
        "token_count": 265
    },
    "00456328": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00456328(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint uVar1;\n    int32_t unaff_EBP;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.0044dc28(0x45bce8, 0x14);\n    *(unaff_EBP + -0x1c) = 0;\n    *(unaff_EBP + -4) = 0;\n    uVar1 = fcn.00456041(unaff_EBP + -0x1c, unaff_EBP + -0x20, *(unaff_EBP + 8), *(unaff_EBP + 0xc), *(unaff_EBP + 0x14)\n                        );\n    *(unaff_EBP + -0x24) = uVar1;\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.0045636d();\n    fcn.0044dc63();\n    return;\n}\n",
        "token_count": 263
    },
    "00456c0e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00456c0e(uint param_1, uint param_2)\n\n{\n    fcn.00456ab6(param_1, param_2, 0x466020);\n    return;\n}\n",
        "token_count": 47
    },
    "00456c24": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00456c24(uint param_1, uint param_2)\n\n{\n    fcn.00456ab6(param_1, param_2, 0x466038);\n    return;\n}\n",
        "token_count": 46
    },
    "00456c3a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00456c3a(uint arg_8h, uint arg_ch)\n\n{\n    uint var_14h;\n    uint var_10h;\n    uint32_t var_4h;\n    \n    var_4h = *0x465718 ^ &stack0xfffffffc;\n    fcn.00456cc4(&var_10h, &var_14h, arg_ch, 0, 0, 0, 0);\n    fcn.00456c0e(&var_10h, arg_8h);\n    fcn.0044ce09();\n    return;\n}\n",
        "token_count": 133
    },
    "00456c7f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00456c7f(uint arg_8h, uint arg_ch)\n\n{\n    uint var_14h;\n    uint var_10h;\n    uint32_t var_4h;\n    \n    var_4h = *0x465718 ^ &stack0xfffffffc;\n    fcn.00456cc4(&var_10h, &var_14h, arg_ch, 0, 0, 0, 0);\n    fcn.00456c24(&var_10h, arg_8h);\n    fcn.0044ce09();\n    return;\n}\n",
        "token_count": 132
    },
    "004571ee": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004571ee(char *arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    char *arg_ch_00;\n    char *arg_8h_00;\n    char *pcVar1;\n    int32_t iVar2;\n    char *pcVar3;\n    char cVar4;\n    \n    arg_8h_00 = arg_8h;\n    pcVar3 = *(arg_10h + 0xc);\n    arg_ch_00 = arg_8h + 1;\n    *arg_8h = '0';\n    pcVar1 = arg_ch_00;\n    if (0 < arg_ch) {\n        arg_8h = arg_ch;\n        arg_ch = 0;\n        do {\n            cVar4 = *pcVar3;\n            if (cVar4 == '\\0') {\n                cVar4 = '0';\n            }\n            else {\n                pcVar3 = pcVar3 + 1;\n            }\n            *pcVar1 = cVar4;\n            pcVar1 = pcVar1 + 1;\n            arg_8h = arg_8h + -1;\n        } while (arg_8h != NULL);\n    }\n    *pcVar1 = '\\0';\n    if ((-1 < arg_ch) && ('4' < *pcVar3)) {\n        while (pcVar1 = pcVar1 + -1,  *pcVar1 == '9') {\n            *pcVar1 = '0';\n        }\n        *pcVar1 = *pcVar1 + '\\x01';\n    }\n    if (*arg_8h_00 == '1') {\n        *(arg_10h + 4) = *(arg_10h + 4) + 1;\n    }\n    else {\n        iVar2 = fcn.00449fa0(arg_ch_00);\n        fcn.0044af60(arg_8h_00, arg_ch_00, iVar2 + 1);\n    }\n    return;\n}\n",
        "token_count": 437
    },
    "00457692": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00457692(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    uint var_8h;\n    int32_t var_4h;\n    \n    pcVar1 = *0x459198;\n    var_4h = 0;\n    iVar2 = **0x4673f4;\n    piVar3 = *0x4673f4;\n    while( true ) {\n        if (iVar2 == 0) {\n            return 0;\n        }\n        iVar2 = (*pcVar1)(0, 0, iVar2, 0xffffffff, 0, 0, 0, 0);\n        if ((iVar2 == 0) || (var_4h = fcn.00449f7f(iVar2),  var_4h == 0)) break;\n        iVar2 = (*pcVar1)(0, 0, *piVar3, 0xffffffff, var_4h, iVar2, 0, 0);\n        if (iVar2 == 0) {\n            fcn.0044a128(var_4h);\n            return 0xffffffff;\n        }\n        iVar2 = fcn.00458307(&var_4h, 0);\n        if ((iVar2 < 0) && (var_4h != 0)) {\n            fcn.0044a128(var_4h);\n            var_4h = 0;\n        }\n        piVar3 = piVar3 + 1;\n        iVar2 = *piVar3;\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 352
    },
    "00457730": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00457730(uint8_t *arg_8h, uint8_t *arg_ch, int32_t arg_10h)\n\n{\n    uint8_t uVar1;\n    uint8_t uVar2;\n    bool bVar3;\n    \n    if (arg_10h != 0) {\n        do {\n            uVar2 = *arg_8h;\n            uVar1 = *arg_ch;\n            if ((uVar2 == 0) || (uVar1 == 0)) break;\n            arg_8h = arg_8h + 1;\n            arg_ch = arg_ch + 1;\n            if ((0x40 < uVar2) && (uVar2 < 0x5b)) {\n                uVar2 = uVar2 + 0x20;\n            }\n            if ((0x40 < uVar1) && (uVar1 < 0x5b)) {\n                uVar1 = uVar1 + 0x20;\n            }\n            bVar3 = uVar2 < uVar1;\n            if (uVar2 != uVar1) goto code_r0x00457781;\n            arg_10h = arg_10h + -1;\n        } while (arg_10h != 0);\n        arg_10h = 0;\n        bVar3 = uVar2 < uVar1;\n        if (uVar2 != uVar1) {\ncode_r0x00457781:\n            arg_10h = -1;\n            if (!bVar3) {\n                arg_10h = 1;\n            }\n        }\n    }\n    return arg_10h;\n}\n",
        "token_count": 361
    },
    "00458664": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00458664(void)\n\n{\n    uint64_t uVar1;\n    uint32_t uVar2;\n    bool bVar3;\n    float fVar4;\n    float10 in_ST0;\n    uint32_t uStack32;\n    float fStack28;\n    \n    uVar1 = ROUND(in_ST0);\n    uStack32 = uVar1;\n    fStack28 = uVar1 >> 0x20;\n    fVar4 = in_ST0;\n    if ((uStack32 != 0) || (fVar4 = fStack28,  (uVar1 & 0x7fffffff00000000) != 0)) {\n        if (fVar4 < 0) {\n            uVar2 = 0x80000000 < (in_ST0 - uVar1 ^ 0x80000000);\n            bVar3 = CARRY4(uStack32, uVar2);\n            uStack32 = uStack32 + uVar2;\n            fStack28 = fStack28 + bVar3;\n        }\n        else {\n            uVar2 = 0x80000000 < in_ST0 - uVar1;\n            bVar3 = uStack32 < uVar2;\n            uStack32 = uStack32 - uVar2;\n            fStack28 = fStack28 - bVar3;\n        }\n    }\n    return CONCAT44(fStack28, uStack32);\n}\n",
        "token_count": 305
    },
    "00404432": {
        "rules": [
            "delay execution"
        ],
        "decompiled_code": "\nuint fcn.00404432(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    int32_t *piVar2;\n    uint uVar3;\n    \n    if (*(in_EAX + 0x20) != 0) {\n        piVar2 = *(in_EAX + 0x24);\n        if (piVar2 == NULL) {\n            piVar2 = in_EAX + 0x2c;\n        }\n        iVar1 = *piVar2;\n        fcn.0040449e();\n        fcn.00421aef();\n        if (iVar1 != 0) {\n            fcn.0044951c(*(iVar1 + 4));\n            fcn.0044951c(iVar1);\n        }\n        *0x47c7a0 = 0;\n        return 1;\n    }\n    if (*(in_EAX + 0xc) == '\\0') {\n        if ((*0x47b404 == 0) && (*0x47c7a0 < 100)) {\n            *0x47c7a0 = *0x47c7a0 + 1;\n            uVar3 = 0;\n        }\n        else {\n            uVar3 = 10;\n        }\n        (*_sym.imp.KERNEL32.DLL_Sleep)(uVar3);\n    }\n    return 0;\n}\n",
        "token_count": 299
    },
    "00402347": {
        "rules": [
            "get graphical window text/640bf5383e7d4308bf669f3aa2649f29"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00402347(uint arg_8h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t *unaff_EBX;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    pcVar1 = _sym.imp.USER32.dll_SendMessageW;\n    if (((*unaff_EBX != 0) &&\n        ((*_sym.imp.USER32.dll_SendMessageW)(*unaff_EBX, 0xb0, &var_ch, &var_8h),  var_ch != var_8h)) &&\n       (iVar3 = (*pcVar1)(*unaff_EBX, 0xe, 0, 0),  iVar3 != 0)) {\n        var_4h = fcn.00449614(iVar3 * 2 + 0x202);\n        iVar4 = (*pcVar1)(*unaff_EBX, 0xd, iVar3 + 1, var_4h);\n        iVar2 = var_4h;\n        if (iVar4 != 0) {\n            if (var_8h != iVar3) {\n                *(var_4h + var_8h * 2) = 0;\n            }\n            fcn.00416e83(arg_8h, var_4h + var_ch * 2);\n            fcn.0044951c(iVar2);\n            return 1;\n        }\n        fcn.0044951c(var_4h);\n    }\n    return 0;\n}\n",
        "token_count": 353
    },
    "00403261": {
        "rules": [
            "get graphical window text/640bf5383e7d4308bf669f3aa2649f29"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00403261(uint arg_8h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t *unaff_EBX;\n    uint var_4h;\n    \n    fcn.00416e83(arg_8h, 0x45bfe0);\n    pcVar1 = _sym.imp.USER32.dll_SendMessageW;\n    if (*unaff_EBX == 0) {\n        uVar3 = 0;\n    }\n    else {\n        iVar2 = (*_sym.imp.USER32.dll_SendMessageW)(*unaff_EBX, 0xe, 0, 0);\n        if (iVar2 != 0) {\n            uVar3 = fcn.00449614(iVar2 * 2 + 2);\n            iVar2 = (*pcVar1)(*unaff_EBX, 0xd, iVar2 + 1, uVar3);\n            if (iVar2 < 1) {\n                fcn.0044951c();\n                return 0;\n            }\n            fcn.00416e83(arg_8h, uVar3);\n            fcn.0044951c(uVar3);\n        }\n        uVar3 = 1;\n    }\n    return uVar3;\n}\n",
        "token_count": 279
    },
    "00402e22": {
        "rules": [
            "parse PE header/27dc37a2d08e4034aa7bcaa8b888b251"
        ],
        "decompiled_code": "\nbool __thiscall fcn.00402e22(int32_t param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    uint in_EAX;\n    \n    *(param_1 + 4) = 0;\n    *(param_1 + 5) = 0;\n    *(param_1 + 6) = 0;\n    *(param_1 + 7) = 0;\n    *(param_1 + 8) = 1;\n    *(param_1 + 0x3c) = 0;\n    *(param_1 + 0x30) = in_EAX;\n    *(param_1 + 0x40) = 0;\n    *(param_1 + 0x44) = 1;\n    (*_sym.imp.USER32.dll_EnumChildWindows)(param_2, 0x402e70, param_1);\n    iVar1 = *(param_1 + 0x3c);\n    if (iVar1 != 0) {\n        fcn.00402a4f(iVar1);\n    }\n    return iVar1 != 0;\n}\n",
        "token_count": 243
    },
    "00449703": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nint32_t fcn.00449703(uint16_t *param_1, uint16_t *param_2)\n\n{\n    int32_t iVar1;\n    \n    while( true ) {\n        iVar1 = *param_1 - *param_2;\n        if ((iVar1 != 0) || (*param_2 == 0)) break;\n        param_1 = param_1 + 1;\n        param_2 = param_2 + 1;\n    }\n    if (iVar1 < 0) {\n        return -1;\n    }\n    if (0 < iVar1) {\n        iVar1 = 1;\n    }\n    return iVar1;\n}\n",
        "token_count": 142
    },
    "0040bb77": {
        "rules": [
            "execute .NET assembly via CLR host/2c9ef85a2fe94af39efaaae3fc9e6a8a"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0040bb77(int32_t arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    code *pcVar3;\n    ushort uVar4;\n    int32_t in_EAX;\n    uint32_t uVar5;\n    uint uVar6;\n    int32_t iVar7;\n    uint *puVar8;\n    uint *puVar9;\n    uint var_64h;\n    int32_t var_60h;\n    uint var_5ch;\n    uint var_30h;\n    uint var_20h;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint var_ch;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    uVar5 = fcn.00404081(&var_8h);\n    pcVar3 = _sym.imp.USER32.dll_SendMessageW;\n    if (uVar5 != '\\0') {\n        iVar1 = *(in_EAX + 0x54 + var_4h * 4);\n        if (*(iVar1 + 0x416c) == 0) {\n            uVar5 = var_4h & 0xffffff00;\n        }\n        else {\n            iVar7 = *(iVar1 + 0x4174);\n            var_30h = 5;\n            if ((-1 < iVar7) || (-1 < *(iVar1 + 0x4178))) {\n                var_30h = 0x27;\n                var_18h = 0;\n                var_14h = 0;\n            }\n            if (-1 < iVar7) {\n                var_14h = iVar7;\n            }\n            if (-1 < *(iVar1 + 0x4178)) {\n                var_18h = *(iVar1 + 0x4178);\n            }\n            var_20h = arg_10h;\n            var_ch = arg_ch;\n            puVar8 = &var_30h;\n            puVar9 = &var_5ch;\n            for (iVar7 = 10; iVar7 != 0; iVar7 = iVar7 + -1) {\n                *puVar9 = *puVar8;\n                puVar8 = puVar8 + 1;\n                puVar9 = puVar9 + 1;\n            }\n            var_60h = -0xffff;\n            if (*(iVar1 + 0x4170) != 0) {\n                var_60h = *(iVar1 + 0x4170);\n            }\n            puVar8 = *(iVar1 + 0x50 + var_8h * 4);\n            if (*(puVar8 + 0x1c) == '\\x10') {\n                uVar2 = *puVar8;\n                var_64h = 0xffff0000;\n            }\n            else {\n                uVar2 = puVar8[9];\n                var_64h = puVar8[2];\n            }\n            uVar6 = (*_sym.imp.USER32.dll_SendMessageW)(uVar2, 0x1132, 0, &var_64h);\n            *(arg_8h + 8) = uVar6;\n            *(arg_8h + 0x24) = uVar2;\n            uVar4 = (*pcVar3)(uVar2, 0x1105, 0, 0);\n            *(arg_8h + 0x68) = uVar4;\n            uVar2 = *(arg_8h + 8);\n            *(iVar1 + 0x4170) = uVar2;\n            uVar5 = CONCAT31(uVar2 >> 8, 1);\n        }\n    }\n    return uVar5;\n}\n",
        "token_count": 822
    },
    "0040e123": {
        "rules": [
            "execute .NET assembly via CLR host/2c9ef85a2fe94af39efaaae3fc9e6a8a"
        ],
        "decompiled_code": "\nvoid fcn.0040e123(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t *unaff_EDI;\n    int32_t *var_8h;\n    int32_t *var_4h;\n    \n    piVar1 = unaff_EDI[3];\n    var_8h = NULL;\n    var_4h = NULL;\n    if (piVar1 != NULL) {\n        (**(*piVar1 + 0x2c))(piVar1, 0xfffffffd, 0, unaff_EDI[10], 0xffffffff, *(*unaff_EDI + 0x14), unaff_EDI + 4);\n        if ((*(unaff_EDI + 0x3d) != '\\0') || (*(unaff_EDI + 0xf) != '\\0')) {\n            (***unaff_EDI[3])(unaff_EDI[3], 0x45a820, &var_8h);\n            if (var_8h != NULL) {\n                if (*(unaff_EDI + 0x3d) != '\\0') {\n                    (**(*var_8h + 0x18))(var_8h);\n                }\n                if (*(unaff_EDI + 0xf) != '\\0') {\n                    (**(*var_8h + 0x14))(var_8h);\n                }\n            }\n        }\n        (*_sym.imp.ole32.dll_OleSetContainedObject)(unaff_EDI[3], 0);\n        (***unaff_EDI[3])(unaff_EDI[3], 0x45a800, &var_4h);\n        if (var_4h != NULL) {\n            (**(*var_4h + 0x1c))(var_4h, 1, 2, 0);\n            (**(*var_4h + 8))(var_4h);\n            var_4h = NULL;\n        }\n        (**(*unaff_EDI[3] + 0x50))(unaff_EDI[3], unaff_EDI[0xe]);\n        (**(*unaff_EDI[3] + 0xc))(unaff_EDI[3], 0);\n        (**(*unaff_EDI[3] + 0x14))(unaff_EDI[3], 0, 0);\n        iVar2 = (*_sym.imp.USER32.dll_IsWindow)(unaff_EDI[2]);\n        if (iVar2 != 0) {\n            (*_sym.imp.USER32.dll_DestroyWindow)(unaff_EDI[2]);\n        }\n        (**(*unaff_EDI[3] + 8))(unaff_EDI[3]);\n        unaff_EDI[3] = 0;\n    }\n    unaff_EDI[2] = 0;\n    *(unaff_EDI + 0xf) = 0;\n    if (unaff_EDI[0xd] != 0) {\n        fcn.0044951c(unaff_EDI[0xd]);\n        unaff_EDI[0xd] = 0;\n    }\n    iVar2 = unaff_EDI[0xb];\n    if (iVar2 != 0) {\n        fcn.0040dd9b();\n        fcn.0044951c(iVar2);\n        unaff_EDI[0xb] = 0;\n    }\n    if (unaff_EDI[0xc] != 0) {\n        fcn.0044951c(unaff_EDI[0xc]);\n        unaff_EDI[0xc] = 0;\n    }\n    if (unaff_EDI[10] != 0) {\n        fcn.0044951c(unaff_EDI[10]);\n        unaff_EDI[10] = 0;\n    }\n    return;\n}\n",
        "token_count": 827
    },
    "0043c3f9": {
        "rules": [
            "create or open registry key"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.0043c3f9(uint hKey)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint lpSubKey;\n    uint var_14h;\n    uint phkResult;\n    uint var_8h;\n    uint var_1h;\n    \n    pcVar1 = _sym.imp.ADVAPI32.dll_RegEnumKeyExW;\n    var_8h = 0xff;\n    iVar2 = (*_sym.imp.ADVAPI32.dll_RegEnumKeyExW)(hKey, 0, &lpSubKey, &var_8h, 0, 0, 0, &var_14h);\n    while( true ) {\n        if (iVar2 == 0x103) {\n            return 0x101;\n        }\n        uVar3 = 0;\n        if (*0x479bc8 != '\\0') {\n            uVar3 = 0x100;\n        }\n        uVar3 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExW)(hKey, &lpSubKey, 0, uVar3 | 0x20019, &phkResult);\n        if (uVar3 != 0) break;\n        var_1h._0_1_ = fcn.0043c3f9(phkResult);\n        uVar3 = (*_sym.imp.ADVAPI32.dll_RegCloseKey)(phkResult);\n        if ((var_1h == '\\0') || (uVar3 = (*_sym.imp.ADVAPI32.dll_RegDeleteKeyW)(hKey, &lpSubKey),  uVar3 != 0)) break;\n        var_8h = 0xff;\n        iVar2 = (*pcVar1)(hKey, 0, &lpSubKey, &var_8h, 0, 0, 0, &var_14h);\n    }\n    return uVar3 & 0xffffff00;\n}\n",
        "token_count": 460
    },
    "00414715": {
        "rules": [
            "open process"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00414715(uint hWnd)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint lpdwResult;\n    uint lpdwProcessId;\n    \n    (*_sym.imp.USER32.dll_PostMessageW)(hWnd, 0x10, 0, 0);\n    iVar1 = (*_sym.imp.USER32.dll_SendMessageTimeoutW)(hWnd, 0x10, 0, 0, 2, 500, &lpdwResult);\n    if (iVar1 == 0) {\n        (*_sym.imp.USER32.dll_GetWindowThreadProcessId)(hWnd, &lpdwProcessId);\n        uVar2 = (*_sym.imp.KERNEL32.DLL_OpenProcess)(0x1f0fff, 0, lpdwProcessId);\n        (*_sym.imp.KERNEL32.DLL_TerminateProcess)(uVar2, 0);\n        (*_sym.imp.KERNEL32.DLL_CloseHandle)(uVar2);\n    }\n    return;\n}\n",
        "token_count": 221
    },
    "00429892": {
        "rules": [
            "encode data using XOR"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00429892(uint32_t arg_8h, uint arg_ch)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    \n    uVar1 = *(arg_8h + 0xc);\n    arg_8h = fcn.00418733();\n    uVar3 = 1;\n    if (1 < uVar1) {\n        do {\n            fcn.0040f269();\n            uVar2 = fcn.00418733();\n            arg_8h = arg_8h ^ uVar2;\n            uVar3 = uVar3 + 1;\n        } while (uVar3 < uVar1);\n    }\n    fcn.00418bb9(arg_8h);\n    return 0;\n}\n",
        "token_count": 178
    },
    "0044b52a": {
        "rules": [
            "create thread"
        ],
        "decompiled_code": "\nint32_t __cdecl\nfcn.0044b52a(uint lpThreadAttributes, uint dwStackSize, int32_t arg_10h, uint arg_14h, uint dwCreationFlags, \n            uint *arg_1ch)\n\n{\n    uint *puVar1;\n    int32_t arg_8h;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar2 = arg_10h;\n    iVar3 = 0;\n    if (arg_10h == 0) {\n        puVar1 = fcn.0044ddb5();\n        *puVar1 = 0x16;\n    }\n    else {\n        arg_8h = fcn.0045096f(1, 0x8c);\n        if (arg_8h != 0) {\n            fcn.0044c73f(arg_8h);\n            *(arg_8h + 4) = 0xffffffff;\n            *(arg_8h + 0x50) = arg_14h;\n            *(arg_8h + 0x4c) = iVar2;\n            puVar1 = arg_1ch;\n            if (arg_1ch == NULL) {\n                puVar1 = &arg_10h;\n            }\n            iVar2 = (**0x45931c)(lpThreadAttributes, dwStackSize, 0x44b495, arg_8h, dwCreationFlags, puVar1);\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            iVar3 = (*_sym.imp.KERNEL32.DLL_GetLastError)();\n        }\n        fcn.0044a128(arg_8h);\n        if (iVar3 != 0) {\n            fcn.0044ddc7(iVar3);\n        }\n    }\n    return 0;\n}\n",
        "token_count": 391
    },
    "004432dd": {
        "rules": [
            "get common file path"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004432dd(uint arg_8h)\n\n{\n    uint lpBuffer;\n    \n    (*_sym.imp.KERNEL32.DLL_GetTempPathA)(0x104, &lpBuffer);\n    (*_sym.imp.KERNEL32.DLL_GetTempFileNameA)(&lpBuffer, 0x462034, 0, arg_8h);\n    return;\n}\n",
        "token_count": 83
    },
    "00401bd5": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00401bd5(void)\n\n{\n    uint *puVar1;\n    int32_t unaff_ESI;\n    uint32_t uVar2;\n    \n    uVar2 = 0;\n    if (*(unaff_ESI + 8) != 0) {\n        do {\n            puVar1 = *(*(unaff_ESI + 4) + uVar2 * 4);\n            if (puVar1 != NULL) {\n                fcn.0044951c(*puVar1);\n                fcn.0044951c(puVar1);\n            }\n            *(*(unaff_ESI + 4) + uVar2 * 4) = 0;\n            uVar2 = uVar2 + 1;\n        } while (uVar2 < *(unaff_ESI + 8));\n    }\n    *(unaff_ESI + 8) = 0;\n    return;\n}\n",
        "token_count": 197
    },
    "0040258c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint fcn.0040258c(void)\n\n{\n    int32_t *in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar3 = 0;\n    if (*in_EAX == 0) {\n        uVar1 = 0;\n    }\n    else {\n        iVar2 = fcn.004025d4();\n        if (0 < iVar2) {\n            do {\n                (*_sym.imp.USER32.dll_SendMessageW)(*in_EAX, 0x102c, iVar3, 2);\n                fcn.00402503(iVar3, iVar3);\n                iVar3 = iVar3 + 1;\n            } while (iVar3 < iVar2);\n        }\n        uVar1 = 1;\n    }\n    return uVar1;\n}\n",
        "token_count": 178
    },
    "004031e9": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.004031e9(void)\n\n{\n    code *pcVar1;\n    int32_t *in_EAX;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    \n    pcVar1 = _sym.imp.USER32.dll_GetWindowLongW;\n    iVar4 = *in_EAX;\n    if (iVar4 == 0) {\n        return 0;\n    }\n    uVar2 = (*_sym.imp.USER32.dll_GetWindowLongW)(iVar4, 0xfffffff0);\n    while( true ) {\n        if ((uVar2 & 0x40000000) == 0) {\n            return iVar4;\n        }\n        iVar3 = fcn.004031cd();\n        if (iVar3 == 0) break;\n        iVar4 = fcn.004031cd();\n        uVar2 = (*pcVar1)(iVar4, 0xfffffff0);\n    }\n    return iVar4;\n}\n",
        "token_count": 213
    },
    "00403d44": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00403d44(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t in_EAX;\n    uint uVar3;\n    int32_t unaff_EBX;\n    uint32_t uVar4;\n    \n    if (in_EAX != unaff_EBX) {\n        fcn.00410987();\n        uVar4 = *(unaff_EBX + 8);\n        if (*(in_EAX + 0xc) < uVar4) {\n            *(in_EAX + 0xc) = uVar4;\n            uVar3 = fcn.00449614(uVar4 << 2);\n            fcn.0044951c(*(in_EAX + 4));\n            *(in_EAX + 4) = uVar3;\n        }\n        iVar2 = *(unaff_EBX + 8);\n        uVar4 = 0;\n        *(in_EAX + 8) = iVar2;\n        if (iVar2 != 0) {\n            do {\n                uVar3 = fcn.00449614(4);\n                *(*(in_EAX + 4) + uVar4 * 4) = uVar3;\n                iVar2 = uVar4 * 4;\n                iVar1 = uVar4 * 4;\n                uVar4 = uVar4 + 1;\n                **(*(in_EAX + 4) + iVar1) = **(*(unaff_EBX + 4) + iVar2);\n            } while (uVar4 < *(in_EAX + 8));\n        }\n    }\n    return;\n}\n",
        "token_count": 346
    },
    "0040c418": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.0040c418(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, int32_t arg_18h, int32_t arg_1ch, int32_t arg_20h, \n            int32_t arg_24h)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    int32_t *piVar3;\n    int32_t **ppiVar4;\n    int32_t *unaff_EDI;\n    \n    if (arg_20h == -1) {\n        arg_20h = 0x100;\n    }\n    if (arg_24h == -1) {\n        arg_24h = 0;\n    }\n    if (arg_18h == -1) {\n        arg_18h = 0x96;\n    }\n    if (arg_1ch == -1) {\n        arg_1ch = 0x96;\n    }\n    iVar1 = fcn.00409d87(arg_24h, 0x45c390, 0x45bfe0, arg_20h, arg_10h, arg_14h, arg_18h, arg_1ch, arg_ch, 0, 1);\n    *unaff_EDI = iVar1;\n    if (iVar1 == 0) {\n        uVar2 = 0;\n    }\n    else {\n        unaff_EDI[0xf] = -1;\n        *(unaff_EDI + 0x1a) = arg_10h;\n        *(unaff_EDI + 0x6a) = arg_14h;\n        *(unaff_EDI + 0x1b) = arg_18h;\n        *(unaff_EDI + 0x6e) = arg_1ch;\n        piVar3 = fcn.00449614(0x910);\n        piVar3[3] = 0;\n        piVar3[1] = 0;\n        unaff_EDI[0x18] = piVar3;\n        piVar3[2] = unaff_EDI;\n        *piVar3 = 0;\n        ppiVar4 = *(in_EAX + 0x4188);\n        if (ppiVar4 == NULL) {\n            *(in_EAX + 0x4188) = piVar3;\n        }\n        else {\n            for (; *ppiVar4 != NULL; ppiVar4 = *ppiVar4) {\n            }\n            *ppiVar4 = piVar3;\n        }\n        uVar2 = 1;\n    }\n    return uVar2;\n}\n",
        "token_count": 579
    },
    "0040d76a": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0040d76a(void)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    uint uVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    uint *unaff_EDI;\n    \n    pcVar2 = _sym.imp.USER32.dll_GetWindow;\n    if (unaff_EDI != NULL) {\n        if (unaff_EDI[8] == 0) {\n            uVar3 = (*_sym.imp.USER32.dll_GetWindow)(*unaff_EDI, 5);\n            pcVar1 = _sym.imp.USER32.dll_IsWindow;\n            while (iVar5 = (*pcVar1)(uVar3),  iVar5 != 0) {\n                uVar4 = (*_sym.imp.USER32.dll_SendMessageW)(uVar3, 0x87, 0, 0);\n                if ((uVar4 & 0x10) != 0) {\n                    unaff_EDI[8] = uVar3;\n                    break;\n                }\n                uVar3 = (*pcVar2)(uVar3, 2);\n            }\n        }\n        (*_sym.imp.USER32.dll_GetDlgCtrlID)(unaff_EDI[8]);\n    }\n    return;\n}\n",
        "token_count": 270
    },
    "0040d9d7": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0040d9d7(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t in_EAX;\n    \n    iVar2 = *(in_EAX + 4);\n    while (iVar2 != 0) {\n        iVar1 = *(iVar2 + 4);\n        fcn.0044951c(iVar2);\n        iVar2 = iVar1;\n    }\n    return;\n}\n",
        "token_count": 95
    },
    "0040f403": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040f403(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint var_ch;\n    \n    fcn.00401bd5();\n    iVar1 = fcn.0040f388(arg_10h, arg_1ch);\n    if (iVar1 < 1) {\n        iVar1 = 0;\n    }\n    else {\n        fcn.00416d61();\n        iVar2 = 0;\n        if (0 < iVar1) {\n            do {\n                fcn.0040f475(arg_ch, &var_ch);\n                fcn.00401b4b();\n                iVar2 = iVar2 + 1;\n            } while (iVar2 < iVar1);\n        }\n        fcn.0044951c(var_ch);\n    }\n    return iVar1;\n}\n",
        "token_count": 214
    },
    "0040fcda": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040fcda(int32_t param_1)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar2 = *(param_1 + 4);\n    if ((in_EAX <= *(param_1 + 0xc)) && (0 < in_EAX)) {\n        iVar1 = in_EAX + -1;\n        if (0 < iVar1) {\n            do {\n                iVar1 = iVar1 + -1;\n                iVar2 = *(iVar2 + 0xc);\n            } while (iVar1 != 0);\n        }\n        return *(iVar2 + 8);\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 154
    },
    "0040fd10": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0040fd10(void)\n\n{\n    uint *puVar1;\n    uint *puVar2;\n    uint32_t uVar3;\n    int32_t unaff_EDI;\n    \n    fcn.0044951c(*(unaff_EDI + 0x10));\n    puVar2 = *(unaff_EDI + 4);\n    while (puVar2 != NULL) {\n        puVar1 = puVar2[3];\n        fcn.0044951c(*puVar2);\n        fcn.0044951c(puVar2);\n        puVar2 = puVar1;\n    }\n    uVar3 = 0;\n    *(unaff_EDI + 4) = 0;\n    *(unaff_EDI + 8) = 0;\n    *(unaff_EDI + 0xc) = 0;\n    *(unaff_EDI + 0x10) = 0;\n    if (*(unaff_EDI + 0x1c) != 0) {\n        do {\n            puVar2 = fcn.00421a8a();\n            fcn.0044951c(*puVar2);\n            uVar3 = uVar3 + 1;\n        } while (uVar3 < *(unaff_EDI + 0x1c));\n    }\n    fcn.00410987();\n    fcn.00410987();\n    return;\n}\n",
        "token_count": 305
    },
    "0040fd91": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040fd91(int32_t param_1)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar2 = *(param_1 + 4);\n    if ((in_EAX <= *(param_1 + 0xc)) && (0 < in_EAX)) {\n        iVar1 = in_EAX + -1;\n        if (0 < iVar1) {\n            do {\n                iVar1 = iVar1 + -1;\n                iVar2 = *(iVar2 + 0xc);\n            } while (iVar1 != 0);\n        }\n        return *(iVar2 + 4);\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 154
    },
    "0040fed6": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0040fed6(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t unaff_EDI;\n    \n    iVar1 = fcn.0044985c();\n    if (iVar1 != 0) {\n        do {\n            iVar1 = iVar1 + -1;\n            if (iVar1 < 0) break;\n            iVar2 = fcn.0040f809(*(unaff_EDI + iVar1 * 2));\n        } while (iVar2 != 0);\n        *(unaff_EDI + 2 + iVar1 * 2) = 0;\n    }\n    return;\n}\n",
        "token_count": 141
    },
    "0040ff05": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0040ff05(void)\n\n{\n    ushort uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    ushort *unaff_ESI;\n    int32_t iVar4;\n    \n    iVar4 = 0;\n    iVar3 = 0;\n    uVar1 = *unaff_ESI;\n    while (iVar2 = fcn.0040f809(uVar1),  iVar2 != 0) {\n        iVar4 = iVar4 + 1;\n        uVar1 = unaff_ESI[iVar4];\n    }\n    for (; unaff_ESI[iVar4] != 0; iVar4 = iVar4 + 1) {\n        unaff_ESI[iVar3] = unaff_ESI[iVar4];\n        iVar3 = iVar3 + 1;\n    }\n    unaff_ESI[iVar3] = 0;\n    return;\n}\n",
        "token_count": 190
    },
    "0040ffc1": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0040ffc1(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t unaff_ESI;\n    uint *puVar3;\n    \n    if (*(unaff_ESI + 0xc) != 0) {\n        puVar3 = *(unaff_ESI + 4);\n        uVar1 = fcn.00449614(*(unaff_ESI + 0xc) << 2);\n        *(unaff_ESI + 0x10) = uVar1;\n        iVar2 = 0;\n        if (0 < *(unaff_ESI + 0xc)) {\n            do {\n                *(*(unaff_ESI + 0x10) + iVar2 * 4) = *puVar3;\n                puVar3 = puVar3[3];\n                iVar2 = iVar2 + 1;\n            } while (iVar2 < *(unaff_ESI + 0xc));\n        }\n    }\n    return;\n}\n",
        "token_count": 213
    },
    "00410987": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00410987(void)\n\n{\n    int32_t unaff_ESI;\n    uint32_t uVar1;\n    \n    uVar1 = 0;\n    if (*(unaff_ESI + 8) != 0) {\n        do {\n            fcn.0044951c(*(*(unaff_ESI + 4) + uVar1 * 4));\n            *(*(unaff_ESI + 4) + uVar1 * 4) = 0;\n            uVar1 = uVar1 + 1;\n        } while (uVar1 < *(unaff_ESI + 8));\n    }\n    *(unaff_ESI + 8) = 0;\n    return;\n}\n",
        "token_count": 154
    },
    "00410fb7": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00410fb7(int32_t param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    uint unaff_retaddr;\n    \n    fcn.00411098();\n    fcn.0041154e(*(param_1 + 0x244));\n    if (in_EAX != 0) {\n        do {\n            fcn.00411987(param_1, unaff_retaddr, param_2);\n            in_EAX = in_EAX + -1;\n        } while (in_EAX != 0);\n    }\n    fcn.0041176a(*(param_1 + 0x244));\n    return;\n}\n",
        "token_count": 148
    },
    "00413c07": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00413c07(void)\n\n{\n    uint *puVar1;\n    uint *puVar2;\n    uint *in_EAX;\n    \n    if (in_EAX[2] != 0) {\n        fcn.0044951c(in_EAX[2]);\n    }\n    puVar2 = *in_EAX;\n    while (puVar2 != NULL) {\n        puVar1 = puVar2[7];\n        fcn.0044951c(*puVar2);\n        fcn.0044951c(puVar2);\n        puVar2 = puVar1;\n    }\n    return;\n}\n",
        "token_count": 136
    },
    "00414308": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00414308(uint arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    int16_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    \n    iVar3 = 0;\n    iVar1 = fcn.00414599();\n    if (iVar1 == -1) {\n        uVar2 = 0;\n    }\n    else {\n        fcn.004145dc();\n        if (0 < arg_10h + -1) {\n            do {\n                iVar1 = fcn.00414599();\n                if (iVar1 == -1) break;\n                *(arg_ch + iVar3 * 2) = iVar1;\n                iVar3 = iVar3 + 1;\n            } while (iVar3 < arg_10h + -1);\n        }\n        *(arg_ch + iVar3 * 2) = 0;\n        uVar2 = 1;\n    }\n    return uVar2;\n}\n",
        "token_count": 214
    },
    "00415abd": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00415abd(int16_t *param_1, uint32_t param_2)\n\n{\n    uint32_t uVar1;\n    int32_t unaff_ESI;\n    \n    uVar1 = fcn.0044985c();\n    for (; (uVar1 < param_2 && (*param_1 != 0)); param_1 = param_1 + 1) {\n        *(unaff_ESI + uVar1 * 2) = *param_1;\n        uVar1 = uVar1 + 1;\n    }\n    *(unaff_ESI + uVar1 * 2) = 0;\n    return;\n}\n",
        "token_count": 143
    },
    "00416666": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00416666(uint32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t in_EDX;\n    int32_t unaff_EBX;\n    uint *puVar3;\n    uint *puVar4;\n    uint var_24h;\n    \n    puVar3 = 0x45d258;\n    puVar4 = &var_24h;\n    for (iVar2 = 8; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar4 = *puVar3;\n        puVar3 = puVar3 + 1;\n        puVar4 = puVar4 + 1;\n    }\n    *puVar4 = *puVar3;\n    for (uVar1 = in_EDX - 1; -1 < uVar1; uVar1 = uVar1 - 1) {\n        *(unaff_EBX + uVar1 * 2) = *(&var_24h + (arg_8h & 0xf) * 2);\n        arg_8h = arg_8h >> 4;\n    }\n    *(unaff_EBX + in_EDX * 2) = 0;\n    return uVar1 & 0xffffff00 | arg_8h == 0;\n}\n",
        "token_count": 294
    },
    "00417258": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00417258(int16_t *arg_8h)\n\n{\n    int32_t iVar1;\n    int16_t iVar2;\n    int32_t *in_EDX;\n    int32_t iVar3;\n    uint32_t var_4h;\n    \n    iVar1 = 0;\n    var_4h = 0;\n    if (in_EDX[1] != 0) {\n        do {\n            iVar2 = *arg_8h;\n            iVar3 = 0;\n            if (iVar2 != 0) {\n                do {\n                    if (*(*in_EDX + iVar1 * 2) == iVar2) {\n                        return iVar1;\n                    }\n                    iVar3 = iVar3 + 1;\n                    iVar2 = arg_8h[iVar3];\n                } while (iVar2 != 0);\n            }\n            iVar1 = iVar1 + 1;\n            var_4h = var_4h + 1;\n        } while (var_4h < in_EDX[1]);\n    }\n    return -1;\n}\n",
        "token_count": 231
    },
    "004172a3": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004172a3(uint arg_8h)\n\n{\n    uint32_t uVar1;\n    uint32_t in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t in_ECX;\n    uint32_t uVar4;\n    uint var_4h;\n    \n    if (in_EAX < *(in_ECX + 4)) {\n        uVar2 = fcn.0044985c(arg_8h);\n        uVar1 = *(in_ECX + 4);\n        uVar4 = 0;\n        if (uVar1 != 0) {\n            do {\n                iVar3 = fcn.004175f5(uVar2);\n                if (iVar3 == 0) {\n                    return uVar4;\n                }\n                uVar4 = uVar4 + 1;\n            } while (uVar4 < uVar1);\n        }\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 209
    },
    "00417eaa": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00417eaa(void)\n\n{\n    int32_t iVar1;\n    int32_t unaff_ESI;\n    uint32_t uVar2;\n    \n    uVar2 = 0;\n    if (*(unaff_ESI + 0xc) != 0) {\n        do {\n            iVar1 = *(*(unaff_ESI + 8) + uVar2 * 4);\n            if (iVar1 != 0) {\n                fcn.004388f7(iVar1, 1);\n            }\n            *(*(unaff_ESI + 8) + uVar2 * 4) = 0;\n            uVar2 = uVar2 + 1;\n        } while (uVar2 < *(unaff_ESI + 0xc));\n    }\n    *(unaff_ESI + 0xc) = 0;\n    return;\n}\n",
        "token_count": 188
    },
    "00418170": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint * fcn.00418170(uint *param_1)\n\n{\n    uint *in_EAX;\n    int32_t iVar1;\n    uint *puVar2;\n    \n    puVar2 = *in_EAX;\n    while( true ) {\n        while( true ) {\n            if (puVar2 == NULL) {\n                return NULL;\n            }\n            iVar1 = fcn.00449703(*puVar2, *param_1);\n            if (-1 < iVar1) break;\n            puVar2 = puVar2[5];\n        }\n        if (iVar1 < 1) break;\n        puVar2 = puVar2[6];\n    }\n    return puVar2;\n}\n",
        "token_count": 150
    },
    "004182c1": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.004182c1(uint *param_1)\n\n{\n    uint *puVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    uint *puVar3;\n    int32_t unaff_EDI;\n    \n    puVar1 = *in_EAX;\n    if (*in_EAX == NULL) {\n        *in_EAX = unaff_EDI;\n    }\n    else {\n        do {\n            while (puVar3 = puVar1,  iVar2 = fcn.00449703(*puVar3, *param_1),  iVar2 < 0) {\n                puVar1 = puVar3[5];\n                if (puVar3[5] == NULL) {\n                    puVar3[5] = unaff_EDI;\n                    return;\n                }\n            }\n            puVar1 = puVar3[6];\n        } while (puVar3[6] != NULL);\n        puVar3[6] = unaff_EDI;\n    }\n    return;\n}\n",
        "token_count": 221
    },
    "00420b7b": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint fcn.00420b7b(void)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    int32_t *piVar2;\n    uint uVar3;\n    int32_t unaff_EDI;\n    ulong uVar4;\n    uint var_2ch;\n    int32_t **var_24h;\n    int32_t var_20h;\n    uint var_1ch;\n    uint var_14h;\n    uint var_ch;\n    uint var_1h;\n    \n    var_ch = 0xffffffff;\n    var_2ch = 0x45d544;\n    var_24h = NULL;\n    var_20h = 0;\n    var_1ch = 0;\n    var_1h._0_1_ = '\\0';\n    do {\n        uVar4 = fcn.0040fd7d();\n        iVar1 = uVar4 >> 0x20;\n        if (uVar4 == 0) break;\n        *in_EAX = iVar1 + 1;\n        *(unaff_EDI + 0x28c) = iVar1;\n        iVar1 = fcn.00428899(unaff_EDI, &var_2ch);\n        if (iVar1 != 0) {\ncode_r0x00420c26:\n            uVar3 = 1;\n            goto code_r0x00420c18;\n        }\n        piVar2 = &var_14h;\n        if (var_20h != 0) {\n            piVar2 = *var_24h;\n        }\n        if (piVar2[2] == 0) {\n            piVar2 = &var_14h;\n            if (var_20h != 0) {\n                piVar2 = *var_24h;\n            }\n            if (*piVar2 == 0x1f) {\n                fcn.0041fdea(0x83, 0xffffffff);\n                goto code_r0x00420c26;\n            }\n        }\n        piVar2 = &var_14h;\n        if (var_20h != 0) {\n            piVar2 = *var_24h;\n        }\n        if (piVar2[2] == 0) {\n            piVar2 = &var_14h;\n            if (var_20h != 0) {\n                piVar2 = *var_24h;\n            }\n            if (*piVar2 == 0x20) {\n                var_1h._0_1_ = '\\x01';\n            }\n        }\n    } while (var_1h == '\\0');\n    uVar3 = 0;\ncode_r0x00420c18:\n    fcn.0042190c();\n    return uVar3;\n}\n",
        "token_count": 626
    },
    "004219d4": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.004219d4(void)\n\n{\n    int32_t *piVar1;\n    int32_t unaff_EBX;\n    uint unaff_EDI;\n    int32_t iVar2;\n    uint in_stack_fffffff8;\n    \n    iVar2 = *(unaff_EBX + 4);\n    while (iVar2 != 0) {\n        iVar2 = *(iVar2 + 0x30);\n        unaff_EDI = 1;\n        fcn.00421b10();\n        in_stack_fffffff8 = unaff_EDI;\n    }\n    fcn.0041858e();\n    piVar1 = unaff_EBX + 0x18;\n    fcn.004189fc(unaff_EDI, in_stack_fffffff8);\n    iVar2 = *(unaff_EBX + 0x20);\n    if (iVar2 == 8) {\n        if (*piVar1 != 0) {\n            (**0x4593cc)(*piVar1);\n        }\n        fcn.0044951c(*piVar1);\n    }\n    else {\n        if (iVar2 == 10) {\n            iVar2 = *piVar1;\n            if (iVar2 == 0) goto code_r0x004185f6;\n            fcn.0044951c(*(iVar2 + 8));\n        }\n        else {\n            if (iVar2 == 5) {\n                fcn.00419f8b();\n                fcn.00419f2d();\n                goto code_r0x004185f9;\n            }\n            if (iVar2 != 0xb) goto code_r0x004185f9;\n            fcn.0044951c(*(*piVar1 + 4));\n            iVar2 = *piVar1;\n        }\n        fcn.0044951c(iVar2);\n    }\ncode_r0x004185f6:\n    *piVar1 = 0;\ncode_r0x004185f9:\n    *piVar1 = 0;\n    *(unaff_EBX + 0x20) = 1;\n    return;\n}\n",
        "token_count": 450
    },
    "00421bda": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00421bda(void)\n\n{\n    int32_t iVar1;\n    int32_t unaff_ESI;\n    uint32_t uVar2;\n    \n    uVar2 = 0;\n    if (*(unaff_ESI + 0xc) != 0) {\n        do {\n            iVar1 = *(*(unaff_ESI + 8) + uVar2 * 4);\n            if (iVar1 != 0) {\n                fcn.00421c34(iVar1, 1);\n            }\n            *(*(unaff_ESI + 8) + uVar2 * 4) = 0;\n            uVar2 = uVar2 + 1;\n        } while (uVar2 < *(unaff_ESI + 0xc));\n    }\n    *(unaff_ESI + 0xc) = 0;\n    return;\n}\n",
        "token_count": 188
    },
    "00421c07": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00421c07(void)\n\n{\n    int32_t iVar1;\n    int32_t unaff_ESI;\n    uint32_t uVar2;\n    \n    uVar2 = 0;\n    if (*(unaff_ESI + 8) != 0) {\n        do {\n            iVar1 = *(*(unaff_ESI + 4) + uVar2 * 4);\n            if (iVar1 != 0) {\n                fcn.00421c55(iVar1, 1);\n            }\n            *(*(unaff_ESI + 4) + uVar2 * 4) = 0;\n            uVar2 = uVar2 + 1;\n        } while (uVar2 < *(unaff_ESI + 8));\n    }\n    *(unaff_ESI + 8) = 0;\n    return;\n}\n",
        "token_count": 185
    },
    "00428fb6": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00428fb6(int32_t arg_8h, int32_t *arg_ch, int32_t lpsz)\n\n{\n    uint16_t uVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    int32_t in_ECX;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    \n    iVar4 = 0;\n    iVar3 = 0;\n    while ((((uVar1 = *(in_ECX + *in_EAX * 2),  0x40 < uVar1 && (uVar1 < 0x5b)) || ((0x60 < uVar1 && (uVar1 < 0x7b))))\n           || (((0x2f < uVar1 && (uVar1 < 0x3a)) || (uVar1 == 0x5f))))) {\n        *(lpsz + iVar3 * 2) = uVar1;\n        iVar3 = iVar3 + 1;\n        *in_EAX = *in_EAX + 1;\n    }\n    *(lpsz + iVar3 * 2) = 0;\n    (**0x459430)(lpsz);\n    do {\n        iVar3 = fcn.00449703(*(iVar4 * 4 + 0x4669a8), lpsz);\n        if (iVar3 == 0) {\n            fcn.00418097(0);\n            if (uVar1 == 0x24) {\n                *arg_ch = -1;\n                return;\n            }\n            *arg_ch = iVar4;\n            return;\n        }\n        iVar4 = iVar4 + 1;\n    } while (iVar4 < 0x2a);\n    iVar4 = 0;\n    iVar3 = *(arg_8h + 0x6f0) + -1;\n    if (-1 < iVar3) {\n        do {\n            iVar5 = (iVar3 + iVar4) / 2;\n            iVar2 = fcn.00449703(lpsz, *(*(arg_8h + 0x6ec) + iVar5 * 0x28));\n            if (iVar2 < 0) {\n                iVar3 = iVar5 + -1;\n            }\n            else {\n                if (iVar2 < 1) break;\n                iVar4 = iVar5 + 1;\n            }\n        } while (iVar4 <= iVar3);\n        if (iVar4 <= iVar3) {\n            fcn.00418097(1);\n            *arg_ch = iVar5;\n            return;\n        }\n    }\n    fcn.00418097(0x10);\n    fcn.0041804c(lpsz);\n    return;\n}\n",
        "token_count": 590
    },
    "004290ae": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004290ae(int32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t unaff_EBX;\n    uint32_t var_4h;\n    \n    if (unaff_EBX != arg_8h) {\n        fcn.00421bda();\n        uVar1 = *(arg_8h + 0xc);\n        if (*(unaff_EBX + 0x10) < uVar1) {\n            *(unaff_EBX + 0x10) = uVar1;\n            uVar2 = fcn.00449614(uVar1 << 2);\n            fcn.0044951c(*(unaff_EBX + 8));\n            *(unaff_EBX + 8) = uVar2;\n        }\n        iVar3 = *(arg_8h + 0xc);\n        var_4h = 0;\n        *(unaff_EBX + 0xc) = iVar3;\n        if (iVar3 != 0) {\n            do {\n                iVar3 = fcn.00449614(0x10);\n                if (iVar3 == 0) {\n                    iVar3 = 0;\n                }\n                else {\n                    *(iVar3 + 8) = 0xffffffff;\n                }\n                *(var_4h * 4 + *(unaff_EBX + 8)) = iVar3;\n                fcn.00417fb5();\n                var_4h = var_4h + 1;\n            } while (var_4h < *(unaff_EBX + 0xc));\n        }\n    }\n    return;\n}\n",
        "token_count": 361
    },
    "004297c0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004297c0(uint32_t arg_8h, uint arg_ch)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    \n    uVar1 = *(arg_8h + 0xc);\n    arg_8h = fcn.00418733();\n    uVar3 = 1;\n    if (1 < uVar1) {\n        do {\n            fcn.0040f269();\n            uVar2 = fcn.00418733();\n            arg_8h = arg_8h & uVar2;\n            uVar3 = uVar3 + 1;\n        } while (uVar3 < uVar1);\n    }\n    fcn.00418bb9(arg_8h);\n    return 0;\n}\n",
        "token_count": 179
    },
    "00429813": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00429813(uint32_t arg_8h, uint arg_ch)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    \n    uVar1 = *(arg_8h + 0xc);\n    arg_8h = fcn.00418733();\n    uVar3 = 1;\n    if (1 < uVar1) {\n        do {\n            fcn.0040f269();\n            uVar2 = fcn.00418733();\n            arg_8h = arg_8h | uVar2;\n            uVar3 = uVar3 + 1;\n        } while (uVar3 < uVar1);\n    }\n    fcn.00418bb9(arg_8h);\n    return 0;\n}\n",
        "token_count": 178
    },
    "0042a62c": {
        "rules": [
            "contain loop",
            "list drag and drop files",
            "open clipboard",
            "read clipboard data"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0042a62c(uint noname_0, uint arg_ch)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint var_224h;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_8h;\n    int32_t var_4h;\n    \n    fcn.00416d61();\n    fcn.00418c7e(0x45bfe0);\n    (**0x459434)(*0x467a00);\n    pcVar1 = *0x459438;\n    iVar2 = (**0x459438)(0xd);\n    if (iVar2 == 0) {\n        iVar2 = (*pcVar1)(1);\n        if (iVar2 != 0) {\n            iVar2 = (**0x45943c)(1);\n            if (iVar2 != 0) {\n                iVar3 = (**0x4592cc)(iVar2);\n                if (iVar3 != 0) {\n                    uVar4 = fcn.004169d1(iVar3);\n                    fcn.00418c7e(uVar4);\n                    fcn.0044951c(uVar4);\n                    goto code_r0x0042a697;\n                }\n                goto code_r0x0042a6c4;\n            }\n            goto code_r0x0042a67a;\n        }\n        iVar2 = (*pcVar1)(0xf);\n        if (iVar2 == 0) {\n            (**0x459444)();\n            fcn.00421898(0);\ncode_r0x0042a7e4:\n            (**0x459440)();\n            goto code_r0x0042a7ea;\n        }\n        iVar2 = (**0x45943c)(0xf);\n        if (iVar2 == 0) {\n            (**0x459440)();\n        }\n        else {\n            iVar3 = (**0x4592cc)(iVar2);\n            pcVar1 = *0x459404;\n            if (iVar3 != 0) {\n                var_18h = (**0x459404)(iVar2, 0xffffffff, 0, 0);\n                var_18h = var_18h + -1;\n                var_4h = 0;\n                if (0 < var_18h) {\n                    do {\n                        (*pcVar1)(iVar2, var_4h, &var_224h, 0x104);\n                        fcn.00417064(&var_224h);\n                        fcn.00416f01(10);\n                        var_4h = var_4h + 1;\n                    } while (var_4h < var_18h);\n                }\n                (*pcVar1)(iVar2, var_4h, &var_224h, 0x104);\n                fcn.00417064(&var_224h);\n                fcn.00418cb1();\n                (**0x4592c4)(iVar2);\n                fcn.004218c6(0);\n                goto code_r0x0042a7e4;\n            }\n            (**0x459440)();\n        }\n    }\n    else {\n        iVar2 = (**0x45943c)(0xd);\n        if (iVar2 != 0) {\n            iVar3 = (**0x4592cc)(iVar2);\n            if (iVar3 != 0) {\n                fcn.00418c7e(iVar3);\ncode_r0x0042a697:\n                (**0x4592c4)(iVar2);\n                goto code_r0x0042a7e4;\n            }\ncode_r0x0042a6c4:\n            (**0x459440)();\n            goto code_r0x0042a72b;\n        }\ncode_r0x0042a67a:\n        (**0x459440)();\n    }\ncode_r0x0042a72b:\n    fcn.00421898(0);\ncode_r0x0042a7ea:\n    fcn.0044951c(var_14h);\n    return 0;\n}\n",
        "token_count": 893
    },
    "0042cf49": {
        "rules": [
            "contain loop",
            "log keystrokes"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0042cf49(uint noname_0, uint arg_ch)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    pcVar1 = _sym.imp.USER32.dll_LoadCursorW;\n    var_50h = (*_sym.imp.USER32.dll_LoadCursorW)(0, 0x7f8a);\n    var_4ch = (*pcVar1)(0, 0x7f00);\n    var_48h = (*pcVar1)(0, 0x7f03);\n    var_44h = (*pcVar1)(0, 0x7f8b);\n    var_40h = (*pcVar1)(0, 0x7f01);\n    var_3ch = (*pcVar1)(0, 0x7f81);\n    var_38h = (*pcVar1)(0, 0x7f88);\n    var_34h = (*pcVar1)(0, 0x7f80);\n    var_30h = (*pcVar1)(0, 0x7f86);\n    var_2ch = (*pcVar1)(0, 0x7f83);\n    var_28h = (*pcVar1)(0, 0x7f85);\n    var_24h = (*pcVar1)(0, 0x7f82);\n    var_20h = (*pcVar1)(0, 0x7f84);\n    var_1ch = (*pcVar1)(0, 0x7f04);\n    var_18h = (*pcVar1)(0, 0x7f02);\n    (*_sym.imp.USER32.dll_GetCursorPos)(&var_10h);\n    var_4h = (*_sym.imp.USER32.dll_WindowFromPoint)(var_10h, var_ch);\n    pcVar2 = _sym.imp.USER32.dll_GetWindowThreadProcessId;\n    uVar3 = (*_sym.imp.USER32.dll_GetWindowThreadProcessId)(var_4h, 0, 1);\n    pcVar1 = _sym.imp.KERNEL32.DLL_GetCurrentThreadId;\n    uVar3 = (*_sym.imp.KERNEL32.DLL_GetCurrentThreadId)(uVar3);\n    (*_sym.imp.USER32.dll_AttachThreadInput)(uVar3);\n    var_8h = (**0x459450)();\n    uVar3 = (*pcVar2)(var_4h, 0, 0);\n    uVar3 = (*pcVar1)(uVar3);\n    (*_sym.imp.USER32.dll_AttachThreadInput)(uVar3);\n    iVar4 = 0;\n    do {\n        if ((var_8h != 0) && (var_8h == (&var_50h)[iVar4])) break;\n        iVar4 = iVar4 + 1;\n    } while (iVar4 < 0xf);\n    if (iVar4 < 0xf) {\n        iVar4 = iVar4 + 1;\n    }\n    else {\n        iVar4 = 0;\n    }\n    fcn.00418bb9(iVar4);\n    return 0;\n}\n",
        "token_count": 828
    },
    "004304b6": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.004304b6(int32_t param_1)\n\n{\n    uint uVar1;\n    uint *puVar2;\n    uint *unaff_ESI;\n    uint32_t uVar3;\n    \n    *unaff_ESI = 0x45d4d0;\n    unaff_ESI[3] = *(param_1 + 0xc);\n    unaff_ESI[6] = 0;\n    unaff_ESI[8] = 1;\n    unaff_ESI[9] = 0;\n    unaff_ESI[4] = unaff_ESI[3];\n    uVar1 = fcn.00449614(unaff_ESI[3] << 2);\n    uVar3 = 0;\n    unaff_ESI[2] = uVar1;\n    if (unaff_ESI[3] != 0) {\n        do {\n            uVar1 = 0x10;\n            puVar2 = fcn.00449614(0x10);\n            if (puVar2 == NULL) {\n                puVar2 = NULL;\n            }\n            else {\n                *puVar2 = 0;\n                puVar2[2] = 1;\n                puVar2[3] = 0;\n            }\n            *(unaff_ESI[2] + uVar3 * 4) = puVar2;\n            fcn.00418a19(uVar1, *(*(param_1 + 8) + uVar3 * 4));\n            uVar3 = uVar3 + 1;\n        } while (uVar3 < unaff_ESI[3]);\n    }\n    return;\n}\n",
        "token_count": 359
    },
    "00431738": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00431738(void)\n\n{\n    int32_t unaff_ESI;\n    \n    while (*(unaff_ESI + 0x670) != 0) {\n        fcn.00421a3d();\n    }\n    if (*0x478408 != '\\0') {\n        (**(**0x478404 + 8))(*0x478404);\n    }\n    fcn.00418c7e(0x45bfe0);\n    if (*0x478409 != '\\0') {\n        (*_sym.imp.ole32.dll_OleUninitialize)();\n        *0x478409 = '\\0';\n    }\n    return;\n}\n",
        "token_count": 141
    },
    "00436e7c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00436e7c(uint arg_8h, int32_t *arg_ch)\n\n{\n    uint *puVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint in_ECX;\n    uint uVar4;\n    uint in_stack_fffffec4;\n    uint in_stack_fffffec8;\n    uint var_118h;\n    uint var_18h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_18h = 0;\n    var_ch = 0;\n    var_4h = 0;\n    var_10h = 1;\n    iVar2 = fcn.0040f269();\n    var_8h = *(iVar2 + 0xc);\n    do {\n        iVar2 = fcn.0040f269();\n        if (*(iVar2 + 8) != 0x13) {\n            fcn.00419f46();\n            iVar2 = 0;\n            if (0 < var_4h) {\n                do {\n                    fcn.00419f66();\n                    iVar2 = iVar2 + 1;\n                } while (iVar2 < var_4h);\n            }\n            uVar4 = 0;\n            iVar2 = fcn.0041a132(0);\n            *arg_ch = iVar2;\n            if (iVar2 == 0) {\ncode_r0x00436f5f:\n                fcn.0041fdea(in_stack_fffffec4, in_stack_fffffec8);\ncode_r0x00436f67:\n                uVar4 = 1;\n            }\n            fcn.0041858e();\n            return uVar4;\n        }\n        *in_EAX = *in_EAX + 1;\n        iVar2 = fcn.0040f269();\n        in_stack_fffffec8 = *(iVar2 + 0xc);\n        iVar2 = fcn.00437a3e(in_ECX, in_EAX, &fcn.00436e7c::var_18h);\n        if (iVar2 != 0) goto code_r0x00436f67;\n        iVar2 = fcn.00418733();\n        if (iVar2 < 0) {\ncode_r0x00436f8b:\n            in_stack_fffffec4 = 0x7b;\n            goto code_r0x00436f5f;\n        }\n        iVar2 = *in_EAX;\n        iVar3 = fcn.0040f269();\n        if (*(iVar3 + 8) != 0x14) {\n            iVar2 = fcn.0040f269();\n            in_stack_fffffec8 = *(iVar2 + 0xc);\n            goto code_r0x00436f8b;\n        }\n        *in_EAX = iVar2 + 1;\n        in_stack_fffffec8 = 0x436f08;\n        uVar4 = fcn.00418733();\n        puVar1 = &fcn.00436e7c::var_118h + var_4h;\n        var_4h = var_4h + 1;\n        *puVar1 = uVar4;\n    } while( true );\n}\n",
        "token_count": 718
    },
    "00438879": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00438879(void)\n\n{\n    int32_t *piVar1;\n    int32_t unaff_EDI;\n    int32_t iVar2;\n    \n    iVar2 = *(unaff_EDI + 4);\n    while (iVar2 != 0) {\n        iVar2 = *(iVar2 + 0x10);\n        fcn.004388f7();\n    }\n    piVar1 = unaff_EDI + 8;\n    fcn.004189fc();\n    iVar2 = *(unaff_EDI + 0x10);\n    if (iVar2 == 8) {\n        if (*piVar1 != 0) {\n            (**0x4593cc)(*piVar1);\n        }\n        fcn.0044951c(*piVar1);\n    }\n    else {\n        if (iVar2 == 10) {\n            iVar2 = *piVar1;\n            if (iVar2 == 0) goto code_r0x004185f6;\n            fcn.0044951c(*(iVar2 + 8));\n        }\n        else {\n            if (iVar2 == 5) {\n                fcn.00419f8b();\n                fcn.00419f2d();\n                goto code_r0x004185f9;\n            }\n            if (iVar2 != 0xb) goto code_r0x004185f9;\n            fcn.0044951c(*(*piVar1 + 4));\n            iVar2 = *piVar1;\n        }\n        fcn.0044951c(iVar2);\n    }\ncode_r0x004185f6:\n    *piVar1 = 0;\ncode_r0x004185f9:\n    *piVar1 = 0;\n    *(unaff_EDI + 0x10) = 1;\n    return;\n}\n",
        "token_count": 392
    },
    "0043ca29": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint fcn.0043ca29(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint32_t uVar4;\n    int32_t unaff_EDI;\n    \n    uVar1 = *(unaff_EDI + 8);\n    uVar4 = 0;\n    if (uVar1 != 0) {\n        do {\n            iVar2 = fcn.00421a8a();\n            if (*(iVar2 + 0x2c) == param_1) {\n                uVar3 = fcn.00421a8a();\n                return uVar3;\n            }\n            uVar4 = uVar4 + 1;\n        } while (uVar4 < uVar1);\n    }\n    return 0;\n}\n",
        "token_count": 177
    },
    "00443c4c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nbool fcn.00443c4c(void)\n\n{\n    uint8_t *in_EAX;\n    uint8_t *puVar1;\n    uint8_t *puVar2;\n    \n    puVar1 = in_EAX + 1;\n    if ((*(*in_EAX + 0x45a1c8) & 4) != 0) {\n        while ((*(*puVar1 + 0x45a1c8) & 4) != 0) {\n            puVar1 = puVar1 + 1;\n        }\n        if (*puVar1 == 0x7d) {\n            return true;\n        }\n        if (*puVar1 == 0x2c) {\n            if (puVar1[1] == 0x7d) {\n                return true;\n            }\n            puVar2 = puVar1 + 2;\n            if ((*(puVar1[1] + 0x45a1c8) & 4) != 0) {\n                while ((*(*puVar2 + 0x45a1c8) & 4) != 0) {\n                    puVar2 = puVar2 + 1;\n                }\n                return *puVar2 == 0x7d;\n            }\n        }\n    }\n    return false;\n}\n",
        "token_count": 281
    },
    "004495f8": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint16_t * fcn.004495f8(int16_t *param_1, int16_t *param_2)\n\n{\n    int16_t iVar1;\n    int16_t *piVar2;\n    \n    piVar2 = param_1;\n    do {\n        iVar1 = *param_2;\n        *piVar2 = iVar1;\n        piVar2 = piVar2 + 1;\n        param_2 = param_2 + 1;\n    } while (iVar1 != 0);\n    return param_1;\n}\n",
        "token_count": 117
    },
    "00449c37": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint16_t * fcn.00449c37(int16_t *param_1, int16_t *param_2)\n\n{\n    int16_t iVar1;\n    int16_t *piVar2;\n    int16_t iVar3;\n    \n    iVar3 = *param_1;\n    if (iVar3 != 0) {\n        iVar1 = *param_2;\n        piVar2 = param_2;\n        do {\n            while (iVar1 != 0) {\n                if (iVar1 == iVar3) {\n                    return param_1;\n                }\n                iVar1 = piVar2[1];\n                piVar2 = piVar2 + 1;\n            }\n            param_1 = param_1 + 1;\n            iVar3 = *param_1;\n            iVar1 = *param_2;\n            piVar2 = param_2;\n        } while (iVar3 != 0);\n    }\n    return NULL;\n}\n",
        "token_count": 201
    },
    "00449cd4": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nulong fcn.00449cd4(int32_t param_1, uint param_2)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    uchar in_ZF;\n    uint16_t in_FPUControlWord;\n    uint16_t in_FPUStatusWord;\n    unkbyte10 extraout_ST0;\n    float10 fVar4;\n    uint64_t uVar5;\n    uint unaff_retaddr;\n    uint32_t arg_8h;\n    \n    uVar5 = fcn.0044e365();\n    arg_8h = uVar5 >> 0x20 & 0xffff0000 | in_FPUControlWord;\n    if (in_ZF) {\n        if (((uVar5 & 0xfffff) == 0) && (param_1 == 0)) {\n            uVar1 = 1;\n        }\n        else {\n            uVar1 = fcn.0044e34c();\n        }\n        if (*0x467594 == 0) {\n            uVar3 = fcn.0044e4c7(arg_8h, unaff_retaddr, param_1, param_2);\n            return CONCAT44(arg_8h, uVar3);\n        }\n    }\n    else {\n        fVar4 = fcos(extraout_ST0);\n        uVar1 = uVar5 & 0xffff0000 | in_FPUStatusWord;\n        if ((in_FPUStatusWord & 0x400) != 0) {\n            do {\n                fVar4 = fVar4 - (fVar4 / *0x45acfa) * *0x45acfa;\n                uVar1 = uVar1 & 0xffff0000 | in_FPUStatusWord;\n            } while ((in_FPUStatusWord & 0x400) != 0);\n            fcos(fVar4);\n        }\n        if (*0x467594 == 0) {\n            uVar2 = uVar1 & 0xffff0000 | in_FPUControlWord;\n            if (in_FPUControlWord != 0x27f) {\n                if (((in_FPUControlWord & 0x20) != 0) &&\n                   (uVar2 = uVar1 & 0xffff0000 | in_FPUStatusWord,  (in_FPUStatusWord & 0x20) != 0)) {\n                    uVar3 = fcn.0044e4c7(arg_8h, unaff_retaddr, param_1, param_2);\n                    return CONCAT44(arg_8h, uVar3);\n                }\n                uVar2 = uVar2 & 0xffff0020;\n            }\n            return CONCAT44(arg_8h, uVar2);\n        }\n    }\n    return CONCAT44(arg_8h, uVar1);\n}\n",
        "token_count": 614
    },
    "00449d84": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nulong fcn.00449d84(int32_t param_1, uint param_2)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    uchar in_ZF;\n    uint16_t in_FPUControlWord;\n    uint16_t in_FPUStatusWord;\n    unkbyte10 extraout_ST0;\n    float10 fVar4;\n    uint64_t uVar5;\n    uint unaff_retaddr;\n    uint32_t arg_8h;\n    \n    uVar5 = fcn.0044e365();\n    arg_8h = uVar5 >> 0x20 & 0xffff0000 | in_FPUControlWord;\n    if (in_ZF) {\n        if (((uVar5 & 0xfffff) == 0) && (param_1 == 0)) {\n            uVar1 = 1;\n        }\n        else {\n            uVar1 = fcn.0044e34c();\n        }\n        if (*0x467594 == 0) {\n            uVar3 = fcn.0044e4c7(arg_8h, unaff_retaddr, param_1, param_2);\n            return CONCAT44(arg_8h, uVar3);\n        }\n    }\n    else {\n        fVar4 = fsin(extraout_ST0);\n        uVar1 = uVar5 & 0xffff0000 | in_FPUStatusWord;\n        if ((in_FPUStatusWord & 0x400) != 0) {\n            do {\n                fVar4 = fVar4 - (fVar4 / *0x45acfa) * *0x45acfa;\n                uVar1 = uVar1 & 0xffff0000 | in_FPUStatusWord;\n            } while ((in_FPUStatusWord & 0x400) != 0);\n            fsin(fVar4);\n        }\n        if (*0x467594 == 0) {\n            uVar2 = uVar1 & 0xffff0000 | in_FPUControlWord;\n            if (in_FPUControlWord != 0x27f) {\n                if (((in_FPUControlWord & 0x20) != 0) &&\n                   (uVar2 = uVar1 & 0xffff0000 | in_FPUStatusWord,  (in_FPUStatusWord & 0x20) != 0)) {\n                    uVar3 = fcn.0044e4c7(arg_8h, unaff_retaddr, param_1, param_2);\n                    return CONCAT44(arg_8h, uVar3);\n                }\n                uVar2 = uVar2 & 0xffff0020;\n            }\n            return CONCAT44(arg_8h, uVar2);\n        }\n    }\n    return CONCAT44(arg_8h, uVar1);\n}\n",
        "token_count": 614
    },
    "0044a6a9": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.0044a6a9(uint8_t *param_1)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint8_t *puVar5;\n    \n    iVar1 = fcn.0044c752();\n    iVar1 = *(iVar1 + 100);\n    if (iVar1 != *0x4654bc) {\n        iVar1 = fcn.0044c6de();\n    }\n    while( true ) {\n        if (*(iVar1 + 0x28) < 2) {\n            uVar2 = *(*(iVar1 + 0x48) + *param_1 * 2) & 8;\n        }\n        else {\n            uVar2 = fcn.0044f091(iVar1, *param_1, 8);\n        }\n        if (uVar2 == 0) break;\n        param_1 = param_1 + 1;\n    }\n    uVar2 = *param_1;\n    puVar5 = param_1 + 1;\n    if ((uVar2 == 0x2d) || (uVar3 = uVar2,  uVar2 == 0x2b)) {\n        uVar3 = *puVar5;\n        puVar5 = param_1 + 2;\n    }\n    iVar1 = 0;\n    while( true ) {\n        if ((uVar3 < 0x30) || (0x39 < uVar3)) {\n            iVar4 = -1;\n        }\n        else {\n            iVar4 = uVar3 - 0x30;\n        }\n        if (iVar4 == -1) break;\n        iVar1 = iVar4 + iVar1 * 10;\n        uVar3 = *puVar5;\n        puVar5 = puVar5 + 1;\n    }\n    if (uVar2 == 0x2d) {\n        iVar1 = -iVar1;\n    }\n    return iVar1;\n}\n",
        "token_count": 443
    },
    "0044b5b5": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint16_t * fcn.0044b5b5(int16_t *param_1, int16_t param_2)\n\n{\n    while( true ) {\n        if (*param_1 == 0) {\n            if (param_2 != 0) {\n                param_1 = NULL;\n            }\n            return param_1;\n        }\n        if (*param_1 == param_2) break;\n        param_1 = param_1 + 1;\n    }\n    return param_1;\n}\n",
        "token_count": 109
    },
    "0044b607": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0044b607(int16_t *arg_8h, int16_t *arg_ch)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    int16_t *piVar3;\n    int16_t iVar4;\n    int16_t *piVar5;\n    uint var_4h;\n    \n    iVar2 = fcn.0044c752();\n    if (arg_8h == NULL) {\n        arg_8h = *(iVar2 + 0x1c);\n    }\n    iVar4 = *arg_8h;\n    if (iVar4 != 0) {\n        iVar1 = *arg_ch;\n        piVar3 = arg_ch;\n        do {\n            while ((iVar1 != 0 && (iVar1 != iVar4))) {\n                iVar1 = piVar3[1];\n                piVar3 = piVar3 + 1;\n            }\n            if (*piVar3 == 0) break;\n            arg_8h = arg_8h + 1;\n            iVar4 = *arg_8h;\n            iVar1 = *arg_ch;\n            piVar3 = arg_ch;\n        } while (iVar4 != 0);\n    }\n    piVar3 = arg_8h;\n    if (*arg_8h != 0) {\n        do {\n            piVar5 = arg_ch;\n            if (*arg_ch != 0) {\n                iVar4 = *arg_ch;\n                do {\n                    if (iVar4 == *piVar3) break;\n                    piVar5 = piVar5 + 1;\n                    iVar4 = *piVar5;\n                } while (iVar4 != 0);\n            }\n            if (*piVar5 != 0) {\n                *piVar3 = 0;\n                piVar3 = piVar3 + 1;\n                break;\n            }\n            piVar3 = piVar3 + 1;\n        } while (*piVar3 != 0);\n    }\n    *(iVar2 + 0x1c) = piVar3;\n    return -(arg_8h != piVar3) & arg_8h;\n}\n",
        "token_count": 459
    },
    "0044ddc7": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0044ddc7(uint32_t param_1)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    \n    iVar1 = fcn.0044c752();\n    *(iVar1 + 0xc) = param_1;\n    uVar2 = 0;\n    do {\n        if (param_1 == *(uVar2 * 8 + 0x465720)) {\n            iVar1 = fcn.0044c752();\n            *(iVar1 + 8) = *(uVar2 * 8 + 0x465724);\n            return;\n        }\n        uVar2 = uVar2 + 1;\n    } while (uVar2 < 0x2d);\n    if ((0x12 < param_1) && (param_1 < 0x25)) {\n        iVar1 = fcn.0044c752();\n        *(iVar1 + 8) = 0xd;\n        return;\n    }\n    if ((0xbb < param_1) && (param_1 < 0xcb)) {\n        iVar1 = fcn.0044c752();\n        *(iVar1 + 8) = 8;\n        return;\n    }\n    iVar1 = fcn.0044c752();\n    *(iVar1 + 8) = 0x16;\n    return;\n}\n",
        "token_count": 292
    },
    "00453719": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00453719(void)\n\n{\n    uint16_t uVar1;\n    bool bVar2;\n    uint16_t *puVar3;\n    \n    bVar2 = false;\n    puVar3 = *0x480b84;\n    if (*0x480b84 == NULL) {\n        puVar3 = 0x45bfe0;\n    }\n    do {\n        uVar1 = *puVar3;\n        if (uVar1 < 0x21) {\n            if (uVar1 == 0) {\n                return;\n            }\n            if (!bVar2) {\n                for (; (*puVar3 != 0 && (*puVar3 < 0x21)); puVar3 = puVar3 + 1) {\n                }\n                return;\n            }\n        }\n        if (uVar1 == 0x22) {\n            bVar2 = !bVar2;\n        }\n        puVar3 = puVar3 + 1;\n    } while( true );\n}\n",
        "token_count": 217
    },
    "0044b29d": {
        "rules": [
            "link function at runtime on Windows",
            "terminate process"
        ],
        "decompiled_code": "\nvoid fcn.0044b29d noreturn (void)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    uint unaff_retaddr;\n    \n    iVar1 = (*_sym.imp.KERNEL32.DLL_GetModuleHandleA)(0x45aa1c);\n    if (iVar1 != 0) {\n        pcVar2 = (*_sym.imp.KERNEL32.DLL_GetProcAddress)(iVar1, 0x45aa0c);\n        if (pcVar2 != NULL) {\n            (*pcVar2)(unaff_retaddr);\n        }\n    }\n    (*_sym.imp.KERNEL32.DLL_ExitProcess)(unaff_retaddr);\n    pcVar2 = swi(3);\n    (*pcVar2)();\n    return;\n}\n",
        "token_count": 166
    },
    "0042a483": {
        "rules": [
            "get graphical window text"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0042a483(uint noname_0, uint arg_ch)\n\n{\n    uchar auStack65540 [65512];\n    uint uStack28;\n    uchar *puStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint uStack12;\n    \n    fcn.0044c510();\n    uStack12 = 0x7fff;\n    puStack16 = &stack0xfffefffc;\n    uStack20 = *0x467a00;\n    puStack24 = 0x42a4a9;\n    (*_sym.imp.USER32.dll_GetWindowTextW)();\n    puStack24 = &stack0xfffefffc;\n    uStack28 = 0x42a4b8;\n    fcn.00418c7e();\n    return 0;\n}\n",
        "token_count": 179
    },
    "00415a30": {
        "rules": [
            "delete directory"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00415a30(uint arg_8h, uint arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint var_22ch;\n    uint lpFileOp;\n    uint var_1ch;\n    uint *var_18h;\n    uint var_14h;\n    ushort var_10h;\n    uint var_eh;\n    uint var_ah;\n    uint var_6h;\n    \n    fcn.00415029(arg_8h);\n    uVar1 = fcn.00415010(&var_22ch);\n    if (uVar1 == '\\0') {\n        return uVar1;\n    }\n    if (arg_ch == '\\0') {\n        uVar1 = (*_sym.imp.KERNEL32.DLL_RemoveDirectoryW)();\n        uVar1 = uVar1 & 0xffffff00 | uVar1 != 0;\n    }\n    else {\n        iVar2 = fcn.0044985c(&var_22ch);\n        *(&var_22ch + iVar2 * 2 + 2) = 0;\n        var_18h = &var_22ch;\n        var_14h = 0;\n        var_ah = 0;\n        var_6h = 0;\n        var_eh = 0;\n        lpFileOp = 0;\n        var_1ch = 3;\n        var_10h = 0x614;\n        iVar2 = (**0x4593e8)(&lpFileOp);\n        uVar1 = -iVar2 & 0xffffff00U | 1 - (iVar2 != 0);\n    }\n    return uVar1;\n}\n",
        "token_count": 366
    },
    "00455d9f": {
        "rules": [
            "get geographical location"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00455d9f(uint Locale)\n\n{\n    int32_t iVar1;\n    uint lpLCData;\n    uchar var_6h;\n    uint32_t var_4h;\n    \n    var_4h = *0x465718 ^ &stack0xfffffffc;\n    var_6h = 0;\n    iVar1 = (**0x459358)(Locale, 0x1004, &lpLCData, 6);\n    if (iVar1 != 0) {\n        fcn.0044a621(&lpLCData);\n    }\n    fcn.0044ce09();\n    return;\n}\n",
        "token_count": 137
    }
}