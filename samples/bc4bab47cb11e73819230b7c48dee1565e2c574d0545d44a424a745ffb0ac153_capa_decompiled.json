{
    "00401000": {
        "rules": [
            "decompress data using aPLib/06666ba0b6a14a5481e4ee6eb664d454"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0040107c)\n// WARNING: Removing unreachable block (ram,0x00401040)\n// WARNING: Removing unreachable block (ram,0x0040108f)\n// WARNING: Removing unreachable block (ram,0x0040102d)\n\nuint32_t __cdecl fcn.00401000(uint32_t arg_8h, uint32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    // [00] -r-x section size 110592 named .text\n    uVar1 = arg_8h & 0xffff;\n    if ((arg_8h == 4) && (arg_8h = uVar1,  (arg_ch & 0xff) == 0x2c)) {\n        fcn.00401673(4, 4, arg_ch & 0xffff);\n    }\n    return arg_8h;\n}\n",
        "token_count": 218
    },
    "00401673": {
        "rules": [
            "decompress data using aPLib/06666ba0b6a14a5481e4ee6eb664d454"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00401763)\n// WARNING: Removing unreachable block (ram,0x004017ad)\n// WARNING: Removing unreachable block (ram,0x00401da5)\n// WARNING: Removing unreachable block (ram,0x00401aae)\n// WARNING: Removing unreachable block (ram,0x004016d0)\n// WARNING: Removing unreachable block (ram,0x00401d58)\n// WARNING: Removing unreachable block (ram,0x00401ad7)\n// WARNING: Removing unreachable block (ram,0x00401a8f)\n// WARNING: Removing unreachable block (ram,0x004016fb)\n// WARNING: Removing unreachable block (ram,0x00401692)\n// WARNING: Removing unreachable block (ram,0x00401b0c)\n// WARNING: Removing unreachable block (ram,0x00401af3)\n// WARNING: Removing unreachable block (ram,0x00401c9c)\n// WARNING: Removing unreachable block (ram,0x00401c49)\n// WARNING: Removing unreachable block (ram,0x00401b4c)\n// WARNING: Removing unreachable block (ram,0x00401c64)\n// WARNING: Removing unreachable block (ram,0x00401cee)\n// WARNING: Removing unreachable block (ram,0x00401dc1)\n\nuint32_t __cdecl fcn.00401673(uint32_t arg_8h, uint32_t arg_ch, uint32_t arg_10h)\n\n{\n    uint8_t uVar1;\n    uint8_t uVar2;\n    uint8_t uVar3;\n    uint16_t uVar4;\n    uint16_t uVar5;\n    int32_t iVar6;\n    uint8_t uVar7;\n    int16_t iVar8;\n    uint32_t uVar9;\n    int32_t iVar10;\n    uint32_t uVar11;\n    uint32_t uVar12;\n    uint var_80h;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint uSize;\n    uint lpBuffer;\n    uint var_4ch;\n    uint var_48h;\n    uint32_t var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint lParam;\n    uint var_34h;\n    uint lpEnumFunc;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    uint8_t *var_10h;\n    uint var_ch;\n    uint8_t *var_8h;\n    uint var_4h;\n    \n    uVar12 = 0xff;\n    uVar11 = arg_10h & 0xff;\n    var_8h = *0x43900c;\n    var_10h = *0x43900c + -(uVar11 * 0xff + -0x2bd4);\n    var_14h = uVar11 + 0x1f934;\n    while( true ) {\n        while( true ) {\n            if (var_14h == (uVar11 ^ 0xff) - 0xd3) {\n                if (arg_ch - uVar11 == 0xffffffd8) {\n                    *0x439014 = var_10h - *((arg_ch - uVar11 ^ 0xff) + 0xe0dcccb1 ^ 0xe09f5bd4) >> 3;\n                    uVar12 = 0;\n                }\n                return uVar12;\n            }\n            if (7 < var_14h) break;\n            *var_10h = var_8h[0x2c - (arg_10h & 0xff)];\n            uVar9 = (arg_10h & 0xff) % 0xd9;\n            var_10h = var_10h + ((arg_10h & 0xff) - 0x2b);\n            uVar2 = 0x67 / uVar9;\n            if (uVar2 < 2) {\n                return uVar2;\n            }\n            var_8h = var_8h + 1;\n            if (0x2c < uVar9) {\n                return uVar9;\n            }\n            var_14h = var_14h - ((uVar9 ^ 0x67) - 0x4a);\n        }\n        uVar4 = arg_10h;\n        uVar2 = arg_10h + 0x5b;\n        if (uVar2 < -0x79) {\n            return arg_10h & 0xffff;\n        }\n        if ((uVar2 | 0x5a) == 0xde) {\n            return arg_10h & 0xffff;\n        }\n        uVar7 = uVar2 * arg_8h;\n        uVar1 = uVar7 ^ uVar2;\n        if (uVar4 == 0x2b) {\n            return uVar2;\n        }\n        uVar3 = arg_8h * uVar1;\n        if (uVar1 < 0x9b) break;\n        iVar10 = ((var_8h[((uVar2 | 0x5a) & uVar4) - 0xc] * 0x1000000 + *var_8h * 0x10000) -\n                 ((arg_10h & 0xffff) * uVar7 + -0x4d0)) + var_8h[(arg_8h & 0xff & arg_10h & 0xffff) - 4] * 0x100 +\n                 var_8h[(uVar1 ^ uVar3) - 0xf7];\n        if (uVar1 < -0x65) {\n            return uVar1;\n        }\n        iVar6 = (uVar1 - (arg_10h & 0xffff)) + -0x6f;\n        if (0x2c < uVar4) {\n            return uVar3;\n        }\n        var_44h = 0;\n        if (uVar4 != 0x2c) {\n            (*_sym.imp.USER32.dll_EnumWindows)(arg_10h & 0xffff | uVar3, (arg_10h & 0xffff) * 0xd1c5 - uVar3);\n        }\n        if (*(var_8h + ((uVar3 + (arg_10h & 0xffff) + -0x98) * 4 - iVar6)) == iVar10) {\n            iVar8 = arg_ch;\n            if (4 < iVar8) {\n                return arg_ch & 0xffff;\n            }\n            var_44h = *(var_8h + (((arg_ch & 0xffff) - 3) * 4 - iVar6)) == iVar10;\n            uVar5 = iVar8 + uVar4;\n            if (iVar8 != 4) {\n                (*_sym.imp.MSVCRT.dll__tell)(arg_ch & 0xffff, uVar5, uVar5 * (uVar5 & 0x1eb9), uVar5);\n            }\n        }\n        if (uVar4 != 0x2c) {\n            return arg_10h & 0xffff;\n        }\n        if (var_44h == uVar3 * (arg_10h & 0xffff) - 0x1290) {\n            *var_10h = *var_8h;\n            var_10h = var_10h + 1;\n            var_8h = var_8h + 1;\n            var_14h = var_14h + -1;\n        }\n        else {\n            if (arg_8h == 3) {\n                return 3;\n            }\n            var_14h = var_14h - ((arg_8h | 0xc57) - 0xc4f);\n            var_8h = var_8h + ((arg_8h | 0x4ba6) - 0x4b9e);\n        }\n    }\n    return arg_10h & 0xffff;\n}\n",
        "token_count": 1842
    },
    "00401ee9": {
        "rules": [
            "decompress data using aPLib/06666ba0b6a14a5481e4ee6eb664d454"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00401ee9(uint32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t arg_10h;\n    uint32_t uVar3;\n    uint32_t noname_0;\n    uint var_8h;\n    uint var_4h;\n    \n    noname_0 = arg_8h + 1;\n    uVar3 = noname_0;\n    if (noname_0 != 0) {\n        arg_10h = noname_0 + (noname_0 & arg_8h);\n        if (arg_10h < 1) {\n            (*_sym.imp.KERNEL32.dll_HeapSize)(noname_0 - (arg_10h | 0x4a7ffe19), arg_10h * noname_0 * arg_10h, arg_10h);\n        }\n        uVar3 = arg_10h;\n        if (((arg_10h != 0) && (uVar3 = arg_8h | noname_0 | noname_0,  noname_0 != 0)) &&\n           (uVar1 = uVar3 << 8,  uVar3 = uVar1,  uVar1 != 0xff)) {\n            if (uVar1 == 0x100) {\n                noname_0 = fcn.004029ca(noname_0, noname_0, arg_10h);\n            }\n            uVar2 = noname_0 >> 3;\n            uVar3 = noname_0;\n            if (-1 < uVar1) {\n                if (0 < arg_8h) {\n                    (*_sym.imp.MSVCRT.dll_free)(arg_8h & uVar2 & 0xffff, uVar2 & 0xffff, arg_10h);\n                }\n                uVar3 = arg_10h;\n                if ((uVar2 & 0xffff) * 0x68bd0000 != 0) {\n                    uVar3 = uVar2 & 0xffff;\n                }\n            }\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 476
    },
    "004028a0": {
        "rules": [
            "decompress data using aPLib/06666ba0b6a14a5481e4ee6eb664d454"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004029a2)\n\nuint32_t __cdecl fcn.004028a0(uint32_t arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t arg_8h_00;\n    uint32_t arg_8h_01;\n    uint var_4h;\n    \n    arg_8h = (arg_8h ^ 0x65) - arg_8h;\n    arg_8h_01 = arg_8h & 0xff;\n    if (arg_8h == 0x5a) {\n        uVar2 = arg_8h ^ 0xf200;\n    }\n    else {\n        uVar2 = arg_8h_01;\n        if ((0x47 < (arg_8h_01 & 0x68)) && (arg_8h_01 < 0x5c)) {\n            arg_8h_00 = ((arg_ch - arg_10h) + 0x3600U & 0xff) >> 2;\n            uVar1 = (arg_8h / arg_8h & 0xff ^ 0xd2) & arg_8h;\n            uVar2 = arg_8h;\n            if (arg_8h != 0x5a) {\n                if (uVar1 == 0x53) {\n                    uVar1 = fcn.00402d76(arg_8h_00, 0x53, arg_8h_00);\n                    uVar1 = uVar1 & 0xff;\n                }\n                uVar2 = uVar1 + 1 & 0xff;\n                if (arg_8h_00 == 0x1a) {\n                    if (arg_8h == 0x5b) {\n                        fcn.004032c4(arg_8h_01, 0x5b);\n                    }\n                    uVar2 = arg_8h / arg_8h & 0xffff;\n                }\n            }\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 474
    },
    "00402f94": {
        "rules": [
            "decompress data using aPLib/06666ba0b6a14a5481e4ee6eb664d454"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.00402f94(uint32_t arg_8h, int32_t arg_ch, uint32_t arg_10h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t arg_10h_00;\n    uint32_t uVar3;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar3 = arg_10h + 0xcb8c0000 & 0xffff;\n    iVar2 = (arg_10h ^ 0xd800) - uVar3;\n    if (iVar2 != 0xd800) {\n        (*_sym.imp.KERNEL32.dll_GetProcessVersion)(iVar2);\n    }\n    uVar1 = uVar3;\n    if (uVar3 < 0xfe) {\n        arg_8h = arg_8h ^ 0x999e00;\n        arg_10h_00 = arg_8h >> 3;\n        uVar1 = arg_10h;\n        if ((arg_10h != 0xfc) && (var_8h._0_2_ = arg_8h,  uVar1 = uVar3,  arg_10h_00 != 0x132758)) {\n            if (arg_8h == 0x993ac8) {\n                var_8h._0_2_ = fcn.00403443(arg_10h, 0x993ac8, arg_10h_00);\n            }\n            if (0xfd < arg_ch + var_8h * -0x1c000000) {\n                (*_sym.imp.KERNEL32.dll_FindNextFileW)(uVar3 * uVar3, uVar3 | 0x4807);\n            }\n            uVar1 = arg_10h_00;\n            if (var_8h == 0xffff) {\n                uVar1 = 0xffff;\n            }\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 448
    },
    "004031ef": {
        "rules": [
            "decompress data using aPLib/06666ba0b6a14a5481e4ee6eb664d454"
        ],
        "decompiled_code": "\nuint32_t fcn.004031ef(uint32_t param_1, uint32_t param_2)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    bool bVar3;\n    \n    uVar2 = param_2 * 2 - (param_1 & 0xffff) & 0xffff;\n    if (uVar2 != 0xffff) {\n        uVar2 = (param_2 & 0xffff) - param_1 & 0xffff;\n        if (uVar2 != 0) {\n            (*_sym.imp.KERNEL32.dll_DisconnectNamedPipe)(uVar2 - 0x3267);\n        }\n        if ((-1 < uVar2) && (uVar2 = (param_2 & 0xc37d) - param_2 & 0xffff,  uVar2 != 0xffff)) {\n            if (uVar2 == 0) {\n                uVar2 = fcn.004012a8(uVar2, uVar2);\n                uVar2 = uVar2 & 0xffff;\n            }\n            uVar1 = uVar2 * 0x100;\n            bVar3 = uVar2 == 0;\n            uVar2 = uVar1;\n            if (((bVar3) && (uVar2 = uVar1 & 0xffff,  uVar2 == 0)) && (uVar2 = (uVar2 ^ 0x462ce04) & uVar2,  -1 < uVar1)\n               ) {\n                uVar2 = 0;\n            }\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 357
    },
    "00403443": {
        "rules": [
            "decompress data using aPLib/06666ba0b6a14a5481e4ee6eb664d454"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004034ba)\n// WARNING: Removing unreachable block (ram,0x00403620)\n// WARNING: Removing unreachable block (ram,0x0040345e)\n// WARNING: Removing unreachable block (ram,0x00403644)\n// WARNING: Removing unreachable block (ram,0x00403496)\n\nuint32_t __cdecl fcn.00403443(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    code *pcVar1;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    code *var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    pcVar1 = resource.1;\n    var_10h = *0x439010;\n    var_18h = 0x1944;\n    while( true ) {\n        if (var_18h == 0) {\n            *0x439010 = var_10h;\n            return 0x6c980000;\n        }\n        if (arg_8h == 0xfc) {\n            return 0xf6;\n        }\n        if (arg_8h == 0xfc) {\n            return arg_ch;\n        }\n        *var_10h = pcVar1[(arg_8h & 0xf6) - 0xf4];\n        if (arg_ch == 0x3ac7) break;\n        var_10h = var_10h + 1;\n        pcVar1 = pcVar1 + 1;\n        var_18h = var_18h - (arg_ch - 0x3ac7);\n    }\n    return 0x3ac7;\n}\n",
        "token_count": 431
    },
    "00403c93": {
        "rules": [
            "decompress data using aPLib/06666ba0b6a14a5481e4ee6eb664d454"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00403ccf)\n// WARNING: Removing unreachable block (ram,0x00403d6d)\n// WARNING: Removing unreachable block (ram,0x00403d87)\n// WARNING: Removing unreachable block (ram,0x00403dca)\n// WARNING: Removing unreachable block (ram,0x00403ce4)\n\nuint32_t __cdecl fcn.00403c93(uint32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint var_4h;\n    \n    uVar2 = arg_8h & 0xffff;\n    if (uVar2 < 0x9aaa) {\n        uVar1 = uVar2 | 0x2a54;\n        if (uVar1 < 0xbafe) {\n            uVar2 = uVar1 & 0xff;\n            if ((arg_8h + 0x5c990a1f & 0xffff) == 0xa4c8) {\n                uVar2 = fcn.00402f94(0xa4c8, uVar2, uVar2);\n                uVar2 = uVar2 & 0xff;\n            }\n            if ((arg_8h & 0xffff) != 0x9aa8) {\n                uVar1 = uVar1 - 1 & 0xffff;\n                if ((uVar2 == 0x59) && (fcn.00401fe2(0, uVar1, 0),  uVar2 = uVar1,  uVar1 % 0x60 != 0x3c)) {\n                    uVar2 = 0;\n                }\n            }\n        }\n        else {\n            uVar2 = 0;\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 399
    },
    "004010b3": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004010c9)\n\nuint32_t __cdecl fcn.004010b3(uint arg_8h, uint noname_1, uint32_t arg_10h, uint arg_14h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint var_4h;\n    \n    uVar2 = arg_10h & 0xffff;\n    if (uVar2 != 0) {\n        (*_sym.imp.MSVCRT.dll_scanf)(arg_10h & 0xffff, arg_10h + 0xf100);\n    }\n    uVar1 = uVar2;\n    if ((((0x3ffff < arg_10h) && (arg_10h == 0x40000)) && (uVar1 = arg_10h,  -1 < uVar2)) &&\n       (uVar1 = 1,  (uVar2 + 1 & 0xffff) == 1)) {\n        uVar2 = fcn.00403115(0x40000, 0xa7e3);\n        uVar1 = 0xa7e3;\n        if (-1 < uVar2) {\n            if ((uVar2 & 0xffff) == 0xffff) {\n                (*_sym.imp.KERNEL32.dll_AllocConsole)();\n            }\n            uVar1 = uVar2;\n            if (arg_8h < '\\x04') {\n                uVar1 = arg_8h;\n            }\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 344
    },
    "null": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0040155f)\n// WARNING: Removing unreachable block (ram,0x00401540)\n// WARNING: Removing unreachable block (ram,0x00401605)\n// WARNING: Removing unreachable block (ram,0x00401520)\n// WARNING: Removing unreachable block (ram,0x00401589)\n// WARNING: Removing unreachable block (ram,0x004015ac)\n\nuint32_t main(void)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint hMailslot;\n    \n    uVar2 = 0xf2;\n    uVar1 = (*_sym.imp.KERNEL32.dll_DeleteFileW)(0);\n    uVar1 = uVar1 & 0xff;\n    if (uVar1 == '\\0') {\n        uVar2 = fcn.0040365a(uVar1, 0x7e);\n        uVar2 = uVar2 & 0xff;\n    }\n    else {\n        (*_sym.imp.KERNEL32.dll_MapUserPhysicalPagesScatter)(uVar1 - 4, 0xf2, uVar1 | 0x2613);\n    }\n    return uVar1 - (uVar2 & 0xdd1a) & 0xff;\n}\n",
        "token_count": 278
    },
    "00401dd3": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00401e97)\n// WARNING: Removing unreachable block (ram,0x00401e44)\n// WARNING: Removing unreachable block (ram,0x00401e6e)\n// WARNING: Removing unreachable block (ram,0x00401dfc)\n\nulong __cdecl fcn.00401dd3(uint arg_8h, uint32_t arg_ch, uint32_t arg_10h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint var_4h;\n    \n    uVar3 = (arg_ch & 0xff) + 0x5f110000 & 0xff;\n    uVar1 = 0;\n    uVar2 = (uVar3 ^ 0xd300) - arg_10h;\n    if (uVar3 != 0x3b) {\n        uVar1 = arg_10h * 0x2b510000;\n        uVar2 = uVar1 | 0x39224e88;\n        if (uVar1 < 0x26fc0001) {\n            uVar1 = fcn.00401ee9(0);\n            uVar2 = arg_10h | 0x5cda9673;\n            if (uVar1 < 2) {\n                if (uVar1 < 2) {\n                    uVar2 = uVar1 & 0x40;\n                }\n                else {\n                    uVar2 = 0;\n                    uVar1 = 0;\n                }\n            }\n        }\n    }\n    return CONCAT44(uVar2, uVar1);\n}\n",
        "token_count": 361
    },
    "00401fe2": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0040207f)\n// WARNING: Removing unreachable block (ram,0x0040204e)\n// WARNING: Removing unreachable block (ram,0x00402031)\n// WARNING: Removing unreachable block (ram,0x0040201e)\n// WARNING: Removing unreachable block (ram,0x00402040)\n// WARNING: Removing unreachable block (ram,0x0040209e)\n// WARNING: Removing unreachable block (ram,0x004020ff)\n// WARNING: Removing unreachable block (ram,0x00401ffc)\n\nuint32_t __cdecl fcn.00401fe2(uint32_t arg_8h, uint noname_1, uint32_t arg_10h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint var_4h;\n    \n    uVar2 = 4;\n    uVar1 = fcn.00401000(4, 0x2c);\n    uVar1 = (uVar1 & 0xff) - 1;\n    uVar3 = uVar1 & 0xff;\n    if ((uVar3 < 4) && (fcn.004010b3(4, 4, 0x40000, 0x40000),  (arg_8h ^ 0x8f1faeca | arg_10h) < -0x70e05135)) {\n        if (uVar3 < 3) {\n            uVar2 = 0xe921;\n        }\n        else {\n            uVar2 = uVar3;\n            if (uVar3 < 4) {\n                uVar2 = uVar1 & 0x21 ^ 0x67;\n            }\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 396
    },
    "004011e3": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00401226)\n// WARNING: Removing unreachable block (ram,0x00401215)\n// WARNING: Removing unreachable block (ram,0x004011fb)\n\nuint32_t fcn.004011e3(void)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar2 = fcn.00403992();\n    if (uVar2 != 0x80ffffff) {\n        cVar1 = uVar2;\n        if (cVar1 == -1) {\n            uVar2 = 0xdeed551;\n        }\n        else if (cVar1 != -1) {\n            if (uVar2 == 0x80ffffff) {\n                uVar2 = 0xdeed551;\n            }\n            else {\n                uVar2 = (uVar2 ^ 0x69a0) - uVar2 >> 3;\n                if (-1 < cVar1) {\n                    uVar2 = 0xdeed551;\n                }\n            }\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 250
    },
    "004012a8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0040149d)\n// WARNING: Removing unreachable block (ram,0x004012f2)\n// WARNING: Removing unreachable block (ram,0x004014ce)\n// WARNING: Removing unreachable block (ram,0x004012c7)\n// WARNING: Removing unreachable block (ram,0x00401352)\n// WARNING: Removing unreachable block (ram,0x0040137d)\n// WARNING: Removing unreachable block (ram,0x00401321)\n// WARNING: Removing unreachable block (ram,0x0040147a)\n\nuint16_t __cdecl fcn.004012a8(uint arg_8h, uint arg_ch)\n\n{\n    uint16_t uVar1;\n    int32_t iVar2;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uchar *var_4h;\n    \n    var_4h = 0x403fee;\n    var_14h = *0x43900c;\n    var_18h = 0x17b08;\n    while( true ) {\n        if (var_18h == 0) {\n            *0x439010 = var_14h;\n            return 0;\n        }\n        iVar2 = arg_ch * 0x10000;\n        if (arg_ch != 0) break;\n        uVar1 = arg_8h % 0xe;\n        if (arg_ch != 0) {\n            return arg_8h;\n        }\n        *(var_14h + (arg_8h - uVar1)) = *var_4h;\n        var_14h = var_14h + iVar2 * uVar1 + 1;\n        var_4h = var_4h + 1;\n        var_18h = var_18h - (iVar2 + uVar1 + 1);\n    }\n    return arg_ch;\n}\n",
        "token_count": 466
    },
    "00402110": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004025de)\n// WARNING: Removing unreachable block (ram,0x00402882)\n// WARNING: Removing unreachable block (ram,0x0040214a)\n// WARNING: Removing unreachable block (ram,0x00402853)\n// WARNING: Removing unreachable block (ram,0x004023f7)\n\nuint32_t __cdecl fcn.00402110(uint32_t arg_8h, uint32_t arg_ch, uint32_t arg_10h, uint32_t arg_14h)\n\n{\n    uint8_t uVar1;\n    uint8_t uVar2;\n    uint16_t uVar3;\n    int16_t iVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    uint8_t uVar8;\n    uint32_t uVar9;\n    uint8_t uVar10;\n    uint16_t uVar11;\n    uint32_t uVar12;\n    uint32_t uVar13;\n    uint32_t uVar14;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint value;\n    uint lpFileSizeHigh;\n    uint32_t var_44h;\n    uint8_t *var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    int32_t var_30h;\n    uint var_2ch;\n    uint hWnd;\n    uint var_24h;\n    int32_t var_20h;\n    uint hObj;\n    uint var_18h;\n    uint32_t var_14h;\n    uint ARG_1;\n    uint var_ch;\n    uint pSIRequested;\n    uint ARG_0;\n    \n    uVar14 = arg_10h & 0xffff;\n    uVar12 = uVar14 >> 1;\n    if (-1 < uVar12) {\n        uVar9 = arg_ch + 0x1e + arg_8h;\n        uVar13 = arg_ch | arg_10h;\n        uVar10 = uVar12 * (uVar14 ^ uVar13);\n        if (uVar13 < 1) {\n            uVar8 = arg_8h * -0x6b;\n            if (uVar9 == 0x1d) {\n                uVar14 = uVar8;\n            }\n            else {\n                uVar5 = uVar12 ^ uVar14;\n                uVar14 = uVar12;\n                if (uVar13 != 0xffffffff) {\n                    iVar6 = *((uVar5 + 0xd126eb0b ^ 0xd1672b3f) + ((uVar12 ^ uVar9) - 0x1e) * 4) -\n                            ((uVar12 ^ uVar9) - 0x1e);\n                    if (uVar8 != 0) {\n                        (*_sym.imp.USER32.dll_wvsprintfA)(uVar9 + uVar13, uVar8, uVar10 * uVar9 * uVar9);\n                    }\n                    uVar8 = uVar10 * uVar12;\n                    uVar14 = uVar13;\n                    if (uVar10 == 0) {\n                        var_20h = (iVar6 + (uVar12 & uVar9)) - (iVar6 - uVar10 * uVar13);\n                        if (uVar8 < '\\0') {\n                            uVar14 = 0;\n                        }\n                        else {\n                            for (; *(var_20h + uVar12 * -2) != uVar9 + uVar12 + 0x5a2f;\n                                var_20h = var_20h - ((arg_8h ^ 0xba) + 0xff46)) {\n                                uVar14 = (arg_8h ^ 0xba) + 0x37224e9a;\n                                if (uVar14 != 0x37224f54) {\n                                    (*_sym.imp.USER32.dll_ArrangeIconicWindows)(uVar14 * -0x32b90000);\n                                }\n                                if (0x37224f54 < uVar14) {\n                                    return uVar14;\n                                }\n                            }\n                            iVar6 = var_20h - ((uVar12 ^ uVar9 & 0xff) - 0x1e);\n                            uVar14 = (arg_14h - uVar12) + 0xe9c9f2ce;\n                            if (uVar12 == 0xffff) {\n                                (*_sym.imp.USER32.dll_SetUserObjectSecurity)(0, uVar9 & 0x3f | uVar14, uVar14);\n                            }\n                            iVar6 = (var_20h +\n                                    *(((iVar6 + *(iVar6 + (uVar9 + (uVar9 & 0xff) + -0x2d) * 4)) -\n                                      ((uVar14 ^ uVar9) + 0x16360d30)) + (uVar8 ^ uVar9) * 4)) -\n                                    ((uVar9 & 0xff & (arg_8h | 0xb)) - 10);\n                            uVar14 = arg_ch;\n                            if (uVar8 < '\\x01') {\n                                var_30h = var_20h + *(iVar6 + (uVar9 * arg_ch + 8) * 4) + uVar12;\n                                for (var_14h = *(iVar6 + ((uVar9 & 0xff) - 0x18) * 4) - (uVar9 & 0xff ^ uVar9);\n                                    var_14h != (uVar9 + (arg_8h & 0x93aa2da7)) * arg_10h;\n                                    var_14h = var_14h - ((arg_14h & 0xff) + 1)) {\n                                    uVar10 = -arg_8h | 0xc;\n                                    var_40h = *(var_30h +\n                                               (arg_14h & 0xff) * ((arg_ch ^ 0xd531 | arg_14h & 0xff) + 1) * 4) +\n                                              var_20h;\n                                    uVar13 = arg_14h | 0x1488;\n                                    var_44h = (uVar13 & uVar10) - 8;\n                                    uVar10 = uVar10 * (uVar13 | uVar10);\n                                    if (uVar13 < 0x1488) {\n                                        return uVar10;\n                                    }\n                                    while (var_40h[(arg_14h & 0xff) + uVar10 + -0x90] != (uVar10 ^ arg_14h) - 0x90) {\n                                        uVar5 = arg_14h ^ 0xc665 | 0xc583;\n                                        if (0xc7e7 < uVar5) {\n                                            (*_sym.imp.KERNEL32.dll_GetCompressedFileSizeA)(uVar5 & 0x9e, uVar5);\n                                        }\n                                        if (uVar5 < 0xc7e7) {\n                                            return uVar5;\n                                        }\n                                        uVar5 = (uVar5 >> 1) % (uVar5 >> 1);\n                                        uVar3 = uVar5 + (arg_8h & 0xdf);\n                                        if (uVar5 == 0xffffffff) {\n                                            return uVar3;\n                                        }\n                                        uVar5 = uVar3;\n                                        if (uVar5 != 0) {\n                                            (*_sym.imp.MSVCRT.dll_frexp)\n                                                      (uVar3 + uVar3, uVar5 - 0x9a9a00, uVar3, uVar3 * 0x32800000);\n                                        }\n                                        iVar4 = (*_sym.imp.KERNEL32.dll_DeleteFileW)(uVar5 * uVar3);\n                                        if (iVar4 != 0) {\n                                            (*_sym.imp.MSVCRT.dll__wexecve)();\n                                        }\n                                        var_44h = (var_44h << 7 | var_44h >> 0x19) + (*var_40h ^ 0xe2);\n                                        var_40h = var_40h + uVar5 + uVar3 + 1;\n                                        if (uVar5 != 0) {\n                                            return uVar3 + 0x200c;\n                                        }\n                                    }\n                                    if (var_44h == uVar12 + 0xd92a7a83) {\n                                        uVar3 = arg_14h;\n                                        uVar8 = arg_ch | 0xeb;\n                                        uVar11 = arg_ch - (arg_ch & arg_8h);\n                                        uVar1 = (arg_14h & uVar8) + 0x11;\n                                        if (0 < uVar11) {\n                                            return uVar8;\n                                        }\n                                        var_14h = *((*(iVar6 + 0x24) - (uVar8 - uVar8)) + var_20h +\n                                                    ((arg_ch | 0xeb) - 0xeb) +\n                                                   ((*(iVar6 + ((arg_14h & 0xffff) * uVar8 + 6) * 4) - var_14h) +\n                                                   ((uVar8 ^ uVar1) - 0xfa)) * 2);\n                                        uVar8 = uVar1 % 0x5c;\n                                        if (0 < uVar3) {\n                                            return uVar8;\n                                        }\n                                        var_30h = var_20h + *(iVar6 + (uVar1 * (arg_14h & 0xffff) + 7) * 4) +\n                                                  ((arg_14h & 0xffff) - uVar1) + 0x11;\n                                        uVar2 = uVar8 + uVar1 + 0xb;\n                                        if (uVar3 != 0) {\n                                            return uVar8;\n                                        }\n                                        if ('-' < uVar2) {\n                                            return uVar8;\n                                        }\n                                        iVar7 = (*(var_20h + *(var_30h + (var_14h + ((uVar1 | uVar11) - 0x11)) * 4)))\n                                                          ((uVar8 - (arg_14h & 0xffff)) + -0x11, \n                                                           (arg_8h & 0xff) * uVar2 + 0x1f960, \n                                                           (uVar8 ^ arg_14h & 0xffff) + 0xfef, \n                                                           ((uVar3 | 0xb600) & arg_8h & 0xff) + 0x40);\n                                        *((uVar8 & arg_14h & 0xffff) + 0xe0dccbd8 ^ 0xe09f5bd4) =\n                                             iVar7 + ((uVar2 | arg_14h & 0xffff) - 0x2d);\n                                    }\n                                    var_30h = var_30h + ((uVar13 & uVar10) - 0x7c);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n    return uVar14;\n}\n",
        "token_count": 2484
    },
    "004029ca": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00402b01)\n// WARNING: Removing unreachable block (ram,0x00402c30)\n// WARNING: Removing unreachable block (ram,0x00402b9d)\n// WARNING: Removing unreachable block (ram,0x00402a71)\n// WARNING: Removing unreachable block (ram,0x00402b3e)\n// WARNING: Removing unreachable block (ram,0x00402bb3)\n// WARNING: Removing unreachable block (ram,0x00402a1b)\n\nuint32_t __cdecl fcn.004029ca(uint noname_0, uint32_t arg_ch, uint arg_10h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint var_24h;\n    uint cchLength;\n    uint ARG_0;\n    uint var_18h;\n    int32_t var_14h;\n    uchar *var_10h;\n    uint var_ch;\n    uchar *var_8h;\n    uint var_4h;\n    \n    uVar2 = arg_ch & 0xff;\n    uVar1 = uVar2 >> 2;\n    if ((uVar1 != 0xff) && (uVar2 = uVar1 % 0x53,  uVar1 == 0)) {\n        var_8h = 0x42380e;\n        var_10h = *0x439010;\n        for (var_14h = 1; var_14h != 0; var_14h = var_14h - ((arg_ch | 0xff) - 0xfe)) {\n            *var_10h = *var_8h;\n            var_10h = var_10h + 1;\n            var_8h = var_8h + (arg_ch | 0x5d00) * 0xff + -0x5ca3fe;\n        }\n        *0x439010 = var_10h;\n        uVar2 = arg_10h & arg_ch;\n    }\n    return uVar2;\n}\n",
        "token_count": 451
    },
    "00402c55": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00402d4b)\n// WARNING: Removing unreachable block (ram,0x00402d20)\n// WARNING: Removing unreachable block (ram,0x00402d63)\n// WARNING: Removing unreachable block (ram,0x00402cfc)\n\nuint32_t __cdecl fcn.00402c55(uint32_t arg_8h, uint32_t arg_ch, uint arg_10h)\n\n{\n    int16_t iVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar3 = arg_ch & 0xffff;\n    uVar4 = uVar3 - 0x305a & 0xff;\n    if (uVar3 != 99) {\n        uVar3 = uVar3 >> 1 & 0xff;\n        uVar4 = arg_ch & 0xffff;\n        if (uVar3 == 0x32) {\n            iVar1 = fcn.004030a0();\n            uVar2 = arg_8h / arg_8h << 0x18;\n            uVar4 = uVar3;\n            if (((iVar1 == 0) && (uVar4 = uVar2,  0xffffff < uVar2)) &&\n               (uVar3 = fcn.0040384f(0, 0),  uVar4 = 0,  (arg_10h ^ 0x32) < 0x56)) {\n                uVar4 = uVar3;\n            }\n        }\n    }\n    return uVar4;\n}\n",
        "token_count": 371
    },
    "004030a0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004030fb)\n// WARNING: Removing unreachable block (ram,0x004030cb)\n\nuchar fcn.004030a0(void)\n\n{\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.004031ef(0, 0);\n    return 0;\n}\n",
        "token_count": 76
    },
    "00403115": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004031b2)\n// WARNING: Removing unreachable block (ram,0x004031e0)\n\nint32_t __cdecl fcn.00403115(uint32_t arg_8h, int32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = arg_8h & 0x6a2c624b;\n    if (uVar1 < 0x40001) {\n        uVar3 = uVar1 >> 1;\n        if (uVar1 == 0x3ffff) {\n            (*_sym.imp.MSVCRT.dll__execlpe)(uVar3, 0x3ffff);\n        }\n        if (arg_ch == 0xa7e3) {\n            if (uVar3 < 0x20000) {\n                iVar2 = 0xdb;\n            }\n            else {\n                fcn.004011e3(uVar3, 0xdb);\n                iVar2 = (arg_8h & 0x624b) * (arg_8h & 0x624b | 0x2eb5);\n            }\n        }\n        else {\n            iVar2 = 0xdb;\n        }\n    }\n    else {\n        iVar2 = 0xdb;\n    }\n    return iVar2;\n}\n",
        "token_count": 327
    },
    "004032c4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00403335)\n// WARNING: Removing unreachable block (ram,0x0040340f)\n// WARNING: Removing unreachable block (ram,0x00403367)\n// WARNING: Removing unreachable block (ram,0x0040338a)\n// WARNING: Removing unreachable block (ram,0x004032ee)\n// WARNING: Removing unreachable block (ram,0x004033ff)\n\nint32_t __cdecl fcn.004032c4(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint16_t uVar1;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint dwFlags;\n    \n    uVar1 = arg_8h + 0xe10;\n    if (uVar1 == 0xe6a) {\n        (*_sym.imp.MSVCRT.dll__ismbcdigit)(0, 0xe8a3, 0x8400003c, 0x2089aa9);\n    }\n    fcn.00401dd3(0x8400003c, 0x8400003c, 0x8400003c);\n    var_10h = arg_8h + 0x19e9aa9;\n    if (var_10h < 0x19e9b04) {\n        var_10h = 0x2089aa9;\n    }\n    else if (uVar1 * 0x9100 < 0x82a9b01) {\n        var_10h = arg_ch * 0x5c + uVar1 * -0x9100;\n        if (var_10h == -0x82a7a4c) {\n            var_10h = fcn.00403c93(0x2089aa9);\n        }\n        if (var_10h != 0xbafc) {\n            var_10h = 0;\n        }\n    }\n    return var_10h;\n}\n",
        "token_count": 438
    },
    "0040365a": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004036d7)\n// WARNING: Removing unreachable block (ram,0x0040367c)\n// WARNING: Removing unreachable block (ram,0x004036bf)\n// WARNING: Removing unreachable block (ram,0x004036aa)\n\nuint32_t __cdecl fcn.0040365a(uint arg_8h, uint32_t arg_ch)\n\n{\n    uint8_t uVar1;\n    int32_t arg_8h_00;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint dwData;\n    uint lpNumberOfEventsWritten;\n    \n    arg_8h_00 = (*_sym.imp.KERNEL32.dll_DeleteFileW)(0);\n    if (arg_8h_00 != 0) {\n        (*_sym.imp.USER32.dll_DrawMenuBar)(0xa000);\n    }\n    uVar2 = arg_8h_00 * 0x10000;\n    uVar3 = fcn.00402110(arg_8h_00, arg_8h_00, uVar2, 0);\n    uVar3 = uVar3 & 0xffff;\n    uVar1 = arg_8h - arg_8h_00;\n    if (uVar3 == 0) {\n        uVar3 = arg_ch & 0x565;\n        if (uVar1 != 0) {\n            (*_sym.imp.KERNEL32.dll_WriteConsoleInputW)\n                      ((uVar1 ^ 0xef8800) + uVar1, arg_8h_00, uVar1 * (uVar3 | 0xd132), uVar1 - (uVar1 | uVar3));\n        }\n        uVar4 = uVar3 >> 1;\n        if (uVar4 < '2') {\n            (*_sym.imp.USER32.dll_SendMessageCallbackW)\n                      (uVar3 - (uVar2 | 0xd), uVar4 & 0xff, (uVar4 & 0xff) + arg_8h_00, arg_8h_00, uVar3, 0);\n        }\n        if (uVar1 < '\\0') {\n            uVar3 = uVar1;\n        }\n        else {\n            if (uVar3 == 100) {\n                uVar2 = fcn.00402c55(uVar4 & 0xff, 100, 100);\n            }\n            uVar1 = arg_ch ^ 0xc3;\n            if (uVar2 == 0xffffffff) {\n                uVar3 = uVar1;\n            }\n            else {\n                uVar3 = uVar3 - 1 & 0xffff;\n                if (uVar1 < -0x42) {\n                    uVar2 = uVar3 >> 3;\n                    if (uVar3 == 0x62) {\n                        uVar3 = uVar1;\n                    }\n                    else {\n                        uVar3 = uVar4 & 0xff;\n                        if (uVar2 == 0xc) {\n                            uVar3 = uVar1;\n                        }\n                    }\n                }\n            }\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 695
    },
    "0040384f": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00403921)\n// WARNING: Removing unreachable block (ram,0x004038c5)\n// WARNING: Removing unreachable block (ram,0x00403887)\n// WARNING: Removing unreachable block (ram,0x004038ab)\n// WARNING: Removing unreachable block (ram,0x004038e1)\n// WARNING: Removing unreachable block (ram,0x0040394b)\n// WARNING: Removing unreachable block (ram,0x00403872)\n// WARNING: Removing unreachable block (ram,0x0040389a)\n\nuint32_t __cdecl fcn.0040384f(uint noname_0, uint32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    uint var_ch;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    var_8h = arg_ch >> 1;\n    uVar1 = var_8h * 0x69baceca;\n    if (var_8h < 0) {\n        var_8h = 0x52d6;\n    }\n    else {\n        if (uVar1 == 0) {\n            var_8h = fcn.004028a0(0x96d27797, var_8h, 0x96d27797);\n        }\n        if ((arg_ch >> 1 & 0xffff) == 0) {\n            if (uVar1 < 1) {\n                var_8h = uVar1 & 0x5eb100 & arg_ch;\n            }\n            else {\n                var_8h = 0xa2e0fdef;\n            }\n        }\n    }\n    return var_8h;\n}\n",
        "token_count": 370
    },
    "00403992": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00403a29)\n// WARNING: Removing unreachable block (ram,0x004039cf)\n// WARNING: Removing unreachable block (ram,0x00403a03)\n// WARNING: Removing unreachable block (ram,0x00403c85)\n// WARNING: Removing unreachable block (ram,0x00403c46)\n// WARNING: Removing unreachable block (ram,0x00403c6e)\n// WARNING: Removing unreachable block (ram,0x00403c21)\n// WARNING: Removing unreachable block (ram,0x00403a99)\n// WARNING: Removing unreachable block (ram,0x00403ba8)\n// WARNING: Removing unreachable block (ram,0x00403a78)\n// WARNING: Removing unreachable block (ram,0x00403b7f)\n// WARNING: Removing unreachable block (ram,0x00403b1b)\n// WARNING: Removing unreachable block (ram,0x00403bde)\n// WARNING: Removing unreachable block (ram,0x00403ac7)\n\nuint fcn.00403992(void)\n\n{\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    uint32_t *var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_ch = *0x43900c;\n    for (var_14h = *0x439014; var_14h != 0; var_14h = var_14h + -1) {\n        *var_ch = *var_ch ^ 0x65fe0471;\n        var_ch[1] = var_ch[1] ^ 0x2fc96b0f;\n        var_ch = var_ch + 2;\n    }\n    (**0x43900c)();\n    return 0x81000000;\n}\n",
        "token_count": 442
    },
    "00402d76": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00402ee6)\n\nuint32_t __cdecl fcn.00402d76(uint arg_8h, uint32_t arg_ch, uint32_t arg_10h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    uchar *var_10h;\n    uint var_ch;\n    uint dwProcessId;\n    uchar *var_4h;\n    \n    uVar6 = arg_10h & 0xffff;\n    uVar2 = arg_10h + 0x586bb76b;\n    uVar1 = arg_10h;\n    if (0x19 < arg_10h) {\n        var_4h = (uVar2 | uVar6) + 0xcec87ad9 ^ 0x2775f294;\n        uVar3 = uVar6 >> 3;\n        if (uVar2 < 0x586bb786) {\n            uVar4 = uVar6 % uVar2;\n            if ((uVar3 == 3) &&\n               (var_10h = *(((uVar2 & arg_10h) + 0xa37ace08 ^ 0xa3395e18) + ((uVar4 | arg_10h) - 0x1a) * 4), \n               uVar1 = uVar6,  arg_10h < 0x1b)) {\n                var_14h = (uVar3 & uVar4) + 0x6511;\n                do {\n                    if (var_14h == (uVar6 - uVar3) + -0x17) {\n                        if (arg_10h != 0x1a) {\n                            return arg_10h;\n                        }\n                        *(uVar3 * uVar4 + 0xa37acdba ^ 0xa3395e18) = var_10h;\n                        return 0x1a;\n                    }\n                    if (arg_ch != 'S') {\n                        return 0x5e4a;\n                    }\n                    *var_10h = *var_4h;\n                    var_10h = var_10h + 1;\n                    iVar5 = (arg_ch | 0xefea) - 0x5e4a;\n                    var_4h = var_4h + 1;\n                    var_14h = var_14h - (iVar5 * 0x5e4a + -0x35a91b29);\n                } while (0x91b0 < iVar5);\n                uVar1 = 0xf7;\n            }\n        }\n        else {\n            (*_sym.imp.KERNEL32.dll_ContinueDebugEvent)(uVar3, uVar3, uVar2 - arg_10h);\n            uVar1 = uVar6;\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 719
    }
}