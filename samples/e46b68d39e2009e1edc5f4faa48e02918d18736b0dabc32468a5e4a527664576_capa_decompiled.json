{
    "00401220": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00401220(void)\n\n{\n    uchar uVar1;\n    int32_t iVar2;\n    uint arg_8h;\n    uint arg_ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_3ch;\n    int32_t var_38h;\n    int32_t var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_11h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_1h;\n    \n    arg_ch = 0;\n    iVar2 = (*_sym.imp.KERNEL32.dll_GetProcessId)();\n    if (iVar2 != 0) {\n        fcn.00401000(0x40f800);\n    }\n    fcn.004026d8();\n    arg_8h = fcn.00402516();\n    fcn.004024ba(arg_8h);\n    uVar1 = fcn.00402304(var_11h);\n    // switch table (4 cases) at 0x40147c\n    switch(uVar1) {\n    case 0x70:\n        if (var_ch == 1) {\n            fcn.004020ab(\"rock! you win!\\n\", arg_ch);\n        }\n        else if (var_ch == 2) {\n            fcn.004020ab(\"paper! go again\\n\", arg_ch);\n        }\n        else if (var_ch == 3) {\n            fcn.004020ab(\"scissors! I win!\\n\", arg_ch);\n        }\n        break;\n    case 0x71:\n        break;\n    case 0x72:\n        if (var_ch == 1) {\n            fcn.004020ab(\"rock! go again\\n\", arg_ch);\n        }\n        else if (var_ch == 2) {\n            fcn.004020ab(\"paper! I win!\\n\", arg_ch);\n        }\n        else if (var_ch == 3) {\n            fcn.004020ab(\"scissors! you win!\\n\", arg_ch);\n        }\n        break;\n    case 0x73:\n        if (var_ch == 1) {\n            fcn.004020ab(\"rock! I win!\\n\", arg_ch);\n        }\n        else if (var_ch == 2) {\n            fcn.004020ab(\"paper! you win!\\n\", arg_ch);\n        }\n        else if (var_ch == 3) {\n            fcn.004020ab(\"scissors! go again\\n\", arg_ch);\n        }\n        break;\n    default:\n        fcn.004020ab(\"invalid choice\\n\", arg_ch);\n    }\n    fcn.00401110();\n    var_38h = 0;\n    do {\n        for (var_34h = 1; var_34h < 2; var_34h = var_34h + 1) {\n            for (var_8h = 5; var_8h < 0x1a; var_8h = var_8h + 5) {\n                fcn.004020ab(0x40f8dc, var_8h * var_34h);\n            }\n            fcn.004020ab(0x40f8e0, arg_ch);\n        }\n        var_38h = var_38h + 1;\n        fcn.004020ab(\"Press \\'R\\' to run again, any other key to quit: \", arg_ch);\n        fcn.004026d8();\n    } while (((var_1h == 'R') || (var_1h == 'r')) || (var_38h == 10));\n    (*0x41786a)();\n    fcn.004026dd(arg_ch);\n    return;\n}\n",
        "token_count": 907
    },
    "004026dd": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004026dd(uint arg_8h)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    int32_t in_ECX;\n    uint in_EDX;\n    uint unaff_EBX;\n    uint unaff_EBP;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    ushort in_ES;\n    ushort in_CS;\n    ushort in_SS;\n    ushort in_DS;\n    ushort in_FS;\n    ushort in_GS;\n    uint8_t in_AF;\n    uint8_t in_TF;\n    uint8_t in_IF;\n    uint8_t in_NT;\n    uint8_t in_AC;\n    uint8_t in_VIF;\n    uint8_t in_VIP;\n    uint8_t in_ID;\n    uint unaff_retaddr;\n    int32_t var_328h;\n    uint var_324h;\n    uint var_320h;\n    \n    if (in_ECX == *0x416800) {\n        return;\n    }\n    *0x418ba8 = (in_NT & 1) * 0x4000 | SBORROW4(&stack0xfffffffc, 0x328) * 0x800 | (in_IF & 1) * 0x200 |\n                (in_TF & 1) * 0x100 | (&var_328h < 0) * 0x80 | (*0x10 == 0x32c) * 0x40 | (in_AF & 1) * 0x10 |\n                ((POPCOUNT(&var_328h & 0xff) & 1U) == 0) * 4 | &stack0xfffffffc < 0x328 | (in_ID & 1) * 0x200000 |\n                (in_VIP & 1) * 0x100000 | (in_VIF & 1) * 0x80000 | (in_AC & 1) * 0x40000;\n    *0x418bac = &arg_8h;\n    *0x418ae8 = 0x10001;\n    *0x418a90 = 0xc0000409;\n    *0x418a94 = 1;\n    var_328h = *0x416800;\n    var_324h = *0x416804;\n    *0x418a9c = unaff_retaddr;\n    *0x418b74 = in_GS;\n    *0x418b78 = in_FS;\n    *0x418b7c = in_ES;\n    *0x418b80 = in_DS;\n    *0x418b84 = unaff_EDI;\n    *0x418b88 = unaff_ESI;\n    *0x418b8c = unaff_EBX;\n    *0x418b90 = in_EDX;\n    *0x418b94 = in_ECX;\n    *0x418b98 = in_EAX;\n    *0x418b9c = unaff_EBP;\n    *0x418ba0 = unaff_retaddr;\n    *0x418ba4 = in_CS;\n    *0x418bb0 = in_SS;\n    *0x418ae0 = (*_sym.imp.KERNEL32.dll_IsDebuggerPresent)();\n    fcn.00408f45(1);\n    (*_sym.imp.KERNEL32.dll_SetUnhandledExceptionFilter)(0);\n    (*_sym.imp.KERNEL32.dll_UnhandledExceptionFilter)(0x4107f0);\n    if (*0x418ae0 == 0) {\n        fcn.00408f45(1);\n    }\n    uVar1 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)(0xc0000409);\n    (*_sym.imp.KERNEL32.dll_TerminateProcess)(uVar1);\n    return;\n}\n",
        "token_count": 826
    },
    "00403d0e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00403d0e(uint arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t *in_EAX;\n    int32_t unaff_EBX;\n    int32_t *unaff_EDI;\n    uint var_4h;\n    \n    iVar1 = *unaff_EDI;\n    if (((*(unaff_EBX + 0xc) & 0x40) == 0) || (*(unaff_EBX + 8) != 0)) {\n        *unaff_EDI = 0;\n        if (0 < arg_ch) {\n            do {\n                arg_ch = arg_ch + -1;\n                fcn.00403cdb();\n                if (*in_EAX == -1) {\n                    if (*unaff_EDI != 0x2a) break;\n                    fcn.00403cdb();\n                }\n            } while (0 < arg_ch);\n            if (*unaff_EDI != 0) {\n                return;\n            }\n        }\n        *unaff_EDI = iVar1;\n    }\n    else {\n        *in_EAX = *in_EAX + arg_ch;\n    }\n    return;\n}\n",
        "token_count": 256
    },
    "00403d70": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00403d70(int32_t arg_8h, uint8_t *arg_ch, uint arg_10h, int32_t **arg_14h)\n\n{\n    uint8_t uVar1;\n    uint16_t uVar2;\n    int32_t *piVar3;\n    uint *puVar4;\n    uint32_t uVar5;\n    code *pcVar6;\n    code *pcVar7;\n    int32_t *piVar8;\n    char *pcVar9;\n    int32_t iVar10;\n    int32_t extraout_ECX;\n    uint unaff_EBX;\n    uint8_t *puVar11;\n    int32_t *piVar12;\n    int32_t **ppiVar13;\n    bool bVar14;\n    int64_t iVar15;\n    int32_t *var_280h;\n    int32_t *var_27ch;\n    uint var_278h;\n    int32_t var_274h;\n    int32_t var_270h;\n    uint var_26ch;\n    uchar *var_268h;\n    char *var_260h;\n    uint var_25ch;\n    int32_t var_254h;\n    uint var_250h;\n    int32_t var_24ch;\n    int32_t *var_248h;\n    int32_t var_244h;\n    uint8_t *var_240h;\n    int32_t var_23ch;\n    int32_t *var_238h;\n    int32_t var_234h;\n    int32_t var_230h;\n    uint var_22ch;\n    uchar *var_228h;\n    int32_t var_224h;\n    int32_t *var_220h;\n    int32_t **var_21ch;\n    int32_t *var_218h;\n    uint8_t var_211h;\n    uint32_t var_210h;\n    uint var_20ch;\n    uchar var_dh;\n    uint var_ch;\n    uint32_t var_4h;\n    \n    var_4h = *0x416800 ^ &stack0xfffffffc;\n    var_230h = arg_8h;\n    var_21ch = arg_14h;\n    var_24ch = 0;\n    var_210h = 0;\n    var_238h = NULL;\n    var_218h = NULL;\n    var_234h = 0;\n    var_244h = 0;\n    var_23ch = 0;\n    fcn.00402168(arg_10h);\n    var_26ch = fcn.00404b54();\n    if (arg_8h != 0) {\n        if ((*(arg_8h + 0xc) & 0x40) == 0) {\n            uVar5 = fcn.00406741(arg_8h);\n            if ((uVar5 == 0xffffffff) || (uVar5 == 0xfffffffe)) {\n                iVar10 = 0x417248;\n            }\n            else {\n                iVar10 = (uVar5 & 0x1f) * 0x40 + *((uVar5 >> 5) * 4 + 0x419560);\n            }\n            if ((*(iVar10 + 0x24) & 0x7f) == 0) {\n                if ((uVar5 == 0xffffffff) || (uVar5 == 0xfffffffe)) {\n                    iVar10 = 0x417248;\n                }\n                else {\n                    iVar10 = (uVar5 & 0x1f) * 0x40 + *((uVar5 >> 5) * 4 + 0x419560);\n                }\n                if ((*(iVar10 + 0x24) & 0x80) == 0) goto code_r0x00403e75;\n            }\n        }\n        else {\ncode_r0x00403e75:\n            if (arg_ch != NULL) {\n                var_211h = *arg_ch;\n                var_224h = 0;\n                var_228h = NULL;\n                var_248h = NULL;\n                iVar10 = 0;\n                ppiVar13 = var_21ch;\n                while ((var_21ch = ppiVar13,  var_211h != 0 &&\n                       (puVar11 = arg_ch + 1,  var_240h = puVar11,  -1 < var_224h))) {\n                    if (var_211h - 0x20 < 0x59) {\n                        uVar5 = \"e+000\"[var_211h] & 0xf;\n                    }\n                    else {\n                        uVar5 = 0;\n                    }\n                    var_274h = *(iVar10 + 0x410350 + uVar5 * 8) >> 4;\n    // switch table (8 cases) at 0x404958\n                    switch(var_274h) {\n                    case 0:\ncode_r0x004040f2:\n                        var_23ch = 0;\n                        iVar10 = fcn.00405e6d(var_211h, &var_25ch);\n                        if (iVar10 != 0) {\n                            fcn.00403cdb();\n                            var_240h = arg_ch + 2;\n                            if (*puVar11 == 0) goto code_r0x00403de6;\n                        }\n                        fcn.00403cdb();\n                        break;\n                    case 1:\n                        var_218h = 0xffffffff;\n                        var_278h = 0;\n                        var_244h = 0;\n                        var_238h = NULL;\n                        var_234h = 0;\n                        var_210h = 0;\n                        var_23ch = 0;\n                        break;\n                    case 2:\n                        if (var_211h == 0x20) {\n                            var_210h = var_210h | 2;\n                        }\n                        else if (var_211h == 0x23) {\n                            var_210h = var_210h | 0x80;\n                        }\n                        else if (var_211h == 0x2b) {\n                            var_210h = var_210h | 1;\n                        }\n                        else if (var_211h == 0x2d) {\n                            var_210h = var_210h | 4;\n                        }\n                        else if (var_211h == 0x30) {\n                            var_210h = var_210h | 8;\n                        }\n                        break;\n                    case 3:\n                        if (var_211h == 0x2a) {\n                            var_238h = *arg_14h;\n                            var_21ch = arg_14h + 1;\n                            if (var_238h < 0) {\n                                var_210h = var_210h | 4;\n                                var_238h = -var_238h;\n                            }\n                        }\n                        else {\n                            var_238h = var_238h * 10 + -0x30 + var_211h;\n                        }\n                        break;\n                    case 4:\n                        var_218h = NULL;\n                        break;\n                    case 5:\n                        if (var_211h == 0x2a) {\n                            var_218h = *arg_14h;\n                            var_21ch = arg_14h + 1;\n                            if (var_218h < 0) {\n                                var_218h = 0xffffffff;\n                            }\n                        }\n                        else {\n                            var_218h = var_218h * 10 + -0x30 + var_211h;\n                        }\n                        break;\n                    case 6:\n                        if (var_211h == 0x49) {\n                            uVar1 = *puVar11;\n                            if ((uVar1 == 0x36) && (arg_ch[2] == 0x34)) {\n                                var_210h = var_210h | 0x8000;\n                                var_240h = arg_ch + 3;\n                            }\n                            else if ((uVar1 == 0x33) && (arg_ch[2] == 0x32)) {\n                                var_210h = var_210h & 0xffff7fff;\n                                var_240h = arg_ch + 3;\n                            }\n                            else if (((((uVar1 != 100) && (uVar1 != 0x69)) && (uVar1 != 0x6f)) &&\n                                     ((uVar1 != 0x75 && (uVar1 != 0x78)))) && (uVar1 != 0x58)) {\n                                var_274h = 0;\n                                goto code_r0x004040f2;\n                            }\n                        }\n                        else if (var_211h == 0x68) {\n                            var_210h = var_210h | 0x20;\n                        }\n                        else if (var_211h == 0x6c) {\n                            if (*puVar11 == 0x6c) {\n                                var_210h = var_210h | 0x1000;\n                                var_240h = arg_ch + 2;\n                            }\n                            else {\n                                var_210h = var_210h | 0x10;\n                            }\n                        }\n                        else if (var_211h == 0x77) {\n                            var_210h = var_210h | 0x800;\n                        }\n                        break;\n                    case 7:\n                        if (var_211h < 'e') {\n                            if (var_211h == 100) {\ncode_r0x004043b6:\n                                var_210h = var_210h | 0x40;\ncode_r0x004043bd:\n                                ppiVar13 = arg_14h;\n                                var_228h = 0xa;\ncode_r0x004043c7:\n                                if (((var_210h & 0x8000) == 0) && ((var_210h & 0x1000) == 0)) {\n                                    var_21ch = ppiVar13 + 1;\n                                    if ((var_210h & 0x20) == 0) {\n                                        piVar12 = *ppiVar13;\n                                        if ((var_210h & 0x40) == 0) {\n                                            piVar8 = NULL;\n                                        }\n                                        else {\n                                            piVar8 = piVar12 >> 0x1f;\n                                        }\n                                    }\n                                    else {\n                                        if ((var_210h & 0x40) == 0) {\n                                            piVar12 = *ppiVar13;\n                                        }\n                                        else {\n                                            piVar12 = *ppiVar13;\n                                        }\n                                        piVar8 = piVar12 >> 0x1f;\n                                    }\n                                }\n                                else {\n                                    piVar12 = *ppiVar13;\n                                    piVar8 = ppiVar13[1];\n                                    var_21ch = ppiVar13 + 2;\n                                }\n                                if ((((var_210h & 0x40) != 0) && (piVar8 < 1)) && (piVar8 < 0)) {\n                                    bVar14 = piVar12 != NULL;\n                                    piVar12 = -piVar12;\n                                    piVar8 = -(piVar8 + bVar14);\n                                    var_210h = var_210h | 0x100;\n                                }\n                                if ((var_210h & 0x9000) == 0) {\n                                    piVar8 = NULL;\n                                }\n                                iVar15 = CONCAT44(piVar8, piVar12);\n                                if (var_218h < 0) {\n                                    var_218h = 0x1;\n                                }\n                                else {\n                                    var_210h = var_210h & 0xfffffff7;\n                                    if (0x200 < var_218h) {\n                                        var_218h = 0x200;\n                                    }\n                                }\n                                if ((piVar12 | piVar8) == 0) {\n                                    var_234h = 0;\n                                }\n                                piVar12 = &var_dh;\n                                while( true ) {\n                                    pcVar9 = iVar15;\n                                    piVar8 = var_218h + -1;\n                                    if ((var_218h < 1) && (iVar15 == 0)) break;\n                                    var_218h = piVar8;\n                                    iVar15 = fcn.00408eb0();\n                                    iVar10 = extraout_ECX + 0x30;\n                                    if (0x39 < iVar10) {\n                                        iVar10 = iVar10 + var_24ch;\n                                    }\n                                    *piVar12 = iVar10;\n                                    piVar12 = piVar12 + -1;\n                                    var_260h = pcVar9;\n                                }\n                                var_228h = &var_dh + -piVar12;\n                                var_220h = piVar12 + 1;\n                                var_218h = piVar8;\n                                if (((var_210h & 0x200) != 0) && ((var_228h == NULL || (*var_220h != '0')))) {\n                                    *piVar12 = '0';\n                                    var_228h = &var_ch + -piVar12;\n                                    var_220h = piVar12;\n                                }\n                            }\n                            else if (var_211h < 'T') {\n                                if (var_211h == 0x53) {\n                                    if ((var_210h & 0x830) == 0) {\n                                        var_210h = var_210h | 0x800;\n                                    }\n                                    goto code_r0x004041cb;\n                                }\n                                if (var_211h == 0x41) {\ncode_r0x0040417e:\n                                    var_211h = var_211h + 0x20;\n                                    var_278h = 1;\ncode_r0x004043ec:\n                                    var_210h = var_210h | 0x40;\n                                    var_260h = 0x200;\n                                    piVar8 = &var_20ch;\n                                    pcVar9 = var_260h;\n                                    piVar12 = &var_20ch;\n                                    if (var_218h < 0) {\n                                        var_218h = 0x6;\n                                    }\n                                    else if (var_218h == NULL) {\n                                        if (var_211h == 0x67) {\n                                            var_218h = 0x1;\n                                        }\n                                    }\n                                    else {\n                                        if (0x200 < var_218h) {\n                                            var_218h = 0x200;\n                                        }\n                                        if (0xa3 < var_218h) {\n                                            pcVar9 = var_218h + 0x15d;\n                                            var_220h = &var_20ch;\n                                            var_248h = fcn.00406c32(pcVar9);\n                                            piVar8 = var_248h;\n                                            piVar12 = var_248h;\n                                            if (var_248h == NULL) {\n                                                var_218h = 0xa3;\n                                                piVar8 = &var_20ch;\n                                                pcVar9 = var_260h;\n                                                piVar12 = var_220h;\n                                            }\n                                        }\n                                    }\n                                    var_220h = piVar12;\n                                    var_260h = pcVar9;\n                                    pcVar7 = _sym.imp.KERNEL32.dll_DecodePointer;\n                                    var_280h = *arg_14h;\n                                    var_21ch = arg_14h + 2;\n                                    var_27ch = arg_14h[1];\n                                    pcVar6 = (*_sym.imp.KERNEL32.dll_DecodePointer)\n                                                       (*0x416828, &var_280h, piVar8, var_260h, var_211h, var_218h, \n                                                        var_278h, &var_25ch);\n                                    (*pcVar6)();\n                                    uVar5 = var_210h & 0x80;\n                                    if ((uVar5 != 0) && (var_218h == NULL)) {\n                                        pcVar6 = (*pcVar7)(*0x416834, piVar8, &var_25ch);\n                                        (*pcVar6)();\n                                    }\n                                    if ((var_211h == 0x67) && (uVar5 == 0)) {\n                                        pcVar7 = (*pcVar7)(*0x416830, piVar8, &var_25ch);\n                                        (*pcVar7)();\n                                    }\n                                    if (*piVar8 == '-') {\n                                        var_210h = var_210h | 0x100;\n                                        var_220h = piVar8 + 1;\n                                        piVar8 = var_220h;\n                                    }\ncode_r0x00404303:\n                                    var_228h = fcn.004086b0(piVar8);\n                                }\n                                else if (var_211h == 0x43) {\n                                    ppiVar13 = arg_14h;\n                                    if ((var_210h & 0x830) == 0) {\n                                        var_210h = var_210h | 0x800;\n                                    }\ncode_r0x00404244:\n                                    var_21ch = ppiVar13 + 1;\n                                    if ((var_210h & 0x810) == 0) {\n                                        var_20ch._0_1_ = *ppiVar13;\n                                        var_228h = 0x1;\n                                    }\n                                    else {\n                                        iVar10 = fcn.00408e86(&var_228h, &var_20ch, 0x200, *ppiVar13);\n                                        if (iVar10 != 0) {\n                                            var_244h = 1;\n                                        }\n                                    }\n                                    var_220h = &var_20ch;\n                                }\n                                else if ((var_211h == 0x45) || (var_211h == 0x47)) goto code_r0x0040417e;\n                            }\n                            else {\n                                if (var_211h == 0x58) goto code_r0x0040454c;\n                                if (var_211h == 0x5a) {\n                                    piVar12 = *arg_14h;\n                                    var_21ch = arg_14h + 1;\n                                    piVar8 = *0x416838;\n                                    var_220h = *0x416838;\n                                    if ((piVar12 == NULL) || (piVar3 = piVar12[1],  piVar3 == NULL))\n                                    goto code_r0x00404303;\n                                    var_228h = *piVar12;\n                                    var_220h = piVar3;\n                                    if ((var_210h & 0x800) == 0) {\n                                        var_23ch = 0;\n                                    }\n                                    else {\n                                        var_228h = var_228h / 2;\n                                        var_23ch = 1;\n                                    }\n                                }\n                                else {\n                                    if (var_211h == 0x61) goto code_r0x004043ec;\n                                    if (var_211h == 99) goto code_r0x00404244;\n                                }\n                            }\ncode_r0x00404729:\n                            if (var_244h == 0) {\n                                if ((var_210h & 0x40) != 0) {\n                                    if ((var_210h & 0x100) == 0) {\n                                        if ((var_210h & 1) == 0) {\n                                            if ((var_210h & 2) == 0) goto code_r0x00404776;\n                                            var_22ch._0_1_ = 0x20;\n                                        }\n                                        else {\n                                            var_22ch._0_1_ = 0x2b;\n                                        }\n                                    }\n                                    else {\n                                        var_22ch._0_1_ = 0x2d;\n                                    }\n                                    var_234h = 1;\n                                }\ncode_r0x00404776:\n                                pcVar9 = var_238h + (-var_234h - var_228h);\n                                var_260h = pcVar9;\n                                if ((var_210h & 0xc) == 0) {\n                                    do {\n                                        if (pcVar9 < 1) break;\n                                        pcVar9 = pcVar9 + -1;\n                                        fcn.00403cdb();\n                                    } while (var_224h != -1);\n                                }\n                                fcn.00403d0e(&var_22ch, var_234h);\n                                if (((var_210h & 8) != 0) && (pcVar9 = var_260h,  (var_210h & 4) == 0)) {\n                                    do {\n                                        if (pcVar9 < 1) break;\n                                        fcn.00403cdb();\n                                        pcVar9 = pcVar9 + -1;\n                                    } while (var_224h != -1);\n                                }\n                                if ((var_23ch == 0) || (var_228h < 1)) {\n                                    fcn.00403d0e(var_220h, var_228h);\n                                }\n                                else {\n                                    var_268h = var_228h;\n                                    piVar12 = var_220h;\n                                    do {\n                                        uVar2 = *piVar12;\n                                        var_268h = var_268h + -1;\n                                        piVar12 = piVar12 + 2;\n                                        iVar10 = fcn.00408e86(&var_270h, &var_ch, 6, uVar2);\n                                        if ((iVar10 != 0) || (var_270h == 0)) {\n                                            var_224h = -1;\n                                            break;\n                                        }\n                                        fcn.00403d0e(&var_ch, var_270h);\n                                    } while (var_268h != NULL);\n                                }\n                                if ((-1 < var_224h) && (pcVar9 = var_260h,  (var_210h & 4) != 0)) {\n                                    do {\n                                        if (pcVar9 < 1) break;\n                                        fcn.00403cdb();\n                                        pcVar9 = pcVar9 + -1;\n                                    } while (var_224h != -1);\n                                }\n                            }\n                        }\n                        else {\n                            if ('p' < var_211h) {\n                                if (var_211h == 0x73) {\ncode_r0x004041cb:\n                                    piVar12 = var_218h;\n                                    if (var_218h == 0xffffffff) {\n                                        piVar12 = 0x7fffffff;\n                                    }\n                                    var_21ch = arg_14h + 1;\n                                    var_220h = *arg_14h;\n                                    if ((var_210h & 0x810) == 0) {\n                                        piVar8 = var_220h;\n                                        if (var_220h == NULL) {\n                                            piVar8 = *0x416838;\n                                            var_220h = *0x416838;\n                                        }\n                                        for (; (piVar12 != NULL && (piVar12 = piVar12 + -1,  *piVar8 != '\\0'));\n                                            piVar8 = piVar8 + 1) {\n                                        }\n                                        var_228h = piVar8 - var_220h;\n                                    }\n                                    else {\n                                        if (var_220h == NULL) {\n                                            var_220h = *0x41683c;\n                                        }\n                                        var_23ch = 1;\n                                        for (piVar8 = var_220h;\n                                            (piVar12 != NULL && (piVar12 = piVar12 + -1,  *piVar8 != 0));\n                                            piVar8 = piVar8 + 2) {\n                                        }\n                                        var_228h = piVar8 - var_220h >> 1;\n                                    }\n                                    goto code_r0x00404729;\n                                }\n                                if (var_211h == 0x75) goto code_r0x004043bd;\n                                if (var_211h != 0x78) goto code_r0x00404729;\n                                var_24ch = 0x27;\ncode_r0x0040457e:\n                                var_228h = 0x10;\n                                if ((var_210h & 0x80) != 0) {\n                                    var_22ch._1_1_ = var_24ch + 'Q';\n                                    var_22ch._0_1_ = 0x30;\n                                    var_234h = 2;\n                                }\n                                goto code_r0x004043c7;\n                            }\n                            if (var_211h == 0x70) {\n                                var_218h = 0x8;\ncode_r0x0040454c:\n                                var_24ch = 7;\n                                ppiVar13 = arg_14h;\n                                goto code_r0x0040457e;\n                            }\n                            if (var_211h < 'e') goto code_r0x00404729;\n                            arg_14h = ppiVar13;\n                            if (var_211h < 'h') goto code_r0x004043ec;\n                            if (var_211h == 0x69) goto code_r0x004043b6;\n                            if (var_211h != 0x6e) {\n                                if (var_211h != 0x6f) goto code_r0x00404729;\n                                var_228h = 0x8;\n                                if ((var_210h & 0x80) != 0) {\n                                    var_210h = var_210h | 0x200;\n                                }\n                                goto code_r0x004043c7;\n                            }\n                            var_21ch = ppiVar13 + 1;\n                            piVar12 = *ppiVar13;\n                            iVar10 = fcn.00402152();\n                            if (iVar10 == 0) goto code_r0x00403de6;\n                            if ((var_210h & 0x20) == 0) {\n                                *piVar12 = var_224h;\n                            }\n                            else {\n                                *piVar12 = var_224h;\n                            }\n                            var_244h = 1;\n                        }\n                        if (var_248h != NULL) {\n                            fcn.00406d11(var_248h);\n                            var_248h = NULL;\n                        }\n                    }\n                    var_211h = *var_240h;\n                    iVar10 = var_274h;\n                    arg_ch = var_240h;\n                    arg_14h = var_21ch;\n                    ppiVar13 = var_21ch;\n                }\n                if (var_250h != '\\0') {\n                    *(var_254h + 0x70) = *(var_254h + 0x70) & 0xfffffffd;\n                }\n                goto code_r0x00404948;\n            }\n        }\n    }\ncode_r0x00403de6:\n    puVar4 = fcn.00404b54();\n    *puVar4 = 0x16;\n    fcn.00404b02();\n    if (var_250h != '\\0') {\n        *(var_254h + 0x70) = *(var_254h + 0x70) & 0xfffffffd;\n    }\ncode_r0x00404948:\n    fcn.004026dd(unaff_EBX);\n    return;\n}\n",
        "token_count": 5934
    },
    "00406d11": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406d11(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint uVar3;\n    \n    if (arg_8h != 0) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_HeapFree)(*0x4194e8, 0, arg_8h);\n        if (iVar1 == 0) {\n            puVar2 = fcn.00404b54();\n            uVar3 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n            uVar3 = fcn.00404b12(uVar3);\n            *puVar2 = uVar3;\n        }\n    }\n    return;\n}\n",
        "token_count": 157
    },
    "00406f2a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Possible PIC construction at 0x00407030: Changing call to branch\n// WARNING: Removing unreachable block (ram,0x00407035)\n// WARNING: Removing unreachable block (ram,0x00407064)\n// WARNING: Removing unreachable block (ram,0x0040703b)\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00406f2a(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    code *pcVar1;\n    int32_t *piVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    code *pcVar5;\n    int32_t unaff_EBP;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.00404ba0(0x411f08, 0x20);\n    fcn.004069ba(8);\n    *(unaff_EBP + -4) = 0;\n    pcVar1 = _sym.imp.KERNEL32.dll_DecodePointer;\n    if (*0x418a8c != 1) {\n        *0x418a88 = 1;\n        *0x418a84 = *(unaff_EBP + 0x10);\n        if (*(unaff_EBP + 0xc) == 0) {\n            piVar2 = (*_sym.imp.KERNEL32.dll_DecodePointer)(*0x419548);\n            *(unaff_EBP + -0x30) = piVar2;\n            if (piVar2 != NULL) {\n                piVar3 = (*pcVar1)(*0x419544);\n                *(unaff_EBP + -0x2c) = piVar3;\n                *(unaff_EBP + -0x24) = piVar2;\n                *(unaff_EBP + -0x28) = piVar3;\n                while( true ) {\n                    piVar3 = piVar3 + -1;\n                    *(unaff_EBP + -0x2c) = piVar3;\n                    if (piVar3 < piVar2) break;\n                    iVar4 = fcn.004057ac();\n                    if (*piVar3 != iVar4) {\n                        if (piVar3 < piVar2) break;\n                        pcVar5 = (*pcVar1)(*piVar3);\n                        iVar4 = fcn.004057ac();\n                        *piVar3 = iVar4;\n                        (*pcVar5)();\n                        iVar4 = (*pcVar1)(*0x419548);\n                        piVar2 = (*pcVar1)(*0x419544);\n                        if ((*(unaff_EBP + -0x24) != iVar4) || (*(unaff_EBP + -0x28) != piVar2)) {\n                            *(unaff_EBP + -0x24) = iVar4;\n                            *(unaff_EBP + -0x30) = iVar4;\n                            *(unaff_EBP + -0x28) = piVar2;\n                            *(unaff_EBP + -0x2c) = piVar2;\n                            piVar3 = piVar2;\n                        }\n                        piVar2 = *(unaff_EBP + -0x30);\n                    }\n                }\n            }\n            *(unaff_EBP + -0x1c) = 0x40f7e8;\n            while (*(unaff_EBP + -0x1c) < 0x40f7f4) {\n                if (**(unaff_EBP + -0x1c) != NULL) {\n                    (***(unaff_EBP + -0x1c))();\n                }\n                *(unaff_EBP + -0x1c) = *(unaff_EBP + -0x1c) + 4;\n            }\n        }\n        *(unaff_EBP + -0x20) = 0x40f7f8;\n        while (*(unaff_EBP + -0x20) < 0x40f7fc) {\n            if (**(unaff_EBP + -0x20) != NULL) {\n                (***(unaff_EBP + -0x20))();\n            }\n            *(unaff_EBP + -0x20) = *(unaff_EBP + -0x20) + 4;\n        }\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    if (*(unaff_EBP + 0x10) != 0) {\n        fcn.004068e1(8);\n    }\n    return;\n}\n",
        "token_count": 1014
    },
    "004081ec": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.004081ec(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint unaff_EBX;\n    uint var_28h;\n    uint var_24h;\n    int32_t var_1ch;\n    uint var_18h;\n    uint32_t var_14h;\n    uint var_10h;\n    uint32_t var_4h;\n    \n    var_4h = *0x416800 ^ &stack0xfffffffc;\n    fcn.00402168(arg_10h);\n    var_14h = fcn.0040bfe8(&var_10h, &var_28h, arg_ch, 0, 0, 0, 0, &var_24h);\n    iVar1 = fcn.0040b546(&var_10h, arg_8h);\n    if ((var_14h & 3) == 0) {\n        if (iVar1 == 1) {\ncode_r0x00408245:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x00408285;\n        }\n        if (iVar1 != 2) {\ncode_r0x00408277:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x00408285;\n        }\n    }\n    else if ((var_14h & 1) == 0) {\n        if ((var_14h & 2) == 0) goto code_r0x00408277;\n        goto code_r0x00408245;\n    }\n    if (var_18h != '\\0') {\n        *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n    }\ncode_r0x00408285:\n    fcn.004026dd(unaff_EBX);\n    return;\n}\n",
        "token_count": 493
    },
    "00408294": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00408294(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint unaff_EBX;\n    uint var_28h;\n    uint var_24h;\n    int32_t var_1ch;\n    uint var_18h;\n    uint32_t var_14h;\n    uint var_10h;\n    uint32_t var_4h;\n    \n    var_4h = *0x416800 ^ &stack0xfffffffc;\n    fcn.00402168(arg_10h);\n    var_14h = fcn.0040bfe8(&var_10h, &var_28h, arg_ch, 0, 0, 0, 0, &var_24h);\n    iVar1 = fcn.0040ba97(&var_10h, arg_8h);\n    if ((var_14h & 3) == 0) {\n        if (iVar1 == 1) {\ncode_r0x004082ed:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x0040832d;\n        }\n        if (iVar1 != 2) {\ncode_r0x0040831f:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x0040832d;\n        }\n    }\n    else if ((var_14h & 1) == 0) {\n        if ((var_14h & 2) == 0) goto code_r0x0040831f;\n        goto code_r0x004082ed;\n    }\n    if (var_18h != '\\0') {\n        *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n    }\ncode_r0x0040832d:\n    fcn.004026dd(unaff_EBX);\n    return;\n}\n",
        "token_count": 498
    },
    "0040a653": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0040a653(void)\n\n{\n    int32_t unaff_EBP;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x1c) != 0) {\n        fcn.004068e1(0);\n    }\n    return;\n}\n",
        "token_count": 65
    },
    "0040a940": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040a940(uint arg_8h, uint arg_ch, uint32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    code *pcVar4;\n    code *pcVar5;\n    code *pcVar6;\n    uint unaff_EBX;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x416800 ^ &stack0xfffffffc;\n    var_20h = arg_8h;\n    var_1ch = arg_ch;\n    var_18h = fcn.004057ac();\n    var_14h = 0;\n    if (*0x419520 == 0) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_LoadLibraryW)(L\"USER32.DLL\");\n        pcVar6 = _sym.imp.KERNEL32.dll_GetProcAddress;\n        if ((iVar1 == 0) ||\n           (iVar2 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar1, \"MessageBoxW\"), \n           pcVar4 = _sym.imp.KERNEL32.dll_EncodePointer,  iVar2 == 0)) goto code_r0x0040aa9d;\n        *0x419520 = (*_sym.imp.KERNEL32.dll_EncodePointer)(iVar2);\n        uVar3 = (*pcVar6)(iVar1, 0x411c00);\n        *0x419524 = (*pcVar4)(uVar3);\n        uVar3 = (*pcVar6)(iVar1, \"GetLastActivePopup\");\n        *0x419528 = (*pcVar4)(uVar3);\n        uVar3 = (*pcVar6)(iVar1, \"GetUserObjectInformationW\");\n        *0x419530 = (*pcVar4)(uVar3);\n        if (*0x419530 != 0) {\n            uVar3 = (*pcVar6)(iVar1, \"GetProcessWindowStation\");\n            *0x41952c = (*pcVar4)(uVar3);\n        }\n    }\n    pcVar6 = _sym.imp.KERNEL32.dll_DecodePointer;\n    if ((*0x41952c == var_18h) || (*0x419530 == var_18h)) {\ncode_r0x0040aa4c:\n        if ((((*0x419524 != var_18h) && (pcVar4 = (*pcVar6)(*0x419524),  pcVar4 != NULL)) &&\n            (var_14h = (*pcVar4)(),  var_14h != 0)) &&\n           ((*0x419528 != var_18h && (pcVar4 = (*pcVar6)(*0x419528),  pcVar4 != NULL)))) {\n            var_14h = (*pcVar4)(var_14h);\n        }\n    }\n    else {\n        pcVar4 = (*_sym.imp.KERNEL32.dll_DecodePointer)(*0x41952c);\n        pcVar5 = (*pcVar6)(*0x419530);\n        if (((pcVar4 == NULL) || (pcVar5 == NULL)) ||\n           (((iVar1 = (*pcVar4)(),  iVar1 != 0 && (iVar1 = (*pcVar5)(iVar1, 1, &var_10h, 0xc, &var_24h),  iVar1 != 0))\n            && ((var_8h & 1) != 0)))) goto code_r0x0040aa4c;\n        arg_10h = arg_10h | 0x200000;\n    }\n    pcVar6 = (*pcVar6)(*0x419520);\n    if (pcVar6 != NULL) {\n        (*pcVar6)(var_14h, var_20h, var_1ch, arg_10h);\n    }\ncode_r0x0040aa9d:\n    fcn.004026dd(unaff_EBX);\n    return;\n}\n",
        "token_count": 918
    },
    "0040b546": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_38h\n\nvoid __cdecl fcn.0040b546(uint16_t *arg_8h, uint32_t *arg_ch)\n\n{\n    uint32_t *puVar1;\n    uint16_t uVar2;\n    uint16_t uVar3;\n    uint32_t uVar4;\n    uint8_t uVar5;\n    bool bVar6;\n    int32_t iVar7;\n    uint8_t uVar8;\n    uint32_t *puVar9;\n    uint *puVar10;\n    uint32_t uVar11;\n    uint32_t uVar12;\n    int32_t iVar13;\n    int32_t iVar14;\n    uint32_t uVar15;\n    int32_t iVar16;\n    bool bVar17;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint32_t var_28h;\n    uint var_24h;\n    uint32_t var_20h;\n    uint var_1ch;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x416800 ^ &stack0xfffffffc;\n    uVar2 = arg_8h[5];\n    uVar15 = *(arg_8h + 3);\n    var_10h = uVar15;\n    uVar4 = *(arg_8h + 1);\n    uVar3 = *arg_8h;\n    uVar12 = uVar2 & 0x7fff;\n    iVar13 = uVar12 - 0x3fff;\n    var_ch = uVar4;\n    var_8h = uVar3 << 0x10;\n    uVar5 = str.5_v_[1];\n    if (iVar13 == -0x3fff) {\n        iVar14 = 0;\n        iVar13 = 0;\n        do {\n            if ((&var_10h)[iVar13] != 0) {\n                var_10h = 0;\n                var_ch = 0;\n                var_8h = 0;\n                break;\n            }\n            iVar13 = iVar13 + 1;\n        } while (iVar13 < 3);\n    }\n    else {\n        bVar6 = false;\n        iVar16 = str.5_v_[0] + L'\\xffffffff';\n        iVar14 = str.5_v_[0] + (str.5_v_[0] >> 0x1f & 0x1fU) >> 5;\n        puVar1 = &var_10h + iVar14;\n        uVar8 = 0x1f - (str.5_v_[0] & 0x1f);\n        if ((*puVar1 & 1 << (uVar8 & 0x1f)) != 0) {\n            uVar11 = (&var_10h)[iVar14] & ~(-1 << (uVar8 & 0x1f));\n            iVar7 = iVar14;\n            while( true ) {\n                if (uVar11 != 0) {\n                    iVar7 = iVar16 + (iVar16 >> 0x1f & 0x1fU) >> 5;\n                    uVar11 = 1 << (0x1f - (iVar16 & 0x1f) & 0x1f);\n                    puVar9 = &var_10h + iVar7;\n                    var_20h = *puVar9 + uVar11;\n                    if (var_20h < *puVar9) goto code_r0x0040b68a;\n                    bVar17 = var_20h < uVar11;\n                    do {\n                        bVar6 = false;\n                        if (!bVar17) goto code_r0x0040b691;\ncode_r0x0040b68a:\n                        do {\n                            bVar6 = true;\ncode_r0x0040b691:\n                            iVar7 = iVar7 + -1;\n                            *puVar9 = var_20h;\n                            if ((iVar7 < 0) || (!bVar6)) goto code_r0x0040b69f;\n                            puVar9 = &var_10h + iVar7;\n                            var_20h = *puVar9 + 1;\n                        } while (var_20h < *puVar9);\n                        bVar17 = var_20h == 0;\n                    } while( true );\n                }\n                iVar7 = iVar7 + 1;\n                if (2 < iVar7) break;\n                uVar11 = (&var_10h)[iVar7];\n            }\n        }\ncode_r0x0040b69f:\n        *puVar1 = *puVar1 & -1 << (uVar8 & 0x1f);\n        iVar14 = iVar14 + 1;\n        if (iVar14 < 3) {\n            puVar10 = &var_10h + iVar14;\n            for (iVar16 = 3 - iVar14; iVar16 != 0; iVar16 = iVar16 + -1) {\n                *puVar10 = 0;\n                puVar10 = puVar10 + 1;\n            }\n        }\n        iVar14 = iVar13;\n        if (bVar6) {\n            iVar14 = uVar12 - 0x3ffe;\n        }\n        if (iVar14 < *0x417448 - str.5_v_[0]) {\n            var_10h = 0;\n            var_ch = 0;\n            var_8h = 0;\n        }\n        else {\n            if (*0x417448 < iVar14) {\n                if (iVar14 < *0x417444) {\n                    iVar14 = iVar14 + str.5_v_[3];\n                    var_10h = var_10h & 0x7fffffff;\n                    iVar13 = str.5_v_[1] + (str.5_v_[1] >> 0x1f & 0x1fU) >> 5;\n                    uVar8 = uVar5 & 0x1f;\n                    var_28h = 0;\n                    var_20h = 0;\n                    do {\n                        uVar15 = (&var_10h)[var_20h];\n                        (&var_10h)[var_20h] = uVar15 >> uVar8 | var_28h;\n                        var_28h = (uVar15 & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n                        var_20h = var_20h + 1;\n                    } while (var_20h < 3);\n                    iVar16 = 2;\n                    puVar10 = &var_8h + -iVar13;\n                    do {\n                        if (iVar16 < iVar13) {\n                            (&var_10h)[iVar16] = 0;\n                        }\n                        else {\n                            (&var_10h)[iVar16] = *puVar10;\n                        }\n                        puVar10 = puVar10 + -1;\n                        iVar16 = iVar16 + -1;\n                    } while (-1 < iVar16);\n                }\n                else {\n                    var_ch = 0;\n                    var_8h = 0;\n                    var_10h = 0x80000000;\n                    iVar13 = str.5_v_[1] + (str.5_v_[1] >> 0x1f & 0x1fU) >> 5;\n                    uVar8 = uVar5 & 0x1f;\n                    var_28h = 0;\n                    var_20h = 0;\n                    do {\n                        uVar15 = (&var_10h)[var_20h];\n                        (&var_10h)[var_20h] = uVar15 >> uVar8 | var_28h;\n                        var_28h = (uVar15 & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n                        var_20h = var_20h + 1;\n                    } while (var_20h < 3);\n                    iVar14 = 2;\n                    puVar10 = &var_8h + -iVar13;\n                    do {\n                        if (iVar14 < iVar13) {\n                            (&var_10h)[iVar14] = 0;\n                        }\n                        else {\n                            (&var_10h)[iVar14] = *puVar10;\n                        }\n                        puVar10 = puVar10 + -1;\n                        iVar14 = iVar14 + -1;\n                    } while (-1 < iVar14);\n                    iVar14 = str.5_v_[3] + *0x417444;\n                }\n                goto code_r0x0040ba4a;\n            }\n            iVar13 = *0x417448 - iVar13;\n            var_10h = uVar15;\n            var_ch = uVar4;\n            iVar14 = iVar13 + (iVar13 >> 0x1f & 0x1fU) >> 5;\n            uVar8 = iVar13 & 0x1f;\n            var_8h = uVar3 << 0x10;\n            var_28h = 0;\n            var_20h = 0;\n            do {\n                uVar15 = (&var_10h)[var_20h];\n                (&var_10h)[var_20h] = uVar15 >> uVar8 | var_28h;\n                var_28h = (uVar15 & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n                var_20h = var_20h + 1;\n            } while (var_20h < 3);\n            iVar13 = 2;\n            puVar10 = &var_8h + -iVar14;\n            do {\n                if (iVar13 < iVar14) {\n                    (&var_10h)[iVar13] = 0;\n                }\n                else {\n                    (&var_10h)[iVar13] = *puVar10;\n                }\n                puVar10 = puVar10 + -1;\n                iVar13 = iVar13 + -1;\n            } while (-1 < iVar13);\n            iVar14 = str.5_v_[0] + L'\\xffffffff';\n            iVar13 = str.5_v_[0] + (str.5_v_[0] >> 0x1f & 0x1fU) >> 5;\n            uVar8 = 0x1f - (str.5_v_[0] & 0x1f);\n            puVar1 = &var_10h + iVar13;\n            if ((*puVar1 & 1 << (uVar8 & 0x1f)) != 0) {\n                uVar15 = (&var_10h)[iVar13] & ~(-1 << (uVar8 & 0x1f));\n                iVar16 = iVar13;\n                while (uVar15 == 0) {\n                    iVar16 = iVar16 + 1;\n                    if (2 < iVar16) goto code_r0x0040b83e;\n                    uVar15 = (&var_10h)[iVar16];\n                }\n                iVar16 = iVar14 + (iVar14 >> 0x1f & 0x1fU) >> 5;\n                bVar6 = false;\n                uVar12 = 1 << (0x1f - (iVar14 & 0x1f) & 0x1f);\n                uVar4 = (&var_10h)[iVar16];\n                uVar15 = uVar4 + uVar12;\n                if ((uVar15 < uVar4) || (uVar15 < uVar12)) {\n                    bVar6 = true;\n                }\n                (&var_10h)[iVar16] = uVar15;\n                while ((iVar16 = iVar16 + -1,  -1 < iVar16 && (bVar6))) {\n                    uVar4 = (&var_10h)[iVar16];\n                    uVar15 = uVar4 + 1;\n                    bVar6 = false;\n                    if ((uVar15 < uVar4) || (uVar15 == 0)) {\n                        bVar6 = true;\n                    }\n                    (&var_10h)[iVar16] = uVar15;\n                }\n            }\ncode_r0x0040b83e:\n            *puVar1 = *puVar1 & -1 << (uVar8 & 0x1f);\n            iVar13 = iVar13 + 1;\n            if (iVar13 < 3) {\n                puVar10 = &var_10h + iVar13;\n                for (iVar14 = 3 - iVar13; iVar14 != 0; iVar14 = iVar14 + -1) {\n                    *puVar10 = 0;\n                    puVar10 = puVar10 + 1;\n                }\n            }\n            iVar13 = str.5_v_[1] + L'\\x01' + (str.5_v_[1] + L'\\x01' >> 0x1f & 0x1fU) >> 5;\n            uVar8 = uVar5 + 1 & 0x1f;\n            var_28h = 0;\n            var_20h = 0;\n            do {\n                uVar15 = (&var_10h)[var_20h];\n                (&var_10h)[var_20h] = uVar15 >> uVar8 | var_28h;\n                var_28h = (uVar15 & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n                var_20h = var_20h + 1;\n            } while (var_20h < 3);\n            iVar14 = 2;\n            puVar10 = &var_8h + -iVar13;\n            do {\n                if (iVar14 < iVar13) {\n                    (&var_10h)[iVar14] = 0;\n                }\n                else {\n                    (&var_10h)[iVar14] = *puVar10;\n                }\n                puVar10 = puVar10 + -1;\n                iVar14 = iVar14 + -1;\n            } while (-1 < iVar14);\n        }\n        iVar14 = 0;\n    }\ncode_r0x0040ba4a:\n    uVar15 = iVar14 << (0x1f - uVar5 & 0x1f) | -((uVar2 & 0x8000) != 0) & 0x80000000 | var_10h;\n    if (str.5_v_[2] == L'@') {\n        arg_ch[1] = uVar15;\n        *arg_ch = var_ch;\n    }\n    else if (str.5_v_[2] == L' ') {\n        *arg_ch = uVar15;\n    }\n    fcn.004026dd(uVar2 & 0x8000);\n    return;\n}\n",
        "token_count": 3262
    },
    "0040ba97": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_38h\n\nvoid __cdecl fcn.0040ba97(uint16_t *arg_8h, uint32_t *arg_ch)\n\n{\n    uint32_t *puVar1;\n    uint16_t uVar2;\n    uint16_t uVar3;\n    uint32_t uVar4;\n    uint8_t uVar5;\n    bool bVar6;\n    int32_t iVar7;\n    uint8_t uVar8;\n    uint32_t *puVar9;\n    uint *puVar10;\n    uint32_t uVar11;\n    uint32_t uVar12;\n    int32_t iVar13;\n    int32_t iVar14;\n    uint32_t uVar15;\n    int32_t iVar16;\n    bool bVar17;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint32_t var_28h;\n    uint var_24h;\n    uint32_t var_20h;\n    uint var_1ch;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x416800 ^ &stack0xfffffffc;\n    uVar2 = arg_8h[5];\n    uVar15 = *(arg_8h + 3);\n    var_10h = uVar15;\n    uVar4 = *(arg_8h + 1);\n    uVar3 = *arg_8h;\n    uVar12 = uVar2 & 0x7fff;\n    iVar13 = uVar12 - 0x3fff;\n    var_ch = uVar4;\n    var_8h = uVar3 << 0x10;\n    uVar5 = *0x417468;\n    if (iVar13 == -0x3fff) {\n        iVar14 = 0;\n        iVar13 = 0;\n        do {\n            if ((&var_10h)[iVar13] != 0) {\n                var_10h = 0;\n                var_ch = 0;\n                var_8h = 0;\n                break;\n            }\n            iVar13 = iVar13 + 1;\n        } while (iVar13 < 3);\n    }\n    else {\n        bVar6 = false;\n        iVar16 = *0x417464 + -1;\n        iVar14 = *0x417464 + (*0x417464 >> 0x1f & 0x1fU) >> 5;\n        puVar1 = &var_10h + iVar14;\n        uVar8 = 0x1f - (*0x417464 & 0x1f);\n        if ((*puVar1 & 1 << (uVar8 & 0x1f)) != 0) {\n            uVar11 = (&var_10h)[iVar14] & ~(-1 << (uVar8 & 0x1f));\n            iVar7 = iVar14;\n            while( true ) {\n                if (uVar11 != 0) {\n                    iVar7 = iVar16 + (iVar16 >> 0x1f & 0x1fU) >> 5;\n                    uVar11 = 1 << (0x1f - (iVar16 & 0x1f) & 0x1f);\n                    puVar9 = &var_10h + iVar7;\n                    var_20h = *puVar9 + uVar11;\n                    if (var_20h < *puVar9) goto code_r0x0040bbdb;\n                    bVar17 = var_20h < uVar11;\n                    do {\n                        bVar6 = false;\n                        if (!bVar17) goto code_r0x0040bbe2;\ncode_r0x0040bbdb:\n                        do {\n                            bVar6 = true;\ncode_r0x0040bbe2:\n                            iVar7 = iVar7 + -1;\n                            *puVar9 = var_20h;\n                            if ((iVar7 < 0) || (!bVar6)) goto code_r0x0040bbf0;\n                            puVar9 = &var_10h + iVar7;\n                            var_20h = *puVar9 + 1;\n                        } while (var_20h < *puVar9);\n                        bVar17 = var_20h == 0;\n                    } while( true );\n                }\n                iVar7 = iVar7 + 1;\n                if (2 < iVar7) break;\n                uVar11 = (&var_10h)[iVar7];\n            }\n        }\ncode_r0x0040bbf0:\n        *puVar1 = *puVar1 & -1 << (uVar8 & 0x1f);\n        iVar14 = iVar14 + 1;\n        if (iVar14 < 3) {\n            puVar10 = &var_10h + iVar14;\n            for (iVar16 = 3 - iVar14; iVar16 != 0; iVar16 = iVar16 + -1) {\n                *puVar10 = 0;\n                puVar10 = puVar10 + 1;\n            }\n        }\n        iVar14 = iVar13;\n        if (bVar6) {\n            iVar14 = uVar12 - 0x3ffe;\n        }\n        if (iVar14 < *0x417460 - *0x417464) {\n            var_10h = 0;\n            var_ch = 0;\n            var_8h = 0;\n        }\n        else {\n            if (*0x417460 < iVar14) {\n                if (iVar14 < *0x41745c) {\n                    iVar14 = iVar14 + *0x417470;\n                    var_10h = var_10h & 0x7fffffff;\n                    iVar13 = *0x417468 + (*0x417468 >> 0x1f & 0x1fU) >> 5;\n                    uVar8 = uVar5 & 0x1f;\n                    var_28h = 0;\n                    var_20h = 0;\n                    do {\n                        uVar15 = (&var_10h)[var_20h];\n                        (&var_10h)[var_20h] = uVar15 >> uVar8 | var_28h;\n                        var_28h = (uVar15 & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n                        var_20h = var_20h + 1;\n                    } while (var_20h < 3);\n                    iVar16 = 2;\n                    puVar10 = &var_8h + -iVar13;\n                    do {\n                        if (iVar16 < iVar13) {\n                            (&var_10h)[iVar16] = 0;\n                        }\n                        else {\n                            (&var_10h)[iVar16] = *puVar10;\n                        }\n                        puVar10 = puVar10 + -1;\n                        iVar16 = iVar16 + -1;\n                    } while (-1 < iVar16);\n                }\n                else {\n                    var_ch = 0;\n                    var_8h = 0;\n                    var_10h = 0x80000000;\n                    iVar13 = *0x417468 + (*0x417468 >> 0x1f & 0x1fU) >> 5;\n                    uVar8 = uVar5 & 0x1f;\n                    var_28h = 0;\n                    var_20h = 0;\n                    do {\n                        uVar15 = (&var_10h)[var_20h];\n                        (&var_10h)[var_20h] = uVar15 >> uVar8 | var_28h;\n                        var_28h = (uVar15 & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n                        var_20h = var_20h + 1;\n                    } while (var_20h < 3);\n                    iVar14 = 2;\n                    puVar10 = &var_8h + -iVar13;\n                    do {\n                        if (iVar14 < iVar13) {\n                            (&var_10h)[iVar14] = 0;\n                        }\n                        else {\n                            (&var_10h)[iVar14] = *puVar10;\n                        }\n                        puVar10 = puVar10 + -1;\n                        iVar14 = iVar14 + -1;\n                    } while (-1 < iVar14);\n                    iVar14 = *0x417470 + *0x41745c;\n                }\n                goto code_r0x0040bf9b;\n            }\n            iVar13 = *0x417460 - iVar13;\n            var_10h = uVar15;\n            var_ch = uVar4;\n            iVar14 = iVar13 + (iVar13 >> 0x1f & 0x1fU) >> 5;\n            uVar8 = iVar13 & 0x1f;\n            var_8h = uVar3 << 0x10;\n            var_28h = 0;\n            var_20h = 0;\n            do {\n                uVar15 = (&var_10h)[var_20h];\n                (&var_10h)[var_20h] = uVar15 >> uVar8 | var_28h;\n                var_28h = (uVar15 & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n                var_20h = var_20h + 1;\n            } while (var_20h < 3);\n            iVar13 = 2;\n            puVar10 = &var_8h + -iVar14;\n            do {\n                if (iVar13 < iVar14) {\n                    (&var_10h)[iVar13] = 0;\n                }\n                else {\n                    (&var_10h)[iVar13] = *puVar10;\n                }\n                puVar10 = puVar10 + -1;\n                iVar13 = iVar13 + -1;\n            } while (-1 < iVar13);\n            iVar14 = *0x417464 + -1;\n            iVar13 = *0x417464 + (*0x417464 >> 0x1f & 0x1fU) >> 5;\n            uVar8 = 0x1f - (*0x417464 & 0x1f);\n            puVar1 = &var_10h + iVar13;\n            if ((*puVar1 & 1 << (uVar8 & 0x1f)) != 0) {\n                uVar15 = (&var_10h)[iVar13] & ~(-1 << (uVar8 & 0x1f));\n                iVar16 = iVar13;\n                while (uVar15 == 0) {\n                    iVar16 = iVar16 + 1;\n                    if (2 < iVar16) goto code_r0x0040bd8f;\n                    uVar15 = (&var_10h)[iVar16];\n                }\n                iVar16 = iVar14 + (iVar14 >> 0x1f & 0x1fU) >> 5;\n                bVar6 = false;\n                uVar12 = 1 << (0x1f - (iVar14 & 0x1f) & 0x1f);\n                uVar4 = (&var_10h)[iVar16];\n                uVar15 = uVar4 + uVar12;\n                if ((uVar15 < uVar4) || (uVar15 < uVar12)) {\n                    bVar6 = true;\n                }\n                (&var_10h)[iVar16] = uVar15;\n                while ((iVar16 = iVar16 + -1,  -1 < iVar16 && (bVar6))) {\n                    uVar4 = (&var_10h)[iVar16];\n                    uVar15 = uVar4 + 1;\n                    bVar6 = false;\n                    if ((uVar15 < uVar4) || (uVar15 == 0)) {\n                        bVar6 = true;\n                    }\n                    (&var_10h)[iVar16] = uVar15;\n                }\n            }\ncode_r0x0040bd8f:\n            *puVar1 = *puVar1 & -1 << (uVar8 & 0x1f);\n            iVar13 = iVar13 + 1;\n            if (iVar13 < 3) {\n                puVar10 = &var_10h + iVar13;\n                for (iVar14 = 3 - iVar13; iVar14 != 0; iVar14 = iVar14 + -1) {\n                    *puVar10 = 0;\n                    puVar10 = puVar10 + 1;\n                }\n            }\n            iVar13 = *0x417468 + 1 + (*0x417468 + 1 >> 0x1f & 0x1fU) >> 5;\n            uVar8 = uVar5 + 1 & 0x1f;\n            var_28h = 0;\n            var_20h = 0;\n            do {\n                uVar15 = (&var_10h)[var_20h];\n                (&var_10h)[var_20h] = uVar15 >> uVar8 | var_28h;\n                var_28h = (uVar15 & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n                var_20h = var_20h + 1;\n            } while (var_20h < 3);\n            iVar14 = 2;\n            puVar10 = &var_8h + -iVar13;\n            do {\n                if (iVar14 < iVar13) {\n                    (&var_10h)[iVar14] = 0;\n                }\n                else {\n                    (&var_10h)[iVar14] = *puVar10;\n                }\n                puVar10 = puVar10 + -1;\n                iVar14 = iVar14 + -1;\n            } while (-1 < iVar14);\n        }\n        iVar14 = 0;\n    }\ncode_r0x0040bf9b:\n    uVar15 = iVar14 << (0x1f - uVar5 & 0x1f) | -((uVar2 & 0x8000) != 0) & 0x80000000 | var_10h;\n    if (*0x41746c == 0x40) {\n        arg_ch[1] = uVar15;\n        *arg_ch = var_ch;\n    }\n    else if (*0x41746c == 0x20) {\n        *arg_ch = uVar15;\n    }\n    fcn.004026dd(uVar2 & 0x8000);\n    return;\n}\n",
        "token_count": 3213
    },
    "0040e021": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040e021(char *arg_8h, int32_t arg_ch, uint32_t *arg_10h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    bool bVar3;\n    uint32_t *puVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puVar4 = arg_10h;\n    uVar8 = 0;\n    var_4h._0_2_ = 0x404e;\n    *arg_10h = 0;\n    arg_10h[1] = 0;\n    arg_10h[2] = 0;\n    if (arg_ch != 0) {\n        uVar5 = 0;\n        arg_10h = NULL;\n        do {\n            uVar9 = *puVar4;\n            uVar1 = puVar4[1];\n            uVar2 = puVar4[2];\n            bVar3 = false;\n            uVar6 = (uVar8 * 2 | uVar5 >> 0x1f) * 2 | uVar5 * 2 >> 0x1f;\n            uVar5 = uVar5 * 4;\n            uVar8 = (arg_10h * 2 | uVar8 >> 0x1f) * 2 | uVar8 * 2 >> 0x1f;\n            uVar7 = uVar9 + uVar5;\n            *puVar4 = uVar5;\n            puVar4[1] = uVar6;\n            puVar4[2] = uVar8;\n            if ((uVar7 < uVar5) || (uVar7 < uVar9)) {\n                bVar3 = true;\n            }\n            *puVar4 = uVar7;\n            uVar5 = uVar6;\n            if (bVar3) {\n                bVar3 = false;\n                uVar5 = uVar6 + 1;\n                if ((uVar5 < uVar6) || (uVar5 == 0)) {\n                    bVar3 = true;\n                }\n                puVar4[1] = uVar5;\n                if (bVar3) {\n                    uVar8 = uVar8 + 1;\n                    puVar4[2] = uVar8;\n                }\n            }\n            bVar3 = false;\n            uVar9 = uVar5 + uVar1;\n            if ((uVar9 < uVar5) || (uVar9 < uVar1)) {\n                bVar3 = true;\n            }\n            puVar4[1] = uVar9;\n            if (bVar3) {\n                uVar8 = uVar8 + 1;\n                puVar4[2] = uVar8;\n            }\n            bVar3 = false;\n            arg_10h = (uVar8 + uVar2) * 2 | uVar9 >> 0x1f;\n            uVar8 = uVar7 * 2;\n            uVar9 = uVar9 * 2 | uVar7 >> 0x1f;\n            puVar4[2] = arg_10h;\n            *puVar4 = uVar8;\n            puVar4[1] = uVar9;\n            uVar5 = uVar8 + *arg_8h;\n            if ((uVar5 < uVar8) || (uVar5 < *arg_8h)) {\n                bVar3 = true;\n            }\n            *puVar4 = uVar5;\n            uVar8 = uVar9;\n            if (bVar3) {\n                uVar8 = uVar9 + 1;\n                bVar3 = false;\n                if ((uVar8 < uVar9) || (uVar8 == 0)) {\n                    bVar3 = true;\n                }\n                puVar4[1] = uVar8;\n                if (bVar3) {\n                    arg_10h = arg_10h + 1;\n                    puVar4[2] = arg_10h;\n                }\n            }\n            arg_ch = arg_ch + -1;\n            arg_8h = arg_8h + 1;\n            puVar4[1] = uVar8;\n            puVar4[2] = arg_10h;\n        } while (arg_ch != 0);\n    }\n    if (puVar4[2] == 0) {\n        uVar8 = puVar4[1];\n        do {\n            var_4h._0_2_ = var_4h + -0x10;\n            uVar5 = uVar8 >> 0x10;\n            uVar8 = uVar8 << 0x10 | *puVar4 >> 0x10;\n            puVar4[1] = uVar8;\n            *puVar4 = *puVar4 << 0x10;\n        } while (uVar5 == 0);\n        puVar4[2] = uVar5;\n    }\n    uVar8 = puVar4[2];\n    if ((uVar8 & 0x8000) == 0) {\n        uVar5 = puVar4[1];\n        do {\n            var_4h._0_2_ = var_4h + -1;\n            uVar9 = uVar8 * 2;\n            uVar8 = uVar9 | uVar5 >> 0x1f;\n            uVar5 = uVar5 * 2 | *puVar4 >> 0x1f;\n            *puVar4 = *puVar4 * 2;\n            puVar4[1] = uVar5;\n            puVar4[2] = uVar8;\n        } while ((uVar9 & 0x8000) == 0);\n    }\n    *(puVar4 + 10) = var_4h;\n    return;\n}\n",
        "token_count": 1359
    },
    "null": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid entry0(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    char *pcVar5;\n    char *pcVar6;\n    uint uVar7;\n    \n    // [04] -rwx section size 69632 named .text_1\n    cVar1 = *0x45099e;\n    iVar4 = -0x1fbca518;\n    *0x450769 = 0x450006 - *0x45076d;\n    *0x45099e = 0;\n    if (cVar1 == '\\x01') {\n        if ((*0x450899 == 0) || (*0x45089d == 0)) {\n            if (*0x4508a1 != 0) {\n                iVar2 = fcn.004503f2(*(*0x450769 - *0x4508a1));\n                if (iVar2 != 0) {\n                    *0x4508a5 = iVar2;\n                    *0x4508d6 = fcn.00450431(0xe0435ae8, iVar2, 0x4508a9);\n                    *0x4508da = fcn.00450431(0xe0435ae8, *0x4508a5, 0x4508b6);\n                }\n            }\n        }\n        else {\n            *0x4508d6 = *(*0x450769 - *0x450899);\n            *0x4508da = *(*0x450769 - *0x45089d);\n        }\n        if ((*0x4508da != NULL) && (*0x4508d6 != NULL)) {\n            iVar2 = (**0x4508d6)(0x4508e2);\n            if (iVar2 != 0) {\n                uVar7 = 0x4508c5;\n                *0x4508a5 = iVar2;\n                iVar3 = (**0x4508da)(iVar2, 0x4508c5);\n                if (iVar3 != 0) {\n                    *0x4508de = iVar3;\n                    iVar3 = fcn.0045037b(0xe0435ae8, 0x4508e2, 0x450976);\n                    if (iVar3 != 0) {\n                        iVar3 = fcn.00450678(0xe0435ae8);\n                        if (iVar3 == 0) {\n                            fcn.00450224(0x45099f, *0x45099a, 0x450779, *0x450775);\n                            iVar2 = (**0x45098a)(0, 0x450795, 0xff);\n                            pcVar5 = iVar2 + 0x450795;\n                            do {\n                                pcVar6 = pcVar5;\n                                if (iVar2 == 0) break;\n                                iVar2 = iVar2 + -1;\n                                pcVar6 = pcVar5 + -1;\n                                cVar1 = *pcVar5;\n                                pcVar5 = pcVar6;\n                            } while (cVar1 != '.');\n                            pcVar5 = 0x45078d;\n                            for (iVar2 = 8; pcVar6 = pcVar6 + 1,  iVar2 != 0; iVar2 = iVar2 + -1) {\n                                *pcVar6 = *pcVar5;\n                                pcVar5 = pcVar5 + 1;\n                            }\n                            uVar7 = 0x4501c6;\n                            iVar2 = iVar4;\n                            iVar3 = fcn.004506ab(0xe0435ae8, 0x450795, 0x45099f, *0x45099a);\n                            if (iVar3 == 1) {\n                                uVar7 = 0x450795;\n                                fcn.00450706(0xe0435ae8, 0x450795);\n                                iVar2 = iVar4;\n                            }\n                        }\n                    }\n                }\n                (**0x450976)(*0x4508a5, iVar2, uVar7);\n            }\n        }\n    }\n    // WARNING: Could not recover jumptable at 0x004501f8. Too many branches\n    // WARNING: Treating indirect jump as call\n    (*(*0x450769 - *0x450771))();\n    return;\n}\n",
        "token_count": 955
    },
    "0045024c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong __cdecl fcn.0045024c(uint32_t arg_8h, char *arg_ch, uint32_t arg_10h)\n\n{\n    uint8_t uVar1;\n    char cVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint in_EDX;\n    \n    uVar4 = 8;\n    if (arg_10h < 8) {\n        iVar3 = 8 - arg_10h;\n        do {\n            arg_8h = arg_8h << 4 | arg_8h >> 0x1c;\n            iVar3 = iVar3 + -1;\n            uVar4 = arg_10h;\n        } while (iVar3 != 0);\n    }\n    do {\n        uVar1 = arg_8h >> 0x1c;\n        if (arg_8h >> 0x1c < 10) {\n            cVar2 = uVar1 + 0x30;\n        }\n        else {\n            cVar2 = uVar1 + 0x37;\n        }\n        *arg_ch = cVar2;\n        arg_ch = arg_ch + 1;\n        uVar4 = uVar4 - 1;\n        arg_8h = arg_8h << 4 | arg_8h >> 0x1c;\n    } while (uVar4 != 0);\n    return CONCAT44(in_EDX, arg_ch);\n}\n",
        "token_count": 312
    },
    "004502d1": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong __cdecl fcn.004502d1(char *arg_8h, int32_t arg_ch, uint arg_10h)\n\n{\n    char cVar1;\n    char *pcVar2;\n    uint in_EDX;\n    \n    pcVar2 = NULL;\n    if (arg_ch != 0) {\n        do {\n            pcVar2 = arg_8h;\n            if (arg_ch == 0) break;\n            arg_ch = arg_ch + -1;\n            pcVar2 = arg_8h + 1;\n            cVar1 = *arg_8h;\n            arg_8h = pcVar2;\n        } while (arg_10h != cVar1);\n        pcVar2 = pcVar2 + -1;\n        if (*pcVar2 != arg_10h) {\n            pcVar2 = NULL;\n        }\n    }\n    return CONCAT44(in_EDX, pcVar2);\n}\n",
        "token_count": 198
    },
    "00450308": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong __cdecl fcn.00450308(char *arg_8h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint in_EDX;\n    \n    iVar2 = 0;\n    if (arg_8h != NULL) {\n        uVar3 = 0xffffffff;\n        do {\n            if (uVar3 == 0) break;\n            uVar3 = uVar3 - 1;\n            cVar1 = *arg_8h;\n            arg_8h = arg_8h + 1;\n        } while (cVar1 != '\\0');\n        iVar2 = ~uVar3 - 1;\n    }\n    return CONCAT44(in_EDX, iVar2);\n}\n",
        "token_count": 162
    },
    "00450335": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong __cdecl fcn.00450335(uint8_t *arg_8h, uint8_t *arg_ch)\n\n{\n    uint8_t uVar1;\n    uint8_t uVar2;\n    int32_t iVar3;\n    uint in_EDX;\n    \n    iVar3 = -1;\n    if ((arg_8h != NULL) && (arg_ch != NULL)) {\n        while( true ) {\n            uVar1 = *arg_8h;\n            uVar2 = *arg_ch;\n            if ((uVar1 == 0) || ((uVar2 == 0 || (uVar2 != uVar1)))) break;\n            arg_ch = arg_ch + 1;\n            arg_8h = arg_8h + 1;\n        }\n        iVar3 = uVar1 - uVar2;\n    }\n    return CONCAT44(in_EDX, iVar3);\n}\n",
        "token_count": 190
    },
    "0045037b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0045037b(int32_t arg_8h, int32_t *arg_ch, int32_t *arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    char *pcVar4;\n    int32_t *piVar5;\n    uint var_8h;\n    uint var_4h;\n    \n    var_8h = 0;\n    iVar1 = (**(arg_8h + 0x2001adf6))(arg_ch);\n    if (iVar1 == 0) {\n        iVar1 = (**(arg_8h + 0x2001adee))(arg_ch);\n    }\n    if (iVar1 != 0) {\n        while( true ) {\n            piVar3 = arg_10h;\n            piVar5 = arg_ch;\n            iVar2 = (*(arg_8h + 0x2001a820))();\n            pcVar4 = arg_ch + iVar2 + 1;\n            if (*pcVar4 == '\\0') break;\n            iVar2 = (**(arg_8h + 0x2001adf2))(iVar1, pcVar4, pcVar4);\n            if (iVar2 == 0) {\n                return 0;\n            }\n            *piVar5 = iVar2;\n            arg_10h = piVar5 + 1;\n            arg_ch = piVar3;\n        }\n        var_8h = 1;\n    }\n    return var_8h;\n}\n",
        "token_count": 332
    },
    "00450678": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00450678(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint var_28h;\n    \n    iVar1 = (*(arg_8h + 0x2001a9e0))(arg_8h, 0x7f3, 0, &var_28h);\n    if (iVar1 == 1) {\n        (*(arg_8h + 0x2001a712))(arg_8h, &var_28h);\n    }\n    return;\n}\n",
        "token_count": 117
    },
    "00402f45": {
        "rules": [
            "hash data using aphash/ab9c9a8537c84744923d9bbb8bd71d10"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00402f45(uint param_1, int32_t param_2)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = *(param_2 + 4) & 0x7ff00000;\n    if (uVar1 != 0x7ff00000) {\n        return uVar1;\n    }\n    return *(param_2 + 4);\n}\n",
        "token_count": 92
    },
    "004070d2": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.004070d2(uint arg_8h)\n\n{\n    uint8_t **ppuVar1;\n    uint8_t **arg_8h_00;\n    uint *puVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t unaff_EBP;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.00404ba0(0x411f28, 0xc);\n    *(unaff_EBP + -0x1c) = 0;\n    arg_8h_00 = *(unaff_EBP + 8);\n    if (arg_8h_00 == NULL) {\n        puVar2 = fcn.00404b54();\n        *puVar2 = 0x16;\n        fcn.00404b02();\n        goto code_r0x004071b5;\n    }\n    fcn.004025ed(arg_8h_00);\n    *(unaff_EBP + -4) = 0;\n    if ((*(arg_8h_00 + 3) & 0x40) == 0) {\n        uVar3 = fcn.00406741(arg_8h_00);\n        if ((uVar3 == 0xffffffff) || (uVar3 == 0xfffffffe)) {\n            iVar4 = 0x417248;\n        }\n        else {\n            iVar4 = (uVar3 & 0x1f) * 0x40 + *((uVar3 >> 5) * 4 + 0x419560);\n        }\n        if ((*(iVar4 + 0x24) & 0x7f) == 0) {\n            if ((uVar3 == 0xffffffff) || (uVar3 == 0xfffffffe)) {\n                iVar4 = 0x417248;\n            }\n            else {\n                iVar4 = (uVar3 & 0x1f) * 0x40 + *((uVar3 >> 5) * 4 + 0x419560);\n            }\n            if ((*(iVar4 + 0x24) & 0x80) == 0) goto code_r0x00407188;\n        }\n        puVar2 = fcn.00404b54();\n        *puVar2 = 0x16;\n        fcn.00404b02();\n        *(unaff_EBP + -0x1c) = 0xffffffff;\n    }\ncode_r0x00407188:\n    if (*(unaff_EBP + -0x1c) == 0) {\n        ppuVar1 = arg_8h_00 + 1;\n        *ppuVar1 = *ppuVar1 + -1;\n        if (*ppuVar1 < 0) {\n            uVar3 = fcn.0040a81e(arg_8h_00);\n        }\n        else {\n            uVar3 = **arg_8h_00;\n            *arg_8h_00 = *arg_8h_00 + 1;\n        }\n        *(unaff_EBP + -0x1c) = uVar3;\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    fcn.004071be();\ncode_r0x004071b5:\n    fcn.00404be5();\n    return;\n}\n",
        "token_count": 750
    },
    "004506ab": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nbool __cdecl fcn.004506ab(int32_t arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    iVar1 = (**(arg_8h + 0x2001ae9a))(arg_ch, 0x40000000, 2, 0, 2, 0x80, 0);\n    if (iVar1 != -1) {\n        (**(arg_8h + 0x2001ae9e))(iVar1, arg_10h, arg_14h, &var_4h, 0, iVar1);\n        (**(arg_8h + 0x2001ae96))();\n    }\n    return iVar1 != -1;\n}\n",
        "token_count": 177
    },
    "0040666d": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0040666d(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    uint32_t arg_8h_00;\n    uint *puVar2;\n    uint uVar3;\n    int32_t unaff_EBP;\n    int32_t iVar4;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.00404ba0(0x411e88, 0x10);\n    arg_8h_00 = *(unaff_EBP + 8);\n    if (arg_8h_00 == 0xfffffffe) {\n        puVar2 = fcn.00404b67();\n        *puVar2 = 0;\n        puVar2 = fcn.00404b54();\n        *puVar2 = 9;\n    }\n    else {\n        if ((-1 < arg_8h_00) && (arg_8h_00 < *0x419554)) {\n            piVar1 = (arg_8h_00 >> 5) * 4 + 0x419560;\n            iVar4 = (arg_8h_00 & 0x1f) * 0x40;\n            if ((*(*piVar1 + 4 + iVar4) & 1) != 0) {\n                fcn.0040a16a(arg_8h_00);\n                *(unaff_EBP + -4) = 0;\n                if ((*(*piVar1 + 4 + iVar4) & 1) == 0) {\n                    puVar2 = fcn.00404b54();\n                    *puVar2 = 9;\n                    puVar2 = fcn.00404b67();\n                    *puVar2 = 0;\n                    *(unaff_EBP + -0x1c) = 0xffffffff;\n                }\n                else {\n                    uVar3 = fcn.00405f70(arg_8h_00, *(unaff_EBP + 0xc), *(unaff_EBP + 0x10));\n                    *(unaff_EBP + -0x1c) = uVar3;\n                }\n                *(unaff_EBP + -4) = 0xfffffffe;\n                fcn.00406739();\n                goto code_r0x00406730;\n            }\n        }\n        puVar2 = fcn.00404b67();\n        *puVar2 = 0;\n        puVar2 = fcn.00404b54();\n        *puVar2 = 9;\n        fcn.00404b02();\n    }\ncode_r0x00406730:\n    fcn.00404be5();\n    return;\n}\n",
        "token_count": 606
    },
    "00401080": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00401080(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_14h = 0;\n    fcn.00401e30(arg_8h);\n    iVar1 = fcn.00402000();\n    var_10h = arg_8h;\n    for (var_4h = 0; var_4h < iVar1; var_4h = var_4h + 1) {\n        iVar2 = var_10h % 10;\n        var_14h = iVar2 * iVar2 * iVar2 + var_14h;\n        var_10h = var_10h / 10;\n    }\n    return var_14h == arg_8h;\n}\n",
        "token_count": 211
    },
    "00401110": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with lookup table/f2e93a0d9a164553a93d71878df6b782"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_2h\n\nvoid fcn.00401110(void)\n\n{\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_8h;\n    uint var_2h;\n    \n    var_8h = 0;\n    do {\n        *(var_8h + 0x417860) = *(var_8h + 0x415000) ^ var_8h + 1U ^ 0xe3;\n        var_8h = var_8h + 1;\n    } while (var_8h != 0xdac);\n    return;\n}\n",
        "token_count": 311
    },
    "004020ab": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_1ch\n\nvoid __cdecl fcn.004020ab(uint arg_8h, uint arg_ch)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uint arg_8h_00;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t unaff_EBP;\n    uint var_1ch;\n    uint arg_10h;\n    uint var_4h;\n    \n    fcn.00404ba0(0x411d50, 0xc);\n    if (*(unaff_EBP + 8) == 0) {\n        puVar1 = fcn.00404b54();\n        *puVar1 = 0x16;\n        fcn.00404b02();\n    }\n    else {\n        iVar2 = fcn.00402516();\n        fcn.0040262e(1, iVar2 + 0x20);\n        *(unaff_EBP + -4) = 0;\n        iVar2 = fcn.00402516();\n        arg_8h_00 = fcn.00403c0b(iVar2 + 0x20);\n        iVar2 = unaff_EBP + 0xc;\n        arg_10h = 0;\n        uVar4 = *(unaff_EBP + 8);\n        iVar3 = fcn.00402516();\n        uVar4 = fcn.00403d70(iVar3 + 0x20, uVar4, arg_10h, iVar2);\n        *(unaff_EBP + -0x1c) = uVar4;\n        iVar2 = fcn.00402516();\n        fcn.00403ca7(arg_8h_00, iVar2 + 0x20);\n        *(unaff_EBP + -4) = 0xfffffffe;\n        fcn.0040213f();\n    }\n    fcn.00404be5();\n    return;\n}\n",
        "token_count": 445
    },
    "0040213f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040213f(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00402516();\n    fcn.0040269c(1, iVar1 + 0x20);\n    return;\n}\n",
        "token_count": 54
    },
    "0040706a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040706a(uint arg_8h)\n\n{\n    fcn.00406f2a(arg_8h, 0, 0);\n    return;\n}\n",
        "token_count": 42
    },
    "00407a9b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00407aaf)\n// WARNING: Removing unreachable block (ram,0x00407ab5)\n// WARNING: Removing unreachable block (ram,0x00407ab7)\n\nvoid fcn.00407a9b(void)\n\n{\n    return;\n}\n",
        "token_count": 65
    },
    "004503f2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint16_t * __cdecl fcn.004503f2(uint32_t arg_8h)\n\n{\n    int16_t *piVar1;\n    \n    piVar1 = arg_8h & 0xffff0000;\n    while ((*piVar1 != 0x5a4d || (*(piVar1 + *(piVar1 + 0x1e)) != 0x4550))) {\n        piVar1 = piVar1 + -0x8000;\n        if (piVar1 < 0x70000000) {\n            return NULL;\n        }\n    }\n    return piVar1;\n}\n",
        "token_count": 133
    },
    "00450431": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop",
            "parse PE header",
            "resolve function by parsing PE exports"
        ],
        "decompiled_code": "\nulong __cdecl fcn.00450431(int32_t arg_8h, int16_t *arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t extraout_ECX;\n    uint in_EDX;\n    uint32_t *puVar5;\n    ulong uVar6;\n    uint32_t var_4h;\n    \n    var_4h = 0;\n    if ((*arg_ch == 0x5a4d) && (*(arg_ch + *(arg_ch + 0x1e)) == 0x4550)) {\n        puVar5 = arg_ch + *(arg_ch + 0x1e) + 0x1e;\n        uVar3 = *puVar5;\n        if (uVar3 != 0) {\n            uVar4 = 0;\n            iVar1 = *(arg_ch + uVar3 + 0x20);\n            do {\n                iVar2 = *(arg_ch + uVar4 * 4 + iVar1);\n                if (iVar2 != 0) {\n                    uVar6 = (*(arg_8h + 0x2001a84d))(iVar2 + arg_ch, arg_10h);\n                    puVar5 = uVar6 >> 0x20;\n                    uVar4 = extraout_ECX;\n                    if (uVar6 == 0) break;\n                }\n                uVar4 = uVar4 + 1;\n            } while (uVar4 < *(arg_ch + uVar3 + 0x18));\n            if ((uVar4 < *(arg_ch + uVar3 + 0x18)) &&\n               (iVar1 = *(arg_ch + *(arg_ch + uVar4 * 2 + *(arg_ch + uVar3 + 0x24)) * 4 + *(arg_ch + uVar3 + 0x1c)), \n               iVar1 != 0)) {\n                uVar3 = iVar1 + arg_ch;\n                if ((uVar3 < *puVar5) || (*puVar5 + puVar5[1] < uVar3)) {\n                    var_4h = uVar3;\n                }\n            }\n        }\n    }\n    return CONCAT44(in_EDX, var_4h);\n}\n",
        "token_count": 506
    },
    "004504c8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong __cdecl fcn.004504c8(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, uchar *arg_14h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uchar *puVar3;\n    uint arg_ch_00;\n    uint unaff_EDI;\n    ulong uVar4;\n    ulong uVar5;\n    ulong uVar6;\n    ulong uVar7;\n    ulong uVar8;\n    uint var_128h;\n    uint var_124h;\n    uint var_120h;\n    uint var_11ch;\n    uint var_118h;\n    uint var_114h;\n    uint var_110h;\n    uint var_10ch;\n    uint var_106h;\n    \n    var_128h = 0;\n    iVar1 = (**(arg_8h + 0x2001aeaa))(&var_106h, 0x104);\n    if (iVar1 != 0) {\n        iVar1 = (*(arg_8h + 0x2001a7e9))(&var_106h, iVar1, 0x3a);\n        if (iVar1 != 0) {\n            *(iVar1 + 1) = 0x5c;\n            *(iVar1 + 2) = 0;\n            var_10ch = 0;\n            (**(arg_8h + 0x2001aeae))(&var_106h, 0, 0, &var_10ch, 0, 0, 0, 0);\n            uVar4 = (*(arg_8h + 0x2001a7af))(var_10ch, 0xffffffff);\n            uVar5 = (*(arg_8h + 0x2001a7af))(uVar4 >> 0x20, 0xffff);\n            uVar6 = (*(arg_8h + 0x2001a7af))(uVar5 >> 0x20, 0xffff);\n            uVar7 = (*(arg_8h + 0x2001a7af))(uVar6 >> 0x20, 0xffff);\n            uVar8 = (*(arg_8h + 0x2001a7af))(uVar7 >> 0x20, 0xffffffff);\n            uVar2 = (*(arg_8h + 0x2001a7af))(uVar8 >> 0x20, 0xffff);\n            *arg_14h = 0x7b;\n            puVar3 = (*(arg_8h + 0x2001a764))(uVar4 + arg_ch, arg_14h + 1, 8);\n            *puVar3 = 0x2d;\n            puVar3 = (*(arg_8h + 0x2001a764))(uVar5 & 0xffff, puVar3 + 1, 4);\n            *puVar3 = 0x2d;\n            puVar3 = (*(arg_8h + 0x2001a764))(uVar6 & 0xffff, puVar3 + 1, 4);\n            *puVar3 = 0x2d;\n            puVar3 = fcn.0045024c(uVar7 & 0xffff, puVar3 + 1, 4);\n            *puVar3 = 0x2d;\n            arg_ch_00 = (*(arg_8h + 0x2001a764))(uVar8 + arg_10h, puVar3 + 1, 8);\n            puVar3 = fcn.0045024c(uVar2 & 0xffff, arg_ch_00, 4);\n            *puVar3 = 0x7d;\n            puVar3[1] = 0;\n            var_128h = 1;\n        }\n    }\n    return CONCAT44(unaff_EDI, var_128h);\n}\n",
        "token_count": 861
    },
    "00450706": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00450706(int32_t arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint var_54h;\n    uint uStack84;\n    uint var_44h;\n    \n    puVar2 = &var_44h;\n    for (iVar1 = 0x44; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0;\n        puVar2 = puVar2 + 1;\n    }\n    puVar2 = &var_54h;\n    for (iVar1 = 0x10; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0;\n        puVar2 = puVar2 + 1;\n    }\n    (**(arg_8h + 0x2001aea6))(0, arg_ch, 0, 0, 0, 0, 0, 0, &var_44h, &var_54h);\n    (**(arg_8h + 0x2001ae96))(uStack84, var_54h);\n    (**(arg_8h + 0x2001ae96))();\n    return;\n}\n",
        "token_count": 277
    },
    "00405c20": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405c20(int32_t arg_8h)\n\n{\n    if ((arg_8h != 0) && (*(arg_8h + -8) == 0xdddd)) {\n        fcn.00406d11(arg_8h + -8);\n    }\n    return;\n}\n",
        "token_count": 70
    },
    "00401490": {
        "rules": [
            "create or open file",
            "create process on Windows",
            "create process suspended",
            "create or open registry key",
            "read file via mapping/c13904028ed642a3a95ca59257f2ad8d",
            "delay execution",
            "allocate memory",
            "compare security identifiers",
            "set file attributes",
            "get file attributes",
            "create thread",
            "allocate RW memory",
            "terminate process",
            "get common file path",
            "log keystrokes via polling",
            "allocate thread local storage",
            "find graphical window",
            "enumerate gui resources",
            "delete directory",
            "query environment variable",
            "log keystrokes",
            "create directory",
            "create mutex",
            "set environment variable",
            "set application hook",
            "get disk information",
            "accept command line arguments",
            "get system information on Windows",
            "get OS version",
            "get thread local storage value",
            "set current directory",
            "read pipe",
            "enumerate files on windows",
            "query or enumerate registry key",
            "write file on Windows",
            "write and execute a file",
            "query or enumerate registry value",
            "get graphical window text",
            "set thread local storage value",
            "read .ini file",
            "read file via mapping",
            "read file on Windows",
            "copy file",
            "link function at runtime on Windows",
            "check mutex and exit",
            "get session user name",
            "move file",
            "get file version info",
            "extract resource via kernel32 functions",
            "open clipboard",
            "read clipboard data",
            "write clipboard data",
            "replace clipboard data",
            "get keyboard layout",
            "get geographical location",
            "get disk size",
            "delete file",
            "capture screenshot"
        ],
        "decompiled_code": "\nuint fcn.00401490(void)\n\n{\n    func_0x0040f060();\n    func_0x0040f05c();\n    func_0x0040f058();\n    func_0x0040f054();\n    func_0x0040f064();\n    sub.MPR.dll_WNetCloseEnum();\n    sub.MPR.dll_WNetOpenEnumA();\n    sub.MPR.dll_WNetEnumResourceA();\n    sub.VERSION.dll_GetFileVersionInfoA();\n    sub.VERSION.dll_GetFileVersionInfoSizeA();\n    sub.VERSION.dll_VerQueryValueA();\n    func_0x0040f778();\n    func_0x0040f774();\n    func_0x0040f770();\n    func_0x0040f76c();\n    func_0x0040f768();\n    func_0x0040f754();\n    func_0x0040f740();\n    func_0x0040f744();\n    func_0x0040f748();\n    func_0x0040f74c();\n    func_0x0040f750();\n    func_0x0040f77c();\n    func_0x0040f758();\n    func_0x0040f75c();\n    func_0x0040f760();\n    func_0x0040f398();\n    func_0x0040f394();\n    func_0x0040f390();\n    func_0x0040f38c();\n    func_0x0040f388();\n    func_0x0040f384();\n    func_0x0040f380();\n    func_0x0040f37c();\n    func_0x0040f378();\n    func_0x0040f374();\n    func_0x0040f370();\n    func_0x0040f36c();\n    func_0x0040f368();\n    func_0x0040f364();\n    func_0x0040f360();\n    func_0x0040f35c();\n    func_0x0040f358();\n    func_0x0040f354();\n    func_0x0040f350();\n    func_0x0040f34c();\n    func_0x0040f348();\n    func_0x0040f344();\n    func_0x0040f340();\n    func_0x0040f33c();\n    func_0x0040f338();\n    func_0x0040f334();\n    func_0x0040f330();\n    func_0x0040f32c();\n    func_0x0040f328();\n    func_0x0040f324();\n    func_0x0040f2b0();\n    func_0x0040f320();\n    func_0x0040f31c();\n    func_0x0040f318();\n    func_0x0040f314();\n    func_0x0040f310();\n    func_0x0040f30c();\n    func_0x0040f308();\n    func_0x0040f304();\n    func_0x0040f300();\n    func_0x0040f2fc();\n    func_0x0040f2f8();\n    func_0x0040f2f4();\n    func_0x0040f2f0();\n    func_0x0040f2ec();\n    func_0x0040f2e8();\n    func_0x0040f2e4();\n    func_0x0040f2e0();\n    func_0x0040f2dc();\n    func_0x0040f2d8();\n    func_0x0040f2d4();\n    func_0x0040f2d0();\n    func_0x0040f2cc();\n    func_0x0040f2c8();\n    func_0x0040f204();\n    func_0x0040f144();\n    func_0x0040f148();\n    func_0x0040f14c();\n    func_0x0040f150();\n    func_0x0040f154();\n    func_0x0040f2bc();\n    func_0x0040f158();\n    func_0x0040f2c0();\n    func_0x0040f15c();\n    func_0x0040f160();\n    func_0x0040f164();\n    func_0x0040f168();\n    func_0x0040f16c();\n    func_0x0040f170();\n    func_0x0040f174();\n    func_0x0040f178();\n    func_0x0040f17c();\n    func_0x0040f180();\n    func_0x0040f184();\n    func_0x0040f188();\n    func_0x0040f18c();\n    func_0x0040f190();\n    func_0x0040f194();\n    func_0x0040f198();\n    func_0x0040f2c4();\n    func_0x0040f19c();\n    func_0x0040f1a0();\n    func_0x0040f1a4();\n    func_0x0040f1a8();\n    func_0x0040f1ac();\n    func_0x0040f1b0();\n    func_0x0040f1b4();\n    func_0x0040f1b8();\n    func_0x0040f1bc();\n    func_0x0040f1c0();\n    func_0x0040f1c4();\n    func_0x0040f1c8();\n    func_0x0040f1cc();\n    func_0x0040f1d0();\n    func_0x0040f1d4();\n    func_0x0040f1d8();\n    func_0x0040f1dc();\n    func_0x0040f1e0();\n    func_0x0040f1e4();\n    func_0x0040f1e8();\n    func_0x0040f1ec();\n    func_0x0040f1f0();\n    func_0x0040f1f4();\n    func_0x0040f1f8();\n    func_0x0040f1fc();\n    func_0x0040f200();\n    func_0x0040f3ec();\n    func_0x0040f208();\n    func_0x0040f20c();\n    func_0x0040f210();\n    func_0x0040f214();\n    func_0x0040f218();\n    func_0x0040f21c();\n    func_0x0040f220();\n    func_0x0040f224();\n    func_0x0040f228();\n    func_0x0040f22c();\n    func_0x0040f230();\n    func_0x0040f234();\n    func_0x0040f238();\n    func_0x0040f23c();\n    func_0x0040f240();\n    func_0x0040f244();\n    func_0x0040f248();\n    func_0x0040f24c();\n    func_0x0040f250();\n    func_0x0040f254();\n    func_0x0040f258();\n    func_0x0040f25c();\n    func_0x0040f260();\n    func_0x0040f264();\n    func_0x0040f268();\n    func_0x0040f26c();\n    func_0x0040f270();\n    func_0x0040f274();\n    func_0x0040f278();\n    func_0x0040f27c();\n    func_0x0040f280();\n    func_0x0040f284();\n    func_0x0040f288();\n    func_0x0040f28c();\n    func_0x0040f290();\n    func_0x0040f294();\n    func_0x0040f298();\n    func_0x0040f29c();\n    func_0x0040f2a0();\n    func_0x0040f2a4();\n    func_0x0040f2a8();\n    sub.USER32.dll_DdeNameService();\n    sub.USER32.dll_DdeFreeDataHandle();\n    sub.USER32.dll_DdeUnaccessData();\n    sub.USER32.dll_DdeAccessData();\n    sub.USER32.dll_DdeQueryStringA();\n    sub.USER32.dll_DdeCreateDataHandle();\n    sub.USER32.dll_DdeClientTransaction();\n    sub.USER32.dll_DdeConnect();\n    sub.USER32.dll_DdeCreateStringHandleA();\n    sub.USER32.dll_DdeInitializeA();\n    func_0x0040f454();\n    func_0x0040f458();\n    func_0x0040f45c();\n    func_0x0040f460();\n    func_0x0040f464();\n    func_0x0040f468();\n    func_0x0040f46c();\n    func_0x0040f470();\n    func_0x0040f474();\n    func_0x0040f4f0();\n    func_0x0040f4f4();\n    func_0x0040f4f8();\n    func_0x0040f4fc();\n    func_0x0040f500();\n    func_0x0040f504();\n    func_0x0040f508();\n    func_0x0040f50c();\n    func_0x0040f510();\n    func_0x0040f514();\n    func_0x0040f518();\n    func_0x0040f51c();\n    func_0x0040f520();\n    func_0x0040f524();\n    func_0x0040f528();\n    func_0x0040f52c();\n    func_0x0040f530();\n    func_0x0040f534();\n    func_0x0040f538();\n    func_0x0040f53c();\n    func_0x0040f540();\n    func_0x0040f544();\n    func_0x0040f548();\n    func_0x0040f54c();\n    func_0x0040f550();\n    func_0x0040f554();\n    func_0x0040f558();\n    func_0x0040f55c();\n    func_0x0040f560();\n    func_0x0040f564();\n    func_0x0040f568();\n    func_0x0040f56c();\n    func_0x0040f570();\n    func_0x0040f574();\n    func_0x0040f578();\n    func_0x0040f57c();\n    func_0x0040f580();\n    func_0x0040f584();\n    func_0x0040f588();\n    func_0x0040f58c();\n    func_0x0040f590();\n    func_0x0040f594();\n    func_0x0040f598();\n    func_0x0040f59c();\n    func_0x0040f5a0();\n    func_0x0040f5a4();\n    func_0x0040f5a8();\n    func_0x0040f5ac();\n    func_0x0040f5b0();\n    func_0x0040f5b4();\n    func_0x0040f5b8();\n    func_0x0040f5bc();\n    func_0x0040f5c0();\n    func_0x0040f5c4();\n    sub.USER32.dll_DdeUninitialize();\n    func_0x0040f5cc();\n    func_0x0040f5d0();\n    func_0x0040f4a8();\n    func_0x0040f5d8();\n    func_0x0040f5dc();\n    func_0x0040f5e0();\n    func_0x0040f5e4();\n    func_0x0040f5e8();\n    func_0x0040f5ec();\n    func_0x0040f5f0();\n    func_0x0040f5f4();\n    func_0x0040f5f8();\n    func_0x0040f5fc();\n    func_0x0040f600();\n    func_0x0040f604();\n    func_0x0040f608();\n    func_0x0040f60c();\n    func_0x0040f610();\n    func_0x0040f614();\n    func_0x0040f618();\n    func_0x0040f61c();\n    func_0x0040f620();\n    func_0x0040f624();\n    func_0x0040f628();\n    func_0x0040f62c();\n    func_0x0040f630();\n    func_0x0040f634();\n    func_0x0040f638();\n    func_0x0040f63c();\n    func_0x0040f640();\n    func_0x0040f644();\n    func_0x0040f648();\n    func_0x0040f64c();\n    func_0x0040f650();\n    func_0x0040f654();\n    func_0x0040f658();\n    func_0x0040f65c();\n    func_0x0040f660();\n    func_0x0040f664();\n    func_0x0040f668();\n    func_0x0040f66c();\n    func_0x0040f670();\n    func_0x0040f674();\n    func_0x0040f678();\n    func_0x0040f67c();\n    func_0x0040f680();\n    func_0x0040f684();\n    func_0x0040f688();\n    func_0x0040f68c();\n    func_0x0040f690();\n    func_0x0040f694();\n    func_0x0040f698();\n    func_0x0040f69c();\n    func_0x0040f6a0();\n    func_0x0040f6a4();\n    func_0x0040f6a8();\n    func_0x0040f6ac();\n    func_0x0040f6b0();\n    func_0x0040f6b4();\n    func_0x0040f6b8();\n    func_0x0040f6bc();\n    func_0x0040f6c0();\n    func_0x0040f6c4();\n    func_0x0040f6c8();\n    func_0x0040f6cc();\n    func_0x0040f6d0();\n    func_0x0040f6d4();\n    func_0x0040f6d8();\n    func_0x0040f6dc();\n    func_0x0040f6e0();\n    func_0x0040f6e4();\n    func_0x0040f6e8();\n    func_0x0040f6ec();\n    func_0x0040f6f0();\n    func_0x0040f6f4();\n    sub.USER32.dll_DdeDisconnect();\n    sub.USER32.dll_DdeFreeStringHandle();\n    func_0x0040f700();\n    func_0x0040f704();\n    func_0x0040f708();\n    func_0x0040f70c();\n    func_0x0040f710();\n    func_0x0040f714();\n    func_0x0040f718();\n    func_0x0040f71c();\n    func_0x0040f4ec();\n    func_0x0040f4e8();\n    func_0x0040f4e4();\n    func_0x0040f4e0();\n    func_0x0040f4dc();\n    func_0x0040f4d8();\n    func_0x0040f4d4();\n    func_0x0040f4d0();\n    func_0x0040f4cc();\n    func_0x0040f4c8();\n    func_0x0040f4c4();\n    func_0x0040f4c0();\n    func_0x0040f4bc();\n    func_0x0040f4b8();\n    func_0x0040f4b4();\n    func_0x0040f4b0();\n    func_0x0040f4ac();\n    func_0x0040f490();\n    func_0x0040f48c();\n    func_0x0040f488();\n    func_0x0040f484();\n    func_0x0040f480();\n    func_0x0040f47c();\n    func_0x0040f478();\n    func_0x0040f428();\n    func_0x0040f424();\n    func_0x0040f420();\n    func_0x0040f41c();\n    func_0x0040f418();\n    func_0x0040f414();\n    func_0x0040f410();\n    func_0x0040f40c();\n    func_0x0040f44c();\n    func_0x0040f494();\n    func_0x0040f498();\n    func_0x0040f49c();\n    func_0x0040f4a0();\n    func_0x0040f5d4();\n    func_0x0040f120();\n    func_0x0040f11c();\n    func_0x0040f118();\n    func_0x0040f114();\n    func_0x0040f110();\n    func_0x0040f10c();\n    func_0x0040f108();\n    func_0x0040f104();\n    func_0x0040f100();\n    func_0x0040f0fc();\n    func_0x0040f0f8();\n    func_0x0040f0f4();\n    func_0x0040f0f0();\n    func_0x0040f0dc();\n    func_0x0040f0d8();\n    func_0x0040f0d4();\n    func_0x0040f0d0();\n    func_0x0040f0cc();\n    func_0x0040f0c8();\n    func_0x0040f0c4();\n    func_0x0040f0c0();\n    func_0x0040f0bc();\n    func_0x0040f0b8();\n    func_0x0040f0b4();\n    func_0x0040f0b0();\n    func_0x0040f0e8();\n    func_0x0040f0a8();\n    func_0x0040f13c();\n    func_0x0040f134();\n    func_0x0040f130();\n    func_0x0040f12c();\n    func_0x0040f128();\n    func_0x0040f124();\n    func_0x0040f0a4();\n    func_0x0040f0a0();\n    func_0x0040f138();\n    func_0x0040f09c();\n    func_0x0040f098();\n    func_0x0040f094();\n    func_0x0040f090();\n    func_0x0040f08c();\n    func_0x0040f088();\n    func_0x0040f084();\n    func_0x0040f080();\n    func_0x0040f07c();\n    func_0x0040f0ac();\n    func_0x0040f0e0();\n    func_0x0040f0e4();\n    func_0x0040f0ec();\n    func_0x0040f070();\n    func_0x0040f074();\n    func_0x0040f06c();\n    func_0x0040f7b4();\n    func_0x0040f7b0();\n    func_0x0040f7ac();\n    func_0x0040f7a8();\n    func_0x0040f7a4();\n    func_0x0040f7a0();\n    func_0x0040f79c();\n    func_0x0040f798();\n    func_0x0040f794();\n    func_0x0040f790();\n    func_0x0040f78c();\n    func_0x0040f788();\n    func_0x0040f784();\n    func_0x0040f404();\n    sub.VERSION.dll_VerQueryValueW();\n    sub.VERSION.dll_GetFileVersionInfoSizeW();\n    sub.VERSION.dll_GetFileVersionInfoW();\n    func_0x0040f764();\n    func_0x0040f010();\n    func_0x0040f00c();\n    func_0x0040f008();\n    func_0x0040f004();\n    func_0x0040f04c();\n    func_0x0040f018();\n    func_0x0040f048();\n    func_0x0040f044();\n    func_0x0040f040();\n    func_0x0040f03c();\n    func_0x0040f038();\n    func_0x0040f034();\n    func_0x0040f030();\n    func_0x0040f02c();\n    func_0x0040f028();\n    func_0x0040f024();\n    func_0x0040f020();\n    func_0x0040f01c();\n    func_0x0040f000();\n    func_0x0040f014();\n    return 1;\n}\n",
        "token_count": 4958
    },
    "0040d747": {
        "rules": [
            "create or open file"
        ],
        "decompiled_code": "\nvoid fcn.0040d747(void)\n\n{\n    *0x417490 = (*_sym.imp.KERNEL32.dll_CreateFileW)(L\"CONOUT$\", 0x40000000, 3, 0, 3, 0, 0);\n    return;\n}\n",
        "token_count": 62
    },
    "00401000": {
        "rules": [
            "terminate process"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401000(uint arg_8h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint uExitCode;\n    uint hMem;\n    uint lpString;\n    \n    // [00] -r-x section size 57344 named .text\n    uVar1 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n    (*_sym.imp.KERNEL32.dll_FormatMessageA)(0x1300, 0, uVar1, 0x400, &lpString, 0, 0);\n    iVar2 = (*_sym.imp.KERNEL32.dll_lstrlenA)(lpString);\n    iVar3 = (*_sym.imp.KERNEL32.dll_lstrlenA)(arg_8h);\n    uVar4 = (*_sym.imp.KERNEL32.dll_LocalAlloc)(0x40, iVar2 + 0x28 + iVar3);\n    (*_sym.imp.KERNEL32.dll_LocalFree)(lpString);\n    (*_sym.imp.KERNEL32.dll_LocalFree)(uVar4);\n    (*_sym.imp.KERNEL32.dll_ExitProcess)(uVar1);\n    return;\n}\n",
        "token_count": 256
    },
    "00450224": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00450224(uint8_t *arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = 0;\n    do {\n        if (iVar1 == 0) {\n            iVar1 = arg_14h + -1;\n        }\n        *arg_8h = *(iVar1 + arg_10h) ^ *arg_8h;\n        arg_8h = arg_8h + 1;\n        iVar1 = iVar1 + -1;\n        arg_ch = arg_ch + -1;\n    } while (arg_ch != 0);\n    return;\n}\n",
        "token_count": 155
    }
}