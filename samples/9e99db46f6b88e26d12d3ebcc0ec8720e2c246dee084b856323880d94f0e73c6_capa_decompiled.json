{
    "00401330": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00401330(int32_t param_1)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uStack48;\n    uint uStack44;\n    uint uStack40;\n    uint uStack36;\n    uchar auStack28 [28];\n    \n    pcVar1 = _sym.imp.USER32.dll_PeekMessageA;\n    if (*(param_1 + 0x1c) == 0) {\n        uStack36 = 0;\n        uStack40 = 0;\n        uStack44 = 0;\n        uStack48 = 0;\n        iVar2 = (*_sym.imp.USER32.dll_PeekMessageA)(auStack28);\n        while (iVar2 != 0) {\n            iVar2 = fcn.0041a00a();\n            iVar2 = (**(**(iVar2 + 4) + 0x5c))();\n            if (iVar2 == 0) {\n                (*_sym.imp.USER32.dll_PostQuitMessage)(0);\n                return;\n            }\n            iVar2 = (*pcVar1)(&uStack48, 0, 0, 0);\n        }\n        iVar2 = 0;\n        do {\n            iVar3 = fcn.0041a00a();\n            iVar3 = (**(**(iVar3 + 4) + 0x60))(iVar2);\n            iVar2 = iVar2 + 1;\n        } while (iVar3 != 0);\n    }\n    return;\n}\n",
        "token_count": 329
    },
    "00401600": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00401600(int32_t *param_1)\n\n{\n    int32_t **ppiVar1;\n    int32_t *piVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    int32_t extraout_ECX;\n    \n    iVar4 = *param_1;\n    ppiVar1 = iVar4 + -0x10;\n    piVar3 = *ppiVar1;\n    if (*(iVar4 + -0xc) != 0) {\n        piVar2 = iVar4 + -4;\n        if (*(iVar4 + -4) < 0) {\n            if (*(iVar4 + -8) < 0) {\n                fcn.00401090(0x80070057);\n                iVar4 = extraout_ECX;\n            }\n            *(iVar4 + -0xc) = 0;\n            **param_1 = 0;\n            return;\n        }\n        LOCK();\n        iVar4 = *piVar2;\n        *piVar2 = *piVar2 + -1;\n        if (iVar4 == 1 || iVar4 + -1 < 0) {\n            (**(**ppiVar1 + 4))(ppiVar1);\n        }\n        iVar4 = (**(*piVar3 + 0xc))();\n        *param_1 = iVar4 + 0x10;\n    }\n    return;\n}\n",
        "token_count": 298
    },
    "00401660": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00401660(int32_t *param_1, int32_t param_2)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t *unaff_EBP;\n    int32_t **ppiVar6;\n    \n    iVar5 = *param_1;\n    if (param_2 < *(iVar5 + -0xc)) {\n        param_2 = *(iVar5 + -0xc);\n    }\n    if (1 < *(iVar5 + -4)) {\n        iVar5 = *param_1;\n        iVar2 = *(iVar5 + -0xc);\n        ppiVar6 = iVar5 + -0x10;\n        puVar3 = (**(**ppiVar6 + 0x10))();\n        iVar4 = (***puVar3)(param_2, 1);\n        if (iVar4 == 0) {\n            fcn.00401260();\n        }\n        if (iVar2 < param_2) {\n            param_2 = iVar2;\n        }\n        fcn.00428c08(iVar4 + 0x10, param_2 + 1, iVar5, param_2 + 1);\n        *(iVar4 + 4) = iVar2;\n        piVar1 = iVar5 + -4;\n        LOCK();\n        iVar5 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n        if (iVar5 == 1 || iVar5 + -1 < 0) {\n            (**(**ppiVar6 + 4))(ppiVar6);\n        }\n        *unaff_EBP = iVar4 + 0x10;\n        return;\n    }\n    iVar5 = *(iVar5 + -8);\n    if (param_2 <= iVar5) {\n        return;\n    }\n    if (iVar5 < 0x401) {\n        iVar5 = iVar5 * 2;\n    }\n    else {\n        iVar5 = iVar5 + 0x400;\n    }\n    if (iVar5 < param_2) {\n        iVar5 = param_2;\n    }\n    iVar2 = *param_1;\n    if ((*(iVar2 + -8) < iVar5) && (0 < iVar5)) {\n        iVar5 = (**(**(iVar2 + -0x10) + 8))(iVar2 + -0x10, iVar5, 1);\n        if (iVar5 != 0) goto code_r0x0040131e;\n    }\n    iVar5 = fcn.00401260();\ncode_r0x0040131e:\n    *param_1 = iVar5 + 0x10;\n    return;\n}\n",
        "token_count": 597
    },
    "004016b0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t ** fcn.004016b0(int32_t **param_1)\n\n{\n    int32_t *piVar1;\n    int32_t **ppiVar2;\n    \n    piVar1 = (**(**param_1 + 0x10))();\n    if ((-1 < param_1[3]) && (piVar1 == *param_1)) {\n        LOCK();\n        param_1[3] = param_1[3] + 1;\n        return param_1;\n    }\n    ppiVar2 = (***piVar1)(param_1[1], 1);\n    if (ppiVar2 == NULL) {\n        fcn.00401260();\n    }\n    ppiVar2[1] = param_1[1];\n    fcn.00428c08(ppiVar2 + 4, param_1[1] + 1, param_1 + 4, param_1[1] + 1);\n    return ppiVar2;\n}\n",
        "token_count": 216
    },
    "00401720": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00401720(uint param_1, uint *param_2)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint unaff_ESI;\n    ulong uVar3;\n    int64_t iVar4;\n    uint16_t *puVar5;\n    uint16_t uVar6;\n    uint16_t uStack60;\n    uint16_t uStack58;\n    uint16_t uStack56;\n    uint32_t uStack52;\n    uint32_t uStack48;\n    uint32_t uStack44;\n    uint32_t uStack40;\n    int32_t iStack36;\n    int32_t iStack32;\n    uint uStack20;\n    \n    uVar6 = unaff_ESI >> 0x10;\n    uVar3 = fcn.0042907c(0);\n    *param_2 = uVar3;\n    puVar5 = &uStack60;\n    param_2[1] = uVar3 >> 0x20;\n    iVar1 = (*_sym.imp.KERNEL32.dll_FileTimeToLocalFileTime)(param_1);\n    if (iVar1 != 0) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_FileTimeToSystemTime)(&stack0xffffffbc, &uStack60);\n        if (iVar1 != 0) {\n            uStack44 = uStack60;\n            uStack52 = uStack56;\n            uStack48 = uStack58;\n            uStack40 = uVar6;\n            if ((uStack40 == 0) || (0x1f < uStack40)) {\n                uStack40 = 1;\n            }\n            uVar2 = puVar5 >> 0x10;\n            if (uVar2 == 0) {\n                uVar2 = 1;\n            }\n            else if (0xc < uVar2) {\n                uVar2 = 0xc;\n            }\n            iStack36 = uVar2 - 1;\n            uVar2 = puVar5 & 0xffff;\n            if (uVar2 < 0x76c) {\n                uVar2 = 0x76c;\n            }\n            else if (0x7f5 < uVar2) {\n                uVar2 = 0x7f5;\n            }\n            iStack32 = uVar2 - 0x76c;\n            uStack20 = 0xffffffff;\n            iVar4 = fcn.00428bf6(&uStack52);\n            if (iVar4 != -1) {\n                *param_2 = iVar4;\n                param_2[1] = iVar4 >> 0x20;\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 581
    },
    "00401ef0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00401ef0(code **param_1)\n\n{\n    int32_t iVar1;\n    \n    *param_1 = vtable.CArray_class_CFileInfo__class_CFileInfo__.0;\n    if (param_1[1] != NULL) {\n        iVar1 = 0;\n        if (0 < param_1[2]) {\n            do {\n                fcn.004018a0();\n                iVar1 = iVar1 + 1;\n            } while (iVar1 < param_1[2]);\n        }\n        fcn.00419316(param_1[1]);\n    }\n    return;\n}\n",
        "token_count": 134
    },
    "00401f60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint8_t ** __thiscall fcn.00401f60(uint8_t **param_1, char *param_2)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    uint8_t *arg_8h;\n    uint8_t *puVar3;\n    \n    if ((param_2 != NULL) && (*param_2 != '\\0')) {\n        arg_8h = *param_1;\n        uVar1 = *arg_8h;\n        if (uVar1 != 0) {\n            puVar3 = NULL;\n            do {\n                iVar2 = fcn.00428fe6(param_2, uVar1);\n                if (iVar2 == 0) {\n                    puVar3 = NULL;\n                }\n                else if (puVar3 == NULL) {\n                    puVar3 = arg_8h;\n                }\n                arg_8h = fcn.004288fb(arg_8h);\n                uVar1 = *arg_8h;\n            } while (uVar1 != 0);\n            if (puVar3 != NULL) {\n                fcn.004019d0(puVar3 - *param_1);\n            }\n        }\n    }\n    return param_1;\n}\n",
        "token_count": 268
    },
    "00402100": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t * __thiscall fcn.00402100(int32_t *param_1, int32_t *param_2)\n\n{\n    int32_t **ppiVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t **ppiVar5;\n    \n    iVar3 = *param_2;\n    iVar4 = *param_1;\n    ppiVar1 = iVar3 + -0x10;\n    ppiVar5 = iVar4 + -0x10;\n    if (ppiVar1 == ppiVar5) {\n        return param_1;\n    }\n    piVar2 = iVar4 + -4;\n    if ((-1 < *(iVar4 + -4)) && (*ppiVar1 == *ppiVar5)) {\n        iVar4 = fcn.004016b0(ppiVar1);\n        LOCK();\n        iVar3 = *piVar2;\n        *piVar2 = *piVar2 + -1;\n        if (iVar3 == 1 || iVar3 + -1 < 0) {\n            (**(**ppiVar5 + 4))(ppiVar5);\n        }\n        *param_1 = iVar4 + 0x10;\n        return param_1;\n    }\n    fcn.00401aa0(iVar3, *(iVar3 + -0xc));\n    return param_1;\n}\n",
        "token_count": 301
    },
    "00402fa0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __thiscall fcn.00402fa0(int32_t *param_1)\n\n{\n    uchar *puVar1;\n    uchar *puVar2;\n    uint32_t uVar3;\n    int32_t *piVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint *puVar7;\n    int32_t **ppiVar8;\n    int32_t *extraout_ECX;\n    int32_t *extraout_ECX_00;\n    int32_t *extraout_ECX_01;\n    int32_t *extraout_ECX_02;\n    uchar *unaff_EBP;\n    int32_t unaff_ESI;\n    int32_t *unaff_EDI;\n    int32_t *in_FS_OFFSET;\n    int32_t *in_stack_00000018;\n    uint in_stack_0000001c;\n    uchar *puStack524;\n    uchar *puStack520;\n    uchar *puStack516;\n    int32_t **ppiStack512;\n    int32_t *piStack496;\n    uchar *puStack484;\n    int32_t arg_8h;\n    int32_t iStack476;\n    int32_t iStack452;\n    uchar *puStack448;\n    uchar *puStack444;\n    int32_t *piStack440;\n    int32_t iStack436;\n    uchar auStack432 [64];\n    uchar auStack368 [4];\n    uint8_t auStack364 [8];\n    int32_t aiStack356 [9];\n    uchar auStack320 [280];\n    uint uStack40;\n    uchar uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uchar *puStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack8 = 0x43dea9;\n    puStack12 = *in_FS_OFFSET;\n    puStack16 = *0x45060c ^ &stack0xfffffe3c;\n    uVar3 = *0x45060c ^ &stack0xfffffe2c;\n    *in_FS_OFFSET = &stack0xfffffff4;\n    piStack440 = in_stack_00000018;\n    iStack436 = in_stack_0000001c;\n    uStack4 = 1;\n    iStack476 = 0x403003;\n    piVar4 = fcn.0041a118();\n    if (piVar4 == NULL) {\n        iStack476 = -0x7fffbffb;\n        piVar4 = fcn.00401090();\n    }\n    iVar5 = (**(*piVar4 + 0xc))();\n    iVar5 = iVar5 + 0x10;\n    uStack8._0_1_ = 2;\n    fcn.00402ee0();\n    uStack8 = CONCAT31(uStack8._1_3_, 3);\n    puStack448 = NULL;\n    piVar4 = fcn.0041a118();\n    if (piVar4 == NULL) {\n        piVar4 = fcn.00401090();\n    }\n    iStack436 = (**(*piVar4 + 0xc))();\n    iStack436 = iStack436 + 0x10;\n    uStack8._0_1_ = 4;\n    iStack452 = fcn.004016b0();\n    iStack452 = iStack452 + 0x10;\n    arg_8h = 0x5c;\n    uStack8 = CONCAT31(uStack8._1_3_, 5);\n    fcn.00401be0();\n    puStack484 = 0x1;\n    fcn.00401b30();\n    fcn.00401d30();\n    uStack20 = CONCAT31(uStack20._1_3_, 6);\n    fcn.00402100();\n    uStack24 = CONCAT31(uStack24._1_3_, 5);\n    piVar4 = iStack436 + -4;\n    LOCK();\n    iVar6 = *piVar4;\n    *piVar4 = *piVar4 + -1;\n    if (iVar6 == 1 || iVar6 + -1 < 0) {\n        (**(**(iStack436 + -0x10) + 4))();\n    }\n    piStack496 = &stack0xfffffe9c;\n    iStack452 = (*_sym.imp.KERNEL32.dll_FindFirstFileA)();\n    if ((param_1[5] != 0) && (iVar6 = (*_sym.imp.USER32.dll_IsWindow)(),  iVar6 != 0)) {\n        piStack440 = &stack0xfffffe04;\n        ppiStack512 = uVar3 - 0x10;\n        puStack516 = 0x40314b;\n        fcn.004016b0();\n        ppiStack512 = &stack0xfffffe40;\n        puStack516 = 0x40315d;\n        piStack496 = fcn.00402440();\n        uStack32 = CONCAT31(uStack32._1_3_, 7);\n        fcn.00402100();\n        uStack36 = 5;\n        piVar4 = iStack452 + -4;\n        LOCK();\n        iVar6 = *piVar4;\n        *piVar4 = *piVar4 + -1;\n        in_stack_00000018 = unaff_EDI;\n        if (iVar6 == 1 || iVar6 + -1 < 0) {\n            ppiStack512 = 0x40319a;\n            (**(**(iStack452 + -0x10) + 4))();\n            in_stack_00000018 = unaff_EDI;\n        }\n        fcn.0041b03c(iVar5);\n        unaff_EDI = in_stack_00000018;\n    }\n    puVar2 = uStack8;\n    puVar1 = puStack16;\n    if (iStack452 != -1) {\n        do {\n            fcn.00401330();\n            ppiStack512 = 0x4031dd;\n            iVar5 = fcn.004288e4(&stack0xfffffec0, 0x441984);\n            if (iVar5 != 0) {\n                ppiStack512 = 0x4031fa;\n                iVar5 = fcn.004288e4(&stack0xfffffec0, 0x441980);\n                if ((iVar5 != 0) && ((auStack364[0] & 0x10) != 0)) {\n                    ppiStack512 = &stack0xfffffe4c;\n                    puStack516 = 0x40322a;\n                    fcn.00401d30();\n                    uStack32 = CONCAT31(uStack32._1_3_, 8);\n                    fcn.00402100();\n                    ppiVar8 = piStack440 + -4;\n                    uStack36 = 5;\n                    piVar4 = piStack440 + -1;\n                    LOCK();\n                    iVar5 = *piVar4;\n                    *piVar4 = *piVar4 + -1;\n                    if (iVar5 == 1 || iVar5 + -1 < 0) {\n                        ppiStack512 = 0x403267;\n                        (**(**ppiVar8 + 4))();\n                    }\n                    if (puVar2 != NULL) {\n                        puStack448 = &stack0xfffffe04;\n                        ppiStack512 = iStack476 + -0x10;\n                        puStack516 = 0x403281;\n                        fcn.004016b0();\n                        ppiStack512 = &stack0xfffffe94;\n                        puStack516 = 0x40329a;\n                        fcn.00402220();\n                        puStack516 = uStack24;\n                        puStack520 = &stack0xfffffe48;\n                        puStack524 = 0x4032b0;\n                        in_stack_00000018 = unaff_EDI;\n                        (**(*param_1 + 0xc))();\n                        unaff_EDI = in_stack_00000018;\n                        if (unaff_ESI != 0) {\n                            (*_sym.imp.KERNEL32.dll_InterlockedIncrement)();\n                            unaff_EDI = in_stack_00000018;\n                        }\n                    }\n                    if (puVar1 != NULL) {\n                        ppiStack512 = puVar2;\n                        puStack516 = puStack12;\n                        puStack520 = puVar1;\n                        puStack448 = &stack0xfffffdf4;\n                        iVar5 = fcn.004016b0();\n                        puStack524 = iVar5 + 0x10;\n                        uStack32._0_1_ = 9;\n                        puStack444 = &stack0xfffffe0c;\n                        fcn.00401d30(&stack0xfffffe0c, &stack0xfffffe20, 0x441978);\n                        uStack32 = CONCAT31(uStack32._1_3_, 5);\n                        fcn.00402fa0();\n                        in_stack_00000018 = piStack496;\n                    }\n                }\n            }\n            if ((in_stack_00000018 != NULL) && (*in_stack_00000018 != 0)) break;\n            ppiStack512 = 0x40334f;\n            iVar5 = (*_sym.imp.KERNEL32.dll_FindNextFileA)();\n        } while (iVar5 != 0);\n        (*_sym.imp.KERNEL32.dll_FindClose)();\n    }\n    if ((in_stack_00000018 == NULL) || (*in_stack_00000018 == 0)) {\n        ppiStack512 = &stack0xfffffe38;\n        puStack516 = 0x403387;\n        fcn.00402000();\n        uStack32 = CONCAT31(uStack32._1_3_, 10);\n        fcn.00402100();\n        uStack36 = 5;\n        piVar4 = unaff_EBP + -4;\n        LOCK();\n        iVar5 = *piVar4;\n        *piVar4 = *piVar4 + -1;\n        if (iVar5 == 1 || iVar5 + -1 < 0) {\n            ppiStack512 = 0x4033c4;\n            (**(**(unaff_EBP + -0x10) + 4))();\n        }\n        ppiStack512 = puStack484;\n        puStack516 = 0x4033d7;\n        iVar5 = (*_sym.imp.KERNEL32.dll_FindFirstFileA)();\n        if (iVar5 != -1) {\n            do {\n                if ((auStack364[0] & 0x10) == 0) {\n                    ppiStack512 = &stack0xfffffe50;\n                    puStack516 = 0x403415;\n                    fcn.00401d30();\n                    uStack32 = CONCAT31(uStack32._1_3_, 0xb);\n                    fcn.00402100();\n                    uStack36 = 5;\n                    piVar4 = iStack436 + -4;\n                    LOCK();\n                    iVar5 = *piVar4;\n                    *piVar4 = *piVar4 + -1;\n                    in_stack_00000018 = unaff_EDI;\n                    if (iVar5 == 1 || iVar5 + -1 < 0) {\n                        ppiStack512 = 0x403452;\n                        (**(**(iStack436 + -0x10) + 4))();\n                        piVar4 = extraout_ECX;\n                        in_stack_00000018 = unaff_EDI;\n                    }\n                    if (param_1[6] != 0) {\n                        ppiStack512 = 0x403467;\n                        iVar5 = (*_sym.imp.USER32.dll_IsWindow)();\n                        piVar4 = extraout_ECX_00;\n                        if (iVar5 != 0) {\n                            puStack516 = puStack484 + -0x10;\n                            puStack520 = 0x403481;\n                            iVar5 = fcn.004016b0();\n                            puStack516 = &stack0xfffffe44;\n                            ppiStack512 = iVar5 + 0x10;\n                            puStack520 = 0x403493;\n                            puVar7 = fcn.00402440();\n                            uStack36 = 0xc;\n                            ppiStack512 = 0x4034a8;\n                            fcn.0041b03c(*puVar7);\n                            ppiVar8 = puStack448 + -0x10;\n                            uStack40 = CONCAT31(uStack40._1_3_, 5);\n                            piVar4 = puStack448 + -4;\n                            LOCK();\n                            iVar5 = *piVar4;\n                            *piVar4 = *piVar4 + -1;\n                            if (iVar5 == 1 || iVar5 + -1 < 0) {\n                                puStack516 = 0x4034d0;\n                                ppiStack512 = ppiVar8;\n                                (**(**ppiVar8 + 4))();\n                                piVar4 = extraout_ECX_01;\n                            }\n                            if (param_1[7] == 0) {\n                                fcn.00401330();\n                                piVar4 = extraout_ECX_02;\n                            }\n                        }\n                    }\n                    unaff_EBP = &stack0xfffffe00;\n                    puStack516 = arg_8h + -0x10;\n                    puStack520 = 0x4034f3;\n                    ppiStack512 = piVar4;\n                    iVar5 = fcn.004016b0();\n                    puStack516 = &stack0xfffffe90;\n                    ppiStack512 = iVar5 + 0x10;\n                    puStack520 = 0x40350c;\n                    fcn.00402220();\n                    puStack520 = puStack28;\n                    puStack524 = &stack0xfffffe44;\n                    (**(*param_1 + 0xc))();\n                    unaff_EDI = in_stack_00000018;\n                    if (unaff_ESI != 0) {\n                        (*_sym.imp.KERNEL32.dll_InterlockedIncrement)();\n                        unaff_EDI = in_stack_00000018;\n                    }\n                }\n                if ((in_stack_00000018 != NULL) && (*in_stack_00000018 != 0)) break;\n                ppiStack512 = 0x403555;\n                iVar5 = (*_sym.imp.KERNEL32.dll_FindNextFileA)();\n            } while (iVar5 != 0);\n            (*_sym.imp.KERNEL32.dll_FindClose)();\n        }\n    }\n    uStack32._0_1_ = 4;\n    piVar4 = iStack476 + -4;\n    LOCK();\n    iVar5 = *piVar4;\n    *piVar4 = *piVar4 + -1;\n    if (iVar5 + -1 < 1) {\n        (**(**(iStack476 + -0x10) + 4))();\n    }\n    uStack32 = CONCAT31(uStack32._1_3_, 3);\n    piVar4 = unaff_EBP + -4;\n    LOCK();\n    iVar5 = *piVar4;\n    *piVar4 = *piVar4 + -1;\n    if (iVar5 == 1 || iVar5 + -1 < 0) {\n        (**(**(unaff_EBP + -0x10) + 4))();\n    }\n    uStack32._0_1_ = 2;\n    fcn.004018a0();\n    uStack32._0_1_ = 1;\n    piVar4 = arg_8h + -4;\n    LOCK();\n    iVar5 = *piVar4;\n    *piVar4 = *piVar4 + -1;\n    if (iVar5 + -1 < 1) {\n        (**(**(arg_8h + -0x10) + 4))();\n    }\n    uStack32 = uStack32._1_3_ << 8;\n    piVar4 = uStack24 + -4;\n    LOCK();\n    iVar5 = *piVar4;\n    *piVar4 = *piVar4 + -1;\n    if (iVar5 + -1 < 1) {\n        (**(**(uStack24 + -0x10) + 4))();\n    }\n    uStack32 = 0xffffffff;\n    piVar4 = uStack20 + -4;\n    LOCK();\n    iVar5 = *piVar4;\n    *piVar4 = *piVar4 + -1;\n    if (iVar5 == 1 || iVar5 + -1 < 0) {\n        (**(**(uStack20 + -0x10) + 4))();\n    }\n    *in_FS_OFFSET = uStack40;\n    fcn.004294b3(arg_8h);\n    return;\n}\n",
        "token_count": 3633
    },
    "00403fb0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00403fb0(int32_t param_1)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uStack48;\n    uint uStack44;\n    uint uStack40;\n    uint uStack36;\n    uchar auStack28 [28];\n    \n    pcVar1 = _sym.imp.USER32.dll_PeekMessageA;\n    if (*(param_1 + 0x58) != 0) {\n        uStack36 = 0;\n        uStack40 = 0;\n        uStack44 = 0;\n        uStack48 = 0;\n        iVar2 = (*_sym.imp.USER32.dll_PeekMessageA)(auStack28);\n        while (iVar2 != 0) {\n            iVar2 = fcn.0041a00a();\n            iVar2 = (**(**(iVar2 + 4) + 0x5c))();\n            if (iVar2 == 0) {\n                (*_sym.imp.USER32.dll_PostQuitMessage)(0);\n                return;\n            }\n            iVar2 = (*pcVar1)(&uStack48, 0, 0, 0);\n        }\n        iVar2 = 0;\n        do {\n            iVar3 = fcn.0041a00a();\n            iVar3 = (**(**(iVar3 + 4) + 0x60))(iVar2);\n            iVar2 = iVar2 + 1;\n        } while (iVar3 != 0);\n    }\n    return;\n}\n",
        "token_count": 329
    },
    "004042a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint8_t ** __thiscall fcn.004042a0(uint8_t **param_1, char *param_2)\n\n{\n    uint8_t uVar1;\n    uint8_t *puVar2;\n    int32_t iVar3;\n    uint8_t *arg_8h;\n    uint uVar4;\n    int32_t iVar5;\n    \n    if ((param_2 == NULL) || (*param_2 == '\\0')) {\n        return param_1;\n    }\n    arg_8h = *param_1;\n    uVar1 = *arg_8h;\n    while ((uVar1 != 0 && (iVar3 = fcn.00428fe6(param_2, uVar1),  iVar3 != 0))) {\n        arg_8h = fcn.004288fb(arg_8h);\n        uVar1 = *arg_8h;\n    }\n    puVar2 = *param_1;\n    if (arg_8h != puVar2) {\n        iVar3 = fcn.004018e0(*(puVar2 + -0xc));\n        iVar5 = *(*param_1 + -0xc) - (arg_8h - puVar2);\n        uVar4 = fcn.00428c85(iVar3, *(*param_1 + -0xc) + 1, iVar3 + (arg_8h - puVar2), iVar5 + 1);\n        fcn.00401000(uVar4);\n        if ((iVar5 < 0) || (*(*param_1 + -8) < iVar5)) {\n            fcn.00401090(0x80070057);\n            return param_1;\n        }\n        *(*param_1 + -0xc) = iVar5;\n        (*param_1)[iVar5] = 0;\n    }\n    return param_1;\n}\n",
        "token_count": 402
    },
    "00404760": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __thiscall fcn.00404760(int32_t param_1, int32_t param_2)\n\n{\n    int32_t **ppiVar1;\n    int32_t **ppiVar2;\n    uint32_t uVar3;\n    int32_t *piVar4;\n    int32_t **ppiVar5;\n    int32_t iVar6;\n    uint uVar7;\n    int32_t unaff_EBX;\n    int32_t unaff_EDI;\n    int32_t *in_FS_OFFSET;\n    int32_t iStack20;\n    uint uStack16;\n    uint uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack8 = 0x43e178;\n    uStack12 = *in_FS_OFFSET;\n    uVar3 = *0x45060c ^ &stack0xffffffd4;\n    *in_FS_OFFSET = &uStack12;\n    uStack4 = 0;\n    piVar4 = fcn.0041a118(uVar3);\n    if (piVar4 != NULL) goto code_r0x004047ab;\n    while( true ) {\n        uVar3 = 0x80004005;\n        piVar4 = fcn.00401090();\ncode_r0x004047ab:\n        (**(*piVar4 + 0xc))(uVar3);\n        uStack4 = CONCAT31(uStack4._1_3_, 1);\n        piVar4 = fcn.0041a118();\n        if (piVar4 == NULL) {\n            piVar4 = fcn.00401090(0x80004005);\n        }\n        ppiVar5 = (**(*piVar4 + 0xc))();\n        piVar4 = param_1 + 4;\n        uStack4 = CONCAT31(uStack4._1_3_, 2);\n        iVar6 = fcn.00428ef6(*(param_1 + 4), 0x5c);\n        param_1 = unaff_EBX;\n        if ((iVar6 != 0) && (iVar6 = iVar6 - *piVar4,  iVar6 != -1)) {\n            uVar7 = fcn.00401cb0(&iStack20, iVar6);\n            uStack12 = CONCAT31(uStack12._1_3_, 3);\n            fcn.00402100(uVar7);\n            uStack16 = CONCAT31(uStack16._1_3_, 2);\n            piVar4 = unaff_EBX + -4;\n            LOCK();\n            iVar6 = *piVar4;\n            *piVar4 = *piVar4 + -1;\n            param_1 = unaff_EBX;\n            if (iVar6 == 1 || iVar6 + -1 < 0) {\n                (**(**(unaff_EBX + -0x10) + 4))(unaff_EBX + -0x10);\n                param_1 = unaff_EBX;\n            }\n        }\n        fcn.00402100(&param_2);\n        unaff_EBX = param_1;\n        (*_sym.imp.KERNEL32.dll_RemoveDirectoryA)(param_1);\n        iVar6 = fcn.00428ef6(param_1, 0x5c);\n        if ((iVar6 == 0) || (iVar6 = iVar6 - param_1,  iVar6 == -1)) break;\n        uStack16 = ppiVar5 + 4 != NULL;\n        while( true ) {\n            piVar4 = fcn.00401cb0(&iStack20, iVar6);\n            iVar6 = *piVar4;\n            ppiVar1 = iVar6 + -0x10;\n            ppiVar2 = param_1 + -0x10;\n            uStack12 = CONCAT31(uStack12._1_3_, 4);\n            if (ppiVar1 != ppiVar2) {\n                piVar4 = param_1 + -4;\n                if ((*(param_1 + -4) < 0) || (*ppiVar1 != *ppiVar2)) {\n                    param_1 = unaff_EDI;\n                    fcn.00401aa0(iVar6, *(iVar6 + -0xc));\n                    unaff_EDI = param_1;\n                }\n                else {\n                    param_1 = fcn.004016b0(ppiVar1);\n                    LOCK();\n                    iVar6 = *piVar4;\n                    *piVar4 = *piVar4 + -1;\n                    if (iVar6 == 1 || iVar6 + -1 < 0) {\n                        (**(**ppiVar2 + 4))(ppiVar2);\n                    }\n                    param_1 = param_1 + 0x10;\n                }\n            }\n            uStack4 = CONCAT31(uStack4._1_3_, 2);\n            piVar4 = iStack20 + -4;\n            LOCK();\n            iVar6 = *piVar4;\n            *piVar4 = *piVar4 + -1;\n            if (iVar6 == 1 || iVar6 + -1 < 0) {\n                (**(**(iStack20 + -0x10) + 4))(iStack20 + -0x10);\n            }\n            if (uStack16 == 0) break;\n            iVar6 = fcn.004299d5(param_1, ppiVar5 + 4);\n            if ((iVar6 != 0) && (ppiVar5[1] < *(param_1 + -0xc))) {\n                (*_sym.imp.KERNEL32.dll_RemoveDirectoryA)(param_1);\n            }\n            iVar6 = fcn.00428ef6(param_1, 0x5c);\n            if ((iVar6 == 0) || (iVar6 = iVar6 - param_1,  iVar6 == -1)) goto code_r0x00404964;\n        }\n    }\ncode_r0x00404964:\n    uStack4._0_1_ = 1;\n    ppiVar1 = ppiVar5 + 3;\n    LOCK();\n    piVar4 = *ppiVar1;\n    *ppiVar1 = *ppiVar1 + -1;\n    if (piVar4 + -1 < 1) {\n        (**(**ppiVar5 + 4))(ppiVar5);\n    }\n    uStack4 = uStack4._1_3_ << 8;\n    piVar4 = param_1 + -4;\n    LOCK();\n    iVar6 = *piVar4;\n    *piVar4 = *piVar4 + -1;\n    if (iVar6 + -1 < 1) {\n        (**(**(param_1 + -0x10) + 4))(param_1 + -0x10);\n    }\n    uStack4 = 0xffffffff;\n    piVar4 = param_2 + -4;\n    LOCK();\n    iVar6 = *piVar4;\n    *piVar4 = *piVar4 + -1;\n    if (iVar6 == 1 || iVar6 + -1 < 0) {\n        (**(**(param_2 + -0x10) + 4))(param_2 + -0x10);\n    }\n    *in_FS_OFFSET = uStack12;\n    return;\n}\n",
        "token_count": 1572
    },
    "00405400": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00405400(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t extraout_ECX;\n    int32_t extraout_ECX_00;\n    int32_t extraout_ECX_01;\n    int32_t *in_FS_OFFSET;\n    int32_t in_stack_ffffffa8;\n    uint32_t uStack56;\n    int32_t iStack52;\n    int32_t iStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x43e2a8;\n    iStack12 = *in_FS_OFFSET;\n    uVar1 = *0x45060c ^ &stack0xffffffd4;\n    *in_FS_OFFSET = &stack0xfffffff4;\n    iStack52 = 0x40542e;\n    piVar2 = fcn.0041a118();\n    if (piVar2 == NULL) {\n        iStack52 = -0x7fffbffb;\n        piVar2 = fcn.00401090();\n    }\n    (**(*piVar2 + 0xc))();\n    uStack8 = 0;\n    piVar2 = fcn.0041a118();\n    if (piVar2 == NULL) {\n        piVar2 = fcn.00401090();\n    }\n    (**(*piVar2 + 0xc))();\n    uStack56 = 0xffffffff;\n    uStack8 = CONCAT31(uStack8._1_3_, 1);\n    fcn.00403750();\n    piVar2 = param_1 + 4;\n    iVar3 = fcn.004016b0();\n    fcn.00404350();\n    if ((*(uVar1 - 0xc) == 0) || (*(iStack52 + -0xc) == 0)) goto code_r0x00405597;\n    fcn.00401b30();\n    in_stack_ffffffa8 = extraout_ECX;\n    uVar1 = uStack56;\n    if (*(*piVar2 + -0xc) < 1) {\ncode_r0x00405515:\n        if (0 < *(*piVar2 + -0xc)) {\n            iVar4 = fcn.00428fe6(*piVar2, 0x3f);\n            in_stack_ffffffa8 = extraout_ECX_01;\n            if ((iVar4 != 0) && (iVar4 - *piVar2 != -1)) goto code_r0x0040554b;\n        }\n        fcn.004018c0();\n        fcn.00403680();\n    }\n    else {\n        iVar4 = fcn.00428fe6(*piVar2, 0x2a);\n        in_stack_ffffffa8 = extraout_ECX_00;\n        if ((iVar4 == 0) || (iVar4 - *piVar2 == -1)) goto code_r0x00405515;\ncode_r0x0040554b:\n        in_stack_ffffffa8 = 0;\n        fcn.004016b0();\n        fcn.004016b0(0xffffffef);\n        fcn.00402fa0();\n    }\ncode_r0x00405597:\n    piVar2 = in_stack_ffffffa8 + -4;\n    LOCK();\n    iVar4 = *piVar2;\n    *piVar2 = *piVar2 + -1;\n    if (iVar4 + -1 < 1) {\n        (**(**(in_stack_ffffffa8 + -0x10) + 4))(in_stack_ffffffa8 + -0x10);\n    }\n    piVar2 = uVar1 - 4;\n    LOCK();\n    iVar4 = *piVar2;\n    *piVar2 = *piVar2 + -1;\n    if (iVar4 == 1 || iVar4 + -1 < 0) {\n        (**(**(uVar1 - 0x10) + 4))(uVar1 - 0x10);\n    }\n    *in_FS_OFFSET = iVar3 + 0x10;\n    return;\n}\n",
        "token_count": 933
    },
    "004055f0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004055f0(int32_t *param_1)\n\n{\n    int32_t *piVar1;\n    uint32_t uVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    uint *puVar5;\n    int32_t iVar6;\n    int32_t **ppiVar7;\n    int32_t unaff_EBP;\n    uint uVar8;\n    int32_t unaff_ESI;\n    uint32_t **in_FS_OFFSET;\n    uint32_t *puStack24;\n    uint32_t *puStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x43e2e8;\n    puStack12 = *in_FS_OFFSET;\n    uVar2 = *0x45060c ^ &stack0xffffffd8;\n    *in_FS_OFFSET = &puStack12;\n    piVar3 = fcn.0041a118();\n    if (piVar3 == NULL) {\n        piVar3 = fcn.00401090();\n    }\n    iVar4 = (**(*piVar3 + 0xc))();\n    puStack24 = iVar4 + 0x10;\n    piVar3 = param_1 + 1;\n    uStack8 = 0;\n    uVar8 = 1;\n    if (*(param_1[1] + -0xc) == 0) {\n        uVar8 = 0;\n        fcn.00403c70();\n        (**(*param_1 + 4))();\n        goto code_r0x00405818;\n    }\n    if (3 < *(param_1[1] + -0xc)) {\n        puVar5 = fcn.00401c30();\n        iVar6 = fcn.004299d5(*puVar5, 0x441978);\n        piVar1 = unaff_ESI + -4;\n        LOCK();\n        iVar4 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n        if (iVar4 + -1 < 1) {\n            (**(**(unaff_ESI + -0x10) + 4))();\n        }\n        if (iVar6 != 0) {\n            iVar4 = *piVar3;\n            if (*(iVar4 + -0xc) < 1) {\n                iVar4 = fcn.00401090();\n            }\n            if (*(iVar4 + 1) != ':') {\n                puVar5 = fcn.00401cb0(&stack0xffffffdc);\n                iVar6 = fcn.004299d5(*puVar5, 0x44197c);\n                ppiVar7 = uVar2 - 0x10;\n                puStack24 = puStack24 & 0xffffff00;\n                piVar1 = uVar2 - 4;\n                LOCK();\n                iVar4 = *piVar1;\n                *piVar1 = *piVar1 + -1;\n                if (iVar4 + -1 < 1) {\n                    (**(**ppiVar7 + 4))(ppiVar7);\n                }\n                if (iVar6 != 0) goto code_r0x00405808;\n            }\n            if ((((((*(*piVar3 + -0xc) < 1) || (iVar4 = fcn.00428fe6(*piVar3, 0x2f),  iVar4 == 0)) ||\n                  (iVar4 - *piVar3 == -1)) &&\n                 (((*(*piVar3 + -0xc) < 1 || (iVar4 = fcn.00428fe6(*piVar3, 0x22),  iVar4 == 0)) ||\n                  (iVar4 - *piVar3 == -1)))) &&\n                (((*(*piVar3 + -0xc) < 1 || (iVar4 = fcn.00428fe6(*piVar3, 0x3c),  iVar4 == 0)) ||\n                 (iVar4 - *piVar3 == -1)))) &&\n               ((((*(*piVar3 + -0xc) < 1 || (iVar4 = fcn.00428fe6(*piVar3, 0x3e),  iVar4 == 0)) ||\n                 (iVar4 - *piVar3 == -1)) &&\n                (((*(*piVar3 + -0xc) < 1 || (iVar4 = fcn.00428fe6(*piVar3, 0x7c),  iVar4 == 0)) ||\n                 (iVar4 - *piVar3 == -1)))))) goto code_r0x00405818;\n        }\n    }\ncode_r0x00405808:\n    fcn.00403c70();\n    (**(*param_1 + 4))();\n    uVar8 = 0;\ncode_r0x00405818:\n    piVar3 = unaff_EBP + -4;\n    LOCK();\n    iVar4 = *piVar3;\n    *piVar3 = *piVar3 + -1;\n    if (iVar4 == 1 || iVar4 + -1 < 0) {\n        (**(**(unaff_EBP + -0x10) + 4))();\n    }\n    *in_FS_OFFSET = puStack24;\n    return uVar8;\n}\n",
        "token_count": 1153
    },
    "00405860": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00405860(int32_t *param_1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t **unaff_EBP;\n    int32_t iVar5;\n    int32_t **unaff_EDI;\n    int32_t **ppiVar6;\n    int32_t **ppiVar7;\n    uint32_t *in_FS_OFFSET;\n    int32_t **ppiVar8;\n    char *pcVar9;\n    int32_t **ppiStack344;\n    uchar *puStack340;\n    uint uStack336;\n    int32_t **ppiStack332;\n    uchar *puStack328;\n    uchar *puStack324;\n    uint uStack320;\n    uint uStack316;\n    char *pcStack312;\n    uint uStack308;\n    uint uStack304;\n    ushort uStack300;\n    ushort uStack298;\n    ushort uStack296;\n    ushort uStack294;\n    ushort uStack292;\n    ushort uStack290;\n    int32_t iStack288;\n    char acStack284 [260];\n    uchar uStack24;\n    uint uStack20;\n    uint32_t uStack16;\n    uint uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x43e33c;\n    uStack12 = *in_FS_OFFSET;\n    uStack16 = *0x45060c ^ &ppiStack344;\n    *in_FS_OFFSET = &uStack12;\n    ppiStack332 = 0x1;\n    uStack336 = 1;\n    piVar1 = fcn.0041a118();\n    iVar5 = 0;\n    if (piVar1 == NULL) {\n        piVar1 = fcn.00401090();\n    }\n    iStack288 = (**(*piVar1 + 0xc))();\n    iStack288 = iStack288 + 0x10;\n    uStack8 = 0;\n    piVar1 = fcn.0041a118();\n    if (piVar1 == NULL) {\n        piVar1 = fcn.00401090();\n    }\n    iVar2 = (**(*piVar1 + 0xc))();\n    puStack328 = iVar2 + 0x10;\n    uStack8 = CONCAT31(uStack8._1_3_, 1);\n    param_1[0x14] = param_1[0xe];\n    ppiVar8 = NULL;\n    if (0 < param_1[0xe]) {\n        do {\n            if (puStack340 == NULL) break;\n            ppiVar7 = unaff_EDI;\n            if (iVar5 < 0) goto code_r0x00405e2d;\n            if (param_1[0xe] <= ppiVar8) goto code_r0x00405e2d;\n            if ((*(param_1[0xd] + iVar5 + 8) & 0x10) == 0) {\n                if (param_1[0xe] <= ppiVar8) goto code_r0x00405e2d;\n                ppiStack344 = &stack0xfffffe8c;\n                ppiVar6 = ppiVar8;\n                fcn.004016b0();\n                (**(*param_1 + 4))();\n                unaff_EDI = &stack0xfffffe8c;\n                if ((param_1[7] != 0) &&\n                   (iVar2 = (*_sym.imp.USER32.dll_IsWindow)(),  unaff_EDI = &stack0xfffffe8c,  iVar2 != 0)) {\n                    ppiVar7 = &stack0xfffffe8c;\n                    if (param_1[0xe] <= ppiVar8) goto code_r0x00405e2d;\n                    ppiStack344 = &stack0xfffffe88;\n                    unaff_EDI = &stack0xfffffe88;\n                    fcn.004016b0(*(param_1[0xd] + iVar5 + 4) + -0x10);\n                    fcn.004049f0(&ppiStack332);\n                    uStack20 = CONCAT31(uStack20._1_3_, 2);\n                    fcn.00402100();\n                    uStack24 = 1;\n                    ppiVar7 = ppiVar6 + -1;\n                    LOCK();\n                    piVar1 = *ppiVar7;\n                    *ppiVar7 = *ppiVar7 + -1;\n                    if (piVar1 == 0x1 || piVar1 + -1 < 0) {\n                        (**(*ppiVar6[-4] + 4))(ppiVar6 + -4);\n                    }\n                    fcn.0041b03c(puStack324);\n                }\n                param_1[0x15] = param_1[0x15] + 1;\n                fcn.00403f30();\n                fcn.00403fb0();\n                iVar2 = fcn.00404220();\n                if (iVar2 != 0) {\n                    uStack336 = 0;\n                    puStack340 = NULL;\n                }\n                ppiVar7 = unaff_EDI;\n                if (param_1[0xe] <= ppiVar8) goto code_r0x00405e2d;\n                uVar3 = (*_sym.imp.KERNEL32.dll_GetFileAttributesA)();\n                if (puStack340 != NULL) {\n                    if (uVar3 == 0xffffffff) {\n                        ppiStack344 = &stack0xfffffe8c;\n                        uStack336 = 0;\n                        puStack340 = NULL;\n                        fcn.00403c70();\n                        iVar2 = *param_1;\ncode_r0x00405d9e:\n                        (**(iVar2 + 4))();\n                    }\n                    else {\n                        unaff_EDI = NULL;\n                        if (((uVar3 & 6) == 0) || (param_1[4] != 0)) {\n                            ppiVar7 = unaff_EDI;\n                            if (param_1[0xe] <= ppiVar8) goto code_r0x00405e2d;\n                            iVar2 = (*_sym.imp.KERNEL32.dll_SetFileAttributesA)();\n                            if ((iVar2 == 0) && (uStack336 = 0,  param_1[3] == 0)) {\n                                ppiStack344 = &stack0xfffffe8c;\n                                puStack340 = NULL;\n                                fcn.00403c70();\n                                iVar2 = *param_1;\n                                goto code_r0x00405d9e;\n                            }\n                            if (param_1[10] == 0) {\n                                if (param_1[0xe] <= ppiVar8) goto code_r0x00405e2d;\n                                iVar2 = (*_sym.imp.KERNEL32.dll_DeleteFileA)();\n                                if (iVar2 == 0) {\n                                    fcn.00403c70(\"Delete failed\");\n                                    (**(*param_1 + 4))();\n                                    ppiStack332 = NULL;\n                                    if (param_1[3] == 0) {\n                                        uStack336 = 0;\n                                    }\n                                    unaff_EDI = param_1 + 0xb;\n                                    fcn.00402ea0();\n                                    ppiVar7 = unaff_EDI;\n                                    if (param_1[0xe] <= ppiVar8) goto code_r0x00405e2d;\n                                    fcn.00401b30();\n                                }\n                                else {\n                                    fcn.00403c70(\"Delete successful\");\n                                    (**(*param_1 + 4))();\n                                    if (param_1[5] != 0) {\n                                        if (param_1[0xe] <= ppiVar8) goto code_r0x00405e2d;\n                                        ppiStack344 = &stack0xfffffe8c;\n                                        unaff_EDI = &stack0xfffffe8c;\n                                        fcn.004016b0();\n                                        fcn.00404540();\n                                    }\n                                }\n                            }\n                            else {\n                                uStack320 = 0;\n                                uStack316 = 0;\n                                pcStack312 = NULL;\n                                uStack308 = 0;\n                                uStack304 = 0;\n                                uStack300 = 0;\n                                uStack298 = 0;\n                                uStack296 = 0;\n                                uStack294 = 0;\n                                uStack292 = 0;\n                                fcn.00429510(acStack284);\n                                if (param_1[0xe] <= ppiVar8) goto code_r0x00405e2d;\n                                iVar2 = fcn.004016b0();\n                                ppiVar7 = iVar2 + 0x10;\n                                ppiStack344 = ppiVar7;\n                                uStack8 = CONCAT31(uStack8._1_3_, 3);\n                                if ((*(iVar2 + 8) - 10U | 1U - *(iVar2 + 0xc)) < 0) {\n                                    ppiVar7 = ppiVar6;\n                                    fcn.00401660();\n                                }\n                                pcVar9 = acStack284;\n                                iVar2 = 0x106;\n                                iVar4 = ppiVar7 - pcVar9;\n                                do {\n                                    if ((iVar2 == -0x7ffffef8) || (pcVar9[iVar4] == '\\0')) {\n                                        if (iVar2 != 0) goto code_r0x00405c70;\n                                        break;\n                                    }\n                                    *pcVar9 = pcVar9[iVar4];\n                                    pcVar9 = pcVar9 + 1;\n                                    iVar2 = iVar2 + -1;\n                                } while (iVar2 != 0);\n                                pcVar9 = pcVar9 + -1;\ncode_r0x00405c70:\n                                *pcVar9 = '\\0';\n                                piVar1 = fcn.00428f0d(ppiVar7, ppiVar7[-2]);\n                                ppiVar8 = NULL;\n                                if (piVar1 < 0) goto code_r0x00405e32;\n                                if (ppiVar7[-2] < piVar1) goto code_r0x00405e32;\n                                ppiVar7[-3] = piVar1;\n                                *(piVar1 + ppiVar7) = 0;\n                                pcStack312 = acStack284;\n                                uStack320 = 0;\n                                uStack316 = 3;\n                                uStack308 = 0;\n                                uStack304 = CONCAT22(uStack304._2_2_, 0x50);\n                                uStack294 = 0;\n                                uStack292 = 0;\n                                uStack298 = 0;\n                                uStack296 = 0;\n                                iVar2 = (*_sym.imp.SHELL32.dll_SHFileOperationA)();\n                                if (iVar2 == 0) {\n                                    puStack328 = &stack0xfffffe88;\n                                    fcn.00403c70(\"Delete successful\");\n                                    (**(*param_1 + 4))();\n                                    if (param_1[5] != 0) {\n                                        if (param_1[0xe] <= unaff_EBP) goto code_r0x00405e2d;\n                                        puStack328 = &stack0xfffffe88;\n                                        fcn.004016b0(*(param_1[0xd] + iVar5 + 4) + -0x10);\n                                        fcn.00404540();\n                                    }\n                                }\n                                else {\n                                    puStack340 = &stack0xfffffe88;\n                                    fcn.00403c70(\"Delete failed\");\n                                    (**(*param_1 + 4))();\n                                    puStack328 = NULL;\n                                    if (param_1[3] == 0) {\n                                        ppiStack332 = NULL;\n                                    }\n                                    ppiVar8 = param_1 + 0xb;\n                                    fcn.00402ea0();\n                                    if (param_1[0xe] <= ppiStack344) goto code_r0x00405e2d;\n                                    fcn.00401b30();\n                                }\n                                ppiVar8 = unaff_EBP;\n                                unaff_EDI = ppiVar7 + -4;\n                                uStack12 = CONCAT31(uStack12._1_3_, 1);\n                                ppiVar7 = ppiVar7 + -1;\n                                LOCK();\n                                piVar1 = *ppiVar7;\n                                *ppiVar7 = *ppiVar7 + -1;\n                                unaff_EBP = ppiVar8;\n                                if (piVar1 == 0x1 || piVar1 + -1 < 0) {\n                                    iVar2 = **unaff_EDI;\n                                    goto code_r0x00405d9e;\n                                }\n                            }\n                        }\n                        else {\n                            param_1[0x14] = param_1[0x14] + -1;\n                            puStack340 = NULL;\n                        }\n                    }\n                }\n            }\n            ppiVar8 = ppiVar8 + 1;\n            iVar5 = iVar5 + 0x40;\n        } while (ppiVar8 < param_1[0xe]);\n    }\n    pcVar9 = NULL;\n    if (0 < param_1[0xe]) {\n        ppiVar8 = NULL;\n        do {\n            if (puStack340 == NULL) break;\n            ppiVar7 = unaff_EDI;\n            if ((ppiVar8 < 0) || (param_1[0xe] <= pcVar9)) {\ncode_r0x00405e2d:\n                fcn.0041944d();\ncode_r0x00405e32:\n                pcVar9 = 0x80070057;\n                piVar1 = fcn.00401090();\ncode_r0x00405e3c:\n                ppiVar6 = (***piVar1)(ppiVar7[1]);\n                if (ppiVar6 == NULL) {\n                    fcn.00401260();\n                    goto code_r0x00405ef6;\n                }\n                ppiVar6[1] = ppiVar7[1];\n                unaff_EDI = ppiVar7 + 4;\n                fcn.00428c08(ppiVar6 + 4, ppiVar7[1] + 1, unaff_EDI, ppiVar7[1] + 1);\n                pcVar9 = unaff_EBP;\ncode_r0x00405e70:\n                *ppiStack332 = ppiVar6 + 4;\n                fcn.00404760();\n                unaff_EBP = pcVar9;\n            }\n            else if ((*(ppiVar8 + param_1[0xd] + 8) & 0x10) != 0) {\n                if (param_1[0xe] <= pcVar9) goto code_r0x00405e2d;\n                iVar5 = *(param_1[0xd] + 4 + ppiVar8);\n                puStack324 = &stack0xfffffe8c;\n                ppiStack332 = &stack0xfffffe8c;\n                ppiVar6 = iVar5 + -0x10;\n                piVar1 = (**(**(iVar5 + -0x10) + 0x10))();\n                ppiVar7 = ppiVar6;\n                if ((*(iVar5 + -4) < 0) || (piVar1 != *ppiVar6)) goto code_r0x00405e3c;\n                LOCK();\n                *(iVar5 + -4) = *(iVar5 + -4) + 1;\n                unaff_EDI = ppiVar6;\n                pcVar9 = unaff_EBP;\n                goto code_r0x00405e70;\n            }\n            pcVar9 = pcVar9 + 1;\n            ppiVar8 = ppiVar8 + 0x10;\n        } while (pcVar9 < param_1[0xe]);\n    }\n    pcVar9 = 0x441a7c;\n    fcn.004042a0();\n    if (puStack340 == NULL) {\ncode_r0x00405ef6:\n        if ((param_1[7] == 0) || (iVar5 = (*_sym.imp.USER32.dll_IsWindow)(),  iVar5 == 0)) goto code_r0x00405f18;\n    }\n    else {\n        if ((param_1[6] != 0) && (iVar5 = (*_sym.imp.USER32.dll_IsWindow)(),  iVar5 != 0)) {\n            (*_sym.imp.USER32.dll_SendMessageA)(*(param_1[6] + 0x20), 0x402, 100);\n        }\n        if ((param_1[7] == 0) || (iVar5 = (*_sym.imp.USER32.dll_IsWindow)(),  iVar5 == 0)) goto code_r0x00405f18;\n        pcVar9 = \"Done\";\n    }\n    fcn.0041b03c(pcVar9);\ncode_r0x00405f18:\n    ppiVar7 = ppiStack332 + -4;\n    uStack12 = uStack12 & 0xffffff00;\n    ppiVar8 = ppiStack332 + -1;\n    LOCK();\n    piVar1 = *ppiVar8;\n    *ppiVar8 = *ppiVar8 + -1;\n    if (piVar1 + -1 < 1) {\n        (**(**ppiVar7 + 4))();\n    }\n    uStack12 = 0xffffffff;\n    piVar1 = CONCAT22(uStack290, uStack292) + -4;\n    LOCK();\n    iVar5 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar5 == 1 || iVar5 + -1 < 0) {\n        (**(**(CONCAT22(uStack290, uStack292) + -0x10) + 4))();\n    }\n    *in_FS_OFFSET = uStack20;\n    fcn.004294b3(unaff_EBP);\n    return;\n}\n",
        "token_count": 3943
    },
    "00406520": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t * fcn.00406520(int32_t param_1)\n\n{\n    char cVar1;\n    char *pcVar2;\n    uchar *puVar3;\n    code *pcVar4;\n    uchar *puVar5;\n    int32_t *piVar6;\n    int32_t iVar7;\n    int32_t *piVar8;\n    int32_t iVar9;\n    char *pcVar10;\n    uint uVar11;\n    int32_t iVar12;\n    uchar *arg_8h;\n    int32_t **in_FS_OFFSET;\n    int32_t *unaff_retaddr;\n    uchar *puVar13;\n    uchar *arg_ch;\n    uchar *puVar14;\n    int32_t iStack24;\n    uint uStack20;\n    int32_t *piStack16;\n    int32_t *piStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack8 = 0x43e471;\n    piStack12 = *in_FS_OFFSET;\n    puVar5 = *0x45060c ^ &stack0xffffffdc;\n    *in_FS_OFFSET = &piStack12;\n    piStack16 = NULL;\n    uStack4 = 1;\n    piVar6 = fcn.0041a118();\n    if (piVar6 == NULL) {\n        piVar6 = fcn.00401090(0x80004005);\n    }\n    iVar7 = (**(*piVar6 + 0xc))();\n    *unaff_retaddr = iVar7 + 0x10;\n    uStack20 = 1;\n    piVar6 = unaff_retaddr;\n    piVar8 = fcn.0041a118();\n    if (piVar8 == NULL) {\n        piVar8 = fcn.00401090(0x80004005);\n    }\n    iStack24 = (**(*piVar8 + 0xc))();\n    iStack24 = iStack24 + 0x10;\n    uStack8 = CONCAT31(uStack8._1_3_, 2);\n    piVar8 = fcn.0041a118();\n    if (piVar8 == NULL) {\n        piVar8 = fcn.00401090(0x80004005);\n    }\n    iVar7 = (**(*piVar8 + 0xc))();\n    arg_8h = iVar7 + 0x10;\n    uStack8 = CONCAT31(uStack8._1_3_, 3);\n    fcn.004064c0();\n    fcn.00401600();\n    iVar7 = 0;\n    if (0 < *0x453ce4) {\n        do {\n            if (*(*unaff_retaddr + -0xc) != 0) break;\n            pcVar2 = *(*0x453ce8 + iVar7 * 4);\n            if (pcVar2 == NULL) {\n                iVar9 = 0;\n            }\n            else {\n                pcVar10 = pcVar2;\n                do {\n                    cVar1 = *pcVar10;\n                    pcVar10 = pcVar10 + 1;\n                } while (cVar1 != '\\0');\n                iVar9 = pcVar10 - (pcVar2 + 1);\n            }\n            fcn.00401aa0(pcVar2, iVar9);\n            puVar14 = &stack0xffffffe0;\n            fcn.00402100();\n            puVar3 = *(puVar5 + -0xc);\n            arg_8h = puVar5;\n            unaff_retaddr = piVar6;\n            if ((*(puVar5 + -8) - puVar3 | 1U - *(puVar5 + -4)) < 0) {\n                arg_8h = puVar3;\n                fcn.00401660();\n                unaff_retaddr = piVar6;\n                puVar14 = arg_8h;\n            }\n            arg_ch = puVar3 + 1;\n            puVar13 = arg_8h;\n            uVar11 = fcn.00429f00(arg_8h, arg_ch);\n            fcn.00401000(uVar11, puVar13, arg_ch, puVar14);\n            if ((puVar3 < 0) || (*(arg_8h + -8) < puVar3)) {\n                fcn.00401090(0x80070057);\n                pcVar4 = swi(3);\n                piVar6 = (*pcVar4)();\n                return piVar6;\n            }\n            *(arg_8h + -0xc) = puVar3;\n            puVar3[arg_8h] = 0;\n            if ((param_1 != 0) && (-1 < *(arg_8h + -0xc))) {\n                iVar9 = param_1;\n                iVar12 = fcn.00428e23(arg_8h, param_1);\n                if ((iVar12 != 0) && (iVar12 - arg_8h != -1)) {\n                    fcn.00402100(iVar9, &iStack24);\n                }\n            }\n            iVar7 = iVar7 + 1;\n            piVar6 = unaff_retaddr;\n        } while (iVar7 < *0x453ce4);\n    }\n    uStack8._0_1_ = 2;\n    piVar6 = arg_8h + -4;\n    LOCK();\n    iVar7 = *piVar6;\n    *piVar6 = *piVar6 + -1;\n    if (iVar7 + -1 < 1) {\n        (**(**(arg_8h + -0x10) + 4))(arg_8h + -0x10);\n    }\n    uStack8._0_1_ = 1;\n    piVar6 = iStack24 + -4;\n    LOCK();\n    iVar7 = *piVar6;\n    *piVar6 = *piVar6 + -1;\n    if (iVar7 + -1 < 1) {\n        (**(**(iStack24 + -0x10) + 4))(iStack24 + -0x10);\n    }\n    uStack8 = uStack8._1_3_ << 8;\n    piVar6 = param_1 + -4;\n    LOCK();\n    iVar7 = *piVar6;\n    *piVar6 = *piVar6 + -1;\n    if (iVar7 == 1 || iVar7 + -1 < 0) {\n        (**(**(param_1 + -0x10) + 4))(param_1 + -0x10);\n    }\n    *in_FS_OFFSET = piStack16;\n    return unaff_retaddr;\n}\n",
        "token_count": 1448
    },
    "null": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "",
        "token_count": 0
    },
    "004070c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.004070c0(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    uint32_t in_EAX;\n    \n    if ((((*(param_1 + 0x34) != 0) && (in_EAX = **(param_1 + 0x30),  (*(in_EAX + 0xc) & 0x800000) == 0)) &&\n        (*(in_EAX + 0x14) != 0)) &&\n       (uVar1 = *(**(param_1 + 0x30) + 0x14),  in_EAX = (uVar1 & 0xffff) * 0x20, \n       *((*(param_1 + 0x30))[uVar1 >> 0x10] + 0x18 + in_EAX) == 0)) {\n        return CONCAT31(in_EAX >> 8, 1);\n    }\n    return in_EAX & 0xffffff00;\n}\n",
        "token_count": 218
    },
    "00407270": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t fcn.00407270(int32_t param_1, uint32_t *param_2)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    \n    cVar1 = *(param_1 + *param_2);\n    while ((cVar1 != '\\0' && (iVar2 = fcn.00428fe6(\" \\t\\n\\r\", *(*param_2 + param_1)),  iVar2 != 0))) {\n        *param_2 = *param_2 + 1;\n        cVar1 = *(param_1 + *param_2);\n    }\n    return *param_2 & 0xffffff00 | *(param_1 + *param_2) != '\\0';\n}\n",
        "token_count": 158
    },
    "00407440": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00407648)\n// WARNING: Removing unreachable block (ram,0x0040764f)\n// WARNING: Removing unreachable block (ram,0x00407653)\n\nuint32_t fcn.00407440(uint32_t *param_1, int32_t param_2, int32_t param_3)\n\n{\n    char *pcVar1;\n    char cVar2;\n    uint32_t uVar3;\n    bool bVar4;\n    char cVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    uint32_t uVar8;\n    uint var_4h;\n    uint32_t *var_8h;\n    int32_t var_ch;\n    uint32_t uStack12;\n    uint32_t uStack8;\n    int32_t iStack4;\n    \n    uStack12 = var_8h[2];\n    uVar3 = var_8h[3];\n    iStack4 = -1;\n    bVar4 = false;\n    uStack8 = uStack12;\n    uVar6 = fcn.00407270(uVar3, &uStack12);\n    cVar5 = uVar6;\n    uVar8 = uStack12;\n    do {\n        if (cVar5 == '\\0') {\ncode_r0x0040766d:\n            return uVar6 & 0xffffff00;\n        }\n        cVar5 = *(uVar8 + uVar3);\n        uStack12 = uVar8 - uStack8;\n        pcVar1 = uVar8 + uVar3;\n        if ((cVar5 == '\\\"') || (cVar5 == '\\'')) {\n            var_8h[4] = var_8h[4] | 0x8000;\n            uVar8 = uVar8 + 1;\n            pcVar1 = uVar8 + uVar3;\n            *var_8h = uVar8;\n            cVar2 = *pcVar1;\n            while ((cVar2 != '\\0' && (cVar2 != cVar5))) {\n                iVar7 = fcn.0042a93e(pcVar1);\n                uVar8 = uVar8 + iVar7;\n                pcVar1 = uVar8 + uVar3;\n                cVar2 = *(uVar8 + uVar3);\n            }\n            var_8h[1] = uVar8 - 1;\n            if (*(uVar8 + uVar3) != '\\0') {\n                uVar8 = uVar8 + 1;\n            }\n        }\n        else {\n            var_8h[4] = var_8h[4] & 0xffff7fff;\n            *var_8h = uVar8;\n            cVar5 = *pcVar1;\n            if (bVar4) {\n                while ((cVar5 != '\\0' && (iVar7 = fcn.00428fe6(0x441f88, cVar5),  iVar7 == 0))) {\n                    iVar7 = fcn.0042a93e(pcVar1);\n                    uVar8 = uVar8 + iVar7;\n                    cVar5 = *(uVar8 + uVar3);\n                    pcVar1 = uVar8 + uVar3;\n                }\n            }\n            else {\n                while ((cVar5 != '\\0' && (iVar7 = fcn.00428fe6(\"= \\t\\n\\r>/?\", cVar5),  iVar7 == 0))) {\n                    iVar7 = fcn.0042a93e(pcVar1);\n                    uVar8 = uVar8 + iVar7;\n                    cVar5 = *(uVar8 + uVar3);\n                    pcVar1 = uVar8 + uVar3;\n                }\n            }\n            if (uVar8 == *var_8h) {\n                uVar8 = uVar8 + 1;\n            }\n            var_8h[1] = uVar8 - 1;\n        }\n        iVar7 = iStack4;\n        var_8h[2] = uVar8;\n        if ((bVar4) || ((var_8h[4] & 0x8000) != 0)) {\ncode_r0x00407612:\n            bVar4 = false;\n        }\n        else {\n            cVar5 = *(uVar3 + *var_8h);\n            uVar6 = *var_8h & 0xffffff00;\n            if (cVar5 != '=') {\n                if (((cVar5 != '>') && (cVar5 != '/')) && (cVar5 != '?')) {\n                    if (iStack4 != -1) {\n                        if (var_ch == 0) {\n                            if (iStack4 == param_3) {\n                                return 1;\n                            }\n                            iStack4 = iStack4 + 1;\n                            goto code_r0x00407612;\n                        }\n                        cVar5 = fcn.00407380(var_ch);\n                        if (cVar5 != '\\0') {\n                            var_8h[5] = uStack12;\n                            var_8h[6] = 0;\n                        }\n                    }\n                    iStack4 = iVar7 + 1;\n                    goto code_r0x00407612;\n                }\n                var_8h[2] = uStack8;\n                goto code_r0x0040766d;\n            }\n            bVar4 = true;\n        }\n        uStack12 = var_8h[2];\n        uStack8 = uStack12;\n        uVar6 = fcn.00407270(uVar3, &uStack12);\n        cVar5 = uVar6;\n        uVar8 = uStack12;\n    } while( true );\n}\n",
        "token_count": 1244
    },
    "004076e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t * fcn.004076e0(char *param_1, int32_t param_2)\n\n{\n    code *pcVar1;\n    char cVar2;\n    uint32_t uVar3;\n    int32_t *piVar4;\n    int32_t iVar5;\n    char *pcVar6;\n    int32_t arg_ch;\n    int32_t iVar7;\n    int32_t iVar8;\n    int32_t iVar9;\n    int32_t iVar10;\n    int32_t **in_FS_OFFSET;\n    int32_t *unaff_retaddr;\n    int32_t iStack36;\n    uint uStack24;\n    int32_t *piStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack8 = 0x43e5a9;\n    piStack12 = *in_FS_OFFSET;\n    uVar3 = *0x45060c ^ &stack0xffffffcc;\n    *in_FS_OFFSET = &piStack12;\n    iVar9 = 0;\n    uStack4 = 0;\n    piVar4 = fcn.0041a118(uVar3);\n    if (piVar4 == NULL) {\n        piVar4 = fcn.00401090(0x80004005);\n    }\n    iVar5 = (**(*piVar4 + 0xc))();\n    *unaff_retaddr = iVar5 + 0x10;\n    uStack8 = 0;\n    if (param_2 == -1) {\n        pcVar6 = param_1;\n        do {\n            cVar2 = *pcVar6;\n            pcVar6 = pcVar6 + 1;\n        } while (cVar2 != '\\0');\n        param_2 = pcVar6 - (param_1 + 1);\n    }\n    piVar4 = unaff_retaddr;\n    if ((*(iVar5 + 8) - param_2 | 1U - *(iVar5 + 0xc)) < 0) {\n        fcn.00401660(param_2);\n    }\n    iVar5 = *unaff_retaddr;\n    iVar7 = 0;\n    iStack36 = 0;\n    if (0 < param_2) {\n        do {\n            pcVar6 = param_1 + iVar9;\n            if (param_1[iVar9] == '&') {\n                if (param_1[iVar9 + 1] == '#') {\n                    iVar8 = iVar9 + 2;\n                    cVar2 = param_1[iVar8];\n                    uStack24 = 10;\n                    if (cVar2 == 'x') {\n                        iVar8 = iVar9 + 3;\n                        cVar2 = param_1[iVar8];\n                        uStack24 = 0x10;\n                    }\n                    pcVar6 = param_1 + iVar8;\n                    iVar10 = 0;\n                    do {\n                        if (cVar2 == '\\0') break;\n                        if (cVar2 == ';') goto code_r0x0040780b;\n                        iVar7 = fcn.0042a93e(pcVar6 + iVar10);\n                        iVar10 = iVar10 + iVar7;\n                        cVar2 = pcVar6[iVar10];\n                    } while (iVar10 < 7);\n                    if (cVar2 == ';') {\ncode_r0x0040780b:\n                        arg_ch = fcn.0042b1ef(pcVar6, 0, uStack24);\n                        iVar7 = fcn.0042af8e(&stack0xffffffd8, arg_ch);\n                        if (0 < iVar7) {\n                            fcn.0042a55b(iStack36 + iVar5, &stack0xffffffd8, iVar7);\n                            iVar7 = iStack36 + iVar7;\n                            iStack36 = iVar7;\n                            if (arg_ch != 0) {\n                                iVar9 = iVar10 + 1 + iVar8;\n                                goto code_r0x004078fb;\n                            }\n                        }\n                    }\n                    *(iStack36 + iVar5) = 0x26;\n                    iVar7 = iStack36 + 1;\n                    iVar9 = iVar9 + 1;\n                }\n                else {\n                    iVar8 = 0;\n                    do {\n                        iVar7 = *(iVar8 * 4 + 0x44e1cc);\n                        if ((iVar9 < param_2 - iVar7) &&\n                           (iVar7 = fcn.0042a6df(*(iVar8 * 4 + 0x44e1b8), pcVar6 + 1, iVar7),  iVar7 == 0)) {\n                            *(iStack36 + iVar5) = *(*0x44e1b4 + iVar8);\n                            iVar7 = iStack36 + 1;\n                            iVar9 = *(iVar8 * 4 + 0x44e1cc) + 1 + iVar9;\n                            goto code_r0x004078fb;\n                        }\n                        iVar8 = iVar8 + 1;\n                    } while (iVar8 < 5);\n                    *(iStack36 + iVar5) = 0x26;\n                    iVar7 = iStack36 + 1;\n                    iVar9 = iVar9 + 1;\n                }\n            }\n            else {\n                iVar8 = fcn.0042a93e(pcVar6);\n                fcn.0042a55b(iStack36 + iVar5, pcVar6, iVar8);\n                iVar7 = iStack36 + iVar8;\n                iVar9 = iVar9 + iVar8;\n            }\ncode_r0x004078fb:\n            iStack36 = iVar7;\n        } while (iVar9 < param_2);\n    }\n    if (iVar7 == -1) {\n        iVar7 = *piVar4;\n        if (iVar7 != 0) {\n            iVar7 = fcn.00428f0d(iVar7, *(iVar7 + -8));\n            goto code_r0x00407923;\n        }\n    }\n    else {\ncode_r0x00407923:\n        if (iVar7 < 0) goto code_r0x0040794d;\n    }\n    if (iVar7 <= *(*piVar4 + -8)) {\n        *(*piVar4 + -0xc) = iVar7;\n        *(iVar7 + *piVar4) = 0;\n        *in_FS_OFFSET = NULL;\n        return piVar4;\n    }\ncode_r0x0040794d:\n    fcn.00401090(0x80070057);\n    pcVar1 = swi(3);\n    piVar4 = (*pcVar1)();\n    return piVar4;\n}\n",
        "token_count": 1417
    },
    "00407960": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t __thiscall fcn.00407960(int32_t *param_1, uint32_t param_2, uint32_t param_3, char *param_4)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    bool bVar3;\n    char cVar4;\n    bool bVar5;\n    char cVar6;\n    int32_t *piVar7;\n    uint32_t uVar8;\n    int32_t iVar9;\n    int32_t iVar10;\n    int32_t iVar11;\n    int32_t iVar12;\n    char *pcVar13;\n    int32_t *in_FS_OFFSET;\n    char *pcStack96;\n    int32_t iStack56;\n    int32_t iStack52;\n    int32_t iStack48;\n    uchar *puStack44;\n    uchar *puStack40;\n    int32_t iStack36;\n    int32_t iStack32;\n    int32_t iStack28;\n    int32_t iStack24;\n    int32_t iStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x43e5d8;\n    iStack12 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffff4;\n    iVar11 = 0;\n    bVar3 = false;\n    if ((param_4 == NULL) || (*param_4 != '/')) {\n        piVar7 = param_1[0xc];\n        if (param_3 == 0) {\n            uVar8 = *(piVar7[param_2 >> 0x10] + 0x14 + (param_2 & 0xffff) * 0x20);\n        }\n        else {\n            uVar8 = *(piVar7[param_3 >> 0x10] + 0x18 + (param_3 & 0xffff) * 0x20);\n        }\n    }\n    else {\n        piVar7 = param_1[0xc];\n        if (param_4[1] == '/') {\n            uVar8 = *(piVar7[param_3 >> 0x10] + 0x14 + (param_3 & 0xffff) * 0x20);\n            bVar3 = true;\n            if (uVar8 == 0) {\n                if (param_3 != 0) {\n                    do {\n                        iVar11 = piVar7[param_3 >> 0x10] + (param_3 & 0xffff) * 0x20;\n                        if (*(iVar11 + 0x18) != 0) break;\n                        param_3 = *(iVar11 + 0x10);\n                    } while (param_3 != 0);\n                }\n                uVar8 = *(piVar7[param_3 >> 0x10] + 0x18 + (param_3 & 0xffff) * 0x20);\n            }\n            iVar11 = 2;\n        }\n        else {\n            uVar8 = *(*piVar7 + 0x14);\n            iVar11 = 1;\n        }\n    }\n    if ((param_4 != NULL) && (param_4[iVar11] != '\\0')) {\n        iStack28 = *param_1;\n        iStack24 = param_1[10];\n        puStack40 = NULL;\n        iStack36 = -1;\n        uVar2 = uVar8;\njoined_r0x00407a8a:\n        do {\n            uVar8 = uVar2;\n            if (uVar8 == 0) goto code_r0x00407eb1;\n            iVar9 = (uVar8 >> 0x10) * 4;\n            iVar10 = (uVar8 & 0xffff) * 0x20;\n            pcVar13 = param_4 + iVar11;\n            iStack32 = *(piVar7[uVar8 >> 0x10] + iVar10) + 1;\n            iStack48 = iVar11;\n            if (*pcVar13 != '*') {\n                pcStack96 = 0x407acf;\n                cVar6 = fcn.004072c0(&stack0xffffffd8);\n                if (cVar6 != '\\0') {\n                    pcStack96 = 0x407af0;\n                    cVar6 = fcn.00407380();\n                    if (cVar6 != '\\0') goto code_r0x00407af8;\n                }\ncode_r0x00407e34:\n                iVar9 = uVar8 >> 0x10;\n                if (bVar3) {\n                    piVar7 = param_1[0xc];\n                    uVar2 = *(piVar7[iVar9] + 0x14 + (uVar8 & 0xffff) * 0x20);\n                    if (uVar2 != 0) goto joined_r0x00407a8a;\n                    while ((iVar9 = uVar8 >> 0x10,  uVar8 != 0 &&\n                           (iVar10 = (uVar8 & 0xffff) * 0x20 + piVar7[iVar9],  *(iVar10 + 0x18) == 0))) {\n                        uVar8 = *(iVar10 + 0x10);\n                    }\n                }\n                else {\n                    piVar7 = param_1[0xc];\n                }\n                uVar2 = *(piVar7[iVar9] + 0x18 + (uVar8 & 0xffff) * 0x20);\n                goto joined_r0x00407a8a;\n            }\ncode_r0x00407af8:\n            bVar5 = true;\n            if (*pcVar13 == '*') {\n                iVar12 = iVar11 + 1;\n            }\n            else {\n                iVar12 = iVar11 + 1 + (iStack36 - puStack40);\n            }\n            if (param_4[iVar12] == '[') {\n                cVar6 = param_4[iVar12 + 1];\n                iVar11 = iVar12 + 1;\n                if (('0' < cVar6) && (cVar6 < ':')) {\n                    iVar12 = 0;\n                    while (('/' < cVar6 && (cVar6 < ':'))) {\n                        iVar11 = iVar11 + 1;\n                        iVar12 = cVar6 + -0x30 + iVar12 * 10;\n                        cVar6 = param_4[iVar11];\n                    }\n                    iVar12 = iVar12 + -1;\njoined_r0x00407b5d:\n                    if (iVar12 != 0) {\n                        iVar1 = param_1[0xc];\n                        if (*(*(iVar9 + iVar1) + 0x18 + iVar10) != 0) {\n                            uVar8 = *(*(iVar1 + iVar9) + 0x18 + iVar10);\n                            iVar9 = (uVar8 >> 0x10) * 4;\n                            iVar10 = (uVar8 & 0xffff) * 0x20;\n                            iStack32 = *(*(iVar1 + iVar9) + iVar10) + 1;\n                            if (*pcVar13 != '*') goto code_r0x00407ba9;\n                            goto code_r0x00407bd4;\n                        }\n                        if (iVar12 != 0) goto code_r0x00407eb1;\n                    }\n                    goto code_r0x00407dd7;\n                }\n                if (cVar6 == '@') {\n                    iVar11 = iVar12 + 2;\n                    pcVar13 = param_4 + iVar11;\n                    iStack32 = *(*(iVar9 + param_1[0xc]) + iVar10) + 1;\n                    pcStack96 = pcVar13;\n                    cVar6 = fcn.00407440(&stack0xffffffd8);\n                    if (cVar6 == '\\0') goto code_r0x00407dd2;\n                    do {\n                        pcStack96 = 0x407c38;\n                        iVar9 = fcn.0042a93e(pcVar13);\n                        iVar11 = iVar11 + iVar9;\n                        cVar6 = param_4[iVar11];\n                        pcVar13 = param_4 + iVar11;\n                        if ((cVar6 == '\\0') || (cVar6 == ']')) break;\n                    } while (cVar6 != '=');\n                    if (param_4[iVar11] == '=') {\n                        cVar6 = param_4[iVar11 + 1];\n                        iVar9 = iVar11 + 1;\n                        if ((cVar6 == '\\'') || (cVar4 = ']',  iVar10 = iVar9,  cVar6 == '\\\"')) {\n                            iVar9 = iVar11 + 2;\n                            cVar4 = cVar6;\n                            iVar10 = iVar9;\n                        }\n                        do {\n                            pcStack96 = 0x407c86;\n                            iVar11 = fcn.0042a93e(param_4 + iVar9);\n                            iVar11 = iVar9 + iVar11;\n                            if (param_4[iVar11] == '\\0') break;\n                            iVar9 = iVar11;\n                        } while (param_4[iVar11] != cVar4);\n                        puStack44 = &stack0xffffffa0;\n                        pcStack96 = param_4 + iVar10;\n                        fcn.004076e0(&stack0xffffffcc);\n                        puStack44 = &stack0xffffffa0;\n                        pcStack96 = puStack40 + iStack28;\n                        uStack4 = 0;\n                        fcn.004076e0(&stack0xffffffc8);\n                        cVar6 = fcn.00401810(&stack0xffffffcc, &stack0xffffffc8);\n                        if (cVar6 == '\\0') {\n                            bVar5 = false;\n                        }\n                        else if (cVar4 != ']') {\n                            iVar11 = iVar11 + 1;\n                        }\n                        piVar7 = iStack56 + -4;\n                        LOCK();\n                        iVar9 = *piVar7;\n                        *piVar7 = *piVar7 + -1;\n                        if (iVar9 + -1 < 1) {\n                            pcStack96 = 0x407d2b;\n                            (**(**(iStack56 + -0x10) + 4))();\n                        }\n                        uStack4 = 0xffffffff;\n                        piVar7 = iStack52 + -4;\n                        LOCK();\n                        iVar9 = *piVar7;\n                        *piVar7 = *piVar7 + -1;\n                        if (iVar9 == 1 || iVar9 + -1 < 0) {\n                            pcStack96 = 0x407d57;\n                            (**(**(iStack52 + -0x10) + 4))();\n                        }\n                    }\n                }\n                else {\n                    iVar1 = param_1[0xc];\n                    uVar2 = *(*(iVar1 + iVar9) + 0x14 + iVar10);\n                    while (uVar2 != 0) {\n                        iVar9 = (uVar2 >> 0x10) * 4;\n                        iVar10 = (uVar2 & 0xffff) * 0x20;\n                        iStack28 = *(*(iVar9 + iVar1) + iVar10) + 1;\n                        cVar6 = fcn.004072c0(&stack0xffffffdc);\n                        if (cVar6 != '\\0') {\n                            puStack40 = &stack0xffffffa8;\n                            cVar6 = fcn.00407380();\n                            if (cVar6 != '\\0') {\n                                if (uVar2 != 0) {\n                                    iVar11 = iVar12 + 2 + (iStack36 - puStack40);\n                                    goto code_r0x00407dd7;\n                                }\n                                break;\n                            }\n                        }\n                        iVar1 = param_1[0xc];\n                        uVar2 = *(*(iVar9 + iVar1) + 0x18 + iVar10);\n                    }\ncode_r0x00407dd2:\n                    bVar5 = false;\n                }\ncode_r0x00407dd7:\n                iVar12 = iVar11 + 1;\n                iVar11 = iStack48;\n                if (!bVar5) goto code_r0x00407e34;\n            }\n            if (param_4[iVar12] != '/') break;\n            if (bVar3) goto code_r0x00407eb1;\n            piVar7 = param_1[0xc];\n            iVar11 = iVar12 + 1;\n            uVar2 = *(piVar7[uVar8 >> 0x10] + 0x14 + (uVar8 & 0xffff) * 0x20);\n        } while( true );\n    }\ncode_r0x00407eb7:\n    *in_FS_OFFSET = iStack12;\n    return uVar8;\ncode_r0x00407ba9:\n    pcStack96 = 0x407bb3;\n    cVar6 = fcn.004072c0(&stack0xffffffd8);\n    if (cVar6 != '\\0') {\n        puStack44 = &stack0xffffffa4;\n        pcStack96 = 0x407bd0;\n        cVar6 = fcn.00407380();\n        if (cVar6 != '\\0') {\ncode_r0x00407bd4:\n            iVar12 = iVar12 + -1;\n        }\n    }\n    goto joined_r0x00407b5d;\ncode_r0x00407eb1:\n    uVar8 = 0;\n    goto code_r0x00407eb7;\n}\n",
        "token_count": 2927
    },
    "00407f80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00407f80(int32_t *param_1)\n\n{\n    int32_t arg_8h;\n    int32_t iVar1;\n    \n    iVar1 = 0;\n    do {\n        if ((*(*param_1 + iVar1) != 0) && (arg_8h = *(*param_1 + iVar1),  arg_8h != 0)) {\n            fcn.0042a415(arg_8h, 0xc, *(arg_8h + -4), fcn.004015e0);\n            fcn.00419316(arg_8h + -4);\n        }\n        iVar1 = iVar1 + 4;\n    } while (iVar1 < 0x1c);\n    fcn.00419316(*param_1);\n    return;\n}\n",
        "token_count": 177
    },
    "00408000": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t __thiscall fcn.00408000(int32_t param_1, uint param_2)\n\n{\n    uint uVar1;\n    uint32_t in_EAX;\n    \n    if (*(param_1 + 0x34) != 0) {\n        in_EAX = fcn.00407960(*(param_1 + 8), *(param_1 + 0xc), param_2);\n        if (in_EAX != 0) {\n            uVar1 = *(*(*(param_1 + 0x30) + (in_EAX >> 0x10) * 4) + 0x10 + (in_EAX & 0xffff) * 0x20);\n            *(param_1 + 0xc) = in_EAX;\n            *(param_1 + 8) = uVar1;\n            *(param_1 + 0x10) = 0;\n            *(param_1 + 0x20) = 0;\n            *(param_1 + 0x24) = 0;\n            *(param_1 + 0x1c) = 1;\n            return 1;\n        }\n    }\n    return in_EAX & 0xffffff00;\n}\n",
        "token_count": 264
    },
    "00408070": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00408070(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    uint32_t uVar3;\n    uint unaff_retaddr;\n    \n    if (*(param_1 + 0xc) == 0) {\n        fcn.00408000(0);\n    }\n    uVar3 = fcn.00407960(*(param_1 + 0xc), *(param_1 + 0x10), unaff_retaddr);\n    if (uVar3 != 0) {\n        uVar1 = *(*(*(param_1 + 0x30) + (uVar3 >> 0x10) * 4) + 0x10 + (uVar3 & 0xffff) * 0x20);\n        uVar2 = *(*(*(param_1 + 0x30) + (uVar1 >> 0x10) * 4) + 0x10 + (uVar1 & 0xffff) * 0x20);\n        *(param_1 + 0x10) = uVar3;\n        *(param_1 + 8) = uVar2;\n        *(param_1 + 0xc) = uVar1;\n        *(param_1 + 0x20) = 0;\n        *(param_1 + 0x24) = 0;\n        *(param_1 + 0x1c) = uVar1 != 0;\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 334
    },
    "004081c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.004081c0(int32_t *param_1, uint32_t *param_2)\n\n{\n    char *pcVar1;\n    char cVar2;\n    uint32_t *puVar3;\n    uint32_t *puVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    char *pcVar7;\n    int32_t *extraout_EDX;\n    int32_t *piVar8;\n    uint32_t uVar9;\n    int32_t *piVar10;\n    uint32_t uVar11;\n    uint32_t *arg_8h;\n    int32_t iVar12;\n    uint32_t arg_8h_00;\n    int32_t iStack440;\n    int32_t iStack436;\n    int32_t *piStack424;\n    uint32_t *puStack420;\n    uint32_t *puStack416;\n    uint32_t *puStack412;\n    uchar auStack404 [100];\n    uchar auStack304 [100];\n    uchar auStack204 [100];\n    uchar auStack104 [100];\n    uint32_t uStack4;\n    \n    uStack4 = *0x45060c ^ &stack0xfffffe40;\n    piVar10 = NULL;\n    param_2[1] = param_1[2];\n    param_2[3] = 0;\n    cVar2 = *(param_1[3] + param_1[2]);\n    arg_8h = param_1[3] + param_1[2];\n    uVar9 = 0xffffffff;\n    arg_8h_00 = 0;\n    iStack440 = 0;\n    iStack436 = 0;\n    piStack424 = NULL;\n    puStack416 = NULL;\n    puStack412 = NULL;\n    puVar4 = puStack416;\n    if (cVar2 == '\\0') {\n        param_2[2] = 0;\n        *param_2 = 0;\n    }\n    else {\n        while (puVar3 = cVar2,  puVar3 != NULL) {\n            piVar8 = param_1;\n            puStack420 = arg_8h;\n            puStack416 = puVar4;\n            if (piVar10 == NULL) {\ncode_r0x00408310:\n                if (iStack440 == 0) {\n                    if (arg_8h_00 == 0) {\n                        if (puVar3 == 0x3c) {\n                            arg_8h_00 = 1;\n                        }\n                        else {\n                            uVar9 = 4;\n                            iVar5 = fcn.00428fe6(\" \\t\\n\\r\", cVar2);\n                            if (iVar5 == 0) {\ncode_r0x00408586:\n                                uVar9 = 2;\n                                iStack440 = 0x44208c;\ncode_r0x00408593:\n                                iStack436 = 1;\n                            }\n                            else {\n                                arg_8h_00 = 0x10;\n                            }\n                        }\n                    }\n                    else if ((arg_8h_00 & 0x10) == 0) {\n                        if ((arg_8h_00 & 1) == 0) {\n                            if ((arg_8h_00 & 2) == 0) {\n                                if ((arg_8h_00 & 4) == 0) {\n                                    if ((arg_8h_00 & 8) == 0) {\n                                        if ((arg_8h_00 & 0x20) != 0) {\n                                            if (puVar3 == 0x3c) {\n                                                arg_8h_00 = arg_8h_00 | 1;\n                                            }\n                                            else if (puVar3 == 0x3e) {\n                                                iVar5 = arg_8h - piVar8[3];\n                                                uVar9 = 0x40;\n                                                goto code_r0x004088bd;\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        arg_8h_00 = arg_8h_00 ^ 8;\n                                        if (puVar3 == 0x43) {\n                                            iStack440 = 0x442024;\n                                            iStack436 = 3;\n                                            uVar9 = 8;\n                                        }\n                                        else {\n                                            iStack440 = 0x442078;\n                                            iStack436 = 1;\n                                            fcn.0042b7a5(auStack404, \"Incorrect %s at offset %d\", 0x442088);\n                                            fcn.00402e60(auStack404);\n                                            uVar9 = 0xffffffff;\n                                        }\n                                    }\n                                }\n                                else {\n                                    arg_8h_00 = arg_8h_00 ^ 4;\n                                    if (puVar3 == 0x2d) {\n                                        iStack440 = 0x442034;\n                                        iStack436 = 3;\n                                        uVar9 = 0x20;\n                                    }\n                                    else {\n                                        iStack440 = 0x442078;\n                                        iStack436 = 1;\n                                        fcn.0042b7a5(auStack204, \"Incorrect %s at offset %d\", \"comment tag\");\n                                        fcn.00402e60(auStack204);\n                                        uVar9 = 0xffffffff;\n                                    }\n                                }\n                            }\n                            else {\n                                arg_8h_00 = arg_8h_00 ^ 2;\n                                if (puVar3 == 0x2d) {\n                                    arg_8h_00 = arg_8h_00 | 4;\n                                }\n                                else if (puVar3 == 0x5b) {\n                                    if ((arg_8h_00 & 0x20) == 0) {\n                                        arg_8h_00 = arg_8h_00 | 8;\n                                    }\n                                    else {\ncode_r0x00408747:\n                                        iVar5 = fcn.00428fe6(0x442040, cVar2);\n                                        iStack440 = 0x442078;\n                                        iStack436 = 1;\n                                        if (iVar5 == 0) {\n                                            fcn.0042b7a5(auStack304, \"Incorrect %s at offset %d\", \"! tag\");\n                                            fcn.00402e60(auStack304);\n                                            uVar9 = 0xffffffff;\n                                        }\n                                        else {\n                                            uVar9 = 0x40;\n                                        }\n                                    }\n                                }\n                                else {\n                                    if ((puVar3 != 0x44) || ((arg_8h_00 & 0x20) != 0)) goto code_r0x00408747;\n                                    arg_8h_00 = arg_8h_00 | 0x20;\n                                }\n                            }\n                        }\n                        else {\n                            arg_8h_00 = arg_8h_00 ^ 1;\n                            if ((puVar3 < 0x61) &&\n                               ((((puVar3 < 0x41 || (0x5a < puVar3)) && (puVar3 != 0x5f)) && (puVar3 != 0x3a)))) {\n                                if (puVar3 == 0x2f) {\n                                    uVar9 = 0;\n                                    piVar10 = arg_8h + (1 - piVar8[3]);\n                                    iStack440 = 0x442078;\n                                    piStack424 = piVar10;\n                                    goto code_r0x00408593;\n                                }\n                                if (puVar3 == 0x21) {\n                                    arg_8h_00 = arg_8h_00 | 2;\n                                }\n                                else if (puVar3 == 0x3f) {\n                                    iStack440 = 0x442074;\n                                    piStack424 = arg_8h + (1 - piVar8[3]);\n                                    iStack436 = 2;\n                                    uVar9 = 0x10;\n                                    piVar10 = piStack424;\n                                }\n                                else {\n                                    iStack440 = 0x442078;\n                                    iStack436 = 1;\n                                    fcn.0042b7a5(auStack104, \"Incorrect %s at offset %d\", \"tag name character\");\n                                    fcn.00402e60(auStack104);\n                                    uVar9 = 0xffffffff;\n                                }\n                            }\n                            else {\n                                piStack424 = arg_8h - piVar8[3];\n                                uVar9 = 1;\n                                iStack440 = 0x442078;\n                                iStack436 = 1;\n                                piVar10 = piStack424;\n                            }\n                        }\n                    }\n                    else {\n                        if (puVar3 == 0x3c) {\n                            uVar9 = 4;\n                            iVar5 = arg_8h + (-1 - piVar8[3]);\n                            goto code_r0x004088bd;\n                        }\n                        iVar5 = fcn.00428fe6(\" \\t\\n\\r\", cVar2);\n                        if (iVar5 == 0) {\n                            arg_8h_00 = arg_8h_00 ^ 0x10;\n                            goto code_r0x00408586;\n                        }\n                    }\n                }\n                else {\n                    if (puVar3 == 0x3e) {\n                        if ((arg_8h_00 & 0xc0) == 0) {\n                            iVar5 = arg_8h - piVar8[3];\n                            if (iStack436 != 1) {\n                                if (iStack436 < iVar5) {\n                                    pcVar7 = puStack420 + (1 - iStack436);\n                                    iVar12 = iStack440 - pcVar7;\n                                    iVar6 = iStack436;\n                                    do {\n                                        iVar6 = iVar6 + -1;\n                                        piVar10 = piStack424;\n                                        arg_8h = puStack420;\n                                        if (iVar6 == 0) goto code_r0x004083da;\n                                        cVar2 = *pcVar7;\n                                        pcVar1 = pcVar7 + iVar12;\n                                        pcVar7 = pcVar7 + 1;\n                                    } while (cVar2 == *pcVar1);\n                                }\n                                goto code_r0x0040859b;\n                            }\n                            if ((uVar9 == 1) && (puVar4 == 0x2f)) {\n                                if (puStack412 != NULL) {\n                                    iVar6 = fcn.00428fe6(\" \\t\\n\\r\\'\\\"\", puStack412);\n                                    if (iVar6 == 0) goto code_r0x004083da;\n                                }\n                                param_2[3] = param_2[3] | 0x10000;\n                            }\ncode_r0x004083da:\n                            iStack440 = 0;\n                            if ((arg_8h_00 & 0x20) != 0) goto code_r0x0040859b;\n                            goto code_r0x004088bd;\n                        }\n                    }\n                    else if ((puVar3 == 0x3c) && ((uVar9 == 2 || (uVar9 == 0xffffffff)))) goto code_r0x0040899d;\n                    if ((uVar9 & 1) == 0) {\n                        if ((uVar9 & 0x40) != 0) {\n                            if (puVar3 == 0x22) {\n                                if ((arg_8h_00 & 0x40) == 0) {\n                                    arg_8h_00 = arg_8h_00 ^ 0x80;\n                                }\n                            }\n                            else if ((puVar3 == 0x27) && (-1 < arg_8h_00)) {\n                                arg_8h_00 = arg_8h_00 ^ 0x40;\n                            }\n                        }\n                    }\n                    else {\n                        puStack416 = puVar3;\n                        puStack412 = puVar4;\n                        if ((arg_8h_00 & 0xc0) == 0) {\n                            if (puVar3 == 0x22) {\n                                if ((arg_8h_00 & 0x100) != 0) {\n                                    arg_8h_00 = arg_8h_00 ^ 0x180;\n                                }\n                            }\n                            else if (puVar3 == 0x27) {\n                                if ((arg_8h_00 & 0x100) != 0) {\n                                    arg_8h_00 = arg_8h_00 ^ 0x140;\n                                }\n                            }\n                            else if ((puVar3 == 0x3d) && (puVar4 != 0x3d)) {\n                                if ((arg_8h_00 & 0x100) == 0) {\n                                    arg_8h_00 = arg_8h_00 ^ 0x100;\n                                }\n                                else {\ncode_r0x004084ed:\n                                    iVar5 = fcn.00428fe6(\" \\t\\n\\r\", cVar2);\n                                    if (iVar5 == 0) {\n                                        arg_8h_00 = arg_8h_00 ^ 0x100;\n                                    }\n                                }\n                            }\n                            else if ((arg_8h_00 & 0x100) != 0) goto code_r0x004084ed;\n                        }\n                        else if (puVar3 == 0x22) {\n                            if (arg_8h_00 < '\\0') {\n                                arg_8h_00 = arg_8h_00 ^ 0x80;\n                            }\n                        }\n                        else if ((puVar3 == 0x27) && ((arg_8h_00 & 0x40) != 0)) {\n                            arg_8h_00 = arg_8h_00 ^ 0x40;\n                        }\n                    }\n                }\n            }\n            else {\n                iVar5 = fcn.00428fe6(\" \\t\\n\\r/>\", cVar2);\n                if (iVar5 != 0) {\n                    uVar11 = arg_8h + (-piVar10 - param_1[3]);\n                    if (uVar9 == 0) {\n                        *param_1 = piVar10;\n                        param_1[1] = (uVar11 - 1) + piVar10;\ncode_r0x004082fa:\n                        piVar10 = NULL;\n                        puStack420 = NULL;\n                        puStack412 = NULL;\n                        piVar8 = piStack424;\n                        goto code_r0x00408310;\n                    }\n                    arg_8h = param_2 + 4;\n                    if ((1U - *(param_2[4] - 4) | *(param_2[4] - 8) - uVar11) < 0) {\n                        fcn.00401660();\n                    }\n                    fcn.0042aaa0(*arg_8h, piStack424[3] + piVar10, uVar11);\n                    if (uVar11 == 0xffffffff) {\n                        uVar11 = *arg_8h;\n                        if (uVar11 != 0) {\n                            uVar11 = fcn.00428f0d(uVar11, *(uVar11 - 8));\n                            goto code_r0x004082da;\n                        }\ncode_r0x004082e2:\n                        if (uVar11 <= *(*arg_8h - 8)) {\n                            *(*arg_8h - 0xc) = uVar11;\n                            *(uVar11 + *arg_8h) = 0;\n                            arg_8h = puVar4;\n                            goto code_r0x004082fa;\n                        }\n                    }\n                    else {\ncode_r0x004082da:\n                        if (-1 < uVar11) goto code_r0x004082e2;\n                    }\n                    fcn.00401090(0x80070057);\n                    piVar8 = extraout_EDX;\ncode_r0x0040899d:\n                    iVar5 = arg_8h + (-1 - piVar8[3]);\n                    goto code_r0x004088bd;\n                }\n            }\ncode_r0x0040859b:\n            iVar5 = fcn.0042a93e(arg_8h);\n            arg_8h = arg_8h + iVar5;\n            puVar4 = puStack416;\n            cVar2 = *arg_8h;\n        }\n        iVar5 = arg_8h + (-1 - param_1[3]);\n        if ((uVar9 != 4) && (uVar9 != 2)) {\n            pcVar7 = 0x442088;\n            if (((arg_8h_00 & 0x20) == 0) && (uVar9 != 0x40)) {\n                if (uVar9 == 1) {\n                    pcVar7 = \"Element tag\";\n                }\n                else if (uVar9 == 0) {\n                    pcVar7 = \"Element end tag\";\n                }\n                else if (uVar9 == 8) {\n                    pcVar7 = \"CDATA Section\";\n                }\n                else if (uVar9 == 0x10) {\n                    pcVar7 = \"Processing instruction\";\n                }\n                else if (uVar9 == 0x20) {\n                    pcVar7 = \"Comment\";\n                }\n            }\n            else {\n                pcVar7 = \"Doctype\";\n            }\n            uVar11 = param_2[1];\n            uVar9 = 0xffffffff;\n            fcn.0042b7a5(auStack404, \"%s at offset %d unterminated\", pcVar7);\n            fcn.00402e60(uVar11, auStack404);\n        }\ncode_r0x004088bd:\n        param_1[2] = iVar5 + 1;\n        *param_2 = uVar9;\n        param_2[2] = (iVar5 + 1) - param_2[1];\n    }\n    fcn.004294b3(arg_8h_00);\n    return;\n}\n",
        "token_count": 3893
    },
    "004089c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t * __thiscall fcn.004089c0(int32_t *param_1, int32_t *param_2, uint32_t param_3)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t unaff_ESI;\n    int32_t **ppiVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    int32_t *in_FS_OFFSET;\n    uint32_t uStack100;\n    int32_t iStack72;\n    int32_t iStack44;\n    uint uStack24;\n    int32_t iStack12;\n    int32_t *piStack8;\n    int32_t iStack4;\n    \n    iStack4 = 0xffffffff;\n    piStack8 = 0x43e628;\n    iStack12 = *in_FS_OFFSET;\n    uVar2 = *0x45060c ^ &stack0xffffffa8;\n    *in_FS_OFFSET = &stack0xfffffff4;\n    if ((param_3 == param_1[3]) && (param_1[9] != 0)) {\n        iVar4 = param_1[7];\n        if (iVar4 == 0x20) {\n            fcn.00407ed0();\n        }\n        else if (iVar4 == 0x10) {\n            fcn.00407ed0();\n        }\n        else if (iVar4 == 8) {\n            fcn.00407ed0();\n        }\n        else if (iVar4 == 2) {\n            fcn.004076e0();\n        }\n        else if (iVar4 == 0x80) {\n            fcn.00407ed0();\n        }\n        else {\n            fcn.00407ed0();\n        }\n    }\n    else {\n        piVar3 = fcn.0041a118();\n        if (piVar3 == NULL) {\n            piVar3 = fcn.00401090();\n        }\n        uStack100 = 0x408af0;\n        iStack4 = (**(*piVar3 + 0xc))();\n        iStack4 = iStack4 + 0x10;\n        iVar5 = (param_3 >> 0x10) * 4;\n        iVar7 = (param_3 & 0xffff) * 0x20;\n        iVar4 = *(iVar5 + param_1[0xc]) + iVar7;\n        if ((*(iVar4 + 0x14) == 0) && ((*(iVar4 + 8) & 0x2fffff) != *(iVar4 + 4))) {\n            iVar4 = *(iVar5 + param_1[0xc]);\n            uVar1 = *(iVar4 + 8 + iVar7);\n            iVar8 = ((iVar4 + iVar7)[2] & 0x2fffffU) + *(iVar4 + iVar7);\n            iVar5 = *param_1;\n            iVar7 = (*(iVar4 + 4 + iVar7) - (uVar1 >> 0x16)) - (uVar1 & 0x2fffff);\n            iVar4 = fcn.00428fe6(iVar5 + iVar8, 0x3c);\n            if ((iVar4 == 0) || (iVar7 <= iVar4 - (iVar5 + iVar8))) {\n                fcn.004076e0(&stack0xffffffb0);\n                fcn.00402100();\n                piVar3 = unaff_ESI + -4;\n                LOCK();\n                iVar4 = *piVar3;\n                *piVar3 = *piVar3 + -1;\n                if (iVar4 == 1 || iVar4 + -1 < 0) {\n                    (**(**(unaff_ESI + -0x10) + 4))();\n                }\n            }\n            else {\n                fcn.00407350();\n                fcn.004076b0();\n                uStack24 = CONCAT31(uStack24._1_3_, 1);\n                iVar4 = iVar8;\njoined_r0x00408bad:\n                if (iVar4 < iVar7 + iVar8) {\n                    fcn.004081c0();\n                    iVar4 = iStack44;\n                    if (iStack72 != 2) goto code_r0x00408c22;\n                    fcn.004076e0(&stack0xffffffac);\n                    fcn.00401b30();\n                    uStack24._1_3_ = uStack24 >> 8;\n                    uStack24 = CONCAT31(uStack24._1_3_, 1);\n                    piVar3 = uVar2 - 4;\n                    LOCK();\n                    iVar5 = *piVar3;\n                    *piVar3 = *piVar3 + -1;\n                    uVar1 = uVar2;\n                    goto code_r0x00408c70;\n                }\n                fcn.00406e00();\n            }\n        }\n        iVar4 = iStack4;\n        ppiVar6 = iStack4 + -0x10;\n        iVar5 = fcn.004016b0();\n        param_2 = piStack8;\n        *piStack8 = iVar5 + 0x10;\n        piVar3 = iVar4 + -4;\n        LOCK();\n        iVar4 = *piVar3;\n        *piVar3 = *piVar3 + -1;\n        if (iVar4 == 1 || iVar4 + -1 < 0) {\n            (**(**ppiVar6 + 4))();\n        }\n    }\n    *in_FS_OFFSET = uStack24;\n    return param_2;\ncode_r0x00408c22:\n    if (iStack72 == 8) {\n        piVar3 = fcn.00407ed0(&stack0xffffffb0);\n        fcn.00401b30(*piVar3, *(*piVar3 + -0xc));\n        LOCK();\n        uVar1 = uStack100;\n        iVar5 = *0x408aec;\n        *0x408aec = *0x408aec + -1;\ncode_r0x00408c70:\n        if (iVar5 == 1 || iVar5 + -1 < 0) {\n            (**(**(uVar1 - 0x10) + 4))();\n        }\n    }\n    goto joined_r0x00408bad;\n}\n",
        "token_count": 1394
    },
    "00408d40": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00408d40(int32_t *param_1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t **ppiVar4;\n    int32_t **in_FS_OFFSET;\n    int32_t *piStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack8 = 0x43e66e;\n    piStack12 = *in_FS_OFFSET;\n    uVar3 = *0x45060c ^ &stack0xffffffe8;\n    *in_FS_OFFSET = &piStack12;\n    uStack4 = 2;\n    fcn.00407400(uVar3);\n    uStack4._0_1_ = 1;\n    if (param_1[0xb] != 0) {\n        fcn.00407f80();\n    }\n    param_1[0xb] = 0;\n    ppiVar4 = param_1[1] + -0x10;\n    uStack4 = uStack4._1_3_ << 8;\n    piVar1 = param_1[1] + -4;\n    LOCK();\n    iVar2 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar2 + -1 < 1) {\n        (**(**ppiVar4 + 4))(ppiVar4);\n    }\n    ppiVar4 = *param_1 + -0x10;\n    uStack4 = 0xffffffff;\n    piVar1 = *param_1 + -4;\n    LOCK();\n    iVar2 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar2 == 1 || iVar2 + -1 < 0) {\n        (**(**ppiVar4 + 4))(ppiVar4);\n    }\n    *in_FS_OFFSET = piStack12;\n    return;\n}\n",
        "token_count": 435
    },
    "00408f60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t * __thiscall fcn.00408f60(int32_t param_1, int32_t *param_2, int32_t param_3)\n\n{\n    int32_t iVar1;\n    int32_t **ppiVar2;\n    uint32_t *puVar3;\n    char cVar4;\n    int32_t iVar5;\n    uint *puVar6;\n    char *pcVar7;\n    int32_t iVar8;\n    char *pcVar9;\n    uint32_t uVar10;\n    int32_t iVar11;\n    uint32_t uVar12;\n    int32_t *piVar13;\n    int32_t *unaff_EBX;\n    int32_t *piVar14;\n    int32_t *piVar15;\n    int32_t *in_FS_OFFSET;\n    int32_t *unaff_retaddr;\n    char *pcStack100;\n    uint32_t uStack96;\n    int32_t iStack76;\n    int32_t *piStack68;\n    int32_t iStack64;\n    int32_t iStack60;\n    int32_t iStack48;\n    uint32_t uStack44;\n    int32_t iStack40;\n    int32_t iStack36;\n    uchar *puStack32;\n    int32_t iStack28;\n    int32_t iStack24;\n    int32_t iStack20;\n    int32_t iStack16;\n    int32_t iStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x43e6f8;\n    iStack12 = *in_FS_OFFSET;\n    uStack96 = *0x45060c ^ &stack0xffffffa4;\n    *in_FS_OFFSET = &stack0xfffffff4;\n    uVar10 = param_2 & 0xffff;\n    uStack44 = *(*(*(param_1 + 0x30) + (param_2 >> 0x10) * 4) + 0xc + uVar10 * 0x20) & 0xffff;\n    *(param_3 + 8) = 0;\n    pcStack100 = 0x408fd5;\n    iStack36 = param_1;\n    fcn.00401600();\n    iStack20 = 0;\n    iStack24 = 0;\n    pcStack100 = 0x6;\n    uStack4 = 0;\n    iStack16 = 0;\n    fcn.00408df0();\n    iStack76 = 0;\n    piVar14 = param_2;\ncode_r0x00409004:\n    do {\n        while( true ) {\n            while( true ) {\n                iStack64 = iStack76;\n                iVar8 = iStack28 + iStack20 * 0x14;\n                iVar5 = fcn.004081c0(param_2, iVar8);\n                if (iVar5 != 1) break;\n                piVar14 = *(param_1 + 0x18);\n                if (piVar14 == NULL) {\n                    if (*(param_1 + 0x14) == *(param_1 + 0x34)) {\n                        fcn.00407100(0);\n                    }\n                    piVar14 = *(param_1 + 0x14);\n                    *(param_1 + 0x14) = piVar14 + 1;\n                }\n                else {\n                    *(param_1 + 0x18) =\n                         *(*(*(param_1 + 0x30) + (piVar14 >> 0x10) * 4) + 0x18 + (piVar14 & 0xffff) * 0x20);\n                }\n                if (piStack68 == NULL) {\n                    piStack68 = piVar14;\n                }\n                puVar6 = (piVar14 & 0xffff) * 0x20 + *(*(param_1 + 0x30) + (piVar14 >> 0x10) * 4);\n                puVar6[4] = unaff_retaddr;\n                puVar6[6] = 0;\n                iVar5 = *(param_1 + 0x30);\n                ppiVar2 = *(iVar5 + (unaff_retaddr >> 0x10) * 4) + 0x14 + (unaff_retaddr & 0xffff) * 0x20;\n                piVar15 = *ppiVar2;\n                if (piVar15 == NULL) {\n                    *ppiVar2 = piVar14;\n                    puVar6[7] = piVar14;\n                    puVar6[3] = 0x80000;\n                }\n                else {\n                    iVar11 = (piVar15 & 0xffff) * 0x20;\n                    iVar1 = (piVar15 >> 0x10) * 4;\n                    uVar12 = *(iVar11 + 0x1c + *(iVar5 + iVar1));\n                    *(*(iVar5 + (uVar12 >> 0x10) * 4) + 0x18 + (uVar12 & 0xffff) * 0x20) = piVar14;\n                    puVar6[7] = uVar12;\n                    *(*(*(param_1 + 0x30) + iVar1) + 0x1c + iVar11) = piVar14;\n                    puVar6[3] = 0;\n                }\n                puVar6[3] = iStack76 + iStack48 | puVar6[3] & 0xffff0000;\n                puVar6[5] = 0;\n                *puVar6 = *(iVar8 + 4);\n                uVar12 = *(iVar8 + 8) + (puVar6[2] & 0xffd00000);\n                puVar6[2] = uVar12;\n                if ((*(iVar8 + 0xc) & 0x10000) == 0) {\n                    iStack76 = iStack76 + 1;\n                    iStack20 = iStack20 + 1;\n                    unaff_retaddr = piVar14;\n                    unaff_EBX = piVar14;\n                    if (iStack20 == iStack24) {\n                        fcn.00408df0(iStack24 * 2 + 6);\n                        unaff_EBX = piVar14;\n                    }\n                }\n                else {\n                    puVar6[2] = uVar12 & 0x2fffff;\n                    puVar6[1] = *(iVar8 + 8);\n                    piVar14 = unaff_retaddr;\n                    unaff_EBX = unaff_retaddr;\n                }\n            }\n            if (iVar5 == 0) break;\n            if (iVar5 != -1) goto code_r0x0040957a;\n            puVar3 = *(*(param_1 + 0x30) + uVar10 * 4) + 0xc + iStack60 * 0x20;\n            *puVar3 = *puVar3 | 0x800000;\n            puVar3 = *(*(param_1 + 0x30) + (piVar14 >> 0x10) * 4) + 0xc + (piVar14 & 0xffff) * 0x20;\n            *puVar3 = *puVar3 | 0x200000;\n            if (*(*(param_1 + 4) + -0xc) == 0) {\n                pcStack100 = iVar8 + 0x10;\n                fcn.00402100();\n            }\n        }\n        if (iStack76 != 0) {\n            iVar1 = iStack28 + -4;\n            iVar11 = iStack76 * 0x14;\n            piVar15 = piVar14;\n            do {\n                puStack32 = &stack0xffffff9c;\n                pcStack100 = *(iVar1 + iVar11);\n                cVar4 = fcn.00407380();\n                if (cVar4 != '\\0') {\n                    if (iStack76 != 0) {\n                        piVar15 = (piVar15 & 0xffff) * 0x20 + *(*(param_1 + 0x30) + (piVar15 >> 0x10) * 4);\n                        piVar15[1] = (*(iVar8 + 4) - *piVar15) + *(iVar8 + 8);\n                        piVar15[2] = (piVar15[2] & 0x2fffffU) + *(iVar8 + 8) * 0x400000;\n                        goto code_r0x00409301;\n                    }\n                    break;\n                }\n                piStack68 = piStack68 + -5;\n                iStack76 = iStack76 + -1;\n                piVar15 = *(*(*(param_1 + 0x30) + (piVar15 >> 0x10) * 4) + 0x10 + (piVar15 & 0xffff) * 0x20);\n            } while (iStack76 != 0);\n        }\n        puVar3 = *(*(param_1 + 0x30) + uVar10 * 4) + 0xc + iStack60 * 0x20;\n        *puVar3 = *puVar3 | 0x800000;\n        puVar3 = *(*(param_1 + 0x30) + (piVar14 >> 0x10) * 4) + 0xc + (piVar14 & 0xffff) * 0x20;\n        *puVar3 = *puVar3 | 0x200000;\n        if (*(*(param_1 + 4) + -0xc) == 0) {\n            pcVar7 = fcn.0041930b((param_2[1] - *param_2) + 0x65);\n            puVar6 = fcn.00408e90(&stack0xffffffd4, param_2);\n            fcn.0042b7a5(pcVar7, \"No start tag for end tag \\'%s\\' at offset %d\", *puVar6);\n            piVar15 = uStack44 - 4;\n            LOCK();\n            iVar8 = *piVar15;\n            *piVar15 = *piVar15 + -1;\n            if (iVar8 == 1 || iVar8 + -1 < 0) {\n                (**(**(uStack44 - 0x10) + 4))(uStack44 - 0x10);\n            }\n            if (pcVar7 == NULL) {\n                iVar8 = 0;\n            }\n            else {\n                pcVar9 = pcVar7;\n                do {\n                    cVar4 = *pcVar9;\n                    pcVar9 = pcVar9 + 1;\n                } while (cVar4 != '\\0');\n                iVar8 = pcVar9 - (pcVar7 + 1);\n            }\n            fcn.00401aa0(pcVar7, iVar8);\n            fcn.00419316(pcVar7);\n        }\ncode_r0x00409301:\n    } while (iStack64 == 0);\n    goto code_r0x00409310;\ncode_r0x0040957a:\n    iStack64 = 0;\n    if (iVar5 == -2) {\ncode_r0x00409310:\n        if (iStack64 < iStack76) {\n            puVar3 = *(*(param_1 + 0x30) + uVar10 * 4) + 0xc + iStack60 * 0x20;\n            *puVar3 = *puVar3 | 0x800000;\n            iStack64 = iStack76 - iStack64;\n            iStack76 = iStack76 - iStack64;\n            do {\n                iVar8 = (piVar14 & 0xffff) * 0x20 + *(*(param_1 + 0x30) + (piVar14 >> 0x10) * 4);\n                *(iVar8 + 8) = *(iVar8 + 8) & 0x2fffff;\n                *(iVar8 + 0xc) = *(iVar8 + 0xc) | 0x100000;\n                piVar14 = *(iVar8 + 0x10);\n                piVar15 = *(iVar8 + 0x14);\n                *(iVar8 + 0x14) = 0;\n                *(iVar8 + 4) = *(iVar8 + 8) & 0x2fffff;\n                if ((*(iVar8 + 0xc) & 0x200000) != 0) {\n                    *(iVar8 + 0xc) = *(iVar8 + 0xc) ^ 0x200000;\n                    puVar3 = *(*(param_1 + 0x30) + (piVar14 >> 0x10) * 4) + 0xc + (piVar14 & 0xffff) * 0x20;\n                    *puVar3 = *puVar3 | 0x200000;\n                }\n                if (piVar15 != NULL) {\n                    iVar8 = *(param_1 + 0x30);\n                    do {\n                        piVar13 = piVar15;\n                        iVar1 = (piVar13 >> 0x10) * 4;\n                        iVar11 = (piVar13 & 0xffff) * 0x20;\n                        *(iVar11 + 0x10 + *(iVar1 + iVar8)) = piVar14;\n                        *(iVar11 + 0x1c + *(*(param_1 + 0x30) + iVar1)) = unaff_EBX;\n                        *(*(*(param_1 + 0x30) + (unaff_EBX >> 0x10) * 4) + 0x18 + (unaff_EBX & 0xffff) * 0x20) = piVar13\n                        ;\n                        iVar8 = *(iStack40 + 0x30);\n                        piVar15 = *(*(iVar1 + iVar8) + 0x18 + iVar11);\n                        param_1 = iStack40;\n                        unaff_EBX = piVar13;\n                    } while (piVar15 != NULL);\n                }\n                iStack20 = iStack20 + -1;\n                if (*(*(param_1 + 4) + -0xc) == 0) {\n                    if (iVar5 == 0) {\n                        pcVar7 = fcn.0041930b((param_2[1] - *param_2) + 0x65 +\n                                              *(*(iStack28 + 0x10 + iStack20 * 0x14) + -0xc));\n                        puVar6 = fcn.00408e90(&stack0xffffffdc, param_2);\n                        fcn.0042b7a5(pcVar7, \"End tag \\'%s\\' at offset %d does not match start tag \\'%s\\' at offset %d\"\n                                     , *puVar6);\n                        piVar15 = iStack36 + -4;\n                        LOCK();\n                        iVar8 = *piVar15;\n                        *piVar15 = *piVar15 + -1;\n                        if (iVar8 == 1 || iVar8 + -1 < 0) {\n                            (**(**(iStack36 + -0x10) + 4))(iStack36 + -0x10);\n                        }\n                        pcStack100 = pcVar7;\n                        if (pcVar7 == NULL) {\n                            uStack96 = 0;\n                            fcn.00401aa0();\n                        }\n                        else {\n                            pcVar9 = pcVar7;\n                            do {\n                                cVar4 = *pcVar9;\n                                pcVar9 = pcVar9 + 1;\n                            } while (cVar4 != '\\0');\n                            uStack96 = pcVar9 - (pcVar7 + 1);\n                            fcn.00401aa0();\n                        }\n                    }\n                    else {\n                        iVar8 = iStack28 + iStack20 * 0x14;\n                        pcVar7 = fcn.0041930b(*(*(iStack28 + 0x10 + iStack20 * 0x14) + -0xc) + 100);\n                        fcn.0042b7a5(pcVar7, 0x4420b0, *(iVar8 + 0x10));\n                        if (pcVar7 == NULL) {\n                            iVar8 = 0;\n                        }\n                        else {\n                            pcVar9 = pcVar7;\n                            do {\n                                cVar4 = *pcVar9;\n                                pcVar9 = pcVar9 + 1;\n                            } while (cVar4 != '\\0');\n                            iVar8 = pcVar9 - (pcVar7 + 1);\n                        }\n                        fcn.00401aa0(pcVar7, iVar8);\n                    }\n                    fcn.00419316(pcVar7);\n                }\n                iStack64 = iStack64 + -1;\n                unaff_EBX = piVar14;\n            } while (iStack64 != 0);\n        }\n        if (iVar5 == -2) {\n            uStack8 = 0xffffffff;\n            if (iStack28 != 0) {\n                fcn.0042a415(iStack28, 0x14, *(iStack28 + -4), fcn.00406e00);\n                fcn.00419316(iStack28 + -4);\n            }\n            *in_FS_OFFSET = iStack16;\n            return piStack68;\n        }\n        piVar14 = *(*(*(param_1 + 0x30) + (piVar14 >> 0x10) * 4) + 0x10 + (piVar14 & 0xffff) * 0x20);\n        iStack20 = iStack20 + -1;\n        iStack76 = iStack76 + -1;\n        unaff_retaddr = piVar14;\n        unaff_EBX = piVar14;\n    }\n    goto code_r0x00409004;\n}\n",
        "token_count": 3902
    },
    "0040a260": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0040a260(uchar *param_1, uchar *param_2, int32_t param_3, int32_t param_4)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    code *pcVar3;\n    code *pcVar4;\n    int32_t *piVar5;\n    uint *puVar6;\n    int32_t iVar7;\n    int32_t *in_FS_OFFSET;\n    uchar *puStack712;\n    uint uStack708;\n    uint uStack704;\n    uint uStack700;\n    uint uVar8;\n    uint arg_8h;\n    uint uStack692;\n    int32_t iStack688;\n    uchar *puStack684;\n    uchar *puStack680;\n    char *pcStack676;\n    uchar *puStack672;\n    uchar *puStack668;\n    uint uStack636;\n    uint uStack632;\n    uint uStack628;\n    uint uStack624;\n    int32_t iStack620;\n    uchar auStack604 [16];\n    uint uStack588;\n    uint uStack584;\n    uint uStack580;\n    uint uStack544;\n    ushort uStack540;\n    ushort uStack538;\n    uint uStack536;\n    uchar auStack524 [452];\n    int32_t iStack72;\n    uint uStack64;\n    int32_t iStack44;\n    uint32_t uStack16;\n    int32_t iStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x43e76b;\n    iStack12 = *in_FS_OFFSET;\n    uStack16 = *0x45060c ^ &stack0xfffffd84;\n    *in_FS_OFFSET = &stack0xfffffff4;\n    piVar5 = fcn.0041a118();\n    if (piVar5 == NULL) {\n        piVar5 = fcn.00401090();\n    }\n    iStack620 = (**(*piVar5 + 0xc))();\n    iStack620 = iStack620 + 0x10;\n    uStack8 = 0;\n    puStack668 = 0x40a2ea;\n    puVar6 = fcn.004192dc(4);\n    puStack668 = 0x44;\n    pcStack676 = &stack0xfffffdb4;\n    puStack672 = NULL;\n    *puVar6 = 0;\n    puStack680 = 0x40a2fd;\n    fcn.00429510();\n    pcVar1 = _sym.imp.KERNEL32.dll_lstrlenA;\n    uStack636 = 0;\n    uStack632 = 0;\n    uStack628 = 0;\n    uStack624 = 0;\n    uStack588 = 0x44;\n    uStack584 = 0;\n    uStack536 = 0;\n    uStack538 = 0;\n    uStack580 = 0;\n    uStack544 = 1;\n    if (param_4 == 0) {\n        uStack540 = 5;\n    }\n    else if (param_4 == 1) {\n        uStack540 = 6;\n    }\n    else if (param_4 == 2) {\n        uStack540 = 3;\n    }\n    puStack668 = 0x40a375;\n    iVar7 = (*_sym.imp.KERNEL32.dll_lstrlenA)();\n    if (iVar7 == 0) {\n        puStack668 = param_1;\n        puStack672 = &stack0xfffffdf4;\n        pcStack676 = 0x40a388;\n        (*_sym.imp.KERNEL32.dll_lstrcpyA)();\n    }\n    else {\n        puStack668 = param_2;\n        puStack672 = param_1;\n        puStack680 = &stack0xfffffdf4;\n        pcStack676 = \"\\\"%s\\\" %s\";\n        puStack684 = 0x40a39f;\n        (*_sym.imp.USER32.dll_wsprintfA)();\n    }\n    pcStack676 = param_3;\n    puStack680 = 0x40a3a5;\n    iVar7 = (*pcVar1)();\n    puStack680 = &stack0xfffffd74;\n    puStack684 = &stack0xfffffda4;\n    puStack712 = &stack0xfffffde8;\n    if (iVar7 == 0) {\n        iStack688 = 0;\n    }\n    else {\n        iStack688 = param_3;\n    }\n    uStack692 = 0;\n    uVar8 = 0x20;\n    uStack700 = 0;\n    uStack704 = 0;\n    uStack708 = 0;\n    iVar7 = (*_sym.imp.KERNEL32.dll_CreateProcessA)(0);\n    if ((iVar7 != 0) || (iVar7 = (*_sym.imp.KERNEL32.dll_GetLastError)(),  arg_8h = uVar8,  iVar7 == 0)) {\n        pcVar1 = _sym.imp.USER32.dll_MsgWaitForMultipleObjects;\n        if (iStack44 != 0) {\n            iVar7 = (*_sym.imp.USER32.dll_MsgWaitForMultipleObjects)(1, &stack0xfffffd4c, 0, 0xffffffff, 0x4ff);\n            pcVar4 = _sym.imp.USER32.dll_TranslateMessage;\n            pcVar3 = _sym.imp.USER32.dll_DispatchMessageA;\n            pcVar2 = _sym.imp.USER32.dll_PeekMessageA;\n            while (iVar7 == 1) {\n                iVar7 = (*pcVar2)(&stack0xfffffd60, 0, 0, 0, 1);\n                while (0 < iVar7) {\n                    if (((iStack688 != 0x200) && (iStack688 != 0x201)) && (iStack688 != 0x202)) {\n                        (*pcVar4)(&stack0xfffffd4c);\n                        (*pcVar3)(&stack0xfffffd48);\n                    }\n                    iVar7 = (*pcVar2)(&stack0xfffffd4c, 0, 0, 0, 1);\n                }\n                iVar7 = (*pcVar1)(1, &stack0xfffffd38, 0, 0xffffffff, 0x4ff);\n            }\n        }\n        arg_8h = uVar8;\n        (*_sym.imp.KERNEL32.dll_GetExitCodeProcess)(uStack692, uVar8);\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(uStack700);\n    }\n    fcn.00419316(uVar8);\n    uStack64 = 0xffffffff;\n    piVar5 = pcStack676 + -4;\n    LOCK();\n    iVar7 = *piVar5;\n    *piVar5 = *piVar5 + -1;\n    if (iVar7 == 1 || iVar7 + -1 < 0) {\n        (**(**(pcStack676 + -0x10) + 4))(pcStack676 + -0x10);\n    }\n    *in_FS_OFFSET = iStack72;\n    uStack700 = 0x40a50b;\n    fcn.004294b3(arg_8h);\n    return;\n}\n",
        "token_count": 1567
    },
    "0040aac0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0040aac0(int32_t param_1)\n\n{\n    char *pcVar1;\n    int32_t iVar2;\n    char cVar3;\n    int32_t *piVar4;\n    uint *puVar5;\n    uint uVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    int32_t **ppiVar9;\n    uint uVar10;\n    int32_t **ppiVar11;\n    char *pcVar12;\n    int32_t **ppiVar13;\n    uint32_t uVar14;\n    int32_t *in_FS_OFFSET;\n    uint arg_8h;\n    uint in_stack_fffff830;\n    int32_t **ppiStack1976;\n    uchar *puStack1972;\n    char *pcStack1968;\n    uchar *puStack1964;\n    char *pcStack1960;\n    uint uStack1956;\n    uchar *puStack1952;\n    char *pcStack1948;\n    uint uStack1944;\n    uchar *puStack1940;\n    uint uStack1936;\n    char *pcStack1932;\n    int32_t **ppiStack1928;\n    uint uStack1924;\n    uchar *puStack1920;\n    uint uStack1916;\n    uint32_t uStack1912;\n    int32_t iStack1892;\n    uint uStack1740;\n    int32_t iStack1724;\n    uint uStack1720;\n    uint32_t uStack1708;\n    uint uStack1704;\n    uint uStack1700;\n    int32_t iStack1676;\n    int32_t iStack1672;\n    int32_t iStack1668;\n    int32_t iStack1664;\n    int32_t iStack1660;\n    int32_t iStack1656;\n    int32_t iStack1652;\n    int32_t iStack1648;\n    uchar *puStack1644;\n    uint32_t uStack1640;\n    int32_t **ppiStack1636;\n    int32_t iStack1632;\n    uchar *puStack1628;\n    int32_t iStack1624;\n    uint uStack1620;\n    uint uStack1616;\n    uchar auStack1612 [376];\n    int32_t iStack1236;\n    uchar auStack1088 [28];\n    int32_t iStack1060;\n    uint32_t uStack8;\n    \n    uStack1616 = 0xffffffff;\n    uStack1620 = 0x43e9e4;\n    iStack1624 = *in_FS_OFFSET;\n    uStack1912 = *0x45060c ^ &stack0xfffff9b4;\n    puStack1628 = &stack0xfffff888;\n    *in_FS_OFFSET = &stack0xfffff9a8;\n    uStack1916 = 0x40ab09;\n    iStack1660 = param_1;\n    uStack8 = uStack1912;\n    piVar4 = fcn.0041a118();\n    if (piVar4 == NULL) {\n        uStack1916 = 0x80004005;\n        puStack1920 = 0x40ab20;\n        piVar4 = fcn.00401090();\n    }\n    puStack1920 = 0x40ab29;\n    iStack1648 = (**(*piVar4 + 0xc))();\n    iStack1648 = iStack1648 + 0x10;\n    uStack1616 = 0;\n    uStack1740 = 0;\n    if (*(param_1 + 0x10) == 0) {\n        *(param_1 + 0x10) = &stack0xfffff934;\n    }\n    puStack1920 = 0x40ab45;\n    fcn.0041a00a();\n    puStack1920 = 0x40ab4d;\n    fcn.0041d96f();\n    puStack1920 = 0x40ab52;\n    piVar4 = fcn.0041a118();\n    if (piVar4 == NULL) {\n        puStack1920 = 0x80004005;\n        uStack1924 = 0x40ab67;\n        piVar4 = fcn.00401090();\n    }\n    puStack1920 = 0x40ab70;\n    iStack1664 = (**(*piVar4 + 0xc))();\n    iStack1664 = iStack1664 + 0x10;\n    puStack1920 = &stack0xfffff9a0;\n    uStack1616._0_1_ = 1;\n    uStack1924 = 0x40ab85;\n    uStack1924 = fcn.0040a640();\n    uStack1616._0_1_ = 2;\n    ppiStack1928 = 0x40ab92;\n    fcn.00402100();\n    ppiStack1928 = iStack1632 + -0x10;\n    uStack1616._0_1_ = 1;\n    piVar4 = iStack1632 + -4;\n    LOCK();\n    iVar7 = *piVar4;\n    *piVar4 = *piVar4 + -1;\n    if (iVar7 == 1 || iVar7 + -1 < 0) {\n        pcStack1932 = 0x40abb5;\n        (**(**ppiStack1928 + 4))();\n    }\n    ppiStack1928 = 0x40abbd;\n    fcn.0040aa10();\n    uStack1616 = CONCAT31(uStack1616._1_3_, 3);\n    ppiStack1928 = 0x40abc6;\n    piVar4 = fcn.0041a118();\n    if (piVar4 == NULL) {\n        ppiStack1928 = 0x80004005;\n        pcStack1932 = 0x40abdb;\n        piVar4 = fcn.00401090();\n    }\n    ppiStack1928 = 0x40abe4;\n    iStack1656 = (**(*piVar4 + 0xc))();\n    iStack1656 = iStack1656 + 0x10;\n    uStack1616 = CONCAT31(uStack1616._1_3_, 4);\n    ppiStack1928 = 0x40abf3;\n    piVar4 = fcn.0041a118();\n    if (piVar4 == NULL) {\n        ppiStack1928 = 0x80004005;\n        pcStack1932 = 0x40ac08;\n        piVar4 = fcn.00401090();\n    }\n    ppiStack1928 = 0x40ac11;\n    iStack1668 = (**(*piVar4 + 0xc))();\n    iStack1668 = iStack1668 + 0x10;\n    uStack1616 = CONCAT31(uStack1616._1_3_, 5);\n    ppiStack1636 = NULL;\n    ppiStack1928 = 0x40ac23;\n    piVar4 = fcn.0041a118();\n    if (piVar4 == NULL) {\n        ppiStack1928 = 0x80004005;\n        pcStack1932 = 0x40ac38;\n        piVar4 = fcn.00401090();\n    }\n    ppiStack1928 = 0x40ac41;\n    iStack1652 = (**(*piVar4 + 0xc))();\n    iStack1652 = iStack1652 + 0x10;\n    uStack1616 = CONCAT31(uStack1616._1_3_, 6);\n    ppiStack1928 = 0x40ac50;\n    piVar4 = fcn.0041a118();\n    if (piVar4 == NULL) {\n        ppiStack1928 = 0x80004005;\n        pcStack1932 = 0x40ac65;\n        piVar4 = fcn.00401090();\n    }\n    ppiStack1928 = 0x40ac6e;\n    iStack1672 = (**(*piVar4 + 0xc))();\n    iStack1672 = iStack1672 + 0x10;\n    ppiStack1928 = &stack0xfffff980;\n    uStack1616._0_1_ = 7;\n    pcStack1932 = 0x40ac84;\n    cVar3 = fcn.00409920();\n    if (cVar3 != '\\0') {\n        puStack1644 = &stack0xfffff874;\n        pcStack1932 = \"IR_ZCD\";\n        uStack1936 = 0x40aca0;\n        cVar3 = fcn.00408000();\n        if (cVar3 != '\\0') {\n            puStack1644 = &stack0xfffff870;\n            uStack1708 = iStack1724 != 0;\n            uStack1720 = 0;\n            uStack1704 = 0;\n            uStack1700 = 0;\n            uStack1936 = 0x442248;\n            puStack1940 = 0x40acd0;\n            cVar3 = fcn.00408070();\n            if (cVar3 != '\\0') {\n                puStack1940 = &stack0xfffff9a0;\n                uStack1944 = 0x40ace0;\n                uStack1944 = fcn.0040a210();\n                uStack1616._0_1_ = 8;\n                pcStack1948 = 0x40aced;\n                fcn.00402100();\n                pcStack1948 = iStack1632 + -0x10;\n                uStack1616._0_1_ = 7;\n                piVar4 = iStack1632 + -4;\n                LOCK();\n                iVar7 = *piVar4;\n                *piVar4 = *piVar4 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    puStack1952 = 0x40ad10;\n                    (**(**pcStack1948 + 4))();\n                }\n            }\n            uStack1720 = 0;\n            uStack1708 = iStack1724 != 0;\n            uStack1704 = 0;\n            uStack1700 = 0;\n            puStack1644 = &stack0xfffff864;\n            pcStack1948 = \"Title\";\n            puStack1952 = 0x40ad38;\n            cVar3 = fcn.00408070();\n            if (cVar3 != '\\0') {\n                puStack1952 = &stack0xfffff9a0;\n                uStack1956 = 0x40ad48;\n                uStack1956 = fcn.0040a210();\n                uStack1616._0_1_ = 9;\n                pcStack1960 = 0x40ad55;\n                fcn.00402100();\n                pcStack1960 = iStack1632 + -0x10;\n                uStack1616._0_1_ = 7;\n                piVar4 = iStack1632 + -4;\n                LOCK();\n                iVar7 = *piVar4;\n                *piVar4 = *piVar4 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    puStack1964 = 0x40ad78;\n                    (**(**pcStack1960 + 4))();\n                }\n            }\n            uStack1720 = 0;\n            uStack1708 = iStack1724 != 0;\n            uStack1704 = 0;\n            uStack1700 = 0;\n            puStack1644 = &stack0xfffff858;\n            pcStack1960 = \"Prog\";\n            puStack1964 = 0x40ada0;\n            cVar3 = fcn.00408070();\n            if (cVar3 != '\\0') {\n                puStack1964 = &stack0xfffff9a0;\n                pcStack1968 = 0x40adb0;\n                puVar5 = fcn.0040a210();\n                pcStack1968 = *puVar5;\n                puStack1972 = 0x40adb8;\n                fcn.0042bb11();\n                pcStack1968 = iStack1632 + -0x10;\n                piVar4 = iStack1632 + -4;\n                LOCK();\n                iVar7 = *piVar4;\n                *piVar4 = *piVar4 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    puStack1972 = 0x40adda;\n                    (**(**pcStack1968 + 4))();\n                }\n            }\n            uStack1720 = 0;\n            uStack1708 = iStack1724 != 0;\n            uStack1704 = 0;\n            uStack1700 = 0;\n            puStack1644 = &stack0xfffff850;\n            pcStack1968 = \"UsePW\";\n            puStack1972 = 0x40ae02;\n            cVar3 = fcn.00408070();\n            if (cVar3 != '\\0') {\n                puStack1972 = &stack0xfffff9a0;\n                ppiStack1976 = 0x40ae12;\n                puVar5 = fcn.0040a210();\n                ppiStack1976 = *puVar5;\n                ppiStack1636 = fcn.0042bb11();\n                ppiStack1976 = iStack1632 + -0x10;\n                piVar4 = iStack1632 + -4;\n                LOCK();\n                iVar7 = *piVar4;\n                *piVar4 = *piVar4 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**ppiStack1976 + 4))();\n                }\n            }\n            uStack1720 = 0;\n            uStack1708 = iStack1724 != 0;\n            uStack1704 = 0;\n            uStack1700 = 0;\n            puStack1644 = &stack0xfffff848;\n            ppiStack1976 = 0x44222c;\n            cVar3 = fcn.00408070();\n            if (cVar3 != '\\0') {\n                fcn.00406120();\n                uVar6 = fcn.0040a210(&stack0xfffff9a0);\n                uStack1616._0_1_ = 10;\n                fcn.00402100(uVar6);\n                uStack1616 = CONCAT31(uStack1616._1_3_, 7);\n                piVar4 = iStack1632 + -4;\n                LOCK();\n                iVar7 = *piVar4;\n                *piVar4 = *piVar4 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(iStack1632 + -0x10) + 4))(iStack1632 + -0x10);\n                }\n                uVar6 = *(iStack1652 + -0xc);\n                if ((*(iStack1652 + -8) - 10U | 1U - *(iStack1652 + -4)) < 0) {\n                    fcn.00401660(10);\n                }\n                in_stack_fffff830 = fcn.00406300(&stack0xfffff9a0, iStack1652, uVar6);\n                uStack1616._0_1_ = 0xb;\n                fcn.00402100();\n                uStack1616._0_1_ = 7;\n                piVar4 = iStack1632 + -4;\n                LOCK();\n                iVar7 = *piVar4;\n                *piVar4 = *piVar4 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(iStack1632 + -0x10) + 4))(iStack1632 + -0x10);\n                }\n            }\n        }\n    }\n    if ((*(param_1 + 8) != 0) && (iVar7 = (*_sym.imp.USER32.dll_IsWindow)(*(*(param_1 + 8) + 0x20)),  iVar7 != 0)) {\n        fcn.0041b03c(in_stack_fffff830);\n    }\n    uVar6 = fcn.0040a850(&stack0xfffff9a0);\n    uStack1616._0_1_ = 0xc;\n    fcn.00402100(uVar6);\n    uStack1616._0_1_ = 7;\n    piVar4 = iStack1632 + -4;\n    LOCK();\n    iVar7 = *piVar4;\n    *piVar4 = *piVar4 + -1;\n    if (iVar7 == 1 || iVar7 + -1 < 0) {\n        (**(**(iStack1632 + -0x10) + 4))(iStack1632 + -0x10);\n    }\n    fcn.0040cfc0();\n    uStack1616._0_1_ = 0xd;\n    fcn.00411220();\n    uStack1616._0_1_ = 0xe;\n    fcn.00424857(10);\n    uStack1616._0_1_ = 0xf;\n    fcn.00424857(10);\n    uStack1616 = CONCAT31(uStack1616._1_3_, 0x11);\n    fcn.0040d160(*(param_1 + 0x14), 1, 0);\n    uStack1616._0_1_ = 0x10;\n    uStack1616._1_3_ = 0;\n    if (*(param_1 + 4) != 0) {\n        fcn.0040d630(*(param_1 + 4), 8);\n    }\n    iVar7 = 0;\n    uVar14 = 0;\n    while (((uVar14 & 0xffff) < iStack1236 && (**(param_1 + 0x10) == 0))) {\n        fcn.0040ca70();\n        cVar3 = fcn.00411af0();\n        if (cVar3 == '\\0') {\n            iVar7 = iVar7 + iStack1060;\n        }\n        uVar14 = uVar14 + 1;\n    }\n    if ((*(param_1 + 0xc) != 0) && (iVar8 = (*_sym.imp.USER32.dll_IsWindow)(*(*(param_1 + 0xc) + 0x20)),  iVar8 != 0)) {\n        (*_sym.imp.USER32.dll_SendMessageA)(*(*(param_1 + 0xc) + 0x20), 0x406, 0, iVar7);\n    }\n    uVar14 = 0;\n    while ((uStack1640 = uVar14,  (uVar14 & 0xffff) < iStack1236 && (**(param_1 + 0x10) == 0))) {\n        fcn.0040ca70(&stack0xfffffbc0, uVar14);\n        cVar3 = fcn.00411af0();\n        if (cVar3 == '\\0') {\n            uVar6 = fcn.004118d0(&stack0xfffff9a0);\n            uStack1616._0_1_ = 0x14;\n            fcn.004249a0(uVar6);\n            piVar4 = iStack1632 + -4;\n            LOCK();\n            iVar8 = *piVar4;\n            *piVar4 = *piVar4 + -1;\n            iVar7 = iStack1632;\n        }\n        else {\n            uVar6 = fcn.004118d0(&stack0xfffff974);\n            uStack1616._0_1_ = 0x15;\n            fcn.004249a0(uVar6);\n            piVar4 = iStack1676 + -4;\n            LOCK();\n            iVar8 = *piVar4;\n            *piVar4 = *piVar4 + -1;\n            iVar7 = iStack1676;\n        }\n        uStack1616._0_1_ = 0x10;\n        if (iVar8 == 1 || iVar8 + -1 < 0) {\n            (**(**(iVar7 + -0x10) + 4))(iVar7 + -0x10);\n        }\n        uStack1616 = CONCAT31(uStack1616._1_3_, 0x16);\n        if (ppiStack1636 != NULL) {\n            fcn.0040c6a0(iStack1672);\n        }\n        fcn.0040e370();\n        uStack1616._0_1_ = 0x10;\n        uStack1616._1_3_ = 0;\n        uVar14 = uVar14 + 1;\n        param_1 = iStack1660;\n    }\n    arg_8h = 0;\n    uVar6 = 0;\n    fcn.0040d940(0);\n    if ((*(iStack1656 + -0xc) != 0) && (**(iStack1660 + 0x10) == 0)) {\n        if ((*(iStack1660 + 8) != 0) &&\n           (iVar7 = (*_sym.imp.USER32.dll_IsWindow)(*(*(iStack1660 + 8) + 0x20)),  iVar7 != 0)) {\n            uVar6 = 0;\n            fcn.0041b083(0);\n        }\n        piVar4 = fcn.0041a118();\n        if (piVar4 == NULL) {\n            piVar4 = fcn.00401090(0x80004005);\n        }\n        ppiVar9 = (**(*piVar4 + 0xc))();\n        ppiStack1636 = ppiVar9 + 4;\n        uStack1616._0_1_ = 0x18;\n        uVar10 = fcn.00401d30(&stack0xfffff9a0, &stack0xfffff990, 0x441978);\n        uStack1616._0_1_ = 0x19;\n        piVar4 = fcn.00402000(&stack0xfffff994, uVar10, &stack0xfffff988);\n        iVar7 = *piVar4;\n        ppiVar11 = iVar7 + -0x10;\n        uStack1616._0_1_ = 0x1a;\n        if (ppiVar11 != ppiVar9) {\n            ppiVar13 = ppiVar9 + 3;\n            if ((ppiVar9[3] < 0) || (*ppiVar11 != *ppiVar9)) {\n                fcn.00401aa0(iVar7, *(iVar7 + -0xc));\n            }\n            else {\n                iVar7 = fcn.004016b0(ppiVar11);\n                LOCK();\n                piVar4 = *ppiVar13;\n                *ppiVar13 = *ppiVar13 + -1;\n                if (piVar4 == 0x1 || piVar4 + -1 < 0) {\n                    (**(**ppiVar9 + 4))(ppiVar9);\n                }\n                ppiStack1636 = iVar7 + 0x10;\n            }\n        }\n        ppiVar11 = puStack1644 + -0x10;\n        uStack1616 = CONCAT31(uStack1616._1_3_, 0x19);\n        piVar4 = puStack1644 + -4;\n        LOCK();\n        iVar7 = *piVar4;\n        *piVar4 = *piVar4 + -1;\n        if (iVar7 + -1 < 1) {\n            (**(**ppiVar11 + 4))(ppiVar11);\n        }\n        uStack1616 = CONCAT31(uStack1616._1_3_, 0x18);\n        piVar4 = iStack1632 + -4;\n        LOCK();\n        iVar7 = *piVar4;\n        *piVar4 = *piVar4 + -1;\n        if (iVar7 == 1 || iVar7 + -1 < 0) {\n            (**(**(iStack1632 + -0x10) + 4))(iStack1632 + -0x10);\n        }\n        piVar4 = fcn.0041a118();\n        if (piVar4 == NULL) {\n            piVar4 = fcn.00401090(0x80004005);\n        }\n        iVar7 = (**(*piVar4 + 0xc))();\n        uStack1640 = iVar7 + 0x10;\n        uStack1616 = CONCAT31(uStack1616._1_3_, 0x1b);\n        piVar4 = fcn.0041a118();\n        if (piVar4 == NULL) {\n            piVar4 = fcn.00401090(0x80004005);\n        }\n        iVar7 = (**(*piVar4 + 0xc))();\n        iVar7 = iVar7 + 0x10;\n        iVar8 = 1;\n        uStack1616._0_1_ = 0x1c;\n        iStack1676 = iVar7;\n        if (1 < *0x453ce4) {\n            do {\n                pcVar1 = *(*0x453ce8 + iVar8 * 4);\n                if (pcVar1 == NULL) {\n                    iVar7 = 0;\n                }\n                else {\n                    pcVar12 = pcVar1;\n                    do {\n                        cVar3 = *pcVar12;\n                        pcVar12 = pcVar12 + 1;\n                    } while (cVar3 != '\\0');\n                    iVar7 = pcVar12 - (pcVar1 + 1);\n                }\n                fcn.00401aa0(pcVar1, iVar7);\n                fcn.00401b30(0x4420a8, 1);\n                iVar7 = iStack1676;\n                fcn.00401b30(iStack1676, *(iStack1676 + -0xc));\n                uVar6 = 0x442220;\n                fcn.00401b30();\n                iVar8 = iVar8 + 1;\n            } while (iVar8 < *0x453ce4);\n        }\n        iVar8 = (*_sym.imp.KERNEL32.dll_GetFileAttributesA)(ppiStack1636, uVar6);\n        if (iVar8 != -1) {\n            piVar4 = fcn.0041a118();\n            if (piVar4 == NULL) {\n                piVar4 = fcn.00401090(0x80004005);\n            }\n            iStack1632 = (**(*piVar4 + 0xc))();\n            iStack1632 = iStack1632 + 0x10;\n            uStack1616._0_1_ = 0x1d;\n            fcn.004061c0(&stack0xfffff9a0, \"\\\"SFXSOURCE:%s\\\"\", *(iStack1660 + 0x14));\n            iVar2 = iStack1632;\n            fcn.00401b30(iStack1632, *(iStack1632 + -0xc));\n            arg_8h = 0x4420a4;\n            fcn.004042a0();\n            fcn.00401f60(0x4420a4);\n            iVar8 = fcn.0041a00a();\n            iVar8 = *(iVar8 + 4);\n            uVar6 = fcn.0040a260(ppiStack1636, uStack1640, iStack1648, 1, 0, 0xf);\n            *(iVar8 + 0xac) = uVar6;\n            ppiVar11 = iVar2 + -0x10;\n            uStack1616._0_1_ = 0x1c;\n            piVar4 = iVar2 + -4;\n            LOCK();\n            iVar8 = *piVar4;\n            *piVar4 = *piVar4 + -1;\n            if (iVar8 + -1 < 1) {\n                (**(**ppiVar11 + 4))(ppiVar11);\n            }\n        }\n        uStack1616._0_1_ = 0x1b;\n        piVar4 = iVar7 + -4;\n        LOCK();\n        iVar8 = *piVar4;\n        *piVar4 = *piVar4 + -1;\n        if (iVar8 + -1 < 1) {\n            (**(**(iVar7 + -0x10) + 4))(iVar7 + -0x10);\n        }\n        uStack1616._0_1_ = 0x18;\n        piVar4 = uStack1640 - 4;\n        LOCK();\n        iVar7 = *piVar4;\n        *piVar4 = *piVar4 + -1;\n        if (iVar7 + -1 < 1) {\n            (**(**(uStack1640 - 0x10) + 4))(uStack1640 - 0x10);\n        }\n        uStack1616._0_1_ = 0x10;\n        ppiVar11 = ppiStack1636 + -1;\n        LOCK();\n        piVar4 = *ppiVar11;\n        *ppiVar11 = *ppiVar11 + -1;\n        if (piVar4 == 0x1 || piVar4 + -1 < 0) {\n            (**(*ppiStack1636[-4] + 4))(ppiStack1636 + -4);\n        }\n    }\n    fcn.00404060();\n    uStack1616 = CONCAT31(uStack1616._1_3_, 0x1e);\n    piVar4 = fcn.0041a118();\n    if (piVar4 == NULL) {\n        piVar4 = fcn.00401090(0x80004005);\n    }\n    ppiVar13 = (**(*piVar4 + 0xc))();\n    uStack1616._0_1_ = 0x1f;\n    ppiStack1636 = ppiVar13 + 4;\n    piVar4 = fcn.00401d30(&stack0xfffff994, &stack0xfffff990, \"\\\\*.*\");\n    iVar7 = *piVar4;\n    ppiVar11 = iVar7 + -0x10;\n    uStack1616._0_1_ = 0x20;\n    ppiVar9 = ppiVar13 + 4;\n    if (ppiVar11 != ppiVar13) {\n        if ((ppiVar13[3] < 0) || (*ppiVar11 != *ppiVar13)) {\n            fcn.00401aa0(iVar7, *(iVar7 + -0xc));\n            ppiVar9 = ppiStack1636;\n        }\n        else {\n            piVar4 = (**(**ppiVar11 + 0x10))();\n            if ((*(iVar7 + -4) < 0) || (piVar4 != *ppiVar11)) {\n                ppiVar11 = (***piVar4)(*(iVar7 + -0xc), 1);\n                if (ppiVar11 == NULL) {\n                    fcn.00401260();\n                }\n                ppiVar11[1] = *(iVar7 + -0xc);\n                iVar8 = *(iVar7 + -0xc) + 1;\n                fcn.00428c08(ppiVar11 + 4, iVar8, iVar7, iVar8);\n            }\n            else {\n                LOCK();\n                *(iVar7 + -4) = *(iVar7 + -4) + 1;\n            }\n            ppiVar9 = ppiVar13 + 3;\n            LOCK();\n            piVar4 = *ppiVar9;\n            *ppiVar9 = *ppiVar9 + -1;\n            if (piVar4 + -1 < 1) {\n                (**(**ppiVar13 + 4))(ppiVar13);\n            }\n            ppiStack1636 = ppiVar11 + 4;\n            ppiVar9 = ppiStack1636;\n        }\n    }\n    ppiVar11 = puStack1644 + -0x10;\n    uStack1616 = CONCAT31(uStack1616._1_3_, 0x1f);\n    piVar4 = puStack1644 + -4;\n    LOCK();\n    iVar7 = *piVar4;\n    *piVar4 = *piVar4 + -1;\n    if (iVar7 == 1 || iVar7 + -1 < 0) {\n        (**(**ppiVar11 + 4))(ppiVar11);\n    }\n    ppiVar11 = ppiVar9 + -4;\n    ppiVar13 = iStack1892 + -0x10;\n    if (ppiVar11 != ppiVar13) {\n        if ((*(iStack1892 + -4) < 0) || (*ppiVar11 != *ppiVar13)) {\n            fcn.00401aa0(ppiVar9, ppiVar9[-3]);\n        }\n        else {\n            piVar4 = (**(**ppiVar11 + 0x10))();\n            if ((ppiVar9[-1] < 0) || (piVar4 != *ppiVar11)) {\n                iVar7 = (***piVar4)(ppiVar9[-3], 1);\n                if (iVar7 == 0) {\n                    fcn.00401260();\n                }\n                *(iVar7 + 4) = ppiVar9[-3];\n                fcn.00428c08(iVar7 + 0x10, ppiVar9[-3] + 1, ppiVar9, ppiVar9[-3] + 1);\n            }\n            else {\n                LOCK();\n                ppiVar9[-1] = ppiVar9[-1] + 1;\n            }\n            piVar4 = iStack1892 + -4;\n            LOCK();\n            iVar7 = *piVar4;\n            *piVar4 = *piVar4 + -1;\n            if (iVar7 == 1 || iVar7 + -1 < 0) {\n                (**(**ppiVar13 + 4))(ppiVar13);\n            }\n        }\n    }\n    fcn.00405fa0(1);\n    (*_sym.imp.KERNEL32.dll_RemoveDirectoryA)(iStack1648);\n    fcn.0041a00a();\n    fcn.0041d984();\n    iVar7 = iStack1660;\n    if (**(iStack1660 + 0x10) != 0) {\n        uVar6 = 0;\n        if ((*(iStack1660 + 8) != 0) &&\n           (iVar8 = (*_sym.imp.USER32.dll_IsWindow)(*(*(iStack1660 + 8) + 0x20)),  iVar8 != 0)) {\n            uVar6 = *(*(iVar7 + 8) + 0x20);\n        }\n        (*_sym.imp.USER32.dll_MessageBoxA)(uVar6, \"Extraction Cancelled\", \"Status\", 0x30);\n    }\n    (*_sym.imp.USER32.dll_PostQuitMessage)(0);\n    uStack1616._0_1_ = 0x1e;\n    ppiVar9 = ppiVar9 + -1;\n    LOCK();\n    piVar4 = *ppiVar9;\n    *ppiVar9 = *ppiVar9 + -1;\n    if (piVar4 == 0x1 || piVar4 + -1 < 0) {\n        (**(**ppiVar11 + 4))(ppiVar11);\n    }\n    uStack1616._0_1_ = 0x10;\n    fcn.00404150();\n    uStack1616._0_1_ = 0xf;\n    fcn.0042496e();\n    uStack1616._0_1_ = 0xe;\n    fcn.0042496e();\n    uStack1616._0_1_ = 0xd;\n    fcn.004112b0();\n    uStack1616._0_1_ = 7;\n    fcn.0040c850();\n    uStack1616._0_1_ = 6;\n    piVar4 = iStack1672 + -4;\n    LOCK();\n    iVar7 = *piVar4;\n    *piVar4 = *piVar4 + -1;\n    if (iVar7 + -1 < 1) {\n        (**(**(iStack1672 + -0x10) + 4))(iStack1672 + -0x10);\n    }\n    uStack1616._0_1_ = 5;\n    piVar4 = iStack1652 + -4;\n    LOCK();\n    iVar7 = *piVar4;\n    *piVar4 = *piVar4 + -1;\n    if (iVar7 + -1 < 1) {\n        (**(**(iStack1652 + -0x10) + 4))(iStack1652 + -0x10);\n    }\n    uStack1616._0_1_ = 4;\n    piVar4 = iStack1668 + -4;\n    LOCK();\n    iVar7 = *piVar4;\n    *piVar4 = *piVar4 + -1;\n    if (iVar7 + -1 < 1) {\n        (**(**(iStack1668 + -0x10) + 4))(iStack1668 + -0x10);\n    }\n    uStack1616._0_1_ = 3;\n    piVar4 = iStack1656 + -4;\n    LOCK();\n    iVar7 = *piVar4;\n    *piVar4 = *piVar4 + -1;\n    if (iVar7 == 1 || iVar7 + -1 < 0) {\n        (**(**(iStack1656 + -0x10) + 4))(iStack1656 + -0x10);\n    }\n    uStack1616._0_1_ = 1;\n    fcn.00408d40();\n    uStack1616 = uStack1616._1_3_ << 8;\n    piVar4 = iStack1664 + -4;\n    LOCK();\n    iVar7 = *piVar4;\n    *piVar4 = *piVar4 + -1;\n    if (iVar7 + -1 < 1) {\n        (**(**(iStack1664 + -0x10) + 4))(iStack1664 + -0x10);\n    }\n    uStack1616 = 0xffffffff;\n    piVar4 = iStack1648 + -4;\n    LOCK();\n    iVar7 = *piVar4;\n    *piVar4 = *piVar4 + -1;\n    if (iVar7 == 1 || iVar7 + -1 < 0) {\n        (**(**(iStack1648 + -0x10) + 4))(iStack1648 + -0x10);\n    }\n    *in_FS_OFFSET = iStack1624;\n    fcn.004294b3(arg_8h);\n    return;\n}\n",
        "token_count": 8583
    },
    "0040c080": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0040c080(int32_t param_1, uint32_t param_2, int32_t param_3)\n\n{\n    int32_t iVar1;\n    \n    if (*(param_1 + 4) != 0) {\n        fcn.00419316(*(param_1 + 4));\n        *(param_1 + 4) = 0;\n    }\n    if (param_3 != 0) {\n        iVar1 = fcn.0041930b(-(param_2 * 4 >> 0x20 != 0) | param_2 * 4);\n        *(param_1 + 4) = iVar1;\n        if (iVar1 == 0) {\n            iVar1 = fcn.0041944d();\n        }\n        fcn.00429510(iVar1, 0, param_2 * 4);\n    }\n    *(param_1 + 8) = param_2;\n    return;\n}\n",
        "token_count": 211
    },
    "0040c170": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nbool __thiscall fcn.0040c170(int32_t param_1, char param_2)\n\n{\n    char cVar1;\n    \n    if (param_2 != '\\0') {\n        return *(param_1 + 0xd4) == -1;\n    }\n    if (*(param_1 + 0xa0) != 0) {\n        cVar1 = (**(**(param_1 + 0xa0) + 0x30))();\n        if (cVar1 == '\\0') {\n            return false;\n        }\n    }\n    return true;\n}\n",
        "token_count": 126
    },
    "0040c6a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040c6a0(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t unaff_retaddr;\n    \n    if (*(param_1 + 0x15c) != '\\0') {\n        return 0;\n    }\n    fcn.0040c170(1);\n    if (unaff_retaddr == 0) {\n        fcn.0040e820();\n        return 1;\n    }\n    iVar1 = fcn.0040c2f0(unaff_retaddr, param_1 + 0x18c);\n    if (iVar1 != -1) {\n        iVar2 = 0;\n        if (iVar1 < 1) {\n            return 1;\n        }\n        while ('\\0' < *(*(param_1 + 400) + iVar2)) {\n            iVar2 = iVar2 + 1;\n            if (iVar1 <= iVar2) {\n                return 1;\n            }\n        }\n        fcn.0040e820();\n    }\n    return 0;\n}\n",
        "token_count": 237
    },
    "0040c720": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040c720(int32_t param_1)\n\n{\n    uint *puVar1;\n    uint *puVar2;\n    code *pcVar3;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    \n    if (*(param_1 + 0x178) != 0) {\n        puVar2 = *(param_1 + 0x170);\n        while (puVar2 != NULL) {\n            if (puVar2 == NULL) {\n                fcn.0041944d();\n                pcVar3 = swi(3);\n                (*pcVar3)();\n                return;\n            }\n            puVar1 = puVar2 + 2;\n            puVar2 = *puVar2;\n            fcn.00419316(*puVar1);\n        }\n    }\n    *(param_1 + 0x178) = 0;\n    *(param_1 + 0x17c) = 0;\n    *(param_1 + 0x174) = 0;\n    *(param_1 + 0x170) = 0;\n    fcn.0042548a(unaff_EDI, unaff_ESI);\n    *(param_1 + 0x180) = 0;\n    return;\n}\n",
        "token_count": 273
    },
    "0040c7a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040c7a0(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    uint in_stack_fffffff8;\n    \n    if (*(param_1 + 0x10) == 0) {\n        in_stack_fffffff8 = 0x10;\n        iVar3 = fcn.00425457(param_1 + 0x14, *(param_1 + 0x18), 0x10);\n        iVar1 = *(param_1 + 0x18);\n        iVar3 = iVar3 + -0xc + iVar1 * 0x10;\n        while (iVar1 = iVar1 + -1,  -1 < iVar1) {\n            *(iVar3 + 8) = *(param_1 + 0x10);\n            *(param_1 + 0x10) = iVar3;\n            iVar3 = iVar3 + -0x10;\n        }\n    }\n    puVar4 = *(param_1 + 0x10);\n    if (puVar4 == NULL) {\n        puVar4 = fcn.0041944d();\n    }\n    *puVar4 = 0;\n    puVar4[1] = 0;\n    puVar4[3] = 0;\n    puVar4[2] = puVar4[2];\n    uVar2 = *(*(param_1 + 0x10) + 8);\n    *(param_1 + 0xc) = *(param_1 + 0xc) + 1;\n    *(param_1 + 0x10) = uVar2;\n    *puVar4 = in_stack_fffffff8;\n    return;\n}\n",
        "token_count": 384
    },
    "0040c950": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0040c950(int32_t param_1, int32_t param_2)\n\n{\n    code *pcVar1;\n    char cVar2;\n    uint uVar3;\n    uint32_t uVar4;\n    \n    fcn.0040e820();\n    *(param_1 + 0x15c) = 0;\n    fcn.0040ea20();\n    uVar3 = fcn.00412100();\n    *(param_1 + 0x168) = uVar3;\n    fcn.00401600();\n    if ((param_2 == 0) || (param_2 == 1)) {\n        fcn.00410240();\n        cVar2 = fcn.0040ef10(0);\n        if (cVar2 != '\\0') {\n            if (*(param_1 + 0x110) < 1) {\n                fcn.0041944d();\n                pcVar1 = swi(3);\n                (*pcVar1)();\n                return;\n            }\n            uVar4 = *(**(param_1 + 0x10c) + 9);\n            cVar2 = fcn.00410680(uVar4);\n            if (cVar2 != '\\0') {\n                *(param_1 + 0x168) = uVar4;\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 299
    },
    "0040c9e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0040c9e0(int32_t param_1, uint param_2, char param_3)\n\n{\n    code *pcVar1;\n    char cVar2;\n    uint32_t uVar3;\n    uint uVar4;\n    uint uVar5;\n    uint *puVar6;\n    int32_t **in_FS_OFFSET;\n    int32_t *piStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x43eb69;\n    piStack12 = *in_FS_OFFSET;\n    uVar3 = *0x45060c ^ &stack0xffffffe8;\n    *in_FS_OFFSET = &piStack12;\n    uVar4 = param_2;\n    if (param_3 != '\\0') {\n        uVar4 = fcn.004107c0(param_2, uVar3);\n    }\n    cVar2 = fcn.0040c170(1);\n    if (cVar2 == '\\0') {\n        puVar6 = (**(**(param_1 + 0xa0) + 0x24))(&param_2);\n        uVar5 = *puVar6;\n        uStack8 = 0;\n    }\n    else {\n        uVar5 = 0x44197f;\n    }\n    fcn.0040bc60(uVar4, uVar5);\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 333
    },
    "0040ca70": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuchar __thiscall fcn.0040ca70(int32_t param_1, uint16_t param_2)\n\n{\n    code *pcVar1;\n    char cVar2;\n    uchar uVar3;\n    uint32_t uVar4;\n    int32_t unaff_EDI;\n    \n    cVar2 = fcn.0040c170(1);\n    if (cVar2 != '\\0') {\n        return 0;\n    }\n    uVar4 = param_2;\n    cVar2 = fcn.0040ef10(uVar4);\n    if (cVar2 != '\\0') {\n        if (*(param_1 + 0x110) <= uVar4) {\n            fcn.0041944d();\n            pcVar1 = swi(3);\n            uVar3 = (*pcVar1)();\n            return uVar3;\n        }\n        fcn.0040bb50(*(*(param_1 + 0x10c) + uVar4 * 4));\n        if (*(param_1 + 0x11c) == '\\0') {\n            if (unaff_EDI == 0) {\n                unaff_EDI = *(param_1 + 0xfc);\n            }\n            fcn.00410750(unaff_EDI, 1);\n        }\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 293
    },
    "0040caf0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.0040caf0(int32_t param_1)\n\n{\n    if ((param_1 != 0) && (param_1 != 2)) {\n        fcn.0040c9e0(param_1, 1);\n    }\n    return;\n}\n",
        "token_count": 60
    },
    "0040cb10": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __thiscall fcn.0040cb10(int32_t param_1, int32_t param_2, uint32_t param_3)\n\n{\n    int32_t iVar1;\n    bool bVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    \n    if (((*(param_1 + 0x15c) != -1) || (param_2 == 0)) || (param_3 == 0)) {\n        return 0;\n    }\n    *(param_1 + 0x3c) = param_2;\n    uVar3 = *(param_1 + 0x68);\n    if (param_3 <= *(param_1 + 0x68)) {\n        uVar3 = param_3;\n    }\n    *(param_1 + 0x40) = uVar3;\n    if ((uVar3 != 0) || (bVar2 = true,  *(param_1 + 0x6c) == 0)) {\n        bVar2 = false;\n    }\n    do {\n        if ((*(param_1 + 0x40) == 0) && ((!bVar2 || (*(param_1 + 0x6c) == 0)))) {\n            return 0;\n        }\n        if ((*(param_1 + 0x34) == 0) && (uVar3 = *(param_1 + 0x6c),  uVar3 != 0)) {\n            uVar7 = *(param_1 + 0x80);\n            if (uVar3 < *(param_1 + 0x80)) {\n                uVar7 = uVar3;\n            }\n            if (uVar7 == 0) {\n                return 0;\n            }\n            fcn.00413af0(*(param_1 + 0x7c), uVar7, 0);\n            fcn.0040c330(uVar7);\n            *(param_1 + 0x6c) = *(param_1 + 0x6c) - uVar7;\n            *(param_1 + 0x30) = *(param_1 + 0x7c);\n            *(param_1 + 0x34) = uVar7;\n        }\n        iVar4 = fcn.0040bc00();\n        if (*(iVar4 + 0xe) == 0) {\n            uVar3 = *(param_1 + 0x34);\n            if (*(param_1 + 0x40) < *(param_1 + 0x34)) {\n                uVar3 = *(param_1 + 0x40);\n            }\n            uVar5 = *(param_1 + 0x3c);\n            fcn.0042aaa0(uVar5, *(param_1 + 0x30), uVar3);\n            uVar5 = fcn.00413c80(uVar5, *(param_1 + 0x3c), uVar3, *(param_1 + 0x70));\n            *(param_1 + 0x68) = *(param_1 + 0x68) - uVar3;\n            *(param_1 + 0x34) = *(param_1 + 0x34) - uVar3;\n            *(param_1 + 0x40) = *(param_1 + 0x40) - uVar3;\n            *(param_1 + 0x3c) = *(param_1 + 0x3c) + uVar3;\n            *(param_1 + 0x30) = *(param_1 + 0x30) + uVar3;\n            *(param_1 + 0x44) = *(param_1 + 0x44) + uVar3;\n            *(param_1 + 0x70) = uVar5;\n        }\n        else {\n            iVar4 = *(param_1 + 0x44);\n            iVar6 = fcn.00413f90(param_1 + 0x30, 2);\n            iVar1 = *(param_1 + 0x44);\n            uVar5 = fcn.00413c80();\n            *(param_1 + 0x68) = *(param_1 + 0x68) - (iVar1 - iVar4);\n            *(param_1 + 0x70) = uVar5;\n            if (iVar6 == 1) {\n                return 0;\n            }\n            fcn.0040caf0();\n        }\n    } while( true );\n}\n",
        "token_count": 1007
    },
    "0040cc80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __thiscall fcn.0040cc80(int32_t param_1, uint param_2, uint param_3)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint uVar4;\n    int32_t unaff_ESI;\n    ulong uVar5;\n    \n    if (*(param_1 + 0x15c) != -1) {\n        return 0;\n    }\n    uVar4 = 1;\n    if (param_3 != '\\0') goto code_r0x0040cd2d;\n    if (*(param_1 + 0x68) == 0) {\n        if ((*(param_1 + 0x15e) == '\\0') && (iVar2 = fcn.0040bc00(),  *(param_1 + 0x70) != *(iVar2 + 0x14))) {\n            fcn.0040c9e0(0x66, 0);\n            goto code_r0x0040cccb;\n        }\n    }\n    else {\ncode_r0x0040cccb:\n        uVar4 = 0xffffffff;\n    }\n    iVar2 = fcn.0040bc00();\n    if (*(iVar2 + 0xe) == 8) {\n        fcn.00413e20(param_1 + 0x30);\n    }\n    if (unaff_ESI != 0) {\n        fcn.0040bc00();\n        uVar5 = fcn.00411530();\n        cVar1 = fcn.00412120(unaff_ESI, uVar5);\n        if (cVar1 != '\\0') {\n            fcn.0040bc00();\n            uVar3 = fcn.00411970();\n            cVar1 = fcn.00412040(unaff_ESI, uVar3);\n            if (cVar1 != '\\0') goto code_r0x0040cd2d;\n        }\n        uVar4 = 0xfffffffe;\n    }\ncode_r0x0040cd2d:\n    fcn.0040f790(param_3);\n    *(param_1 + 0x15c) = 0;\n    fcn.0040e820();\n    fcn.0040c720();\n    return uVar4;\n}\n",
        "token_count": 500
    },
    "0040cf40": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.0040cf40(int32_t param_1, uint param_2)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t iStack28;\n    uchar *puVar3;\n    int32_t iStack4;\n    \n    uVar1 = param_2;\n    puVar3 = &stack0xfffffffc;\n    iStack28 = 0x40cf5b;\n    iStack4 = param_1;\n    iVar2 = fcn.0040c4f0(param_2, puVar3, &stack0x00000004);\n    if (iVar2 == 0) {\n        if (*(param_1 + 4) == 0) {\n            iStack28 = 1;\n            fcn.0040c080(*(param_1 + 8));\n            if (*(param_1 + 4) == 0) {\n                fcn.0041944d();\n            }\n        }\n        iVar2 = fcn.0040c7a0(uVar1);\n        *(iVar2 + 0xc) = puVar3;\n        *(iVar2 + 8) = *(*(param_1 + 4) + iStack28 * 4);\n        *(*(param_1 + 4) + iStack28 * 4) = iVar2;\n    }\n    return iVar2 + 4;\n}\n",
        "token_count": 302
    },
    "0040d1a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t __thiscall fcn.0040d1a0(int32_t param_1, uint32_t param_2)\n\n{\n    uint uVar1;\n    char cVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    ulong uVar5;\n    \n    uVar3 = fcn.0040ef10(param_2 & 0xffff);\n    if ((uVar3 != '\\0') &&\n       (((*(param_1 + 0xa4) == 0 || (uVar3 = (*(param_1 + 0xd0) != '\\0') * 2 - 1,  uVar3 != 1)) &&\n        (*(param_1 + 0x15c) == '\\0')))) {\n        fcn.0040e850(*(param_1 + 0x74), 0);\n        fcn.0040f6c0(param_2);\n        iVar4 = fcn.0040bc00();\n        if ((*(iVar4 + 0xc) & 1) != 0) {\n            if (*(param_1 + 0x194) == 0) {\n                fcn.0040c9e0(0x6e, 0);\n            }\n            fcn.0040c580();\n            cVar2 = fcn.0040c5d0();\n            if (cVar2 == '\\0') {\n                fcn.0040c9e0(0x6e, 0);\n            }\n        }\n        iVar4 = fcn.0040bc00();\n        if (*(iVar4 + 0xe) != 0) {\n            if (*(iVar4 + 0xe) != 8) {\n                fcn.0040c9e0(0x65, 0);\n            }\n            if (*(param_1 + 0x188) == '\\0') {\n                iVar4 = 0;\n            }\n            else {\n                iVar4 = param_1 + 0x16c;\n            }\n            *(param_1 + 0x58) = iVar4;\n            fcn.00413e70(param_1 + 0x30, 0xfffffff1, 0x4423ac, 0x38);\n            fcn.0040caf0();\n        }\n        iVar4 = fcn.0040bc00();\n        *(param_1 + 0x6c) = *(iVar4 + 0x18);\n        uVar5 = fcn.0040bc00();\n        if ((*(uVar5 + 0xc) & 1) != 0) {\n            *(param_1 + 0x6c) = (uVar5 >> 0x20) + -0xc;\n        }\n        iVar4 = fcn.0040bc00();\n        uVar1 = *(iVar4 + 0x1c);\n        *(param_1 + 0x68) = uVar1;\n        *(param_1 + 0x70) = 0;\n        *(param_1 + 0x44) = 0;\n        *(param_1 + 0x34) = 0;\n        *(param_1 + 0x15c) = 0xff;\n        return CONCAT31(uVar1 >> 8, 1);\n    }\n    return uVar3 & 0xffffff00;\n}\n",
        "token_count": 727
    },
    "0040d510": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0040d510(void)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    char unaff_SI;\n    uint uStack4;\n    \n    puVar2 = &uStack4;\n    uStack4 = 0;\n    iVar1 = fcn.0040c770(0x80);\n    if (iVar1 == 0) {\n        puVar2 = NULL;\n    }\n    fcn.00410400(puVar2);\n    if (unaff_SI != '\\0') {\n        fcn.00412ed0();\n    }\n    return;\n}\n",
        "token_count": 130
    },
    "0040d570": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0040d570(int32_t param_1)\n\n{\n    int32_t iVar1;\n    char cVar2;\n    uint32_t uVar3;\n    int32_t *piVar4;\n    uint uVar5;\n    int32_t unaff_ESI;\n    uint32_t *in_FS_OFFSET;\n    int32_t iStack40;\n    int32_t iStack36;\n    uchar auStack28 [4];\n    uchar uStack24;\n    uint uStack20;\n    int32_t iStack16;\n    \n    cVar2 = fcn.0040c170();\n    if ((cVar2 == '\\0') && ((*(param_1 + 0xa4) == 0 || (-1 < (*(param_1 + 0xd0) != '\\0') * 2 + -1)))) {\n        iStack16 = 1;\n        uStack20 = 0x40d5a7;\n        fcn.0040d510();\n        iStack40 = unaff_ESI;\n        if ((*(param_1 + 0xd8) == '\\0') &&\n           ((*(param_1 + 0xd9) == '\\0' && ((*(param_1 + 0xa4) == 0 || (-1 < (*(param_1 + 0xd0) != '\\0') * 2 + -1)))))) {\n            uStack20 = 0x40d5d3;\n            (**(**(param_1 + 0xa0) + 8))();\n            iStack40 = unaff_ESI;\n        }\n        iStack36 = iStack16;\n        if ((*(param_1 + 0xa4) != 0) && (0 < (*(param_1 + 0xd0) != '\\0') * 2 + -1)) {\n            iStack16 = 0x43f818;\n            uStack20 = *in_FS_OFFSET;\n            uVar3 = *0x45060c ^ &stack0xffffffd8;\n            *in_FS_OFFSET = &stack0xffffffec;\n            piVar4 = fcn.0041a118();\n            if (piVar4 == NULL) {\n                piVar4 = fcn.00401090(0x80004005);\n            }\n            (**(*piVar4 + 0xc))();\n            iStack16 = 0;\n            if ((*(param_1 + 0xa4) == 2) && (*(param_1 + 0xd0) != '\\0')) {\n                uVar5 = fcn.00413450(&stack0xffffffe4);\n                uStack20 = CONCAT31(uStack20._1_3_, 1);\n                fcn.00402100(uVar5);\n                uStack24 = 0;\n                piVar4 = iStack36 + -4;\n                LOCK();\n                iVar1 = *piVar4;\n                *piVar4 = *piVar4 + -1;\n                if (iVar1 == 1 || iVar1 + -1 < 0) {\n                    (**(**(iStack36 + -0x10) + 4))(iStack36 + -0x10);\n                }\n            }\n            else {\n                uVar5 = (**(**(param_1 + 0xa0) + 0x24))(&stack0xffffffe4);\n                uStack20 = CONCAT31(uStack20._1_3_, 2);\n                fcn.00402100(uVar5);\n                uStack24 = 0;\n                piVar4 = iStack36 + -4;\n                LOCK();\n                iVar1 = *piVar4;\n                *piVar4 = *piVar4 + -1;\n                if (iVar1 == 1 || iVar1 + -1 < 0) {\n                    (**(**(iStack36 + -0x10) + 4))(iStack36 + -0x10);\n                }\n                (**(**(param_1 + 0xa0) + 4))();\n            }\n            *(param_1 + 0xd0) = 0;\n            if (*(param_1 + 0xd4) == 0) {\n                *(param_1 + 0xa4) = 0;\n            }\n            else {\n                *(param_1 + 0xac) = *(param_1 + 0xd4);\n            }\n            fcn.004128f0(iStack40, (-(*(param_1 + 0xa4) != 0) & 0xfffffffe) + 2 | 0x2000, 1);\n            iStack36 = 0xffffffff;\n            piVar4 = iStack40 + -4;\n            LOCK();\n            iVar1 = *piVar4;\n            *piVar4 = *piVar4 + -1;\n            if (iVar1 == 1 || iVar1 + -1 < 0) {\n                (**(**(iStack40 + -0x10) + 4))(iStack40 + -0x10);\n            }\n            *in_FS_OFFSET = uVar3;\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 1107
    },
    "00413780": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00413780(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t *piVar3;\n    uint uVar4;\n    int32_t unaff_ESI;\n    int32_t unaff_EDI;\n    uint32_t *in_FS_OFFSET;\n    uchar auStack20 [4];\n    uchar uStack16;\n    uint uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x43f818;\n    uStack12 = *in_FS_OFFSET;\n    uVar2 = *0x45060c ^ &stack0xffffffe0;\n    *in_FS_OFFSET = &uStack12;\n    piVar3 = fcn.0041a118();\n    if (piVar3 == NULL) {\n        piVar3 = fcn.00401090(0x80004005);\n    }\n    (**(*piVar3 + 0xc))();\n    uStack8 = 0;\n    if ((*(param_1 + 0x20) == 2) && (*(param_1 + 0x4c) != '\\0')) {\n        uVar4 = fcn.00413450(auStack20);\n        uStack12 = CONCAT31(uStack12._1_3_, 1);\n        fcn.00402100(uVar4);\n        uStack16 = 0;\n        piVar3 = unaff_ESI + -4;\n        LOCK();\n        iVar1 = *piVar3;\n        *piVar3 = *piVar3 + -1;\n        if (iVar1 == 1 || iVar1 + -1 < 0) {\n            (**(**(unaff_ESI + -0x10) + 4))(unaff_ESI + -0x10);\n        }\n    }\n    else {\n        uVar4 = (**(**(param_1 + 0x1c) + 0x24))(auStack20);\n        uStack12 = CONCAT31(uStack12._1_3_, 2);\n        fcn.00402100(uVar4);\n        uStack16 = 0;\n        piVar3 = unaff_ESI + -4;\n        LOCK();\n        iVar1 = *piVar3;\n        *piVar3 = *piVar3 + -1;\n        if (iVar1 == 1 || iVar1 + -1 < 0) {\n            (**(**(unaff_ESI + -0x10) + 4))(unaff_ESI + -0x10);\n        }\n        (**(**(param_1 + 0x1c) + 4))();\n    }\n    *(param_1 + 0x4c) = 0;\n    if (*(param_1 + 0x50) == 0) {\n        *(param_1 + 0x20) = 0;\n    }\n    else {\n        *(param_1 + 0x28) = *(param_1 + 0x50);\n    }\n    fcn.004128f0(unaff_EDI, (-(*(param_1 + 0x20) != 0) & 0xfffffffe) + 2 | 0x2000, 1);\n    piVar3 = unaff_EDI + -4;\n    LOCK();\n    iVar1 = *piVar3;\n    *piVar3 = *piVar3 + -1;\n    if (iVar1 == 1 || iVar1 + -1 < 0) {\n        (**(**(unaff_EDI + -0x10) + 4))(unaff_EDI + -0x10);\n    }\n    *in_FS_OFFSET = uVar2;\n    return;\n}\n",
        "token_count": 812
    },
    "0040d6d0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __thiscall fcn.0040d6d0(int32_t param_1, char param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    ulong uVar4;\n    char in_stack_ffffffec;\n    \n    if (*(param_1 + 0x15c) == '\\x01') {\n        *(param_1 + 0x34) = 0;\n        if (param_2 == '\\0') {\n            uVar4 = fcn.0040bc00();\n            iVar2 = uVar4 >> 0x20;\n            if (*(uVar4 + 0xe) == 8) {\n                do {\n                    if (*(param_1 + 0x40) == 0) {\n                        fcn.0040c2c0();\n                        fcn.004136c0(*(param_1 + 0x7c), *(param_1 + 0x6c), 0);\n                        *(param_1 + 0x6c) = 0;\n                        *(param_1 + 0x40) = *(param_1 + 0x80);\n                        *(param_1 + 0x3c) = *(param_1 + 0x7c);\n                    }\n                    iVar1 = *(param_1 + 0x44);\n                    iVar2 = fcn.004143d0();\n                    *(param_1 + 0x6c) = *(param_1 + 0x6c) + (*(param_1 + 0x44) - iVar1);\n                } while (iVar2 == 0);\n                if (iVar2 == 1) {\n                    iVar2 = 0;\n                }\n            }\n            in_stack_ffffffec = iVar2;\n            fcn.0040caf0();\n            if (*(param_1 + 0x6c) != 0) {\n                fcn.0040c2c0();\n                fcn.004136c0(*(param_1 + 0x7c), *(param_1 + 0x6c), 0);\n            }\n            iVar2 = fcn.0040bc00();\n            if (*(iVar2 + 0xe) == 8) {\n                uVar3 = fcn.00414750(param_1 + 0x30);\n                fcn.0040caf0(uVar3);\n            }\n            iVar2 = fcn.0040bc00();\n            *(iVar2 + 0x18) = *(iVar2 + 0x18) + *(param_1 + 0x44);\n            iVar2 = fcn.0040bc00();\n            *(iVar2 + 0x1c) = *(param_1 + 0x38);\n            fcn.0040ef30();\n        }\n        else {\n            *(param_1 + 0xfc) = 0;\n        }\n        *(param_1 + 0x15c) = 0;\n        fcn.0040e820();\n        fcn.0040c720();\n        if ((*(param_1 + 0x15d) != '\\0') && (in_stack_ffffffec == '\\0')) {\n            fcn.0040d570();\n        }\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 712
    },
    "0040d800": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __thiscall fcn.0040d800(int32_t param_1, uint param_2)\n\n{\n    int32_t *piVar1;\n    int32_t **ppiVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t **ppiVar5;\n    uint uVar6;\n    int32_t unaff_EBP;\n    int32_t iVar7;\n    int32_t **in_FS_OFFSET;\n    int32_t iStack24;\n    int32_t **ppiStack20;\n    int32_t iStack16;\n    int32_t *piStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x43ecc8;\n    piStack12 = *in_FS_OFFSET;\n    uVar3 = *0x45060c ^ &stack0xffffffdc;\n    *in_FS_OFFSET = &piStack12;\n    ppiStack20 = NULL;\n    iVar4 = fcn.004016b0(*(param_1 + 0x10) + -0x10, uVar3);\n    iVar7 = iVar4 + 0x10;\n    uStack4 = 0;\n    iStack24 = iVar7;\n    ppiVar5 = fcn.004016b0(*(param_1 + 4) + -0x10);\n    ppiStack20 = ppiVar5 + 4;\n    uStack4._0_1_ = 1;\n    if ((*(iVar4 + 4) != 0) && (ppiVar5[1] != NULL)) {\n        iVar7 = unaff_EBP;\n        fcn.0040cee0(*0x4429d1);\n    }\n    uVar6 = fcn.00402000(&iStack16, param_1 + 0x14, &iStack24);\n    uStack4._0_1_ = 2;\n    fcn.00402000(param_2, uVar6, &ppiStack20);\n    uStack4._0_1_ = 1;\n    piVar1 = iStack16 + -4;\n    LOCK();\n    iVar4 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar4 == 1 || iVar4 + -1 < 0) {\n        (**(**(iStack16 + -0x10) + 4))(iStack16 + -0x10);\n    }\n    uStack4 = uStack4._1_3_ << 8;\n    ppiVar2 = ppiVar5 + 3;\n    LOCK();\n    piVar1 = *ppiVar2;\n    *ppiVar2 = *ppiVar2 + -1;\n    if (piVar1 + -1 < 1) {\n        (**(**ppiVar5 + 4))(ppiVar5);\n    }\n    uStack4 = 0xffffffff;\n    piVar1 = iVar7 + -4;\n    LOCK();\n    iVar4 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar4 == 1 || iVar4 + -1 < 0) {\n        (**(**(iVar7 + -0x10) + 4))(iVar7 + -0x10);\n    }\n    *in_FS_OFFSET = piStack12;\n    return param_2;\n}\n",
        "token_count": 748
    },
    "0040d940": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0040da2a)\n\nvoid __thiscall fcn.0040d940(int32_t param_1, uint param_2, int32_t param_3, char param_4)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    int64_t iVar3;\n    char cVar4;\n    uint32_t uVar5;\n    int32_t unaff_EBP;\n    int32_t iVar6;\n    int32_t **in_FS_OFFSET;\n    int64_t iVar7;\n    int32_t unaff_retaddr;\n    int32_t iVar8;\n    int32_t *apiStack20 [2];\n    int32_t *piStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x43ecf8;\n    piStack12 = *in_FS_OFFSET;\n    uVar5 = *0x45060c ^ &stack0xffffffdc;\n    *in_FS_OFFSET = &piStack12;\n    cVar4 = fcn.0040c170(1, uVar5);\n    iVar8 = unaff_retaddr;\n    if ((cVar4 == '\\0') || ((unaff_retaddr != 0 && (cVar4 = fcn.0040c170(0),  cVar4 == '\\0')))) {\n        if (*(param_1 + 0x15c) == -1) {\n            fcn.0040cc80();\n        }\n        if (*(param_1 + 0x15c) == '\\x01') {\n            fcn.0040d6d0();\n        }\n        if ((unaff_retaddr != 1) && (cVar4 = fcn.0040c170(),  cVar4 == '\\0')) {\n            fcn.0040d510();\n        }\n        cVar4 = iVar8;\n        iVar3 = 0;\n        if (param_4 != '\\0') {\n            piStack12 = *(param_1 + 0x110);\n            iVar6 = 0;\n            unaff_retaddr = param_3;\n            iVar3 = 0;\n            if (0 < piStack12) {\n                iVar3 = 0;\n                do {\n                    if ((iVar6 < 0) || (*(param_1 + 0x110) <= iVar6)) {\n                        fcn.0041944d();\n                        pcVar2 = swi(3);\n                        (*pcVar2)();\n                        return;\n                    }\n                    iVar7 = fcn.00411530();\n                    cVar4 = iVar8;\n                    if (iVar3 < iVar7) {\n                        iVar3 = iVar7;\n                    }\n                    iVar6 = iVar6 + 1;\n                } while (iVar6 < piStack12);\n            }\n        }\n        fcn.0040f680(1);\n        fcn.00413540(apiStack20, unaff_retaddr == 1);\n        piStack12 = NULL;\n        if ((cVar4 != '\\0') && (*(unaff_EBP + -0xc) != 0)) {\n            fcn.00412120(unaff_EBP, iVar3);\n        }\n        piStack12 = 0xffffffff;\n        piVar1 = unaff_EBP + -4;\n        LOCK();\n        iVar8 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n        if (iVar8 == 1 || iVar8 + -1 < 0) {\n            (**(**(unaff_EBP + -0x10) + 4))(unaff_EBP + -0x10);\n        }\n    }\n    *in_FS_OFFSET = apiStack20[0];\n    return;\n}\n",
        "token_count": 810
    },
    "0040dcd0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t * __thiscall fcn.0040dcd0(int32_t param_1, int32_t *param_2)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    uint32_t **in_FS_OFFSET;\n    uint32_t *puStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack8 = 0x43dc69;\n    puStack12 = *in_FS_OFFSET;\n    puVar1 = *0x45060c ^ &stack0xffffffe8;\n    *in_FS_OFFSET = &puStack12;\n    uStack4 = 0;\n    iVar2 = fcn.004016b0(*(param_1 + 8) + -0x10);\n    *param_2 = iVar2 + 0x10;\n    uStack4 = 0;\n    if (*(*(param_1 + 0xc) + -0xc) != 0) {\n        fcn.00401b30(0x441984, 1);\n        fcn.00401b30(*(param_1 + 0xc), *(*(param_1 + 0xc) + -0xc));\n    }\n    *in_FS_OFFSET = puVar1;\n    return param_2;\n}\n",
        "token_count": 276
    },
    "0040de30": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint fcn.0040de30(uint param_1)\n\n{\n    int32_t *piVar1;\n    char cVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    bool bVar6;\n    int32_t unaff_EBX;\n    uint32_t unaff_EBP;\n    uint unaff_ESI;\n    int32_t **in_FS_OFFSET;\n    int32_t *unaff_retaddr;\n    uint uVar7;\n    uint32_t uStack24;\n    uint uStack20;\n    int32_t *piStack12;\n    uint uStack8;\n    code *pcStack4;\n    \n    pcStack4 = 0xffffffff;\n    uStack8 = 0x43eda9;\n    piStack12 = *in_FS_OFFSET;\n    uVar4 = *0x45060c ^ &stack0xffffffd4;\n    *in_FS_OFFSET = &piStack12;\n    bVar6 = false;\n    uStack20 = NULL;\n    fcn.00403c70(param_1, uVar4);\n    uStack8 = 0;\n    fcn.00401f60(0x4423b4);\n    iVar3 = *(unaff_EBX + -0xc);\n    if ((iVar3 == 0) || (*(*unaff_retaddr + -0xc) < iVar3)) {\ncode_r0x0040dec3:\n        unaff_EBP = unaff_EBP & 0xffffff;\n    }\n    else {\n        fcn.00401cb0(&uStack24, iVar3);\n        bVar6 = true;\n        uStack20 = CONCAT31(uStack20._1_3_, 1);\n        uVar7 = 1;\n        iVar5 = (*pcStack4)(unaff_ESI);\n        unaff_EBP = CONCAT13(1, uVar7);\n        if (iVar5 != 0) goto code_r0x0040dec3;\n    }\n    piStack12 = NULL;\n    if (bVar6) {\n        piVar1 = uStack24 - 4;\n        LOCK();\n        iVar5 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n        if (iVar5 == 1 || iVar5 + -1 < 0) {\n            (**(**(uStack24 - 0x10) + 4))(uStack24 - 0x10);\n        }\n    }\n    if (unaff_EBP >> 0x18 != '\\0') {\n        iVar5 = *(*unaff_retaddr + -0xc);\n        if (iVar5 == iVar3) {\n            fcn.00401600();\ncode_r0x0040df0e:\n            piStack12 = 0xffffffff;\n            piVar1 = unaff_EBX + -4;\n            LOCK();\n            iVar3 = *piVar1;\n            *piVar1 = *piVar1 + -1;\n            if (iVar3 == 1 || iVar3 + -1 < 0) {\n                (**(**(unaff_EBX + -0x10) + 4))(unaff_EBX + -0x10);\n            }\n            *in_FS_OFFSET = uStack20;\n            return 1;\n        }\n        if ((iVar3 < 0) || (iVar5 < iVar3)) {\n            fcn.00401090(0x80070057);\n        }\n        else {\n            cVar2 = *(*unaff_retaddr + iVar3);\n            if ((cVar2 == '\\\\') || (cVar2 == '/')) {\n                uVar7 = fcn.0040d600(&uStack24, iVar3);\n                uStack20 = CONCAT31(uStack20._1_3_, 2);\n                fcn.00402100(uVar7);\n                uStack24 = uStack24 & 0xffffff00;\n                piVar1 = unaff_EBP - 4;\n                LOCK();\n                iVar3 = *piVar1;\n                *piVar1 = *piVar1 + -1;\n                if (iVar3 == 1 || iVar3 + -1 < 0) {\n                    (**(**(unaff_EBP - 0x10) + 4))(unaff_EBP - 0x10);\n                }\n                fcn.004042a0(0x4423b4);\n                goto code_r0x0040df0e;\n            }\n        }\n    }\n    piStack12 = 0xffffffff;\n    piVar1 = unaff_EBX + -4;\n    LOCK();\n    iVar3 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar3 == 1 || iVar3 + -1 < 0) {\n        (**(**(unaff_EBX + -0x10) + 4))(unaff_EBX + -0x10);\n    }\n    *in_FS_OFFSET = uStack20;\n    return 0;\n}\n",
        "token_count": 1080
    },
    "0040e120": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t * __thiscall fcn.0040e120(int32_t param_1, int32_t param_2, uint param_3, int32_t param_4, int32_t param_5)\n\n{\n    bool bVar1;\n    bool bVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    int32_t unaff_EBX;\n    int32_t unaff_ESI;\n    int32_t *in_FS_OFFSET;\n    int32_t iStack64;\n    int32_t iStack60;\n    uint32_t uStack56;\n    int32_t *piStack36;\n    uint uStack28;\n    int32_t iStack24;\n    int32_t iStack20;\n    uint uStack12;\n    uint uStack8;\n    int32_t *piStack4;\n    \n    piStack4 = 0xffffffff;\n    uStack8 = 0x43ee73;\n    uStack12 = *in_FS_OFFSET;\n    uStack56 = *0x45060c ^ &stack0xffffffcc;\n    *in_FS_OFFSET = &stack0xfffffff4;\n    bVar2 = false;\n    bVar1 = false;\n    iStack60 = param_4;\n    iStack64 = 0x40e15b;\n    fcn.00403c70();\n    uStack8 = 1;\n    if (param_5 == 0) {\n        param_5 = param_2;\n    }\n    iStack64 = param_5;\n    fcn.00403c70();\n    uStack12._0_1_ = 2;\n    if (*(unaff_EBX + -0xc) == 0) {\n        iVar3 = fcn.004016b0(param_2 + -0x10);\n        *piStack4 = iVar3 + 0x10;\n        unaff_ESI = 1;\n        uStack12._0_1_ = 1;\n        piVar4 = unaff_EBX + -4;\n        LOCK();\n        iVar3 = *piVar4;\n        *piVar4 = *piVar4 + -1;\n        piStack36 = piStack4;\n    }\n    else {\n        if (*(param_2 + -0xc) != 0) {\n            fcn.00401f60(0x4423b4);\n            fcn.0040cee0(*0x4429d1);\n        }\n        fcn.00401f60(0x4423b4);\n        unaff_EBX = iStack60;\n        fcn.0040cd80();\n        uStack28 = CONCAT31(uStack28._1_3_, 3);\n        if (uStack8 == '\\0') {\n            piVar4 = fcn.0040dff0(&stack0xfffffff8, &stack0xffffffc4);\n            piStack36 = 0x5;\n            bVar2 = false;\n            bVar1 = true;\n        }\n        else if (*(param_1 + 4) == '\\0') {\n            piVar4 = &stack0xffffffc0;\n        }\n        else {\n            piVar4 = fcn.00411f60(&stack0xfffffffc);\n            bVar2 = true;\n            bVar1 = false;\n        }\n        fcn.00401b30(*piVar4, *(*piVar4 + -0xc));\n        if (bVar1) {\n            piVar4 = iStack24 + -4;\n            LOCK();\n            iVar3 = *piVar4;\n            *piVar4 = *piVar4 + -1;\n            if (iVar3 + -1 < 1) {\n                (**(**(iStack24 + -0x10) + 4))(iStack24 + -0x10);\n            }\n        }\n        if (bVar2) {\n            piVar4 = iStack20 + -4;\n            LOCK();\n            iVar3 = *piVar4;\n            *piVar4 = *piVar4 + -1;\n            if (iVar3 == 1 || iVar3 + -1 < 0) {\n                (**(**(iStack20 + -0x10) + 4))(iStack20 + -0x10);\n            }\n        }\n        iVar3 = fcn.004016b0(uStack28 + -0x10);\n        *piStack36 = iVar3 + 0x10;\n        fcn.00411b00();\n        piVar4 = unaff_EBX + -4;\n        LOCK();\n        iVar3 = *piVar4;\n        *piVar4 = *piVar4 + -1;\n    }\n    if (iVar3 + -1 < 1) {\n        (**(**(unaff_EBX + -0x10) + 4))(unaff_EBX + -0x10);\n    }\n    piVar4 = uStack28 + -4;\n    LOCK();\n    iVar3 = *piVar4;\n    *piVar4 = *piVar4 + -1;\n    if (iVar3 == 1 || iVar3 + -1 < 0) {\n        (**(**(uStack28 + -0x10) + 4))(uStack28 + -0x10);\n    }\n    *in_FS_OFFSET = unaff_ESI;\n    return piStack36;\n}\n",
        "token_count": 1154
    },
    "0040e370": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0040e370(int32_t param_1, int32_t param_2, uint param_3, uint param_4, int32_t param_5)\n\n{\n    int32_t *piVar1;\n    char cVar2;\n    uint *puVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint unaff_EBP;\n    int32_t *piVar6;\n    int32_t *in_FS_OFFSET;\n    uchar *in_stack_ffffff08;\n    uchar *puVar7;\n    uint uVar8;\n    int32_t **ppiStack212;\n    uint uStack208;\n    int32_t *piStack204;\n    uchar *puStack200;\n    int32_t iStack196;\n    uint32_t uStack192;\n    uchar auStack172 [12];\n    int32_t iStack160;\n    int32_t aiStack152 [10];\n    uint uStack112;\n    uchar auStack96 [8];\n    int32_t iStack88;\n    uint uStack80;\n    uchar uStack76;\n    uchar uStack68;\n    uchar uStack60;\n    uchar uStack56;\n    uchar uStack52;\n    uint uStack44;\n    uchar uStack40;\n    uchar uStack20;\n    uint uStack16;\n    int32_t iStack12;\n    uint uStack8;\n    int32_t iStack4;\n    \n    iStack4 = -1;\n    uStack8 = 0x43eee2;\n    iStack12 = *in_FS_OFFSET;\n    uStack16 = *0x45060c ^ &stack0xffffff54;\n    uStack192 = *0x45060c ^ &stack0xffffff44;\n    *in_FS_OFFSET = &stack0xfffffff4;\n    if ((param_5 != 0) || (param_2 != 0)) {\n        iStack196 = 0x40e3d6;\n        fcn.00411220();\n        iStack196 = param_1;\n        puStack200 = &stack0xffffffa0;\n        iStack4 = 0;\n        piStack204 = 0x40e3f5;\n        fcn.0040ca70();\n        piStack204 = &stack0xffffff68;\n        uStack208 = 0x40e403;\n        puVar3 = fcn.004118d0();\n        uStack208 = *puVar3;\n        uStack16 = CONCAT31(uStack16._1_3_, 1);\n        ppiStack212 = 0x40e417;\n        fcn.00403c70();\n        ppiStack212 = iStack160 + -0x10;\n        uStack20 = 3;\n        piVar6 = iStack160 + -4;\n        LOCK();\n        iVar5 = *piVar6;\n        *piVar6 = *piVar6 + -1;\n        if (iVar5 == 1 || iVar5 + -1 < 0) {\n            (**(**ppiStack212 + 4))();\n        }\n        iVar5 = iStack4;\n        ppiStack212 = param_4;\n        puVar7 = &stack0xffffff44;\n        fcn.0040e120(puVar7, unaff_EBP);\n        uStack40 = 4;\n        iStack196 = 0;\n        iVar4 = fcn.0040c770(8);\n        piVar6 = piStack204;\n        if (iVar4 == 0) {\n            piVar6 = NULL;\n        }\n        else {\n            piStack204[2] = 8;\n            in_stack_ffffff08 = 0x40e49f;\n            (**(*piStack204 + 4))(uStack208, iVar5);\n        }\n        cVar2 = fcn.00411af0();\n        if (cVar2 == '\\0') {\n            if (piVar6 != NULL) {\n                (**(*piVar6 + 8))(uStack112);\n            }\n            cVar2 = fcn.0040d1a0();\n            if (cVar2 == '\\0') {\n                uStack52 = 3;\n                piVar6 = param_2 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 + -1 < 1) {\n                    in_stack_ffffff08 = 0x40e5ab;\n                    (**(**(param_2 + -0x10) + 4))(param_2 + -0x10);\n                }\n                uStack80 = uStack80 & 0xffffff00;\n                piVar6 = param_1 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    (**(**(param_1 + -0x10) + 4))(param_1 + -0x10);\n                }\n                uStack80 = 0xffffffff;\n                fcn.004112b0();\n            }\n            else {\n                fcn.0040cd80(param_2);\n                in_stack_ffffff08 = &stack0xffffff2c;\n                uStack56 = 5;\n                puVar3 = fcn.0040d800();\n                uStack60 = 6;\n                fcn.004126d0(*puVar3);\n                uStack60 = 5;\n                piVar1 = iVar5 + -4;\n                LOCK();\n                iVar4 = *piVar1;\n                *piVar1 = *piVar1 + -1;\n                if (iVar4 == 1 || iVar4 + -1 < 0) {\n                    (**(**(iVar5 + -0x10) + 4))(iVar5 + -0x10);\n                }\n                fcn.0040bd40(puVar7, 0x1021);\n                uStack68 = 7;\n                fcn.0040e940(uStack44, 0);\n                uStack76 = 8;\n                iVar5 = 0;\n                do {\n                    uVar8 = unaff_EBP;\n                    iVar4 = fcn.0040cb10(unaff_EBP, param_2);\n                    if (((iVar4 != 0) && (fcn.0041b333(&stack0xffffff3c, iVar4),  piVar6 != NULL)) &&\n                       (cVar2 = (**(*piVar6 + 0x10))(iVar4),  cVar2 == '\\0')) {\n                        if (iVar4 == param_2) {\n                            iVar4 = fcn.0040cb10(unaff_EBP, 1, uVar8);\n                            iVar5 = 0x69;\n                            if (iVar4 != 0) break;\n                        }\n                        iVar5 = 0x6a;\n                        break;\n                    }\n                    unaff_EBP = uVar8;\n                } while (iVar4 == param_2);\n                iVar4 = fcn.0040d2e0(&stack0xffffff2c);\n                if ((iVar4 != 1) && (iVar5 == 0x6a)) {\n                    iVar5 = 0x69;\n                }\n                if (piVar6 != NULL) {\n                    (**(*piVar6 + 0xc))();\n                }\n                if (iVar5 != 0) {\n                    fcn.0040bc60(iVar5, in_stack_ffffff08);\n                }\n                uStack80._0_1_ = 7;\n                fcn.0040e970();\n                uStack80._0_1_ = 5;\n                fcn.004111c0();\n                uStack80._0_1_ = 4;\n                fcn.00411b00();\n                uStack80 = CONCAT31(uStack80._1_3_, 3);\n                piVar6 = in_stack_ffffff08 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 + -1 < 1) {\n                    (**(**(in_stack_ffffff08 + -0x10) + 4))(in_stack_ffffff08 + -0x10);\n                }\n                uStack80 = uStack80 & 0xffffff00;\n                piVar6 = param_1 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    (**(**(param_1 + -0x10) + 4))(param_1 + -0x10);\n                }\n                uStack80 = 0xffffffff;\n                fcn.004112b0();\n            }\n        }\n        else {\n            if (piVar6 != NULL) {\n                (**(*piVar6 + 8))(0);\n            }\n            fcn.004126d0(iVar5);\n            iVar4 = fcn.00411970();\n            in_stack_ffffff08 = 0x40e4e1;\n            fcn.00412040(iVar5);\n            if (piVar6 != NULL) {\n                iVar4 = 0x40e4f2;\n                (**(*piVar6 + 0xc))();\n            }\n            uStack80._0_1_ = 3;\n            piVar6 = in_stack_ffffff08 + -4;\n            LOCK();\n            iVar5 = *piVar6;\n            *piVar6 = *piVar6 + -1;\n            if (iVar5 + -1 < 1) {\n                (**(**(in_stack_ffffff08 + -0x10) + 4))(in_stack_ffffff08 + -0x10);\n            }\n            uStack80 = uStack80._1_3_ << 8;\n            piVar6 = iVar4 + -4;\n            LOCK();\n            iVar5 = *piVar6;\n            *piVar6 = *piVar6 + -1;\n            if (iVar5 == 1 || iVar5 + -1 < 0) {\n                (**(**(iVar4 + -0x10) + 4))(iVar4 + -0x10);\n            }\n            uStack80 = 0xffffffff;\n            fcn.004112b0();\n        }\n    }\n    *in_FS_OFFSET = iStack88;\n    fcn.004294b3(in_stack_ffffff08);\n    return;\n}\n",
        "token_count": 2280
    },
    "0040e850": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __thiscall fcn.0040e850(int32_t param_1, int32_t param_2, char param_3)\n\n{\n    uint uVar1;\n    \n    if (param_2 == *(param_1 + 8)) {\n        if (param_3 != '\\0') {\n            fcn.00429510(*(param_1 + 4), 0, param_2);\n        }\n        return *(param_1 + 4);\n    }\n    fcn.0040e820();\n    if (param_2 != 0) {\n        uVar1 = fcn.0041930b(param_2);\n        *(param_1 + 4) = uVar1;\n        if (param_3 != '\\0') {\n            fcn.00429510(uVar1, 0, param_2);\n        }\n        *(param_1 + 8) = param_2;\n        return *(param_1 + 4);\n    }\n    *(param_1 + 4) = 0;\n    return *(param_1 + 4);\n}\n",
        "token_count": 233
    },
    "0040e900": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.0040e900(int32_t param_1, int32_t param_2)\n\n{\n    if (param_1 != param_2) {\n        fcn.0040e820();\n        if (*(param_2 + 4) != 0) {\n            fcn.0040e850(*(param_2 + 8), 0);\n            fcn.0042aaa0(*(param_1 + 4), *(param_2 + 4), *(param_2 + 8));\n        }\n    }\n    return param_1;\n}\n",
        "token_count": 127
    },
    "0040ef30": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040ef30(int32_t param_1)\n\n{\n    int32_t *piVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint8_t uVar4;\n    int32_t unaff_EBX;\n    uint32_t unaff_ESI;\n    int16_t iVar5;\n    uint32_t **in_FS_OFFSET;\n    char cVar6;\n    uint32_t *puVar7;\n    uint *puStack28;\n    uint32_t *puStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x43ef18;\n    puStack12 = *in_FS_OFFSET;\n    uVar2 = *0x45060c ^ &stack0xffffffd8;\n    *in_FS_OFFSET = &puStack12;\n    cVar6 = '\\0';\n    fcn.0040e940(0x10, 0, uVar2);\n    iVar5 = 0;\n    iVar3 = 0;\n    puStack12 = NULL;\n    if (*(*(param_1 + 0x24) + 0x20) != 0) {\n        iVar3 = (*(*(param_1 + 0x24) + 0x4c) != '\\0') * 2 + -1;\n    }\n    uVar4 = *(*(param_1 + 0x20) + 0xc) & 1;\n    puVar7 = unaff_ESI & 0xffffff | (iVar3 != 0) << 0x18;\n    if ((*(*(param_1 + 0x20) + 0xc) >> 3 & 1) == 0) {\n        fcn.00412ed0();\n        (**(**(*(param_1 + 0x24) + 0x1c) + 0x10))(*(*(param_1 + 0x20) + 0x28) + 0xe, 0, 0);\n    }\n    else if ((iVar3 != 0) || (uVar4 != 0)) {\n        *puStack28 = str.PK_a_b._0_4_;\n        iVar5 = 4;\n    }\n    fcn.00411350(iVar5 + puStack28);\n    piVar1 = *(param_1 + 0x20) + 0x28;\n    *piVar1 = *piVar1 - *(param_1 + 0x68);\n    fcn.004136c0(unaff_EBX, iVar5 + 0xc, 1);\n    if (cVar6 == '\\0') {\n        if (uVar4 != 0) {\n            fcn.00412ed0();\n            (**(**(*(param_1 + 0x24) + 0x1c) + 0x10))(*(*(param_1 + 0x20) + 0x28) + 0xe + *(param_1 + 0x68), 0, 0);\n            fcn.004136c0(unaff_EBX + 4, 0xc, 1);\n        }\n        fcn.00412ed0();\n    }\n    *(param_1 + 0x20) = 0;\n    fcn.0040e970();\n    *in_FS_OFFSET = puVar7;\n    return;\n}\n",
        "token_count": 739
    },
    "0040f2d0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.0040f2d0(int32_t param_1, char param_2)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    \n    iVar3 = *(param_1 + 0x34);\n    iVar4 = 0;\n    if ((param_2 != '\\0') && (iVar5 = 0,  0 < iVar3)) {\n        do {\n            if ((iVar5 < 0) || (*(param_1 + 0x34) <= iVar5)) {\n                fcn.0041944d();\n                pcVar1 = swi(3);\n                iVar3 = (*pcVar1)();\n                return iVar3;\n            }\n            iVar2 = fcn.00411860();\n            iVar5 = iVar5 + 1;\n            iVar4 = iVar4 + iVar2;\n        } while (iVar5 < iVar3);\n    }\n    return *(param_1 + 0x10) + 0x16 + iVar4;\n}\n",
        "token_count": 240
    },
    "0040f320": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0040f3a0)\n// WARNING: Removing unreachable block (ram,0x0040f4dd)\n// WARNING: Removing unreachable block (ram,0x0040f50b)\n// WARNING: Removing unreachable block (ram,0x0040f3af)\n\nuint __thiscall fcn.0040f320(int32_t param_1, char param_2)\n\n{\n    int32_t iVar1;\n    char cVar2;\n    uint32_t uVar3;\n    uint uVar4;\n    int32_t iVar5;\n    int32_t unaff_EBX;\n    int32_t arg_ch;\n    int32_t iVar6;\n    code *pcVar7;\n    int32_t **in_FS_OFFSET;\n    int32_t iStack48;\n    int32_t iStack44;\n    int32_t iStack40;\n    int32_t iStack36;\n    int32_t *piStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack8 = 0x43ef48;\n    piStack12 = *in_FS_OFFSET;\n    uVar3 = *0x45060c ^ &stack0xffffffc0;\n    *in_FS_OFFSET = &piStack12;\n    pcVar7 = NULL;\n    iVar1 = *(param_1 + 0x24);\n    uStack4 = 0;\n    if (param_2 == '\\0') {\n        (**(**(iVar1 + 0x1c) + 0x14))(uVar3);\n        uVar3 = *(*(param_1 + 0x24) + 0x1c);\n        cVar2 = fcn.0040e9a0(uVar3);\n        if (cVar2 == '\\0') {\n            uVar4 = 0;\n            goto code_r0x0040f514;\n        }\n        iStack48 = 0;\n    }\n    else {\n        iStack36 = *(iVar1 + 0x30);\n        iStack48 = *(iVar1 + 0x40);\n    }\n    arg_ch = 0;\n    iVar1 = *(param_1 + 0x34);\n    iVar6 = 0;\n    iStack40 = 0;\n    iVar5 = iVar6;\n    if (0 < iVar1) {\n        do {\n            if ((pcVar7 < 0) || (*(param_1 + 0x34) <= pcVar7)) {\ncode_r0x0040f4b7:\n                fcn.0041944d(uVar3);\n                goto code_r0x0040f4bc;\n            }\n            iVar6 = *(*(param_1 + 0x30) + pcVar7 * 4);\n            arg_ch = *(iVar6 + 0x28) + iStack48;\n            if ((*(iVar6 + 0xc) & 1) == 0) {\n                *(iVar6 + 0xc) = *(iVar6 + 0xc) & 0xfff7;\n                *(arg_ch + 6) = *(iVar6 + 0xc);\n                iStack44 = 0x10;\n            }\n            else {\n                iStack44 = 0;\n            }\n            uVar3 = arg_ch + 0xe;\n            fcn.00411350();\n            iVar5 = iStack40;\n            if (pcVar7 != 0x3) {\n                if ((pcVar7 + 1 < 0) || (*(param_1 + 0x34) <= pcVar7 + 1)) goto code_r0x0040f4b7;\n                iVar5 = *(*(*(param_1 + 0x30) + 4 + pcVar7 * 4) + 0x28);\n            }\n            iVar5 = (iVar5 - *(iVar6 + 0x28)) - iStack48;\n            fcn.0042b350(iStack44 + unaff_EBX, arg_ch, iVar5);\n            *(iVar6 + 0x28) = *(iVar6 + 0x28) - iStack36;\n            iStack36 = iStack36 + iStack48;\n            arg_ch = iStack44 + iVar5;\n            pcVar7 = pcVar7 + 1;\n            param_1 = iVar1;\n            iVar5 = arg_ch;\n        } while (pcVar7 < 4);\n    }\n    pcVar7 = _sym.imp.KERNEL32.dll_UnmapViewOfFile;\n    arg_ch = 0;\n    iVar6 = iVar5;\n    if (param_2 == '\\0') {\ncode_r0x0040f4bc:\n        *(*(param_1 + 0x24) + 0x48) = iVar6;\n        if (arg_ch != 0) {\n            (*pcVar7)(arg_ch);\n            arg_ch = 0;\n        }\n        (**(**(*(param_1 + 0x24) + 0x1c) + 0x18))(iVar6, 0);\n    }\n    else {\n        *(*(param_1 + 0x24) + 0x30) = iVar5;\n    }\n    if (arg_ch != 0) {\n        (*pcVar7)(arg_ch);\n    }\n    uVar4 = 1;\ncode_r0x0040f514:\n    *in_FS_OFFSET = piStack12;\n    return uVar4;\n}\n",
        "token_count": 1169
    },
    "0040f680": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0040f680(int32_t param_1, char param_2)\n\n{\n    *(param_1 + 0x20) = 0;\n    fcn.0040e820();\n    if (param_2 != '\\0') {\n        fcn.0040f530();\n        fcn.0040ec70(0, 0xffffffff);\n        fcn.0040e820();\n    }\n    return;\n}\n",
        "token_count": 99
    },
    "0040f790": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0040f790(int32_t param_1, char param_2)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    int32_t *unaff_ESI;\n    int32_t **in_FS_OFFSET;\n    int32_t *in_stack_ffffffcc;\n    int32_t *piVar3;\n    int32_t *piStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x43eff8;\n    piStack12 = *in_FS_OFFSET;\n    uVar2 = *0x45060c ^ &stack0xffffffe4;\n    *in_FS_OFFSET = &piStack12;\n    if (*(param_1 + 0x20) != 0) {\n        fcn.0040e820(uVar2);\n        if ((param_2 == '\\0') && ((*(*(param_1 + 0x20) + 0xc) >> 3 & 1) != 0)) {\n            piVar3 = 0xc;\n            in_stack_ffffffcc = unaff_ESI;\n            fcn.0040e940(0xc, 0);\n            piStack12 = NULL;\n            fcn.00413af0(in_stack_ffffffcc, 4, 0);\n            if (*piVar3 != str.PK_a_b._0_4_) {\n                (**(**(*(param_1 + 0x24) + 0x1c) + 0x10))(0xfffffffc, 0xffffffff, 1);\n            }\n            fcn.00413af0(piVar3, 0xc, 0);\n            cVar1 = fcn.00411320(in_stack_ffffffcc);\n            if (cVar1 == '\\0') {\n                fcn.0040f630(0x65);\n            }\n            fcn.0040e970();\n        }\n        *(param_1 + 0x20) = 0;\n    }\n    *in_FS_OFFSET = in_stack_ffffffcc;\n    return;\n}\n",
        "token_count": 455
    },
    "0040fd70": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040fd70(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    uint unaff_ESI;\n    int32_t iVar4;\n    int32_t **in_FS_OFFSET;\n    uchar auStack96 [72];\n    uint uStack24;\n    int32_t *piStack20;\n    uint32_t uStack16;\n    int32_t *piStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x43f138;\n    piStack12 = *in_FS_OFFSET;\n    uStack16 = *0x45060c ^ auStack96;\n    uVar2 = *0x45060c ^ &stack0xffffff94;\n    *in_FS_OFFSET = &piStack12;\n    fcn.0040ec70(0, 0xffffffff, uVar2);\n    *(param_1 + 0x60) = uStack4;\n    uVar3 = fcn.00413bd0(uStack4, 1);\n    iVar1 = *(param_1 + 0x34);\n    iVar4 = 0;\n    *(param_1 + 0x5c) = uVar3;\n    if (*(param_1 + 0x40) != '\\0') goto code_r0x0040fe3a;\n    if (0 < iVar1) {\n        do {\n            if ((iVar4 < 0) || (*(param_1 + 0x34) <= iVar4)) goto code_r0x0040fe35;\n            fcn.0040bea0(*(*(param_1 + 0x30) + iVar4 * 4));\n            uStack16 = 0;\n            if (*(param_1 + 0x40) == '\\0') {\n                fcn.00410750(&stack0xffffff94, 1);\n            }\n            fcn.0040fc60();\n            uStack24 = 0xffffffff;\n            fcn.004112b0();\n            iVar4 = iVar4 + 1;\n        } while (iVar4 < iVar1);\n    }\ncode_r0x0040fe5d:\n    *in_FS_OFFSET = piStack20;\n    fcn.004294b3(unaff_ESI);\n    return;\ncode_r0x0040fe35:\n    while( true ) {\n        fcn.0041944d();\ncode_r0x0040fe3a:\n        if (iVar1 < 1) break;\n        while ((-1 < iVar4 && (iVar4 < *(param_1 + 0x34)))) {\n            fcn.0040fc60(*(*(param_1 + 0x30) + iVar4 * 4), iVar4);\n            iVar4 = iVar4 + 1;\n            if (iVar1 <= iVar4) goto code_r0x0040fe5d;\n        }\n    }\n    goto code_r0x0040fe5d;\n}\n",
        "token_count": 657
    },
    "0040fe80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040fe80(int32_t param_1)\n\n{\n    code *pcVar1;\n    char cVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t *unaff_EBP;\n    int32_t iVar6;\n    int32_t **in_FS_OFFSET;\n    int32_t *piStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x43f16b;\n    piStack12 = *in_FS_OFFSET;\n    uVar3 = *0x45060c ^ &stack0xffffffe0;\n    *in_FS_OFFSET = &piStack12;\n    iVar4 = *(param_1 + 0x78) + *(param_1 + 0x68);\n    (**(**(*(param_1 + 0x24) + 0x1c) + 0x10))(iVar4, 0, 0, uVar3);\n    fcn.0040f530();\n    iVar5 = 0;\n    if (*(param_1 + 0x72) != 0) {\n        do {\n            iVar4 = fcn.004192dc(0x50);\n            iVar6 = 0;\n            if (iVar4 != 0) {\n                iVar6 = fcn.00411220();\n            }\n            fcn.0040f1b0(*(param_1 + 0x34), iVar6);\n            iVar4 = *(param_1 + 0x24);\n            cVar2 = fcn.00411390();\n            if (cVar2 == '\\0') {\n                fcn.0040f630(0x65);\n                pcVar1 = swi(3);\n                (*pcVar1)();\n                return;\n            }\n            if (*(param_1 + 0x40) == '\\x01') {\n                if (iVar6 == 0) {\n                    iVar6 = *(param_1 + 0x20);\n                }\n                fcn.00410750(iVar6, 1);\n            }\n            iVar5 = iVar5 + 1;\n        } while (iVar5 < *(param_1 + 0x72));\n    }\n    fcn.0040f2a0(iVar4);\n    if (*(param_1 + 0x58) != '\\0') {\n        fcn.0040fd70(*(param_1 + 0x60));\n    }\n    *in_FS_OFFSET = unaff_EBP;\n    return;\n}\n",
        "token_count": 558
    },
    "0040ff80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __thiscall fcn.0040ff80(int32_t param_1, int32_t *param_2)\n\n{\n    int32_t **ppiVar1;\n    uint16_t uVar2;\n    uint32_t uVar3;\n    char cVar4;\n    int32_t **ppiVar5;\n    int32_t iVar6;\n    int32_t *piVar7;\n    int32_t **ppiVar8;\n    int32_t iVar9;\n    int32_t **unaff_EBX;\n    int32_t iVar10;\n    int32_t **in_FS_OFFSET;\n    int32_t *unaff_retaddr;\n    int32_t *piVar11;\n    int32_t **ppiStack28;\n    int32_t iStack20;\n    int32_t *piStack12;\n    uint32_t uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x43f1a0;\n    piStack12 = *in_FS_OFFSET;\n    ppiVar5 = *0x45060c ^ &stack0xffffffd0;\n    *in_FS_OFFSET = &piStack12;\n    iVar9 = *(param_1 + 0x24);\n    *(param_1 + 0x70) = 0;\n    *(param_1 + 0x6e) = *(iVar9 + 0x50);\n    iVar6 = (**(**(iVar9 + 0x1c) + 0xc))(ppiVar5);\n    iVar10 = 0;\n    *(param_1 + 0x78) = (iVar6 + *(iVar9 + 0x30)) - *(param_1 + 0x68);\n    if (*(param_1 + 0x72) != 0) {\n        uVar2 = *(param_1 + 0x6e);\n        iStack20 = 0;\n        if (param_2 != NULL) {\n            (**(*param_2 + 4))(0, 0);\n            (**(*param_2 + 8))(*(param_1 + 0x72));\n            iStack20 = *0x44e6a0;\n        }\n        ppiStack28 = NULL;\n        piVar11 = param_2;\n        if (*(param_1 + 0x72) != 0) {\n            do {\n                if ((iVar10 < 0) || (*(param_1 + 0x34) <= iVar10)) {\n                    fcn.0041944d();\n                    goto code_r0x0041021f;\n                }\n                iVar9 = *(*(param_1 + 0x30) + iVar10 * 4);\n                piVar7 = fcn.0041a118();\n                piVar11 = unaff_retaddr;\n                if (piVar7 == NULL) goto code_r0x0041018d;\n                ppiVar8 = (**(*piVar7 + 0xc))();\n                unaff_EBX = ppiVar8 + 4;\n                piVar11 = NULL;\n                if (*(param_1 + 0x40) != '\\0') {\n                    ppiVar5 = &piStack12;\n                    fcn.004118d0(ppiVar5);\n                    uStack4 = CONCAT31(uStack4._1_3_, 1);\n                    fcn.00402100();\n                    uStack8 = uStack8 & 0xffffff00;\n                    piVar7 = iStack20 + -4;\n                    LOCK();\n                    iVar6 = *piVar7;\n                    *piVar7 = *piVar7 + -1;\n                    if (iVar6 == 1 || iVar6 + -1 < 0) {\n                        (**(**(iStack20 + -0x10) + 4))(iStack20 + -0x10);\n                    }\n                }\n                if (*(param_1 + 0x40) == '\\x01') {\n                    if (iVar9 == 0) {\n                        iVar9 = *(param_1 + 0x20);\n                    }\n                    ppiVar5 = NULL;\n                    fcn.00410750(iVar9, 0);\n                }\n                iVar9 = fcn.004115a0();\n                *(param_1 + 0x74) = *(param_1 + 0x74) + iVar9;\n                if (*(param_1 + 0x40) != '\\0') {\n                    fcn.00411370(unaff_EBX);\n                }\n                if (*(*(param_1 + 0x24) + 0x50) == (unaff_EBX & 0xffff)) {\n                    *(param_1 + 0x70) = *(param_1 + 0x70) + 1;\n                    ppiStack28 = unaff_EBX;\n                }\n                else {\n                    *(param_1 + 0x70) = 1;\n                    uVar3 = *(*(param_1 + 0x24) + 0x50);\n                    ppiStack28 = uVar3 & 0xffff;\n                    if (iVar10 == 0) {\n                        *(param_1 + 0x78) = 0;\n                        *(param_1 + 0x6e) = uVar3;\n                    }\n                }\n                if (((piVar11 != NULL) && (iVar10 % uVar2 == 0)) && (cVar4 = (***piVar11)(uVar2),  cVar4 == '\\0'))\n                goto code_r0x00410197;\n                uStack8 = 0xffffffff;\n                ppiVar1 = ppiVar8 + 3;\n                LOCK();\n                piVar7 = *ppiVar1;\n                *ppiVar1 = *ppiVar1 + -1;\n                if (piVar7 == 0x1 || piVar7 + -1 < 0) {\n                    (**(**ppiVar8 + 4))(ppiVar8);\n                }\n                iVar10 = iVar10 + 1;\n                unaff_retaddr = piVar11;\n            } while (iVar10 < *(param_1 + 0x72));\n        }\n        while( true ) {\n            if (piVar11 != NULL) {\n                (**(*piVar11 + 0xc))();\n            }\n            piVar11 = unaff_retaddr;\n            if (ppiStack28 == NULL) break;\n            ppiVar5 = ppiStack28;\n            fcn.0040f630();\ncode_r0x0041018d:\n            fcn.00401090(0x80004005, ppiVar5);\ncode_r0x00410197:\n            if (param_2 != '\\0') {\n                iVar9 = *(param_1 + 0x24);\n                if ((*(iVar9 + 0x20) == 0) || ((*(iVar9 + 0x4c) != '\\0') * '\\x02' == '\\x01')) {\n                    *(iVar9 + 0x30) = 0;\n                }\n                else {\n                    fcn.00412ed0();\n                }\n                (**(**(*(param_1 + 0x24) + 0x1c) + 0x18))(*(param_1 + 0x78) + *(param_1 + 0x68), 0);\n            }\n            uStack8 = 0xffffffff;\n            ppiVar5 = unaff_EBX + -1;\n            LOCK();\n            piVar7 = *ppiVar5;\n            *ppiVar5 = *ppiVar5 + -1;\n            unaff_retaddr = piVar11;\n            if (piVar7 == 0x1 || piVar7 + -1 < 0) {\n                (**(*unaff_EBX[-4] + 4))(unaff_EBX + -4);\n                unaff_retaddr = piVar11;\n            }\n        }\n    }\ncode_r0x0041021f:\n    *in_FS_OFFSET = piStack12;\n    return;\n}\n",
        "token_count": 1727
    },
    "00410240": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00410240(int32_t param_1)\n\n{\n    uint16_t uVar1;\n    uint32_t uVar2;\n    uint *puVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    int32_t **in_FS_OFFSET;\n    uint uVar6;\n    int32_t *piStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x43f028;\n    piStack12 = *in_FS_OFFSET;\n    uVar2 = *0x45060c ^ &stack0xffffffe0;\n    *in_FS_OFFSET = &piStack12;\n    puVar3 = fcn.0040fab0(uVar2);\n    *(param_1 + 100) = puVar3;\n    uVar6 = 0;\n    (**(**(*(param_1 + 0x24) + 0x1c) + 0x10))(puVar3, 0, 0);\n    fcn.0040e940(0x16);\n    iVar4 = (**(**(*(param_1 + 0x24) + 0x1c) + 0x28))(uVar6, 0x16);\n    if (iVar4 != 0x16) {\n        fcn.0040f630(0x65);\n    }\n    *(param_1 + 4) = *puVar3;\n    *(param_1 + 0x6c) = *(puVar3 + 1);\n    *(param_1 + 0x6e) = *(puVar3 + 6);\n    *(param_1 + 0x70) = *(puVar3 + 2);\n    *(param_1 + 0x72) = *(puVar3 + 10);\n    *(param_1 + 0x74) = puVar3[3];\n    *(param_1 + 0x78) = puVar3[4];\n    uVar1 = *(puVar3 + 5);\n    fcn.0040e820();\n    fcn.00412bb0(*(param_1 + 0x6c));\n    if (((*(*(param_1 + 0x24) + 0x20) == 0) || ((*(*(param_1 + 0x24) + 0x4c) != '\\0') * '\\x02' == '\\x01')) &&\n       (*(param_1 + 100) < *(param_1 + 0x78) + *(param_1 + 0x74))) {\n        fcn.0040f630(0x65);\n    }\n    if (uVar1 != 0) {\n        uVar5 = uVar1;\n        uVar6 = 0;\n        fcn.0040e850(uVar5, 0);\n        uVar2 = (**(**(*(param_1 + 0x24) + 0x1c) + 0x28))(*(param_1 + 0xc), uVar5);\n        if (uVar2 != uVar5) {\n            fcn.0040f630(uVar6, 0x65);\n        }\n    }\n    if (*(*(param_1 + 0x24) + 0x20) == 0) {\n        iVar4 = 0;\n    }\n    else {\n        iVar4 = (*(*(param_1 + 0x24) + 0x4c) != '\\0') * 2 + -1;\n    }\n    if (iVar4 == 0) {\n        iVar4 = (*(param_1 + 100) - *(param_1 + 0x78)) - *(param_1 + 0x74);\n    }\n    else {\n        iVar4 = 0;\n    }\n    *(param_1 + 0x68) = iVar4;\n    if (((*(param_1 + 0x74) == 0) && (*(param_1 + 0x72) != 0)) || ((*(param_1 + 0x72) == 0 && (*(param_1 + 0x74) != 0)))\n       ) {\n        fcn.0040f630(0x65);\n    }\n    *(param_1 + 0x7c) = 1;\n    fcn.004139e0(*(param_1 + 0x6e));\n    if (*(param_1 + 0x74) != 0) {\n        fcn.0040fe80();\n    }\n    fcn.0040e970();\n    *in_FS_OFFSET = NULL;\n    return;\n}\n",
        "token_count": 1012
    },
    "00410400": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00410400(int32_t param_1, uint param_2)\n\n{\n    int32_t *piVar1;\n    bool bVar2;\n    char cVar3;\n    ushort uVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    int32_t *in_FS_OFFSET;\n    uint var_8h;\n    uint var_10h;\n    uint var_ch;\n    uint var_18h;\n    uint var_11h;\n    int32_t var_ch_2;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x43f1c0;\n    var_ch_2 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_ch_2;\n    if (*(param_1 + 0x7c) != '\\0') goto code_r0x004105b0;\n    if ((*(*(param_1 + 0x24) + 0x20) == 0) || ((*(*(param_1 + 0x24) + 0x4c) != '\\0') * '\\x02' == '\\x01')) {\n        fcn.00412ed0();\n        (**(**(*(param_1 + 0x24) + 0x1c) + 0x20))();\n    }\n    iVar6 = *(param_1 + 0x24);\n    bVar2 = false;\n    *(param_1 + 0x72) = *(param_1 + 0x34);\n    *(param_1 + 0x74) = 0;\n    if (((*(iVar6 + 0x20) != 0) && ((*(iVar6 + 0x4c) != '\\0') * '\\x02' != '\\x01')) && (*(iVar6 + 0x50) == 0)) {\n        uVar5 = fcn.00412910();\n        iVar6 = fcn.0040f2d0(1);\n        uVar7 = iVar6 + *(param_1 + 0x72) * -0x10 + -4;\n        if (uVar7 <= uVar5) {\n            iVar6 = *(param_1 + 0x24);\n            if ((*(iVar6 + 0x48) == 0) && (uVar7 <= *(iVar6 + 0x44) - *(iVar6 + 0x30))) {\n                fcn.0040f320(1);\n            }\n            else {\n                fcn.00412ed0();\n                cVar3 = fcn.0040f320(0);\n                if (cVar3 == '\\0') goto code_r0x004104f0;\n            }\n            bVar2 = true;\n        }\n    }\ncode_r0x004104f0:\n    var_4h = 0;\n    if (((bVar2) || (*(*(param_1 + 0x24) + 0x20) == 0)) ||\n       (uVar5 = (*(*(param_1 + 0x24) + 0x4c) != '\\0') * 2 - 1,  uVar5 == 0)) {\n        uVar5 = 1;\n    }\n    else {\n        uVar5 = uVar5 & 0xffffff00;\n    }\n    fcn.0040ff80(var_8h, uVar5);\n    *(param_1 + 0x6c) = *(*(param_1 + 0x24) + 0x50);\n    uVar5 = fcn.0040f890();\n    if ((bVar2) && (*(*(param_1 + 0x24) + 0x50) != 0)) {\n        fcn.0040f630(0x65);\n    }\n    uVar7 = *(*(param_1 + 0x24) + 0x50);\n    if (*(param_1 + 0x6c) != uVar7) {\n        uVar4 = uVar7;\n        *(param_1 + 0x6c) = uVar4;\n        if (*(param_1 + 0x72) == 0) {\n            *(param_1 + 0x6e) = uVar4;\n            *(param_1 + 0x78) = 0;\n        }\n        else {\n            *(param_1 + 0x70) = 0;\n        }\n        if (*(*(param_1 + 0x24) + 0x30) < uVar5) {\n            fcn.00412ed0();\n            piVar1 = *(param_1 + 0x24) + 0x48;\n            *piVar1 = *piVar1 - uVar5;\n            (**(**(*(param_1 + 0x24) + 0x1c) + 0x1c))();\n        }\n        else {\n            piVar1 = *(param_1 + 0x24) + 0x30;\n            *piVar1 = *piVar1 - uVar5;\n        }\n        fcn.0040f890();\n    }\n    *(param_1 + 0x7c) = 1;\ncode_r0x004105b0:\n    *in_FS_OFFSET = var_ch_2;\n    return;\n}\n",
        "token_count": 1175
    },
    "00410680": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint fcn.00410680(int32_t param_1)\n\n{\n    if ((((param_1 != 0) && (param_1 != 3)) && (param_1 != 7)) && ((param_1 != 10 && (param_1 != 6)))) {\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 75
    },
    "00410710": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00410710(int32_t param_1, char param_2)\n\n{\n    uint32_t uVar1;\n    char *pcVar2;\n    char cVar3;\n    char cVar4;\n    \n    if (param_2 == '\\0') {\n        cVar4 = '/';\n        cVar3 = '\\\\';\n    }\n    else {\n        cVar4 = '\\\\';\n        cVar3 = '/';\n    }\n    uVar1 = 0;\n    if (*(param_1 + 8) != 0) {\n        do {\n            pcVar2 = *(param_1 + 4) + uVar1;\n            if (*pcVar2 == cVar3) {\n                *pcVar2 = cVar4;\n            }\n            uVar1 = uVar1 + 1;\n        } while (uVar1 < *(param_1 + 8));\n    }\n    return;\n}\n",
        "token_count": 195
    },
    "00410750": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00410750(int32_t param_1, char param_2)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    \n    cVar1 = *(param_1 + 9);\n    iVar2 = fcn.00412100();\n    if (param_2 == '\\0') {\n        if (cVar1 == '\\0') {\n            fcn.00412180(param_1 + 0x38, 1);\n        }\n        fcn.00410710(param_1 + 0x38, 0);\n    }\n    else {\n        if (iVar2 == 0) {\n            fcn.00410710(param_1 + 0x38, 1);\n        }\n        if (cVar1 == '\\0') {\n            fcn.00412180(param_1 + 0x38, 0);\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 198
    },
    "00410a20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t * fcn.00410a20(int32_t param_1, char param_2)\n\n{\n    char cVar1;\n    bool bVar2;\n    uint32_t uVar3;\n    int32_t *piVar4;\n    int32_t iVar5;\n    int32_t *piVar6;\n    uint *puVar7;\n    uint uVar8;\n    char *pcVar9;\n    char **ppcVar10;\n    char *pcVar11;\n    int32_t unaff_EBP;\n    int32_t **in_FS_OFFSET;\n    int32_t *unaff_retaddr;\n    uint uStack24;\n    uint auStack20 [2];\n    int32_t *piStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack8 = 0x43f28a;\n    piStack12 = *in_FS_OFFSET;\n    uVar3 = *0x45060c ^ &stack0xffffffd8;\n    *in_FS_OFFSET = &piStack12;\n    uStack4 = 0;\n    uStack24 = 0;\n    piVar4 = fcn.0041a118(uVar3);\n    if (piVar4 == NULL) {\n        piVar4 = fcn.00401090(0x80004005);\n    }\n    iVar5 = (**(*piVar4 + 0xc))();\n    *unaff_retaddr = iVar5 + 0x10;\n    bVar2 = false;\n    uStack8 = 0;\n    piVar4 = 0x1;\n    if (param_1 < 0x1f5) {\n    // switch table (116 cases) at 0x410ecc\n        switch(param_1) {\n        case 1:\n            fcn.00402e60(\"Not super-user\");\n            break;\n        case 2:\n            fcn.00402e60(\"No such file or directory\");\n            break;\n        case 3:\n        case 7:\n        case 8:\n        case 10:\n        case 0xb:\n        case 0xf:\n        case 0x10:\n        case 0x19:\n        case 0x1a:\n        case 0x1f:\n        case 0x20:\n        case 0x21:\n        case 0x22:\n        case 0x23:\n        case 0x24:\n        case 0x25:\n        case 0x26:\n        case 0x27:\n        case 0x28:\n        case 0x29:\n        case 0x2a:\n        case 0x2b:\n        case 0x2c:\n        case 0x2d:\n        case 0x2e:\n        case 0x2f:\n        case 0x30:\n        case 0x31:\n        case 0x32:\n        case 0x33:\n        case 0x34:\n        case 0x35:\n        case 0x36:\n        case 0x37:\n        case 0x38:\n        case 0x39:\n        case 0x3a:\n        case 0x3b:\n        case 0x3c:\n        case 0x3d:\n        case 0x3e:\n        case 0x3f:\n        case 0x40:\n        case 0x41:\n        case 0x42:\n        case 0x43:\n        case 0x44:\n        case 0x45:\n        case 0x46:\n        case 0x47:\n        case 0x48:\n        case 0x49:\n        case 0x4a:\n        case 0x4b:\n        case 0x4c:\n        case 0x4d:\n        case 0x4e:\n        case 0x4f:\n        case 0x50:\n        case 0x51:\n        case 0x52:\n        case 0x53:\n        case 0x54:\n        case 0x55:\n        case 0x56:\n        case 0x57:\n        case 0x58:\n        case 0x59:\n        case 0x5a:\n        case 0x5b:\n        case 0x5c:\n        case 0x5d:\n        case 0x5e:\n        case 0x5f:\n        case 0x60:\n        case 0x61:\n        case 0x62:\n        case 99:\n        case 100:\n            goto code_r0x00410e33;\n        case 4:\n            fcn.00402e60(\"Interrupted system call\");\n            break;\n        case 5:\n            fcn.00402e60(\"I/O error\");\n            break;\n        case 6:\n            fcn.00402e60(\"No such device or address\");\n            break;\n        case 9:\n            fcn.00402e60(\"Bad file number\");\n            break;\n        case 0xc:\n            fcn.00402e60(\"Not enough space\");\n            break;\n        case 0xd:\n            fcn.00402e60(\"Permission denied\");\n            break;\n        case 0xe:\n            fcn.00402e60(\"Bad address\");\n            break;\n        case 0x11:\n            fcn.00402e60(\"File exists\");\n            break;\n        case 0x12:\n            fcn.00402e60(\"Cross-device link\");\n            break;\n        case 0x13:\n            fcn.00402e60(\"No such device\");\n            break;\n        case 0x14:\n            fcn.00402e60(\"Not a directory\");\n            break;\n        case 0x15:\n            fcn.00402e60(\"Is a directory\");\n            break;\n        case 0x16:\n            fcn.00402e60(\"Invalid argument\");\n            break;\n        case 0x17:\n            fcn.00402e60(\"File table overflow\");\n            break;\n        case 0x18:\n            fcn.00402e60(\"Too many open files\");\n            break;\n        case 0x1b:\n            fcn.00402e60(\"File too large\");\n            break;\n        case 0x1c:\n            fcn.00402e60(\"No space left on device\");\n            break;\n        case 0x1d:\n            fcn.00402e60(\"Illegal seek\");\n            break;\n        case 0x1e:\n            fcn.00402e60(\"Read-only file system\");\n            break;\n        case 0x65:\n            fcn.00402e60(\"Damaged or not a zip file\");\n            break;\n        case 0x66:\n            fcn.00402e60(\"Crc mismatched\");\n            break;\n        case 0x67:\n            fcn.00402e60(\"No disk-spanning callback functor set\");\n            break;\n        case 0x68:\n            fcn.00402e60(\"Disk change aborted\");\n            break;\n        case 0x69:\n            fcn.00402e60(\"Action aborted\");\n            break;\n        case 0x6a:\n            fcn.00402e60(\"Action aborted safely\");\n            break;\n        case 0x6b:\n            fcn.00402e60(\"The device selected for the disk spanning archive is non removable\");\n            break;\n        case 0x6c:\n            fcn.00402e60(\"Limit of the maximum volumes reached (999)\");\n            break;\n        case 0x6d:\n            fcn.00402e60(\"The filename of the file being added to the archive is too long\");\n            break;\n        case 0x6e:\n            fcn.00402e60(\"Incorrect password set for the file being decrypted\");\n            break;\n        case 0x6f:\n            fcn.00402e60(\"During testing found the directory with the size greater than 0\");\n            break;\n        case 0x70:\n            fcn.00402e60(\"Internal error\");\n            break;\n        case 0x71:\n            puVar7 = fcn.00410930(&param_2);\n            piStack12 = 0x1;\n            fcn.004061c0(unaff_retaddr, \"%s (%s)\", \"Error while removing a file\", *puVar7);\n            fcn.004015e0();\n            break;\n        case 0x72:\n            puVar7 = fcn.00410930(&param_1);\n            piStack12 = 0x2;\n            fcn.004061c0(unaff_retaddr, \"%s (%s)\", \"Error while renaming a file\", *puVar7);\n            fcn.004015e0();\n            break;\n        case 0x73:\n            fcn.00402e60(\"Cannot create the file for the specified platform\");\n            break;\n        case 0x74:\n            fcn.00402e60(\n                        \"The central directory was not found in the archive (or you were trying to open not the last disk of a multi-disk archive)\"\n                        );\n            break;\n        default:\n            fcn.00401aa0(\"Zlib Library error (end of stream)\", 0x22);\n        }\n        goto code_r0x00410e86;\n    }\n    // switch table (6 cases) at 0x410fd8\n    switch(param_1) {\n    case 0x1f6:\n        piVar6 = fcn.0042b75c();\n        if (*piVar6 == 0x1f6) {\n            uVar8 = 100;\n        }\n        else {\n            puVar7 = fcn.0042b75c();\n            uVar8 = *puVar7;\n        }\n        uVar8 = fcn.00410a20(&uStack24, uVar8, 0);\n        auStack20[0] = 3;\n        fcn.00402100(uVar8);\n        fcn.004015e0();\n        break;\n    case 0x1f7:\n        fcn.00402e60(\"Zlib library error (stream error)\");\n        break;\n    case 0x1f8:\n        fcn.00402e60(\"Zlib library error (data error)\");\n        break;\n    case 0x1f9:\n        fcn.00402e60(\"Not enough memory\");\n        break;\n    case 0x1fa:\n        fcn.00402e60(\"Zlib library error (buffer error)\");\n        break;\n    case 0x1fb:\n        fcn.00402e60(\"Zlib library error (version error)\");\n        break;\n    default:\ncode_r0x00410e33:\n        if (param_2 == '\\0') {\n            ppcVar10 = fcn.00410930(auStack20);\n            pcVar11 = *ppcVar10;\n            bVar2 = true;\n            piStack12 = 0x4;\n            unaff_EBP = 3;\n            if (pcVar11 != NULL) goto code_r0x00410e3f;\n            iVar5 = 0;\n        }\n        else {\n            pcVar11 = \"Unknown error\";\ncode_r0x00410e3f:\n            pcVar9 = pcVar11;\n            do {\n                cVar1 = *pcVar9;\n                pcVar9 = pcVar9 + 1;\n            } while (cVar1 != '\\0');\n            iVar5 = pcVar9 - (pcVar11 + 1);\n        }\n        fcn.00401aa0(pcVar11, iVar5);\n        auStack20[0] = 0;\n        if (bVar2) {\n            piVar6 = unaff_EBP + -4;\n            LOCK();\n            iVar5 = *piVar6;\n            *piVar6 = *piVar6 + -1;\n            if (iVar5 == 1 || iVar5 + -1 < 0) {\n                (**(**(unaff_EBP + -0x10) + 4))(unaff_EBP + -0x10);\n            }\n        }\n    }\ncode_r0x00410e86:\n    *in_FS_OFFSET = piVar4;\n    return unaff_retaddr;\n}\n",
        "token_count": 2664
    },
    "00411860": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.00411860(int32_t param_1, char param_2)\n\n{\n    if (param_2 != '\\0') {\n        return *(param_1 + 0x40) + 0x1e + *(param_1 + 0x34);\n    }\n    return *(param_1 + 0x4c) + *(param_1 + 0x40) + 0x2e + *(param_1 + 0x34);\n}\n",
        "token_count": 110
    },
    "00411970": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00411970(int32_t param_1)\n\n{\n    uchar uVar1;\n    int32_t iVar2;\n    char cVar3;\n    uint32_t uVar4;\n    uint uVar5;\n    int32_t *piVar6;\n    int32_t iVar7;\n    int32_t **in_FS_OFFSET;\n    bool bVar8;\n    char cVar9;\n    int32_t *piStack20;\n    int32_t *piStack16;\n    int32_t *piStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x43f401;\n    piStack12 = *in_FS_OFFSET;\n    uVar4 = *0x45060c ^ &stack0xffffffd8;\n    *in_FS_OFFSET = &piStack12;\n    bVar8 = false;\n    uVar1 = *(param_1 + 9);\n    cVar3 = fcn.00410680(uVar1, uVar4);\n    if (cVar3 == '\\0') {\n        piVar6 = fcn.004118d0(&piStack16);\n        iVar2 = *(*piVar6 + -0xc);\n        uStack8 = 1;\n        if (iVar2 != 0) {\n            iVar7 = iVar2 + -1;\n            if ((iVar7 < 0) || (iVar2 < iVar7)) {\n                fcn.00401090(0x80070057);\n            }\n            else {\n                cVar3 = *(*piVar6 + iVar7);\n                if ((cVar3 == '\\\\') || (cVar3 == '/')) {\n                    uVar5 = fcn.004120f0();\n                    goto code_r0x00411aa4;\n                }\n            }\n        }\n        uVar5 = fcn.004120e0();\ncode_r0x00411aa4:\n        piStack12 = 0xffffffff;\n        LOCK();\n        iVar2 = *0xfffffffc + -1;\n        iVar7 = *0xfffffffc + -1;\n        bVar8 = *0xfffffffc == 1;\n        *0xfffffffc = iVar2;\n        if (bVar8 || iVar7 < 0) {\n            (**(**0xfffffff0 + 4))(0xfffffff0);\n        }\n        *in_FS_OFFSET = piStack20;\n        return uVar5;\n    }\n    if (*(param_1 + 0x24) == 0) {\n        uVar5 = fcn.004118d0(&piStack20);\n        uStack8 = 0;\n        bVar8 = true;\n        cVar3 = fcn.00411890(uVar5);\n        cVar9 = '\\x01';\n        if (cVar3 != '\\0') goto code_r0x004119e7;\n    }\n    cVar9 = '\\0';\ncode_r0x004119e7:\n    uStack8 = 0xffffffff;\n    if (bVar8) {\n        LOCK();\n        iVar2 = *0xfffffffc + -1;\n        iVar7 = *0xfffffffc + -1;\n        bVar8 = *0xfffffffc == 1;\n        *0xfffffffc = iVar2;\n        if (bVar8 || iVar7 < 0) {\n            (**(**0xfffffff0 + 4))(0xfffffff0);\n        }\n    }\n    if (cVar9 != '\\0') {\n        uVar5 = fcn.004120f0();\n        *in_FS_OFFSET = piStack16;\n        return uVar5;\n    }\n    uVar5 = fcn.00412100();\n    uVar5 = fcn.004106b0(*(param_1 + 0x24), uVar1, uVar5);\n    *in_FS_OFFSET = piStack16;\n    return uVar5;\n}\n",
        "token_count": 838
    },
    "00411c40": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00411c40(uint param_1)\n\n{\n    int32_t *piVar1;\n    char cVar2;\n    uint uVar3;\n    char *pcVar4;\n    uint32_t arg_8h;\n    uint32_t uVar5;\n    int32_t unaff_EBP;\n    int32_t unaff_ESI;\n    int32_t iVar6;\n    int32_t unaff_EDI;\n    int32_t iVar7;\n    int32_t *in_FS_OFFSET;\n    uchar *puVar8;\n    int32_t iStack848;\n    uint uStack836;\n    char *pcStack832;\n    uint uStack828;\n    uint32_t uStack824;\n    int32_t iStack804;\n    char acStack596 [24];\n    uchar auStack572 [220];\n    char acStack352 [36];\n    uchar auStack316 [216];\n    int32_t iStack100;\n    uint uStack92;\n    uchar uStack48;\n    uchar uStack44;\n    uchar uStack36;\n    uchar uStack32;\n    uchar uStack20;\n    uint32_t uStack16;\n    uint uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x43f457;\n    uStack12 = *in_FS_OFFSET;\n    uStack16 = *0x45060c ^ &stack0xfffffcdc;\n    uStack824 = *0x45060c ^ &stack0xfffffccc;\n    *in_FS_OFFSET = &stack0xfffffff4;\n    uStack828 = param_1;\n    pcStack832 = 0x411c8e;\n    fcn.00403c70();\n    pcStack832 = \"\\\\\\\\?\\\\unc\\\\\";\n    uStack8 = 0;\n    uStack836 = 0x411ca7;\n    fcn.00403c70();\n    iVar6 = -1;\n    uStack12 = CONCAT31(uStack12._1_3_, 1);\n    iVar7 = *(iStack804 + -0xc);\n    if (*(unaff_EBP + -0xc) < *(iStack804 + -0xc)) {\n        iVar7 = *(unaff_EBP + -0xc);\n    }\n    uStack836 = iVar7;\n    fcn.00401cb0(&stack0xfffffcd8);\n    uStack20 = 2;\n    fcn.0040d400();\n    do {\n        iVar6 = iVar6 + 1;\n        if (iVar7 <= iVar6) break;\n        if ((iVar6 < 0) || (*(unaff_ESI + -0xc) < iVar6)) {\ncode_r0x00411d2d:\n            fcn.00401090(0x80070057);\n            goto code_r0x00411d37;\n        }\n        if (*(unaff_EBP + -0xc) < iVar6) goto code_r0x00411d2d;\n    } while ((iVar6 + unaff_EBP)[unaff_ESI - unaff_EBP] == *(iVar6 + unaff_EBP));\n    if (((iVar6 == 2) || (iVar6 == 4)) || (iVar6 == 8)) {\ncode_r0x00411d37:\n        uVar3 = fcn.00401cb0(&stack0xfffffcd8);\n        uStack32 = 3;\n        fcn.00402100(uVar3);\n        uStack36 = 2;\n        piVar1 = unaff_EDI + -4;\n        LOCK();\n        iVar7 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n        if (iVar7 == 1 || iVar7 + -1 < 0) {\n            (**(**(unaff_EDI + -0x10) + 4))(unaff_EDI + -0x10);\n        }\n        uVar3 = fcn.0040d600(&stack0xfffffccc, iVar6);\n        uStack44 = 4;\n        fcn.00402100(uVar3);\n        uStack48 = 2;\n        piVar1 = pcStack832 + -4;\n        LOCK();\n        iVar7 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n        iStack848 = iVar6;\n        if (iVar7 == 1 || iVar7 + -1 < 0) {\n            (**(**(pcStack832 + -0x10) + 4))(pcStack832 + -0x10);\n        }\n    }\n    else {\n        fcn.00401600();\n    }\n    fcn.0042958a(iStack848, &stack0xfffffcbc, 3, &stack0xfffffcc4, 0x100, &stack0xfffffec4, 0x100, &stack0xfffffdc4, \n                 0x100);\n    pcVar4 = &stack0xfffffcbc;\n    do {\n        cVar2 = *pcVar4;\n        pcVar4 = pcVar4 + 1;\n    } while (cVar2 != '\\0');\n    fcn.00401aa0(&stack0xfffffcbc, pcVar4 - &stack0xfffffcbd);\n    pcVar4 = &stack0xfffffcbc;\n    do {\n        cVar2 = *pcVar4;\n        pcVar4 = pcVar4 + 1;\n    } while (cVar2 != '\\0');\n    puVar8 = &stack0xfffffcbc;\n    fcn.00401aa0(puVar8, pcVar4 - &stack0xfffffcbd);\n    uVar5 = *0x4429d1;\n    fcn.00411bb0();\n    arg_8h = *0x4429d1;\n    fcn.00401be0();\n    pcVar4 = &stack0xfffffdac;\n    do {\n        cVar2 = *pcVar4;\n        pcVar4 = pcVar4 + 1;\n    } while (cVar2 != '\\0');\n    fcn.00401aa0(&stack0xfffffdac, pcVar4 - &stack0xfffffdad);\n    fcn.00411bb0(0x2e);\n    pcVar4 = &stack0xfffffea0;\n    do {\n        cVar2 = *pcVar4;\n        pcVar4 = pcVar4 + 1;\n    } while (cVar2 != '\\0');\n    fcn.00401aa0(&stack0xfffffea0, pcVar4 - &stack0xfffffea1);\n    uStack92._0_1_ = 1;\n    piVar1 = uVar5 - 4;\n    LOCK();\n    iVar7 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar7 + -1 < 1) {\n        (**(**(uVar5 - 0x10) + 4))(uVar5 - 0x10);\n    }\n    uStack92 = uStack92._1_3_ << 8;\n    piVar1 = puVar8 + -4;\n    LOCK();\n    iVar7 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar7 + -1 < 1) {\n        (**(**(puVar8 + -0x10) + 4))(puVar8 + -0x10);\n    }\n    uStack92 = 0xffffffff;\n    piVar1 = arg_8h - 4;\n    LOCK();\n    iVar7 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar7 == 1 || iVar7 + -1 < 0) {\n        (**(**(arg_8h - 0x10) + 4))(arg_8h - 0x10);\n    }\n    *in_FS_OFFSET = iStack100;\n    fcn.004294b3(arg_8h);\n    return;\n}\n",
        "token_count": 1754
    },
    "00412180": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00412180(int32_t param_1, char param_2)\n\n{\n    uint uVar1;\n    \n    uVar1 = *(param_1 + 4);\n    if (param_2 != '\\0') {\n        (*_sym.imp.USER32.dll_CharToOemBuffA)(uVar1, uVar1, *(param_1 + 8));\n        return;\n    }\n    (*_sym.imp.USER32.dll_OemToCharBuffA)(uVar1, uVar1, *(param_1 + 8));\n    return;\n}\n",
        "token_count": 123
    },
    "00412240": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint32_t fcn.00412240(int32_t param_1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint *puVar4;\n    int32_t iVar5;\n    int32_t **in_FS_OFFSET;\n    int32_t *piStack24;\n    int32_t *piStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x43f4d8;\n    piStack12 = *in_FS_OFFSET;\n    uVar3 = *0x45060c ^ &stack0xffffffd4;\n    *in_FS_OFFSET = &piStack12;\n    fcn.0040cd80(param_1, uVar3);\n    uStack8 = 0;\n    puVar4 = fcn.00412210(&stack0xffffffd4);\n    iVar5 = (*_sym.imp.KERNEL32.dll_GetDriveTypeA)(*puVar4);\n    piVar1 = param_1 + -4;\n    LOCK();\n    iVar2 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar2 == 1 || iVar2 + -1 < 0) {\n        (**(**(param_1 + -0x10) + 4))(param_1 + -0x10);\n    }\n    uVar3 = fcn.00411b00();\n    *in_FS_OFFSET = piStack24;\n    return uVar3 & 0xffffff00 | iVar5 == 2;\n}\n",
        "token_count": 348
    },
    "00412910": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00412910(int32_t param_1)\n\n{\n    if (*(param_1 + 0x20) == 1) {\n        return *(param_1 + 0x34) - *(param_1 + 0x30);\n    }\n    return (*(param_1 + 0x34) - *(param_1 + 0x30)) - *(param_1 + 0x48);\n}\n",
        "token_count": 97
    },
    "00412bb0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __thiscall fcn.00412bb0(int32_t param_1, uint32_t param_2, uint param_3, uint param_4, uint param_5)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    char cVar3;\n    uint32_t uVar4;\n    uint uVar5;\n    uint32_t uVar6;\n    int32_t **in_FS_OFFSET;\n    int32_t iStack40;\n    int32_t *piStack16;\n    int32_t *piStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x43f608;\n    piStack12 = *in_FS_OFFSET;\n    uVar4 = *0x45060c ^ &stack0xffffffd0;\n    *in_FS_OFFSET = &piStack12;\n    uVar6 = param_2 & 0xffff;\n    *(param_1 + 0x50) = uVar6;\n    if (param_2 == 0) {\n        *(param_1 + 0x20) = 0;\n        goto code_r0x00412cf0;\n    }\n    (**(**(param_1 + 0x1c) + 0x24))(&param_2, uVar4);\n    param_3 = 0;\n    if (*(param_1 + 0x20) == 3) {\n        cVar3 = fcn.00412240();\n        *(param_1 + 0x20) = 2 - (cVar3 != '\\0');\n    }\n    else {\n        *(param_1 + 0x20) = 2;\n    }\n    if (*(param_1 + 0x20) == 1) {\n        if (*(param_1 + 0x24) == 0) {\n            iStack40 = 0x67;\n            fcn.00412a70();\n            goto code_r0x00412c40;\n        }\n    }\n    else {\ncode_r0x00412c40:\n        *(param_1 + 0x28) = uVar6;\n    }\n    fcn.0040cd80();\n    param_2 = CONCAT31(param_2._1_3_, 1);\n    uVar5 = fcn.00412ae0();\n    fcn.00402100(uVar5);\n    uStack4._0_1_ = 1;\n    piVar1 = iStack40 + -4;\n    LOCK();\n    iVar2 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar2 == 1 || iVar2 + -1 < 0) {\n        (**(**(iStack40 + -0x10) + 4))(iStack40 + -0x10);\n    }\n    fcn.0040e820();\n    uStack4 = uStack4._1_3_ << 8;\n    fcn.00411b00();\n    uStack4 = 0xffffffff;\n    piVar1 = param_2 + -4;\n    LOCK();\n    iVar2 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar2 == 1 || iVar2 + -1 < 0) {\n        (**(**(param_2 + -0x10) + 4))(param_2 + -0x10);\n        *in_FS_OFFSET = piStack16;\n        return;\n    }\ncode_r0x00412cf0:\n    *in_FS_OFFSET = piStack12;\n    return;\n}\n",
        "token_count": 796
    },
    "00412db0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint __fastcall fcn.00412db0(int32_t param_1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint *puVar4;\n    uint uVar5;\n    int32_t **ppiVar6;\n    int32_t *unaff_ESI;\n    int32_t *in_FS_OFFSET;\n    int32_t *piVar7;\n    int32_t iStack24;\n    int32_t iStack16;\n    uint uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x43f688;\n    uStack12 = *in_FS_OFFSET;\n    uVar3 = *0x45060c ^ &stack0xffffffd0;\n    *in_FS_OFFSET = &uStack12;\n    (**(**(param_1 + 0x1c) + 0x24))();\n    uStack8 = 0;\n    if (unaff_ESI[-3] == 0) {\n        uStack8 = 0xffffffff;\n        piVar1 = unaff_ESI + -1;\n        LOCK();\n        iVar2 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n        if (iVar2 == 1 || iVar2 + -1 < 0) {\n            (**(*unaff_ESI[-4] + 4))(unaff_ESI + -4);\n        }\n        *in_FS_OFFSET = iStack16;\n        return 0;\n    }\n    piVar7 = unaff_ESI;\n    fcn.0040cd80(unaff_ESI);\n    uStack12 = CONCAT31(uStack12._1_3_, 1);\n    puVar4 = fcn.0040d800(&stack0xffffffd0);\n    uVar5 = fcn.004122e0(*puVar4);\n    ppiVar6 = uVar3 - 0x10;\n    piVar1 = uVar3 - 4;\n    LOCK();\n    iVar2 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar2 == 1 || iVar2 + -1 < 0) {\n        (**(**ppiVar6 + 4))(ppiVar6);\n    }\n    fcn.00411b00();\n    LOCK();\n    if (piVar7 == 0x1 || piVar7 + -1 < 0) {\n        (**(*unaff_ESI + 4))(&stack0xffffffc4);\n    }\n    *in_FS_OFFSET = iStack24;\n    return uVar5;\n}\n",
        "token_count": 593
    },
    "00412ed0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00412ed0(int32_t param_1)\n\n{\n    uint uVar1;\n    \n    if (*(param_1 + 0x20) != 0) {\n        *(param_1 + 0x48) = *(param_1 + 0x48) + *(param_1 + 0x30);\n    }\n    if (*(param_1 + 0x30) != 0) {\n        (**(**(param_1 + 0x1c) + 0x2c))(*(param_1 + 0x40), *(param_1 + 0x30));\n        *(param_1 + 0x30) = 0;\n    }\n    if (*(param_1 + 0x20) == 1) {\n        uVar1 = fcn.00412db0();\n        *(param_1 + 0x34) = uVar1;\n    }\n    return;\n}\n",
        "token_count": 205
    },
    "00412f10": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __thiscall fcn.00412f10(int32_t param_1, uint param_2, uint param_3, int32_t param_4)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    char *pcVar5;\n    char *pcVar6;\n    int32_t *in_FS_OFFSET;\n    bool bVar7;\n    uint32_t uStack48;\n    int32_t iStack44;\n    int32_t aiStack40 [2];\n    uchar uStack32;\n    uint uStack20;\n    uchar uStack16;\n    uint uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x43f6fa;\n    uStack12 = *in_FS_OFFSET;\n    uVar2 = *0x45060c ^ &stack0xffffffc4;\n    *in_FS_OFFSET = &uStack12;\n    bVar7 = param_4 == 0;\n    if (bVar7) {\n        piVar3 = (**(**(param_1 + 0x1c) + 0x24))(aiStack40, uVar2);\n        param_4 = *piVar3;\n        uStack4 = 1;\n    }\n    uStack48 = bVar7;\n    fcn.00403c70(param_4);\n    uStack8 = 3;\n    if (bVar7) {\n        piVar3 = iStack44 + -4;\n        LOCK();\n        iVar4 = *piVar3;\n        *piVar3 = *piVar3 + -1;\n        if (iVar4 == 1 || iVar4 + -1 < 0) {\n            (**(**(iStack44 + -0x10) + 4))(iStack44 + -0x10);\n        }\n    }\n    fcn.0040cd80();\n    uStack12 = CONCAT31(uStack12._1_3_, 4);\n    piVar3 = fcn.0041a118();\n    if (piVar3 == NULL) {\n        piVar3 = fcn.00401090(0x80004005);\n    }\n    iVar4 = (**(*piVar3 + 0xc))();\n    pcVar5 = iVar4 + 0x10;\n    uStack16 = 5;\n    if (uStack4 == '\\0') {\n        fcn.004061c0(*0x10, \"%.3d\", *(param_1 + 0x50));\n    }\n    else {\n        fcn.00402100(param_1 + 0x2c);\n    }\n    if (pcVar5 == NULL) {\n        iVar4 = 0;\n    }\n    else {\n        pcVar6 = pcVar5;\n        do {\n            cVar1 = *pcVar6;\n            pcVar6 = pcVar6 + 1;\n        } while (cVar1 != '\\0');\n        iVar4 = pcVar6 - (pcVar5 + 1);\n    }\n    fcn.00401aa0(pcVar5, iVar4);\n    fcn.00411bb0(0x2e);\n    fcn.0040dd70(uStack20);\n    uStack32 = 4;\n    piVar3 = pcVar5 + -4;\n    LOCK();\n    iVar4 = *piVar3;\n    *piVar3 = *piVar3 + -1;\n    if (iVar4 == 1 || iVar4 + -1 < 0) {\n        (**(**(pcVar5 + -0x10) + 4))(pcVar5 + -0x10);\n    }\n    uStack32 = 3;\n    fcn.00411b00();\n    uStack32 = 0;\n    piVar3 = uStack48 - 4;\n    LOCK();\n    iVar4 = *piVar3;\n    *piVar3 = *piVar3 + -1;\n    if (iVar4 == 1 || iVar4 + -1 < 0) {\n        (**(**(uStack48 - 0x10) + 4))(uStack48 - 0x10);\n    }\n    *in_FS_OFFSET = aiStack40[0];\n    return uStack20;\n}\n",
        "token_count": 943
    },
    "004130c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004130c0(int32_t param_1, char *param_2, uint32_t param_3, uchar *param_4)\n\n{\n    uchar *puVar1;\n    char cVar2;\n    int32_t *piVar3;\n    char **ppcVar4;\n    int32_t iVar5;\n    char *pcVar6;\n    uint uVar7;\n    char *pcVar8;\n    int32_t *extraout_ECX;\n    int32_t *extraout_ECX_00;\n    int32_t *extraout_ECX_01;\n    int32_t *extraout_ECX_02;\n    uint32_t uVar9;\n    char **in_FS_OFFSET;\n    int32_t **ppiStack44;\n    char cStack17;\n    char *pcStack16;\n    char *pcStack12;\n    char *pcStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    pcStack8 = 0x43f751;\n    pcStack12 = *in_FS_OFFSET;\n    ppiStack44 = *0x45060c ^ &stack0xffffffd8;\n    *in_FS_OFFSET = &stack0xfffffff4;\n    uVar9 = 0;\n    pcStack16 = NULL;\n    fcn.00412ed0();\n    if (*(param_1 + 0x48) != 0) {\n        *(param_1 + 0x50) = *(param_1 + 0x50) + 1;\n        *(param_1 + 0x48) = 0;\n        if (0x3e6 < *(param_1 + 0x50)) {\n            fcn.00412a70(0x6c);\n        }\n    }\n    piVar3 = fcn.0041a118();\n    if (piVar3 != NULL) goto code_r0x0041312d;\n    do {\n        piVar3 = fcn.00401090();\ncode_r0x0041312d:\n        pcVar6 = pcStack16;\n        (**(*piVar3 + 0xc))();\n        pcStack8 = pcStack16;\n        if (*(param_1 + 0x20) == 1) {\n            pcVar8 = param_2;\n            if (param_2 == pcStack16) {\n                ppcVar4 = (**(**(param_1 + 0x1c) + 0x24))(&stack0x00000004);\n                pcVar8 = *ppcVar4;\n                uVar9 = 1;\n                pcStack16 = 0x1;\n                if (pcVar8 != pcVar6) goto code_r0x0041317f;\n                iVar5 = 0;\n            }\n            else {\ncode_r0x0041317f:\n                pcVar6 = pcVar8;\n                do {\n                    cVar2 = *pcVar6;\n                    pcVar6 = pcVar6 + 1;\n                } while (cVar2 != '\\0');\n                iVar5 = pcVar6 - (pcVar8 + 1);\n            }\n            fcn.00401aa0(pcVar8, iVar5);\n            if ((uVar9 & 1) != 0) goto code_r0x004131c5;\n        }\n        else {\n            uVar7 = fcn.00412f10(&stack0x00000004, pcStack16, param_2);\n            fcn.00402100(uVar7);\ncode_r0x004131c5:\n            piVar3 = pcStack12 + -4;\n            LOCK();\n            iVar5 = *piVar3;\n            *piVar3 = *piVar3 + -1;\n            if (iVar5 == 1 || iVar5 + -1 < 0) {\n                (**(**(pcStack12 + -0x10) + 4))(pcStack12 + -0x10);\n            }\n        }\n        cVar2 = (**(**(param_1 + 0x1c) + 0x30))();\n        ppiStack44 = extraout_ECX;\n        if (cVar2 == '\\0') {\n            ppiStack44 = 0x4131fd;\n            (**(**(param_1 + 0x1c) + 8))();\n            ppiStack44 = 0x413207;\n            (**(**(param_1 + 0x1c) + 4))();\n            ppiStack44 = extraout_ECX_00;\n        }\n        uVar9 = param_3;\n        if (cStack17 == '\\0') {\n            ppiStack44 = 0x1;\n            *(param_1 + 0x34) = *(param_1 + 0x28);\n            fcn.004128f0();\ncode_r0x0041332e:\n            ppiStack44 = pcStack16 + -0x10;\n            piVar3 = pcStack16 + -4;\n            LOCK();\n            iVar5 = *piVar3;\n            *piVar3 = *piVar3 + -1;\n            if (iVar5 == 1 || iVar5 + -1 < 0) {\n                (**(**ppiStack44 + 4))();\n            }\n            *in_FS_OFFSET = pcStack8;\n            return;\n        }\n        while( true ) {\n            while( true ) {\n                param_4 = &stack0xffffffd4;\n                iVar5 = fcn.004016b0(pcStack16 + -0x10);\n                ppiStack44 = iVar5 + 0x10;\n                fcn.00412b10(uVar9);\n                iVar5 = fcn.00412080(pcStack16);\n                if (iVar5 == 0) break;\n                ppiStack44 = extraout_ECX_01;\n                uVar9 = 0xfffffffe;\n            }\n            piVar3 = fcn.0041a118();\n            if (piVar3 == NULL) break;\n            iVar5 = (**(*piVar3 + 0xc))();\n            param_4 = iVar5 + 0x10;\n            ppiStack44 = *(param_1 + 0x50) + 1;\n            fcn.004061c0();\n            puVar1 = param_4;\n            cVar2 = fcn.004124d0(pcStack16, param_4);\n            if (cVar2 == '\\0') {\n                uVar9 = 0xfffffffd;\n            }\n            else {\n                ppiStack44 = NULL;\n                cVar2 = fcn.004128f0();\n                if (cVar2 != '\\0') {\n                    pcStack12 = pcStack12 & 0xffffff00;\n                    piVar3 = puVar1 + -4;\n                    LOCK();\n                    iVar5 = *piVar3;\n                    *piVar3 = *piVar3 + -1;\n                    if (iVar5 == 1 || iVar5 + -1 < 0) {\n                        (**(**(puVar1 + -0x10) + 4))(puVar1 + -0x10);\n                    }\n                    ppiStack44 = 0x413314;\n                    uVar7 = fcn.00412db0();\n                    *(param_1 + 0x34) = uVar7;\n                    goto code_r0x0041332e;\n                }\n                uVar9 = 0xfffffffc;\n            }\n            ppiStack44 = puVar1 + -4;\n            LOCK();\n            iVar5 = *ppiStack44;\n            *ppiStack44 = *ppiStack44 + -1;\n            if (iVar5 == 1 || iVar5 + -1 < 0) {\n                ppiStack44 = puVar1 + -0x10;\n                (**(**(puVar1 + -0x10) + 4))();\n                ppiStack44 = extraout_ECX_02;\n            }\n        }\n    } while( true );\n}\n",
        "token_count": 1723
    },
    "00413450": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint * __fastcall fcn.00413450(int32_t param_1)\n\n{\n    int32_t *piVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t *unaff_EDI;\n    int32_t **in_FS_OFFSET;\n    uint *unaff_retaddr;\n    uchar *puVar4;\n    uchar auStack20 [4];\n    uint uStack16;\n    int32_t *piStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack8 = 0x43f791;\n    piStack12 = *in_FS_OFFSET;\n    uVar2 = *0x45060c ^ &stack0xffffffe4;\n    *in_FS_OFFSET = &piStack12;\n    uStack16 = 0;\n    puVar4 = auStack20;\n    uStack4 = 0;\n    (**(**(param_1 + 0x1c) + 0x24))(puVar4, uVar2);\n    uStack8 = 1;\n    fcn.00412f10(unaff_retaddr, 1, 0);\n    if (*(param_1 + 0x54) == '\\0') {\n        (**(**(param_1 + 0x1c) + 8))();\n        (**(**(param_1 + 0x1c) + 4))();\n    }\n    iVar3 = fcn.00412080(*unaff_retaddr);\n    if (iVar3 != 0) {\n        fcn.004121b0(*unaff_retaddr, 1);\n    }\n    fcn.004121e0(puVar4, *unaff_retaddr, 1);\n    auStack20[0] = 0;\n    piVar1 = puVar4 + -4;\n    LOCK();\n    iVar3 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar3 == 1 || iVar3 + -1 < 0) {\n        (**(**(puVar4 + -0x10) + 4))(puVar4 + -0x10);\n    }\n    *in_FS_OFFSET = unaff_EDI;\n    return unaff_retaddr;\n}\n",
        "token_count": 484
    },
    "00413540": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nint32_t * __thiscall fcn.00413540(int32_t param_1, int32_t param_2)\n\n{\n    uint32_t uVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint unaff_EBX;\n    int32_t **in_FS_OFFSET;\n    int32_t *unaff_retaddr;\n    char cVar5;\n    int32_t *piStack12;\n    uint32_t uStack8;\n    int32_t iStack4;\n    \n    cVar5 = unaff_EBX >> 0x18;\n    uStack8 = 0x43f7d9;\n    piStack12 = *in_FS_OFFSET;\n    uVar1 = *0x45060c ^ &stack0xffffffe0;\n    *in_FS_OFFSET = &piStack12;\n    iStack4 = 0;\n    piVar2 = fcn.0041a118(uVar1);\n    if (piVar2 == NULL) {\n        piVar2 = fcn.00401090(0x80004005);\n    }\n    iVar3 = (**(*piVar2 + 0xc))();\n    *unaff_retaddr = iVar3 + 0x10;\n    uStack8 = 0;\n    if (param_2 == '\\0') {\n        fcn.00412ed0();\n        if ((*(param_1 + 0x20) == 2) && (*(param_1 + 0x4c) != '\\0')) {\n            uVar4 = fcn.00413450(&param_2);\n            piStack12 = 0x1;\n            fcn.00402100(uVar4);\n            piVar2 = iStack4 + -4;\n            LOCK();\n            iVar3 = *piVar2;\n            *piVar2 = *piVar2 + -1;\n            if (iVar3 == 1 || iVar3 + -1 < 0) {\n                (**(**(iStack4 + -0x10) + 4))(iStack4 + -0x10);\n            }\n            cVar5 = '\\0';\n        }\n    }\n    if (*(*unaff_retaddr + -0xc) == 0) {\n        uVar4 = (**(**(param_1 + 0x1c) + 0x24))(&param_2);\n        iStack4 = 2;\n        fcn.00402100(uVar4);\n        uStack8 = uStack8 & 0xffffff00;\n        piVar2 = param_2 + -4;\n        LOCK();\n        iVar3 = *piVar2;\n        *piVar2 = *piVar2 + -1;\n        if (iVar3 == 1 || iVar3 + -1 < 0) {\n            (**(**(param_2 + -0x10) + 4))(param_2 + -0x10);\n        }\n    }\n    if ((cVar5 != '\\0') && (*(param_1 + 0x54) == '\\0')) {\n        if ((*(param_1 + 0x55) == '\\0') && ((*(param_1 + 0x20) == 0 || (-1 < (*(param_1 + 0x4c) != '\\0') * 2 + -1)))) {\n            (**(**(param_1 + 0x1c) + 8))();\n        }\n        (**(**(param_1 + 0x1c) + 4))();\n    }\n    fcn.0040e820();\n    *(param_1 + 0x50) = 0xffffffff;\n    *(param_1 + 0x20) = 0;\n    *(param_1 + 0x1c) = 0;\n    *in_FS_OFFSET = NULL;\n    return unaff_retaddr;\n}\n",
        "token_count": 832
    },
    "004136c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004136c0(int32_t param_1, uint param_2, uint32_t param_3, char param_4)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t unaff_retaddr;\n    \n    if ((*(param_1 + 0x20) != 0) && ((*(param_1 + 0x4c) != '\\0') * '\\x02' != '\\x01')) {\n        uVar3 = param_3;\n        if (param_4 == '\\0') {\n            uVar3 = 1;\n        }\n        uVar2 = 0;\n        if (param_3 != 0) {\n            do {\n                uVar1 = fcn.00412910();\n                while (uVar1 < uVar3) {\n                    if (((*(param_1 + 0x20) == 2) && (*(param_1 + 0x48) == 0)) && (*(param_1 + 0x30) == 0)) {\n                        *(param_1 + 0x34) = uVar3;\n                    }\n                    else {\n                        fcn.004130c0();\n                    }\n                    uVar1 = fcn.00412910();\n                }\n                if (param_3 - uVar2 <= uVar1) {\n                    uVar1 = param_3 - uVar2;\n                }\n                fcn.00413370();\n            } while ((param_2 == '\\0') && (uVar2 = uVar2 + uVar1,  uVar2 < unaff_retaddr));\n        }\n        return;\n    }\n    fcn.00413370(param_2, param_3);\n    return;\n}\n",
        "token_count": 386
    },
    "004138e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004138e0(int32_t param_1, int32_t param_2)\n\n{\n    char cVar1;\n    uint unaff_EBX;\n    int32_t unaff_ESI;\n    int32_t unaff_retaddr;\n    \n    fcn.0040e850(*(param_1 + 4), 0);\n    *(param_1 + 0x30) = 0;\n    *(param_1 + 0x4c) = 0;\n    *(param_1 + 0x1c) = param_1 + 8;\n    *(param_1 + 0x54) = 0;\n    if ((unaff_retaddr != 2) && (unaff_retaddr != 3)) {\n        *(param_1 + 0x55) = unaff_retaddr == 1;\n        fcn.004128f0(unaff_EBX, (unaff_retaddr == 1) - 1 & 2 | 0x2000, 1);\n        *(param_1 + 0x20) = (unaff_ESI != 0) + 3;\n        return;\n    }\n    *(param_1 + 0x55) = 0;\n    *(param_1 + 0x50) = 0;\n    if (unaff_retaddr == 2) {\n        *(param_1 + 0x20) = 0;\n        fcn.004128f0(unaff_EBX, 0x1002, 1);\n        return;\n    }\n    *(param_1 + 0x4c) = 1;\n    *(param_1 + 0x48) = 0;\n    if (param_2 < 1) {\n        if (*(param_1 + 0x24) == 0) {\n            fcn.00412a70(0x67);\n        }\n        cVar1 = fcn.00412240(unaff_EBX);\n        if (cVar1 == '\\0') {\n            fcn.00412a70(0x6b);\n        }\n        *(param_1 + 0x20) = 1;\n    }\n    else {\n        *(param_1 + 0x28) = param_2;\n        *(param_1 + 0x20) = 2;\n    }\n    fcn.004130c0(4, unaff_EBX);\n    fcn.004136c0(\"PK\\a\\b\\x04UD\", 4, 1);\n    return;\n}\n",
        "token_count": 550
    },
    "004139e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004139e0(int32_t param_1, int32_t param_2)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint *puVar4;\n    int32_t **ppiVar5;\n    int32_t *unaff_ESI;\n    int32_t **in_FS_OFFSET;\n    bool bVar6;\n    uchar auStack16 [4];\n    int32_t *piStack12;\n    uint32_t uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x43f872;\n    piStack12 = *in_FS_OFFSET;\n    uVar3 = *0x45060c ^ &stack0xffffffe4;\n    *in_FS_OFFSET = &piStack12;\n    if (param_2 != *(param_1 + 0x50)) {\n        bVar6 = *(param_1 + 0x20) != 1;\n        *(param_1 + 0x50) = param_2;\n        if (bVar6) {\n            puVar4 = fcn.004133d0(&param_2);\n        }\n        else {\n            puVar4 = fcn.00412d10(auStack16);\n        }\n        uStack8 = bVar6;\n        fcn.004128f0(*puVar4, 0x2000, 1);\n        if (bVar6) {\n            piVar1 = piStack12 + -1;\n            LOCK();\n            iVar2 = *piVar1;\n            *piVar1 = *piVar1 + -1;\n            if (iVar2 == 1 || iVar2 + -1 < 0) {\n                (**(*piStack12[-4] + 4))(piStack12 + -4);\n            }\n        }\n        if (!bVar6) {\n            ppiVar5 = uVar3 - 0x10;\n            piVar1 = uVar3 - 4;\n            LOCK();\n            iVar2 = *piVar1;\n            *piVar1 = *piVar1 + -1;\n            if (iVar2 == 1 || iVar2 + -1 < 0) {\n                (**(**ppiVar5 + 4))(ppiVar5);\n            }\n        }\n    }\n    *in_FS_OFFSET = unaff_ESI;\n    return;\n}\n",
        "token_count": 522
    },
    "00413af0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t __thiscall fcn.00413af0(int32_t param_1, int32_t param_2, uint32_t param_3, uint param_4, char param_5)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    \n    if (param_3 == 0) {\n        return 0;\n    }\n    while (uVar2 = (**(**(param_1 + 0x1c) + 0x28))(param_2, param_3),  uVar2 == 0) {\n        iVar3 = fcn.0040be80();\n        if (iVar3 == 0) {\n            fcn.00412a70(0x65);\n            break;\n        }\n        fcn.004139e0(*(param_1 + 0x50) + 1);\n    }\n    if (uVar2 != param_3) {\n        if (((param_5 != '\\0') || (*(param_1 + 0x20) == 0)) || ((*(param_1 + 0x4c) != '\\0') * '\\x02' == '\\x01')) {\ncode_r0x00413b9d:\n            fcn.00412a70(0x65);\n            pcVar1 = swi(3);\n            uVar2 = (*pcVar1)();\n            return uVar2;\n        }\n        for (; uVar2 < param_3; uVar2 = uVar2 + iVar3) {\n            fcn.004139e0(*(param_1 + 0x50) + 1);\n            iVar3 = (**(**(param_1 + 0x1c) + 0x28))(uVar2 + param_2, param_3 - uVar2);\n            if ((iVar3 == 0) && (uVar2 < param_3)) goto code_r0x00413b9d;\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 435
    },
    "00413bd0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint fcn.00413bd0(char param_1, char param_2)\n\n{\n    uint uVar1;\n    \n    if (param_2 == '\\0') {\n        uVar1 = 0x4013b0;\n        if (param_1 == '\\0') {\n            uVar1 = 0x404030;\n        }\n    }\n    else {\n        uVar1 = 0x40c370;\n        if (param_1 == '\\0') {\n            return 0x413bb0;\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 123
    },
    "00413f90": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t fcn.00413f90(uint8_t **param_1, int32_t param_2)\n\n{\n    uint8_t uVar1;\n    uint *puVar2;\n    uint uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    \n    if (((param_1 == NULL) || (param_1[7] == NULL)) || (*param_1 == NULL)) {\ncode_r0x0041436a:\n        return 0xfffffffe;\n    }\n    uVar5 = (param_2 != 4) - 1 & 0xfffffffb;\n    uVar4 = 0xfffffffb;\n    do {\n        puVar2 = param_1[7];\n    // switch table (14 cases) at 0x414398\n        switch(*puVar2) {\n        case 0:\n            if (param_1[1] == NULL) {\n                return uVar4;\n            }\n            param_1[1] = param_1[1] + -1;\n            param_1[2] = param_1[2] + 1;\n            puVar2[1] = **param_1;\n            puVar2 = param_1[7];\n            uVar3 = puVar2[1];\n            *param_1 = *param_1 + 1;\n            if ((uVar3 & 0xf) != 8) {\n                *puVar2 = 0xd;\n                param_1[6] = \"unknown compression method\";\n                *(param_1[7] + 4) = 5;\n                uVar4 = uVar5;\n                break;\n            }\n            if (puVar2[4] < (puVar2[1] >> 4) + 8) {\n                *puVar2 = 0xd;\n                param_1[6] = \"invalid window size\";\n                *(param_1[7] + 4) = 5;\n                uVar4 = uVar5;\n                break;\n            }\n            *puVar2 = 1;\n            uVar4 = uVar5;\n        case 1:\n            if (param_1[1] == NULL) {\n                return uVar4;\n            }\n            param_1[1] = param_1[1] + -1;\n            puVar2 = param_1[7];\n            param_1[2] = param_1[2] + 1;\n            uVar1 = **param_1;\n            *param_1 = *param_1 + 1;\n            if ((puVar2[1] * 0x100 + uVar1) % 0x1f == 0) {\n                if ((uVar1 & 0x20) != 0) {\n                    *param_1[7] = 2;\n                    uVar4 = uVar5;\n                    goto code_r0x00414250;\n                }\n                *puVar2 = 7;\n                uVar4 = uVar5;\n            }\n            else {\n                *puVar2 = 0xd;\n                param_1[6] = \"incorrect header check\";\n                *(param_1[7] + 4) = 5;\n                uVar4 = uVar5;\n            }\n            break;\n        case 2:\ncode_r0x00414250:\n            if (param_1[1] == NULL) {\n                return uVar4;\n            }\n            param_1[2] = param_1[2] + 1;\n            param_1[1] = param_1[1] + -1;\n            *(param_1[7] + 8) = **param_1 << 0x18;\n            *param_1 = *param_1 + 1;\n            *param_1[7] = 3;\n            uVar4 = uVar5;\ncode_r0x0041428a:\n            if (param_1[1] == NULL) {\n                return uVar4;\n            }\n            param_1[1] = param_1[1] + -1;\n            param_1[2] = param_1[2] + 1;\n            *(param_1[7] + 8) = *(param_1[7] + 8) + **param_1 * 0x10000;\n            *param_1 = *param_1 + 1;\n            *param_1[7] = 4;\n            uVar4 = uVar5;\ncode_r0x004142c9:\n            if (param_1[1] == NULL) {\n                return uVar4;\n            }\n            param_1[1] = param_1[1] + -1;\n            param_1[2] = param_1[2] + 1;\n            *(param_1[7] + 8) = *(param_1[7] + 8) + **param_1 * 0x100;\n            *param_1 = *param_1 + 1;\n            *param_1[7] = 5;\n            uVar4 = uVar5;\ncode_r0x00414304:\n            if (param_1[1] != NULL) {\n                param_1[1] = param_1[1] + -1;\n                param_1[2] = param_1[2] + 1;\n                *(param_1[7] + 8) = *(param_1[7] + 8) + **param_1;\n                *param_1 = *param_1 + 1;\n                param_1[0xc] = *(param_1[7] + 8);\n                *param_1[7] = 6;\n                return 2;\n            }\n            return uVar4;\n        case 3:\n            goto code_r0x0041428a;\n        case 4:\n            goto code_r0x004142c9;\n        case 5:\n            goto code_r0x00414304;\n        case 6:\n            *param_1[7] = 0xd;\n            param_1[6] = \"need dictionary\";\n            *(param_1[7] + 4) = 0;\n            return 0xfffffffe;\n        case 7:\n            uVar4 = fcn.004154f0(puVar2[5], param_1, uVar4);\n            if (uVar4 == 0xfffffffd) {\n                *param_1[7] = 0xd;\n                *(param_1[7] + 4) = 0;\n            }\n            else {\n                if (uVar4 == 0) {\n                    uVar4 = uVar5;\n                }\n                if (uVar4 != 1) {\n                    return uVar4;\n                }\n                fcn.004153d0(*(param_1[7] + 0x14), param_1, param_1[7] + 4);\n                puVar2 = param_1[7];\n                if (puVar2[3] == 0) {\n                    *puVar2 = 8;\n                    uVar4 = uVar5;\n                    goto code_r0x00414142;\n                }\n                *puVar2 = 0xc;\n                uVar4 = uVar5;\n            }\n            break;\n        case 8:\ncode_r0x00414142:\n            if (param_1[1] == NULL) {\n                return uVar4;\n            }\n            param_1[1] = param_1[1] + -1;\n            param_1[2] = param_1[2] + 1;\n            *(param_1[7] + 8) = **param_1 << 0x18;\n            *param_1 = *param_1 + 1;\n            *param_1[7] = 9;\n            uVar4 = uVar5;\ncode_r0x00414177:\n            if (param_1[1] == NULL) {\n                return uVar4;\n            }\n            param_1[2] = param_1[2] + 1;\n            param_1[1] = param_1[1] + -1;\n            *(param_1[7] + 8) = *(param_1[7] + 8) + **param_1 * 0x10000;\n            *param_1 = *param_1 + 1;\n            *param_1[7] = 10;\n            uVar4 = uVar5;\ncode_r0x004141b1:\n            if (param_1[1] == NULL) {\n                return uVar4;\n            }\n            param_1[2] = param_1[2] + 1;\n            param_1[1] = param_1[1] + -1;\n            *(param_1[7] + 8) = *(param_1[7] + 8) + **param_1 * 0x100;\n            *param_1 = *param_1 + 1;\n            *param_1[7] = 0xb;\n            uVar4 = uVar5;\ncode_r0x004141eb:\n            if (param_1[1] == NULL) {\n                return uVar4;\n            }\n            param_1[1] = param_1[1] + -1;\n            param_1[2] = param_1[2] + 1;\n            *(param_1[7] + 8) = *(param_1[7] + 8) + **param_1;\n            *param_1 = *param_1 + 1;\n            puVar2 = param_1[7];\n            if (puVar2[1] == puVar2[2]) {\n                *param_1[7] = 0xc;\ncode_r0x0041437f:\n                return 1;\n            }\n            *puVar2 = 0xd;\n            param_1[6] = \"incorrect data check\";\n            *(param_1[7] + 4) = 5;\n            uVar4 = uVar5;\n            break;\n        case 9:\n            goto code_r0x00414177;\n        case 10:\n            goto code_r0x004141b1;\n        case 0xb:\n            goto code_r0x004141eb;\n        case 0xc:\n            goto code_r0x0041437f;\n        case 0xd:\n            return 0xfffffffd;\n        default:\n            goto code_r0x0041436a;\n        }\n    } while( true );\n}\n",
        "token_count": 2310
    },
    "004143d0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t fcn.004143d0(int32_t *param_1, int32_t *param_2)\n\n{\n    int32_t **ppiVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t *piVar5;\n    \n    if ((((param_1 == NULL) || (ppiVar1 = param_1[7],  ppiVar1 == NULL)) || (4 < param_2)) || (param_2 < 0)) {\n        return 0xfffffffe;\n    }\n    if (((param_1[3] == 0) || ((*param_1 == 0 && (param_1[1] != 0)))) || ((ppiVar1[1] == 0x29a && (param_2 != 0x4)))) {\n        param_1[6] = *0x44e7c8;\n        return 0xfffffffe;\n    }\n    if (param_1[4] == 0) {\n        param_1[6] = *0x44e7d4;\n        return 0xfffffffb;\n    }\n    piVar5 = ppiVar1[8];\n    *ppiVar1 = param_1;\n    ppiVar1[8] = param_2;\n    if (ppiVar1[1] == 0x2a) {\n        uVar2 = ppiVar1[0x1f] + -1 >> 1;\n        if (3 < uVar2) {\n            uVar2 = 3;\n        }\n        uVar2 = ppiVar1[10] * 0x1000 - 0x7800U | uVar2 << 6;\n        if (ppiVar1[0x19] != NULL) {\n            uVar2 = uVar2 | 0x20;\n        }\n        ppiVar1[1] = 0x71;\n        fcn.004146a0(ppiVar1, (uVar2 - uVar2 % 0x1f) + 0x1f);\n        if (ppiVar1[0x19] != NULL) {\n            fcn.004146a0(ppiVar1, param_1[0xc] >> 0x10);\n            fcn.004146a0(ppiVar1, param_1[0xc] & 0xffff);\n        }\n        param_1[0xc] = 1;\n    }\n    if (ppiVar1[5] == NULL) {\n        if (((param_1[1] == 0) && (param_2 <= piVar5)) && (param_2 != 0x4)) {\n            param_1[6] = *0x44e7d4;\n            return 0xfffffffb;\n        }\n    }\n    else {\n        fcn.004146d0(param_1);\n        if (param_1[4] == 0) {\n            ppiVar1[8] = 0xffffffff;\n            return 0;\n        }\n    }\n    if (ppiVar1[1] == 0x29a) {\n        if (param_1[1] != 0) {\n            param_1[6] = *0x44e7d4;\n            return 0xfffffffb;\n        }\ncode_r0x0041454a:\n        if ((ppiVar1[0x1b] == NULL) && ((param_2 == NULL || (ppiVar1[1] == 0x29a)))) goto code_r0x00414606;\n    }\n    else if (param_1[1] == 0) goto code_r0x0041454a;\n    iVar3 = (**(ppiVar1[0x1f] * 0xc + 0x442a48))(ppiVar1, param_2);\n    if ((iVar3 == 2) || (iVar3 == 3)) {\n        ppiVar1[1] = 0x29a;\n    }\n    if ((iVar3 == 0) || (iVar3 == 2)) {\n        if (param_1[4] == 0) {\n            ppiVar1[8] = 0xffffffff;\n        }\n        return 0;\n    }\n    if (iVar3 == 1) {\n        if (param_2 == 0x1) {\n            fcn.004164b0(ppiVar1);\n        }\n        else {\n            fcn.00416410(ppiVar1, 0, 0, 0);\n            if (param_2 == 0x3) {\n                *(ppiVar1[0xf] + ppiVar1[0x11] * 2 + -2) = 0;\n                uVar2 = ppiVar1[0x11] * 2 - 2;\n                piVar5 = ppiVar1[0xf];\n                for (uVar4 = uVar2 >> 2; uVar4 != 0; uVar4 = uVar4 - 1) {\n                    *piVar5 = 0;\n                    piVar5 = piVar5 + 1;\n                }\n                for (uVar2 = uVar2 & 3; uVar2 != 0; uVar2 = uVar2 - 1) {\n                    *piVar5 = 0;\n                    piVar5 = piVar5 + 1;\n                }\n            }\n        }\n        fcn.004146d0(param_1);\n        if (param_1[4] == 0) {\n            ppiVar1[8] = 0xffffffff;\n            return 0;\n        }\n    }\ncode_r0x00414606:\n    if (param_2 != 0x4) {\n        return 0;\n    }\n    if (ppiVar1[6] == NULL) {\n        fcn.004146a0(ppiVar1, param_1[0xc] >> 0x10);\n        fcn.004146a0(ppiVar1, param_1[0xc] & 0xffff);\n        fcn.004146d0(param_1);\n        ppiVar1[6] = 0xffffffff;\n        return ppiVar1[5] == NULL;\n    }\n    return 1;\n}\n",
        "token_count": 1362
    },
    "004154f0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nvoid fcn.004154f0(uint32_t *param_1, int32_t *param_2, uint param_3)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    uint32_t *puVar3;\n    uint32_t uVar4;\n    uchar *puVar5;\n    int32_t iVar6;\n    uint uVar7;\n    uint32_t uVar8;\n    uint *puVar9;\n    uint *puVar10;\n    uint *puVar11;\n    uint32_t uVar12;\n    uint *puStack48;\n    uchar *puStack44;\n    uint32_t uStack40;\n    uchar *puStack36;\n    uint *puStack32;\n    uint uStack28;\n    uint uStack24;\n    uint uStack20;\n    uint uStack16;\n    uint32_t uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    puVar3 = param_1;\n    puStack48 = *param_2;\n    puStack44 = param_2[1];\n    uStack40 = param_1[8];\n    puVar9 = param_1[7];\n    puVar10 = param_1[0xd];\n    if (puVar10 < param_1[0xc]) {\n        puStack36 = param_1[0xc] + (-1 - puVar10);\n        param_1 = puVar10;\n    }\n    else {\n        puStack36 = param_1[0xb] - puVar10;\n        param_1 = puVar10;\n    }\ncode_r0x00415532:\n    uVar12 = uStack40;\n    // switch table (10 cases) at 0x4161b0\n    switch(*puVar3) {\n    case 0:\n        goto code_r0x00415544;\n    case 1:\n        for (; puVar9 < 0x20; puVar9 = puVar9 + 2) {\n            if (puStack44 == NULL) {\n                puVar3[8] = uStack40;\n                puVar3[7] = puVar9;\n                iVar6 = *param_2;\n                param_2[1] = 0;\n                *param_2 = puStack48;\n                param_2[2] = puStack48 + (param_2[2] - iVar6);\n                puVar3[0xd] = param_1;\n                fcn.00418e00(puVar3, param_2, param_3);\n                return;\n            }\n            param_3 = 0;\n            puStack44 = puStack44 + -1;\n            uStack40 = uStack40 | *puStack48 << (puVar9 & 0x1f);\n            puStack48 = puStack48 + 1;\n        }\n        uVar12 = uStack40 & 0xffff;\n        if (~uStack40 >> 0x10 != uVar12) {\n            *puVar3 = 9;\n            param_2[6] = \"invalid stored block lengths\";\n            puVar3[8] = uStack40;\n            puVar3[7] = puVar9;\n            iVar6 = *param_2;\n            *param_2 = puStack48;\n            param_2[1] = puStack44;\n            param_2[2] = puStack48 + (param_2[2] - iVar6);\n            puVar3[0xd] = param_1;\n            fcn.00418e00(puVar3, param_2, 0xfffffffd);\n            return;\n        }\n        puVar9 = NULL;\n        puVar3[1] = uVar12;\n        uStack40 = 0;\n        if (uVar12 != 0) {\n            *puVar3 = 2;\n            goto code_r0x00415532;\n        }\n        break;\n    case 2:\n        if (puStack44 == NULL) {\n            puVar3[8] = uStack40;\n            puVar3[7] = puVar9;\n            iVar6 = *param_2;\n            *param_2 = puStack48;\n            param_2[1] = 0;\n            param_2[2] = puStack48 + (param_2[2] - iVar6);\n            puVar3[0xd] = param_1;\n            fcn.00418e00(puVar3, param_2, param_3);\n            return;\n        }\n        if (puStack36 == NULL) {\n            if (param_1 == puVar3[0xb]) {\n                puVar10 = puVar3[0xc];\n                puVar11 = puVar3[10];\n                if (puVar10 != puVar11) {\n                    if (puVar11 < puVar10) {\n                        puStack36 = puVar10 + (-1 - puVar11);\n                    }\n                    else {\n                        puStack36 = puVar3[0xb] - puVar11;\n                    }\n                    param_1 = puVar11;\n                    if (puStack36 != NULL) goto code_r0x00415766;\n                }\n            }\n            puVar3[0xd] = param_1;\n            uVar7 = fcn.00418e00(puVar3, param_2, param_3);\n            param_1 = puVar3[0xd];\n            puVar10 = puVar3[0xc];\n            if (param_1 < puVar10) {\n                puStack36 = puVar10 + (-1 - param_1);\n            }\n            else {\n                puStack36 = puVar3[0xb] - param_1;\n            }\n            puStack32 = puVar3[0xb];\n            if ((param_1 == puStack32) && (puVar11 = puVar3[10],  puVar10 != puVar11)) {\n                param_1 = puVar11;\n                if (puVar11 < puVar10) {\n                    puStack36 = puVar10 + (-1 - puVar11);\n                }\n                else {\n                    puStack36 = puStack32 - puVar11;\n                }\n            }\n            if (puStack36 == NULL) {\n                puVar3[8] = uStack40;\n                puVar3[7] = puVar9;\n                iVar6 = *param_2;\n                param_2[1] = puStack44;\n                *param_2 = puStack48;\n                param_2[2] = puStack48 + (param_2[2] - iVar6);\n                puVar3[0xd] = param_1;\n                fcn.00418e00(puVar3, param_2, uVar7);\n                return;\n            }\n        }\ncode_r0x00415766:\n        param_3 = 0;\n        puVar5 = puVar3[1];\n        if (puStack44 < puVar3[1]) {\n            puVar5 = puStack44;\n        }\n        if (puStack36 < puVar5) {\n            puVar5 = puStack36;\n        }\n        puVar10 = puStack48;\n        puVar11 = param_1;\n        for (uVar12 = puVar5 >> 2; uVar12 != 0; uVar12 = uVar12 - 1) {\n            *puVar11 = *puVar10;\n            puVar10 = puVar10 + 1;\n            puVar11 = puVar11 + 1;\n        }\n        puStack36 = puStack36 + -puVar5;\n        for (uVar12 = puVar5 & 3; uVar12 != 0; uVar12 = uVar12 - 1) {\n            *puVar11 = *puVar10;\n            puVar10 = puVar10 + 1;\n            puVar11 = puVar11 + 1;\n        }\n        puStack48 = puStack48 + puVar5;\n        uVar12 = puVar3[1];\n        puStack44 = puStack44 + -puVar5;\n        param_1 = param_1 + puVar5;\n        puVar3[1] = uVar12 - puVar5;\n        if (uVar12 - puVar5 != 0) goto code_r0x00415532;\n        break;\n    case 3:\n        for (; puVar9 < 0xe; puVar9 = puVar9 + 2) {\n            if (puStack44 == NULL) {\n                puVar3[8] = uStack40;\n                puVar3[7] = puVar9;\n                iVar6 = *param_2;\n                *param_2 = puStack48;\n                param_2[1] = 0;\n                param_2[2] = puStack48 + (param_2[2] - iVar6);\n                puVar3[0xd] = param_1;\n                fcn.00418e00(puVar3, param_2, param_3);\n                return;\n            }\n            puStack44 = puStack44 + -1;\n            param_3 = 0;\n            uStack40 = uStack40 | *puStack48 << (puVar9 & 0x1f);\n            puStack48 = puStack48 + 1;\n        }\n        puVar3[1] = uStack40 & 0x3fff;\n        if ((0x1d < (uStack40 & 0x1f)) || (0x3a0 < (uStack40 & 0x3e0))) {\n            *puVar3 = 9;\n            param_2[6] = \"too many length or distance symbols\";\n            puVar3[8] = uStack40;\n            puVar3[7] = puVar9;\n            iVar6 = *param_2;\n            param_2[1] = puStack44;\n            *param_2 = puStack48;\n            param_2[2] = puStack48 + (param_2[2] - iVar6);\n            puVar3[0xd] = param_1;\n            fcn.00418e00(puVar3, param_2, 0xfffffffd);\n            return;\n        }\n        uVar12 = (*param_2[8])(param_2[10], ((uStack40 & 0x3fff) >> 5 & 0x1f) + 0x102 + (uStack40 & 0x1f), 4);\n        puVar3[3] = uVar12;\n        if (uVar12 == 0) {\n            puVar3[8] = uStack40;\n            puVar3[7] = puVar9;\n            iVar6 = *param_2;\n            param_2[1] = puStack44;\n            *param_2 = puStack48;\n            param_2[2] = puStack48 + (param_2[2] - iVar6);\n            puVar3[0xd] = param_1;\n            fcn.00418e00(puVar3, param_2, 0xfffffffc);\n            return;\n        }\n        uStack40 = uStack40 >> 0xe;\n        puVar9 = puVar9 + -0xe;\n        puVar3[2] = 0;\n        *puVar3 = 4;\n        goto code_r0x0041588d;\n    case 4:\ncode_r0x0041588d:\n        if (puVar3[2] < (puVar3[1] >> 10) + 4) {\n            do {\n                for (; puVar9 < 0x3; puVar9 = puVar9 + 2) {\n                    if (puStack44 == NULL) {\n                        puVar3[8] = uStack40;\n                        puVar3[7] = puVar9;\n                        iVar6 = *param_2;\n                        *param_2 = puStack48;\n                        param_2[2] = puStack48 + (param_2[2] - iVar6);\n                        param_2[1] = 0;\n                        puVar3[0xd] = param_1;\n                        fcn.00418e00(puVar3, param_2, param_3);\n                        return;\n                    }\n                    puStack44 = puStack44 + -1;\n                    param_3 = 0;\n                    uStack40 = uStack40 | *puStack48 << (puVar9 & 0x1f);\n                    puStack48 = puStack48 + 1;\n                }\n                uVar12 = uStack40 & 7;\n                puVar9 = puVar9 + -3;\n                uStack40 = uStack40 >> 3;\n                *(puVar3[3] + *(puVar3[2] * 4 + 0x442ab8) * 4) = uVar12;\n                uVar12 = puVar3[2];\n                puVar3[2] = uVar12 + 1;\n            } while (uVar12 + 1 < (puVar3[1] >> 10) + 4);\n        }\n        uVar12 = puVar3[2];\n        while (uVar12 < 0x13) {\n            *(puVar3[3] + *(puVar3[2] * 4 + 0x442ab8) * 4) = 0;\n            uVar12 = puVar3[2] + 1;\n            puVar3[2] = uVar12;\n        }\n        puVar3[4] = 7;\n        iVar6 = fcn.004186c0(puVar3[3], puVar3 + 4, puVar3 + 5, puVar3[9], param_2);\n        uVar12 = uStack40;\n        if (iVar6 == 0) {\n            puVar3[2] = 0;\n            *puVar3 = 5;\ncode_r0x00415976:\n            if (puVar3[2] < (puVar3[1] >> 5 & 0x1f) + 0x102 + (puVar3[1] & 0x1f)) {\n                do {\n                    for (; puVar9 < puVar3[4]; puVar9 = puVar9 + 2) {\n                        if (puStack44 == NULL) goto code_r0x00415f59;\n                        puStack44 = puStack44 + -1;\n                        param_3 = 0;\n                        uVar12 = uVar12 | *puStack48 << (puVar9 & 0x1f);\n                        puStack48 = puStack48 + 1;\n                    }\n                    uVar4 = *(puVar3[4] * 4 + 0x44fac0) & uVar12;\n                    uVar1 = *(puVar3[5] + 1 + uVar4 * 8);\n                    uVar8 = uVar1;\n                    uStack12 = *(puVar3[5] + uVar4 * 8 + 4);\n                    if (uStack12 < 0x10) {\n                        puVar9 = puVar9 - uVar8;\n                        uVar12 = uVar12 >> (uVar1 & 0x1f);\n                        *(puVar3[3] + puVar3[2] * 4) = uStack12;\n                        puVar5 = puVar3[2] + 1;\n                    }\n                    else {\n                        puStack36 = 0x7;\n                        if (uStack12 != 0x12) {\n                            puStack36 = uStack12 - 0xe;\n                        }\n                        puStack32 = puStack36 + uVar8;\n                        for (; puVar9 < puStack32; puVar9 = puVar9 + 2) {\n                            if (puStack44 == NULL) {\ncode_r0x00415f59:\n                                puVar3[8] = uVar12;\n                                puVar3[7] = puVar9;\n                                iVar6 = *param_2;\n                                *param_2 = puStack48;\n                                param_2[2] = puStack48 + (param_2[2] - iVar6);\n                                param_2[1] = 0;\n                                puVar3[0xd] = param_1;\n                                fcn.00418e00(puVar3, param_2, param_3);\n                                return;\n                            }\n                            puStack44 = puStack44 + -1;\n                            param_3 = 0;\n                            uVar12 = uVar12 | *puStack48 << (puVar9 & 0x1f);\n                            puStack48 = puStack48 + 1;\n                        }\n                        uVar12 = uVar12 >> (uVar1 & 0x1f);\n                        uStack40 = (-(uStack12 != 0x12) & 0xfffffff8) + 0xb + (*(puStack36 * 4 + 0x44fac0) & uVar12);\n                        uVar12 = uVar12 >> (puStack36 & 0x1f);\n                        puVar9 = puVar9 - (puStack36 + uVar8);\n                        puStack36 = puVar3[2];\n                        if ((puVar3[1] >> 5 & 0x1f) + 0x102 + (puVar3[1] & 0x1f) < puStack36 + uStack40) {\ncode_r0x00415f98:\n                            (*param_2[9])(param_2[10], puVar3[3]);\n                            *puVar3 = 9;\n                            param_2[6] = \"invalid bit length repeat\";\n                            puVar3[8] = uVar12;\n                            puVar3[7] = puVar9;\n                            iVar6 = *param_2;\n                            param_2[1] = puStack44;\n                            *param_2 = puStack48;\n                            param_2[2] = puStack48 + (param_2[2] - iVar6);\n                            puVar3[0xd] = param_1;\n                            fcn.00418e00(puVar3, param_2, 0xfffffffd);\n                            return;\n                        }\n                        puVar5 = puStack36;\n                        if (uStack12 == 0x10) {\n                            if (puStack36 == NULL) goto code_r0x00415f98;\n                            uVar7 = *((puVar3[3] - 4) + puStack36 * 4);\n                        }\n                        else {\n                            uVar7 = 0;\n                        }\n                        do {\n                            puVar5 = puVar5 + 1;\n                            *((puVar3[3] - 4) + puVar5 * 4) = uVar7;\n                            uStack40 = uStack40 + -1;\n                        } while (uStack40 != 0);\n                    }\n                    puVar3[2] = puVar5;\n                } while (puVar3[2] < (puVar3[1] >> 5 & 0x1f) + 0x102 + (puVar3[1] & 0x1f));\n            }\n            puVar3[5] = 0;\n            puStack32 = 0x9;\n            puStack36 = 0x6;\n            uStack40 = fcn.00418c40((puVar3[1] & 0x1f) + 0x101, (puVar3[1] >> 5 & 0x1f) + 1, puVar3[3], &puStack32, \n                                    &puStack36, &uStack4, &uStack8, puVar3[9], param_2);\n            (*param_2[9])(param_2[10], puVar3[3]);\n            if (uStack40 == 0) {\n                uVar4 = fcn.00417eb0(puStack32, puStack36, uStack4, uStack8, param_2);\n                if (uVar4 == 0) {\n                    puVar3[8] = uVar12;\n                    puVar3[7] = puVar9;\n                    param_2[1] = puStack44;\n                    param_2[2] = puStack48 + (param_2[2] - *param_2);\n                    *param_2 = puStack48;\n                    puVar3[0xd] = param_1;\n                    fcn.00418e00(puVar3, param_2, 0xfffffffc);\n                    return;\n                }\n                puVar3[1] = uVar4;\n                *puVar3 = 6;\ncode_r0x00415bc6:\n                puVar3[8] = uVar12;\n                puVar3[7] = puVar9;\n                iVar6 = *param_2;\n                param_2[1] = puStack44;\n                *param_2 = puStack48;\n                param_2[2] = puStack48 + (param_2[2] - iVar6);\n                puVar3[0xd] = param_1;\n                iVar6 = fcn.00417ef0(puVar3, param_2, param_3);\n                if (iVar6 == 1) {\n                    param_3 = 0;\n                    fcn.004186a0(puVar3[1], param_2);\n                    uStack40 = puVar3[8];\n                    param_1 = puVar3[0xd];\n                    puStack48 = *param_2;\n                    puStack44 = param_2[1];\n                    puVar9 = puVar3[7];\n                    if (param_1 < puVar3[0xc]) {\n                        puStack36 = puVar3[0xc] + (-1 - param_1);\n                    }\n                    else {\n                        puStack36 = puVar3[0xb] - param_1;\n                    }\n                    if (puVar3[6] == 0) {\n                        *puVar3 = 0;\n                        goto code_r0x00415532;\n                    }\n                    *puVar3 = 7;\ncode_r0x00416088:\n                    puVar3[0xd] = param_1;\n                    iVar6 = fcn.00418e00(puVar3, param_2, param_3);\n                    param_1 = puVar3[0xd];\n                    if (puVar3[0xc] == param_1) {\n                        *puVar3 = 8;\ncode_r0x004160ef:\n                        puVar3[8] = uStack40;\n                        puVar3[7] = puVar9;\n                        param_2[1] = puStack44;\n                        param_2[2] = puStack48 + (param_2[2] - *param_2);\n                        *param_2 = puStack48;\n                        puVar3[0xd] = param_1;\n                        fcn.00418e00(puVar3, param_2, 1);\n                        return;\n                    }\n                    puVar3[7] = puVar9;\n                    puVar3[8] = uStack40;\n                    iVar2 = *param_2;\n                    param_2[1] = puStack44;\n                    *param_2 = puStack48;\n                    param_2[2] = puStack48 + (param_2[2] - iVar2);\n                    puVar3[0xd] = param_1;\n                }\n                fcn.00418e00(puVar3, param_2, iVar6);\n                return;\n            }\n        }\n        else {\n            (*param_2[9])(param_2[10], puVar3[3]);\n            uStack40 = iVar6;\n        }\n        if (uStack40 == -3) {\n            *puVar3 = 9;\n        }\n        puVar3[8] = uVar12;\n        puVar3[7] = puVar9;\n        iVar6 = *param_2;\n        param_2[1] = puStack44;\n        *param_2 = puStack48;\n        param_2[2] = puStack48 + (param_2[2] - iVar6);\n        puVar3[0xd] = param_1;\n        fcn.00418e00(puVar3, param_2, uStack40);\n        return;\n    case 5:\n        goto code_r0x00415976;\n    case 6:\n        goto code_r0x00415bc6;\n    case 7:\n        goto code_r0x00416088;\n    case 8:\n        goto code_r0x004160ef;\n    case 9:\n        puVar3[8] = uStack40;\n        puVar3[7] = puVar9;\n        iVar6 = *param_2;\n        param_2[1] = puStack44;\n        *param_2 = puStack48;\n        param_2[2] = puStack48 + (param_2[2] - iVar6);\n        puVar3[0xd] = param_1;\n        fcn.00418e00(puVar3, param_2, 0xfffffffd);\n        return;\n    default:\n        puVar3[8] = uStack40;\n        puVar3[7] = puVar9;\n        iVar6 = *param_2;\n        param_2[1] = puStack44;\n        *param_2 = puStack48;\n        param_2[2] = puStack48 + (param_2[2] - iVar6);\n        puVar3[0xd] = param_1;\n        fcn.00418e00(puVar3, param_2, 0xfffffffe);\n        return;\n    }\n    *puVar3 = -(puVar3[6] != 0) & 7;\n    goto code_r0x00415532;\ncode_r0x00415544:\n    for (; puVar9 < 0x3; puVar9 = puVar9 + 2) {\n        if (puStack44 == NULL) {\n            puVar3[8] = uStack40;\n            puVar3[7] = puVar9;\n            param_2[1] = 0;\n            param_2[2] = puStack48 + (param_2[2] - *param_2);\n            *param_2 = puStack48;\n            puVar3[0xd] = param_1;\n            fcn.00418e00(puVar3, param_2, param_3);\n            return;\n        }\n        puStack44 = puStack44 + -1;\n        param_3 = 0;\n        uStack40 = uStack40 | *puStack48 << (puVar9 & 0x1f);\n        puStack48 = puStack48 + 1;\n    }\n    puVar3[6] = uStack40 & 1;\n    // switch table (4 cases) at 0x4161d8\n    switch((uStack40 & 7) >> 1) {\n    case 0:\n        *puVar3 = 1;\n        uVar12 = puVar9 + -3 & 7;\n        uStack40 = (uStack40 >> 3) >> uVar12;\n        puVar9 = puVar9 + -3 + -uVar12;\n        break;\n    case 1:\n        fcn.00418dd0(&uStack16, &uStack20, &uStack24, &uStack28, param_2);\n        uVar12 = fcn.00417eb0(uStack16, uStack20, uStack24, uStack28, param_2);\n        puVar3[1] = uVar12;\n        if (uVar12 == 0) {\n            puVar3[8] = uStack40;\n            puVar3[7] = puVar9;\n            param_2[1] = puStack44;\n            param_2[2] = puStack48 + (param_2[2] - *param_2);\n            *param_2 = puStack48;\n            puVar3[0xd] = param_1;\n            fcn.00418e00(puVar3, param_2, 0xfffffffc);\n            return;\n        }\n        uStack40 = uStack40 >> 3;\n        puVar9 = puVar9 + -3;\n        *puVar3 = 6;\n        break;\n    case 2:\n        uStack40 = uStack40 >> 3;\n        puVar9 = puVar9 + -3;\n        *puVar3 = 3;\n        break;\n    case 3:\n        *puVar3 = 9;\n        param_2[6] = \"invalid block type\";\n        puVar3[8] = uStack40 >> 3;\n        puVar3[7] = puVar9 + -3;\n        param_2[1] = puStack44;\n        param_2[2] = puStack48 + (param_2[2] - *param_2);\n        *param_2 = puStack48;\n        puVar3[0xd] = param_1;\n        fcn.00418e00(puVar3, param_2, 0xfffffffd);\n        return;\n    }\n    goto code_r0x00415532;\n}\n",
        "token_count": 6412
    },
    "004186c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t fcn.004186c0(uint param_1, int32_t *param_2, uint param_3, uint param_4, int32_t param_5)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uStack4;\n    \n    uStack4 = 0;\n    iVar1 = (**(param_5 + 0x20))(*(param_5 + 0x28), 0x13, 4);\n    if (iVar1 == 0) {\n        return -4;\n    }\n    iVar2 = fcn.00418770(param_1, 0x13, 0x13, 0, 0, param_3, param_2, param_4, &uStack4, iVar1);\n    if (iVar2 == -3) {\n        *(param_5 + 0x18) = \"oversubscribed dynamic bit lengths tree\";\n        (**(param_5 + 0x24))(*(param_5 + 0x28), iVar1);\n        return -3;\n    }\n    if ((iVar2 == -5) || (*param_2 == 0)) {\n        *(param_5 + 0x18) = \"incomplete dynamic bit lengths tree\";\n        iVar2 = -3;\n    }\n    (**(param_5 + 0x24))(*(param_5 + 0x28), iVar1);\n    return iVar2;\n}\n",
        "token_count": 313
    },
    "00418770": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint fcn.00418770(int32_t *param_1, uint32_t param_2, uint32_t param_3, int32_t param_4, int32_t param_5, \n                 uint32_t *param_6, uint32_t *param_7, int32_t param_8, uint32_t *param_9, uint32_t *param_10)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t *puVar5;\n    int32_t *piVar6;\n    uint32_t uVar7;\n    int32_t iVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    int32_t iVar11;\n    uint32_t uVar12;\n    uint8_t uVar13;\n    int32_t iVar14;\n    uint32_t uVar15;\n    uint32_t uStack256;\n    uint32_t uStack252;\n    int32_t iStack248;\n    uint32_t *puStack244;\n    int32_t iStack240;\n    uint32_t *puStack232;\n    uint uStack224;\n    uint32_t uStack220;\n    uint32_t uStack216;\n    uint32_t uStack212;\n    uint32_t uStack208;\n    uint32_t auStack188 [47];\n    \n    uVar15 = 0;\n    auStack188[0] = 0;\n    auStack188[1] = 0;\n    auStack188[2] = 0;\n    auStack188[3] = 0;\n    auStack188[4] = 0;\n    auStack188[5] = 0;\n    auStack188[6] = 0;\n    auStack188[7] = 0;\n    auStack188[8] = 0;\n    auStack188[9] = 0;\n    auStack188[10] = 0;\n    auStack188[11] = 0;\n    auStack188[12] = 0;\n    auStack188[13] = 0;\n    auStack188[14] = 0;\n    auStack188[15] = 0;\n    piVar6 = param_1;\n    uVar10 = param_2;\n    do {\n        iVar14 = *piVar6;\n        piVar6 = piVar6 + 1;\n        uVar10 = uVar10 - 1;\n        auStack188[iVar14] = auStack188[iVar14] + 1;\n    } while (uVar10 != 0);\n    if (auStack188[0] == param_2) {\n        *param_6 = 0;\n        *param_7 = 0;\n    }\n    else {\n        uStack252 = 1;\n        puVar5 = auStack188;\n        do {\n            puVar5 = puVar5 + 1;\n            if (*puVar5 != 0) break;\n            uStack252 = uStack252 + 1;\n        } while (uStack252 < 0x10);\n        uStack256 = *param_7;\n        if (*param_7 < uStack252) {\n            uStack256 = uStack252;\n        }\n        uVar10 = 0xf;\n        puVar5 = auStack188 + 0xf;\n        do {\n            if (*puVar5 != 0) break;\n            uVar10 = uVar10 - 1;\n            puVar5 = puVar5 + -1;\n        } while (uVar10 != 0);\n        if (uVar10 < uStack256) {\n            uStack256 = uVar10;\n        }\n        *param_7 = uStack256;\n        iVar14 = 1 << (uStack252 & 0x1f);\n        if (uStack252 < uVar10) {\n            puVar5 = auStack188 + uStack252;\n            uVar7 = uStack252;\n            do {\n                uVar4 = *puVar5;\n                if (iVar14 - uVar4 < 0) {\n                    return 0xfffffffd;\n                }\n                uVar7 = uVar7 + 1;\n                puVar5 = puVar5 + 1;\n                iVar14 = (iVar14 - uVar4) * 2;\n            } while (uVar7 < uVar10);\n        }\n        iVar14 = iVar14 - auStack188[uVar10];\n        if (iVar14 < 0) {\n            return 0xfffffffd;\n        }\n        auStack188[17] = 0;\n        auStack188[uVar10] = auStack188[uVar10] + iVar14;\n        iVar8 = 0;\n        iVar11 = uVar10 - 1;\n        if (iVar11 != 0) {\n            iVar2 = 0;\n            do {\n                iVar8 = iVar8 + *(auStack188 + iVar2 + 4);\n                iVar11 = iVar11 + -1;\n                *(auStack188 + iVar2 + 0x48) = iVar8;\n                iVar2 = iVar2 + 4;\n            } while (iVar11 != 0);\n        }\n        uVar7 = 0;\n        do {\n            iVar8 = *param_1;\n            param_1 = param_1 + 1;\n            if (iVar8 != 0) {\n                uVar4 = auStack188[iVar8 + 0x10];\n                param_10[uVar4] = uVar7;\n                auStack188[iVar8 + 0x10] = uVar4 + 1;\n            }\n            uVar7 = uVar7 + 1;\n        } while (uVar7 < param_2);\n        iVar8 = -uStack256;\n        uVar7 = auStack188[uVar10 + 0x10];\n        puStack244 = param_10;\n        uStack216 = 0;\n        auStack188[16] = 0;\n        iStack248 = -1;\n        auStack188[32] = 0;\n        uStack208 = 0;\n        uStack212 = 0;\n        if (uStack252 <= uVar10) {\n            iStack240 = uStack252 - 1;\n            puStack232 = auStack188 + uStack252;\n            do {\n                uVar4 = *puStack232;\n                while (uVar4 != 0) {\n                    uVar12 = uVar4 - 1;\n                    uStack224._2_2_ = uStack224 >> 0x10;\n                    iVar11 = iVar8;\n                    while (iVar11 = iVar11 + uStack256,  iVar11 < uStack252) {\n                        iVar8 = iVar8 + uStack256;\n                        uVar15 = uVar10 - iVar8;\n                        if (uStack256 < uVar10 - iVar8) {\n                            uVar15 = uStack256;\n                        }\n                        uVar9 = uStack252 - iVar8;\n                        uVar1 = 1 << (uVar9 & 0x1f);\n                        if ((uVar4 < uVar1) && (iVar2 = uVar1 + (-1 - uVar12),  puVar5 = puStack232,  uVar9 < uVar15)) {\n                            while (uVar9 = uVar9 + 1,  uVar9 < uVar15) {\n                                uVar1 = puVar5[1];\n                                uVar3 = iVar2 * 2;\n                                if (uVar3 < uVar1 || uVar3 - uVar1 == 0) break;\n                                iVar2 = uVar3 - uVar1;\n                                puVar5 = puVar5 + 1;\n                            }\n                        }\n                        uStack212 = 1 << (uVar9 & 0x1f);\n                        uVar15 = *param_9;\n                        uVar1 = uStack212 + uVar15;\n                        if (0x5a0 < uVar1) {\n                            return 0xfffffffc;\n                        }\n                        *param_9 = uVar1;\n                        uStack208 = param_8 + uVar15 * 8;\n                        auStack188[iStack248 + 0x21] = uStack208;\n                        if (iStack248 + 1 == 0) {\n                            *param_6 = uStack208;\n                        }\n                        else {\n                            auStack188[iStack248 + 0x11] = uStack216;\n                            uStack224 = uStack224 & 0xffff0000 | CONCAT11(uStack256, uVar9);\n                            uVar9 = uStack216 >> (iVar8 - uStack256 & 0x1fU);\n                            uVar15 = auStack188[iStack248 + 0x20];\n                            uStack220 = (uStack208 - uVar15 >> 3) - uVar9;\n                            *(uVar15 + uVar9 * 8) = uStack224;\n                            *(uVar15 + 4 + uVar9 * 8) = uStack220;\n                        }\n                        uVar15 = uStack216;\n                        iStack248 = iStack248 + 1;\n                    }\n                    uVar13 = iVar8;\n                    if (puStack244 < param_10 + uVar7) {\n                        uStack220 = *puStack244;\n                        if (uStack220 < param_3) {\n                            uStack224._0_1_ = (-(uStack220 < 0x100) & 0xa0U) + 0x60;\n                        }\n                        else {\n                            iVar11 = (uStack220 - param_3) * 4;\n                            uStack224._0_1_ = *(iVar11 + param_5) + 'P';\n                            uStack220 = *(iVar11 + param_4);\n                        }\n                        puStack244 = puStack244 + 1;\n                    }\n                    else {\n                        uStack224._0_1_ = -0x40;\n                    }\n                    uStack224 = CONCAT31(CONCAT21(uStack224._2_2_, uStack252 - uVar13), uStack224);\n                    iVar11 = 1 << (uStack252 - uVar13 & 0x1f);\n                    uVar4 = uVar15 >> (uVar13 & 0x1f);\n                    if (uVar4 < uStack212) {\n                        puVar5 = uStack208 + uVar4 * 8;\n                        do {\n                            uVar4 = uVar4 + iVar11;\n                            *puVar5 = uStack224;\n                            puVar5[1] = uStack220;\n                            puVar5 = puVar5 + iVar11 * 2;\n                        } while (uVar4 < uStack212);\n                    }\n                    uVar9 = 1 << (iStack240 & 0x1f);\n                    uVar4 = uVar15 & uVar9;\n                    while (uVar4 != 0) {\n                        uVar15 = uVar15 ^ uVar9;\n                        uVar9 = uVar9 >> 1;\n                        uVar4 = uVar15 & uVar9;\n                    }\n                    uVar15 = uVar15 ^ uVar9;\n                    puVar5 = auStack188 + iStack248 + 0x10;\n                    uVar4 = uVar12;\n                    uStack216 = uVar15;\n                    if (((1 << (uVar13 & 0x1f)) - 1U & uVar15) != auStack188[iStack248 + 0x10]) {\n                        do {\n                            iStack248 = iStack248 + -1;\n                            iVar8 = iVar8 - uStack256;\n                            puVar5 = puVar5 + -1;\n                        } while (((1 << (iVar8 & 0x1f)) - 1U & uVar15) != *puVar5);\n                    }\n                }\n                puStack232 = puStack232 + 1;\n                uStack252 = uStack252 + 1;\n                iStack240 = iStack240 + 1;\n            } while (uStack252 <= uVar10);\n        }\n        if ((iVar14 != 0) && (uVar10 != 1)) {\n            return 0xfffffffb;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 2665
    },
    "00418c40": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t fcn.00418c40(uint32_t param_1, uint param_2, int32_t param_3, int32_t *param_4, int32_t *param_5, uint param_6, \n                    uint param_7, uint param_8, int32_t param_9)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uStack4;\n    \n    uStack4 = 0;\n    iVar1 = (**(param_9 + 0x20))(*(param_9 + 0x28), 0x120, 4);\n    if (iVar1 == 0) {\n        return -4;\n    }\n    iVar2 = fcn.00418770(param_3, param_1, 0x101, 0x443564, 0x4435e0, param_6, param_4, param_8, &uStack4, iVar1);\n    if (iVar2 == 0) {\n        if (*param_4 != 0) {\n            iVar2 = fcn.00418770(param_3 + param_1 * 4, param_2, 0, 0x44365c, 0x4436d4, param_7, param_5, param_8, \n                                 &uStack4, iVar1);\n            if (iVar2 == 0) {\n                if ((*param_5 != 0) || (param_1 < 0x102)) {\n                    (**(param_9 + 0x24))(*(param_9 + 0x28), iVar1);\n                    return 0;\n                }\n            }\n            else {\n                if (iVar2 == -3) {\n                    *(param_9 + 0x18) = \"oversubscribed distance tree\";\n                    (**(param_9 + 0x24))(*(param_9 + 0x28), iVar1);\n                    return -3;\n                }\n                if (iVar2 == -5) {\n                    *(param_9 + 0x18) = \"incomplete distance tree\";\n                    (**(param_9 + 0x24))(*(param_9 + 0x28), iVar1);\n                    return -3;\n                }\n                if (iVar2 == -4) goto code_r0x00418d73;\n            }\n            *(param_9 + 0x18) = \"empty distance tree with lengths\";\n            iVar2 = -3;\ncode_r0x00418d73:\n            (**(param_9 + 0x24))(*(param_9 + 0x28), iVar1);\n            return iVar2;\n        }\n    }\n    else {\n        if (iVar2 == -3) {\n            *(param_9 + 0x18) = \"oversubscribed literal/length tree\";\n            (**(param_9 + 0x24))(*(param_9 + 0x28), iVar1);\n            return -3;\n        }\n        if (iVar2 == -4) goto code_r0x00418db6;\n    }\n    *(param_9 + 0x18) = \"incomplete literal/length tree\";\n    iVar2 = -3;\ncode_r0x00418db6:\n    (**(param_9 + 0x24))(*(param_9 + 0x28), iVar1);\n    return iVar2;\n}\n",
        "token_count": 727
    },
    "0041968c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "link function at runtime on Windows"
        ],
        "decompiled_code": "\nvoid fcn.0041968c(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    \n    if (*0x451f10 == 0) {\n        iVar2 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(\"KERNEL32\");\n        *0x451f10 = iVar2;\n        if (iVar2 == 0) {\n            iVar2 = fcn.0041944d();\n        }\n        pcVar1 = _sym.imp.KERNEL32.dll_GetProcAddress;\n        *0x451efc = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, \"CreateActCtxW\");\n        *0x451f00 = (*pcVar1)(*0x451f10, \"ReleaseActCtx\");\n        *0x451f04 = (*pcVar1)(*0x451f10, \"ActivateActCtx\");\n        *0x451f08 = (*pcVar1)(*0x451f10, \"DeactivateActCtx\");\n    }\n    return;\n}\n",
        "token_count": 217
    },
    "00419755": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuchar __cdecl fcn.00419755(uint arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uchar uVar2;\n    \n    if (arg_ch == 0) {\n        fcn.0041944d();\n    }\n    if (*0x451f04 == 0) {\n        uVar2 = 2;\n    }\n    else {\n        iVar1 = fcn.00419727(arg_8h, arg_ch);\n        uVar2 = iVar1 != 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 122
    },
    "00419788": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00419788(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint *puVar3;\n    uint arg_8h;\n    uint var_230h;\n    uint var_22ch;\n    uint *var_228h;\n    uint var_21ch;\n    uint var_214h;\n    uint lpFilename;\n    int16_t var_8h;\n    ushort var_6h;\n    uint32_t var_4h;\n    \n    var_4h = *0x45060c ^ &stack0xfffffffc;\n    fcn.0041968c();\n    uVar2 = *(param_1 + 8);\n    var_6h = 0;\n    var_8h = 0;\n    arg_8h = 0x105;\n    iVar1 = (*_sym.imp.KERNEL32.dll_GetModuleFileNameW)(uVar2, &lpFilename);\n    if (iVar1 != 0) {\n        if (var_8h == 0) {\n            var_228h = &lpFilename;\n            puVar3 = &var_230h;\n            var_230h = 0x20;\n            var_22ch = 0x88;\n            var_21ch = 2;\n            var_214h = uVar2;\n            iVar1 = fcn.004196fa(puVar3);\n            *(param_1 + 0x80) = iVar1;\n            if (iVar1 == -1) {\n                var_21ch = 3;\n                uVar2 = fcn.004196fa(&var_230h);\n                *(param_1 + 0x80) = uVar2;\n            }\n            if (*(param_1 + 0x80) == -1) {\n                var_21ch = 1;\n                iVar1 = fcn.004196fa(puVar3, &var_230h);\n                *(param_1 + 0x80) = iVar1;\n                if (iVar1 == -1) {\n                    *(param_1 + 0x80) = 0;\n                }\n            }\n        }\n        else {\n            (*_sym.imp.KERNEL32.dll_SetLastError)(0x6f);\n        }\n    }\n    fcn.004294b3(arg_8h);\n    return;\n}\n",
        "token_count": 509
    },
    "00419911": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00419911(code **param_1)\n\n{\n    uint uVar1;\n    code *pcVar2;\n    \n    *param_1 = vtable.AFX_MODULE_THREAD_STATE.0;\n    if (param_1[0xf] != NULL) {\n        (**(*param_1[0xf] + 0x144))();\n    }\n    fcn.00419316(param_1[0x12]);\n    if (param_1[5] != NULL) {\n        (***param_1[5])(1);\n    }\n    if (param_1[6] != NULL) {\n        (***param_1[6])(1);\n    }\n    if (param_1[7] != NULL) {\n        (***param_1[7])(1);\n    }\n    if (param_1[8] != NULL) {\n        (***param_1[8])(1);\n    }\n    if (param_1[9] != NULL) {\n        (***param_1[9])(1);\n    }\n    pcVar2 = param_1[0xe];\n    if (pcVar2 != NULL) {\n        while (*(pcVar2 + 0xc) != 0) {\n            uVar1 = fcn.00424e56();\n            fcn.00419316(uVar1);\n            pcVar2 = param_1[0xe];\n        }\n    }\n    if (param_1[0xc] != NULL) {\n        (**(*param_1[0xc] + 4))(1);\n    }\n    if (param_1[0xd] != NULL) {\n        (**(*param_1[0xd] + 4))(1);\n    }\n    if (param_1[0xe] != NULL) {\n        (**(*param_1[0xe] + 4))(1);\n    }\n    return;\n}\n",
        "token_count": 403
    },
    "00419b36": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00419b36(code **param_1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t **ppiVar3;\n    \n    *param_1 = vtable.CDllIsolationWrapperBase.0;\n    if (*(param_1 + 2) != '\\0') {\n        (*_sym.imp.KERNEL32.dll_FreeLibrary)(param_1[1]);\n    }\n    ppiVar3 = param_1[3] + -0x10;\n    piVar1 = param_1[3] + -4;\n    LOCK();\n    iVar2 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar2 == 1 || iVar2 + -1 < 0) {\n        (**(**ppiVar3 + 4))(ppiVar3);\n    }\n    return;\n}\n",
        "token_count": 194
    },
    "0041a056": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041a056(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t in_ECX;\n    \n    iVar1 = fcn.0041a00a();\n    if ((*(iVar1 + 0x7c) == 0) || (*(arg_8h + 0x80) == -1)) {\n        *(in_ECX + 4) = 0;\n    }\n    else {\n        uVar2 = fcn.00419727(*(arg_8h + 0x80));\n        *(in_ECX + 4) = uVar2;\n    }\n    return;\n}\n",
        "token_count": 149
    },
    "0041a4e4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041a4e4(int32_t arg_8h)\n\n{\n    int32_t in_ECX;\n    \n    if (in_ECX != 0) goto code_r0x0041a4f4;\n    do {\n        in_ECX = fcn.0041944d();\ncode_r0x0041a4f4:\n    } while (arg_8h == 0);\n    do {\n        if (in_ECX == arg_8h) {\n            return 1;\n        }\n        in_ECX = *(in_ECX + 0x10);\n    } while (in_ECX != 0);\n    return 0;\n}\n",
        "token_count": 147
    },
    "0041a52d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0041a52d(uint arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    \n    if (arg_ch != 0) {\n        iVar1 = fcn.0041a50f(arg_8h);\n        if (iVar1 != 0) {\n            return arg_ch;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 87
    },
    "0041a6e6": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0041a6e6(int32_t arg_8h, uint32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    if ((arg_ch == 0) || (arg_8h == 0)) {\n        iVar1 = 0;\n    }\n    else {\n        if ((*(in_ECX + 0x18) & 1) == 0) {\n            fcn.0041a6a3(4, *(in_ECX + 0x14));\n        }\n        uVar3 = *(in_ECX + 0x2c) - *(in_ECX + 0x28);\n        if (arg_ch < uVar3) {\n            uVar3 = arg_ch;\n        }\n        fcn.004010b0(arg_8h, arg_ch, *(in_ECX + 0x28), uVar3);\n        *(in_ECX + 0x28) = *(in_ECX + 0x28) + uVar3;\n        arg_8h = arg_8h + uVar3;\n        uVar3 = arg_ch - uVar3;\n        if (uVar3 != 0) {\n            iVar1 = uVar3 - uVar3 % *(in_ECX + 0x20);\n            var_8h = 0;\n            var_4h = iVar1;\n            do {\n                iVar2 = (**(**(in_ECX + 0x24) + 0x34))(arg_8h, var_4h);\n                arg_8h = arg_8h + iVar2;\n                var_8h = var_8h + iVar2;\n                var_4h = var_4h - iVar2;\n                if (iVar2 == 0) break;\n            } while (var_4h != 0);\n            uVar3 = uVar3 - var_8h;\n            if ((uVar3 != 0) && (var_8h == iVar1)) {\n                uVar4 = 0;\n                if (*(in_ECX + 8) == 0) {\n                    if ((*(in_ECX + 0xc) != 0) || (var_4h = *(in_ECX + 0x20),  *(in_ECX + 0x20) < uVar3)) {\n                        var_4h = uVar3;\n                    }\n                    var_8h = *(in_ECX + 0x30);\n                    do {\n                        iVar1 = (**(**(in_ECX + 0x24) + 0x34))(var_8h, var_4h);\n                        var_8h = var_8h + iVar1;\n                        var_4h = var_4h - iVar1;\n                        uVar4 = uVar4 + iVar1;\n                        if ((iVar1 == 0) || (var_4h == 0)) break;\n                    } while (uVar4 < uVar3);\n                    iVar1 = *(in_ECX + 0x30);\n                    *(in_ECX + 0x2c) = iVar1 + uVar4;\n                }\n                else {\n                    (**(**(in_ECX + 0x24) + 0x50))(0, *(in_ECX + 0x20), in_ECX + 0x30, in_ECX + 0x2c);\n                    iVar1 = *(in_ECX + 0x30);\n                }\n                uVar4 = *(in_ECX + 0x2c) - iVar1;\n                *(in_ECX + 0x28) = iVar1;\n                if (uVar3 < uVar4) {\n                    uVar4 = uVar3;\n                }\n                fcn.004010b0(arg_8h, uVar3, iVar1, uVar4);\n                *(in_ECX + 0x28) = *(in_ECX + 0x28) + uVar4;\n                uVar3 = uVar3 - uVar4;\n            }\n        }\n        iVar1 = arg_ch - uVar3;\n    }\n    return iVar1;\n}\n",
        "token_count": 943
    },
    "0041a817": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041a817(int32_t param_1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar3 = *(param_1 + 0x28);\n    if ((*(param_1 + 0x18) & 1) == 0) {\n        piVar1 = param_1 + 0x30;\n        iVar2 = *piVar1;\n        if (*(param_1 + 8) == 0) {\n            if (iVar3 != iVar2) {\n                (**(**(param_1 + 0x24) + 0x38))(iVar2, iVar3 - iVar2);\n            }\n        }\n        else {\n            if (iVar3 != iVar2) {\n                (**(**(param_1 + 0x24) + 0x50))(2, iVar3 - iVar2, 0, 0);\n            }\n            (**(**(param_1 + 0x24) + 0x50))(1, *(param_1 + 0x20), piVar1, param_1 + 0x2c);\n        }\n        iVar3 = *piVar1;\n    }\n    else {\n        if (*(param_1 + 0x2c) != iVar3) {\n            iVar3 = iVar3 - *(param_1 + 0x2c);\n            (**(**(param_1 + 0x24) + 0x28))(iVar3, iVar3 >> 0x1f, 1);\n        }\n        iVar3 = *(param_1 + 0x2c);\n    }\n    *(param_1 + 0x28) = iVar3;\n    return;\n}\n",
        "token_count": 376
    },
    "0041a88f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041a88f(int32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t in_ECX;\n    int32_t iVar6;\n    int32_t iVar7;\n    uint arg_8h_00;\n    int32_t in_stack_ffffffe4;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    iVar6 = in_ECX;\n    if ((*(in_ECX + 0x18) & 1) != 0) goto code_r0x0041a8ab;\n    arg_8h_00 = 4;\n    in_stack_ffffffe4 = *(in_ECX + 0x14);\n    do {\n        fcn.0041a6a3(arg_8h_00, in_stack_ffffffe4);\n        iVar6 = in_ECX;\ncode_r0x0041a8ab:\n        in_ECX = in_stack_ffffffe4;\n        uVar2 = *(iVar6 + 0x28);\n        piVar1 = iVar6 + 0x2c;\n        var_4h = *piVar1 - uVar2;\n        uVar3 = arg_8h + var_4h;\n        if (*(iVar6 + 8) == 0) {\n            uVar4 = *(iVar6 + 0x30);\n            if (uVar4 < uVar2) {\n                if (0 < var_4h) {\n                    fcn.004010e0(uVar4, *piVar1 - uVar4, uVar2, var_4h);\n                    uVar4 = *(iVar6 + 0x30);\n                    *(iVar6 + 0x28) = uVar4;\n                    *piVar1 = uVar4 + var_4h;\n                }\n                if (*(iVar6 + 0xc) == 0) {\n                    arg_8h = *(iVar6 + 0x20);\n                }\n                arg_8h = arg_8h - var_4h;\n                iVar7 = var_4h + uVar4;\n                do {\n                    iVar5 = (**(**(iVar6 + 0x24) + 0x34))(iVar7, arg_8h);\n                    var_4h = var_4h + iVar5;\n                    arg_8h = arg_8h - iVar5;\n                    iVar7 = iVar7 + iVar5;\n                    if ((iVar5 == 0) || (arg_8h == 0)) break;\n                } while (var_4h < uVar3);\n                *(iVar6 + 0x28) = *(iVar6 + 0x30);\n                *piVar1 = *(iVar6 + 0x30) + var_4h;\n            }\n        }\n        else {\n            if (var_4h != 0) {\n                (**(**(iVar6 + 0x24) + 0x28))(-var_4h, -var_4h >> 0x1f, 1);\n            }\n            (**(**(iVar6 + 0x24) + 0x50))(0, *(iVar6 + 0x20), iVar6 + 0x30, piVar1);\n            *(iVar6 + 0x28) = *(iVar6 + 0x30);\n        }\n        if (uVar3 <= *piVar1 - *(iVar6 + 0x28)) {\n            return;\n        }\n        arg_8h_00 = 3;\n        in_stack_ffffffe4 = in_ECX;\n    } while( true );\n}\n",
        "token_count": 817
    },
    "0041ab9a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.0041ab9a(uint32_t arg_8h, uint *arg_ch)\n\n{\n    code *pcVar1;\n    uint *puVar2;\n    uint *var_8h;\n    int32_t var_4h;\n    \n    puVar2 = arg_ch;\n    *arg_ch = 1;\n    fcn.0041aa7a(&arg_ch + 3);\n    if (arg_ch._3_1_ == -1) {\n        fcn.0041ab0b(&arg_8h);\n        if (arg_8h == -2) {\n            *puVar2 = 2;\n            fcn.0041aa7a(&arg_ch + 3);\n            if (arg_ch._3_1_ != -1) goto code_r0x0041abc0;\n            fcn.0041ab0b(&arg_8h);\n        }\n        if (arg_8h < 0xffff) {\n            puVar2 = arg_8h & 0xffff;\n        }\n        else {\n            fcn.0041ab53(&arg_ch);\n            puVar2 = arg_ch;\n            if (arg_ch == 0xffffffff) {\n                fcn.0041aabe(&var_8h);\n                if ((var_4h != 0) || (puVar2 = var_8h,  0x7fffffff < var_8h)) {\n                    fcn.0041a6a3(1, 0);\n                    pcVar1 = swi(3);\n                    puVar2 = (*pcVar1)();\n                    return puVar2;\n                }\n            }\n        }\n    }\n    else {\ncode_r0x0041abc0:\n        puVar2 = arg_ch >> 0x18;\n    }\n    return puVar2;\n}\n",
        "token_count": 395
    },
    "0041ac4b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041ac4b(uint arg_8h, uint32_t arg_ch, int32_t arg_10h)\n\n{\n    if (arg_10h != 0) {\n        fcn.0041a97e(0xff);\n        fcn.0041a9fd(0xfffe);\n    }\n    if (arg_ch < 0xff) {\n        fcn.0041a97e(arg_ch);\n    }\n    else {\n        fcn.0041a97e(0xff);\n        if (arg_ch < 0xfffe) {\n            fcn.0041a9fd(arg_ch);\n        }\n        else {\n            fcn.0041a9fd(0xffff);\n            if (arg_ch == 0xffffffff) {\n                fcn.0041aa3c(0xffffffff);\n                fcn.0041a9b9(0xffffffff, 0);\n            }\n            else {\n                fcn.0041aa3c(arg_ch);\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 225
    },
    "0041accf": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.0041accf(int32_t lpString1)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    \n    if (lpString1 == 0) {\n        fcn.0041944d();\n    }\n    iVar1 = fcn.0041a00a();\n    fcn.00426527(0);\n    puVar2 = *(iVar1 + 0x1c);\n    while( true ) {\n        if (puVar2 == NULL) {\n            fcn.00426599(0);\n            return NULL;\n        }\n        iVar1 = (*_sym.imp.KERNEL32.dll_lstrcmpA)(lpString1, *puVar2);\n        if (iVar1 == 0) break;\n        puVar2 = puVar2[5];\n    }\n    fcn.00426599(0);\n    return puVar2;\n}\n",
        "token_count": 193
    },
    "0041ad98": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041ad98(int32_t arg_8h, uint32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t in_ECX;\n    uint32_t uVar2;\n    int32_t iVar3;\n    \n    if ((arg_ch != 0) && (arg_8h != 0)) {\n        if ((~*(in_ECX + 0x18) & 1) == 0) {\n            fcn.0041a6a3(2, *(in_ECX + 0x14));\n        }\n        uVar1 = *(in_ECX + 0x2c) - *(in_ECX + 0x28);\n        uVar2 = arg_ch;\n        if (uVar1 <= arg_ch) {\n            uVar2 = uVar1;\n        }\n        fcn.004010b0(*(in_ECX + 0x28), uVar1, arg_8h, uVar2);\n        *(in_ECX + 0x28) = *(in_ECX + 0x28) + uVar2;\n        arg_ch = arg_ch - uVar2;\n        if (arg_ch != 0) {\n            fcn.0041a817();\n            iVar3 = arg_ch - arg_ch % *(in_ECX + 0x20);\n            (**(**(in_ECX + 0x24) + 0x38))(arg_8h + uVar2, iVar3);\n            arg_ch = arg_ch - iVar3;\n            if (*(in_ECX + 8) != 0) {\n                (**(**(in_ECX + 0x24) + 0x50))(1, *(in_ECX + 0x20), in_ECX + 0x30, in_ECX + 0x2c);\n                *(in_ECX + 0x28) = *(in_ECX + 0x30);\n            }\n            if (arg_ch < *(in_ECX + 0x20)) goto code_r0x0041ae3f;\n            do {\n                fcn.0041944d();\ncode_r0x0041ae3f:\n            } while (*(in_ECX + 0x28) != *(in_ECX + 0x30));\n            fcn.004010b0(*(in_ECX + 0x28), arg_ch, arg_8h + uVar2 + iVar3, arg_ch);\n            *(in_ECX + 0x28) = *(in_ECX + 0x28) + arg_ch;\n        }\n    }\n    return;\n}\n",
        "token_count": 564
    },
    "0041af1b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0041af1b(int32_t param_1)\n\n{\n    uint uVar1;\n    \n    if (*(param_1 + 0x4c) != 0) {\n    // WARNING: Could not recover jumptable at 0x0041af2c. Too many branches\n    // WARNING: Treating indirect jump as call\n        uVar1 = (**(**(param_1 + 0x4c) + 0x98))();\n        return uVar1;\n    }\n    return 0;\n}\n",
        "token_count": 119
    },
    "0041af38": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0041af38(int32_t param_1)\n\n{\n    uint uVar1;\n    \n    if (*(param_1 + 0x4c) != 0) {\n    // WARNING: Could not recover jumptable at 0x0041af49. Too many branches\n    // WARNING: Treating indirect jump as call\n        uVar1 = (**(**(param_1 + 0x4c) + 0x54))();\n        return uVar1;\n    }\n    return 0;\n}\n",
        "token_count": 117
    },
    "0041af52": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041af52(uint nIDDlgItem)\n\n{\n    uint arg_8h;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x4c) == 0) {\n        arg_8h = (*_sym.imp.USER32.dll_GetDlgItem)(*(in_ECX + 0x20), nIDDlgItem);\n        fcn.004211d4(arg_8h);\n        return;\n    }\n    // WARNING: Could not recover jumptable at 0x0041af79. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**(**(in_ECX + 0x4c) + 0x74))();\n    return;\n}\n",
        "token_count": 160
    },
    "0041af7c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041af7c(uint nIDDlgItem, uint *arg_ch)\n\n{\n    uint uVar1;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x4c) == 0) {\n        uVar1 = (*_sym.imp.USER32.dll_GetDlgItem)(*(in_ECX + 0x20), nIDDlgItem);\n        *arg_ch = uVar1;\n        return;\n    }\n    // WARNING: Could not recover jumptable at 0x0041afa2. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**(**(in_ECX + 0x4c) + 0x70))();\n    return;\n}\n",
        "token_count": 160
    },
    "0041afdc": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041afdc(int32_t param_1)\n\n{\n    if (*(param_1 + 0x50) == 0) {\n        (*_sym.imp.USER32.dll_GetWindowLongA)(*(param_1 + 0x20), 0xfffffff0);\n        return;\n    }\n    // WARNING: Could not recover jumptable at 0x0041aff3. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**(**(param_1 + 0x50) + 0x78))();\n    return;\n}\n",
        "token_count": 128
    },
    "0041aff6": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041aff6(int32_t param_1)\n\n{\n    if (*(param_1 + 0x50) == 0) {\n        (*_sym.imp.USER32.dll_GetWindowLongA)(*(param_1 + 0x20), 0xffffffec);\n        return;\n    }\n    // WARNING: Could not recover jumptable at 0x0041b00d. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**(**(param_1 + 0x50) + 0x7c))();\n    return;\n}\n",
        "token_count": 129
    },
    "0041b010": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041b010(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x50) == 0) {\n        fcn.0041f59f(*(in_ECX + 0x20), arg_8h, arg_ch, arg_10h);\n        return;\n    }\n    // WARNING: Could not recover jumptable at 0x0041b036. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**(**(in_ECX + 0x50) + 0x84))();\n    return;\n}\n",
        "token_count": 149
    },
    "0041b03c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041b03c(uint lpString)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    \n    if (in_ECX != 0) goto code_r0x0041b04d;\n    while( true ) {\n        fcn.0041944d();\ncode_r0x0041b04d:\n        iVar1 = (*_sym.imp.USER32.dll_IsWindow)(*(in_ECX + 0x20));\n        if (iVar1 != 0) break;\n        if (*(in_ECX + 0x50) != 0) {\ncode_r0x0041b05f:\n    // WARNING: Could not recover jumptable at 0x0041b066. Too many branches\n    // WARNING: Treating indirect jump as call\n            (**(**(in_ECX + 0x50) + 0x88))();\n            return;\n        }\n    }\n    if (*(in_ECX + 0x50) == 0) {\n        (*_sym.imp.USER32.dll_SetWindowTextA)(*(in_ECX + 0x20), lpString);\n        return;\n    }\n    goto code_r0x0041b05f;\n}\n",
        "token_count": 262
    },
    "0041b083": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041b083(uint nCmdShow)\n\n{\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x50) == 0) {\n        (*_sym.imp.USER32.dll_ShowWindow)(*(in_ECX + 0x20), nCmdShow);\n        return;\n    }\n    // WARNING: Could not recover jumptable at 0x0041b0a4. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**(**(in_ECX + 0x50) + 0xa0))();\n    return;\n}\n",
        "token_count": 133
    },
    "0041b0aa": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041b0aa(int32_t param_1)\n\n{\n    if (*(param_1 + 0x50) == 0) {\n        (*_sym.imp.USER32.dll_IsWindowEnabled)(*(param_1 + 0x20));\n        return;\n    }\n    // WARNING: Could not recover jumptable at 0x0041b0bf. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**(**(param_1 + 0x50) + 0xa4))();\n    return;\n}\n",
        "token_count": 123
    },
    "0041b0c5": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041b0c5(uint bEnable)\n\n{\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x50) == 0) {\n        (*_sym.imp.USER32.dll_EnableWindow)(*(in_ECX + 0x20), bEnable);\n        return;\n    }\n    // WARNING: Could not recover jumptable at 0x0041b0e6. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**(**(in_ECX + 0x50) + 0xa8))();\n    return;\n}\n",
        "token_count": 133
    },
    "0041b0ec": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041b0ec(int32_t param_1)\n\n{\n    uint arg_8h;\n    \n    if (*(param_1 + 0x50) == 0) {\n        arg_8h = (*_sym.imp.USER32.dll_SetFocus)(*(param_1 + 0x20));\n        fcn.004211d4(arg_8h);\n        return;\n    }\n    // WARNING: Could not recover jumptable at 0x0041b107. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**(**(param_1 + 0x50) + 0xb0))();\n    return;\n}\n",
        "token_count": 147
    },
    "0041b10d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041b10d(int32_t arg_8h, uint arg_ch)\n\n{\n    int32_t in_ECX;\n    \n    if ((*(in_ECX + 0x50) == 0) && (*(arg_8h + 0x4c) != 0)) {\n        (**(**(arg_8h + 0x4c) + 0x9c))();\n    }\n    return;\n}\n",
        "token_count": 98
    },
    "0041b151": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041b151(int32_t arg_8h, uint X, uint Y, uint cx, uint cy, uint uFlags)\n\n{\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x50) == 0) {\n        if (arg_8h != 0) {\n            arg_8h = *(arg_8h + 0x20);\n        }\n        (*_sym.imp.USER32.dll_SetWindowPos)(*(in_ECX + 0x20), arg_8h, X, Y, cx, cy, uFlags);\n        return;\n    }\n    // WARNING: Could not recover jumptable at 0x0041b189. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**(**(in_ECX + 0x50) + 0x9c))();\n    return;\n}\n",
        "token_count": 195
    },
    "0041b18f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041b18f(uint arg_8h)\n\n{\n    uint arg_8h_00;\n    int32_t iVar1;\n    int32_t in_ECX;\n    \n    if ((in_ECX != 0) && (*(in_ECX + 0x50) == 0)) {\n        arg_8h_00 = (*_sym.imp.USER32.dll_GetParent)(*(in_ECX + 0x20));\n        iVar1 = fcn.0042605f(arg_8h_00);\n        if ((iVar1 != 0) && (*(iVar1 + 0x4c) != 0)) {\n            (**(**(iVar1 + 0x4c) + 0x9c))();\n        }\n    }\n    return;\n}\n",
        "token_count": 170
    },
    "0041b285": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.0041b285(void)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    uint32_t unaff_EBX;\n    int32_t unaff_EBP;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x24) != 2) {\n        uVar1 = *(unaff_EBP + -0x1c) == unaff_EBX;\n        if (uVar1 == unaff_EBX) {\n            uVar2 = 0;\n        }\n        else {\n            uVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        }\n        fcn.0041973e();\n        if (uVar1 != unaff_EBX) {\n            (*_sym.imp.KERNEL32.dll_SetLastError)(uVar2);\n        }\n    }\n    return;\n}\n",
        "token_count": 197
    },
    "0041b2f1": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0041b2f1(uint lpBuffer, int32_t nNumberOfBytesToRead)\n\n{\n    int32_t iVar1;\n    uint arg_8h;\n    int32_t in_ECX;\n    uint arg_ch;\n    \n    if (nNumberOfBytesToRead == 0) {\n        nNumberOfBytesToRead = 0;\n    }\n    else {\n        iVar1 = (*_sym.imp.KERNEL32.dll_ReadFile)\n                          (*(in_ECX + 4), lpBuffer, nNumberOfBytesToRead, &nNumberOfBytesToRead, 0);\n        if (iVar1 == 0) {\n            arg_ch = *(in_ECX + 0xc);\n            arg_8h = (*_sym.imp.KERNEL32.dll_GetLastError)();\n            fcn.00424dea(arg_8h, arg_ch);\n        }\n    }\n    return nNumberOfBytesToRead;\n}\n",
        "token_count": 196
    },
    "0041b823": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0041b823(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint32_t arg_8h_00;\n    int32_t arg_8h_01;\n    uint uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t unaff_EBP;\n    uint var_164h;\n    uint var_160h;\n    uint lpFilePart;\n    uint lpFileName;\n    uint lpRootPathName;\n    uint lpFindFileData;\n    uint lpString;\n    uint var_4h;\n    \n    fcn.0042cc2f(0x158);\n    arg_8h_00 = *(unaff_EBP + 8);\n    iVar2 = *(unaff_EBP + 0xc);\n    arg_8h_01 = *(unaff_EBP + 0x10);\n    *(unaff_EBP + -0x158) = iVar2;\n    if (arg_8h_00 != 0) goto code_r0x0041b851;\n    do {\n        iVar2 = fcn.0041944d();\ncode_r0x0041b851:\n    } while (iVar2 == 0);\n    uVar3 = (*_sym.imp.KERNEL32.dll_GetFullPathNameA)(iVar2, 0x104, arg_8h_00, unaff_EBP + -0x15c);\n    if (uVar3 == 0) {\n        fcn.00419498(arg_8h_00, 0x104, *(unaff_EBP + -0x158), 0xffffffff);\n        fcn.0041b7f4(arg_8h_01, *(unaff_EBP + -0x158));\n        goto code_r0x0041b9b8;\n    }\n    if (0x103 < uVar3) {\n        if (arg_8h_01 != 0) {\n            uVar1 = *(unaff_EBP + -0x158);\n            *(arg_8h_01 + 8) = 3;\n            fcn.00402e60(uVar1);\n        }\n        goto code_r0x0041b9b8;\n    }\n    fcn.00401840();\n    *(unaff_EBP + -4) = 0;\n    fcn.0041b692(arg_8h_00, unaff_EBP + -0x154);\n    iVar2 = (*_sym.imp.SHLWAPI.dll_PathIsUNCA)(*(unaff_EBP + -0x154));\n    if (iVar2 == 0) {\n        iVar2 = (*_sym.imp.KERNEL32.dll_GetVolumeInformationA)\n                          (*(unaff_EBP + -0x154), 0, 0, 0, unaff_EBP + -0x164, unaff_EBP + -0x160, 0, 0);\n        if (iVar2 == 0) {\ncode_r0x0041b90c:\n            fcn.0041b7f4(arg_8h_01, *(unaff_EBP + -0x158));\n        }\n        else {\n            if ((*(unaff_EBP + -0x160) & 2) == 0) {\n                (*_sym.imp.USER32.dll_CharUpperA)(arg_8h_00);\n            }\n            if (((*(unaff_EBP + -0x160) & 4) != 0) ||\n               (iVar2 = (*_sym.imp.KERNEL32.dll_FindFirstFileA)(*(unaff_EBP + -0x158), unaff_EBP + -0x150),  iVar2 == -1\n               )) goto code_r0x0041b9a7;\n            (*_sym.imp.KERNEL32.dll_FindClose)(iVar2);\n            if ((*(unaff_EBP + -0x15c) == 0) ||\n               (*(unaff_EBP + -0x15c) < arg_8h_00 || *(unaff_EBP + -0x15c) == arg_8h_00)) goto code_r0x0041b90c;\n            iVar2 = (*_sym.imp.KERNEL32.dll_lstrlenA)(unaff_EBP + -0x124);\n            iVar4 = *(unaff_EBP + -0x15c) - arg_8h_00;\n            if (iVar2 + iVar4 < 0x104) {\n                fcn.0041b1d3(*(unaff_EBP + -0x15c), 0x104 - iVar4, unaff_EBP + -0x124);\n                goto code_r0x0041b9a7;\n            }\n            if (arg_8h_01 != 0) {\n                uVar1 = *(unaff_EBP + -0x158);\n                *(arg_8h_01 + 8) = 3;\n                fcn.00402e60(uVar1);\n            }\n        }\n        fcn.004011c0();\n    }\n    else {\ncode_r0x0041b9a7:\n        fcn.004011c0();\n    }\ncode_r0x0041b9b8:\n    fcn.0042ccb2();\n    return;\n}\n",
        "token_count": 1170
    },
    "0041b9e2": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041b9e2(int32_t arg_8h, uint32_t arg_ch, int32_t arg_10h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t in_ECX;\n    uint uVar4;\n    int32_t in_stack_fffffec4;\n    uint lpSecurityAttributes;\n    uint var_11ch;\n    uint32_t var_118h;\n    int32_t var_114h;\n    uint dwDesiredAccess;\n    int32_t lpFileName;\n    uint var_108h;\n    uint32_t var_4h;\n    \n    var_4h = *0x45060c ^ &stack0xfffffffc;\n    *(in_ECX + 8) = 0;\n    *(in_ECX + 4) = 0xffffffff;\n    lpFileName = arg_8h;\n    var_114h = arg_10h;\n    fcn.00401600();\n    if ((lpFileName == 0) || (in_stack_fffffec4 = lpFileName,  iVar2 = fcn.0041b2ba(lpFileName, 0x104, 0),  iVar2 < 0))\n    {\n        if (var_114h != 0) {\n            *(var_114h + 8) = 3;\n            fcn.00402e60();\n        }\n        goto code_r0x0041bbbb;\n    }\n    iVar2 = fcn.0041b823(&var_108h, lpFileName, var_114h);\n    if (iVar2 == 0) goto code_r0x0041bbbb;\n    fcn.004021c0(&var_108h);\n    uVar3 = arg_ch & 3;\n    dwDesiredAccess = 0;\n    if (uVar3 == 0) {\n        dwDesiredAccess = 0x80000000;\n    }\n    else if (uVar3 == 1) {\n        dwDesiredAccess = 0x40000000;\n    }\n    else if (uVar3 == 2) {\n        dwDesiredAccess = 0xc0000000;\n    }\n    uVar3 = arg_ch & 0x70;\n    uVar4 = 1;\n    if ((uVar3 == 0) || (uVar3 == 0x10)) {\ncode_r0x0041bad7:\n        uVar4 = 0;\n    }\n    else if (uVar3 != 0x20) {\n        if (uVar3 == 0x30) {\n            uVar4 = 2;\n        }\n        else {\n            uVar4 = 3;\n            if (uVar3 != 0x40) goto code_r0x0041bad7;\n        }\n    }\n    var_118h = ~((arg_ch & 0xffff7fff) >> 7) & 1;\n    lpSecurityAttributes = 0xc;\n    var_11ch = 0;\n    if ((arg_ch & 0x1000) == 0) {\n        cVar1 = '\\x03';\n    }\n    else {\n        cVar1 = (-((arg_ch & 0x2000) != 0) & 2U) + 2;\n    }\n    uVar3 = 0x80;\n    if ((arg_ch & 0x10000) != 0) {\n        uVar3 = 0x20000080;\n    }\n    if ((arg_ch & 0x20000) != 0) {\n        uVar3 = uVar3 | 0x80000000;\n    }\n    if ((arg_ch & 0x40000) != 0) {\n        uVar3 = uVar3 | 0x10000000;\n    }\n    if ((arg_ch & 0x80000) != 0) {\n        uVar3 = uVar3 | 0x8000000;\n    }\n    iVar2 = (*_sym.imp.KERNEL32.dll_CreateFileA)\n                      (lpFileName, dwDesiredAccess, uVar4, &lpSecurityAttributes, cVar1, uVar3, 0);\n    if (iVar2 == -1) {\n        fcn.0041b7f4(var_114h, lpFileName);\n    }\n    else {\n        *(in_ECX + 4) = iVar2;\n        *(in_ECX + 8) = 1;\n    }\ncode_r0x0041bbbb:\n    fcn.004294b3(in_stack_fffffec4);\n    return;\n}\n",
        "token_count": 998
    },
    "0041bd1a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0041bd1a(int32_t arg_8h)\n\n{\n    unkuint3 Var2;\n    uint32_t uVar1;\n    uint32_t *in_ECX;\n    \n    Var2 = *0x451f40 >> 8;\n    if (*0x451f40 == NULL) {\n        uVar1 = CONCAT31(Var2, 1);\n    }\n    else if ((arg_8h == 0) || (*in_ECX != 0xffffffff)) {\n        uVar1 = Var2 << 8;\n    }\n    else {\n        uVar1 = (**0x451f40)(arg_8h);\n        *in_ECX = uVar1;\n        uVar1 = uVar1 & 0xffffff00 | uVar1 != 0xffffffff;\n    }\n    return uVar1;\n}\n",
        "token_count": 187
    },
    "0041bd54": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nbool __fastcall fcn.0041bd54(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    \n    if (*0x451f48 == NULL) {\n        return true;\n    }\n    if ((*param_1 != -1) && (param_1[1] == 0)) {\n        iVar1 = (**0x451f48)(*param_1, param_1 + 1);\n        return iVar1 == 1;\n    }\n    return false;\n}\n",
        "token_count": 106
    },
    "0041beac": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041beac(int32_t param_1)\n\n{\n    if (*(param_1 + 0x88) != NULL) {\n        (**(**(param_1 + 0x88) + 0x14))();\n    }\n    if (*(param_1 + 0x94) != 0) {\n        fcn.00426a95(\"Settings\", \"PreviewPages\", *(param_1 + 0x94));\n    }\n    return;\n}\n",
        "token_count": 105
    },
    "0041bee3": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0041bee3(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    if ((*(param_1 + 0x8c) == 0) || ((iVar1 = *(*(param_1 + 0x8c) + 0x14),  iVar1 != 6 && (iVar1 != 5)))) {\n        iVar1 = fcn.0041a00a();\n        if (*(iVar1 + 0x14) == '\\0') {\n            fcn.0041beac();\n        }\n    }\n    if (*(param_1 + 0x9c) != NULL) {\n        (**(param_1 + 0x9c))();\n    }\n    if (*(param_1 + 0x7c) != 0) {\n        (*_sym.imp.KERNEL32.dll_FreeLibrary)(*(param_1 + 0x7c));\n        *(param_1 + 0x7c) = 0;\n    }\n    uVar2 = 0;\n    iVar1 = fcn.0041dca3();\n    if (iVar1 != 0) {\n        iVar1 = fcn.0041dca3();\n        uVar2 = *(iVar1 + 8);\n    }\n    return uVar2;\n}\n",
        "token_count": 288
    },
    "0041c051": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041c051(uint lpString2)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t in_ECX;\n    int32_t var_4h;\n    \n    pcVar1 = _sym.imp.KERNEL32.dll_GlobalLock;\n    if (*(in_ECX + 0x74) != 0) {\n        var_4h = in_ECX;\n        iVar2 = (*_sym.imp.KERNEL32.dll_GlobalLock)(*(in_ECX + 0x74));\n        iVar2 = (*_sym.imp.KERNEL32.dll_lstrcmpA)(*(iVar2 + 2) + iVar2, lpString2);\n        if ((iVar2 == 0) && (iVar2 = sub.WINSPOOL.DRV_OpenPrinterA(lpString2, &var_4h, 0),  iVar2 != 0)) {\n            if (*(in_ECX + 0x70) != 0) {\n                fcn.00426bdd(*(in_ECX + 0x70));\n            }\n            uVar3 = sub.WINSPOOL.DRV_DocumentPropertiesA(0, var_4h, lpString2, 0, 0, 0);\n            uVar3 = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(0x42, uVar3);\n            *(in_ECX + 0x70) = uVar3;\n            uVar3 = (*pcVar1)(uVar3);\n            iVar2 = sub.WINSPOOL.DRV_DocumentPropertiesA(0, var_4h, lpString2, uVar3, 0, 2);\n            if (iVar2 != 1) {\n                fcn.00426bdd(*(in_ECX + 0x70));\n                *(in_ECX + 0x70) = 0;\n            }\n            sub.WINSPOOL.DRV_ClosePrinter(var_4h);\n        }\n    }\n    return;\n}\n",
        "token_count": 425
    },
    "0041c28e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041c28e(int32_t *param_1)\n\n{\n    if ((*0x451f44 != NULL) && (*param_1 != -1)) {\n        fcn.0041bd81();\n        (**0x451f44)(*param_1);\n    }\n    return;\n}\n",
        "token_count": 69
    },
    "0041c3d8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_13h\n\nvoid __cdecl fcn.0041c3d8(uint arg_8h, uint arg_ch)\n\n{\n    code *pcVar1;\n    char cVar2;\n    uint16_t uVar3;\n    uint uVar4;\n    code *pcVar5;\n    uint32_t uVar6;\n    code *pcVar7;\n    int32_t iVar8;\n    int32_t iVar9;\n    int32_t unaff_EBP;\n    uint var_168h;\n    uint var_164h;\n    uint var_160h;\n    uint var_154h;\n    uint var_14ch;\n    uint var_148h;\n    uint var_144h;\n    uint var_140h;\n    uint var_13ch;\n    uint var_134h;\n    uint var_130h;\n    uint var_12ch;\n    uint var_124h;\n    uint lParam;\n    uint var_11ch;\n    uint lpFilename;\n    uint var_13h;\n    uint var_4h;\n    \n    fcn.0042cc2f(0x15c);\n    pcVar1 = _sym.imp.KERNEL32.dll_GetModuleHandleA;\n    *(unaff_EBP + -0x124) = *(unaff_EBP + 8);\n    *(unaff_EBP + -0x130) = *(unaff_EBP + 0xc);\n    *(unaff_EBP + -0x120) = 0;\n    *(unaff_EBP + -0x11c) = 0;\n    uVar4 = (*pcVar1)(0x443dec);\n    pcVar7 = _sym.imp.KERNEL32.dll_GetProcAddress;\n    *(unaff_EBP + -0x134) = uVar4;\n    pcVar5 = (*pcVar7)(uVar4, \"GetUserDefaultUILanguage\");\n    if (pcVar5 == NULL) {\n        iVar8 = (*pcVar1)(\"ntdll.dll\");\n        if (iVar8 != 0) {\n            *(unaff_EBP + -0x120) = 0;\n            (*_sym.imp.KERNEL32.dll_EnumResourceLanguagesA)(iVar8, 0x10, 1, fcn.0041bc49, unaff_EBP + -0x120);\n            pcVar1 = _sym.imp.KERNEL32.dll_ConvertDefaultLocale;\n            if (*(unaff_EBP + -0x120) != 0) {\n                uVar6 = *(unaff_EBP + -0x120) & 0x3ff;\n                uVar4 = (*_sym.imp.KERNEL32.dll_ConvertDefaultLocale)((*(unaff_EBP + -0x120) >> 10) << 10 | uVar6);\n                *(unaff_EBP + -0x148) = uVar4;\n                uVar4 = (*pcVar1)(uVar6);\n                *(unaff_EBP + -0x144) = uVar4;\n                *(unaff_EBP + -0x11c) = 2;\n            }\n        }\n    }\n    else {\n        uVar6 = (*pcVar5)();\n        pcVar1 = _sym.imp.KERNEL32.dll_ConvertDefaultLocale;\n        *(unaff_EBP + -0x120) = uVar6 & 0xffff;\n        *(unaff_EBP + -0x11c) = uVar6 & 0x3ff;\n        uVar4 = (*pcVar1)(uVar6 & 0xffff);\n        *(unaff_EBP + -0x148) = uVar4;\n        uVar4 = (*pcVar1)(*(unaff_EBP + -0x11c));\n        *(unaff_EBP + -0x144) = uVar4;\n        *(unaff_EBP + -0x11c) = 2;\n        pcVar7 = (*pcVar7)(*(unaff_EBP + -0x134), \"GetSystemDefaultUILanguage\");\n        if (pcVar7 != NULL) {\n            uVar3 = (*pcVar7)();\n            *(unaff_EBP + -0x120) = uVar3;\n            uVar4 = (*pcVar1)(uVar3);\n            *(unaff_EBP + -0x140) = uVar4;\n            uVar4 = (*pcVar1)(uVar3 & 0x3ff);\n            *(unaff_EBP + -0x13c) = uVar4;\n            *(unaff_EBP + -0x11c) = 4;\n        }\n    }\n    if (*0x451f54 == 0) {\n        iVar8 = *(unaff_EBP + -0x11c);\n        *(unaff_EBP + -0x11c) = *(unaff_EBP + -0x11c) + 1;\n        *(unaff_EBP + -0x148 + iVar8 * 4) = 0x800;\n    }\n    *(unaff_EBP + -0x13) = 0;\n    *(unaff_EBP + -0x14) = 0;\n    iVar8 = (*_sym.imp.KERNEL32.dll_GetModuleFileNameA)(0x400000, unaff_EBP + -0x118, 0x105);\n    if (iVar8 != 0) {\n        fcn.00429510(unaff_EBP + -0x168, 0, 0x20);\n        *(unaff_EBP + -0x168) = 0x20;\n        *(unaff_EBP + -0x160) = unaff_EBP + -0x118;\n        *(unaff_EBP + -0x154) = 1000;\n        *(unaff_EBP + -0x14c) = 0x400000;\n        *(unaff_EBP + -0x164) = 0x88;\n        fcn.0041bc63(0xffffffff);\n        *(unaff_EBP + -4) = 0;\n        cVar2 = fcn.0041bd1a(unaff_EBP + -0x168);\n        if (cVar2 != '\\0') {\n            fcn.0041bd54();\n        }\n        iVar8 = 0;\n        if (0 < *(unaff_EBP + -0x11c)) {\n            do {\n                iVar9 = fcn.0041c13e(*(unaff_EBP + -0x130), *(unaff_EBP + -0x148 + iVar8 * 4));\n                if (iVar9 != 0) break;\n                iVar8 = iVar8 + 1;\n            } while (iVar8 < *(unaff_EBP + -0x11c));\n        }\n        *(unaff_EBP + -4) = 0xffffffff;\n        fcn.0041c28e();\n    }\n    fcn.0042ccb2();\n    return;\n}\n",
        "token_count": 1518
    },
    "0041ca18": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0041ca18(void)\n\n{\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.0042cbc6(4);\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *extraout_ECX = vtable.CDialog.0;\n    *(unaff_EBP + -4) = 0;\n    if (extraout_ECX[8] != NULL) {\n        fcn.0042142a();\n    }\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.00421958();\n    fcn.0042cc9e();\n    return;\n}\n",
        "token_count": 163
    },
    "0041d4cf": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0041d4cf(int32_t param_1)\n\n{\n    int32_t iVar1;\n    \n    if (*(param_1 + 4) == 0) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(*(param_1 + 0xc));\n        *(param_1 + 4) = iVar1;\n        if (iVar1 == 0) {\n            iVar1 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(*(param_1 + 0xc));\n            *(param_1 + 4) = iVar1;\n            *(param_1 + 8) = iVar1 != 0;\n        }\n    }\n    return *(param_1 + 4);\n}\n",
        "token_count": 161
    },
    "0041d73d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0041d73d(int32_t arg_8h, uint32_t arg_ch, int32_t arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    code **ppcVar5;\n    int32_t *in_ECX;\n    int32_t *piVar6;\n    uint32_t arg_ch_00;\n    \n    if (arg_ch == 0xfffffffe) {\n        iVar1 = fcn.0041a00a();\n        if (*(iVar1 + 0x3c) != 0) goto code_r0x0041d75d;\n    }\n    else {\n        if (arg_ch != 0xfffffffd) {\n            if (arg_ch != 0xffffffff) {\n                uVar4 = arg_ch & 0xffff;\n                arg_ch_00 = arg_ch >> 0x10;\n                arg_ch = uVar4;\n                if (arg_ch_00 != 0) goto code_r0x0041d815;\n            }\n            arg_ch_00 = 0x111;\ncode_r0x0041d815:\n            ppcVar5 = (**(*in_ECX + 0x28))();\n            while( true ) {\n                if (*ppcVar5 == NULL) {\n                    return 0;\n                }\n                iVar1 = fcn.0041f6bd(ppcVar5[1], arg_ch_00, arg_ch, arg_8h);\n                if (iVar1 != 0) break;\n                ppcVar5 = (**ppcVar5)();\n            }\n            iVar1 = fcn.0041d605(in_ECX, arg_8h, arg_ch, *(iVar1 + 0x14), arg_10h, *(iVar1 + 0x10), arg_14h);\n            return iVar1;\n        }\n        arg_ch = 0;\n        if (arg_10h != 0) {\n            iVar1 = *(arg_10h + 0x30);\n            puVar2 = (**(*in_ECX + 0x2c))();\n            do {\n                if (puVar2 == NULL) {\n                    return arg_ch;\n                }\n                if (arg_ch != 0) {\n                    return arg_ch;\n                }\n                piVar6 = puVar2[1];\n                while (((piVar6[1] != 0 && (piVar6[2] != 0)) && (arg_ch == 0))) {\n                    if (arg_8h == piVar6[1]) {\n                        if (iVar1 == 0) {\n                            if (*piVar6 == 0) {\ncode_r0x0041d7da:\n                                *(arg_10h + 4) = piVar6[2];\n                                arg_ch = 1;\n                            }\n                        }\n                        else if ((*piVar6 != 0) && (iVar3 = fcn.0041d5e9(iVar1, *piVar6),  iVar3 != 0))\n                        goto code_r0x0041d7da;\n                    }\n                    piVar6 = piVar6 + 3;\n                }\n                puVar2 = *puVar2;\n            } while( true );\n        }\n    }\n    fcn.0041944d();\ncode_r0x0041d75d:\n    iVar1 = fcn.0041a00a();\n    iVar1 = (**(**(iVar1 + 0x3c) + 4))();\n    return iVar1;\n}\n",
        "token_count": 777
    },
    "0041de9d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041de9d(uint noname_0, uint *arg_ch)\n\n{\n    uint uVar1;\n    \n    if (arg_ch[1] == 1) {\n        uVar1 = 0xffffffff;\n    }\n    else {\n        if (arg_ch[1] == 0xf) {\n            (*_sym.imp.USER32.dll_ValidateRect)(*arg_ch, 0);\n        }\n        uVar1 = 0;\n    }\n    return uVar1;\n}\n",
        "token_count": 109
    },
    "0041deed": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041deed(int32_t *arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t *piVar3;\n    int32_t *piVar4;\n    \n    iVar1 = fcn.0041a03d();\n    if (((*(iVar1 + 4) == 0) || (*arg_8h != 0)) || (iVar1 = fcn.0041de1f(arg_8h),  iVar1 == 0)) {\n        piVar3 = fcn.0041c10b();\n        piVar4 = piVar3;\n        if (piVar3 != NULL) {\n            piVar4 = piVar3[8];\n        }\n        iVar1 = fcn.00421553(piVar4, arg_8h);\n        if (iVar1 == 0) {\n            if (piVar3 != NULL) {\n                fcn.004211d4(*arg_8h);\n                piVar4 = fcn.004224ee();\n                if (piVar4 != piVar3) {\n                    uVar2 = (**(*piVar3 + 0x108))(arg_8h);\n                    return uVar2;\n                }\n            }\n            uVar2 = 0;\n        }\n        else {\n            uVar2 = 1;\n        }\n    }\n    else {\n        uVar2 = 1;\n    }\n    return uVar2;\n}\n",
        "token_count": 315
    },
    "0041e105": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041e105(int32_t arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0041a00a();\n    if ((*(iVar1 + 0x14) == '\\0') && ((-1 < arg_8h || (arg_8h == 0x8001)))) {\n        iVar1 = fcn.0041a03d();\n        if (*(iVar1 + 4) != NULL) {\n            (**(**(iVar1 + 4) + 0x70))(arg_8h, arg_10h);\n            return;\n        }\n    }\n    iVar1 = fcn.00425a63(0x419469);\n    if (iVar1 == 0) {\n        iVar1 = fcn.0041944d();\n    }\n    (*_sym.imp.USER32.dll_CallNextHookEx)(*(iVar1 + 0x2c), arg_8h, arg_ch, arg_10h);\n    return;\n}\n",
        "token_count": 230
    },
    "0041e29d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0041e29d(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    iVar1 = fcn.0041a00a();\n    if (*(iVar1 + 0x14) == '\\0') {\n        iVar1 = fcn.00419a3e();\n        uVar2 = (*_sym.imp.KERNEL32.dll_GetCurrentThreadId)();\n        uVar2 = (*_sym.imp.USER32.dll_SetWindowsHookExA)(0xffffffff, fcn.0041e105, 0, uVar2);\n        *(iVar1 + 0x2c) = uVar2;\n    }\n    return;\n}\n",
        "token_count": 144
    },
    "0041e2cb": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nbool __cdecl fcn.0041e2cb(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t in_ECX;\n    \n    if (arg_8h < 1) {\n        iVar3 = *(in_ECX + 0x20);\n        if (((iVar3 != 0) && (*(iVar3 + 0x20) != 0)) &&\n           (iVar1 = (*_sym.imp.USER32.dll_IsWindowVisible)(*(iVar3 + 0x20)),  iVar1 != 0)) {\n            fcn.00421818(iVar3, *(iVar3 + 0x20), 0x363, 1, 0);\n            fcn.00421b03(*(iVar3 + 0x20), 0x363, 1, 0, 1, 1);\n        }\n        fcn.0041a00a();\n        iVar1 = fcn.00419afa();\n        for (iVar1 = *(iVar1 + 8); iVar1 != 0; iVar1 = *(iVar1 + 0x6c)) {\n            if ((*(iVar1 + 0x20) != 0) && (iVar1 != iVar3)) {\n                if (*(iVar1 + 0xa0) == 0) {\n                    fcn.0041b083(0);\n                }\n                iVar2 = (*_sym.imp.USER32.dll_IsWindowVisible)(*(iVar1 + 0x20));\n                if ((iVar2 != 0) || (-1 < *(iVar1 + 0xa0))) {\n                    fcn.00421818(iVar1, *(iVar1 + 0x20), 0x363, 1, 0);\n                    fcn.00421b03(*(iVar1 + 0x20), 0x363, 1, 0, 1, 1);\n                }\n                if (0 < *(iVar1 + 0xa0)) {\n                    fcn.0041b083(*(iVar1 + 0xa0));\n                }\n                *(iVar1 + 0xa0) = 0xffffffff;\n            }\n        }\n    }\n    else {\n        fcn.0041a00a();\n        iVar3 = fcn.00419afa();\n        if (*(iVar3 + 0x10) == 0) {\n            fcn.0042730d();\n            fcn.00427525(1);\n        }\n    }\n    return arg_8h < 1;\n}\n",
        "token_count": 552
    },
    "0041e3e3": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041e3e3(int32_t param_1)\n\n{\n    int32_t extraout_ECX;\n    \n    if (*(param_1 + 0x58) == 0) {\n        fcn.0041944d();\n        param_1 = extraout_ECX;\n    }\n    // WARNING: Could not recover jumptable at 0x0041e3f9. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**(**(param_1 + 0x58) + 0x14))();\n    return;\n}\n",
        "token_count": 129
    },
    "0041e3fc": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0041e3fc(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t unaff_EBP;\n    uint hKey;\n    uint phkResult;\n    uint lpSubKey;\n    uint var_120h;\n    uint lpName;\n    uint var_4h;\n    \n    fcn.0042cc65(0x124);\n    iVar1 = *(unaff_EBP + 8);\n    *(unaff_EBP + -300) = iVar1;\n    fcn.004018c0(*(unaff_EBP + 0xc));\n    *(unaff_EBP + -4) = 0;\n    if (iVar1 == -0x80000000) {\n        iVar1 = fcn.004198bb();\n        if (iVar1 == 1) {\n            uVar2 = fcn.00401e10(unaff_EBP + -0x120, \"Software\\\\Classes\\\\\", unaff_EBP + -0x124);\n            *(unaff_EBP + -4) = 1;\n            fcn.00402100(uVar2);\n            *(unaff_EBP + -4) = 0;\n            fcn.004011c0();\n            *(unaff_EBP + -300) = 0x80000001;\n        }\n    }\n    iVar1 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyA)(*(unaff_EBP + -300), *(unaff_EBP + -0x124), unaff_EBP + -0x128);\n    if (iVar1 == 0) {\n        while( true ) {\n            iVar1 = (*_sym.imp.ADVAPI32.dll_RegEnumKeyA)(*(unaff_EBP + -0x128), 0, unaff_EBP + -0x11c, 0x104);\n            if (iVar1 != 0) break;\n            *(unaff_EBP + -4) = 2;\n            fcn.00403c70(unaff_EBP + -0x11c);\n            *(unaff_EBP + -4) = 3;\n            iVar1 = fcn.0041e3fc(*(unaff_EBP + -0x128), unaff_EBP + -0x120);\n            *(unaff_EBP + -4) = 2;\n            fcn.004011c0();\n            if (iVar1 != 0) break;\n            *(unaff_EBP + -4) = 0;\n        }\n        if ((iVar1 == 0x103) || (iVar1 == 0x3f2)) {\n            (*_sym.imp.ADVAPI32.dll_RegDeleteKeyA)(*(unaff_EBP + -300), *(unaff_EBP + -0x124));\n        }\n        (*_sym.imp.ADVAPI32.dll_RegCloseKey)(*(unaff_EBP + -0x128));\n    }\n    fcn.004011c0();\n    fcn.0042ccc1();\n    return;\n}\n",
        "token_count": 676
    },
    "0041e7c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041e7c0(uint *arg_8h)\n\n{\n    int32_t in_ECX;\n    uint *extraout_ECX;\n    \n    if (arg_8h == NULL) {\n        in_ECX = fcn.0041944d();\n        arg_8h = extraout_ECX;\n    }\n    if (*(in_ECX + 0x88) == NULL) {\n        (***arg_8h)(0);\n    }\n    else {\n        (**(**(in_ECX + 0x88) + 0xc))(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 135
    },
    "0041e90c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.0041e90c(void)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    uint32_t unaff_EBX;\n    int32_t unaff_EBP;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x24) != 2) {\n        uVar1 = *(unaff_EBP + -0x1c) == unaff_EBX;\n        if (uVar1 == unaff_EBX) {\n            uVar2 = 0;\n        }\n        else {\n            uVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        }\n        fcn.0041973e();\n        if (uVar1 != unaff_EBX) {\n            (*_sym.imp.KERNEL32.dll_SetLastError)(uVar2);\n        }\n    }\n    return;\n}\n",
        "token_count": 198
    },
    "0041e941": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041e941(uint arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    \n    piVar1 = fcn.0041c10b();\n    if (piVar1 != NULL) {\n        iVar2 = (**(*piVar1 + 0x128))();\n        if ((iVar2 != 0) && (piVar1[0x20] != NULL)) {\n            (**(*piVar1[0x20] + 100))(arg_8h);\n        }\n    }\n    return;\n}\n",
        "token_count": 126
    },
    "0041e97a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0041e97a(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    \n    pcVar2 = _sym.imp.USER32.dll_GetParent;\n    iVar3 = arg_8h;\n    if (arg_8h != 0) goto code_r0x0041e9aa;\n    iVar3 = fcn.0041e89e();\n    if ((iVar3 == 0) && (iVar3 = fcn.0041c10b(),  iVar3 == 0)) {\n        iVar3 = 0;\n        iVar5 = iVar3;\n        iVar6 = iVar3;\n    }\n    else {\n        for (iVar3 = *(iVar3 + 0x20); iVar5 = iVar3,  iVar6 = iVar3,  iVar3 != 0; iVar3 = (*pcVar2)(iVar3)) {\ncode_r0x0041e9aa:\n            uVar4 = (*_sym.imp.USER32.dll_GetWindowLongA)(iVar3, 0xfffffff0);\n            iVar5 = iVar3;\n            iVar6 = iVar3;\n            if ((uVar4 & 0x40000000) == 0) break;\n        }\n    }\n    while (iVar1 = iVar5,  iVar1 != 0) {\n        iVar5 = (*pcVar2)(iVar1);\n        iVar3 = iVar1;\n    }\n    if ((arg_8h == 0) && (iVar6 != 0)) {\n        iVar6 = (*_sym.imp.USER32.dll_GetLastActivePopup)(iVar6);\n    }\n    if (arg_ch != NULL) {\n        if (((iVar3 == 0) || (iVar5 = (*_sym.imp.USER32.dll_IsWindowEnabled)(iVar3),  iVar5 == 0)) || (iVar3 == iVar6))\n        {\n            *arg_ch = 0;\n        }\n        else {\n            *arg_ch = iVar3;\n            (*_sym.imp.USER32.dll_EnableWindow)(iVar3, 0);\n        }\n    }\n    return iVar6;\n}\n",
        "token_count": 491
    },
    "0041ea2c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0041ea2c(int32_t arg_8h, uint arg_ch, uint32_t arg_10h, int32_t arg_14h)\n\n{\n    int32_t hWnd_00;\n    int32_t iVar1;\n    int32_t *piVar2;\n    uint *lpCaption;\n    uint *arg_ch_00;\n    uint var_11ch;\n    uint var_118h;\n    int32_t lpdwProcessId;\n    int32_t var_110h;\n    int32_t hWnd;\n    uint var_108h;\n    uchar var_5h;\n    uint32_t var_4h;\n    \n    var_4h = *0x45060c ^ &stack0xfffffffc;\n    fcn.0041e941(0);\n    arg_ch_00 = &hWnd;\n    hWnd_00 = fcn.0041e97a(0, arg_ch_00);\n    if (hWnd_00 != hWnd) {\n        (*_sym.imp.USER32.dll_EnableWindow)(hWnd_00, 1);\n    }\n    lpdwProcessId = 0;\n    (*_sym.imp.USER32.dll_GetWindowThreadProcessId)(hWnd_00, &lpdwProcessId);\n    if ((((hWnd_00 == 0) || (iVar1 = (*_sym.imp.KERNEL32.dll_GetCurrentProcessId)(),  lpdwProcessId != iVar1)) ||\n        (piVar2 = (*_sym.imp.USER32.dll_SendMessageA)(hWnd_00, 0x376, 0, 0),  piVar2 == NULL)) &&\n       (piVar2 = NULL,  arg_8h != 0)) {\n        piVar2 = arg_8h + 0x78;\n    }\n    var_110h = 0;\n    if ((piVar2 != NULL) && (var_110h = *piVar2,  arg_14h != 0)) {\n        *piVar2 = arg_14h + 0x30000;\n    }\n    if ((arg_10h & 0xf0) == 0) {\n        if ((arg_10h & 0xf) < 2) {\n            arg_10h = arg_10h | 0x30;\n        }\n        else if ((arg_10h & 0xf) - 3 < 2) {\n            arg_10h = arg_10h | 0x20;\n        }\n    }\n    var_108h._0_1_ = 0;\n    if (arg_8h == 0) {\n        lpCaption = &var_108h;\n        iVar1 = (*_sym.imp.KERNEL32.dll_GetModuleFileNameA)(0, lpCaption, 0x104);\n        if (iVar1 == 0x104) {\n            var_5h = 0;\n        }\n    }\n    else {\n        lpCaption = *(arg_8h + 0x50);\n    }\n    fcn.0041e8aa(hWnd_00, arg_ch, lpCaption, arg_10h);\n    if (piVar2 != NULL) {\n        *piVar2 = var_110h;\n    }\n    if (hWnd != 0) {\n        (*_sym.imp.USER32.dll_EnableWindow)(hWnd, 1);\n    }\n    fcn.0041e941(1);\n    fcn.004294b3(arg_ch_00);\n    return;\n}\n",
        "token_count": 762
    },
    "0041ec2a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.0041ec2a(void)\n\n{\n    uint *arg_8h;\n    uint lpVersionInformation;\n    uint var_94h;\n    uint var_88h;\n    uint32_t var_4h;\n    \n    var_4h = *0x45060c ^ &stack0xfffffffc;\n    fcn.00429510(&var_94h, 0, 0x90);\n    arg_8h = &lpVersionInformation;\n    lpVersionInformation = 0x94;\n    (*_sym.imp.KERNEL32.dll_GetVersionExA)();\n    fcn.004294b3(arg_8h);\n    return;\n}\n",
        "token_count": 143
    },
    "0041eed4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_48h\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl\nfcn.0041eed4(int32_t *arg_8h, int32_t arg_ch, uint noname_2, uint noname_3, uint32_t arg_18h, uint32_t *arg_1ch, \n            uint *arg_20h, uint noname_7, uint *arg_28h)\n\n{\n    uint16_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    code *pcVar4;\n    int32_t *piVar5;\n    uint32_t *puVar6;\n    uint *puVar7;\n    int32_t iVar8;\n    int32_t iVar9;\n    int32_t *piVar10;\n    ushort uVar11;\n    uint var_48h;\n    uint *var_44h;\n    uint *var_40h;\n    uint *var_34h;\n    uint var_30h;\n    uint uStack48;\n    uint uStack44;\n    uint uStack40;\n    uint var_20h;\n    int32_t pvargDest;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puVar6 = arg_1ch;\n    piVar5 = arg_8h;\n    iVar9 = 0;\n    var_20h._0_2_ = 0;\n    if (arg_8h == NULL) {\n        return -0x7ff8ffa9;\n    }\n    if (arg_1ch == NULL) {\n        return -0x7ffdfff8;\n    }\n    uVar2 = arg_1ch[2];\n    if (5 < uVar2) {\n        return -0x7ffdfff2;\n    }\n    arg_8h = NULL;\n    if (arg_1ch[3] != 0) {\n        arg_1ch = arg_1ch[1];\n        do {\n            uVar3 = *arg_1ch;\n            if (uVar2 <= uVar3) {\n                return -0x7ffdfff2;\n            }\n            arg_1ch = arg_1ch + 1;\n            arg_8h = arg_8h + 1;\n            (&var_44h)[uVar3] = *puVar6 + iVar9;\n            iVar9 = iVar9 + 0x10;\n        } while (arg_8h < puVar6[3]);\n    }\n    if (arg_8h < uVar2) {\n        iVar9 = arg_8h * 0x10 + *puVar6;\n        iVar8 = uVar2 - arg_8h;\n        piVar10 = &var_48h + (uVar2 - arg_8h);\n        do {\n            *piVar10 = iVar9;\n            iVar9 = iVar9 + 0x10;\n            piVar10 = piVar10 + -1;\n            iVar8 = iVar8 + -1;\n        } while (iVar8 != 0);\n    }\n    iVar9 = -0x7ffdfffd;\n    if (arg_28h == NULL) {\n        arg_28h = &arg_18h;\n    }\n    if (arg_20h == NULL) {\n        arg_20h = &var_20h;\n    }\n    (*_sym.imp.OLEAUT32.dll_VariantClear)(&pvargDest);\n    pcVar4 = _sym.imp.OLEAUT32.dll_VariantTimeToDosDateTime;\n    if (0x12 < arg_ch + 0x139aU) goto code_r0x0041f43f;\n    // switch table (19 cases) at 0x41f454\n    switch(*((arg_ch + 0x139aU) * 4 + 0x41f454)) {\n    case 0x41efb5:\n        if (puVar6[2] == 1) {\n            iVar9 = (**(*piVar5 + 100))(piVar5, *var_44h, var_44h[1], var_44h[2], var_44h[3]);\n            goto code_r0x0041f43f;\n        }\n        break;\n    case 0x41efd6:\n        if (puVar6[2] == 2) {\n            if (*var_44h != 3) {\n                iVar9 = (*_sym.imp.OLEAUT32.dll_VariantTimeToDosDateTime)(&pvargDest, var_44h, 0, 3);\n                if (iVar9 < 0) goto code_r0x0041f1da;\n                var_44h = &pvargDest;\n            }\n            arg_18h = var_44h[2];\n            if (*var_40h != 3) {\n                iVar9 = (*pcVar4)(&pvargDest, var_40h, 0, 3);\n                if (iVar9 < 0) {\ncode_r0x0041f3c1:\n                    *arg_28h = 1;\n                    goto code_r0x0041f43f;\n                }\n                var_40h = &pvargDest;\n            }\n            iVar9 = (**(*piVar5 + 0x60))(piVar5, arg_18h, var_40h[2], arg_20h);\n            goto code_r0x0041f43f;\n        }\n        break;\n    case 0x41f043:\n        if (puVar6[2] == 2) {\n            if (*var_44h != 3) {\n                iVar9 = (*_sym.imp.OLEAUT32.dll_VariantTimeToDosDateTime)(&pvargDest, var_44h, 0, 3);\n                if (iVar9 < 0) goto code_r0x0041f1da;\n                var_44h = &pvargDest;\n            }\n            iVar9 = (**(*piVar5 + 0x5c))(piVar5, var_44h[2], *var_40h, var_40h[1], var_40h[2], var_40h[3], arg_20h);\n            goto code_r0x0041f43f;\n        }\n        break;\n    case 0x41f090:\n        if (puVar6[2] == 5) {\n            while ((uVar1 = *var_44h,  (uVar1 & 0x4000) != 0 && ((uVar1 & 0xf) != 0))) {\n                if ((uVar1 & 0xc) == 0) {\n                    pvargDest = var_44h[2];\n                }\n                else {\n                    (*_sym.imp.OLEAUT32.dll_VariantCopy)(var_44h[2]);\n                    *var_44h[2] = 3;\n                    pvargDest = var_44h[2] + 8;\n                }\n            }\n            *arg_28h = 0;\n            iVar9 = (**(*piVar5 + 0x58))\n                              (piVar5, pvargDest, var_ch, var_8h, var_4h, *var_34h, var_34h[1], var_34h[2], var_34h[3]);\n            goto code_r0x0041f43f;\n        }\n        break;\n    case 0x41f0fb:\n        if (puVar6[2] == 2) {\n            if (*var_44h != 3) {\n                iVar9 = (*_sym.imp.OLEAUT32.dll_VariantTimeToDosDateTime)(&pvargDest, var_44h, 0, 3);\n                if (iVar9 < 0) goto code_r0x0041f1da;\n                var_44h = &pvargDest;\n            }\n            iVar9 = (**(*piVar5 + 0x54))(piVar5, var_44h[2], *var_40h, var_40h[1], var_40h[2], var_40h[3]);\n            goto code_r0x0041f43f;\n        }\n        break;\n    case 0x41f145:\n        if (puVar6[2] == 1) {\n            iVar9 = (**(*piVar5 + 0x50))(piVar5, *var_44h, var_44h[1], var_44h[2], var_44h[3], arg_20h + 2);\ncode_r0x0041f168:\n            if (iVar9 < 0) goto code_r0x0041f43f;\n            uVar11 = 8;\n            goto code_r0x0041f438;\n        }\n        break;\n    case 0x41f179:\n        iVar9 = (**(*piVar5 + 0x4c))(piVar5, arg_20h);\n        goto code_r0x0041f43f;\n    case 0x41f187:\n        iVar9 = (**(*piVar5 + 0x48))(piVar5, arg_20h);\n        goto code_r0x0041f43f;\n    case 0x41f195:\n        if (puVar6[2] == 1) {\n            iVar9 = (**(*piVar5 + 0x44))(piVar5, *var_44h, var_44h[1], var_44h[2], var_44h[3], arg_20h + 2);\n            goto code_r0x0041f168;\n        }\n        break;\n    case 0x41f1ba:\n        if (puVar6[2] == 2) {\n            uVar1 = *var_44h;\n            if (((uVar1 & 0x4000) != 0) && ((uVar1 & 0xc) == 0)) {\n                iVar9 = -0x7ffdfffb;\ncode_r0x0041f1da:\n                *arg_28h = 0;\n                goto code_r0x0041f43f;\n            }\n            if (uVar1 == 0x400c) {\n                (*_sym.imp.OLEAUT32.dll_VariantCopy)(var_44h[2]);\n                *var_44h[2] = 8;\n                puVar7 = var_44h[2] + 8;\n            }\n            else if (uVar1 == 0x4008) {\n                puVar7 = var_44h[2];\n            }\n            else {\n                (*_sym.imp.OLEAUT32.dll_VariantCopy)(var_44h);\n                puVar7 = var_44h + 2;\n                *var_44h = 8;\n            }\n            iVar9 = (**(*piVar5 + 0x40))(piVar5, puVar7, *var_40h, var_40h[1], var_40h[2], var_40h[3], arg_20h + 2);\n            goto code_r0x0041f241;\n        }\n        break;\n    case 0x41f252:\n        if (puVar6[2] == 1) {\n            iVar9 = (**(*piVar5 + 0x3c))(piVar5, *var_44h, var_44h[1], var_44h[2], var_44h[3], arg_20h + 2);\n            goto code_r0x0041f168;\n        }\n        break;\n    case 0x41f27a:\n        if (puVar6[2] == 1) {\n            iVar9 = (**(*piVar5 + 0x38))(piVar5, *var_44h, var_44h[1], var_44h[2], var_44h[3], arg_20h);\n            goto code_r0x0041f43f;\n        }\n        break;\n    case 0x41f29e:\n        if (puVar6[2] == 1) {\n            iVar9 = (**(*piVar5 + 0x34))(piVar5, *var_44h, var_44h[1], var_44h[2], var_44h[3], arg_20h);\n            goto code_r0x0041f43f;\n        }\n        break;\n    case 0x41f2c2:\n        if (puVar6[2] == 1) {\n            iVar9 = (**(*piVar5 + 0x30))(piVar5, *var_44h, var_44h[1], var_44h[2], var_44h[3], arg_20h + 2);\n            goto code_r0x0041f168;\n        }\n        break;\n    case 0x41f2ea:\n        if ((arg_18h & 2) == 0) {\n            if ((arg_18h & 4) == 0) goto code_r0x0041f367;\n            if (puVar6[2] == 2) {\n                var_30h = *var_44h;\n                uStack48 = var_44h[1];\n                uStack44 = var_44h[2];\n                uStack40 = var_44h[3];\n                if (*var_40h != 8) {\n                    iVar9 = (*_sym.imp.OLEAUT32.dll_VariantTimeToDosDateTime)(&pvargDest, var_40h, 0, 3);\n                    if (iVar9 < 0) goto code_r0x0041f3c1;\n                    var_40h = &pvargDest;\n                }\n                iVar9 = (**(*piVar5 + 0x6c))(piVar5, var_30h, uStack48, uStack44, uStack40, var_40h[2]);\n                goto code_r0x0041f43f;\n            }\n        }\n        else if (puVar6[2] == 1) {\n            iVar9 = (**(*piVar5 + 0x2c))(piVar5, *var_44h, var_44h[1], var_44h[2], var_44h[3], arg_20h + 2);\n            goto code_r0x0041f168;\n        }\n        break;\n    case 0x41f367:\ncode_r0x0041f367:\n        if ((arg_18h & 2) == 0) {\n            if ((arg_18h & 4) == 0) goto code_r0x0041f3e9;\n            if (puVar6[2] == 2) {\n                var_30h = *var_44h;\n                uStack48 = var_44h[1];\n                uStack44 = var_44h[2];\n                uStack40 = var_44h[3];\n                if (*var_40h != 8) {\n                    iVar9 = (*_sym.imp.OLEAUT32.dll_VariantTimeToDosDateTime)(&pvargDest, var_40h, 0, 3);\n                    if (iVar9 < 0) goto code_r0x0041f3c1;\n                    var_40h = &pvargDest;\n                }\n                iVar9 = (**(*piVar5 + 0x68))(piVar5, var_30h, uStack48, uStack44, uStack40, var_40h[2]);\n                goto code_r0x0041f43f;\n            }\n        }\n        else if (puVar6[2] == 1) {\n            iVar9 = (**(*piVar5 + 0x28))(piVar5, *var_44h, var_44h[1], var_44h[2], var_44h[3], arg_20h + 2);\n            goto code_r0x0041f168;\n        }\n        break;\n    case 0x41f3e9:\ncode_r0x0041f3e9:\n        if (puVar6[2] == 1) {\n            iVar9 = (**(*piVar5 + 0x24))(piVar5, *var_44h, var_44h[1], var_44h[2], var_44h[3], arg_20h + 2);\n            goto code_r0x0041f430;\n        }\n        break;\n    case 0x41f411:\n        iVar9 = (**(*piVar5 + 0x20))(piVar5, arg_20h + 2);\ncode_r0x0041f241:\n        if (iVar9 < 0) goto code_r0x0041f43f;\n        uVar11 = 3;\n        goto code_r0x0041f438;\n    case 0x41f423:\n        iVar9 = (**(*piVar5 + 0x1c))(piVar5, arg_20h + 2);\ncode_r0x0041f430:\n        if (iVar9 < 0) goto code_r0x0041f43f;\n        uVar11 = 9;\ncode_r0x0041f438:\n        *arg_20h = uVar11;\n        goto code_r0x0041f43f;\n    }\n    iVar9 = -0x7ffdfff2;\ncode_r0x0041f43f:\n    (*_sym.imp.OLEAUT32.dll_VariantCopy)(&pvargDest);\n    return iVar9;\n}\n",
        "token_count": 3851
    },
    "0041f4a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint __cdecl fcn.0041f4a0(uint noname_0, int32_t arg_ch, uint32_t arg_10h, uint noname_3, int32_t arg_18h)\n\n{\n    bool bVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint var_1h;\n    \n    uVar3 = 0;\n    if (arg_10h != 0) {\n        do {\n            bVar1 = false;\n            uVar4 = 0;\n            do {\n                iVar2 = (*_sym.imp.KERNEL32.dll_lstrcmpW)(*(arg_ch + uVar3 * 4), *(uVar4 + 0x4500f0));\n                if (iVar2 == 0) {\n                    bVar1 = true;\n                    *(arg_18h + uVar3 * 4) = *(uVar4 + 0x4500a0);\n                }\n                uVar4 = uVar4 + 4;\n            } while (uVar4 < 0x4c);\n            if (!bVar1) {\n                return 0x80020006;\n            }\n            uVar3 = uVar3 + 1;\n        } while (uVar3 < arg_10h);\n    }\n    return 0;\n}\n",
        "token_count": 307
    },
    "0041f6bd": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.0041f6bd(int32_t *arg_8h, int32_t arg_ch, int32_t arg_10h, uint32_t arg_14h)\n\n{\n    while( true ) {\n        if (arg_8h[4] == 0) {\n            return NULL;\n        }\n        if ((((arg_ch == *arg_8h) && (arg_10h == arg_8h[1])) && (arg_8h[2] <= arg_14h)) &&\n           (arg_14h < arg_8h[3] || arg_14h == arg_8h[3])) break;\n        arg_8h = arg_8h + 6;\n    }\n    return arg_8h;\n}\n",
        "token_count": 169
    },
    "0041fbf7": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.0041fbf7(void)\n\n{\n    uint uVar1;\n    int32_t unaff_EBP;\n    bool bVar2;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x24) != 2) {\n        bVar2 = *(unaff_EBP + -0x1c) != 0;\n        if (bVar2) {\n            uVar1 = 0;\n        }\n        else {\n            uVar1 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        }\n        fcn.0041973e(0, *(unaff_EBP + -0x20));\n        if (!bVar2) {\n            (*_sym.imp.KERNEL32.dll_SetLastError)(uVar1);\n        }\n    }\n    return;\n}\n",
        "token_count": 188
    },
    "0041fc8d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.0041fc8d(void)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    uint32_t unaff_EBX;\n    int32_t unaff_EBP;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x24) != 2) {\n        uVar1 = *(unaff_EBP + -0x1c) == unaff_EBX;\n        if (uVar1 == unaff_EBX) {\n            uVar2 = 0;\n        }\n        else {\n            uVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        }\n        fcn.0041973e();\n        if (uVar1 != unaff_EBX) {\n            (*_sym.imp.KERNEL32.dll_SetLastError)(uVar2);\n        }\n    }\n    return;\n}\n",
        "token_count": 198
    },
    "0041fd21": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.0041fd21(void)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    uint32_t unaff_EBX;\n    int32_t unaff_EBP;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x24) != 2) {\n        uVar1 = *(unaff_EBP + -0x1c) == unaff_EBX;\n        if (uVar1 == unaff_EBX) {\n            uVar2 = 0;\n        }\n        else {\n            uVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        }\n        fcn.0041973e();\n        if (uVar1 != unaff_EBX) {\n            (*_sym.imp.KERNEL32.dll_SetLastError)(uVar2);\n        }\n    }\n    return;\n}\n",
        "token_count": 197
    },
    "0041fdd0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.0041fdd0(void)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    uint32_t unaff_EBX;\n    int32_t unaff_EBP;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x24) != 2) {\n        uVar1 = *(unaff_EBP + -0x1c) == unaff_EBX;\n        if (uVar1 == unaff_EBX) {\n            uVar2 = 0;\n        }\n        else {\n            uVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        }\n        fcn.0041973e();\n        if (uVar1 != unaff_EBX) {\n            (*_sym.imp.KERNEL32.dll_SetLastError)(uVar2);\n        }\n    }\n    return;\n}\n",
        "token_count": 198
    },
    "0041ffde": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041ffde(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int16_t iVar3;\n    int32_t iVar4;\n    \n    iVar4 = fcn.0041a03d();\n    if ((*(iVar4 + 0x3c) != 0) && (iVar1 = *(*(iVar4 + 0x3c) + 0x20),  iVar1 != 0)) {\n        (*_sym.imp.USER32.dll_SendMessageA)(iVar1, 0x401, 0, 0);\n    }\n    piVar2 = *(iVar4 + 0x50);\n    if ((arg_8h != 0) && (piVar2 != NULL)) {\n        iVar3 = (*_sym.imp.USER32.dll_GetKeyState)(1);\n        if (-1 < iVar3) {\n            (**(*piVar2 + 0x178))(0xffffffff);\n        }\n    }\n    return;\n}\n",
        "token_count": 222
    },
    "0042012b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0042012b(uint arg_8h)\n\n{\n    int32_t iVar1;\n    \n    if (arg_8h == 0) {\n        iVar1 = fcn.0041a03d();\n        if ((*(iVar1 + 0x48) != 0) && ((*(*(iVar1 + 0x48) + 4) & 0x40000000) == 0)) {\n            fcn.0041ffde(1);\n        }\n    }\n    return 0;\n}\n",
        "token_count": 116
    },
    "00420f53": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00420f53(uint *arg_8h)\n\n{\n    uint uVar1;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x10) == 0) {\n        uVar1 = fcn.0041d4cf(0x4448c4);\n        uVar1 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(uVar1);\n        *(in_ECX + 0x10) = uVar1;\n    }\n    *arg_8h = *(in_ECX + 0x10);\n    return;\n}\n",
        "token_count": 131
    },
    "00420fe5": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.00420fe5(void)\n\n{\n    int32_t unaff_EBP;\n    uint var_20h;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x20) != 2) {\n        fcn.0041973e(0, *(unaff_EBP + -0x1c));\n    }\n    return;\n}\n",
        "token_count": 83
    },
    "00420ff6": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00420ff6(uint *arg_8h)\n\n{\n    uint uVar1;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x14) == 0) {\n        uVar1 = fcn.0041d4cf(\"InitCommonControlsEx\");\n        uVar1 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(uVar1);\n        *(in_ECX + 0x14) = uVar1;\n    }\n    *arg_8h = *(in_ECX + 0x14);\n    return;\n}\n",
        "token_count": 129
    },
    "0042109a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.0042109a(void)\n\n{\n    uint uVar1;\n    int32_t unaff_EBP;\n    bool bVar2;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x24) != 2) {\n        bVar2 = *(unaff_EBP + -0x1c) != 0;\n        if (bVar2) {\n            uVar1 = 0;\n        }\n        else {\n            uVar1 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        }\n        fcn.0041973e(0, *(unaff_EBP + -0x20));\n        if (!bVar2) {\n            (*_sym.imp.KERNEL32.dll_SetLastError)(uVar1);\n        }\n    }\n    return;\n}\n",
        "token_count": 187
    },
    "00421160": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00421160(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint arg_8h_00;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t unaff_EBP;\n    uint var_4h;\n    \n    fcn.0042cbc6(0);\n    iVar1 = fcn.0041a03d();\n    if ((*(iVar1 + 0x14) == 0) && (*(unaff_EBP + 8) != 0)) {\n        arg_8h_00 = fcn.004192c5(fcn.00426c15);\n        iVar2 = fcn.004192dc(0x60);\n        *(unaff_EBP + 8) = iVar2;\n        *(unaff_EBP + -4) = 0;\n        if (iVar2 == 0) {\n            uVar3 = 0;\n        }\n        else {\n            uVar3 = fcn.00427316(0x444434, 0x420f2c, fcn.004241b3, 0x20, 1);\n        }\n        *(unaff_EBP + -4) = 0xffffffff;\n        *(iVar1 + 0x14) = uVar3;\n        fcn.004192c5(arg_8h_00);\n    }\n    fcn.0042cc9e();\n    return;\n}\n",
        "token_count": 327
    },
    "0042128d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint fcn.0042128d(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar1 = fcn.00425a63(0x419469);\n    if (iVar1 == 0) {\n        fcn.0041944d();\n    }\n    iVar2 = fcn.0041a00a();\n    if ((*(iVar2 + 0x14) != '\\0') && (*(iVar1 + 0x28) != 0)) {\n        (*_sym.imp.USER32.dll_UnhookWindowsHookEx)(*(iVar1 + 0x28));\n        *(iVar1 + 0x28) = 0;\n    }\n    if (*(iVar1 + 0x14) != 0) {\n        *(iVar1 + 0x14) = 0;\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 191
    },
    "00421317": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00421317(int32_t *param_1)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    uint var_30h;\n    uint var_2ch;\n    int32_t var_28h;\n    int32_t var_24h;\n    \n    iVar2 = fcn.0041dc9a();\n    if (iVar2 == 0) goto code_r0x00421364;\n    if (*(iVar2 + 0x20) == param_1) {\n        iVar3 = fcn.0041a00a();\n        if (*(iVar3 + 0x14) == '\\0') {\n            iVar3 = fcn.0041a00a();\n            if (iVar2 == *(iVar3 + 4)) {\n                iVar3 = fcn.00426d24();\n                if (iVar3 == 0) goto code_r0x00421359;\n            }\n            fcn.0041bf46(0);\n        }\ncode_r0x00421359:\n        *(iVar2 + 0x20) = 0;\n    }\n    if (*(iVar2 + 0x24) == param_1) {\n        *(iVar2 + 0x24) = 0;\n    }\ncode_r0x00421364:\n    if (param_1[0x12] != NULL) {\n        (**(*param_1[0x12] + 0x50))();\n        param_1[0x12] = 0;\n    }\n    if (param_1[0x13] != NULL) {\n        (**(*param_1[0x13] + 4))(1);\n    }\n    param_1[0x13] = 0;\n    if ((*(param_1 + 0xf) & 1) != 0) {\n        iVar2 = fcn.0041a03d();\n        iVar2 = *(iVar2 + 0x3c);\n        if ((iVar2 != 0) && (*(iVar2 + 0x20) != 0)) {\n            fcn.00429510(&var_30h, 0, 0x30);\n            var_28h = param_1[8];\n            var_30h = 0x2c;\n            var_2ch = 1;\n            var_24h = var_28h;\n            (*_sym.imp.USER32.dll_SendMessageA)(*(iVar2 + 0x20), 0x405, 0, &var_30h);\n        }\n    }\n    pcVar1 = _sym.imp.USER32.dll_GetWindowLongA;\n    iVar2 = (*_sym.imp.USER32.dll_GetWindowLongA)(param_1[8], 0xfffffffc);\n    fcn.0042112e();\n    iVar3 = (*pcVar1)(param_1[8], 0xfffffffc);\n    if (iVar3 == iVar2) {\n        piVar4 = (**(*param_1 + 0xf8))();\n        if (*piVar4 != 0) {\n            (*_sym.imp.USER32.dll_SetWindowLongA)(param_1[8], 0xfffffffc, *piVar4);\n        }\n    }\n    fcn.0042125d();\n    (**(*param_1 + 0x11c))();\n    return;\n}\n",
        "token_count": 737
    },
    "00421665": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.00421665(uint arg_8h, uint arg_ch)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t *in_ECX;\n    int32_t *var_4h;\n    \n    var_4h = in_ECX;\n    if (*(in_ECX + 9) != '\\0') {\n        var_4h = NULL;\n        iVar2 = (**(*in_ECX + 0xec))(arg_8h, arg_ch, &var_4h);\n        if (-1 < iVar2) {\n            return var_4h;\n        }\n    }\n    piVar1 = fcn.0042112e();\n    return piVar1;\n}\n",
        "token_count": 161
    },
    "00421818": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_18h\n\nvoid __cdecl fcn.00421818(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    int32_t *arg_8h_00;\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t extraout_EDX;\n    int32_t unaff_EBP;\n    uint *puVar5;\n    uint *puVar6;\n    uint var_44h;\n    uint var_28h;\n    uint var_18h;\n    uint var_4h;\n    \n    fcn.0042cbf9(0x38);\n    iVar1 = fcn.00425a63(0x419469);\n    iVar4 = 0;\n    *(unaff_EBP + -0x18) = iVar1;\n    if (iVar1 == 0) {\n        fcn.0041944d();\n        iVar4 = extraout_EDX;\n    }\n    puVar5 = iVar1 + 0x58;\n    puVar6 = unaff_EBP + -0x44;\n    for (iVar3 = 7; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar6 = *puVar5;\n        puVar5 = puVar5 + 1;\n        puVar6 = puVar6 + 1;\n    }\n    iVar3 = *(unaff_EBP + 0x10);\n    arg_8h_00 = *(unaff_EBP + 8);\n    *(iVar1 + 0x58) = *(unaff_EBP + 0xc);\n    *(iVar1 + 0x60) = *(unaff_EBP + 0x14);\n    uVar2 = *(unaff_EBP + 0x18);\n    *(iVar1 + 0x5c) = iVar3;\n    *(iVar1 + 100) = uVar2;\n    *(unaff_EBP + -4) = iVar4;\n    if ((iVar3 == 2) && (arg_8h_00[0x13] != iVar4)) {\n        (**(*arg_8h_00[0x13] + 0x60))(iVar4);\n    }\n    *(unaff_EBP + 8) = 0;\n    if (iVar3 == 0x110) {\n        fcn.0041ff05(arg_8h_00, unaff_EBP + -0x28, unaff_EBP + 8);\n    }\n    uVar2 = (**(*arg_8h_00 + 0x110))(iVar3, *(unaff_EBP + 0x14), *(unaff_EBP + 0x18));\n    *(unaff_EBP + 0x18) = uVar2;\n    if (iVar3 == 0x110) {\n        fcn.004217a2(arg_8h_00, unaff_EBP + -0x28, *(unaff_EBP + 8));\n    }\n    puVar5 = unaff_EBP + -0x44;\n    puVar6 = iVar1 + 0x58;\n    for (iVar4 = 7; iVar4 != 0; iVar4 = iVar4 + -1) {\n        *puVar6 = *puVar5;\n        puVar5 = puVar5 + 1;\n        puVar6 = puVar6 + 1;\n    }\n    fcn.0042cc9e();\n    return;\n}\n",
        "token_count": 804
    },
    "00421958": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.00421958(void)\n\n{\n    code *pcVar1;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.0042cbc6(4);\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *extraout_ECX = vtable.CWnd.0;\n    *(unaff_EBP + -4) = 0;\n    if ((((extraout_ECX[8] != NULL) && (extraout_ECX != 0x453790)) && (extraout_ECX != 0x4537e8)) &&\n       ((extraout_ECX != 0x453840 && (extraout_ECX != 0x453898)))) {\n        fcn.0042142a();\n    }\n    if (extraout_ECX[0x13] != NULL) {\n        (**(*extraout_ECX[0x13] + 4))(1);\n    }\n    pcVar1 = extraout_ECX[0x14];\n    if ((pcVar1 != NULL) && (*(pcVar1 + 0x28) == extraout_ECX)) {\n        *(pcVar1 + 0x28) = 0;\n    }\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.0041d958();\n    fcn.0042cc9e();\n    return;\n}\n",
        "token_count": 334
    },
    "004219fa": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "log keystrokes via raw input data/18af53aa16f24c3fa3538f182ae5df5a"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004219fa(uint noname_0, int32_t *arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t *in_ECX;\n    \n    if (*arg_ch == 1) {\n        iVar1 = fcn.00425a63(0x419469);\n        if (iVar1 != 0) goto code_r0x00421a23;\n        do {\n            iVar1 = fcn.0041944d();\ncode_r0x00421a23:\n            if (*(iVar1 + 0x74) == in_ECX[8]) {\n                iVar1 = fcn.004276ce();\n            }\n            else {\n                iVar1 = (**(*in_ECX + 0x6c))();\n            }\n        } while (iVar1 == 0);\n        piVar2 = fcn.00420034(iVar1, arg_ch[2]);\n        if (piVar2 != NULL) {\n            (**(*piVar2 + 0x10))(arg_ch);\n        }\n    }\n    else {\n        iVar1 = fcn.004214da(in_ECX[8], arg_ch[1], 1);\n        if ((iVar1 != 0) && (iVar1 = fcn.00421599(0),  iVar1 != 0)) {\n            return;\n        }\n    }\n    fcn.0042112e();\n    return;\n}\n",
        "token_count": 311
    },
    "00421ac2": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.00421ac2(int32_t *param_1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    \n    if ((param_1 != NULL) && (param_1[8] != 0)) {\n        iVar2 = (**(*param_1 + 0x128))();\n        piVar3 = param_1;\n        if (iVar2 == 0) {\n            param_1 = fcn.00421a83();\n            piVar3 = param_1;\n        }\n        while (piVar1 = piVar3,  piVar1 != NULL) {\n            piVar3 = fcn.00421a83();\n            param_1 = piVar1;\n        }\n        return param_1;\n    }\n    return NULL;\n}\n",
        "token_count": 186
    },
    "00421b03": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00421b03(uint arg_8h, uint Msg, uint wParam, uint lParam, int32_t arg_18h, int32_t arg_1ch)\n\n{\n    code *pcVar1;\n    int32_t arg_8h_00;\n    int32_t iVar2;\n    \n    pcVar1 = _sym.imp.USER32.dll_GetTopWindow;\n    for (arg_8h_00 = (*_sym.imp.USER32.dll_GetTopWindow)(arg_8h); arg_8h_00 != 0;\n        arg_8h_00 = (*_sym.imp.USER32.dll_GetWindow)(arg_8h_00, 2)) {\n        if (arg_1ch == 0) {\n            (*_sym.imp.USER32.dll_SendMessageA)(arg_8h_00, Msg, wParam, lParam);\n        }\n        else {\n            iVar2 = fcn.00421200(arg_8h_00);\n            if (iVar2 != 0) {\n                fcn.00421818(iVar2, *(iVar2 + 0x20), Msg, wParam, lParam);\n            }\n        }\n        if (arg_18h != 0) {\n            iVar2 = (*pcVar1)(arg_8h_00);\n            if (iVar2 != 0) {\n                fcn.00421b03(arg_8h_00, Msg, wParam, lParam, arg_18h, arg_1ch);\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 327
    },
    "00421c22": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00421c22(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    \n    if (((arg_8h == 1) || (arg_8h == 2)) && (iVar1 = fcn.00421b82(arg_ch, 0),  iVar1 != 0)) {\n        return;\n    }\n    fcn.0042112e();\n    return;\n}\n",
        "token_count": 95
    },
    "00421c7e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00421c7e(uint hWnd)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t *in_ECX;\n    \n    iVar1 = fcn.00421221(hWnd);\n    if (iVar1 != 0) {\n        (**(*in_ECX + 0x50))();\n        piVar2 = (**(*in_ECX + 0xf8))();\n        iVar1 = (*_sym.imp.USER32.dll_SetWindowLongA)(hWnd, 0xfffffffc, fcn.0042190b);\n        if (*piVar2 == 0) {\n            *piVar2 = iVar1;\n        }\n        iVar1 = 1;\n    }\n    return iVar1;\n}\n",
        "token_count": 165
    },
    "00422276": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "log keystrokes via raw input data/18af53aa16f24c3fa3538f182ae5df5a"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00422276(uint noname_0, int32_t *arg_ch)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    \n    if ((*arg_ch == 1) && (piVar1 = fcn.004276e2(arg_ch[5]),  piVar1 != NULL)) {\n        (**(*piVar1 + 0xc))(arg_ch);\n        return;\n    }\n    iVar2 = fcn.00421b82(arg_ch[5], 0);\n    if (iVar2 == 0) {\n        fcn.0042112e();\n    }\n    return;\n}\n",
        "token_count": 139
    },
    "00422309": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00422309(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    \n    fcn.00426527(0xc);\n    iVar1 = fcn.0042553f(0x42178d);\n    if (iVar1 == 0) {\n        fcn.0041944d();\n    }\n    if (*(iVar1 + 8) == 0) {\n        iVar2 = fcn.0041b22c(\"hhctrl.ocx\");\n        *(iVar1 + 4) = iVar2;\n        if (iVar2 != 0) {\n            iVar2 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, \"HtmlHelpA\");\n            *(iVar1 + 8) = iVar2;\n            if (iVar2 != 0) goto code_r0x0042236e;\n            (*_sym.imp.KERNEL32.dll_FreeLibrary)(*(iVar1 + 4));\n            *(iVar1 + 4) = 0;\n        }\n        uVar3 = 0;\n    }\n    else {\ncode_r0x0042236e:\n        fcn.00426599(0xc);\n        uVar3 = (**(iVar1 + 8))(arg_8h, arg_ch, arg_10h, arg_14h);\n    }\n    return uVar3;\n}\n",
        "token_count": 318
    },
    "00422665": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00422665(int32_t param_1)\n\n{\n    uint uVar1;\n    \n    if (*(param_1 + 0xc) == 0) {\n        return 0;\n    }\n    uVar1 = (**(**(param_1 + 0xc) + 0xc))(*(param_1 + 0xc), 0);\n    return uVar1;\n}\n",
        "token_count": 88
    },
    "0042267a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0042267a(int32_t *arg_8h)\n\n{\n    uint uVar1;\n    \n    if ((((*arg_8h == 0) && (arg_8h[1] == 0)) && (arg_8h[2] == 0xc0)) && (arg_8h[3] == 0x46000000)) {\n        uVar1 = 1;\n    }\n    else {\n        uVar1 = 0;\n    }\n    return uVar1;\n}\n",
        "token_count": 116
    },
    "004226aa": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004226aa(int32_t arg_8h, int32_t *arg_ch, uint arg_10h, int32_t **arg_14h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    \n    if ((arg_8h == 0) || (arg_ch == NULL)) {\n        iVar2 = -0x7ff8ffa9;\n    }\n    else if (arg_14h == NULL) {\n        iVar2 = -0x7fffbffd;\n    }\n    else {\n        *arg_14h = NULL;\n        iVar2 = fcn.0042267a(arg_10h);\n        if (iVar2 == 0) {\n            for (; pcVar1 = arg_ch[2],  pcVar1 != NULL; arg_ch = arg_ch + 3) {\n                iVar2 = *arg_ch;\n                if ((iVar2 == 0) || (iVar3 = fcn.00422626(iVar2, arg_10h),  iVar3 != 0)) {\n                    if (pcVar1 == 0x1) goto code_r0x004226e0;\n                    iVar3 = (*pcVar1)(arg_8h, arg_10h, arg_14h, arg_ch[1]);\n                    if (iVar3 == 0) {\n                        return 0;\n                    }\n                    if ((iVar2 != 0) && (iVar3 < 0)) {\n                        return iVar3;\n                    }\n                }\n            }\n            iVar2 = -0x7fffbffe;\n        }\n        else {\ncode_r0x004226e0:\n            piVar4 = arg_ch[1] + arg_8h;\n            (**(*piVar4 + 4))(piVar4);\n            *arg_14h = piVar4;\n            iVar2 = 0;\n        }\n    }\n    return iVar2;\n}\n",
        "token_count": 427
    },
    "00422767": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00422767(code **param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    *param_1 = vtable.CMFCComObject_class_ATL::CAccessibleProxy_.2.0;\n    param_1[1] = vtable.CMFCComObject_class_ATL::CAccessibleProxy_.1.0;\n    param_1[4] = vtable.CMFCComObject_class_ATL::CAccessibleProxy_.0;\n    param_1[5] = 0xc0000001;\n    fcn.00422665();\n    iVar2 = fcn.0041a00a();\n    iVar2 = (*_sym.imp.KERNEL32.dll_InterlockedDecrement)(iVar2 + 0x2c);\n    if (iVar2 != 0) {\n        return;\n    }\n    iVar2 = fcn.0041a00a();\n    if (*(iVar2 + 0x30) == 0) {\n        fcn.00426d44(1);\n        iVar2 = fcn.0041a00a();\n        iVar2 = *(iVar2 + 4);\n        if ((iVar2 == 0) || (*(iVar2 + 0x20) == 0)) {\n            iVar2 = fcn.0041a00a();\n            if (*(iVar2 + 0x14) == '\\0') {\n                fcn.0041bf46(0);\n            }\n        }\n        else {\n            iVar1 = fcn.0041b0aa();\n            if (iVar1 != 0) {\n    // WARNING: Could not recover jumptable at 0x00426d96. Too many branches\n    // WARNING: Treating indirect jump as call\n                (**(**(iVar2 + 0x20) + 0x60))();\n                return;\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 413
    },
    "00422cc5": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00422cc5(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    \n    iVar1 = fcn.00425a63(0x419469);\n    if (iVar1 == 0) {\n        fcn.0041944d();\n    }\n    if (*(iVar1 + 0x14) != arg_8h) {\n        if (*(iVar1 + 0x28) == 0) {\n            uVar2 = (*_sym.imp.KERNEL32.dll_GetCurrentThreadId)();\n            iVar3 = (*_sym.imp.USER32.dll_SetWindowsHookExA)(5, 0x422a72, 0, uVar2);\n            *(iVar1 + 0x28) = iVar3;\n            if (iVar3 == 0) {\n                fcn.00419415();\n            }\n        }\n        *(iVar1 + 0x14) = arg_8h;\n    }\n    return;\n}\n",
        "token_count": 221
    },
    "00422e7c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __cdecl fcn.00422e7c(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint32_t uVar5;\n    code **ppcVar6;\n    uint32_t uVar7;\n    int32_t *arg_8h_00;\n    code *pcVar8;\n    int32_t unaff_EBP;\n    int16_t iVar9;\n    int16_t iVar10;\n    uint var_7ch;\n    uint var_5ch;\n    uint var_2ch;\n    uint32_t var_28h;\n    uint *var_24h;\n    uint *var_18h;\n    uint *var_14h;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.0042cbc6(0x70);\n    *(unaff_EBP + -0x10) = 0;\n    *(unaff_EBP + -0x14) = 0x7fffffff;\n    uVar7 = *(unaff_EBP + 8);\n    *(unaff_EBP + -4) = 0;\n    if (uVar7 == 0x111) {\n        iVar3 = (**(*arg_8h_00 + 0xf0))(*(unaff_EBP + 0xc), *(unaff_EBP + 0x10));\n        if (iVar3 == 0) goto code_r0x0042308c;\n        goto code_r0x00422eba;\n    }\n    if (uVar7 == 0x4e) {\n        if (**(unaff_EBP + 0x10) != 0) {\n            iVar3 = (**(*arg_8h_00 + 0xf4))(*(unaff_EBP + 0xc), *(unaff_EBP + 0x10), unaff_EBP + -0x10);\n            goto joined_r0x00423365;\n        }\n        goto code_r0x0042308c;\n    }\n    var_24h = *(unaff_EBP + 0x10);\n    if (uVar7 == 6) {\n        uVar4 = fcn.004211d4(var_24h);\n        fcn.00422835(arg_8h_00, *(unaff_EBP + 0xc), uVar4);\n    }\n    iVar9 = var_24h;\n    if ((uVar7 == 0x20) && (iVar3 = fcn.004228ad(arg_8h_00, iVar9, var_24h >> 0x10),  iVar3 != 0))\n    goto code_r0x00422eba;\n    if ((((arg_8h_00[0x13] != 0) && (0 < *(arg_8h_00[0x13] + 0x74))) &&\n        ((((0x1ff < uVar7 && (uVar7 < 0x20a)) || ((0xff < uVar7 && (uVar7 < 0x110)))) || (uVar7 - 0x281 < 0x11)))) &&\n       (iVar3 = (**(*arg_8h_00[0x13] + 0x94))(uVar7, *(unaff_EBP + 0xc), var_24h, unaff_EBP + -0x10),  iVar3 != 0))\n    goto code_r0x0042341e;\n    uVar5 = (**(*arg_8h_00 + 0x28))();\n    uVar7 = *(unaff_EBP + 8);\n    *(unaff_EBP + 0x10) = uVar5;\n    fcn.0041fe70(7);\n    iVar3 = ((uVar5 ^ uVar7) & 0x1ff) * 0xc;\n    *(unaff_EBP + -0x18) = iVar3 + 0x451f60;\n    if ((*(unaff_EBP + 8) != *(iVar3 + 0x451f60)) || (*(unaff_EBP + 0x10) != *(iVar3 + 0x451f68))) {\n        puVar1 = *(unaff_EBP + -0x18);\n        ppcVar6 = *(unaff_EBP + 0x10);\n        *puVar1 = *(unaff_EBP + 8);\n        puVar1[2] = ppcVar6;\n        while (*ppcVar6 != NULL) {\n            if (*(unaff_EBP + 8) < 0xc000) {\n                iVar3 = fcn.0041f6bd(ppcVar6[1], *(unaff_EBP + 8), 0, 0);\n                *(unaff_EBP + 0x10) = iVar3;\n                if (iVar3 != 0) {\n                    *(*(unaff_EBP + -0x18) + 4) = iVar3;\n                    fcn.0041fea4();\n                    goto code_r0x0042301a;\n                }\n            }\n            else {\n                iVar3 = *(*(unaff_EBP + 0x10) + 4);\n                uVar4 = 0xc000;\n                while (iVar3 = fcn.0041f6bd(iVar3, uVar4, 0, 0),  iVar3 != 0) {\n                    if (**(iVar3 + 0x10) == *(unaff_EBP + 8)) {\n                        *(*(unaff_EBP + -0x18) + 4) = iVar3;\n                        fcn.0041fea4();\n                        goto code_r0x00423410;\n                    }\n                    iVar3 = iVar3 + 0x18;\n                }\n                ppcVar6 = *(unaff_EBP + 0x10);\n            }\n            ppcVar6 = (**ppcVar6)();\n            *(unaff_EBP + 0x10) = ppcVar6;\n        }\n        *(*(unaff_EBP + -0x18) + 4) = 0;\n        fcn.0041fea4();\n        goto code_r0x0042308c;\n    }\n    iVar3 = *(iVar3 + 0x451f64);\n    *(unaff_EBP + 0x10) = iVar3;\n    fcn.0041fea4();\n    if (iVar3 == 0) goto code_r0x0042308c;\n    if (0xbfff < *(unaff_EBP + 8)) {\ncode_r0x00423410:\n        pcVar8 = *(iVar3 + 0x14);\n        goto code_r0x00423414;\n    }\ncode_r0x0042301a:\n    pcVar8 = *(*(unaff_EBP + 0x10) + 0x14);\n    iVar3 = *(*(unaff_EBP + 0x10) + 0x10);\n    iVar10 = var_24h >> 0x10;\n    var_14h = var_24h;\n    // switch table (84 cases) at 0x423440\n    switch(iVar3) {\n    case 1:\n        var_14h = *(unaff_EBP + 0xc);\n        fcn.0042458f(var_14h);\n        goto code_r0x004230bb;\n    case 2:\n    case 3:\n    case 4:\n    case 0x1b:\n    case 0x1c:\n        var_14h = *(unaff_EBP + 0xc);\n        goto code_r0x004230bb;\n    case 5:\n    case 0xc:\n        var_14h = var_24h >> 0x10;\n        var_18h = var_24h & 0xffff;\n        uVar7 = *(unaff_EBP + 0xc);\n        uVar5 = fcn.004211d4(uVar7);\n        goto code_r0x004230f0;\n    case 6:\n    case 0x47:\n        var_24h = *(unaff_EBP + 0xc);\n        var_28h = fcn.004211d4(var_24h);\n        goto code_r0x00423417;\n    case 7:\n    case 0xd:\n    case 0x4a:\ncode_r0x004230bb:\n        uVar4 = (*pcVar8)(var_14h);\n        goto code_r0x0042341b;\n    case 8:\n        fcn.004241c6();\n        uVar4 = var_24h[1];\n        *(unaff_EBP + -4) = 1;\n        *(unaff_EBP + -0x24) = uVar4;\n        fcn.0041fec0();\n        uVar4 = *var_24h;\n        uVar2 = var_24h[2];\n        *(unaff_EBP + -4) = 2;\n        *(unaff_EBP + -0x5c) = uVar4;\n        iVar3 = fcn.00421200(uVar4);\n        if (iVar3 == 0) {\n            if ((arg_8h_00[0x13] != 0) && (iVar3 = fcn.0042605f(*(unaff_EBP + -0x5c)),  iVar3 != 0)) {\n                *(unaff_EBP + -0x2c) = iVar3;\n            }\n            iVar3 = unaff_EBP + -0x7c;\n        }\n        uVar4 = (*pcVar8)(unaff_EBP + -0x28, iVar3, uVar2);\n        *(unaff_EBP + -0x24) = 0;\n        *(unaff_EBP + -0x5c) = 0;\n        *(unaff_EBP + -0x10) = uVar4;\n        *(unaff_EBP + -4) = 1;\n        fcn.00421958();\n        goto code_r0x00423175;\n    case 9:\n        fcn.004241c6();\n        uVar4 = var_24h[2];\n        *(unaff_EBP + -0x24) = var_24h[1];\n        *(unaff_EBP + -4) = 3;\n        uVar4 = (*pcVar8)(unaff_EBP + -0x28, uVar4);\n        *(unaff_EBP + -0x24) = 0;\n        *(unaff_EBP + -0x10) = uVar4;\ncode_r0x00423175:\n        *(unaff_EBP + -4) = 0;\n        fcn.0042460c();\n        break;\n    case 10:\n        var_14h = *(unaff_EBP + 0xc) >> 0x10;\n        uVar7 = fcn.004211d4(var_24h);\n        var_18h = var_24h;\n        goto code_r0x004231b9;\n    case 0xb:\n        var_24h = *(unaff_EBP + 0xc) >> 0x10;\n        var_28h = *(unaff_EBP + 0xc);\n        goto code_r0x00423417;\n    case 0xe:\n    case 0x2f:\n    case 0x4f:\n        goto code_r0x00423414;\n    case 0xf:\n        var_18h = fcn.004276ce(var_24h);\n        uVar7 = *(unaff_EBP + 0xc) >> 0x10;\ncode_r0x004231b9:\n        uVar5 = *(unaff_EBP + 0xc);\ncode_r0x004230f0:\n        uVar4 = (*pcVar8)(uVar5, uVar7, var_18h, var_14h);\n        goto code_r0x0042341b;\n    case 0x10:\n    case 0x12:\n    case 0x15:\n    case 0x1e:\n    case 0x2d:\n    case 0x32:\n    case 0x4c:\n    case 0x53:\n        goto code_r0x004233f9;\n    case 0x11:\n    case 0x14:\n    case 0x54:\n        var_14h = *(unaff_EBP + 0xc);\n        goto code_r0x004231e5;\n    case 0x13:\n        (*pcVar8)();\n        break;\n    case 0x16:\n        var_14h = *(unaff_EBP + 0xc) >> 0x10;\n        var_18h = *(unaff_EBP + 0xc);\n        goto code_r0x004233fc;\n    case 0x17:\n        var_14h = iVar10;\n        var_18h = iVar9;\n        goto code_r0x004233fc;\n    case 0x18:\n    case 0x19:\n        var_14h = var_24h >> 0x10;\n        var_18h = var_24h & 0xffff;\n        goto code_r0x0042321d;\n    case 0x1a:\n        fcn.004211d4(var_24h);\n        goto code_r0x004233f9;\n    case 0x1d:\n    case 0x28:\n    case 0x31:\n        uVar4 = (*pcVar8)();\n        goto code_r0x0042341b;\n    case 0x1f:\n        var_14h = *(unaff_EBP + 0xc);\n        var_18h = fcn.004211d4(var_14h);\n        fcn.004211d4(var_24h);\n        uVar7 = arg_8h_00[8] == var_24h;\n        goto code_r0x00423221;\n    case 0x20:\n        var_14h = *(unaff_EBP + 0xc);\n        fcn.0042458f(var_14h);\n        goto code_r0x004231e5;\n    case 0x21:\n        var_14h = *(unaff_EBP + 0xc);\n        fcn.004276ce(var_14h);\n        goto code_r0x004231e5;\n    case 0x22:\n        var_14h = iVar10;\n        var_18h = iVar9;\n        uVar7 = fcn.004276ce(*(unaff_EBP + 0xc), var_18h, var_14h);\n        goto code_r0x00423221;\n    case 0x23:\n        var_14h = *(unaff_EBP + 0xc);\n        goto code_r0x00423272;\n    case 0x24:\ncode_r0x00423272:\n        fcn.004211d4(var_14h);\n        goto code_r0x004231e5;\n    case 0x25:\n        var_14h = var_24h >> 0x10;\n        var_18h = var_24h & 0xffff;\n        goto code_r0x00423285;\n    case 0x26:\n        var_18h = iVar9;\n        var_14h = iVar10;\ncode_r0x00423285:\n        uVar7 = fcn.004211d4(*(unaff_EBP + 0xc));\n        goto code_r0x00423221;\n    case 0x27:\n        var_18h = fcn.004211d4(*(unaff_EBP + 0xc));\n        goto code_r0x004233fc;\n    case 0x29:\n        var_14h = *(unaff_EBP + 0xc) >> 0x10;\n        var_18h = fcn.004211d4(var_24h);\n        goto code_r0x004232b7;\n    case 0x2a:\n    case 0x2b:\n        var_18h = *(unaff_EBP + 0xc);\n        var_14h = *(unaff_EBP + 0xc) >> 0x10;\n        *(unaff_EBP + 8) = var_18h;\n        *(unaff_EBP + 0xc) = var_14h;\n        if (iVar3 == 0x2a) {\n            var_18h = fcn.004211d4(var_24h);\n            uVar7 = *(unaff_EBP + 0xc);\n            var_14h = var_24h;\n            goto code_r0x00423221;\n        }\n        goto code_r0x004233fc;\n    case 0x2c:\n    case 0x33:\ncode_r0x004231e5:\n        (*pcVar8)(var_14h);\n        break;\n    case 0x2e:\n    case 0x36:\n    case 0x52:\n        (*pcVar8)(*(unaff_EBP + 0xc), var_24h);\n        goto code_r0x00422eba;\n    case 0x30:\n    case 0x46:\n        var_28h = iVar9;\n        var_24h = iVar10;\n        goto code_r0x00423417;\n    case 0x34:\n        var_18h = *(unaff_EBP + 0xc) >> 0x10;\ncode_r0x004232b7:\n        uVar7 = *(unaff_EBP + 0xc);\n        goto code_r0x00423221;\n    case 0x35:\n        var_18h = iVar9;\n        var_14h = iVar10;\ncode_r0x0042321d:\n        uVar7 = *(unaff_EBP + 0xc);\ncode_r0x00423221:\n        (*pcVar8)(uVar7, var_18h, var_14h);\n        break;\n    case 0x37:\n        iVar3 = (*pcVar8)(*(unaff_EBP + 0xc), *(unaff_EBP + 0xc) >> 0x10, iVar9, iVar10);\n        *(unaff_EBP + -0x10) = iVar3;\n        goto joined_r0x00423365;\n    case 0x38:\n        (*pcVar8)(*(unaff_EBP + 0xc), *(unaff_EBP + 0xc) >> 0x10, iVar9, iVar10);\n        break;\n    case 0x45:\n        iVar3 = (*pcVar8)();\n        *(unaff_EBP + -0x10) = iVar3;\njoined_r0x00423365:\n        if (iVar3 != 0) {\ncode_r0x0042308c:\n            *(unaff_EBP + -4) = 0xffffffff;\n            fcn.0041fea4();\n            goto code_r0x0042309a;\n        }\n        break;\n    case 0x48:\n        fcn.004276ce(var_24h);\ncode_r0x004233f9:\n        var_18h = *(unaff_EBP + 0xc);\n        goto code_r0x004233fc;\n    case 0x49:\n        var_24h = fcn.004276ce(var_24h);\n        goto code_r0x00423414;\n    case 0x4b:\n        var_18h = fcn.004276ce(*(unaff_EBP + 0xc), var_24h);\n        goto code_r0x004233fc;\n    case 0x4d:\n        var_14h = var_24h & 0xffff;\n        var_18h = var_24h >> 0x10 & 0xf000;\n        uVar5 = var_24h >> 0x10 & 0xfff;\n        uVar7 = fcn.004211d4(*(unaff_EBP + 0xc));\n        goto code_r0x004233b6;\n    case 0x4e:\n        var_18h = *(unaff_EBP + 0xc);\ncode_r0x004233fc:\n        (*pcVar8)(var_18h, var_14h);\n        break;\n    case 0x50:\n        var_18h = iVar9;\n        var_14h = iVar10;\n        uVar5 = *(unaff_EBP + 0xc) >> 0x10;\n        uVar7 = *(unaff_EBP + 0xc);\n        goto code_r0x004233b6;\n    case 0x51:\n        var_18h = iVar9;\n        var_14h = iVar10;\n        uVar5 = *(unaff_EBP + 0xc) >> 0x10;\n        uVar7 = *(unaff_EBP + 0xc);\ncode_r0x004233b6:\n        (*pcVar8)(uVar7, uVar5, var_18h, var_14h);\ncode_r0x00422eba:\n        *(unaff_EBP + -0x10) = 1;\n    }\ncode_r0x0042341e:\n    if (*(unaff_EBP + 0x14) != NULL) {\n        **(unaff_EBP + 0x14) = *(unaff_EBP + -0x10);\n    }\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.0041fea4();\ncode_r0x0042309a:\n    fcn.0042cc9e();\n    return;\ncode_r0x00423414:\n    var_28h = *(unaff_EBP + 0xc);\ncode_r0x00423417:\n    uVar4 = (*pcVar8)(var_28h, var_24h);\ncode_r0x0042341b:\n    *(unaff_EBP + -0x10) = uVar4;\n    goto code_r0x0042341e;\n}\n",
        "token_count": 4938
    },
    "004239ca": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.004239ca(uint arg_8h)\n\n{\n    int32_t lpWndClass;\n    int16_t iVar1;\n    int32_t iVar2;\n    int32_t unaff_EBP;\n    uint var_38h;\n    uint var_4h;\n    \n    fcn.0042cbf9(0x30);\n    lpWndClass = *(unaff_EBP + 8);\n    iVar2 = fcn.0041fc2e(*(lpWndClass + 0x10), *(lpWndClass + 0x24), unaff_EBP + -0x38);\n    if (((iVar2 == 0) && (iVar1 = fcn.0041fb9c(lpWndClass),  iVar1 != 0)) &&\n       (iVar2 = fcn.0041a00a(),  *(iVar2 + 0x14) != '\\0')) {\n        fcn.00426527(1);\n        *(unaff_EBP + -4) = 0;\n        fcn.0041a00a();\n        fcn.00402ea0(*(lpWndClass + 0x24));\n        fcn.0040cee0(10);\n        *(unaff_EBP + -4) = 0xffffffff;\n        fcn.00426599(1);\n    }\n    fcn.0042cc9e();\n    return;\n}\n",
        "token_count": 316
    },
    "00423f47": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00423f47(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    \n    iVar1 = arg_8h;\n    fcn.0041af7c(arg_8h, &arg_8h);\n    if (arg_8h == 0) {\n        iVar2 = fcn.0041af38(iVar1);\n        if (iVar2 == 0) {\n            fcn.00419431();\n        }\n    }\n    *(in_ECX + 0xc) = 0;\n    *(in_ECX + 8) = iVar1;\n    return arg_8h;\n}\n",
        "token_count": 158
    },
    "00423f88": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00423f88(int32_t arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar2 = arg_10h;\n    if (*(arg_10h + 0x20) != 0) {\n        return;\n    }\n    iVar1 = fcn.0041af0f();\n    if (iVar1 != 0) {\n        return;\n    }\n    fcn.00423f47(arg_ch);\n    fcn.0041af7c(arg_ch, &arg_10h);\n    if (arg_10h != 0) {\n        iVar1 = fcn.00421c7e(arg_10h);\n        if (iVar1 == 0) {\n            fcn.00419431();\n        }\n        if (arg_10h != 0) {\n            iVar1 = *(arg_8h + 4);\n            iVar2 = (*_sym.imp.USER32.dll_GetParent)(*(iVar2 + 0x20));\n            if (*(iVar1 + 0x20) == iVar2) {\n                return;\n            }\n            arg_ch = 0;\n            goto code_r0x00424005;\n        }\n    }\n    iVar2 = fcn.0041af38(arg_ch);\n    if (iVar2 == 0) {\n        return;\n    }\n    iVar1 = *(arg_8h + 4);\ncode_r0x00424005:\n    fcn.0041b10d(iVar1, arg_ch);\n    return;\n}\n",
        "token_count": 345
    },
    "0042451b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0042451b(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint arg_8h_00;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t unaff_EBP;\n    uint var_4h;\n    \n    fcn.0042cbc6(0);\n    iVar1 = fcn.0041a03d();\n    if ((*(iVar1 + 0x1c) == 0) && (*(unaff_EBP + 8) != 0)) {\n        arg_8h_00 = fcn.004192c5(fcn.00426c15);\n        iVar2 = fcn.004192dc(0x60);\n        *(unaff_EBP + 8) = iVar2;\n        *(unaff_EBP + -4) = 0;\n        if (iVar2 == 0) {\n            uVar3 = 0;\n        }\n        else {\n            uVar3 = fcn.00427316(0x444da8, fcn.004244e0, fcn.004241b3, 4, 2);\n        }\n        *(unaff_EBP + -4) = 0xffffffff;\n        *(iVar1 + 0x1c) = uVar3;\n        fcn.004192c5(arg_8h_00);\n    }\n    fcn.0042cc9e();\n    return;\n}\n",
        "token_count": 329
    },
    "0042739f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0042739f(uint arg_8h)\n\n{\n    int32_t arg_8h_00;\n    int32_t iVar1;\n    uint uVar2;\n    int32_t extraout_ECX;\n    int32_t *piVar3;\n    int32_t unaff_EBP;\n    uint var_4h;\n    \n    fcn.0042cbf9(8);\n    arg_8h_00 = *(unaff_EBP + 8);\n    if ((arg_8h_00 != 0) && (iVar1 = fcn.0042605f(arg_8h_00),  iVar1 == 0)) {\n        iVar1 = fcn.0042605f(arg_8h_00);\n        if (iVar1 == 0) {\n            uVar2 = fcn.004192c5(fcn.00426c15);\n            *(unaff_EBP + -4) = 0;\n            *(unaff_EBP + 8) = uVar2;\n            iVar1 = fcn.004283d9();\n            if (iVar1 == 0) {\n                fcn.00419415();\n            }\n            (**(extraout_ECX + 0x14))(iVar1);\n            piVar3 = fcn.00426226(arg_8h_00);\n            uVar2 = *(unaff_EBP + 8);\n            *(unaff_EBP + -4) = 0xffffffff;\n            *piVar3 = iVar1;\n            fcn.004192c5(uVar2);\n            piVar3 = *(extraout_ECX + 0x58) + iVar1;\n            *piVar3 = arg_8h_00;\n            if (*(extraout_ECX + 0x5c) == 2) {\n                piVar3[1] = arg_8h_00;\n            }\n        }\n        else {\n            piVar3 = *(extraout_ECX + 0x58) + iVar1;\n            *piVar3 = arg_8h_00;\n            if (*(extraout_ECX + 0x5c) == 2) {\n                piVar3[1] = arg_8h_00;\n            }\n        }\n    }\n    fcn.0042cc9e();\n    return;\n}\n",
        "token_count": 516
    },
    "0042460c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042460c(code **param_1)\n\n{\n    uint uVar1;\n    \n    *param_1 = vtable.CDC.0;\n    if (param_1[1] != NULL) {\n        uVar1 = fcn.004245d9();\n        (*_sym.imp.GDI32.dll_DeleteDC)(uVar1);\n    }\n    return;\n}\n",
        "token_count": 86
    },
    "004246b9": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.004246b9(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint arg_8h_00;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t unaff_EBP;\n    uint var_4h;\n    \n    fcn.0042cbc6(0);\n    iVar1 = fcn.0041a03d();\n    if ((*(iVar1 + 0x20) == 0) && (*(unaff_EBP + 8) != 0)) {\n        arg_8h_00 = fcn.004192c5(fcn.00426c15);\n        iVar2 = fcn.004192dc(0x60);\n        *(unaff_EBP + 8) = iVar2;\n        *(unaff_EBP + -4) = 0;\n        if (iVar2 == 0) {\n            uVar3 = 0;\n        }\n        else {\n            uVar3 = fcn.00427316(0x444de0, fcn.00424501, fcn.004241b3, 4, 1);\n        }\n        *(unaff_EBP + -4) = 0xffffffff;\n        *(iVar1 + 0x20) = uVar3;\n        fcn.004192c5(arg_8h_00);\n    }\n    fcn.0042cc9e();\n    return;\n}\n",
        "token_count": 326
    },
    "0042476d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0042476d(int32_t param_1)\n\n{\n    uint uVar1;\n    \n    if (*(param_1 + 4) == 0) {\n        return 0;\n    }\n    uVar1 = fcn.00424741();\n    uVar1 = (*_sym.imp.GDI32.dll_DeleteObject)(uVar1);\n    return uVar1;\n}\n",
        "token_count": 87
    },
    "004248be": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.004248be(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x10) == 0) {\n        iVar2 = fcn.00425457(in_ECX + 0x14, *(in_ECX + 0x18), 0xc);\n        iVar1 = *(in_ECX + 0x18);\n        puVar3 = iVar2 + -8 + iVar1 * 0xc;\n        while (iVar1 = iVar1 + -1,  -1 < iVar1) {\n            *puVar3 = *(in_ECX + 0x10);\n            *(in_ECX + 0x10) = puVar3;\n            puVar3 = puVar3 + -3;\n        }\n    }\n    puVar3 = *(in_ECX + 0x10);\n    *(in_ECX + 0x10) = *puVar3;\n    puVar3[1] = arg_8h;\n    *puVar3 = arg_ch;\n    *(in_ECX + 0xc) = *(in_ECX + 0xc) + 1;\n    if (puVar3 == 0xfffffff8) {\n        fcn.0041944d();\n    }\n    fcn.00401840();\n    return puVar3;\n}\n",
        "token_count": 320
    },
    "00424dea": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00424dea(int32_t arg_8h, uint arg_ch)\n\n{\n    uint arg_8h_00;\n    int32_t arg_10h;\n    \n    if (arg_8h != 0) {\n        arg_10h = arg_8h;\n        arg_8h_00 = fcn.00424a58(arg_8h);\n        fcn.00424da4(arg_8h_00, arg_8h, arg_10h);\n    }\n    return;\n}\n",
        "token_count": 116
    },
    "00424f28": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00424f28(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x10) == 0) {\n        iVar2 = fcn.00425457(in_ECX + 0x14, *(in_ECX + 0x18), 0xc);\n        iVar1 = *(in_ECX + 0x18);\n        puVar3 = iVar2 + -8 + iVar1 * 0xc;\n        while (iVar1 = iVar1 + -1,  -1 < iVar1) {\n            *puVar3 = *(in_ECX + 0x10);\n            *(in_ECX + 0x10) = puVar3;\n            puVar3 = puVar3 + -3;\n        }\n    }\n    puVar3 = *(in_ECX + 0x10);\n    *(in_ECX + 0x10) = *puVar3;\n    puVar3[1] = arg_8h;\n    *puVar3 = arg_ch;\n    *(in_ECX + 0xc) = *(in_ECX + 0xc) + 1;\n    puVar3[2] = 0;\n    return;\n}\n",
        "token_count": 295
    },
    "0042515d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0042515d(uint32_t *arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint32_t *puVar3;\n    int32_t in_ECX;\n    uint var_28h;\n    uint lpLastWriteTime;\n    uint lpLastAccessTime;\n    uint lpCreationTime;\n    uint32_t lpFileSize;\n    uint32_t var_4h;\n    \n    fcn.00429510(arg_8h, 0, 0x128);\n    fcn.00419498(arg_8h + 0x22, 0x104, *(in_ECX + 0xc), 0xffffffff);\n    if (*(in_ECX + 4) == *0x443a9c) {\ncode_r0x004252b4:\n        uVar2 = 1;\n    }\n    else {\n        iVar1 = (*_sym.imp.KERNEL32.dll_GetFileTime)\n                          (*(in_ECX + 4), &lpCreationTime, &lpLastAccessTime, &lpLastWriteTime);\n        if (iVar1 != 0) {\n            iVar1 = (*_sym.imp.KERNEL32.dll_GetFileSizeEx)(*(in_ECX + 4), &lpFileSize);\n            if (iVar1 != 0) {\n                arg_8h[6] = lpFileSize;\n                arg_8h[7] = var_4h;\n                if (*(*(in_ECX + 0xc) + -0xc) == 0) {\n                    *(arg_8h + 8) = 0;\n                }\n                else {\n                    iVar1 = (*_sym.imp.KERNEL32.dll_GetFileAttributesA)(*(in_ECX + 0xc));\n                    *(arg_8h + 8) = (iVar1 == -1) - 1U & iVar1;\n                }\n                iVar1 = fcn.00424fda(&lpCreationTime);\n                if (iVar1 == 0) {\n                    *arg_8h = 0;\n                    arg_8h[1] = 0;\n                }\n                else {\n                    puVar3 = fcn.004250fd(&lpCreationTime, 0xffffffff);\n                    *arg_8h = *puVar3;\n                    arg_8h[1] = puVar3[1];\n                }\n                iVar1 = fcn.00424fda(&lpLastAccessTime);\n                if (iVar1 == 0) {\n                    arg_8h[4] = 0;\n                    arg_8h[5] = 0;\n                }\n                else {\n                    puVar3 = fcn.004250fd(&lpLastAccessTime, 0xffffffff);\n                    arg_8h[4] = *puVar3;\n                    arg_8h[5] = puVar3[1];\n                }\n                iVar1 = fcn.00424fda(&lpLastWriteTime);\n                if (iVar1 == 0) {\n                    arg_8h[2] = 0;\n                    arg_8h[3] = 0;\n                }\n                else {\n                    puVar3 = fcn.004250fd(&lpLastWriteTime, 0xffffffff);\n                    arg_8h[2] = *puVar3;\n                    arg_8h[3] = puVar3[1];\n                }\n                if ((*arg_8h | arg_8h[1]) == 0) {\n                    *arg_8h = arg_8h[2];\n                    arg_8h[1] = arg_8h[3];\n                }\n                if ((arg_8h[4] | arg_8h[5]) == 0) {\n                    arg_8h[4] = arg_8h[2];\n                    arg_8h[5] = arg_8h[3];\n                }\n                goto code_r0x004252b4;\n            }\n        }\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 862
    },
    "00425457": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00425457(uint *arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    code *pcVar1;\n    uint *puVar2;\n    \n    if ((arg_ch != 0) && (arg_10h != 0)) {\n        puVar2 = fcn.004192dc(arg_ch * arg_10h + 4);\n        *puVar2 = *arg_8h;\n        *arg_8h = puVar2;\n        return;\n    }\n    fcn.0041944d();\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 146
    },
    "004255b8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004255b8(int32_t arg_8h)\n\n{\n    int32_t in_ECX;\n    int32_t extraout_ECX;\n    \n    if (arg_8h == 0) {\n        fcn.0041944d();\n        in_ECX = extraout_ECX;\n    }\n    return *(in_ECX + 4) + arg_8h;\n}\n",
        "token_count": 90
    },
    "00425970": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00425970(uint *arg_8h, int32_t arg_ch)\n\n{\n    uint *puVar1;\n    bool bVar2;\n    uint *in_ECX;\n    int32_t iVar3;\n    uint var_4h;\n    \n    iVar3 = 1;\n    bVar2 = true;\n    if (1 < arg_8h[2]) {\n        do {\n            if ((arg_ch == 0) || (*(in_ECX[4] + 4 + iVar3 * 8) == arg_ch)) {\n                puVar1 = *(arg_8h[3] + iVar3 * 4);\n                if (puVar1 != NULL) {\n                    (***puVar1)(1);\n                }\n                *(arg_8h[3] + iVar3 * 4) = 0;\n            }\n            else if (*(arg_8h[3] + iVar3 * 4) != 0) {\n                bVar2 = false;\n            }\n            iVar3 = iVar3 + 1;\n        } while (iVar3 < arg_8h[2]);\n        if (!bVar2) {\n            return;\n        }\n    }\n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(in_ECX + 7);\n    fcn.004255f0(arg_8h);\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(in_ECX + 7);\n    (*_sym.imp.KERNEL32.dll_LocalFree)(arg_8h[3]);\n    (***arg_8h)(1);\n    (*_sym.imp.KERNEL32.dll_TlsSetValue)(*in_ECX, 0);\n    return;\n}\n",
        "token_count": 360
    },
    "00425b0d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00425b0d(uint arg_8h, int32_t arg_ch)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    int32_t iVar4;\n    \n    puVar3 = *0x453a2c;\n    if (*0x453a2c != NULL) {\n        puVar1 = *0x453a2c + 7;\n        (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(puVar1);\n        if (arg_ch == 0) {\n            iVar4 = (*_sym.imp.KERNEL32.dll_TlsGetValue)(*puVar3);\n            if (iVar4 != 0) {\n                fcn.00425970(iVar4, arg_8h);\n            }\n        }\n        else {\n            iVar4 = puVar3[5];\n            while (iVar4 != 0) {\n                iVar2 = *(iVar4 + 4);\n                fcn.00425970(iVar4, arg_8h);\n                iVar4 = iVar2;\n            }\n        }\n        (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(puVar1);\n        return;\n    }\n    return;\n}\n",
        "token_count": 259
    },
    "00425a63": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00425a63(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint arg_ch;\n    int32_t *extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.0042cbc6(4);\n    if (*(unaff_EBP + 8) != 0) goto code_r0x00425a82;\ncode_r0x00425a7d:\n    do {\n        fcn.0041944d();\ncode_r0x00425a82:\n        if (*extraout_ECX != 0) goto code_r0x00425abd;\n        if (*0x453a2c == 0) {\n            *(unaff_EBP + -0x10) = 0x453a30;\n            *(unaff_EBP + -4) = 0;\n            *0x453a2c = fcn.00425779();\n            *(unaff_EBP + -4) = 0xffffffff;\n            if (*0x453a2c == 0) goto code_r0x00425a7d;\n        }\n        iVar1 = fcn.00425661();\n        *extraout_ECX = iVar1;\n        if (iVar1 != 0) {\ncode_r0x00425abd:\n            iVar1 = fcn.004254d3(*extraout_ECX);\n            if (iVar1 == 0) {\n                arg_ch = (**(unaff_EBP + 8))();\n                fcn.00425820(*extraout_ECX, arg_ch);\n            }\n            fcn.0042cc9e();\n            return;\n        }\n    } while( true );\n}\n",
        "token_count": 393
    },
    "00425bca": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.00425bca(int32_t *arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t **ppiVar2;\n    int32_t *in_ECX;\n    int32_t **ppiVar3;\n    \n    piVar1 = (**(*in_ECX + 0x44))(arg_8h);\n    if (piVar1 == NULL) {\n        ppiVar2 = (**(*in_ECX + 0x38))();\n        if ((((*0x447158 == *arg_8h) && (arg_8h[1] == *0x44715c)) && (arg_8h[2] == *0x447160)) &&\n           (arg_8h[3] == *0x447164)) {\n            do {\n                for (piVar1 = ppiVar2[1]; *piVar1 != 0; piVar1 = piVar1 + 2) {\n                    if (*(piVar1[1] + in_ECX) != 0) {\n                        return piVar1[1] + in_ECX;\n                    }\n                }\n                ppiVar2 = *ppiVar2;\n            } while (ppiVar2 != NULL);\n        }\n        else {\n            do {\n                for (ppiVar3 = ppiVar2[1]; piVar1 = *ppiVar3,  piVar1 != NULL; ppiVar3 = ppiVar3 + 2) {\n                    if (((*piVar1 == *arg_8h) && (piVar1[1] == arg_8h[1])) &&\n                       ((piVar1[2] == arg_8h[2] && ((piVar1[3] == arg_8h[3] && (*(ppiVar3[1] + in_ECX) != 0)))))) {\n                        return ppiVar3[1] + in_ECX;\n                    }\n                }\n                ppiVar2 = *ppiVar2;\n            } while (ppiVar2 != NULL);\n        }\n        piVar1 = NULL;\n    }\n    return piVar1;\n}\n",
        "token_count": 461
    },
    "00425c7d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00425c7d(uint arg_8h)\n\n{\n    uint *puVar1;\n    int32_t *piVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    int32_t *in_ECX;\n    uint var_8h;\n    int32_t var_4h;\n    \n    piVar2 = (**(*in_ECX + 0x38))();\n    do {\n        for (piVar3 = piVar2[1]; *piVar3 != 0; piVar3 = piVar3 + 2) {\n        }\n        for (piVar3 = piVar3 + 1; *piVar3 != -1; piVar3 = piVar3 + 2) {\n            puVar1 = *(in_ECX + *piVar3);\n            if (puVar1 != NULL) {\n                var_4h = 0;\n                iVar4 = (***puVar1)(puVar1, arg_8h, &var_4h);\n                if ((iVar4 == 0) && (var_4h != 0)) {\n                    return var_4h;\n                }\n            }\n        }\n        piVar2 = *piVar2;\n        if (piVar2 == NULL) {\n            return 0;\n        }\n    } while( true );\n}\n",
        "token_count": 294
    },
    "00425cdf": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00425cdf(int32_t param_1)\n\n{\n    if (*(param_1 + 8) != 0) {\n        (**(**(param_1 + 8) + 4))(*(param_1 + 8));\n        return;\n    }\n    (*_sym.imp.KERNEL32.dll_InterlockedIncrement)(param_1 + 4);\n    return;\n}\n",
        "token_count": 85
    },
    "00425da8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00425da8(uint arg_8h, int32_t *arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 8) != 0) {\n        iVar1 = (****(in_ECX + 8))(*(in_ECX + 8), arg_8h, arg_ch);\n        return iVar1;\n    }\n    iVar1 = fcn.00425bca(arg_8h);\n    *arg_ch = iVar1;\n    if (iVar1 == 0) {\n        iVar1 = fcn.00425c7d(arg_8h);\n        *arg_ch = iVar1;\n        iVar1 = (-(iVar1 != 0) & 0x7fffbffe) + 0x80004002;\n    }\n    else {\n        fcn.00425cdf();\n        iVar1 = 0;\n    }\n    return iVar1;\n}\n",
        "token_count": 211
    },
    "00425f7b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00425f7b(uint32_t arg_8h, int32_t arg_ch)\n\n{\n    uint uVar1;\n    int32_t in_ECX;\n    \n    if (arg_8h == 0) {\n        arg_8h = 0x11;\n    }\n    if (*(in_ECX + 4) != 0) {\n        fcn.00419316(*(in_ECX + 4));\n        *(in_ECX + 4) = 0;\n    }\n    if (arg_ch != 0) {\n        uVar1 = fcn.004192dc(-(arg_8h * 4 >> 0x20 != 0) | arg_8h * 4);\n        *(in_ECX + 4) = uVar1;\n        fcn.00429510(uVar1, 0, arg_8h << 2);\n    }\n    *(in_ECX + 8) = arg_8h;\n    return;\n}\n",
        "token_count": 216
    },
    "004261d6": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004261d6(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    \n    if (*(param_1 + 0x10) == 0) {\n        iVar3 = fcn.00425457(param_1 + 0x14, *(param_1 + 0x18), 0xc);\n        iVar1 = *(param_1 + 0x18);\n        puVar4 = iVar3 + -8 + iVar1 * 0xc;\n        while (iVar1 = iVar1 + -1,  -1 < iVar1) {\n            *puVar4 = *(param_1 + 0x10);\n            *(param_1 + 0x10) = puVar4;\n            puVar4 = puVar4 + -3;\n        }\n    }\n    puVar4 = *(param_1 + 0x10);\n    uVar2 = *puVar4;\n    *(param_1 + 0xc) = *(param_1 + 0xc) + 1;\n    *(param_1 + 0x10) = uVar2;\n    puVar4[1] = 0;\n    puVar4[2] = 0;\n    return;\n}\n",
        "token_count": 288
    },
    "004262e3": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004262e3(uint arg_8h, char *arg_ch, int32_t *arg_10h)\n\n{\n    uint32_t arg_8h_00;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t *in_ECX;\n    uint32_t uVar5;\n    ulong uVar6;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar2 = *arg_10h;\n    if (iVar2 < 0) {\n        uVar6 = fcn.00401090(0x80070057);\n        iVar2 = uVar6 >> 0x20;\n        in_ECX = uVar6;\n    }\n    if ((arg_ch == NULL) || (*arg_ch == '\\0')) {\n        iVar1 = *in_ECX;\n        if (iVar2 < *(iVar1 + -0xc)) {\n            uVar4 = fcn.004015b0();\n            fcn.004262a4(*arg_10h + iVar1, uVar4);\n            return arg_8h;\n        }\n    }\n    else {\n        iVar1 = *in_ECX;\n        arg_8h_00 = iVar1 + iVar2;\n        uVar5 = *(iVar1 + -0xc) + iVar1;\n        if (arg_8h_00 < uVar5) {\n            iVar2 = fcn.0042e88d(arg_8h_00, arg_ch);\n            if (arg_8h_00 + iVar2 < uVar5) {\n                iVar3 = fcn.0042e96b(arg_8h_00 + iVar2, arg_ch);\n                iVar1 = *arg_10h;\n                *arg_10h = iVar1 + iVar2 + 1 + iVar3;\n                fcn.00407ed0(arg_8h, iVar1 + iVar2, iVar3);\n                return arg_8h;\n            }\n        }\n    }\n    *arg_10h = -1;\n    uVar4 = fcn.004015b0();\n    fcn.00401870(uVar4);\n    return arg_8h;\n}\n",
        "token_count": 485
    },
    "004264be": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t fcn.004264be(void)\n\n{\n    if (*0x453abc == 0) {\n        *0x453abc = 1;\n        (*_sym.imp.KERNEL32.dll_InitializeCriticalSection)(0x453c58);\n    }\n    return *0x453abc;\n}\n",
        "token_count": 65
    },
    "00426527": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00426527(uint32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    \n    if (0x10 < arg_8h) {\n        fcn.0041944d();\n    }\n    if (*0x453abc == 0) {\n        fcn.004264be();\n    }\n    pcVar2 = _sym.imp.KERNEL32.dll_EnterCriticalSection;\n    piVar1 = arg_8h * 4 + 0x453c70;\n    if (*piVar1 == 0) {\n        (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(0x453c58);\n        if (*piVar1 == 0) {\n            (*_sym.imp.KERNEL32.dll_InitializeCriticalSection)(arg_8h * 0x18 + 0x453ac0);\n            *piVar1 = *piVar1 + 1;\n        }\n        (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(0x453c58);\n    }\n    (*pcVar2)(arg_8h * 0x18 + 0x453ac0);\n    return;\n}\n",
        "token_count": 251
    },
    "004265be": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004265be(int32_t *arg_8h, char *arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    int32_t *piVar1;\n    char cVar2;\n    int32_t iVar3;\n    char *pcVar4;\n    char *pcVar5;\n    uint var_4h;\n    \n    pcVar4 = arg_ch;\n    if (arg_ch != NULL) goto code_r0x004265d3;\n    do {\n        fcn.0041944d();\ncode_r0x004265d3:\n    } while (arg_10h == 0);\n    arg_ch = NULL;\n    cVar2 = *pcVar4;\n    pcVar5 = pcVar4;\n    while (cVar2 != '\\0') {\n        if (*pcVar5 == '%') {\n            cVar2 = pcVar5[1];\n            if ((cVar2 < '1') || ('9' < cVar2)) {\n                if ((cVar2 < 'A') || ('Z' < cVar2)) goto code_r0x0042662b;\n                if (cVar2 < ':') goto code_r0x0042660b;\n                iVar3 = cVar2 + -0x38;\n            }\n            else {\ncode_r0x0042660b:\n                iVar3 = cVar2 + -0x31;\n            }\n            pcVar5 = pcVar5 + 2;\n            if (arg_14h <= iVar3) goto code_r0x0042663e;\n            iVar3 = *(arg_10h + iVar3 * 4);\n            if (iVar3 != 0) {\n                iVar3 = (*_sym.imp.KERNEL32.dll_lstrlenA)(iVar3);\n                arg_ch = arg_ch + iVar3;\n            }\n        }\n        else {\ncode_r0x0042662b:\n            iVar3 = fcn.0042eb56(*pcVar5);\n            if (iVar3 != 0) {\n                arg_ch = arg_ch + 1;\n                pcVar5 = pcVar5 + 1;\n            }\n            pcVar5 = pcVar5 + 1;\ncode_r0x0042663e:\n            arg_ch = arg_ch + 1;\n        }\n        cVar2 = *pcVar5;\n    }\n    pcVar5 = fcn.004018e0(arg_ch);\n    cVar2 = *pcVar4;\n    do {\n        if (cVar2 == '\\0') {\n            fcn.00401560(pcVar5 - *arg_8h);\n            return;\n        }\n        if (*pcVar4 == '%') {\n            cVar2 = pcVar4[1];\n            if ((cVar2 < '1') || ('9' < cVar2)) {\n                if ((cVar2 < 'A') || ('Z' < cVar2)) goto code_r0x004266c7;\n                if (cVar2 < ':') goto code_r0x00426684;\n                iVar3 = cVar2 + -0x38;\n            }\n            else {\ncode_r0x00426684:\n                iVar3 = cVar2 + -0x31;\n            }\n            pcVar4 = pcVar4 + 2;\n            if (arg_14h <= iVar3) {\n                *pcVar5 = '?';\n                goto code_r0x004266e4;\n            }\n            piVar1 = arg_10h + iVar3 * 4;\n            iVar3 = *piVar1;\n            if (iVar3 != 0) {\n                iVar3 = (*_sym.imp.KERNEL32.dll_lstrlenA)(iVar3);\n                fcn.0041b1d3(pcVar5, arg_ch + 1, *piVar1);\n                arg_ch = arg_ch - iVar3;\n                pcVar5 = pcVar5 + iVar3;\n            }\n        }\n        else {\ncode_r0x004266c7:\n            iVar3 = fcn.0042eb56(*pcVar4);\n            if (iVar3 != 0) {\n                *pcVar5 = *pcVar4;\n                pcVar5 = pcVar5 + 1;\n                pcVar4 = pcVar4 + 1;\n                arg_ch = arg_ch + -1;\n            }\n            *pcVar5 = *pcVar4;\n            pcVar4 = pcVar4 + 1;\ncode_r0x004266e4:\n            pcVar5 = pcVar5 + 1;\n            arg_ch = arg_ch + -1;\n        }\n        cVar2 = *pcVar4;\n    } while( true );\n}\n",
        "token_count": 1008
    },
    "0042676d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0042676d(int32_t pszPath, int32_t arg_ch, uint arg_10h)\n\n{\n    uint arg_10h_00;\n    int32_t iVar1;\n    \n    if (pszPath == 0) {\n        fcn.0041944d();\n    }\n    arg_10h_00 = (*_sym.imp.SHLWAPI.dll_PathFindFileNameA)(pszPath);\n    if (arg_ch == 0) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_lstrlenA)(arg_10h_00);\n        iVar1 = iVar1 + 1;\n    }\n    else {\n        fcn.00419498(arg_ch, arg_10h, arg_10h_00, 0xffffffff);\n        iVar1 = 0;\n    }\n    return iVar1;\n}\n",
        "token_count": 184
    },
    "004267ad": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004267ad(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uchar *arg_8h;\n    uint uVar3;\n    uint *arg_8h_00;\n    char *arg_10h;\n    uint *arg_8h_01;\n    uint var_310h;\n    uint var_30ch;\n    uint var_20ch;\n    uint lpFilename;\n    uint32_t var_4h;\n    \n    var_4h = *0x45060c ^ &stack0xfffffffc;\n    iVar1 = fcn.0041a00a();\n    *(iVar1 + 8) = *(param_1 + 0x44);\n    *(iVar1 + 0xc) = *(param_1 + 0x44);\n    iVar2 = (*_sym.imp.KERNEL32.dll_GetModuleFileNameA)(*(param_1 + 0x44), &lpFilename, 0x104);\n    if ((iVar2 == 0) || (iVar2 == 0x104)) {\n        fcn.00424197();\n    }\n    arg_8h_01 = &lpFilename;\n    arg_8h = (*_sym.imp.SHLWAPI.dll_PathFindExtensionA)();\n    if (arg_8h == NULL) {\n        fcn.00424197();\n    }\n    *arg_8h = 0;\n    iVar2 = fcn.0042676d(&lpFilename, &var_20ch, 0x104);\n    if (iVar2 != 0) {\n        fcn.00424197();\n    }\n    if (*(param_1 + 0x60) != 0) goto code_r0x0042685e;\n    iVar2 = fcn.0042d0f1(&var_20ch);\n    *(param_1 + 0x60) = iVar2;\n    if (iVar2 != 0) goto code_r0x0042685e;\ncode_r0x00426859:\n    do {\n        fcn.00419415();\ncode_r0x0042685e:\n        iVar2 = *(param_1 + 0x50);\n        if (iVar2 == 0) {\n            iVar2 = fcn.0041a08e(0xe000, &var_30ch, 0x100);\n            if (iVar2 == 0) {\n                arg_8h_00 = *(param_1 + 0x60);\n            }\n            else {\n                arg_8h_00 = &var_30ch;\n            }\n            iVar2 = fcn.0042d0f1(arg_8h_00);\n            *(param_1 + 0x50) = iVar2;\n            if (iVar2 == 0) goto code_r0x00426859;\n        }\n        *(iVar1 + 0x10) = iVar2;\n        if (*(param_1 + 100) == 0) {\n            if (*(param_1 + 0x6c) == 1) {\n                arg_10h = \".CHM\";\n            }\n            else {\n                arg_10h = \".HLP\";\n            }\n            fcn.0041b1d3(arg_8h, &var_4h - arg_8h, arg_10h);\n            iVar2 = fcn.0042d0f1(&lpFilename);\n            *(param_1 + 100) = iVar2;\n            if (iVar2 == 0) goto code_r0x00426859;\n            *arg_8h = 0;\n        }\n        if (*(param_1 + 0x68) != 0) goto code_r0x00426924;\n        uVar3 = fcn.0042d07d(&var_20ch, 0x104, \".INI\");\n        fcn.00401000(uVar3);\n        iVar2 = fcn.0042d0f1(&var_20ch);\n        *(param_1 + 0x68) = iVar2;\n        if (iVar2 != 0) {\ncode_r0x00426924:\n            fcn.004294b3(arg_8h_01);\n            return;\n        }\n    } while( true );\n}\n",
        "token_count": 926
    },
    "00426933": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00426933(uint arg_8h, uint noname_1, uint arg_10h, uint arg_14h)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    \n    pcVar1 = _sym.imp.KERNEL32.dll_SetErrorMode;\n    uVar2 = (*_sym.imp.KERNEL32.dll_SetErrorMode)(0);\n    (*pcVar1)(uVar2 | 0x8001);\n    iVar3 = fcn.0041a00a();\n    *(iVar3 + 8) = arg_8h;\n    *(iVar3 + 0xc) = arg_8h;\n    fcn.00419788();\n    iVar3 = fcn.0041a00a();\n    iVar3 = *(iVar3 + 4);\n    if (iVar3 != 0) {\n        *(iVar3 + 0x48) = arg_10h;\n        *(iVar3 + 0x4c) = arg_14h;\n        *(iVar3 + 0x44) = arg_8h;\n        fcn.004267ad();\n    }\n    iVar3 = fcn.0041a00a();\n    if (*(iVar3 + 0x14) == '\\0') {\n        fcn.0041e29d();\n    }\n    iVar3 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(\"user32.dll\");\n    if (iVar3 != 0) {\n        *0x453784 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar3, \"NotifyWinEvent\");\n    }\n    return 1;\n}\n",
        "token_count": 358
    },
    "00426a95": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00426a95(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    uint unaff_EBX;\n    uint lpString;\n    uint32_t var_4h;\n    \n    var_4h = *0x45060c ^ &stack0xfffffffc;\n    if (*(in_ECX + 0x54) == 0) {\n        fcn.0042b822(&lpString, 0x10, 0x4420ac, arg_10h);\n        (*_sym.imp.KERNEL32.dll_WritePrivateProfileStringA)(arg_8h, arg_ch, &lpString, *(in_ECX + 0x68));\n    }\n    else {\n        iVar1 = fcn.00426a4d(arg_8h);\n        if (iVar1 != 0) {\n            (*_sym.imp.ADVAPI32.dll_RegSetValueExA)(iVar1, arg_ch, 0, 4, &arg_10h, 4);\n            (*_sym.imp.ADVAPI32.dll_RegCloseKey)(iVar1);\n        }\n    }\n    fcn.004294b3(unaff_EBX);\n    return;\n}\n",
        "token_count": 273
    },
    "00426f3e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00426f3e(int32_t arg_8h)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int16_t *piVar4;\n    uint16_t *puVar5;\n    uint16_t uVar6;\n    bool bVar7;\n    uint var_8h;\n    uint var_4h;\n    \n    bVar7 = *(arg_8h + 2) == -1;\n    iVar2 = fcn.00426eed(arg_8h);\n    iVar3 = fcn.00426ea6(arg_8h);\n    if (iVar3 != 0) {\n        iVar2 = iVar2 + (bVar7 * 2 + 1) * 2;\n        iVar3 = fcn.0042cced(iVar2);\n        iVar2 = iVar2 + 2 + iVar3 * 2;\n    }\n    if (bVar7) {\n        iVar1 = *(arg_8h + 0x10);\n    }\n    else {\n        iVar1 = *(arg_8h + 8);\n    }\n    if (iVar1 != 0) {\n        do {\n            piVar4 = (iVar2 + 3U & 0xfffffffc) + (-bVar7 & 6) + 0x12;\n            if (*piVar4 == -1) {\n                piVar4 = piVar4 + 2;\n            }\n            else {\n                piVar4 = fcn.00426ed9(piVar4);\n            }\n            if (*piVar4 == -1) {\n                puVar5 = piVar4 + 2;\n            }\n            else {\n                puVar5 = fcn.00426ed9(piVar4);\n            }\n            uVar6 = *puVar5;\n            if ((uVar6 != 0) && (!bVar7)) {\n                uVar6 = uVar6 - 2;\n            }\n            iVar1 = iVar1 + -1;\n            iVar2 = puVar5 + uVar6 + 2;\n        } while (iVar1 != 0);\n    }\n    return iVar2 - arg_8h;\n}\n",
        "token_count": 475
    },
    "00427072": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_58h\n\nvoid __cdecl fcn.00427072(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint32_t *arg_8h_00;\n    int32_t iVar2;\n    int32_t iVar3;\n    ushort *puVar4;\n    uint32_t uVar5;\n    uint *in_ECX;\n    int32_t iVar6;\n    uint32_t uVar7;\n    int16_t iVar8;\n    uint32_t uVar9;\n    bool bVar10;\n    int32_t var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint lpString;\n    uint var_44h;\n    uint32_t var_4h;\n    \n    var_4h = *0x45060c ^ &stack0xfffffffc;\n    if (in_ECX[1] != 0) {\n        arg_8h_00 = (*_sym.imp.KERNEL32.dll_GlobalLock)(*in_ECX);\n        bVar10 = *(arg_8h_00 + 2) == -1;\n        iVar2 = fcn.00426ea6(arg_8h_00);\n        iVar1 = bVar10 * 2 + 1;\n        var_58h = iVar1 * 2;\n        if (bVar10) {\n            arg_8h_00[3] = arg_8h_00[3] | 0x40;\n        }\n        else {\n            *arg_8h_00 = *arg_8h_00 | 0x40;\n        }\n        iVar3 = (*_sym.imp.KERNEL32.dll_lstrlenA)(arg_8h);\n        if (iVar3 < 0x20) {\n            iVar3 = (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)(0, 0, arg_8h, 0xffffffff, &var_44h, 0x20);\n            iVar3 = var_58h + iVar3 * 2;\n            if (var_58h <= iVar3) {\n                puVar4 = fcn.00426eed(arg_8h_00);\n                iVar6 = 0;\n                if (iVar2 != 0) {\n                    iVar2 = fcn.0042cced(puVar4 + iVar1);\n                    iVar6 = var_58h + 2 + iVar2 * 2;\n                }\n                uVar5 = iVar6 + 3 + puVar4 & 0xfffffffc;\n                uVar9 = puVar4 + iVar3 + 3 & 0xfffffffc;\n                if (bVar10) {\n                    iVar8 = *(arg_8h_00 + 4);\n                }\n                else {\n                    iVar8 = *(arg_8h_00 + 2);\n                }\n                if ((iVar3 != iVar6) && (iVar8 != 0)) {\n                    uVar7 = (in_ECX[1] - uVar5) + arg_8h_00;\n                    if (in_ECX[1] < uVar7) goto code_r0x004271b7;\n                    fcn.004010e0(uVar9, uVar7, uVar5, uVar7);\n                }\n                *puVar4 = arg_ch;\n                iVar3 = iVar3 + iVar1 * -2;\n                fcn.004010e0(puVar4 + iVar1, iVar3, &var_44h, iVar3);\n                in_ECX[1] = in_ECX[1] + (uVar9 - uVar5);\n                (*_sym.imp.KERNEL32.dll_GlobalUnlock)(*in_ECX);\n                in_ECX[2] = 0;\n            }\n        }\n    }\ncode_r0x004271b7:\n    fcn.004294b3(var_58h);\n    return;\n}\n",
        "token_count": 852
    },
    "004271c6": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004271c6(uint32_t arg_8h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint uVar4;\n    char *arg_8h_00;\n    uint unaff_EDI;\n    uint32_t uVar5;\n    uint var_44h;\n    int32_t lpvObject;\n    uint var_24h;\n    uint32_t var_4h;\n    \n    pcVar1 = _sym.imp.GDI32.dll_GetStockObject;\n    var_4h = *0x45060c ^ &stack0xfffffffc;\n    uVar5 = 10;\n    arg_8h_00 = \"System\";\n    iVar2 = (*_sym.imp.GDI32.dll_GetStockObject)(0x11);\n    if (iVar2 == 0) {\n        iVar2 = (*pcVar1)(0xd);\n        if (iVar2 == 0) goto code_r0x00427244;\n    }\n    iVar2 = (*_sym.imp.GDI32.dll_GetObjectA)(iVar2, 0x3c, &lpvObject);\n    if (iVar2 != 0) {\n        arg_8h_00 = &var_24h;\n        uVar3 = (*_sym.imp.USER32.dll_GetDC)(0);\n        if (lpvObject < 0) {\n            lpvObject = -lpvObject;\n        }\n        uVar4 = (*_sym.imp.GDI32.dll_GetDeviceCaps)(uVar3, 0x5a);\n        uVar5 = (*_sym.imp.KERNEL32.dll_MulDiv)(lpvObject, 0x48, uVar4);\n        uVar5 = uVar5 & 0xffff;\n        (*_sym.imp.USER32.dll_ReleaseDC)(0, uVar3);\n    }\ncode_r0x00427244:\n    if (arg_8h == 0) {\n        arg_8h = uVar5;\n    }\n    fcn.00427072(arg_8h_00, arg_8h);\n    fcn.004294b3(unaff_EDI);\n    return;\n}\n",
        "token_count": 470
    },
    "00427452": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00427452(int32_t param_1)\n\n{\n    uint *puVar1;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    if (param_1 != 0) {\n        var_8h = -(*(param_1 + 0x44) != 0);\n        while (var_8h != 0) {\n            fcn.00426115(&var_8h, &var_ch, &var_4h);\n            puVar1 = *(param_1 + 0x58) + var_4h;\n            *puVar1 = 0;\n            if (*(param_1 + 0x5c) == 2) {\n                puVar1[1] = 0;\n            }\n            (**(param_1 + 0x18))(var_4h);\n        }\n        fcn.00425fd9();\n        fcn.004283bd();\n    }\n    return;\n}\n",
        "token_count": 219
    },
    "00427525": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00427525(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint uVar5;\n    \n    iVar1 = fcn.0041a03d();\n    if ((*(iVar1 + 0x10) != 0) && (iVar2 = *(iVar1 + 0x10) + -1,  *(iVar1 + 0x10) = iVar2,  iVar2 == 0)) {\n        if (arg_8h != 0) {\n            if (((arg_8h != -1) && (iVar2 = fcn.0041dc9a(),  iVar2 != 0)) && (*(iVar2 + 0x3c) != NULL)) {\n                (**(iVar2 + 0x3c))(0, 0);\n            }\n            fcn.00427452();\n            fcn.00427452();\n            fcn.00427452();\n            fcn.00427452();\n            fcn.00427452();\n        }\n        iVar2 = fcn.0041a00a();\n        iVar2 = *(iVar2 + 4);\n        iVar3 = fcn.00425525();\n        if ((((iVar3 != 0) && (iVar2 != 0)) &&\n            ((*(iVar3 + 0xc) == 0 || (uVar4 = fcn.0042ed2d(*(iVar3 + 0xc)),  uVar4 < *(iVar2 + 0x98))))) &&\n           (*(iVar2 + 0x98) != 0)) {\n            arg_8h = 0;\n            if (*(iVar3 + 0xc) != 0) {\n                arg_8h = fcn.0042ed2d(*(iVar3 + 0xc));\n                fcn.0042b954(*(iVar3 + 0xc));\n            }\n            iVar2 = fcn.0042ba31(*(iVar2 + 0x98));\n            *(iVar3 + 0xc) = iVar2;\n            if ((iVar2 == 0) && (arg_8h != 0)) {\n                uVar5 = fcn.0042ba31(arg_8h);\n                *(iVar3 + 0xc) = uVar5;\n            }\n        }\n    }\n    return *(iVar1 + 0x10) != 0;\n}\n",
        "token_count": 533
    },
    "0042765a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0042765a(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint arg_8h_00;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t unaff_EBP;\n    uint var_4h;\n    \n    fcn.0042cbc6(0);\n    iVar1 = fcn.0041a03d();\n    if ((*(iVar1 + 0x18) == 0) && (*(unaff_EBP + 8) != 0)) {\n        arg_8h_00 = fcn.004192c5(fcn.00426c15);\n        iVar2 = fcn.004192dc(0x60);\n        *(unaff_EBP + 8) = iVar2;\n        *(unaff_EBP + -4) = 0;\n        if (iVar2 == 0) {\n            uVar3 = 0;\n        }\n        else {\n            uVar3 = fcn.00427316(0x44508c, fcn.00427640, fcn.004241b3, 4, 1);\n        }\n        *(unaff_EBP + -4) = 0xffffffff;\n        *(iVar1 + 0x18) = uVar3;\n        fcn.004192c5(arg_8h_00);\n    }\n    fcn.0042cc9e();\n    return;\n}\n",
        "token_count": 326
    },
    "0042772f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0042772f(int32_t param_1)\n\n{\n    uint uVar1;\n    \n    if (*(param_1 + 4) == 0) {\n        return 0;\n    }\n    uVar1 = fcn.00427703();\n    uVar1 = (*_sym.imp.USER32.dll_DestroyMenu)(uVar1);\n    return uVar1;\n}\n",
        "token_count": 86
    },
    "00427d6d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.00427d6d(int32_t arg_8h, uint32_t *arg_ch, uint32_t *arg_10h)\n\n{\n    uint32_t *puVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t in_ECX;\n    int32_t arg_8h_00;\n    uint32_t uVar4;\n    uint arg_8h_01;\n    uint in_stack_ffffffdc;\n    int32_t var_10h;\n    uint32_t var_ch;\n    uint32_t var_8h;\n    uint32_t var_4h;\n    \n    if ((*(in_ECX + 0x18) & 1) != 0) goto code_r0x00427d8a;\n    in_stack_ffffffdc = *(in_ECX + 0x14);\n    arg_8h_01 = 1;\ncode_r0x00427d85:\n    do {\n        while( true ) {\n            fcn.0041a6a3(arg_8h_01, in_stack_ffffffdc);\ncode_r0x00427d8a:\n            arg_8h_00 = 0xffff;\n            if ((arg_8h != 0) && (*(arg_8h + 8) == 0xffff)) {\n                fcn.00419431();\n            }\n            fcn.00427b7f(0);\n            fcn.0041ab0b(&var_4h);\n            if (var_4h == 0x7fff) {\n                fcn.0041ab53(&var_ch);\n            }\n            else {\n                var_ch = (var_4h & 0x8000) << 0x10 | var_4h & 0x7fff;\n            }\n            if ((var_ch & 0x80000000) != 0) break;\n            if (arg_10h != NULL) {\n                *arg_10h = var_ch;\n                return 0;\n            }\ncode_r0x00427df5:\n            arg_8h_01 = 5;\n        }\n        if (var_4h != -1) {\n            uVar4 = var_ch & 0x7fffffff;\n            if ((uVar4 == 0) || (*(*(in_ECX + 0x38) + 8) - 1U < uVar4)) goto code_r0x00427df5;\n            var_4h = 0;\n            fcn.004260a4(1, &var_4h);\n            if (var_4h == 0) {\ncode_r0x00427e8d:\n                fcn.0041944d();\n                goto code_r0x00427e92;\n            }\n            piVar2 = fcn.004277a5(uVar4);\n            if (*piVar2 == 2) goto code_r0x00427df5;\n            arg_8h_00 = fcn.004277c6(uVar4);\n            var_8h = 0;\n            if ((*(in_ECX + 0x3c) == 0) || (iVar3 = fcn.004260a4(arg_8h_00, &var_4h),  var_8h = var_4h,  iVar3 == 0)) {\n                var_8h = *(arg_8h_00 + 8) & 0x7fffffff;\n            }\ncode_r0x00427f23:\n            if ((arg_8h == 0) || (iVar3 = fcn.0041a4e4(arg_8h),  iVar3 != 0)) {\n                if (arg_ch == NULL) {\n                    *(in_ECX + 0x10) = var_8h;\n                }\n                else {\n                    *arg_ch = var_8h;\n                }\n                if (arg_10h != NULL) {\n                    *arg_10h = var_ch;\n                }\n                return arg_8h_00;\n            }\ncode_r0x00427e1f:\n            arg_8h_01 = 6;\n            goto code_r0x00427d85;\n        }\n        arg_8h_00 = fcn.0041ad21(in_ECX, &var_8h);\n        if (arg_8h_00 == 0) goto code_r0x00427e1f;\n        if ((*(arg_8h_00 + 8) & 0x7fffffff) == var_8h) {\ncode_r0x00427e5e:\n            fcn.004277e7();\n            uVar4 = 1;\n            fcn.0042856e(*(in_ECX + 0x34), arg_8h_00, 1);\n            var_10h = 0;\n            fcn.004260a4(1, &var_10h);\n            if (var_10h == 0) goto code_r0x00427e8d;\ncode_r0x00427e92:\n            var_4h = uVar4;\n            fcn.0042794d(*(in_ECX + 0x34), &var_4h, uVar4);\n            *(in_ECX + 0x34) = *(in_ECX + 0x34) + 1;\n            goto code_r0x00427f23;\n        }\n        if ((*(arg_8h_00 + 8) & 0x80000000) != 0) {\n            fcn.00427aab(0);\n            uVar4 = var_8h;\n            puVar1 = fcn.00426226(arg_8h_00);\n            *puVar1 = uVar4;\n            goto code_r0x00427e5e;\n        }\n        arg_8h_01 = 7;\n    } while( true );\n}\n",
        "token_count": 1300
    },
    "0042803f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "log keystrokes via raw input data/18af53aa16f24c3fa3538f182ae5df5a"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_18h\n\nvoid __cdecl fcn.0042803f(uint arg_8h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    int32_t *arg_ch;\n    int32_t extraout_ECX;\n    int32_t extraout_ECX_00;\n    int32_t unaff_EBP;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint uVar4;\n    uint var_4h;\n    \n    var_4h = 0x42804b;\n    fcn.0042cbf9(0x14);\n    if ((*(extraout_ECX + 0x18) & 1) != 0) goto code_r0x0042805d;\n    var_4h = *(extraout_ECX + 0x14);\n    uVar4 = 4;\ncode_r0x00428058:\n    do {\n        fcn.0041a6a3(uVar4, var_4h);\ncode_r0x0042805d:\n        iVar2 = fcn.00427d6d(*(unaff_EBP + 8), unaff_EBP + -0x1c, unaff_EBP + -0x18);\n        *(unaff_EBP + -0x14) = 0;\n        if (iVar2 == 0) {\n            arg_ch = *(unaff_EBP + -0x18);\n            if (*(*(extraout_ECX + 0x38) + 8) + -1 < arg_ch) {\ncode_r0x00428088:\n                uVar4 = 5;\n                goto code_r0x00428058;\n            }\n            *(unaff_EBP + -0x14) = 0;\n            iVar2 = fcn.004260a4(1, unaff_EBP + -0x14);\n            if (iVar2 != 0) {\n                iVar2 = *(unaff_EBP + -0x14);\n                if (iVar2 == 0) goto code_r0x004280ab;\n                goto code_r0x004280b0;\n            }\n        }\n        else {\n            *(unaff_EBP + -4) = 0;\n            arg_ch = fcn.0041a49a();\n            *(unaff_EBP + -0x14) = arg_ch;\n            if (arg_ch == NULL) {\n                fcn.00419415();\n            }\n            fcn.004277e7();\n            fcn.0042856e(*(extraout_ECX + 0x34), arg_ch, 1);\n            *(unaff_EBP + 8) = 0;\n            fcn.004260a4(1, unaff_EBP + 8);\n            if (*(unaff_EBP + 8) != 0) {\n                uVar4 = *(extraout_ECX + 0x34);\n                *(unaff_EBP + -0x18) = 2;\n                fcn.0042794d(uVar4, unaff_EBP + -0x18, 1);\n                uVar4 = *(unaff_EBP + -0x1c);\n                uVar1 = *(extraout_ECX + 0x10);\n                *(extraout_ECX + 0x34) = *(extraout_ECX + 0x34) + 1;\n                *(extraout_ECX + 0x10) = uVar4;\n                (**(*arg_ch + 8))(extraout_ECX);\n                *(extraout_ECX + 0x10) = uVar1;\ncode_r0x00428177:\n                fcn.0042cc9e();\n                return;\n            }\ncode_r0x004280ab:\n            fcn.0041944d();\n            iVar2 = extraout_ECX_00;\ncode_r0x004280b0:\n            if (arg_ch <= *(iVar2 + 8) + -1) {\n                piVar3 = fcn.004277a5(arg_ch);\n                if (*piVar3 == 1) goto code_r0x00428088;\n            }\n        }\n        iVar2 = fcn.004277c6(arg_ch);\n        if ((iVar2 == 0) || (*(unaff_EBP + 8) == 0)) goto code_r0x00428177;\n        iVar2 = fcn.0041a50f(*(unaff_EBP + 8));\n        if (iVar2 != 0) goto code_r0x00428177;\n        uVar4 = 6;\n    } while( true );\n}\n",
        "token_count": 1064
    },
    "0042838f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042838f(uint32_t arg_8h, uint32_t arg_ch)\n\n{\n    uint32_t *in_ECX;\n    \n    if (arg_8h < 4) {\n        arg_8h = 4;\n    }\n    if (arg_ch < 2) {\n        arg_ch = 0x40;\n    }\n    in_ECX[3] = 0;\n    in_ECX[2] = 0;\n    *in_ECX = arg_8h;\n    in_ECX[1] = arg_ch;\n    return;\n}\n",
        "token_count": 128
    },
    "004283d9": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004283d9(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    \n    if (param_1[3] == 0) {\n        iVar1 = fcn.00425457(param_1 + 2, param_1[1], *param_1);\n        iVar3 = param_1[1] + -1;\n        piVar2 = iVar1 + 4 + *param_1 * iVar3;\n        for (; -1 < iVar3; iVar3 = iVar3 + -1) {\n            *piVar2 = param_1[3];\n            param_1[3] = piVar2;\n            piVar2 = piVar2 - *param_1;\n        }\n    }\n    param_1[3] = *param_1[3];\n    return;\n}\n",
        "token_count": 199
    },
    "004291c3": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.004291c3(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, uint noname_13\n            , uint noname_14, uint arg_8h, uint arg_ch, uint noname_17, uint noname_18, uint arg_18h, uint arg_1ch, \n            uint arg_20h)\n\n{\n    int32_t iVar1;\n    int32_t *in_FS_OFFSET;\n    uint *var_8h_3;\n    uint *var_ch_2;\n    uint var_10h_2;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    uint var_38h;\n    uint *var_34h;\n    uint var_30h;\n    code *var_2ch;\n    uint *var_28h_2;\n    code *pcStack40;\n    uint32_t uStack36;\n    uint uStack32;\n    uint *puStack28;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uchar *var_8h_2;\n    int32_t var_4h_2;\n    \n    var_8h_2 = &stack0xfffffffc;\n    puStack16 = &stack0xffffffc0;\n    if (var_8h_3 == 0x123) {\n        *var_ch_2 = 0x42926e;\n        var_38h = 1;\n    }\n    else {\n        pcStack40 = fcn.0042929a;\n        uStack36 = *0x45060c ^ &fcn.004291c3::var_28h_2;\n        uStack32 = var_24h;\n        puStack28 = var_ch_2;\n        uStack24 = var_20h;\n        uStack20 = var_1ch;\n        var_4h_2 = 0;\n        var_28h_2 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &fcn.004291c3::var_28h_2;\n        var_34h = var_8h_3;\n        var_30h = var_10h_2;\n        iVar1 = fcn.0042fadf();\n        var_2ch = *(iVar1 + 0x80);\n        (*var_2ch)(*var_8h_3, &fcn.004291c3::var_34h);\n        var_38h = 0;\n        if (var_4h_2 == 0) {\n            *in_FS_OFFSET = var_28h_2;\n        }\n        else {\n            *var_28h_2 = **in_FS_OFFSET;\n            *in_FS_OFFSET = var_28h_2;\n        }\n    }\n    return var_38h;\n}\n",
        "token_count": 723
    },
    "004294b3": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004294b3(uint arg_8h)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    int32_t in_ECX;\n    uint in_EDX;\n    uint unaff_EBX;\n    uint unaff_EBP;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    ushort in_ES;\n    ushort in_CS;\n    ushort in_SS;\n    ushort in_DS;\n    ushort in_FS;\n    ushort in_GS;\n    uint8_t in_AF;\n    uint8_t in_TF;\n    uint8_t in_IF;\n    uint8_t in_NT;\n    uint8_t in_AC;\n    uint8_t in_VIF;\n    uint8_t in_VIP;\n    uint8_t in_ID;\n    uint unaff_retaddr;\n    int32_t var_328h;\n    uint var_324h;\n    uint var_320h;\n    \n    if (in_ECX == *0x45060c) {\n        return;\n    }\n    *0x453f60 = (in_NT & 1) * 0x4000 | SBORROW4(&stack0xfffffffc, 0x328) * 0x800 | (in_IF & 1) * 0x200 |\n                (in_TF & 1) * 0x100 | (&var_328h < 0) * 0x80 | (*0x10 == 0x32c) * 0x40 | (in_AF & 1) * 0x10 |\n                ((POPCOUNT(&var_328h & 0xff) & 1U) == 0) * 4 | &stack0xfffffffc < 0x328 | (in_ID & 1) * 0x200000 |\n                (in_VIP & 1) * 0x100000 | (in_VIF & 1) * 0x80000 | (in_AC & 1) * 0x40000;\n    *0x453f64 = &arg_8h;\n    *0x453ea0 = 0x10001;\n    *0x453e48 = 0xc0000409;\n    *0x453e4c = 1;\n    var_328h = *0x45060c;\n    var_324h = *0x450610;\n    *0x453e54 = unaff_retaddr;\n    *0x453f2c = in_GS;\n    *0x453f30 = in_FS;\n    *0x453f34 = in_ES;\n    *0x453f38 = in_DS;\n    *0x453f3c = unaff_EDI;\n    *0x453f40 = unaff_ESI;\n    *0x453f44 = unaff_EBX;\n    *0x453f48 = in_EDX;\n    *0x453f4c = in_ECX;\n    *0x453f50 = in_EAX;\n    *0x453f54 = unaff_EBP;\n    *0x453f58 = unaff_retaddr;\n    *0x453f5c = in_CS;\n    *0x453f68 = in_SS;\n    *0x453e98 = (*_sym.imp.KERNEL32.dll_IsDebuggerPresent)();\n    fcn.00439b80(1);\n    (*_sym.imp.KERNEL32.dll_SetUnhandledExceptionFilter)(0);\n    (*_sym.imp.KERNEL32.dll_UnhandledExceptionFilter)(0x4456dc);\n    if (*0x453e98 == 0) {\n        fcn.00439b80(1);\n    }\n    uVar1 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)(0xc0000409);\n    (*_sym.imp.KERNEL32.dll_TerminateProcess)(uVar1);\n    return;\n}\n",
        "token_count": 830
    },
    "0042a1a2": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042a1a2(uint noname_0, uint noname_1, uint arg_10h)\n\n{\n    int32_t unaff_EBP;\n    \n    if (*(unaff_EBP + 0x10) != 0) {\n        fcn.00434af7(8);\n    }\n    return;\n}\n",
        "token_count": 77
    },
    "0042a460": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042a460(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t unaff_EBP;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x1c) == 0) {\n        fcn.0042a3b7(*(unaff_EBP + 8), *(unaff_EBP + 0xc), *(unaff_EBP + 0x10), *(unaff_EBP + 0x14));\n    }\n    return;\n}\n",
        "token_count": 127
    },
    "0042b702": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042b702(uint arg_8h, uint arg_ch, uint noname_2, uint noname_3, uint arg_18h)\n\n{\n    int32_t unaff_EBP;\n    uint var_20h;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x20) == 0) {\n        fcn.0042a3b7(*(unaff_EBP + 8), *(unaff_EBP + 0xc), *(unaff_EBP + -0x1c), *(unaff_EBP + 0x18));\n    }\n    return;\n}\n",
        "token_count": 140
    },
    "00430f76": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00430f76(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0042fadf();\n    if (0 < *(iVar1 + 0x90)) {\n        iVar1 = fcn.0042fadf();\n        *(iVar1 + 0x90) = *(iVar1 + 0x90) + -1;\n    }\n    return;\n}\n",
        "token_count": 89
    },
    "0043123e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043123e(uint noname_0, uint noname_1, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t unaff_EBP;\n    int32_t *unaff_ESI;\n    int32_t unaff_EDI;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_1ch;\n    \n    *(unaff_EDI + -4) = *(unaff_EBP + -0x24);\n    fcn.00429401(*(unaff_EBP + -0x28));\n    iVar1 = fcn.0042fadf();\n    *(iVar1 + 0x88) = *(unaff_EBP + -0x2c);\n    iVar1 = fcn.0042fadf();\n    *(iVar1 + 0x8c) = *(unaff_EBP + -0x30);\n    if ((((*unaff_ESI == -0x1f928c9d) && (unaff_ESI[4] == 3)) &&\n        ((iVar1 = unaff_ESI[5],  iVar1 == 0x19930520 || ((iVar1 == 0x19930521 || (iVar1 == 0x19930522)))))) &&\n       ((*(unaff_EBP + -0x34) == 0 && (*(unaff_EBP + -0x1c) != 0)))) {\n        iVar1 = fcn.004293da(unaff_ESI[6]);\n        if (iVar1 != 0) {\n            fcn.00430fd6(unaff_ESI);\n        }\n    }\n    return;\n}\n",
        "token_count": 380
    },
    "004350d3": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004350d3(void)\n\n{\n    int32_t unaff_EBP;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x1c) != 0) {\n        fcn.00434af7(0);\n    }\n    return;\n}\n",
        "token_count": 65
    },
    "00439cbf": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00439cbf(code **param_1)\n\n{\n    *param_1 = vtable.std::exception.0;\n    if (param_1[2] != NULL) {\n        fcn.0042b954(param_1[1]);\n    }\n    return;\n}\n",
        "token_count": 65
    },
    "0043a20c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0043a20c(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint unaff_EBX;\n    uint var_28h;\n    uint var_24h;\n    int32_t var_1ch;\n    uint var_18h;\n    uint32_t var_14h;\n    uint var_10h;\n    uint32_t var_4h;\n    \n    var_4h = *0x45060c ^ &stack0xfffffffc;\n    fcn.00428736(arg_10h);\n    var_14h = fcn.0043bcf8(&var_10h, &var_28h, arg_ch, 0, 0, 0, 0, &var_24h);\n    iVar1 = fcn.0043b270(&var_10h, arg_8h);\n    if ((var_14h & 3) == 0) {\n        if (iVar1 == 1) {\ncode_r0x0043a265:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x0043a2a5;\n        }\n        if (iVar1 != 2) {\ncode_r0x0043a297:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x0043a2a5;\n        }\n    }\n    else if ((var_14h & 1) == 0) {\n        if ((var_14h & 2) == 0) goto code_r0x0043a297;\n        goto code_r0x0043a265;\n    }\n    if (var_18h != '\\0') {\n        *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n    }\ncode_r0x0043a2a5:\n    fcn.004294b3(unaff_EBX);\n    return;\n}\n",
        "token_count": 510
    },
    "0043a2b4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0043a2b4(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint unaff_EBX;\n    uint var_28h;\n    uint var_24h;\n    int32_t var_1ch;\n    uint var_18h;\n    uint32_t var_14h;\n    uint var_10h;\n    uint32_t var_4h;\n    \n    var_4h = *0x45060c ^ &stack0xfffffffc;\n    fcn.00428736(arg_10h);\n    var_14h = fcn.0043bcf8(&var_10h, &var_28h, arg_ch, 0, 0, 0, 0, &var_24h);\n    iVar1 = fcn.0043b7b4(&var_10h, arg_8h);\n    if ((var_14h & 3) == 0) {\n        if (iVar1 == 1) {\ncode_r0x0043a30d:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x0043a34d;\n        }\n        if (iVar1 != 2) {\ncode_r0x0043a33f:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x0043a34d;\n        }\n    }\n    else if ((var_14h & 1) == 0) {\n        if ((var_14h & 2) == 0) goto code_r0x0043a33f;\n        goto code_r0x0043a30d;\n    }\n    if (var_18h != '\\0') {\n        *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n    }\ncode_r0x0043a34d:\n    fcn.004294b3(unaff_EBX);\n    return;\n}\n",
        "token_count": 514
    },
    "0043a945": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0043a945(uint arg_8h, uint arg_ch, uint32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t arg_8h_00;\n    uint uVar3;\n    code *pcVar4;\n    code *pcVar5;\n    uint var_14h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    iVar1 = fcn.0042f88a();\n    var_4h = 0;\n    if (*0x454778 == 0) {\n        iVar2 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(\"USER32.DLL\");\n        pcVar4 = _sym.imp.KERNEL32.dll_GetProcAddress;\n        if (iVar2 == 0) {\n            return 0;\n        }\n        arg_8h_00 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, 0x447118);\n        if (arg_8h_00 == 0) {\n            return 0;\n        }\n        *0x454778 = fcn.0042f818(arg_8h_00);\n        uVar3 = (*pcVar4)(iVar2, 0x447108);\n        *0x45477c = fcn.0042f818(uVar3);\n        uVar3 = (*pcVar4)(iVar2, 0x4470f4);\n        *0x454780 = fcn.0042f818(uVar3);\n        uVar3 = (*pcVar4)(iVar2, \"GetUserObjectInformationA\");\n        *0x454788 = fcn.0042f818(uVar3);\n        if (*0x454788 != 0) {\n            uVar3 = (*pcVar4)(iVar2, \"GetProcessWindowStation\");\n            *0x454784 = fcn.0042f818(uVar3);\n        }\n    }\n    if ((*0x454784 != iVar1) && (*0x454788 != iVar1)) {\n        pcVar4 = fcn.0042f893(*0x454784);\n        pcVar5 = fcn.0042f893(*0x454788);\n        if (((pcVar4 != NULL) && (pcVar5 != NULL)) &&\n           (((iVar2 = (*pcVar4)(),  iVar2 == 0 || (iVar2 = (*pcVar5)(iVar2, 1, &var_14h, 0xc, &var_8h),  iVar2 == 0)) ||\n            ((var_ch & 1) == 0)))) {\n            arg_10h = arg_10h | 0x200000;\n            goto code_r0x0043aa87;\n        }\n    }\n    if ((((*0x45477c != iVar1) && (pcVar4 = fcn.0042f893(*0x45477c),  pcVar4 != NULL)) &&\n        (var_4h = (*pcVar4)(),  var_4h != 0)) &&\n       ((*0x454780 != iVar1 && (pcVar4 = fcn.0042f893(*0x454780),  pcVar4 != NULL)))) {\n        var_4h = (*pcVar4)(var_4h);\n    }\ncode_r0x0043aa87:\n    pcVar4 = fcn.0042f893(*0x454778);\n    if (pcVar4 == NULL) {\n        return 0;\n    }\n    uVar3 = (*pcVar4)(var_4h, arg_8h, arg_ch, arg_10h);\n    return uVar3;\n}\n",
        "token_count": 814
    },
    "0043b270": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0043b270(uint16_t *arg_8h, uint32_t *arg_ch)\n\n{\n    uint32_t *puVar1;\n    uint16_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint8_t uVar6;\n    uint32_t *puVar7;\n    uint *puVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    uint32_t uVar11;\n    int32_t iVar12;\n    int32_t iVar13;\n    bool bVar14;\n    uint var_2ch;\n    uint32_t var_20h;\n    uint32_t var_1ch;\n    int32_t var_18h;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_14h = arg_8h[5] & 0x8000;\n    uVar10 = *(arg_8h + 3);\n    var_20h = uVar10;\n    uVar3 = *(arg_8h + 1);\n    uVar2 = *arg_8h;\n    uVar11 = arg_8h[5] & 0x7fff;\n    iVar12 = uVar11 - 0x3fff;\n    var_1ch = uVar3;\n    var_18h = uVar2 << 0x10;\n    if (iVar12 == -0x3fff) {\n        iVar12 = 0;\n        iVar4 = 0;\n        do {\n            if ((&var_20h)[iVar4] != 0) {\n                var_20h = 0;\n                var_1ch = 0;\n                uVar5 = 2;\n                goto code_r0x0043b771;\n            }\n            iVar4 = iVar4 + 1;\n        } while (iVar4 < 3);\n        uVar5 = 0;\n    }\n    else {\n        arg_8h = NULL;\n        iVar13 = str.5_v_[0] + L'\\xffffffff';\n        iVar4 = str.5_v_[0] + (str.5_v_[0] >> 0x1f & 0x1fU) >> 5;\n        uVar9 = str.5_v_[0] & 0x8000001f;\n        var_10h = iVar12;\n        var_ch = iVar4;\n        if (uVar9 < 0) {\n            uVar9 = (uVar9 - 1 | 0xffffffe0) + 1;\n        }\n        puVar1 = &var_20h + iVar4;\n        uVar6 = 0x1f - uVar9;\n        var_8h = 0x1f - uVar9;\n        if ((*puVar1 & 1 << (uVar6 & 0x1f)) != 0) {\n            uVar9 = (&var_20h)[iVar4] & ~(-1 << (uVar6 & 0x1f));\n            while( true ) {\n                if (uVar9 != 0) {\n                    iVar4 = iVar13 + (iVar13 >> 0x1f & 0x1fU) >> 5;\n                    var_4h = 0;\n                    uVar9 = 1 << (0x1f - (iVar13 & 0x1f) & 0x1f);\n                    puVar7 = &var_20h + iVar4;\n                    arg_8h = *puVar7 + uVar9;\n                    if (arg_8h < *puVar7) goto code_r0x0043b3a5;\n                    bVar14 = arg_8h < uVar9;\n                    do {\n                        var_4h = 0;\n                        if (!bVar14) goto code_r0x0043b3ac;\ncode_r0x0043b3a5:\n                        do {\n                            var_4h = 1;\ncode_r0x0043b3ac:\n                            iVar4 = iVar4 + -1;\n                            *puVar7 = arg_8h;\n                            if ((iVar4 < 0) || (var_4h == 0)) {\n                                arg_8h = var_4h;\n                                goto code_r0x0043b3ba;\n                            }\n                            var_4h = 0;\n                            puVar7 = &var_20h + iVar4;\n                            arg_8h = *puVar7 + 1;\n                        } while (arg_8h < *puVar7);\n                        bVar14 = arg_8h == NULL;\n                    } while( true );\n                }\n                iVar4 = iVar4 + 1;\n                if (2 < iVar4) break;\n                uVar9 = (&var_20h)[iVar4];\n            }\n        }\ncode_r0x0043b3ba:\n        *puVar1 = *puVar1 & -1 << (var_8h & 0x1f);\n        iVar4 = var_ch + 1;\n        if (iVar4 < 3) {\n            puVar8 = &var_20h + iVar4;\n            for (iVar13 = 3 - iVar4; iVar13 != 0; iVar13 = iVar13 + -1) {\n                *puVar8 = 0;\n                puVar8 = puVar8 + 1;\n            }\n        }\n        if (arg_8h != NULL) {\n            iVar12 = uVar11 - 0x3ffe;\n        }\n        if (iVar12 < *0x451718 - str.5_v_[0]) {\n            var_20h = 0;\n            var_1ch = 0;\n        }\n        else {\n            if (*0x451718 < iVar12) {\n                if (iVar12 < *0x451714) {\n                    var_20h = var_20h & 0x7fffffff;\n                    iVar12 = iVar12 + str.5_v_[3];\n                    iVar4 = str.5_v_[1] + (str.5_v_[1] >> 0x1f & 0x1fU) >> 5;\n                    uVar10 = str.5_v_[1] & 0x8000001f;\n                    if (uVar10 < 0) {\n                        uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n                    }\n                    var_ch = 0;\n                    arg_8h = NULL;\n                    var_4h = 0x20 - uVar10;\n                    do {\n                        var_10h = (&var_20h)[arg_8h] & ~(-1 << (uVar10 & 0x1f));\n                        (&var_20h)[arg_8h] = (&var_20h)[arg_8h] >> (uVar10 & 0x1f) | var_ch;\n                        arg_8h = arg_8h + 1;\n                        var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n                    } while (arg_8h < 3);\n                    iVar13 = 2;\n                    puVar8 = &var_18h + -iVar4;\n                    do {\n                        if (iVar13 < iVar4) {\n                            (&var_20h)[iVar13] = 0;\n                        }\n                        else {\n                            (&var_20h)[iVar13] = *puVar8;\n                        }\n                        iVar13 = iVar13 + -1;\n                        puVar8 = puVar8 + -1;\n                    } while (-1 < iVar13);\n                    uVar5 = 0;\n                }\n                else {\n                    var_1ch = 0;\n                    var_18h = 0;\n                    var_20h = 0x80000000;\n                    iVar12 = str.5_v_[1] + (str.5_v_[1] >> 0x1f & 0x1fU) >> 5;\n                    uVar10 = str.5_v_[1] & 0x8000001f;\n                    if (uVar10 < 0) {\n                        uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n                    }\n                    var_ch = 0;\n                    arg_8h = NULL;\n                    var_4h = 0x20 - uVar10;\n                    do {\n                        uVar3 = (&var_20h)[arg_8h];\n                        var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                        (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                        arg_8h = arg_8h + 1;\n                        var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n                    } while (arg_8h < 3);\n                    iVar4 = 2;\n                    puVar8 = &var_18h + -iVar12;\n                    do {\n                        if (iVar4 < iVar12) {\n                            (&var_20h)[iVar4] = 0;\n                        }\n                        else {\n                            (&var_20h)[iVar4] = *puVar8;\n                        }\n                        iVar4 = iVar4 + -1;\n                        puVar8 = puVar8 + -1;\n                    } while (-1 < iVar4);\n                    iVar12 = str.5_v_[3] + *0x451714;\n                    uVar5 = 1;\n                }\n                goto code_r0x0043b771;\n            }\n            var_10h = *0x451718 - var_10h;\n            var_20h = uVar10;\n            var_1ch = uVar3;\n            iVar12 = var_10h + (var_10h >> 0x1f & 0x1fU) >> 5;\n            uVar10 = var_10h & 0x8000001f;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            var_ch = 0;\n            arg_8h = NULL;\n            var_4h = 0x20 - uVar10;\n            do {\n                uVar3 = (&var_20h)[arg_8h];\n                var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                arg_8h = arg_8h + 1;\n                var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n            } while (arg_8h < 3);\n            iVar4 = 2;\n            puVar8 = &var_18h + -iVar12;\n            do {\n                if (iVar4 < iVar12) {\n                    (&var_20h)[iVar4] = 0;\n                }\n                else {\n                    (&var_20h)[iVar4] = *puVar8;\n                }\n                iVar4 = iVar4 + -1;\n                puVar8 = puVar8 + -1;\n            } while (-1 < iVar4);\n            iVar4 = str.5_v_[0] + L'\\xffffffff';\n            iVar12 = str.5_v_[0] + (str.5_v_[0] >> 0x1f & 0x1fU) >> 5;\n            uVar10 = str.5_v_[0] & 0x8000001f;\n            var_ch = iVar12;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            uVar6 = 0x1f - uVar10;\n            puVar1 = &var_20h + iVar12;\n            var_10h = 0x1f - uVar10;\n            if ((*puVar1 & 1 << (uVar6 & 0x1f)) != 0) {\n                uVar10 = (&var_20h)[iVar12] & ~(-1 << (uVar6 & 0x1f));\n                while (uVar10 == 0) {\n                    iVar12 = iVar12 + 1;\n                    if (2 < iVar12) goto code_r0x0043b55d;\n                    uVar10 = (&var_20h)[iVar12];\n                }\n                iVar12 = iVar4 + (iVar4 >> 0x1f & 0x1fU) >> 5;\n                bVar14 = false;\n                uVar11 = 1 << (0x1f - (iVar4 & 0x1f) & 0x1f);\n                uVar3 = (&var_20h)[iVar12];\n                uVar10 = uVar3 + uVar11;\n                if ((uVar10 < uVar3) || (uVar10 < uVar11)) {\n                    bVar14 = true;\n                }\n                (&var_20h)[iVar12] = uVar10;\n                while ((iVar12 = iVar12 + -1,  -1 < iVar12 && (bVar14))) {\n                    uVar3 = (&var_20h)[iVar12];\n                    uVar10 = uVar3 + 1;\n                    bVar14 = false;\n                    if ((uVar10 < uVar3) || (uVar10 == 0)) {\n                        bVar14 = true;\n                    }\n                    (&var_20h)[iVar12] = uVar10;\n                }\n            }\ncode_r0x0043b55d:\n            *puVar1 = *puVar1 & -1 << (var_10h & 0x1f);\n            iVar12 = var_ch + 1;\n            if (iVar12 < 3) {\n                puVar8 = &var_20h + iVar12;\n                for (iVar4 = 3 - iVar12; iVar4 != 0; iVar4 = iVar4 + -1) {\n                    *puVar8 = 0;\n                    puVar8 = puVar8 + 1;\n                }\n            }\n            uVar10 = str.5_v_[1] + L'\\x01';\n            iVar12 = uVar10 + (uVar10 >> 0x1f & 0x1fU) >> 5;\n            uVar10 = uVar10 & 0x8000001f;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            var_ch = 0;\n            arg_8h = NULL;\n            var_4h = 0x20 - uVar10;\n            do {\n                uVar3 = (&var_20h)[arg_8h];\n                var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                arg_8h = arg_8h + 1;\n                var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n            } while (arg_8h < 3);\n            iVar4 = 2;\n            puVar8 = &var_18h + -iVar12;\n            do {\n                if (iVar4 < iVar12) {\n                    (&var_20h)[iVar4] = 0;\n                }\n                else {\n                    (&var_20h)[iVar4] = *puVar8;\n                }\n                iVar4 = iVar4 + -1;\n                puVar8 = puVar8 + -1;\n            } while (-1 < iVar4);\n        }\n        iVar12 = 0;\n        uVar5 = 2;\n    }\ncode_r0x0043b771:\n    var_20h = iVar12 << (0x1fU - str.5_v_[1] & 0x1f) | -(var_14h != 0) & 0x80000000 | var_20h;\n    if (str.5_v_[2] == L'@') {\n        arg_ch[1] = var_20h;\n        *arg_ch = var_1ch;\n    }\n    else if (str.5_v_[2] == L' ') {\n        *arg_ch = var_20h;\n    }\n    return uVar5;\n}\n",
        "token_count": 3669
    },
    "0043b7b4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0043b7b4(uint16_t *arg_8h, uint32_t *arg_ch)\n\n{\n    uint32_t *puVar1;\n    uint16_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint8_t uVar6;\n    uint32_t *puVar7;\n    uint *puVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    uint32_t uVar11;\n    int32_t iVar12;\n    int32_t iVar13;\n    bool bVar14;\n    uint var_2ch;\n    uint32_t var_20h;\n    uint32_t var_1ch;\n    int32_t var_18h;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_14h = arg_8h[5] & 0x8000;\n    uVar10 = *(arg_8h + 3);\n    var_20h = uVar10;\n    uVar3 = *(arg_8h + 1);\n    uVar2 = *arg_8h;\n    uVar11 = arg_8h[5] & 0x7fff;\n    iVar12 = uVar11 - 0x3fff;\n    var_1ch = uVar3;\n    var_18h = uVar2 << 0x10;\n    if (iVar12 == -0x3fff) {\n        iVar12 = 0;\n        iVar4 = 0;\n        do {\n            if ((&var_20h)[iVar4] != 0) {\n                var_20h = 0;\n                var_1ch = 0;\n                uVar5 = 2;\n                goto code_r0x0043bcb5;\n            }\n            iVar4 = iVar4 + 1;\n        } while (iVar4 < 3);\n        uVar5 = 0;\n    }\n    else {\n        arg_8h = NULL;\n        iVar13 = *0x451734 - 1;\n        iVar4 = *0x451734 + (*0x451734 >> 0x1f & 0x1fU) >> 5;\n        uVar9 = *0x451734 & 0x8000001f;\n        var_10h = iVar12;\n        var_ch = iVar4;\n        if (uVar9 < 0) {\n            uVar9 = (uVar9 - 1 | 0xffffffe0) + 1;\n        }\n        puVar1 = &var_20h + iVar4;\n        uVar6 = 0x1f - uVar9;\n        var_8h = 0x1f - uVar9;\n        if ((*puVar1 & 1 << (uVar6 & 0x1f)) != 0) {\n            uVar9 = (&var_20h)[iVar4] & ~(-1 << (uVar6 & 0x1f));\n            while( true ) {\n                if (uVar9 != 0) {\n                    iVar4 = iVar13 + (iVar13 >> 0x1f & 0x1fU) >> 5;\n                    var_4h = 0;\n                    uVar9 = 1 << (0x1f - (iVar13 & 0x1f) & 0x1f);\n                    puVar7 = &var_20h + iVar4;\n                    arg_8h = *puVar7 + uVar9;\n                    if (arg_8h < *puVar7) goto code_r0x0043b8e9;\n                    bVar14 = arg_8h < uVar9;\n                    do {\n                        var_4h = 0;\n                        if (!bVar14) goto code_r0x0043b8f0;\ncode_r0x0043b8e9:\n                        do {\n                            var_4h = 1;\ncode_r0x0043b8f0:\n                            iVar4 = iVar4 + -1;\n                            *puVar7 = arg_8h;\n                            if ((iVar4 < 0) || (var_4h == 0)) {\n                                arg_8h = var_4h;\n                                goto code_r0x0043b8fe;\n                            }\n                            var_4h = 0;\n                            puVar7 = &var_20h + iVar4;\n                            arg_8h = *puVar7 + 1;\n                        } while (arg_8h < *puVar7);\n                        bVar14 = arg_8h == NULL;\n                    } while( true );\n                }\n                iVar4 = iVar4 + 1;\n                if (2 < iVar4) break;\n                uVar9 = (&var_20h)[iVar4];\n            }\n        }\ncode_r0x0043b8fe:\n        *puVar1 = *puVar1 & -1 << (var_8h & 0x1f);\n        iVar4 = var_ch + 1;\n        if (iVar4 < 3) {\n            puVar8 = &var_20h + iVar4;\n            for (iVar13 = 3 - iVar4; iVar13 != 0; iVar13 = iVar13 + -1) {\n                *puVar8 = 0;\n                puVar8 = puVar8 + 1;\n            }\n        }\n        if (arg_8h != NULL) {\n            iVar12 = uVar11 - 0x3ffe;\n        }\n        if (iVar12 < *0x451730 - *0x451734) {\n            var_20h = 0;\n            var_1ch = 0;\n        }\n        else {\n            if (*0x451730 < iVar12) {\n                if (iVar12 < *0x45172c) {\n                    var_20h = var_20h & 0x7fffffff;\n                    iVar12 = iVar12 + *0x451740;\n                    iVar4 = *0x451738 + (*0x451738 >> 0x1f & 0x1fU) >> 5;\n                    uVar10 = *0x451738 & 0x8000001f;\n                    if (uVar10 < 0) {\n                        uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n                    }\n                    var_ch = 0;\n                    arg_8h = NULL;\n                    var_4h = 0x20 - uVar10;\n                    do {\n                        var_10h = (&var_20h)[arg_8h] & ~(-1 << (uVar10 & 0x1f));\n                        (&var_20h)[arg_8h] = (&var_20h)[arg_8h] >> (uVar10 & 0x1f) | var_ch;\n                        arg_8h = arg_8h + 1;\n                        var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n                    } while (arg_8h < 3);\n                    iVar13 = 2;\n                    puVar8 = &var_18h + -iVar4;\n                    do {\n                        if (iVar13 < iVar4) {\n                            (&var_20h)[iVar13] = 0;\n                        }\n                        else {\n                            (&var_20h)[iVar13] = *puVar8;\n                        }\n                        iVar13 = iVar13 + -1;\n                        puVar8 = puVar8 + -1;\n                    } while (-1 < iVar13);\n                    uVar5 = 0;\n                }\n                else {\n                    var_1ch = 0;\n                    var_18h = 0;\n                    var_20h = 0x80000000;\n                    iVar12 = *0x451738 + (*0x451738 >> 0x1f & 0x1fU) >> 5;\n                    uVar10 = *0x451738 & 0x8000001f;\n                    if (uVar10 < 0) {\n                        uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n                    }\n                    var_ch = 0;\n                    arg_8h = NULL;\n                    var_4h = 0x20 - uVar10;\n                    do {\n                        uVar3 = (&var_20h)[arg_8h];\n                        var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                        (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                        arg_8h = arg_8h + 1;\n                        var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n                    } while (arg_8h < 3);\n                    iVar4 = 2;\n                    puVar8 = &var_18h + -iVar12;\n                    do {\n                        if (iVar4 < iVar12) {\n                            (&var_20h)[iVar4] = 0;\n                        }\n                        else {\n                            (&var_20h)[iVar4] = *puVar8;\n                        }\n                        iVar4 = iVar4 + -1;\n                        puVar8 = puVar8 + -1;\n                    } while (-1 < iVar4);\n                    iVar12 = *0x451740 + *0x45172c;\n                    uVar5 = 1;\n                }\n                goto code_r0x0043bcb5;\n            }\n            var_10h = *0x451730 - var_10h;\n            var_20h = uVar10;\n            var_1ch = uVar3;\n            iVar12 = var_10h + (var_10h >> 0x1f & 0x1fU) >> 5;\n            uVar10 = var_10h & 0x8000001f;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            var_ch = 0;\n            arg_8h = NULL;\n            var_4h = 0x20 - uVar10;\n            do {\n                uVar3 = (&var_20h)[arg_8h];\n                var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                arg_8h = arg_8h + 1;\n                var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n            } while (arg_8h < 3);\n            iVar4 = 2;\n            puVar8 = &var_18h + -iVar12;\n            do {\n                if (iVar4 < iVar12) {\n                    (&var_20h)[iVar4] = 0;\n                }\n                else {\n                    (&var_20h)[iVar4] = *puVar8;\n                }\n                iVar4 = iVar4 + -1;\n                puVar8 = puVar8 + -1;\n            } while (-1 < iVar4);\n            iVar4 = *0x451734 - 1;\n            iVar12 = *0x451734 + (*0x451734 >> 0x1f & 0x1fU) >> 5;\n            uVar10 = *0x451734 & 0x8000001f;\n            var_ch = iVar12;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            uVar6 = 0x1f - uVar10;\n            puVar1 = &var_20h + iVar12;\n            var_10h = 0x1f - uVar10;\n            if ((*puVar1 & 1 << (uVar6 & 0x1f)) != 0) {\n                uVar10 = (&var_20h)[iVar12] & ~(-1 << (uVar6 & 0x1f));\n                while (uVar10 == 0) {\n                    iVar12 = iVar12 + 1;\n                    if (2 < iVar12) goto code_r0x0043baa1;\n                    uVar10 = (&var_20h)[iVar12];\n                }\n                iVar12 = iVar4 + (iVar4 >> 0x1f & 0x1fU) >> 5;\n                bVar14 = false;\n                uVar11 = 1 << (0x1f - (iVar4 & 0x1f) & 0x1f);\n                uVar3 = (&var_20h)[iVar12];\n                uVar10 = uVar3 + uVar11;\n                if ((uVar10 < uVar3) || (uVar10 < uVar11)) {\n                    bVar14 = true;\n                }\n                (&var_20h)[iVar12] = uVar10;\n                while ((iVar12 = iVar12 + -1,  -1 < iVar12 && (bVar14))) {\n                    uVar3 = (&var_20h)[iVar12];\n                    uVar10 = uVar3 + 1;\n                    bVar14 = false;\n                    if ((uVar10 < uVar3) || (uVar10 == 0)) {\n                        bVar14 = true;\n                    }\n                    (&var_20h)[iVar12] = uVar10;\n                }\n            }\ncode_r0x0043baa1:\n            *puVar1 = *puVar1 & -1 << (var_10h & 0x1f);\n            iVar12 = var_ch + 1;\n            if (iVar12 < 3) {\n                puVar8 = &var_20h + iVar12;\n                for (iVar4 = 3 - iVar12; iVar4 != 0; iVar4 = iVar4 + -1) {\n                    *puVar8 = 0;\n                    puVar8 = puVar8 + 1;\n                }\n            }\n            uVar10 = *0x451738 + 1;\n            iVar12 = uVar10 + (uVar10 >> 0x1f & 0x1fU) >> 5;\n            uVar10 = uVar10 & 0x8000001f;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            var_ch = 0;\n            arg_8h = NULL;\n            var_4h = 0x20 - uVar10;\n            do {\n                uVar3 = (&var_20h)[arg_8h];\n                var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                arg_8h = arg_8h + 1;\n                var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n            } while (arg_8h < 3);\n            iVar4 = 2;\n            puVar8 = &var_18h + -iVar12;\n            do {\n                if (iVar4 < iVar12) {\n                    (&var_20h)[iVar4] = 0;\n                }\n                else {\n                    (&var_20h)[iVar4] = *puVar8;\n                }\n                iVar4 = iVar4 + -1;\n                puVar8 = puVar8 + -1;\n            } while (-1 < iVar4);\n        }\n        iVar12 = 0;\n        uVar5 = 2;\n    }\ncode_r0x0043bcb5:\n    var_20h = iVar12 << (0x1fU - *0x451738 & 0x1f) | -(var_14h != 0) & 0x80000000 | var_20h;\n    if (*0x45173c == 0x40) {\n        arg_ch[1] = var_20h;\n        *arg_ch = var_1ch;\n    }\n    else if (*0x45173c == 0x20) {\n        *arg_ch = var_20h;\n    }\n    return uVar5;\n}\n",
        "token_count": 3633
    },
    "0043c3f0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_74h\n// WARNING: Removing unreachable block (ram,0x0043c92e)\n// WARNING: Removing unreachable block (ram,0x0043c938)\n// WARNING: Removing unreachable block (ram,0x0043c93d)\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl\nfcn.0043c3f0(uint32_t arg_8h, uint32_t noname_1, uint32_t noname_2, int32_t arg_14h, uint32_t arg_18h, int16_t *arg_1ch)\n\n{\n    int16_t *piVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    bool bVar5;\n    uint16_t uVar6;\n    int32_t iVar7;\n    uint16_t *puVar8;\n    uint16_t uVar9;\n    int32_t *piVar10;\n    uint32_t uVar11;\n    uint16_t uVar12;\n    uint16_t uVar13;\n    uint16_t uVar14;\n    char cVar15;\n    uint32_t uVar16;\n    uint32_t uVar17;\n    int16_t *piVar18;\n    int16_t *piVar19;\n    uint32_t uVar20;\n    uint *puVar21;\n    char *pcVar22;\n    uint var_74h;\n    uint16_t *var_70h;\n    int32_t *var_6ch;\n    int32_t var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint16_t *var_58h;\n    int32_t var_54h;\n    int32_t var_50h;\n    uint var_4ch;\n    int32_t var_48h;\n    int32_t var_44h;\n    int32_t var_40h;\n    uint var_3ch;\n    uint var_38h;\n    int32_t var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uchar var_28h;\n    uchar var_27h;\n    uchar var_26h;\n    uchar var_25h;\n    uint var_20h;\n    uint16_t var_1ch;\n    uint32_t var_1ah;\n    uint var_16h;\n    uint var_10h;\n    uint32_t var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x45060c ^ &stack0xfffffffc;\n    var_10h._0_1_ = arg_8h;\n    var_10h._1_1_ = arg_8h >> 8;\n    var_10h._2_2_ = arg_8h >> 0x10;\n    var_ch._0_2_ = noname_1;\n    var_ch._2_2_ = noname_1 >> 0x10;\n    var_8h._0_2_ = noname_2;\n    uVar6 = var_8h & 0x8000;\n    uVar12 = var_8h & 0x7fff;\n    var_30h = 0xcccccccc;\n    var_2ch = 0xcccccccc;\n    var_28h = 0xcc;\n    var_27h = 0xcc;\n    var_26h = 0xfb;\n    var_25h = 0x3f;\n    if ((noname_2 & 0x8000) == 0) {\n        *(arg_1ch + 1) = 0x20;\n    }\n    else {\n        *(arg_1ch + 1) = 0x2d;\n    }\n    if ((((noname_2 & 0x7fff) == 0) && (noname_1 == 0)) && (arg_8h == 0)) {\n        *arg_1ch = 0;\n        *(arg_1ch + 1) = ((uVar6 != 0x8000) - 1U & 0xd) + 0x20;\n        *(arg_1ch + 3) = 1;\n        *(arg_1ch + 2) = 0x30;\n        *(arg_1ch + 5) = 0;\n        goto code_r0x0043cccb;\n    }\n    if (uVar12 == 0x7fff) {\n        *arg_1ch = 1;\n        var_ch = noname_1;\n        if (((noname_1 == 0x80000000) && (arg_8h == 0)) || ((noname_1 & 0x40000000) != 0)) {\n            if (((noname_2 & 0x8000) == 0) || (noname_1 != 0xc0000000)) {\n                if ((noname_1 != 0x80000000) || (arg_8h != 0)) goto code_r0x0043c527;\n                pcVar22 = \"1#INF\";\n            }\n            else {\n                if (arg_8h != 0) {\ncode_r0x0043c527:\n                    pcVar22 = \"1#QNAN\";\n                    goto code_r0x0043c52c;\n                }\n                pcVar22 = \"1#IND\";\n            }\n            iVar7 = fcn.0042cfbc(arg_1ch + 2, 0x16, pcVar22);\n            if (iVar7 != 0) {\n                fcn.0042fe57(0, 0, 0, 0, 0);\n            }\n            *(arg_1ch + 3) = 5;\n            noname_1 = var_ch;\n        }\n        else {\n            pcVar22 = \"1#SNAN\";\ncode_r0x0043c52c:\n            iVar7 = fcn.0042cfbc(arg_1ch + 2, 0x16, pcVar22);\n            noname_1 = var_ch;\n            if (iVar7 != 0) {\n                fcn.0042fe57(0, 0, 0, 0, 0);\n                noname_1 = var_ch;\n            }\n            *(arg_1ch + 3) = 6;\n        }\n        goto code_r0x0043cccb;\n    }\n    var_4ch._0_2_ =\n         (((noname_2 & 0x7fff) >> 8) + (noname_1 >> 0x18) * 2) * 0x4d + -0x134312f4 + (noname_2 & 0x7fff) * 0x4d10 >>\n         0x10;\n    uVar16 = var_4ch;\n    var_20h._0_2_ = 0;\n    var_16h._0_1_ = uVar12;\n    var_16h._1_1_ = uVar12 >> 8;\n    var_1ah._0_2_ = var_ch;\n    var_1ah._2_2_ = var_ch._2_2_;\n    var_20h._2_2_ = arg_8h;\n    var_68h = 0x4516f0;\n    var_1ch = var_10h._2_2_;\n    var_1ah = noname_1;\n    if (-uVar16 != 0) {\n        uVar17 = -uVar16;\n        uVar11 = arg_8h;\n        if (0 < uVar16) {\n            var_68h = 0x451850;\n            uVar17 = uVar16;\n        }\njoined_r0x0043c5ba:\n        var_1ch = uVar11 >> 0x10;\n        arg_8h = uVar11 & 0xffff | var_10h._2_2_ << 0x10;\n        if (uVar17 != 0) {\n            var_68h = var_68h + 0x54;\n            uVar16 = uVar17 & 7;\n            uVar17 = uVar17 >> 3;\n            if (uVar16 != 0) {\n                piVar10 = uVar16 * 0xc + var_68h;\n                if (0x7fff < *piVar10) {\n                    var_3ch._0_2_ = *piVar10;\n                    var_3ch._2_2_ = *piVar10 >> 0x10;\n                    piVar2 = piVar10 + 2;\n                    var_38h._0_2_ = piVar10[1];\n                    var_38h._2_2_ = piVar10[1] >> 0x10;\n                    piVar10 = &var_3ch;\n                    var_34h = *piVar2;\n                    iVar7 = CONCAT22(var_38h, var_3ch._2_2_) + -1;\n                    var_3ch._2_2_ = iVar7;\n                    var_38h._0_2_ = iVar7 >> 0x10;\n                }\n                var_48h = 0;\n                var_10h._0_1_ = 0;\n                var_10h._1_1_ = 0;\n                var_10h._2_2_ = 0;\n                var_ch._0_2_ = 0;\n                var_ch._2_2_ = 0;\n                var_8h._0_2_ = 0;\n                var_8h._2_2_ = 0;\n                uVar13 = (*(piVar10 + 10) ^ CONCAT11(var_16h._1_1_, var_16h)) & 0x8000;\n                uVar14 = CONCAT11(var_16h._1_1_, var_16h) & 0x7fff;\n                uVar9 = *(piVar10 + 10) & 0x7fff;\n                uVar12 = uVar9 + uVar14;\n                if (((uVar14 < 0x7fff) && (uVar9 < 0x7fff)) && (uVar12 < 0xbffe)) {\n                    if (0x3fbf < uVar12) {\n                        if (((uVar14 == 0) &&\n                            (uVar12 = uVar12 + 1, \n                            (CONCAT13(var_16h._1_1_, CONCAT12(var_16h, var_1ah >> 0x10)) & 0x7fffffff) == 0)) &&\n                           ((CONCAT22(var_1ah, var_1ch) == 0 && (CONCAT22(uVar11, var_20h) == 0)))) {\n                            var_16h._0_1_ = 0;\n                            var_16h._1_1_ = 0;\n                            noname_1 = 0;\n                            goto joined_r0x0043c5ba;\n                        }\n                        if ((((uVar9 != 0) || (uVar12 = uVar12 + 1,  (piVar10[2] & 0x7fffffffU) != 0)) ||\n                            (piVar10[1] != 0)) || (*piVar10 != 0)) {\n                            var_54h = 0;\n                            puVar21 = &var_ch;\n                            var_40h = 5;\n                            do {\n                                var_50h = var_40h;\n                                if (0 < var_40h) {\n                                    var_70h = &var_20h + var_54h * 2;\n                                    var_6ch = piVar10 + 2;\n                                    do {\n                                        bVar5 = false;\n                                        uVar16 = puVar21[-1] + *var_70h * *var_6ch;\n                                        if ((uVar16 < puVar21[-1]) || (uVar16 < *var_70h * *var_6ch)) {\n                                            bVar5 = true;\n                                        }\n                                        puVar21[-1] = uVar16;\n                                        if (bVar5) {\n                                            *puVar21 = *puVar21 + 1;\n                                        }\n                                        var_70h = var_70h + 1;\n                                        var_6ch = var_6ch + -2;\n                                        var_50h = var_50h + -1;\n                                    } while (0 < var_50h);\n                                }\n                                puVar21 = puVar21 + 2;\n                                var_54h = var_54h + 1;\n                                var_40h = var_40h + -1;\n                            } while (0 < var_40h);\n                            uVar12 = uVar12 + 0xc002;\n                            if (uVar12 < 1) {\ncode_r0x0043c76e:\n                                uVar12 = uVar12 - 1;\n                                if (uVar12 < 0) {\n                                    uVar16 = -uVar12;\n                                    uVar12 = 0;\n                                    do {\n                                        if ((var_10h & 1) != 0) {\n                                            var_48h = var_48h + 1;\n                                        }\n                                        iVar3 = CONCAT22(var_8h._2_2_, var_8h);\n                                        uVar11 = CONCAT22(var_ch._2_2_, var_ch);\n                                        iVar7 = CONCAT22(var_ch._2_2_, var_ch);\n                                        var_8h._0_2_ = CONCAT22(var_8h._2_2_, var_8h) >> 1;\n                                        var_8h._2_2_ = var_8h._2_2_ >> 1;\n                                        var_ch._2_2_ = var_ch._2_2_ >> 1 | (iVar3 << 0x1f) >> 0x10;\n                                        uVar20 = CONCAT22(var_10h._2_2_, CONCAT11(var_10h._1_1_, var_10h)) >> 1;\n                                        var_10h._2_2_ = var_10h._2_2_ >> 1 | (iVar7 << 0x1f) >> 0x10;\n                                        uVar16 = uVar16 - 1;\n                                        var_ch._0_2_ = uVar11 >> 1;\n                                        var_10h._0_1_ = uVar20;\n                                        var_10h._1_1_ = uVar20 >> 8;\n                                    } while (uVar16 != 0);\n                                    if (var_48h != 0) {\n                                        var_10h._0_1_ = var_10h | 1;\n                                    }\n                                }\n                            }\n                            else {\n                                do {\n                                    uVar14 = var_ch._2_2_;\n                                    uVar9 = var_10h._2_2_;\n                                    if ((var_8h._2_2_ & 0x8000) != 0) break;\n                                    iVar7 = CONCAT22(var_10h._2_2_, CONCAT11(var_10h._1_1_, var_10h)) << 1;\n                                    var_10h._0_1_ = iVar7;\n                                    var_10h._1_1_ = iVar7 >> 8;\n                                    var_10h._2_2_ = iVar7 >> 0x10;\n                                    iVar7 = CONCAT22(var_ch._2_2_, var_ch) * 2;\n                                    var_ch._0_2_ = iVar7 | uVar9 >> 0xf;\n                                    var_ch._2_2_ = iVar7 >> 0x10;\n                                    iVar7 = CONCAT22(var_8h._2_2_, var_8h) * 2;\n                                    var_8h._0_2_ = iVar7 | uVar14 >> 0xf;\n                                    uVar12 = uVar12 - 1;\n                                    var_8h._2_2_ = iVar7 >> 0x10;\n                                } while (0 < uVar12);\n                                if (uVar12 < 1) goto code_r0x0043c76e;\n                            }\n                            if ((0x8000 < CONCAT11(var_10h._1_1_, var_10h)) ||\n                               ((CONCAT22(var_10h._2_2_, CONCAT11(var_10h._1_1_, var_10h)) & 0x1ffff) == 0x18000)) {\n                                if (CONCAT22(var_ch, var_10h._2_2_) == -1) {\n                                    var_10h._2_2_ = 0;\n                                    var_ch._0_2_ = 0;\n                                    if (CONCAT22(var_8h, var_ch._2_2_) == -1) {\n                                        var_ch._2_2_ = 0;\n                                        var_8h._0_2_ = 0;\n                                        if (var_8h._2_2_ == 0xffff) {\n                                            var_8h._2_2_ = 0x8000;\n                                            uVar12 = uVar12 + 1;\n                                        }\n                                        else {\n                                            var_8h._2_2_ = var_8h._2_2_ + 1;\n                                        }\n                                    }\n                                    else {\n                                        iVar7 = CONCAT22(var_8h, var_ch._2_2_) + 1;\n                                        var_ch._2_2_ = iVar7;\n                                        var_8h._0_2_ = iVar7 >> 0x10;\n                                    }\n                                }\n                                else {\n                                    iVar7 = CONCAT22(var_ch, var_10h._2_2_) + 1;\n                                    var_10h._2_2_ = iVar7;\n                                    var_ch._0_2_ = iVar7 >> 0x10;\n                                }\n                            }\n                            noname_1 = CONCAT22(var_ch._2_2_, var_ch);\n                            if (uVar12 < 0x7fff) {\n                                var_16h._1_1_ = uVar12 >> 8 | uVar13 >> 8;\n                                var_20h._0_2_ = var_10h._2_2_;\n                                var_20h._2_2_ = var_ch;\n                                var_1ch = var_ch._2_2_;\n                                uVar11 = CONCAT22(var_ch._2_2_, var_ch);\n                                var_1ah._0_2_ = var_8h;\n                                var_1ah._2_2_ = var_8h._2_2_;\n                                var_1ah = CONCAT22(var_8h._2_2_, var_8h);\n                                var_16h._0_1_ = uVar12;\n                            }\n                            else {\n                                var_1ch = 0;\n                                var_1ah._0_2_ = 0;\n                                var_20h._0_2_ = 0;\n                                var_20h._2_2_ = 0;\n                                uVar11 = 0;\n                                iVar7 = ((uVar13 == 0) - 1 & 0x80000000) + 0x7fff8000;\n                                var_1ah._2_2_ = iVar7;\n                                var_1ah = 0x80000000;\n                                var_16h._0_1_ = iVar7 >> 0x10;\n                                var_16h._1_1_ = iVar7 >> 0x18;\n                                noname_1 = CONCAT22(var_ch._2_2_, var_ch);\n                            }\n                            goto joined_r0x0043c5ba;\n                        }\n                    }\n                    var_1ah._2_2_ = 0;\n                    var_16h._0_1_ = 0;\n                    var_16h._1_1_ = 0;\n                }\n                else {\n                    iVar7 = ((uVar13 == 0) - 1 & 0x80000000) + 0x7fff8000;\n                    var_1ah._2_2_ = iVar7;\n                    var_16h._0_1_ = iVar7 >> 0x10;\n                    var_16h._1_1_ = iVar7 >> 0x18;\n                }\n                var_1ch = 0;\n                var_1ah._0_2_ = 0;\n                var_1ah = var_1ah._2_2_ << 0x10;\n                var_20h._0_2_ = 0;\n                var_20h._2_2_ = 0;\n                uVar11 = 0;\n                noname_1 = 0;\n            }\n            goto joined_r0x0043c5ba;\n        }\n    }\n    var_1ah._2_2_ = var_1ah >> 0x10;\n    var_20h._2_2_ = arg_8h;\n    uVar16 = CONCAT13(var_16h._1_1_, CONCAT12(var_16h, var_1ah._2_2_));\n    if (0x3ffe < uVar16 >> 0x10) {\n        var_4ch._0_2_ = var_4ch + 1;\n        var_50h = 0;\n        var_10h._0_1_ = 0;\n        var_10h._1_1_ = 0;\n        var_10h._2_2_ = 0;\n        arg_8h = arg_8h & 0xffff;\n        var_ch._0_2_ = 0;\n        var_ch._2_2_ = 0;\n        var_8h._0_2_ = 0;\n        var_8h._2_2_ = 0;\n        uVar16 = uVar16 >> 0x10 & 0x7fff;\n        iVar7 = uVar16 + 0x3ffb;\n        if ((uVar16 < 0x7fff) && (iVar7 < 0xbffe)) {\n            if (0x3fbf < iVar7) {\n                if ((((uVar16 == 0) &&\n                     (iVar7 = uVar16 + 0x3ffc, \n                     (CONCAT13(var_16h._1_1_, CONCAT12(var_16h, var_1ah._2_2_)) & 0x7fffffff) == 0)) &&\n                    (CONCAT22(var_1ah, var_1ch) == 0)) && (CONCAT22(var_20h._2_2_, var_20h) == 0)) {\n                    var_16h._0_1_ = 0;\n                    var_16h._1_1_ = 0;\n                    noname_1 = 0;\n                    goto code_r0x0043cb03;\n                }\n                var_54h = 0;\n                puVar21 = &var_ch;\n                var_40h = 5;\n                do {\n                    var_48h = var_40h;\n                    if (0 < var_40h) {\n                        var_58h = &var_28h;\n                        puVar8 = &var_20h + var_54h * 2;\n                        do {\n                            bVar5 = false;\n                            uVar16 = puVar21[-1] + *var_58h * *puVar8;\n                            if ((uVar16 < puVar21[-1]) || (uVar16 < *var_58h * *puVar8)) {\n                                bVar5 = true;\n                            }\n                            puVar21[-1] = uVar16;\n                            if (bVar5) {\n                                *puVar21 = *puVar21 + 1;\n                            }\n                            var_58h = var_58h + -1;\n                            puVar8 = puVar8 + 1;\n                            var_48h = var_48h + -1;\n                        } while (0 < var_48h);\n                    }\n                    puVar21 = puVar21 + 2;\n                    var_54h = var_54h + 1;\n                    var_40h = var_40h + -1;\n                } while (0 < var_40h);\n                iVar7 = iVar7 + 0xc002;\n                if (iVar7 < 1) {\ncode_r0x0043c9fc:\n                    uVar12 = iVar7 + 0xffff;\n                    if (uVar12 < 0) {\n                        uVar16 = -(iVar7 + 0xffff) & 0xffff;\n                        uVar12 = uVar12 + uVar16;\n                        do {\n                            if ((var_10h & 1) != 0) {\n                                var_50h = var_50h + 1;\n                            }\n                            iVar3 = CONCAT22(var_8h._2_2_, var_8h);\n                            uVar17 = CONCAT22(var_ch._2_2_, var_ch);\n                            iVar7 = CONCAT22(var_ch._2_2_, var_ch);\n                            var_8h._0_2_ = CONCAT22(var_8h._2_2_, var_8h) >> 1;\n                            var_8h._2_2_ = var_8h._2_2_ >> 1;\n                            var_ch._2_2_ = var_ch._2_2_ >> 1 | (iVar3 << 0x1f) >> 0x10;\n                            uVar11 = CONCAT22(var_10h._2_2_, CONCAT11(var_10h._1_1_, var_10h)) >> 1;\n                            var_10h._2_2_ = var_10h._2_2_ >> 1 | (iVar7 << 0x1f) >> 0x10;\n                            uVar16 = uVar16 - 1;\n                            var_ch._0_2_ = uVar17 >> 1;\n                            var_10h._0_1_ = uVar11;\n                            var_10h._1_1_ = uVar11 >> 8;\n                        } while (uVar16 != 0);\n                        if (var_50h != 0) {\n                            var_10h._0_1_ = var_10h | 1;\n                        }\n                    }\n                }\n                else {\n                    do {\n                        uVar9 = var_ch._2_2_;\n                        uVar12 = var_10h._2_2_;\n                        if (var_8h._2_2_ < 0) break;\n                        iVar3 = CONCAT22(var_10h._2_2_, CONCAT11(var_10h._1_1_, var_10h)) << 1;\n                        var_10h._0_1_ = iVar3;\n                        var_10h._1_1_ = iVar3 >> 8;\n                        var_10h._2_2_ = iVar3 >> 0x10;\n                        iVar3 = CONCAT22(var_ch._2_2_, var_ch) * 2;\n                        var_ch._0_2_ = iVar3 | uVar12 >> 0xf;\n                        var_ch._2_2_ = iVar3 >> 0x10;\n                        iVar3 = CONCAT22(var_8h._2_2_, var_8h) * 2;\n                        var_8h._0_2_ = iVar3 | uVar9 >> 0xf;\n                        iVar7 = iVar7 + 0xffff;\n                        var_8h._2_2_ = iVar3 >> 0x10;\n                    } while (0 < iVar7);\n                    uVar12 = iVar7;\n                    if (uVar12 < 1) goto code_r0x0043c9fc;\n                }\n                if ((0x8000 < CONCAT11(var_10h._1_1_, var_10h)) ||\n                   ((CONCAT22(var_10h._2_2_, CONCAT11(var_10h._1_1_, var_10h)) & 0x1ffff) == 0x18000)) {\n                    if (CONCAT22(var_ch, var_10h._2_2_) == -1) {\n                        var_10h._2_2_ = 0;\n                        var_ch._0_2_ = 0;\n                        if (CONCAT22(var_8h, var_ch._2_2_) == -1) {\n                            var_ch._2_2_ = 0;\n                            var_8h._0_2_ = 0;\n                            if (var_8h._2_2_ == 0xffff) {\n                                var_8h._2_2_ = 0x8000;\n                                uVar12 = uVar12 + 1;\n                            }\n                            else {\n                                var_8h._2_2_ = var_8h._2_2_ + 1;\n                            }\n                        }\n                        else {\n                            iVar7 = CONCAT22(var_8h, var_ch._2_2_) + 1;\n                            var_ch._2_2_ = iVar7;\n                            var_8h._0_2_ = iVar7 >> 0x10;\n                        }\n                    }\n                    else {\n                        iVar7 = CONCAT22(var_ch, var_10h._2_2_) + 1;\n                        var_10h._2_2_ = iVar7;\n                        var_ch._0_2_ = iVar7 >> 0x10;\n                    }\n                }\n                noname_1 = CONCAT22(var_ch._2_2_, var_ch);\n                if (uVar12 < 0x7fff) {\n                    var_16h._1_1_ = uVar12 >> 8 | var_16h._1_1_ & 0x80;\n                    var_20h._0_2_ = var_10h._2_2_;\n                    arg_8h = CONCAT22(var_10h._2_2_, var_ch);\n                    var_1ch = var_ch._2_2_;\n                    var_1ah = CONCAT22(var_8h._2_2_, var_8h);\n                    var_16h._0_1_ = uVar12;\n                }\n                else {\n                    var_1ch = 0;\n                    var_20h._0_2_ = 0;\n                    arg_8h = var_10h._2_2_ << 0x10;\n                    iVar7 = (((var_16h._1_1_ & 0x80) == 0) - 1 & 0x80000000) + 0x7fff8000;\n                    var_1ah = 0x80000000;\n                    var_16h._0_1_ = iVar7 >> 0x10;\n                    var_16h._1_1_ = iVar7 >> 0x18;\n                    noname_1 = CONCAT22(var_ch._2_2_, var_ch);\n                }\n                goto code_r0x0043cb03;\n            }\n            iVar7 = 0;\n        }\n        else {\n            iVar7 = (((var_16h._1_1_ & 0x80) == 0) - 1 & 0x80000000) + 0x7fff8000;\n        }\n        var_1ch = 0;\n        arg_8h = 0;\n        var_20h._0_2_ = 0;\n        var_1ah = iVar7 << 0x10;\n        var_16h._0_1_ = iVar7 >> 0x10;\n        var_16h._1_1_ = iVar7 >> 0x18;\n        noname_1 = 0;\n    }\ncode_r0x0043cb03:\n    var_10h._2_2_ = arg_8h >> 0x10;\n    var_20h._2_2_ = arg_8h;\n    *arg_1ch = var_4ch;\n    if (((arg_18h & 1) == 0) || (arg_14h = arg_14h + var_4ch,  0 < arg_14h)) {\n        if (0x15 < arg_14h) {\n            arg_14h = 0x15;\n        }\n        iVar7 = CONCAT11(var_16h._1_1_, var_16h) - 0x3ffe;\n        var_16h._0_1_ = 0;\n        var_16h._1_1_ = 0;\n        var_44h = 8;\n        do {\n            uVar12 = var_20h._2_2_;\n            var_1ah._2_2_ = var_1ah >> 0x10;\n            iVar3 = CONCAT22(var_20h._2_2_, var_20h) << 1;\n            var_20h._0_2_ = iVar3;\n            var_20h._2_2_ = iVar3 >> 0x10;\n            iVar3 = CONCAT22(var_1ah, var_1ch) * 2;\n            var_1ch = iVar3 | uVar12 >> 0xf;\n            iVar4 = CONCAT13(var_16h._1_1_, CONCAT12(var_16h, var_1ah._2_2_)) * 2;\n            var_1ah._2_2_ = iVar4 | var_1ah >> 0xf;\n            var_44h = var_44h + -1;\n            var_1ah._0_2_ = iVar3 >> 0x10;\n            var_16h._0_1_ = iVar4 >> 0x10;\n            var_16h._1_1_ = iVar4 >> 0x18;\n        } while (var_44h != 0);\n        if ((iVar7 < 0) && (uVar16 = -iVar7 & 0xff,  uVar16 != 0)) {\n            do {\n                iVar3 = CONCAT13(var_16h._1_1_, CONCAT12(var_16h, var_1ah._2_2_));\n                uVar11 = CONCAT22(var_1ah, var_1ch);\n                iVar7 = CONCAT22(var_1ah, var_1ch);\n                uVar17 = CONCAT13(var_16h._1_1_, CONCAT12(var_16h, var_1ah._2_2_)) >> 1;\n                var_1ah._2_2_ = uVar17;\n                var_16h._0_1_ = uVar17 >> 0x10;\n                var_16h._1_1_ = var_16h._1_1_ >> 1;\n                var_1ah._0_2_ = var_1ah >> 1 | (iVar3 << 0x1f) >> 0x10;\n                uVar17 = CONCAT22(var_20h._2_2_, var_20h);\n                var_20h._2_2_ = var_20h._2_2_ >> 1 | (iVar7 << 0x1f) >> 0x10;\n                uVar16 = uVar16 - 1;\n                var_1ch = uVar11 >> 1;\n                var_20h._0_2_ = uVar17 >> 1;\n            } while (0 < uVar16);\n        }\n        piVar1 = arg_1ch + 2;\n        piVar18 = piVar1;\n        uVar12 = var_20h;\n        uVar9 = var_20h._2_2_;\n        uVar13 = var_1ch;\n        uVar14 = var_1ah;\n        for (arg_14h = arg_14h + 1; var_1ah = CONCAT22(var_1ah._2_2_, uVar14),  0 < arg_14h; arg_14h = arg_14h + -1) {\n            var_34h = CONCAT13(var_16h._1_1_, CONCAT12(var_16h, var_1ah._2_2_));\n            uVar17 = CONCAT22(uVar9, uVar12) * 4;\n            uVar16 = CONCAT22(uVar14, uVar13) * 2;\n            uVar11 = (CONCAT13(var_16h._1_1_, CONCAT12(var_16h, var_1ah._2_2_)) * 2 | uVar14 >> 0xf) * 2 |\n                     uVar16 >> 0x1f;\n            uVar20 = (uVar16 | uVar9 >> 0xf) * 2 | (CONCAT22(uVar9, uVar12) << 1) >> 0x1f;\n            uVar16 = CONCAT22(uVar9, uVar12) + uVar17;\n            if ((uVar16 < uVar17) || (uVar17 = uVar20,  uVar16 < CONCAT22(uVar9, uVar12))) {\n                uVar17 = uVar20 + 1;\n                bVar5 = false;\n                if ((uVar17 < uVar20) || (uVar17 == 0)) {\n                    bVar5 = true;\n                }\n                if (bVar5) {\n                    uVar11 = uVar11 + 1;\n                }\n            }\n            uVar20 = CONCAT22(uVar14, uVar13) + uVar17;\n            if ((uVar20 < uVar17) || (uVar20 < CONCAT22(uVar14, uVar13))) {\n                uVar11 = uVar11 + 1;\n            }\n            iVar7 = (uVar11 + var_34h) * 2;\n            var_1ah._2_2_ = iVar7 | uVar20 >> 0x1f;\n            var_20h._0_2_ = uVar16 * 2;\n            var_20h._2_2_ = uVar16 * 2 >> 0x10;\n            var_16h._0_1_ = iVar7 >> 0x10;\n            var_1ch = uVar20 * 2 | uVar16 >> 0x1f;\n            *piVar18 = (iVar7 >> 0x18) + '0';\n            piVar18 = piVar18 + 1;\n            var_1ah._0_2_ = uVar20 * 2 >> 0x10;\n            var_16h._1_1_ = 0;\n            var_3ch._0_2_ = uVar12;\n            var_3ch._2_2_ = uVar9;\n            var_38h._0_2_ = uVar13;\n            var_38h._2_2_ = uVar14;\n            uVar12 = var_20h;\n            uVar9 = var_20h._2_2_;\n            uVar13 = var_1ch;\n            uVar14 = var_1ah;\n        }\n        piVar19 = piVar18 + -1;\n        var_20h._0_2_ = uVar12;\n        var_20h._2_2_ = uVar9;\n        var_1ch = uVar13;\n        if (*(piVar18 + -1) < '5') {\n            for (; (piVar1 <= piVar19 && (*piVar19 == '0')); piVar19 = piVar19 + -1) {\n            }\n            if (piVar19 < piVar1) {\n                *arg_1ch = 0;\n                *(arg_1ch + 3) = 1;\n                *(arg_1ch + 1) = ((uVar6 != 0x8000) - 1U & 0xd) + 0x20;\n                *piVar1 = 0x30;\n                *(arg_1ch + 5) = 0;\n                goto code_r0x0043cccb;\n            }\n        }\n        else {\n            for (; (piVar1 <= piVar19 && (*piVar19 == '9')); piVar19 = piVar19 + -1) {\n                *piVar19 = 0x30;\n            }\n            if (piVar19 < piVar1) {\n                piVar19 = piVar19 + 1;\n                *arg_1ch = *arg_1ch + 1;\n            }\n            *piVar19 = *piVar19 + '\\x01';\n        }\n        cVar15 = (piVar19 - arg_1ch) + -3;\n        *(arg_1ch + 3) = cVar15;\n        *(cVar15 + 4 + arg_1ch) = 0;\n    }\n    else {\n        *arg_1ch = 0;\n        *(arg_1ch + 3) = 1;\n        *(arg_1ch + 1) = ((uVar6 != 0x8000) - 1U & 0xd) + 0x20;\n        *(arg_1ch + 2) = 0x30;\n        *(arg_1ch + 5) = 0;\n    }\ncode_r0x0043cccb:\n    var_ch = noname_1;\n    fcn.004294b3(1);\n    return;\n}\n",
        "token_count": 9033
    },
    "00401560": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00401560(int32_t *param_1, int32_t param_2)\n\n{\n    code *pcVar1;\n    \n    if (param_2 == -1) {\n        param_2 = *param_1;\n        if (param_2 != 0) {\n            param_2 = fcn.00428f0d(param_2, *(param_2 + -8));\n            goto code_r0x0040157f;\n        }\n    }\n    else {\ncode_r0x0040157f:\n        if (param_2 < 0) goto code_r0x00401597;\n    }\n    if (param_2 <= *(*param_1 + -8)) {\n        *(*param_1 + -0xc) = param_2;\n        *(param_2 + *param_1) = 0;\n        return;\n    }\ncode_r0x00401597:\n    fcn.00401090(0x80070057);\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 233
    },
    "00402330": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.00402330(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uchar *unaff_EDI;\n    int32_t *in_FS_OFFSET;\n    uint32_t uStack352;\n    uchar auStack340 [320];\n    int32_t iStack20;\n    uint32_t uStack16;\n    int32_t iStack12;\n    uint uStack8;\n    int32_t iStack4;\n    \n    uStack8 = 0x43dcc8;\n    iStack12 = *in_FS_OFFSET;\n    uStack16 = *0x45060c ^ &stack0xfffffeac;\n    uStack352 = *0x45060c ^ &stack0xfffffea4;\n    *in_FS_OFFSET = &stack0xfffffff4;\n    iStack4 = 0;\n    iVar2 = (*_sym.imp.KERNEL32.dll_FindFirstFileA)();\n    if (iVar2 != -1) {\n        iVar3 = fcn.00428ef6(iStack4, 0x5c);\n        if (iVar3 == 0) {\n            iVar3 = -1;\n        }\n        else {\n            iVar3 = iVar3 - iStack4;\n        }\n        unaff_EDI = &stack0xfffffe90;\n        fcn.00401cb0(&stack0xfffffe90, iVar3 + 1);\n        fcn.00402220(&stack0xfffffea0);\n        (*_sym.imp.KERNEL32.dll_FindClose)(iVar2);\n    }\n    iStack12 = 0xffffffff;\n    piVar1 = iStack4 + -4;\n    LOCK();\n    iVar2 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar2 == 1 || iVar2 + -1 < 0) {\n        (**(**(iStack4 + -0x10) + 4))();\n    }\n    *in_FS_OFFSET = iStack20;\n    uStack352 = 0x402430;\n    fcn.004294b3(unaff_EDI);\n    return;\n}\n",
        "token_count": 459
    },
    "00402440": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t ** fcn.00402440(int32_t param_1, int32_t param_2)\n\n{\n    int32_t **ppiVar1;\n    uchar *puVar2;\n    int32_t iVar3;\n    uchar uVar4;\n    int32_t *piVar5;\n    int32_t **ppiVar6;\n    int32_t **ppiVar7;\n    int32_t **ppiVar8;\n    int32_t iVar9;\n    uint *puVar10;\n    int32_t iVar11;\n    uint uVar12;\n    int32_t iVar13;\n    int32_t iVar14;\n    int32_t unaff_ESI;\n    uint32_t *in_FS_OFFSET;\n    int32_t **unaff_retaddr;\n    uchar *puVar15;\n    int32_t in_stack_ffffff90;\n    int32_t iStack108;\n    uchar *puStack104;\n    int32_t **ppiStack100;\n    uint uStack96;\n    uchar *puVar16;\n    uint uStack84;\n    int32_t **ppiStack80;\n    uint uStack76;\n    uint uStack72;\n    int32_t **ppiVar17;\n    uint uStack52;\n    uint uStack48;\n    int32_t **ppiStack44;\n    uint uStack40;\n    uchar auStack36 [4];\n    int32_t **ppiStack32;\n    uint uStack28;\n    uchar uStack24;\n    int32_t iStack16;\n    uint32_t uStack12;\n    uint uStack8;\n    int32_t iStack4;\n    \n    uStack8 = 0x43ddc8;\n    uStack12 = *in_FS_OFFSET;\n    uStack72 = *0x45060c ^ &stack0xffffffbc;\n    *in_FS_OFFSET = &stack0xfffffff4;\n    iStack16 = 0;\n    iStack4 = 0;\n    uStack76 = 0x402476;\n    piVar5 = fcn.0041a118();\n    if (piVar5 == NULL) {\n        uStack76 = 0x80004005;\n        ppiStack80 = 0x40248b;\n        piVar5 = fcn.00401090();\n    }\n    ppiStack80 = 0x402494;\n    uStack48 = (**(*piVar5 + 0xc))();\n    uStack48 = uStack48 + 0x10;\n    uStack8 = CONCAT31(uStack8._1_3_, 1);\n    ppiStack80 = 0x4024a5;\n    piVar5 = fcn.0041a118();\n    if (piVar5 == NULL) {\n        ppiStack80 = 0x80004005;\n        uStack84 = 0x4024ba;\n        piVar5 = fcn.00401090();\n    }\n    ppiStack80 = 0x4024c3;\n    uStack52 = (**(*piVar5 + 0xc))();\n    uStack52 = uStack52 + 0x10;\n    uStack8 = CONCAT31(uStack8._1_3_, 2);\n    ppiStack80 = 0x4024d4;\n    piVar5 = fcn.0041a118();\n    if (piVar5 == NULL) {\n        ppiStack80 = 0x80004005;\n        uStack84 = 0x4024e9;\n        piVar5 = fcn.00401090();\n    }\n    ppiStack80 = 0x4024f2;\n    ppiVar6 = (**(*piVar5 + 0xc))();\n    ppiStack44 = ppiVar6 + 4;\n    uStack8 = CONCAT31(uStack8._1_3_, 3);\n    ppiStack80 = 0x402503;\n    piVar5 = fcn.0041a118();\n    if (piVar5 == NULL) {\n        ppiStack80 = 0x80004005;\n        uStack84 = 0x402518;\n        piVar5 = fcn.00401090();\n    }\n    ppiStack80 = 0x402521;\n    ppiVar7 = (**(*piVar5 + 0xc))();\n    ppiVar17 = ppiVar7 + 4;\n    ppiStack80 = param_1 + -0x10;\n    uStack8._0_1_ = 4;\n    uStack84 = 0x40253a;\n    ppiVar8 = fcn.004016b0();\n    uStack40 = ppiVar8 + 4;\n    uStack8._0_1_ = 5;\n    uVar4 = uStack8;\n    uStack8._0_1_ = 5;\n    if (*(param_1 + -0xc) <= param_2) {\n        ppiStack80 = param_1 + -0x10;\n        uStack84 = 0x402563;\n        iVar9 = fcn.004016b0();\n        *unaff_retaddr = iVar9 + 0x10;\n        uStack8._0_1_ = 4;\n        ppiVar1 = ppiVar8 + 3;\n        LOCK();\n        piVar5 = *ppiVar1;\n        *ppiVar1 = *ppiVar1 + -1;\n        if (piVar5 + -1 < 1) {\n            uStack84 = 0x402590;\n            ppiStack80 = ppiVar8;\n            (**(**ppiVar8 + 4))();\n        }\n        uStack8 = CONCAT31(uStack8._1_3_, 3);\n        ppiVar8 = ppiVar7 + 3;\n        LOCK();\n        piVar5 = *ppiVar8;\n        *ppiVar8 = *ppiVar8 + -1;\n        if (piVar5 + -1 < 1) {\n            uStack84 = 0x4025b1;\n            ppiStack80 = ppiVar7;\n            (**(**ppiVar7 + 4))();\n        }\n        ppiVar7 = ppiVar6 + 3;\n        LOCK();\n        piVar5 = *ppiVar7;\n        *ppiVar7 = *ppiVar7 + -1;\n        if (piVar5 + -1 < 1) {\n            (**(**ppiVar6 + 4))(ppiVar6);\n        }\n        piVar5 = in_stack_ffffff90 + -4;\n        LOCK();\n        iVar9 = *piVar5;\n        *piVar5 = *piVar5 + -1;\n        if (iVar9 + -1 < 1) {\n            (**(**(in_stack_ffffff90 + -0x10) + 4))(in_stack_ffffff90 + -0x10);\n        }\n        piVar5 = iStack108 + -4;\n        LOCK();\n        iVar9 = *piVar5;\n        *piVar5 = *piVar5 + -1;\n        if (iVar9 + -1 < 1) {\n            (**(**(iStack108 + -0x10) + 4))(iStack108 + -0x10);\n        }\n        ppiVar6 = ppiVar17 + -1;\n        LOCK();\n        piVar5 = *ppiVar6;\n        *ppiVar6 = *ppiVar6 + -1;\n        if (piVar5 == 0x1 || piVar5 + -1 < 0) {\n            (**(*ppiVar17[-4] + 4))(ppiVar17 + -4);\n        }\ncode_r0x00402e3c:\n        *in_FS_OFFSET = uStack76;\n        return unaff_retaddr;\n    }\n    ppiStack80 = 0x2;\n    uStack84 = &stack0xffffffdc;\n    uStack8._0_1_ = uVar4;\n    puVar10 = fcn.00401cb0();\n    uStack96 = 0x40266a;\n    iVar9 = fcn.004288e4(*puVar10, 0x44197c);\n    ppiVar6 = ppiStack44 + -1;\n    LOCK();\n    piVar5 = *ppiVar6;\n    *ppiVar6 = *ppiVar6 + -1;\n    if (piVar5 == 0x1 || piVar5 + -1 < 0) {\n        (**(*ppiStack44[-4] + 4))();\n    }\n    if (iVar9 == 0) {\n        iVar9 = *(iStack4 + -0xc) + -2;\n        puVar16 = &stack0xffffffd4;\n        uStack96 = 0x4026b3;\n        uStack96 = fcn.00401c30();\n        uStack24 = 6;\n        ppiStack100 = 0x4026c2;\n        fcn.00402100();\n        uStack28 = CONCAT31(uStack28._1_3_, 5);\n        ppiVar6 = ppiVar17 + -1;\n        LOCK();\n        piVar5 = *ppiVar6;\n        *ppiVar6 = *ppiVar6 + -1;\n        if (piVar5 == 0x1 || piVar5 + -1 < 0) {\n            puStack104 = 0x4026e7;\n            ppiStack100 = ppiVar17 + -4;\n            (**(*ppiVar17[-4] + 4))();\n        }\n        if (((*(uStack52 + -0xc) < 0) || (iVar11 = fcn.00428e23(uStack52, 0x441978),  iVar11 == 0)) ||\n           (iVar11 - uStack52 == -1)) {\n            ppiStack32 = ppiVar17;\n            iVar9 = fcn.004016b0(ppiVar8);\n            *ppiStack32 = iVar9 + 0x10;\n            ppiVar6 = ppiVar8 + 3;\n            LOCK();\n            piVar5 = *ppiVar6;\n            *ppiVar6 = *ppiVar6 + -1;\n            if (piVar5 + -1 < 1) {\n                (**(**ppiVar8 + 4))(ppiVar8);\n            }\n            piVar5 = in_stack_ffffff90 + -4;\n            LOCK();\n            iVar9 = *piVar5;\n            *piVar5 = *piVar5 + -1;\n            if (iVar9 + -1 < 1) {\n                (**(**(in_stack_ffffff90 + -0x10) + 4))(in_stack_ffffff90 + -0x10);\n            }\n            ppiVar6 = ppiStack100 + -1;\n            LOCK();\n            piVar5 = *ppiVar6;\n            *ppiVar6 = *ppiVar6 + -1;\n            if (piVar5 + -1 < 1) {\n                (**(*ppiStack100[-4] + 4))(ppiStack100 + -4);\n            }\n            piVar5 = iStack108 + -4;\n            LOCK();\n            iVar9 = *piVar5;\n            *piVar5 = *piVar5 + -1;\n            puVar2 = puStack104;\n            if (iVar9 + -1 < 1) {\n                (**(**(iStack108 + -0x10) + 4))(iStack108 + -0x10);\n                puVar2 = puStack104;\n            }\n            goto code_r0x004027ba;\n        }\n        uVar12 = fcn.00401cb0(&stack0xffffffa8, iVar11 - uStack52);\n        uStack72._0_1_ = 7;\n        uVar12 = fcn.00401e10(&stack0xffffff9c, 0x44197c, uVar12);\n        uStack72 = CONCAT31(uStack72._1_3_, 8);\n        fcn.00402100(uVar12);\n        uStack76._0_1_ = 7;\n        piVar5 = puStack104 + -4;\n        LOCK();\n        iVar11 = *piVar5;\n        *piVar5 = *piVar5 + -1;\n        if (iVar11 + -1 < 1) {\n            (**(**(puStack104 + -0x10) + 4))(puStack104 + -0x10);\n        }\n        uStack76 = CONCAT31(uStack76._1_3_, 5);\n        ppiVar6 = ppiStack100 + -1;\n        LOCK();\n        piVar5 = *ppiVar6;\n        *ppiVar6 = *ppiVar6 + -1;\n        if (piVar5 == 0x1 || piVar5 + -1 < 0) {\n            (**(*ppiStack100[-4] + 4))(ppiStack100 + -4);\n        }\n        puStack104 = &stack0xffffff9c;\n        iStack108 = fcn.00401c30();\n        uStack84 = CONCAT31(uStack84._1_3_, 9);\n    }\n    else {\n        iVar9 = 2;\n        puVar16 = &stack0xffffffd8;\n        uStack96 = 0x4028c6;\n        uStack96 = fcn.00401cb0();\n        uStack24 = 10;\n        ppiStack100 = 0x4028d5;\n        fcn.00402100();\n        ppiStack100 = uStack52 + -0x10;\n        uStack28 = CONCAT31(uStack28._1_3_, 5);\n        piVar5 = uStack52 + -4;\n        LOCK();\n        iVar11 = *piVar5;\n        *piVar5 = *piVar5 + -1;\n        if (iVar11 == 1 || iVar11 + -1 < 0) {\n            puStack104 = 0x4028fa;\n            (**(**ppiStack100 + 4))();\n        }\n        ppiStack100 = *(iStack16 + -0xc) + -3;\n        puStack104 = &stack0xffffffcc;\n        iStack108 = 0x402913;\n        iStack108 = fcn.00401c30();\n        auStack36[0] = 0xb;\n    }\n    fcn.00402100();\n    piVar5 = unaff_ESI + -4;\n    uStack40 = CONCAT31(uStack40._1_3_, 5);\n    LOCK();\n    iVar11 = *piVar5;\n    *piVar5 = *piVar5 + -1;\n    if (iVar11 == 1 || iVar11 + -1 < 0) {\n        (**(**(unaff_ESI + -0x10) + 4))();\n    }\n    puVar2 = ppiStack80;\n    iVar11 = *(ppiStack80 + -0xc);\n    iVar13 = fcn.00428ef6(uStack28, 0x5c);\n    if ((iVar13 == 0) || (iVar13 = iVar13 - uStack28,  iVar13 == -1)) {\n        iVar11 = fcn.004016b0();\n        *ppiStack32 = iVar11 + 0x10;\n        uStack40._0_1_ = 4;\n        ppiVar6 = ppiVar8 + 3;\n        LOCK();\n        piVar5 = *ppiVar6;\n        *ppiVar6 = *ppiVar6 + -1;\n        if (piVar5 == 0x1 || piVar5 + -1 < 0) {\n            (**(**ppiVar8 + 4))();\n        }\n        uStack40 = CONCAT31(uStack40._1_3_, 3);\n        piVar5 = iVar9 + -4;\n        LOCK();\n        iVar11 = *piVar5;\n        *piVar5 = *piVar5 + -1;\n        if (iVar11 + -1 < 1) {\n            (**(**(iVar9 + -0x10) + 4))();\n        }\n        ppiVar6 = ppiStack100 + -1;\n        LOCK();\n        piVar5 = *ppiVar6;\n        *ppiVar6 = *ppiVar6 + -1;\n        iVar13 = iStack108;\n        if (piVar5 + -1 < 1) {\n            (**(*ppiStack100[-4] + 4))(ppiStack100 + -4);\n            iVar13 = iStack108;\n        }\n    }\n    else {\n        iVar14 = (*(uStack28 + -0xc) - iVar13) + -1;\n        puVar15 = &stack0xffffffc0;\n        uVar12 = fcn.00401c30();\n        uStack48 = CONCAT31(uStack48._1_3_, 0xc);\n        fcn.00402100(uVar12);\n        uStack52 = CONCAT31(uStack52._1_3_, 5);\n        piVar5 = uStack76 - 4;\n        LOCK();\n        iVar3 = *piVar5;\n        *piVar5 = *piVar5 + -1;\n        ppiStack32 = ppiVar17;\n        if (iVar3 == 1 || iVar3 + -1 < 0) {\n            (**(**(uStack76 - 0x10) + 4))(uStack76 - 0x10);\n            ppiStack32 = ppiVar17;\n        }\n        uVar12 = fcn.00401cb0(&stack0xffffffb4, iVar13);\n        ppiVar6 = 0xd;\n        fcn.00402100(uVar12);\n        piVar5 = iVar9 + -4;\n        LOCK();\n        iVar13 = *piVar5;\n        *piVar5 = *piVar5 + -1;\n        if (iVar13 == 1 || iVar13 + -1 < 0) {\n            (**(**(iVar9 + -0x10) + 4))(iVar9 + -0x10);\n        }\n        iVar13 = iStack108;\n        if (*(iStack108 + -0xc) + 5 + iVar11 < uStack48) {\n            iVar9 = fcn.00428ef6(uStack52, 0x5c);\n            unaff_retaddr = ppiVar6;\n            if (iVar9 != 0) {\n                for (iVar9 = iVar9 - uStack52; unaff_retaddr = ppiVar6,  iVar9 != -1; iVar9 = iVar9 - uStack52) {\n                    uVar12 = fcn.00401cb0(&stack0xffffffa8, iVar9);\n                    uStack72 = CONCAT31(uStack72._1_3_, 0xf);\n                    fcn.00402100();\n                    uStack76 = CONCAT31(uStack76._1_3_, 5);\n                    ppiVar6 = ppiStack100 + -1;\n                    LOCK();\n                    piVar5 = *ppiVar6;\n                    *ppiVar6 = *ppiVar6 + -1;\n                    unaff_retaddr = ppiStack32;\n                    if (piVar5 == 0x1 || piVar5 + -1 < 0) {\n                        (**(*ppiStack100[-4] + 4))(ppiStack100 + -4);\n                        unaff_retaddr = ppiStack32;\n                    }\n                    uVar12 = fcn.00401d30(&stack0xffffffb8, &stack0xffffff9c, 0x441978, uVar12);\n                    uVar12 = fcn.00402000(&stack0xffffffb4, uVar12, &stack0xffffffd0);\n                    uVar12 = fcn.00401d30(&stack0xffffffb0, uVar12, \"\\\\...\\\\\");\n                    uVar12 = fcn.00402000(&stack0xffffffa8, uVar12, &stack0xffffff98);\n                    ppiVar6 = 0x13;\n                    fcn.00402100(uVar12);\n                    piVar5 = puVar16 + -4;\n                    LOCK();\n                    iVar9 = *piVar5;\n                    *piVar5 = *piVar5 + -1;\n                    if (iVar9 + -1 < 1) {\n                        (**(**(puVar16 + -0x10) + 4))(puVar16 + -0x10);\n                    }\n                    piVar5 = uStack84 + -4;\n                    LOCK();\n                    iVar9 = *piVar5;\n                    *piVar5 = *piVar5 + -1;\n                    if (iVar9 + -1 < 1) {\n                        (**(**(uStack84 + -0x10) + 4))(uStack84 + -0x10);\n                    }\n                    piVar5 = ppiStack80 + -4;\n                    LOCK();\n                    iVar9 = *piVar5;\n                    *piVar5 = *piVar5 + -1;\n                    if (iVar9 + -1 < 1) {\n                        (**(**(ppiStack80 + -0x10) + 4))(ppiStack80 + -0x10);\n                    }\n                    piVar5 = uStack76 - 4;\n                    LOCK();\n                    iVar9 = *piVar5;\n                    *piVar5 = *piVar5 + -1;\n                    if (iVar9 == 1 || iVar9 + -1 < 0) {\n                        (**(**(uStack76 - 0x10) + 4))(uStack76 - 0x10);\n                    }\n                    if (*(iVar14 + -0xc) == uStack48 || *(iVar14 + -0xc) < uStack48) {\n                        fcn.004018c0(&stack0xffffff90);\n                        goto code_r0x00402e06;\n                    }\n                    ppiStack32 = unaff_retaddr;\n                    iVar9 = fcn.00428ef6(uStack52, 0x5c);\n                    unaff_retaddr = ppiVar6;\n                    if (iVar9 == 0) break;\n                }\n            }\n            uVar12 = fcn.00401d30(&stack0xffffffa8, &stack0xffffff98, 0x441978);\n            uVar12 = fcn.00402000(&stack0xffffffac, uVar12, &stack0xffffffcc);\n            uVar12 = fcn.00401d30(&stack0xffffffb0, uVar12, \"\\\\...\\\\\");\n            uVar12 = fcn.00402000(&stack0xffffffb4, uVar12, &stack0xffffff94);\n            fcn.00402100(uVar12);\n            fcn.004015e0();\n            fcn.004015e0();\n            fcn.004015e0();\n            fcn.004015e0();\n            if (*(puVar15 + -0xc) == uStack52 || *(puVar15 + -0xc) < uStack52) {\n                fcn.004018c0(&stack0xffffff8c);\n            }\n            else {\n                uVar12 = fcn.00401d30(&stack0xffffffb0, &stack0xffffff94, \"\\\\...\\\\\");\n                fcn.00402000(unaff_retaddr, uVar12, &stack0xffffff90);\n                fcn.004015e0();\n            }\ncode_r0x00402e06:\n            fcn.004015e0();\n            fcn.004015e0();\n            fcn.004015e0();\n            fcn.004015e0();\n            fcn.004015e0();\n            fcn.004015e0();\n            goto code_r0x00402e3c;\n        }\n        uVar12 = fcn.00401d30(&stack0xffffffa8, &stack0xffffff98, \"\\\\...\\\\\");\n        fcn.00402000(ppiStack32, uVar12, &stack0xffffff94);\n        piVar5 = iVar9 + -4;\n        LOCK();\n        iVar11 = *piVar5;\n        *piVar5 = *piVar5 + -1;\n        if (iVar11 == 1 || iVar11 + -1 < 0) {\n            (**(**(iVar9 + -0x10) + 4))(iVar9 + -0x10);\n        }\n        ppiVar6 = ppiVar8 + 3;\n        LOCK();\n        piVar5 = *ppiVar6;\n        *ppiVar6 = *ppiVar6 + -1;\n        if (piVar5 + -1 < 1) {\n            (**(**ppiVar8 + 4))(ppiVar8);\n        }\n        piVar5 = iVar14 + -4;\n        LOCK();\n        iVar9 = *piVar5;\n        *piVar5 = *piVar5 + -1;\n        if (iVar9 + -1 < 1) {\n            (**(**(iVar14 + -0x10) + 4))(iVar14 + -0x10);\n        }\n        ppiVar6 = ppiStack100 + -1;\n        LOCK();\n        piVar5 = *ppiVar6;\n        *ppiVar6 = *ppiVar6 + -1;\n        if (piVar5 == 0x1 || piVar5 + -1 < 0) {\n            (**(*ppiStack100[-4] + 4))(ppiStack100 + -4);\n        }\n    }\n    piVar5 = iVar13 + -4;\n    LOCK();\n    iVar9 = *piVar5;\n    *piVar5 = *piVar5 + -1;\n    if (iVar9 == 1 || iVar9 + -1 < 0) {\n        (**(**(iVar13 + -0x10) + 4))(iVar13 + -0x10);\n    }\ncode_r0x004027ba:\n    piVar5 = puVar2 + -4;\n    LOCK();\n    iVar9 = *piVar5;\n    *piVar5 = *piVar5 + -1;\n    if (iVar9 + -1 < 1) {\n        (**(**(puVar2 + -0x10) + 4))(puVar2 + -0x10);\n    }\n    piVar5 = uStack52 + -4;\n    LOCK();\n    iVar9 = *piVar5;\n    *piVar5 = *piVar5 + -1;\n    if (iVar9 == 1 || iVar9 + -1 < 0) {\n        (**(**(uStack52 + -0x10) + 4))(uStack52 + -0x10);\n    }\n    *in_FS_OFFSET = uStack72;\n    return ppiStack32;\n}\n",
        "token_count": 5788
    },
    "00404350": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00404350(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t *in_FS_OFFSET;\n    int32_t unaff_retaddr;\n    int32_t iStack36;\n    uchar *puStack32;\n    int32_t iStack24;\n    uint uStack20;\n    uint uStack16;\n    int32_t iStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack8 = 0x43e0d8;\n    iStack12 = *in_FS_OFFSET;\n    puStack32 = *0x45060c ^ &stack0xffffffe4;\n    *in_FS_OFFSET = &stack0xfffffff4;\n    uStack4 = 0;\n    iStack36 = 0x404381;\n    piVar1 = fcn.0041a118();\n    if (piVar1 == NULL) {\n        iStack36 = -0x7fffbffb;\n        piVar1 = fcn.00401090();\n    }\n    iStack24 = (**(*piVar1 + 0xc))();\n    iStack24 = iStack24 + 0x10;\n    uStack8 = CONCAT31(uStack8._1_3_, 1);\n    piVar1 = fcn.0041a118();\n    if (piVar1 == NULL) {\n        piVar1 = fcn.00401090(0x80004005);\n    }\n    (**(*piVar1 + 0xc))();\n    uStack8 = CONCAT31(uStack8._1_3_, 2);\n    if (0 < *(unaff_retaddr + -0xc)) {\n        iVar2 = fcn.00428ef6(unaff_retaddr, 0x5c);\n        if ((iVar2 != 0) && (iVar2 - unaff_retaddr != -1)) {\n            uVar3 = fcn.00401cb0(&stack0xffffffec, iVar2 - unaff_retaddr);\n            uStack16 = CONCAT31(uStack16._1_3_, 3);\n            fcn.00402100(uVar3);\n            uStack20 = CONCAT31(uStack20._1_3_, 2);\n            piVar1 = puStack32 + -4;\n            LOCK();\n            iVar2 = *piVar1;\n            *piVar1 = *piVar1 + -1;\n            if (iVar2 == 1 || iVar2 + -1 < 0) {\n                (**(**(puStack32 + -0x10) + 4))(puStack32 + -0x10);\n            }\n            puStack32 = &stack0xfffffff8;\n            iStack36 = fcn.00401c30();\n            uStack4 = CONCAT31(uStack4._1_3_, 4);\n            fcn.00402100();\n            uStack8 = CONCAT31(uStack8._1_3_, 2);\n            piVar1 = uStack20 + -4;\n            LOCK();\n            iVar2 = *piVar1;\n            *piVar1 = *piVar1 + -1;\n            if (iVar2 == 1 || iVar2 + -1 < 0) {\n                (**(**(uStack20 + -0x10) + 4))(uStack20 + -0x10);\n            }\n        }\n    }\n    fcn.00402100(&stack0xffffffe8);\n    fcn.00402100(&stack0xffffffe0);\n    uStack16._0_1_ = 1;\n    piVar1 = iStack36 + -4;\n    LOCK();\n    iVar2 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar2 + -1 < 1) {\n        (**(**(iStack36 + -0x10) + 4))(iStack36 + -0x10);\n    }\n    uStack16 = uStack16._1_3_ << 8;\n    piVar1 = puStack32 + -4;\n    LOCK();\n    iVar2 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar2 + -1 < 1) {\n        (**(**(puStack32 + -0x10) + 4))(puStack32 + -0x10);\n    }\n    uStack16 = 0xffffffff;\n    piVar1 = uStack8 + -4;\n    LOCK();\n    iVar2 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar2 == 1 || iVar2 + -1 < 0) {\n        (**(**(uStack8 + -0x10) + 4))(uStack8 + -0x10);\n    }\n    *in_FS_OFFSET = iStack24;\n    return;\n}\n",
        "token_count": 1064
    },
    "00404540": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00404540(int32_t param_1)\n\n{\n    int32_t **ppiVar1;\n    uint32_t uVar2;\n    int32_t *piVar3;\n    int32_t **ppiVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint uVar7;\n    int32_t iVar8;\n    int32_t unaff_ESI;\n    int32_t **in_FS_OFFSET;\n    int32_t unaff_retaddr;\n    uchar auStack20 [4];\n    uint uStack16;\n    int32_t *piStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack8 = 0x43e128;\n    piStack12 = *in_FS_OFFSET;\n    uVar2 = *0x45060c ^ &stack0xffffffdc;\n    *in_FS_OFFSET = &piStack12;\n    uStack4 = 0;\n    piVar3 = fcn.0041a118(uVar2);\n    if (piVar3 == NULL) {\n        piVar3 = fcn.00401090(0x80004005);\n    }\n    ppiVar4 = (**(*piVar3 + 0xc))();\n    ppiVar1 = ppiVar4 + 4;\n    uStack8 = CONCAT31(uStack8._1_3_, 1);\n    piVar3 = fcn.0041a118();\n    if (piVar3 == NULL) {\n        piVar3 = fcn.00401090(0x80004005);\n    }\n    iVar5 = (**(*piVar3 + 0xc))();\n    iVar5 = iVar5 + 0x10;\n    uStack8 = CONCAT31(uStack8._1_3_, 2);\n    iVar8 = iVar5;\n    iVar6 = fcn.00428ef6(*(param_1 + 4), 0x5c);\n    if ((iVar6 != 0) && (iVar6 = iVar6 - *(param_1 + 4),  iVar6 != -1)) {\n        uVar7 = fcn.00401cb0(auStack20, iVar6);\n        uStack16 = CONCAT31(uStack16._1_3_, 3);\n        fcn.00402100(uVar7);\n        auStack20[0] = 2;\n        piVar3 = unaff_ESI + -4;\n        LOCK();\n        iVar6 = *piVar3;\n        *piVar3 = *piVar3 + -1;\n        iVar5 = iVar8;\n        if (iVar6 == 1 || iVar6 + -1 < 0) {\n            (**(**(unaff_ESI + -0x10) + 4))(unaff_ESI + -0x10);\n            iVar5 = iVar8;\n        }\n        fcn.00401f60(0x441978);\n    }\n    iVar8 = fcn.00428ef6(unaff_retaddr, 0x5c);\n    if ((iVar8 != 0) && (iVar8 - unaff_retaddr != -1)) {\n        uVar7 = fcn.00401cb0(auStack20, iVar8 - unaff_retaddr);\n        uStack16 = CONCAT31(uStack16._1_3_, 4);\n        fcn.00402100(uVar7);\n        auStack20[0] = 2;\n        piVar3 = unaff_ESI + -4;\n        LOCK();\n        iVar8 = *piVar3;\n        *piVar3 = *piVar3 + -1;\n        if (iVar8 == 1 || iVar8 + -1 < 0) {\n            (**(**(unaff_ESI + -0x10) + 4))(unaff_ESI + -0x10);\n        }\n        uVar7 = 0;\n        iVar8 = fcn.00429af8(ppiVar1, 0);\n        if (iVar8 == 0) {\n            if (ppiVar1 == NULL) {\n                fcn.00401090(uVar7, 0x80004005);\n            }\n            iVar8 = fcn.004299d5(iVar5, ppiVar1);\n            if (iVar8 != 0) {\n                (*_sym.imp.KERNEL32.dll_RemoveDirectoryA)(ppiVar1);\n            }\n        }\n    }\n    uStack8._0_1_ = 1;\n    piVar3 = iVar5 + -4;\n    LOCK();\n    iVar8 = *piVar3;\n    *piVar3 = *piVar3 + -1;\n    if (iVar8 + -1 < 1) {\n        (**(**(iVar5 + -0x10) + 4))(iVar5 + -0x10);\n    }\n    uStack8 = uStack8._1_3_ << 8;\n    ppiVar1 = ppiVar4 + 3;\n    LOCK();\n    piVar3 = *ppiVar1;\n    *ppiVar1 = *ppiVar1 + -1;\n    if (piVar3 + -1 < 1) {\n        (**(**ppiVar4 + 4))(ppiVar4);\n    }\n    uStack8 = 0xffffffff;\n    piVar3 = unaff_retaddr + -4;\n    LOCK();\n    iVar5 = *piVar3;\n    *piVar3 = *piVar3 + -1;\n    if (iVar5 == 1 || iVar5 + -1 < 0) {\n        (**(**(unaff_retaddr + -0x10) + 4))(unaff_retaddr + -0x10);\n    }\n    *in_FS_OFFSET = uStack16;\n    return;\n}\n",
        "token_count": 1243
    },
    "004049f0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t ** fcn.004049f0(int32_t param_1, int32_t param_2)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uchar uVar3;\n    int32_t *piVar4;\n    int32_t **ppiVar5;\n    int32_t **ppiVar6;\n    int32_t **ppiVar7;\n    int32_t iVar8;\n    uint *puVar9;\n    int32_t iVar10;\n    uint uVar11;\n    int32_t iVar12;\n    int32_t **unaff_EBP;\n    int32_t unaff_ESI;\n    int32_t *in_FS_OFFSET;\n    int32_t **unaff_retaddr;\n    int32_t in_stack_ffffff8c;\n    uchar *puVar13;\n    int32_t in_stack_ffffff90;\n    int32_t **ppiVar14;\n    int32_t **ppiStack108;\n    uchar *puStack104;\n    int32_t **ppiStack100;\n    uint uStack96;\n    uchar *puVar15;\n    uchar *puStack84;\n    uint uStack80;\n    uint uStack76;\n    uint uStack72;\n    int32_t **arg_8h;\n    uint uStack52;\n    uint uStack48;\n    int32_t **ppiStack44;\n    uint uStack40;\n    uchar auStack36 [4];\n    int32_t **ppiStack32;\n    uint uStack28;\n    uchar uStack24;\n    int32_t iStack16;\n    int32_t iStack12;\n    uint uStack8;\n    int32_t iStack4;\n    \n    uStack8 = 0x43e268;\n    iStack12 = *in_FS_OFFSET;\n    uStack72 = *0x45060c ^ &stack0xffffffbc;\n    *in_FS_OFFSET = &stack0xfffffff4;\n    iStack16 = 0;\n    iStack4 = 0;\n    uStack76 = 0x404a26;\n    piVar4 = fcn.0041a118();\n    if (piVar4 == NULL) {\n        uStack76 = -0x7fffbffb;\n        uStack80 = 0x404a3b;\n        piVar4 = fcn.00401090();\n    }\n    uStack80 = 0x404a44;\n    uStack48 = (**(*piVar4 + 0xc))();\n    uStack48 = uStack48 + 0x10;\n    uStack8 = CONCAT31(uStack8._1_3_, 1);\n    uStack80 = 0x404a55;\n    piVar4 = fcn.0041a118();\n    if (piVar4 == NULL) {\n        uStack80 = 0x80004005;\n        puStack84 = 0x404a6a;\n        piVar4 = fcn.00401090();\n    }\n    uStack80 = 0x404a73;\n    uStack52 = (**(*piVar4 + 0xc))();\n    uStack52 = uStack52 + 0x10;\n    uStack8 = CONCAT31(uStack8._1_3_, 2);\n    uStack80 = 0x404a84;\n    piVar4 = fcn.0041a118();\n    if (piVar4 == NULL) {\n        uStack80 = 0x80004005;\n        puStack84 = 0x404a99;\n        piVar4 = fcn.00401090();\n    }\n    uStack80 = 0x404aa2;\n    ppiVar5 = (**(*piVar4 + 0xc))();\n    ppiStack44 = ppiVar5 + 4;\n    uStack8 = CONCAT31(uStack8._1_3_, 3);\n    uStack80 = 0x404ab3;\n    piVar4 = fcn.0041a118();\n    if (piVar4 == NULL) {\n        uStack80 = 0x80004005;\n        puStack84 = 0x404ac8;\n        piVar4 = fcn.00401090();\n    }\n    uStack80 = 0x404ad1;\n    ppiVar6 = (**(*piVar4 + 0xc))();\n    arg_8h = ppiVar6 + 4;\n    uStack80 = param_1 + -0x10;\n    uStack8._0_1_ = 4;\n    puStack84 = 0x404aea;\n    ppiVar7 = fcn.004016b0();\n    uStack40 = ppiVar7 + 4;\n    uStack8._0_1_ = 5;\n    uVar3 = uStack8;\n    uStack8._0_1_ = 5;\n    if (*(param_1 + -0xc) <= param_2) {\n        uStack80 = param_1 + -0x10;\n        puStack84 = 0x404b13;\n        ppiStack32 = unaff_retaddr;\n        iVar8 = fcn.004016b0();\n        *ppiStack32 = iVar8 + 0x10;\n        uStack8._0_1_ = 4;\n        ppiVar14 = ppiVar7 + 3;\n        LOCK();\n        piVar4 = *ppiVar14;\n        *ppiVar14 = *ppiVar14 + -1;\n        if (piVar4 + -1 < 1) {\n            puStack84 = 0x404b40;\n            uStack80 = ppiVar7;\n            (**(**ppiVar7 + 4))();\n        }\n        uStack8 = CONCAT31(uStack8._1_3_, 3);\n        ppiVar7 = ppiVar6 + 3;\n        LOCK();\n        piVar4 = *ppiVar7;\n        *ppiVar7 = *ppiVar7 + -1;\n        if (piVar4 + -1 < 1) {\n            puStack84 = 0x404b61;\n            uStack80 = ppiVar6;\n            (**(**ppiVar6 + 4))();\n        }\n        ppiVar6 = ppiVar5 + 3;\n        LOCK();\n        piVar4 = *ppiVar6;\n        *ppiVar6 = *ppiVar6 + -1;\n        if (piVar4 + -1 < 1) {\n            (**(**ppiVar5 + 4))(ppiVar5);\n        }\n        piVar4 = in_stack_ffffff90 + -4;\n        LOCK();\n        iVar8 = *piVar4;\n        *piVar4 = *piVar4 + -1;\n        if (iVar8 + -1 < 1) {\n            (**(**(in_stack_ffffff90 + -0x10) + 4))(in_stack_ffffff90 + -0x10);\n        }\n        ppiVar5 = ppiStack108 + -1;\n        LOCK();\n        piVar4 = *ppiVar5;\n        *ppiVar5 = *ppiVar5 + -1;\n        if (piVar4 + -1 < 1) {\n            (**(*ppiStack108[-4] + 4))(ppiStack108 + -4);\n        }\n        ppiVar5 = arg_8h + -1;\n        LOCK();\n        piVar4 = *ppiVar5;\n        *ppiVar5 = *ppiVar5 + -1;\n        if (piVar4 == 0x1 || piVar4 + -1 < 0) {\n            (**(*arg_8h[-4] + 4))(arg_8h + -4);\n        }\n        goto code_r0x004053df;\n    }\n    uStack80 = 0x2;\n    puStack84 = &stack0xffffffdc;\n    uStack8._0_1_ = uVar3;\n    puVar9 = fcn.00401cb0();\n    uStack96 = 0x404c1a;\n    iVar8 = fcn.004288e4(*puVar9, 0x44197c);\n    ppiVar5 = ppiStack44 + -1;\n    LOCK();\n    piVar4 = *ppiVar5;\n    *ppiVar5 = *ppiVar5 + -1;\n    if (piVar4 == 0x1 || piVar4 + -1 < 0) {\n        (**(*ppiStack44[-4] + 4))();\n    }\n    if (iVar8 == 0) {\n        iVar8 = *(iStack4 + -0xc) + -2;\n        puVar15 = &stack0xffffffd4;\n        uStack96 = 0x404c63;\n        uStack96 = fcn.00401c30();\n        uStack24 = 6;\n        ppiStack100 = 0x404c72;\n        fcn.00402100();\n        uStack28 = CONCAT31(uStack28._1_3_, 5);\n        ppiVar5 = arg_8h + -1;\n        LOCK();\n        piVar4 = *ppiVar5;\n        *ppiVar5 = *ppiVar5 + -1;\n        if (piVar4 == 0x1 || piVar4 + -1 < 0) {\n            puStack104 = 0x404c97;\n            ppiStack100 = arg_8h + -4;\n            (**(*arg_8h[-4] + 4))();\n        }\n        if (((-1 < arg_8h[-3]) && (iVar10 = fcn.00428e23(arg_8h, 0x441978),  iVar10 != 0)) && (iVar10 - arg_8h != -1)) {\n            uVar11 = fcn.00401cb0(&stack0xffffffa4, iVar10 - arg_8h);\n            uStack76._0_1_ = 7;\n            uVar11 = fcn.00401e10(&stack0xffffff98, 0x44197c, uVar11);\n            uStack76 = CONCAT31(uStack76._1_3_, 8);\n            fcn.00402100(uVar11);\n            uStack80._0_1_ = 7;\n            ppiVar5 = ppiStack108 + -1;\n            LOCK();\n            piVar4 = *ppiVar5;\n            *ppiVar5 = *ppiVar5 + -1;\n            if (piVar4 + -1 < 1) {\n                (**(*ppiStack108[-4] + 4))(ppiStack108 + -4);\n            }\n            uStack80 = CONCAT31(uStack80._1_3_, 5);\n            piVar4 = puStack104 + -4;\n            LOCK();\n            iVar10 = *piVar4;\n            *piVar4 = *piVar4 + -1;\n            if (iVar10 == 1 || iVar10 + -1 < 0) {\n                (**(**(puStack104 + -0x10) + 4))(puStack104 + -0x10);\n            }\n            puStack104 = &stack0xffffff98;\n            ppiStack108 = fcn.00401c30();\n            iVar10 = CONCAT31(iVar8 >> 8, 9);\n            goto code_r0x00404eb9;\n        }\n        ppiStack32 = unaff_EBP;\n        iVar8 = fcn.004016b0(ppiVar7);\n        *ppiStack32 = iVar8 + 0x10;\n        ppiVar5 = ppiVar7 + 3;\n        LOCK();\n        piVar4 = *ppiVar5;\n        *ppiVar5 = *ppiVar5 + -1;\n        if (piVar4 + -1 < 1) {\n            (**(**ppiVar7 + 4))(ppiVar7);\n        }\n        piVar4 = in_stack_ffffff8c + -4;\n        LOCK();\n        iVar8 = *piVar4;\n        *piVar4 = *piVar4 + -1;\n        if (iVar8 + -1 < 1) {\n            (**(**(in_stack_ffffff8c + -0x10) + 4))(in_stack_ffffff8c + -0x10);\n        }\n        piVar4 = puStack104 + -4;\n        LOCK();\n        iVar8 = *piVar4;\n        *piVar4 = *piVar4 + -1;\n        if (iVar8 + -1 < 1) {\n            (**(**(puStack104 + -0x10) + 4))(puStack104 + -0x10);\n        }\n        piVar4 = in_stack_ffffff90 + -4;\n        LOCK();\n        iVar8 = *piVar4;\n        *piVar4 = *piVar4 + -1;\n        ppiVar5 = ppiStack108;\n        if (iVar8 + -1 < 1) {\n            (**(**(in_stack_ffffff90 + -0x10) + 4))(in_stack_ffffff90 + -0x10);\n            ppiVar5 = ppiStack108;\n        }\n    }\n    else {\n        iVar10 = 2;\n        puVar15 = &stack0xffffffd8;\n        uStack96 = 0x404e67;\n        uStack96 = fcn.00401cb0();\n        uStack24 = 10;\n        ppiStack100 = 0x404e76;\n        fcn.00402100();\n        ppiStack100 = uStack52 + -0x10;\n        uStack28 = CONCAT31(uStack28._1_3_, 5);\n        piVar4 = uStack52 + -4;\n        LOCK();\n        iVar8 = *piVar4;\n        *piVar4 = *piVar4 + -1;\n        if (iVar8 == 1 || iVar8 + -1 < 0) {\n            puStack104 = 0x404e9b;\n            (**(**ppiStack100 + 4))();\n        }\n        ppiStack100 = *(iStack16 + -0xc) + -3;\n        puStack104 = &stack0xffffffcc;\n        ppiStack108 = 0x404eb4;\n        ppiStack108 = fcn.00401c30();\n        auStack36[0] = 0xb;\ncode_r0x00404eb9:\n        fcn.00402100();\n        piVar4 = unaff_ESI + -4;\n        uStack40 = CONCAT31(uStack40._1_3_, 5);\n        LOCK();\n        iVar8 = *piVar4;\n        *piVar4 = *piVar4 + -1;\n        if (iVar8 == 1 || iVar8 + -1 < 0) {\n            (**(**(unaff_ESI + -0x10) + 4))();\n        }\n        ppiVar5 = uStack80;\n        piVar4 = uStack80[-3];\n        iVar8 = fcn.00428ef6(uStack28, 0x5c);\n        if ((iVar8 == 0) || (iVar8 = iVar8 - uStack28,  iVar8 == -1)) {\n            ppiVar14 = ppiVar7;\n            iVar8 = fcn.004016b0();\n            *ppiStack32 = iVar8 + 0x10;\n            uStack40._0_1_ = 4;\n            ppiVar6 = ppiVar7 + 3;\n            LOCK();\n            piVar4 = *ppiVar6;\n            *ppiVar6 = *ppiVar6 + -1;\n            if (piVar4 == 0x1 || piVar4 + -1 < 0) {\n                (**(**ppiVar7 + 4))();\n                ppiVar14 = ppiVar7;\n            }\n            ppiVar6 = iVar10 + -0x10;\n            uStack40 = CONCAT31(uStack40._1_3_, 3);\n            piVar4 = iVar10 + -4;\n            LOCK();\n            iVar8 = *piVar4;\n            *piVar4 = *piVar4 + -1;\n            if (iVar8 + -1 < 1) {\n                (**(**ppiVar6 + 4))();\n                ppiVar14 = ppiVar6;\n            }\n            ppiVar6 = puStack104 + -0x10;\n            piVar4 = puStack104 + -4;\n            LOCK();\n            iVar8 = *piVar4;\n            *piVar4 = *piVar4 + -1;\n            if (iVar8 + -1 < 1) {\n                (**(**ppiVar6 + 4))(ppiVar6);\n            }\n        }\n        else {\n            iVar12 = (*(uStack28 + -0xc) - iVar8) + -1;\n            puVar13 = &stack0xffffffc0;\n            uVar11 = fcn.00401c30();\n            uStack48 = CONCAT31(uStack48._1_3_, 0xc);\n            fcn.00402100(uVar11);\n            uStack52 = CONCAT31(uStack52._1_3_, 5);\n            piVar1 = uStack76 + -4;\n            LOCK();\n            iVar2 = *piVar1;\n            *piVar1 = *piVar1 + -1;\n            if (iVar2 == 1 || iVar2 + -1 < 0) {\n                (**(**(uStack76 + -0x10) + 4))(uStack76 + -0x10);\n            }\n            uVar11 = fcn.00401cb0(&stack0xffffffb4, iVar8);\n            ppiVar6 = 0xd;\n            fcn.00402100(uVar11);\n            piVar1 = iVar10 + -4;\n            LOCK();\n            iVar8 = *piVar1;\n            *piVar1 = *piVar1 + -1;\n            if (iVar8 == 1 || iVar8 + -1 < 0) {\n                (**(**(iVar10 + -0x10) + 4))(iVar10 + -0x10);\n            }\n            ppiVar14 = ppiStack108;\n            if (ppiStack108[-3] + 5 + piVar4 < uStack48) {\n                iVar8 = fcn.00428ef6(uStack52, 0x5c);\n                ppiStack32 = ppiVar6;\n                if (iVar8 != 0) {\n                    for (iVar8 = iVar8 - uStack52; ppiStack32 = ppiVar6,  iVar8 != -1; iVar8 = iVar8 - uStack52) {\n                        uVar11 = fcn.00401cb0(&stack0xffffffa8, iVar8);\n                        uStack72 = CONCAT31(uStack72._1_3_, 0xf);\n                        fcn.00402100();\n                        uStack76 = CONCAT31(uStack76._1_3_, 5);\n                        ppiVar5 = ppiStack100 + -1;\n                        LOCK();\n                        piVar4 = *ppiVar5;\n                        *ppiVar5 = *ppiVar5 + -1;\n                        ppiStack32 = arg_8h;\n                        if (piVar4 == 0x1 || piVar4 + -1 < 0) {\n                            (**(*ppiStack100[-4] + 4))(ppiStack100 + -4);\n                            ppiStack32 = arg_8h;\n                        }\n                        uVar11 = fcn.00401d30(&stack0xffffffb8, &stack0xffffff9c, 0x441978, uVar11);\n                        uVar11 = fcn.00402000(&stack0xffffffb4, uVar11, &stack0xffffffd0);\n                        uVar11 = fcn.00401d30(&stack0xffffffb0, uVar11, \"\\\\...\\\\\");\n                        uVar11 = fcn.00402000(&stack0xffffffa8, uVar11, &stack0xffffff98);\n                        ppiVar6 = 0x13;\n                        fcn.00402100(uVar11);\n                        piVar4 = puVar15 + -4;\n                        LOCK();\n                        iVar8 = *piVar4;\n                        *piVar4 = *piVar4 + -1;\n                        if (iVar8 + -1 < 1) {\n                            (**(**(puVar15 + -0x10) + 4))(puVar15 + -0x10);\n                        }\n                        piVar4 = puStack84 + -4;\n                        LOCK();\n                        iVar8 = *piVar4;\n                        *piVar4 = *piVar4 + -1;\n                        if (iVar8 + -1 < 1) {\n                            (**(**(puStack84 + -0x10) + 4))(puStack84 + -0x10);\n                        }\n                        ppiVar5 = uStack80 + -1;\n                        LOCK();\n                        piVar4 = *ppiVar5;\n                        *ppiVar5 = *ppiVar5 + -1;\n                        if (piVar4 + -1 < 1) {\n                            (**(*uStack80[-4] + 4))(uStack80 + -4);\n                        }\n                        piVar4 = uStack76 + -4;\n                        LOCK();\n                        iVar8 = *piVar4;\n                        *piVar4 = *piVar4 + -1;\n                        if (iVar8 == 1 || iVar8 + -1 < 0) {\n                            (**(**(uStack76 + -0x10) + 4))(uStack76 + -0x10);\n                        }\n                        if (*(iVar12 + -0xc) == uStack48 || *(iVar12 + -0xc) < uStack48) {\n                            fcn.004018c0(&stack0xffffff90);\n                            goto code_r0x004053a7;\n                        }\n                        arg_8h = ppiStack32;\n                        iVar8 = fcn.00428ef6(uStack52, 0x5c);\n                        ppiStack32 = ppiVar6;\n                        if (iVar8 == 0) break;\n                    }\n                }\n                uVar11 = fcn.00401d30(&stack0xffffffa8, &stack0xffffff98, 0x441978);\n                uVar11 = fcn.00402000(&stack0xffffffac, uVar11, &stack0xffffffcc);\n                uVar11 = fcn.00401d30(&stack0xffffffb0, uVar11, \"\\\\...\\\\\");\n                uVar11 = fcn.00402000(&stack0xffffffb4, uVar11, &stack0xffffff94);\n                fcn.00402100(uVar11);\n                fcn.004015e0();\n                fcn.004015e0();\n                fcn.004015e0();\n                fcn.004015e0();\n                if (*(puVar13 + -0xc) == uStack52 || *(puVar13 + -0xc) < uStack52) {\n                    fcn.004018c0(&stack0xffffff8c);\n                }\n                else {\n                    uVar11 = fcn.00401d30(&stack0xffffffb0, &stack0xffffff94, \"\\\\...\\\\\");\n                    fcn.00402000(ppiStack32, uVar11, &stack0xffffff90);\n                    fcn.004015e0();\n                }\ncode_r0x004053a7:\n                fcn.004015e0();\n                fcn.004015e0();\n                fcn.004015e0();\n                fcn.004015e0();\n                fcn.004015e0();\n                fcn.004015e0();\n                goto code_r0x004053df;\n            }\n            ppiStack32 = arg_8h;\n            uVar11 = fcn.00401d30(&stack0xffffffd0, &stack0xffffff98, \"\\\\...\\\\\");\n            arg_8h = ppiStack32;\n            fcn.00402000(ppiStack32, uVar11, &stack0xffffff94);\n            piVar4 = uStack48 + -4;\n            LOCK();\n            iVar8 = *piVar4;\n            *piVar4 = *piVar4 + -1;\n            if (iVar8 == 1 || iVar8 + -1 < 0) {\n                (**(**(uStack48 + -0x10) + 4))(uStack48 + -0x10);\n            }\n            ppiVar6 = ppiVar7 + 3;\n            LOCK();\n            piVar4 = *ppiVar6;\n            *ppiVar6 = *ppiVar6 + -1;\n            if (piVar4 + -1 < 1) {\n                (**(**ppiVar7 + 4))(ppiVar7);\n            }\n            piVar4 = puVar13 + -4;\n            LOCK();\n            iVar8 = *piVar4;\n            *piVar4 = *piVar4 + -1;\n            if (iVar8 + -1 < 1) {\n                (**(**(puVar13 + -0x10) + 4))(puVar13 + -0x10);\n            }\n            ppiVar6 = puStack104 + -0x10;\n            piVar4 = puStack104 + -4;\n            LOCK();\n            iVar8 = *piVar4;\n            *piVar4 = *piVar4 + -1;\n            if (iVar8 == 1 || iVar8 + -1 < 0) {\n                (**(**ppiVar6 + 4))(ppiVar6);\n            }\n        }\n        ppiVar6 = ppiVar14 + -1;\n        LOCK();\n        piVar4 = *ppiVar6;\n        *ppiVar6 = *ppiVar6 + -1;\n        if (piVar4 == 0x1 || piVar4 + -1 < 0) {\n            (**(*ppiVar14[-4] + 4))(ppiVar14 + -4);\n        }\n    }\n    ppiVar6 = ppiVar5 + -1;\n    LOCK();\n    piVar4 = *ppiVar6;\n    *ppiVar6 = *ppiVar6 + -1;\n    if (piVar4 + -1 < 1) {\n        (**(*ppiVar5[-4] + 4))(ppiVar5 + -4);\n    }\n    ppiVar5 = arg_8h + -1;\n    LOCK();\n    piVar4 = *ppiVar5;\n    *ppiVar5 = *ppiVar5 + -1;\n    if (piVar4 == 0x1 || piVar4 + -1 < 0) {\n        (**(*arg_8h[-4] + 4))(arg_8h + -4);\n    }\ncode_r0x004053df:\n    *in_FS_OFFSET = uStack76;\n    return ppiStack32;\n}\n",
        "token_count": 5835
    },
    "0040a850": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.0040a850(int32_t *param_1)\n\n{\n    int32_t **ppiVar1;\n    char cVar2;\n    code *pcVar3;\n    uint32_t uVar4;\n    int32_t *piVar5;\n    int32_t iVar6;\n    uint *puVar7;\n    int32_t iVar8;\n    int32_t **in_FS_OFFSET;\n    int32_t **arg_8h;\n    int32_t **ppiVar9;\n    uint uStack288;\n    uint uStack284;\n    int32_t *apiStack280 [60];\n    int32_t *piStack40;\n    uchar uStack32;\n    uint32_t var_10h;\n    int32_t *piStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack8 = 0x43e86d;\n    piStack12 = *in_FS_OFFSET;\n    var_10h = *0x45060c ^ &uStack288;\n    uVar4 = *0x45060c ^ &stack0xfffffed0;\n    *in_FS_OFFSET = &piStack12;\n    iVar8 = 0;\n    uStack4 = 0;\n    apiStack280[0] = param_1;\n    uStack284 = 0;\n    piVar5 = fcn.0041a118(uVar4);\n    if (piVar5 == NULL) {\n        piVar5 = fcn.00401090(0x80004005);\n    }\n    iVar6 = (**(*piVar5 + 0xc))();\n    *param_1 = iVar6 + 0x10;\n    uStack8 = 0;\n    uStack288 = 1;\n    piVar5 = fcn.0041a118();\n    if (piVar5 == NULL) {\n        piVar5 = fcn.00401090(0x80004005);\n    }\n    (**(*piVar5 + 0xc))();\n    uStack8 = 1;\n    fcn.0041a00a();\n    fcn.0041d96f();\n    arg_8h = apiStack280;\n    (*_sym.imp.KERNEL32.dll_GetTempPathA)(0x104);\n    puVar7 = &uStack288;\n    do {\n        cVar2 = *puVar7;\n        puVar7 = puVar7 + 1;\n    } while (cVar2 != '\\0');\n    fcn.00401aa0(&uStack288, puVar7 - (&uStack288 + 1));\n    fcn.00401f60(0x441978);\n    iVar6 = fcn.0041a00a();\n    ppiVar9 = arg_8h;\n    pcVar3 = _sym.imp.KERNEL32.dll_GetFileAttributesA;\n    if (*(*(*(iVar6 + 4) + 0xa4) + -0xc) != 0) {\n        iVar6 = fcn.0041a00a();\n        fcn.00402100(*(iVar6 + 4) + 0xa4);\n        ppiVar9 = arg_8h;\n        pcVar3 = _sym.imp.KERNEL32.dll_GetFileAttributesA;\n    }\n    while( true ) {\n        fcn.004061c0(param_1, \"%s\\\\ir_ext_temp_%d\", ppiVar9, iVar8);\n        iVar6 = (*pcVar3)(*param_1);\n        if (iVar6 == -1) break;\n        iVar8 = iVar8 + 1;\n    }\n    fcn.0041a00a();\n    fcn.0041d984();\n    uStack32 = 0;\n    ppiVar1 = ppiVar9 + -1;\n    LOCK();\n    piVar5 = *ppiVar1;\n    *ppiVar1 = *ppiVar1 + -1;\n    if (piVar5 == 0x1 || piVar5 + -1 < 0) {\n        (**(*ppiVar9[-4] + 4))(ppiVar9 + -4);\n    }\n    *in_FS_OFFSET = piStack40;\n    fcn.004294b3(arg_8h);\n    return;\n}\n",
        "token_count": 910
    },
    "0041b597": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1",
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041b597(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint arg_8h;\n    bool bVar2;\n    uint arg_ch;\n    \n    bVar2 = false;\n    if (*(param_1 + 4) != -1) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_CloseHandle)(*(param_1 + 4));\n        bVar2 = iVar1 == 0;\n    }\n    *(param_1 + 4) = 0xffffffff;\n    *(param_1 + 8) = 0;\n    fcn.00401600();\n    if (bVar2) {\n        arg_ch = *(param_1 + 0xc);\n        arg_8h = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        fcn.00424dea(arg_8h, arg_ch);\n    }\n    return;\n}\n",
        "token_count": 197
    },
    "0040d380": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t fcn.0040d380(int32_t param_1, int32_t *param_2)\n\n{\n    uint arg_ch;\n    code *pcVar1;\n    int32_t arg_8h;\n    int32_t iVar2;\n    \n    arg_ch = *(param_1 + 4);\n    iVar2 = *(param_1 + 8);\n    if ((1U - *(*param_2 + -4) | *(*param_2 + -8) - iVar2) < 0) {\n        fcn.00401660(iVar2);\n    }\n    fcn.0042aaa0(*param_2, arg_ch, iVar2);\n    arg_8h = iVar2;\n    if (iVar2 == -1) {\n        arg_8h = *param_2;\n        if (arg_8h != 0) {\n            arg_8h = fcn.00428f0d(arg_8h, *(arg_8h + -8));\n            goto code_r0x0040d3d6;\n        }\n    }\n    else {\ncode_r0x0040d3d6:\n        if (arg_8h < 0) goto code_r0x0040d3f0;\n    }\n    if (arg_8h <= *(*param_2 + -8)) {\n        *(*param_2 + -0xc) = arg_8h;\n        *(arg_8h + *param_2) = 0;\n        return iVar2;\n    }\ncode_r0x0040d3f0:\n    fcn.00401090(0x80070057);\n    pcVar1 = swi(3);\n    iVar2 = (*pcVar1)();\n    return iVar2;\n}\n",
        "token_count": 376
    },
    "00411370": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint32_t __thiscall fcn.00411370(int32_t param_1, uint param_2)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = fcn.0040c2f0(param_2, param_1 + 0x38);\n    return uVar1 & 0xffffff00 | uVar1 != 0xffffffff;\n}\n",
        "token_count": 82
    },
    "00412120": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nbool fcn.00412120(uint param_1, uint32_t param_2, uint32_t param_3)\n\n{\n    int32_t iVar1;\n    ulong uVar2;\n    ulong uStack16;\n    uint32_t uStack8;\n    uint32_t uStack4;\n    \n    uStack16 = fcn.0042907c(0);\n    if ((param_2 & param_3) == 0xffffffff) {\n        uVar2 = fcn.0042907c(0);\n        uStack4 = uVar2 >> 0x20;\n        param_2 = uVar2;\n    }\n    else {\n        uStack4 = param_3;\n    }\n    uStack8 = param_2;\n    iVar1 = fcn.0042c79b(param_1, &uStack16);\n    return iVar1 == 0;\n}\n",
        "token_count": 199
    },
    "00419550": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00419550(uint *arg_8h, uint32_t arg_ch, uint32_t arg_10h)\n\n{\n    if (arg_ch * arg_10h >> 0x20 != 0) {\n        return 0x80070057;\n    }\n    *arg_8h = arg_ch * arg_10h;\n    return 0;\n}\n",
        "token_count": 84
    },
    "00419a57": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.00419a57(void)\n\n{\n    uint *puVar1;\n    code *pcVar2;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.0042cbc6(4);\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *extraout_ECX = vtable.AFX_MODULE_STATE.0;\n    puVar1 = extraout_ECX[0x12];\n    *(unaff_EBP + -4) = 1;\n    if (puVar1 != NULL) {\n        (***puVar1)(1);\n    }\n    if (extraout_ECX[0x1c] != NULL) {\n        (**(*extraout_ECX[0x1c] + 0xc))(extraout_ECX + 0x13);\n        if (extraout_ECX[0x1c] != NULL) {\n            (**(*extraout_ECX[0x1c] + 4))(1);\n        }\n    }\n    if (*extraout_ECX[0x1e] != NULL) {\n        (****extraout_ECX[0x1e])(1);\n    }\n    if (*(extraout_ECX[0x1e] + 4) != NULL) {\n        (****(extraout_ECX[0x1e] + 4))(1);\n    }\n    fcn.00419316(extraout_ECX[0x1e]);\n    pcVar2 = extraout_ECX[0x20];\n    if ((pcVar2 != NULL) && (pcVar2 != 0xffffffff)) {\n        fcn.00419712(pcVar2);\n        extraout_ECX[0x20] = 0xffffffff;\n    }\n    *(unaff_EBP + -4) = 0;\n    fcn.00425aed();\n    fcn.004011c0();\n    fcn.0042cc9e();\n    return;\n}\n",
        "token_count": 454
    },
    "0041b380": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nulong __cdecl fcn.0041b380(uint lDistanceToMove, uint arg_ch, uint dwMoveMethod)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint arg_8h;\n    int32_t in_ECX;\n    uint arg_ch_00;\n    uint var_8h;\n    uint lpDistanceToMoveHigh;\n    \n    lpDistanceToMoveHigh = arg_ch;\n    iVar2 = (*_sym.imp.KERNEL32.dll_SetFilePointer)(*(in_ECX + 4), lDistanceToMove, &lpDistanceToMoveHigh, dwMoveMethod)\n    ;\n    pcVar1 = _sym.imp.KERNEL32.dll_GetLastError;\n    if ((iVar2 == -1) && (iVar3 = (*_sym.imp.KERNEL32.dll_GetLastError)(),  iVar3 != 0)) {\n        arg_ch_00 = *(in_ECX + 0xc);\n        arg_8h = (*pcVar1)();\n        fcn.00424dea(arg_8h, arg_ch_00);\n    }\n    return CONCAT44(lpDistanceToMoveHigh, iVar2);\n}\n",
        "token_count": 246
    },
    "0041b6d8": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.0041b6d8(void)\n\n{\n    code *pcVar1;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_21ch;\n    uint var_4h;\n    \n    fcn.0042cc65(0x214);\n    *(unaff_EBP + -0x21c) = extraout_ECX;\n    *extraout_ECX = vtable.CFile.0;\n    pcVar1 = extraout_ECX[1];\n    *(unaff_EBP + -4) = 0;\n    *(unaff_EBP + -4) = 1;\n    if ((pcVar1 != 0xffffffff) && (extraout_ECX[2] != NULL)) {\n        fcn.0041b597();\n    }\n    fcn.004011c0();\n    fcn.0042ccc1();\n    return;\n}\n",
        "token_count": 196
    },
    "0041c13e": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_160h\n\nvoid __cdecl fcn.0041c13e(uint32_t arg_8h, int32_t Locale)\n\n{\n    uint uVar1;\n    uint *puVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    code *pcVar5;\n    uint in_ECX;\n    uint var_160h;\n    uint var_15ch;\n    uint var_120h;\n    uint32_t var_11ch;\n    uint pszPath;\n    uint32_t var_4h;\n    \n    var_4h = *0x45060c ^ &stack0xfffffffc;\n    var_11ch = arg_8h;\n    if (Locale == 0x800) {\n        uVar1 = fcn.0042cfbc(&var_120h, 4, 0x443da4);\n        fcn.00401000(uVar1);\n    }\n    else {\n        iVar4 = (*_sym.imp.KERNEL32.dll_GetLocaleInfoA)(Locale, 3, &var_120h, 4);\n        if (iVar4 == 0) goto code_r0x0041c281;\n    }\n    puVar2 = fcn.0042b75c();\n    uVar1 = *puVar2;\n    puVar2 = fcn.0042b75c();\n    *puVar2 = 0;\n    var_11ch = fcn.0042b840(&pszPath, 0x112, 0x111, in_ECX, var_11ch);\n    piVar3 = fcn.0042b75c();\n    if (*piVar3 == 0) {\n        puVar2 = fcn.0042b75c();\n        *puVar2 = uVar1;\n    }\n    else {\n        puVar2 = fcn.0042b75c();\n        fcn.0041962b(*puVar2);\n    }\n    if ((var_11ch != 0xffffffff) && (var_11ch < 0x112)) {\n        puVar2 = (*_sym.imp.SHLWAPI.dll_PathFindFileNameA)(&pszPath);\n        var_160h = 0x40;\n        fcn.00429510(&var_15ch, 0, 0x3c);\n        iVar4 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(\"KERNEL32\");\n        if ((iVar4 == 0) ||\n           ((pcVar5 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar4, \"FindActCtxSectionStringA\"),  pcVar5 == NULL ||\n            (iVar4 = (*pcVar5)(0, 0, 2, puVar2, &var_160h),  iVar4 == 0)))) {\n            puVar2 = &pszPath;\n        }\n        (*_sym.imp.KERNEL32.dll_LoadLibraryExA)(puVar2, 0, 0);\n    }\ncode_r0x0041c281:\n    fcn.004294b3(var_160h);\n    return;\n}\n",
        "token_count": 677
    },
    "0041ebdb": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __cdecl fcn.0041ebdb(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t arg_10h_00;\n    int32_t unaff_EBP;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.0042cbc6(4);\n    fcn.00401840();\n    *(unaff_EBP + -4) = 0;\n    fcn.00401fd0(*(unaff_EBP + 8));\n    arg_10h_00 = *(unaff_EBP + 0x10);\n    if (arg_10h_00 == -1) {\n        arg_10h_00 = *(unaff_EBP + 8);\n    }\n    fcn.0041eb8d(*(unaff_EBP + -0x10), *(unaff_EBP + 0xc), arg_10h_00);\n    fcn.004011c0();\n    fcn.0042cc9e();\n    return;\n}\n",
        "token_count": 257
    },
    "00423a57": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00423a57(uint16_t *arg_8h)\n\n{\n    code *pcVar1;\n    uint16_t uVar2;\n    int32_t iVar3;\n    int32_t in_ECX;\n    uint16_t *puVar4;\n    uint *puVar5;\n    uint var_34h;\n    uint var_30h;\n    uint16_t *var_2ch;\n    int32_t var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    pcVar1 = _sym.imp.USER32.dll_SendDlgItemMessageA;\n    var_4h = 1;\n    puVar4 = arg_8h;\n    var_8h = in_ECX;\n    if (arg_8h != NULL) {\n        do {\n            if (*puVar4 == 0) break;\n            var_ch = *puVar4;\n            uVar2 = puVar4[1];\n            var_10h = *(puVar4 + 2);\n            puVar4 = puVar4 + 4;\n            if (uVar2 == 0x1234) {\ncode_r0x00423ad1:\n                puVar5 = &var_30h;\n                for (iVar3 = 8; iVar3 != 0; iVar3 = iVar3 + -1) {\n                    *puVar5 = 0;\n                    puVar5 = puVar5 + 1;\n                }\n                var_30h = 0xffffffff;\n                var_34h = 1;\n                fcn.00403c70(puVar4);\n                var_2ch = arg_8h;\n                iVar3 = (*pcVar1)(*(var_8h + 0x20), var_ch & 0xffff, 0x401, 0, &var_34h);\n                if (iVar3 == -1) {\n                    var_4h = 0;\n                }\n                fcn.004011c0();\n            }\n            else if (uVar2 == 0x401) {\n                uVar2 = 0x180;\ncode_r0x00423b35:\n                iVar3 = (*pcVar1)(*(var_8h + 0x20), var_ch, uVar2, 0, puVar4);\n                if (iVar3 == -1) {\n                    var_4h = 0;\n                }\n            }\n            else {\n                if (uVar2 == 0x403) {\n                    uVar2 = 0x143;\n                }\n                if (uVar2 == 0x401) goto code_r0x00423ad1;\n                if ((uVar2 == 0x180) || (uVar2 == 0x143)) goto code_r0x00423b35;\n            }\n            puVar4 = puVar4 + var_10h;\n        } while (var_4h != 0);\n        if (var_4h == 0) {\n            return 0;\n        }\n    }\n    fcn.00421b03(*(var_8h + 0x20), 0x364, 0, 0, 0, 0);\n    return var_4h;\n}\n",
        "token_count": 709
    },
    "0042500b": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.0042500b(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, uint32_t arg_14h, uint32_t arg_18h, uint32_t arg_1ch, \n            uint arg_20h)\n\n{\n    uint *in_ECX;\n    int64_t iVar1;\n    uint32_t var_24h;\n    uint32_t var_20h;\n    uint32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint var_4h;\n    \n    if (0x76b < arg_8h) goto code_r0x00425029;\n    do {\n        do {\n            fcn.00401090();\ncode_r0x00425029:\n        } while ((((0xb < arg_ch - 1U) || (0x1e < arg_10h - 1U)) || (0x17 < arg_14h)) ||\n                ((0x3b < arg_18h || (0x3b < arg_1ch))));\n        var_24h = arg_1ch;\n        var_10h = arg_8h + -0x76c;\n        var_4h = arg_20h;\n        var_14h = arg_ch + -1;\n        var_20h = arg_18h;\n        var_1ch = arg_14h;\n        var_18h = arg_10h;\n        iVar1 = fcn.00428bf6(&var_24h);\n        *in_ECX = iVar1;\n        in_ECX[1] = iVar1 >> 0x20;\n    } while (iVar1 == -1);\n    return;\n}\n",
        "token_count": 391
    },
    "00425779": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.00425779(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    \n    param_1[5] = 0;\n    param_1[6] = 4;\n    param_1[1] = 0;\n    param_1[2] = 1;\n    param_1[3] = 0;\n    param_1[4] = 0;\n    iVar1 = (*_sym.imp.KERNEL32.dll_TlsAlloc)();\n    *param_1 = iVar1;\n    if (iVar1 == -1) {\n        fcn.00419415();\n    }\n    (*_sym.imp.KERNEL32.dll_InitializeCriticalSection)(param_1 + 7);\n    return param_1;\n}\n",
        "token_count": 168
    },
    "00425b26": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1",
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00425b26(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    int32_t arg_8h;\n    uint uVar2;\n    \n    arg_8h = param_1[5];\n    while (arg_8h != 0) {\n        iVar1 = *(arg_8h + 4);\n        fcn.00425970(arg_8h, 0);\n        arg_8h = iVar1;\n    }\n    if (*param_1 != -1) {\n        (*_sym.imp.KERNEL32.dll_TlsFree)(*param_1);\n    }\n    if (param_1[4] != 0) {\n        uVar2 = (*_sym.imp.KERNEL32.dll_GlobalHandle)(param_1[4]);\n        (*_sym.imp.KERNEL32.dll_GlobalUnlock)(uVar2);\n        (*_sym.imp.KERNEL32.dll_GlobalFree)(uVar2);\n    }\n    (*_sym.imp.KERNEL32.dll_DeleteCriticalSection)(param_1 + 7);\n    return;\n}\n",
        "token_count": 229
    },
    "00426115": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00426115(int32_t **arg_8h, int32_t *arg_ch, int32_t *arg_10h)\n\n{\n    int32_t **ppiVar1;\n    int32_t in_ECX;\n    int32_t extraout_ECX;\n    uint32_t uVar2;\n    int32_t *piVar3;\n    uint32_t uVar4;\n    int32_t *piVar5;\n    \n    piVar3 = *arg_8h;\n    if (piVar3 != NULL) {\n        if (piVar3 == 0xffffffff) {\n            uVar4 = 0;\n            if (*(in_ECX + 8) != 0) {\n                ppiVar1 = *(in_ECX + 4);\n                do {\n                    piVar3 = *ppiVar1;\n                    if (piVar3 != NULL) goto code_r0x00426149;\n                    uVar4 = uVar4 + 1;\n                    ppiVar1 = ppiVar1 + 1;\n                } while (uVar4 < *(in_ECX + 8));\n                fcn.0041944d();\n                in_ECX = extraout_ECX;\n            }\n        }\ncode_r0x00426149:\n        piVar5 = *piVar3;\n        if (piVar5 == NULL) {\n            uVar4 = *(in_ECX + 8);\n            uVar2 = (piVar3[1] >> 4) % uVar4 + 1;\n            if (uVar2 < uVar4) {\n                ppiVar1 = *(in_ECX + 4) + uVar2 * 4;\n                do {\n                    piVar5 = *ppiVar1;\n                    if (piVar5 != NULL) break;\n                    uVar2 = uVar2 + 1;\n                    ppiVar1 = ppiVar1 + 1;\n                } while (uVar2 < uVar4);\n            }\n        }\n        *arg_8h = piVar5;\n        *arg_ch = piVar3[1];\n        *arg_10h = piVar3[2];\n    }\n    return;\n}\n",
        "token_count": 469
    },
    "004281c6": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004281c6(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t arg_8h_00;\n    uint uVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    int32_t iVar3;\n    \n    arg_8h_00 = arg_8h;\n    iVar3 = 0;\n    if (-1 < arg_8h) goto code_r0x004281de;\n    do {\n        fcn.0041944d();\ncode_r0x004281de:\n        if (iVar3 <= arg_ch) {\n            *(in_ECX + 0x10) = arg_ch;\n        }\n        if (arg_8h_00 == iVar3) {\n            fcn.00419316(*(in_ECX + 4));\n            *(in_ECX + 0xc) = iVar3;\n            *(in_ECX + 8) = iVar3;\n            goto code_r0x004282ce;\n        }\n        if (*(in_ECX + 4) == iVar3) {\n            uVar1 = fcn.004192dc(arg_8h_00);\n            *(in_ECX + 4) = uVar1;\n            fcn.00429510(uVar1, iVar3, arg_8h_00);\n            *(in_ECX + 0xc) = arg_8h_00;\ncode_r0x00428245:\n            *(in_ECX + 8) = arg_8h_00;\n            return;\n        }\n        iVar3 = *(in_ECX + 0xc);\n        if (arg_8h_00 <= iVar3) {\n            iVar3 = *(in_ECX + 8);\n            if (iVar3 < arg_8h_00) {\n                fcn.00429510(iVar3 + *(in_ECX + 4), 0, arg_8h_00 - iVar3);\n            }\n            goto code_r0x00428245;\n        }\n        iVar2 = *(in_ECX + 0x10);\n        if (iVar2 == 0) {\n            iVar2 = *(in_ECX + 8) + (*(in_ECX + 8) >> 0x1f & 7U) >> 3;\n            if (iVar2 < 4) {\ncode_r0x00428277:\n                iVar2 = 4;\n            }\n            else if (iVar2 < 0x401) {\n                if (iVar2 < 4) goto code_r0x00428277;\n            }\n            else {\n                iVar2 = 0x400;\n            }\n        }\n        arg_8h = iVar2 + iVar3;\n        if (iVar2 + iVar3 <= arg_8h_00) {\n            arg_8h = arg_8h_00;\n        }\n    } while (arg_8h < iVar3);\n    iVar3 = fcn.004192dc(arg_8h);\n    fcn.004010b0(iVar3, arg_8h, *(in_ECX + 4), *(in_ECX + 8));\n    fcn.00429510(*(in_ECX + 8) + iVar3, 0, arg_8h_00 - *(in_ECX + 8));\n    fcn.00419316(*(in_ECX + 4));\n    *(in_ECX + 8) = arg_8h_00;\n    *(in_ECX + 0xc) = arg_8h;\ncode_r0x004282ce:\n    *(in_ECX + 4) = iVar3;\n    return;\n}\n",
        "token_count": 785
    },
    "00429a6f": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00429a6f(int32_t lpFileName, uint32_t arg_ch)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    uint32_t uVar3;\n    \n    if ((lpFileName == 0) || ((arg_ch & 0xfffffff9) != 0)) {\n        puVar1 = fcn.0042b76f();\n        *puVar1 = 0;\n        puVar1 = fcn.0042b75c();\n        *puVar1 = 0x16;\n        fcn.0042ff7f(0, 0, 0, 0, 0);\n        uVar2 = 0x16;\n    }\n    else {\n        uVar3 = (*_sym.imp.KERNEL32.dll_GetFileAttributesA)(lpFileName);\n        if (uVar3 == 0xffffffff) {\n            uVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n            fcn.0042b782(uVar2);\n        }\n        else {\n            if ((((uVar3 & 0x10) != 0) || ((uVar3 & 1) == 0)) || ((arg_ch & 2) == 0)) {\n                return 0;\n            }\n            puVar1 = fcn.0042b76f();\n            *puVar1 = 5;\n            puVar1 = fcn.0042b75c();\n            *puVar1 = 0xd;\n        }\n        puVar1 = fcn.0042b75c();\n        uVar2 = *puVar1;\n    }\n    return uVar2;\n}\n",
        "token_count": 356
    },
    "0040c2c0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040c2c0(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    \n    iVar1 = fcn.0040bc00();\n    if (((*(iVar1 + 0xc) & 1) != 0) && (uVar2 = 0,  *(param_1 + 0x6c) != 0)) {\n        do {\n            fcn.0040c290();\n            uVar2 = uVar2 + 1;\n        } while (uVar2 < *(param_1 + 0x6c));\n    }\n    return;\n}\n",
        "token_count": 143
    },
    "0040c330": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid fcn.0040c330(uint32_t param_1)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    \n    iVar1 = fcn.0040bc00();\n    if (((*(iVar1 + 0xc) & 1) != 0) && (uVar2 = 0,  param_1 != 0)) {\n        do {\n            fcn.0040c270();\n            uVar2 = uVar2 + 1;\n        } while (uVar2 < param_1);\n    }\n    return;\n}\n",
        "token_count": 124
    },
    "0040c5d0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint32_t fcn.0040c5d0(void)\n\n{\n    uint32_t uVar1;\n    int32_t *unaff_ESI;\n    int32_t iVar2;\n    int32_t **in_FS_OFFSET;\n    bool bVar3;\n    uint uVar4;\n    char cVar5;\n    uint uStack28;\n    int32_t *piStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x43ef18;\n    piStack12 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack12;\n    iVar2 = 0;\n    uVar4 = 0;\n    fcn.0040e940(0xc, 0);\n    piStack12 = NULL;\n    fcn.00413af0(uStack28, 0xc, 0);\n    do {\n        fcn.0040c270();\n        cVar5 = uVar4 >> 0x18;\n        iVar2 = iVar2 + 1;\n    } while (iVar2 < 0xc);\n    iVar2 = fcn.0040bc00();\n    if ((*(iVar2 + 0xc) >> 3 & 1) == 0) {\n        iVar2 = fcn.0040bc00();\n        bVar3 = *(iVar2 + 0x17) == cVar5;\n    }\n    else {\n        iVar2 = fcn.0040bc00();\n        bVar3 = *(iVar2 + 0x11) == cVar5;\n    }\n    uVar1 = fcn.0040e970();\n    *in_FS_OFFSET = unaff_ESI;\n    return uVar1 & 0xffffff00 | bVar3;\n}\n",
        "token_count": 385
    },
    "00411760": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00411760(int32_t param_1, int32_t param_2, ushort *param_3)\n\n{\n    uint16_t uVar1;\n    char cVar2;\n    uint unaff_EBX;\n    ushort unaff_BP;\n    uint8_t uVar3;\n    uint unaff_ESI;\n    int32_t unaff_EDI;\n    uint arg_8h;\n    uchar auStack36 [2];\n    uchar auStack34 [10];\n    ushort uStack24;\n    char cStack22;\n    char cStack21;\n    uint32_t uStack4;\n    \n    uVar3 = unaff_ESI >> 0x10;\n    uStack4 = *0x45060c ^ auStack36;\n    arg_8h = 1;\n    fcn.00413af0(auStack36, 0x1e);\n    if (unaff_EDI != *0x44e69c) {\n        fcn.004294b3(unaff_EDI);\n        return;\n    }\n    uVar1 = *(param_1 + 0x40);\n    if ((((((*(param_1 + 0xc) ^ uVar3) & 0xf) == 0) && (*(param_1 + 0xe) == unaff_BP)) &&\n        (*(param_1 + 0xf) == unaff_BP >> 8)) &&\n       (((*(param_1 + 0xe) == 0 || (*(param_1 + 0xe) == 8)) && ((uVar1 == cStack22 && (uVar1 >> 8 == cStack21)))))) {\n        if ((uVar3 >> 3 & 1) == 0) {\n            cVar2 = fcn.00411320(auStack34);\n            if (cVar2 == '\\0') goto code_r0x00411828;\n        }\n        *param_3 = uStack24;\n        (**(**(param_2 + 0x1c) + 0x10))(uVar1, 0, 1);\n        fcn.004294b3(unaff_EBX);\n        return;\n    }\ncode_r0x00411828:\n    fcn.004294b3(arg_8h);\n    return;\n}\n",
        "token_count": 494
    },
    "004120b0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187"
        ],
        "decompiled_code": "\nuint32_t fcn.004120b0(uint32_t param_1)\n\n{\n    return param_1 >> 4 & 1;\n}\n",
        "token_count": 32
    },
    "00413c20": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid fcn.00413c20(void)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t *puVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    \n    uVar5 = 0;\n    uVar1 = 0;\n    do {\n        uVar5 = uVar5 | 1 << (0x1fU - *(uVar1 + 0x4429f4) & 0x1f);\n        uVar1 = uVar1 + 1;\n    } while (uVar1 < 0xe);\n    uVar1 = 0;\n    puVar3 = 0x451af4;\n    do {\n        iVar4 = 8;\n        uVar2 = uVar1;\n        do {\n            if ((uVar2 & 1) == 0) {\n                uVar2 = uVar2 >> 1;\n            }\n            else {\n                uVar2 = uVar2 >> 1 ^ uVar5;\n            }\n            iVar4 = iVar4 + -1;\n        } while (iVar4 != 0);\n        *puVar3 = uVar2;\n        puVar3 = puVar3 + 1;\n        uVar1 = uVar1 + 1;\n    } while (puVar3 < 0x451ef4);\n    *0x44e6c4 = 0;\n    return;\n}\n",
        "token_count": 313
    },
    "0041a97e": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041a97e(uint arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t in_ECX;\n    \n    if ((~*(in_ECX + 0x18) & 1) == 0) {\n        fcn.0041a6a3(2, *(in_ECX + 0x14));\n    }\n    uVar1 = *(in_ECX + 0x28) + 1;\n    if (*(in_ECX + 0x2c) <= uVar1 && uVar1 != *(in_ECX + 0x2c)) {\n        fcn.0041a817();\n    }\n    **(in_ECX + 0x28) = arg_8h;\n    *(in_ECX + 0x28) = *(in_ECX + 0x28) + 1;\n    return;\n}\n",
        "token_count": 196
    },
    "0041a9b9": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041a9b9(uint arg_8h, uint arg_ch)\n\n{\n    uint *puVar1;\n    uint32_t uVar2;\n    int32_t in_ECX;\n    \n    if ((~*(in_ECX + 0x18) & 1) == 0) {\n        fcn.0041a6a3(2, *(in_ECX + 0x14));\n    }\n    uVar2 = *(in_ECX + 0x28) + 8;\n    if (*(in_ECX + 0x2c) <= uVar2 && uVar2 != *(in_ECX + 0x2c)) {\n        fcn.0041a817();\n    }\n    puVar1 = *(in_ECX + 0x28);\n    *puVar1 = arg_8h;\n    puVar1[1] = arg_ch;\n    *(in_ECX + 0x28) = *(in_ECX + 0x28) + 8;\n    return;\n}\n",
        "token_count": 227
    },
    "0041a9fd": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041a9fd(uint arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t in_ECX;\n    \n    if ((~*(in_ECX + 0x18) & 1) == 0) {\n        fcn.0041a6a3(2, *(in_ECX + 0x14));\n    }\n    uVar1 = *(in_ECX + 0x28) + 2;\n    if (*(in_ECX + 0x2c) <= uVar1 && uVar1 != *(in_ECX + 0x2c)) {\n        fcn.0041a817();\n    }\n    **(in_ECX + 0x28) = arg_8h;\n    *(in_ECX + 0x28) = *(in_ECX + 0x28) + 2;\n    return;\n}\n",
        "token_count": 196
    },
    "0041aa3c": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041aa3c(uint arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t in_ECX;\n    \n    if ((~*(in_ECX + 0x18) & 1) == 0) {\n        fcn.0041a6a3(2, *(in_ECX + 0x14));\n    }\n    uVar1 = *(in_ECX + 0x28) + 4;\n    if (*(in_ECX + 0x2c) <= uVar1 && uVar1 != *(in_ECX + 0x2c)) {\n        fcn.0041a817();\n    }\n    **(in_ECX + 0x28) = arg_8h;\n    *(in_ECX + 0x28) = *(in_ECX + 0x28) + 4;\n    return;\n}\n",
        "token_count": 196
    },
    "0041aa7a": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041aa7a(uchar *arg_8h)\n\n{\n    int32_t in_ECX;\n    \n    if ((*(in_ECX + 0x18) & 1) == 0) {\n        fcn.0041a6a3(4, *(in_ECX + 0x14));\n    }\n    if (*(in_ECX + 0x2c) < *(in_ECX + 0x28) + 1U) {\n        fcn.0041a88f((*(in_ECX + 0x28) - *(in_ECX + 0x2c)) + 1);\n    }\n    *arg_8h = **(in_ECX + 0x28);\n    *(in_ECX + 0x28) = *(in_ECX + 0x28) + 1;\n    return;\n}\n",
        "token_count": 193
    },
    "0041aabe": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041aabe(uint *arg_8h)\n\n{\n    uint *puVar1;\n    int32_t in_ECX;\n    \n    if ((*(in_ECX + 0x18) & 1) == 0) {\n        fcn.0041a6a3(4, *(in_ECX + 0x14));\n    }\n    if (*(in_ECX + 0x2c) < *(in_ECX + 0x28) + 8U) {\n        fcn.0041a88f((*(in_ECX + 0x28) - *(in_ECX + 0x2c)) + 8);\n    }\n    puVar1 = *(in_ECX + 0x28);\n    *arg_8h = *puVar1;\n    arg_8h[1] = puVar1[1];\n    *(in_ECX + 0x28) = *(in_ECX + 0x28) + 8;\n    return;\n}\n",
        "token_count": 222
    },
    "0041ab0b": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041ab0b(ushort *arg_8h)\n\n{\n    int32_t in_ECX;\n    \n    if ((*(in_ECX + 0x18) & 1) == 0) {\n        fcn.0041a6a3(4, *(in_ECX + 0x14));\n    }\n    if (*(in_ECX + 0x2c) < *(in_ECX + 0x28) + 2U) {\n        fcn.0041a88f((*(in_ECX + 0x28) - *(in_ECX + 0x2c)) + 2);\n    }\n    *arg_8h = **(in_ECX + 0x28);\n    *(in_ECX + 0x28) = *(in_ECX + 0x28) + 2;\n    return;\n}\n",
        "token_count": 193
    },
    "0041ab53": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041ab53(uint *arg_8h)\n\n{\n    int32_t in_ECX;\n    \n    if ((*(in_ECX + 0x18) & 1) == 0) {\n        fcn.0041a6a3(4, *(in_ECX + 0x14));\n    }\n    if (*(in_ECX + 0x2c) < *(in_ECX + 0x28) + 4U) {\n        fcn.0041a88f((*(in_ECX + 0x28) - *(in_ECX + 0x2c)) + 4);\n    }\n    *arg_8h = **(in_ECX + 0x28);\n    *(in_ECX + 0x28) = *(in_ECX + 0x28) + 4;\n    return;\n}\n",
        "token_count": 191
    },
    "00420d91": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00420d91(uint32_t arg_8h)\n\n{\n    bool bVar1;\n    bool bVar2;\n    code *pcVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t arg_8h_00;\n    int32_t iVar6;\n    int32_t *in_ECX;\n    uint hWnd;\n    uint lpMsg;\n    uint var_ch;\n    int32_t lParam;\n    uint var_4h;\n    \n    bVar2 = true;\n    lParam = 0;\n    if ((arg_8h & 4) != 0) {\n        uVar4 = fcn.0041afdc();\n        bVar1 = true;\n        if ((uVar4 & 0x10000000) == 0) goto code_r0x00420dc1;\n    }\n    bVar1 = false;\ncode_r0x00420dc1:\n    iVar5 = (*_sym.imp.USER32.dll_GetParent)(in_ECX[8]);\n    in_ECX[0xf] = in_ECX[0xf] | 0x18;\n    arg_8h_00 = fcn.0041dca3();\n    pcVar3 = _sym.imp.USER32.dll_UpdateWindow;\ncode_r0x00420e4c:\n    while ((!bVar2 || (iVar6 = (*_sym.imp.USER32.dll_PeekMessageA)(arg_8h_00, 0, 0, 0, 0),  iVar6 != 0))) {\n        do {\n            iVar6 = fcn.0041e0ef();\n            if (iVar6 == 0) {\n                fcn.0041bf46(0);\n                return -1;\n            }\n            if ((bVar1) && ((*(arg_8h_00 + 4) == 0x118 || (*(arg_8h_00 + 4) == 0x104)))) {\n                fcn.0041b083(1);\n                (*pcVar3)(in_ECX[8]);\n                bVar1 = false;\n            }\n            iVar6 = (**(*in_ECX + 0x88))();\n            if (iVar6 == 0) {\n                in_ECX[0xf] = in_ECX[0xf] & 0xffffffe7;\n                return in_ECX[0x11];\n            }\n            iVar6 = fcn.0041dff2(arg_8h_00);\n            if (iVar6 != 0) {\n                bVar2 = true;\n                lParam = 0;\n            }\n            iVar6 = (*_sym.imp.USER32.dll_PeekMessageA)(arg_8h_00, 0, 0, 0, 0);\n        } while (iVar6 != 0);\n    }\n    if (bVar1) {\n        fcn.0041b083(1);\n        (*pcVar3)(in_ECX[8]);\n        bVar1 = false;\n    }\n    if ((((arg_8h & 1) == 0) && (iVar5 != 0)) && (lParam == 0)) {\n        (*_sym.imp.USER32.dll_SendMessageA)(iVar5, 0x121, 0, in_ECX[8]);\n    }\n    if ((arg_8h & 2) == 0) goto code_r0x00420e30;\n    goto code_r0x00420e49;\ncode_r0x00420e30:\n    iVar6 = (*_sym.imp.USER32.dll_SendMessageA)(in_ECX[8], 0x36a, 0, lParam);\n    lParam = lParam + 1;\n    if (iVar6 == 0) {\ncode_r0x00420e49:\n        bVar2 = false;\n    }\n    goto code_r0x00420e4c;\n}\n",
        "token_count": 841
    },
    "00423bc6": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00423bc6(uint32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    bool bVar4;\n    uint32_t var_34h;\n    uint var_30h;\n    uint var_24h;\n    uint var_1ch;\n    uint var_18h;\n    char *var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = fcn.0041a00a();\n    arg_8h = arg_8h & ~*(var_4h + 0x18);\n    if (arg_8h == 0) {\n        bVar4 = true;\n    }\n    else {\n        uVar3 = 0;\n        fcn.00429510(&var_34h, 0, 0x28);\n        var_30h = _sym.imp.USER32.dll_DefWindowProcA;\n        iVar1 = fcn.0041a00a();\n        var_24h = *(iVar1 + 8);\n        var_1ch = *0x453aa8;\n        var_ch = 8;\n        if ((arg_8h & 1) != 0) {\n            var_34h = 0xb;\n            var_10h = \"AfxWnd90s\";\n            iVar1 = fcn.004239ca(&var_34h);\n            if (iVar1 != 0) {\n                uVar3 = 1;\n            }\n        }\n        if ((arg_8h & 0x20) != 0) {\n            var_34h = var_34h | 0x8b;\n            var_10h = \"AfxOleControl90s\";\n            iVar1 = fcn.004239ca(&var_34h);\n            if (iVar1 != 0) {\n                uVar3 = uVar3 | 0x20;\n            }\n        }\n        if ((arg_8h & 2) != 0) {\n            var_34h = 0;\n            var_10h = \"AfxControlBar90s\";\n            var_18h = 0x10;\n            iVar1 = fcn.004239ca(&var_34h);\n            if (iVar1 != 0) {\n                uVar3 = uVar3 | 2;\n            }\n        }\n        if ((arg_8h & 4) != 0) {\n            var_34h = 8;\n            var_18h = 0;\n            iVar1 = fcn.00423b82(&var_34h, \"AfxMDIFrame90s\", 0x7a01);\n            if (iVar1 != 0) {\n                uVar3 = uVar3 | 4;\n            }\n        }\n        if ((arg_8h & 8) != 0) {\n            var_34h = 0xb;\n            var_18h = 6;\n            iVar1 = fcn.00423b82(&var_34h, \"AfxFrameOrView90s\", 0x7a02);\n            if (iVar1 != 0) {\n                uVar3 = uVar3 | 8;\n            }\n        }\n        if ((arg_8h & 0x10) != 0) {\n            var_8h = 0xff;\n            uVar2 = fcn.00421734(&var_ch, 0x3fc0);\n            uVar3 = uVar3 | uVar2;\n            arg_8h = arg_8h & 0xffffc03f;\n        }\n        if ((arg_8h & 0x40) != 0) {\n            var_8h = 0x10;\n            uVar2 = fcn.00421734(&var_ch, 0x40);\n            uVar3 = uVar3 | uVar2;\n        }\n        if ((arg_8h & 0x80) != 0) {\n            var_8h = 2;\n            uVar2 = fcn.00421734(&var_ch, 0x80);\n            uVar3 = uVar3 | uVar2;\n        }\n        if ((arg_8h & 0x100) != 0) {\n            var_8h = 8;\n            uVar2 = fcn.00421734(&var_ch, 0x100);\n            uVar3 = uVar3 | uVar2;\n        }\n        if ((arg_8h & 0x200) != 0) {\n            var_8h = 0x20;\n            uVar2 = fcn.00421734(&var_ch, 0x200);\n            uVar3 = uVar3 | uVar2;\n        }\n        if ((arg_8h & 0x400) != 0) {\n            var_8h = 1;\n            uVar2 = fcn.00421734(&var_ch, 0x400);\n            uVar3 = uVar3 | uVar2;\n        }\n        if ((arg_8h & 0x800) != 0) {\n            var_8h = 0x40;\n            uVar2 = fcn.00421734(&var_ch, 0x800);\n            uVar3 = uVar3 | uVar2;\n        }\n        if ((arg_8h & 0x1000) != 0) {\n            var_8h = 4;\n            uVar2 = fcn.00421734(&var_ch, 0x1000);\n            uVar3 = uVar3 | uVar2;\n        }\n        if ((arg_8h & 0x2000) != 0) {\n            var_8h = 0x80;\n            uVar2 = fcn.00421734(&var_ch, 0x2000);\n            uVar3 = uVar3 | uVar2;\n        }\n        if ((arg_8h & 0x4000) != 0) {\n            var_8h = 0x800;\n            uVar2 = fcn.00421734(&var_ch, 0x4000);\n            uVar3 = uVar3 | uVar2;\n        }\n        if ((arg_8h & 0x8000) != 0) {\n            var_8h = 0x400;\n            uVar2 = fcn.00421734(&var_ch, 0x8000);\n            uVar3 = uVar3 | uVar2;\n        }\n        if ((arg_8h & 0x10000) != 0) {\n            var_8h = 0x200;\n            uVar2 = fcn.00421734(&var_ch, 0x10000);\n            uVar3 = uVar3 | uVar2;\n        }\n        if ((arg_8h & 0x20000) != 0) {\n            var_8h = 0x100;\n            uVar2 = fcn.00421734(&var_ch, 0x20000);\n            uVar3 = uVar3 | uVar2;\n        }\n        if ((arg_8h & 0x40000) != 0) {\n            var_8h = 0x8000;\n            uVar2 = fcn.00421734(&var_ch, 0x40000);\n            uVar3 = uVar3 | uVar2;\n        }\n        if ((arg_8h & 0x80000) != 0) {\n            var_8h = 0x1000;\n            uVar2 = fcn.00421734(&var_ch, 0x80000);\n            uVar3 = uVar3 | uVar2;\n        }\n        *(var_4h + 0x18) = *(var_4h + 0x18) | uVar3;\n        if ((*(var_4h + 0x18) & 0x3fc0) == 0x3fc0) {\n            *(var_4h + 0x18) = *(var_4h + 0x18) | 0x10;\n            uVar3 = uVar3 | 0x10;\n        }\n        bVar4 = (uVar3 & arg_8h) == arg_8h;\n    }\n    return bVar4;\n}\n",
        "token_count": 1845
    },
    "00424898": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00424898(uint32_t arg_8h)\n\n{\n    fcn.004011c0();\n    if ((arg_8h & 1) != 0) {\n        fcn.00419316();\n    }\n    return;\n}\n",
        "token_count": 58
    },
    "00425661": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00425661(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint32_t *puVar2;\n    uint8_t *puVar3;\n    uint uVar4;\n    int32_t iVar5;\n    uint uVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    uint uVar9;\n    uint hMem;\n    uint lpCriticalSection;\n    \n    iVar1 = param_1 + 0x1c;\n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(iVar1);\n    iVar7 = *(param_1 + 4);\n    iVar8 = *(param_1 + 8);\n    if ((iVar7 <= iVar8) || ((*(*(param_1 + 0x10) + iVar8 * 8) & 1) != 0)) {\n        iVar8 = 1;\n        if (1 < iVar7) {\n            puVar3 = *(param_1 + 0x10);\n            do {\n                puVar3 = puVar3 + 8;\n                if ((*puVar3 & 1) == 0) break;\n                iVar8 = iVar8 + 1;\n            } while (iVar8 < iVar7);\n            if (iVar8 < iVar7) goto code_r0x0042574f;\n        }\n        iVar7 = iVar7 + 0x20;\n        if (*(param_1 + 0x10) == 0) {\n            uVar4 = fcn.0041a1d3(iVar7, 8);\n            iVar5 = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(2, uVar4);\n        }\n        else {\n            uVar4 = (*_sym.imp.KERNEL32.dll_GlobalHandle)(*(param_1 + 0x10));\n            (*_sym.imp.KERNEL32.dll_GlobalUnlock)(uVar4);\n            uVar9 = 0x2002;\n            uVar6 = fcn.0041a1d3(iVar7, 8);\n            iVar5 = (*_sym.imp.KERNEL32.dll_GlobalReAlloc)(uVar4, uVar6, uVar9);\n        }\n        if (iVar5 == 0) {\n            param_1 = *(param_1 + 0x10);\n            if (param_1 != 0) {\n                uVar4 = (*_sym.imp.KERNEL32.dll_GlobalHandle)(param_1);\n                (*_sym.imp.KERNEL32.dll_GlobalLock)(uVar4);\n            }\n            (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(iVar1);\n            iVar5 = fcn.00419415();\n        }\n        iVar5 = (*_sym.imp.KERNEL32.dll_GlobalLock)(iVar5);\n        fcn.00429510(iVar5 + *(param_1 + 4) * 8, 0, (iVar7 - *(param_1 + 4)) * 8);\n        *(param_1 + 4) = iVar7;\n        *(param_1 + 0x10) = iVar5;\n    }\ncode_r0x0042574f:\n    if (*(param_1 + 0xc) <= iVar8) {\n        *(param_1 + 0xc) = iVar8 + 1;\n    }\n    puVar2 = *(param_1 + 0x10) + iVar8 * 8;\n    *puVar2 = *puVar2 | 1;\n    *(param_1 + 8) = iVar8 + 1;\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(iVar1);\n    return iVar8;\n}\n",
        "token_count": 779
    },
    "00425b7f": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00425b7f(uint32_t arg_8h)\n\n{\n    fcn.00425b26();\n    if ((arg_8h & 1) != 0) {\n        fcn.00419316();\n    }\n    return;\n}\n",
        "token_count": 60
    },
    "00427a23": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00427a23(int32_t arg_8h, int32_t arg_ch, uint32_t arg_10h)\n\n{\n    int32_t extraout_ECX;\n    uint32_t uVar1;\n    \n    if ((arg_10h != 0) && (arg_ch == 0)) {\n        arg_10h = fcn.0041944d();\n        arg_ch = extraout_ECX;\n    }\n    if ((~*(arg_8h + 0x18) & 1) == 0) {\n        for (; arg_10h != 0; arg_10h = arg_10h - uVar1) {\n            uVar1 = 0x1fffffff;\n            if (arg_10h < 0x1fffffff) {\n                uVar1 = arg_10h;\n            }\n            fcn.00401490();\n        }\n    }\n    else {\n        for (; arg_10h != 0; arg_10h = arg_10h - uVar1) {\n            uVar1 = 0x1fffffff;\n            if (arg_10h < 0x1fffffff) {\n                uVar1 = arg_10h;\n            }\n            fcn.0041ad98(arg_ch, uVar1 * 4);\n            arg_ch = arg_ch + uVar1 * 4;\n        }\n    }\n    return;\n}\n",
        "token_count": 304
    },
    "00427cbe": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00427cbe(int32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    uint32_t *puVar2;\n    uint *puVar3;\n    int32_t in_ECX;\n    uint arg_8h_00;\n    uint in_stack_ffffffec;\n    \n    if (arg_8h != 0) goto code_r0x00427cd9;\n    in_stack_ffffffec = *(in_ECX + 0x14);\n    arg_8h_00 = 6;\n    while( true ) {\n        fcn.0041a6a3(arg_8h_00, in_stack_ffffffec);\ncode_r0x00427cd9:\n        if ((~*(in_ECX + 0x18) & 1) != 0) break;\n        arg_8h_00 = 1;\n    }\n    if (*(arg_8h + 8) == 0xffff) {\n        fcn.00419431();\n    }\n    fcn.00427b7f(0);\n    puVar2 = fcn.00426226(arg_8h);\n    uVar1 = *puVar2;\n    if (uVar1 == 0) {\n        fcn.0041a9fd(0xffff);\n        fcn.0041aec4(in_ECX);\n        fcn.004277e7();\n        puVar3 = fcn.00426226(arg_8h);\n        *puVar3 = *(in_ECX + 0x34);\n        *(in_ECX + 0x34) = *(in_ECX + 0x34) + 1;\n    }\n    else if (uVar1 < 0x7fff) {\n        fcn.0041a9fd(uVar1 | 0x8000);\n    }\n    else {\n        fcn.0041a9fd(0x7fff);\n        fcn.0041aa3c(uVar1 | 0x80000000);\n    }\n    return;\n}\n",
        "token_count": 444
    },
    "00427fa3": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00427fa3(int32_t *arg_8h)\n\n{\n    uint32_t arg_8h_00;\n    uint32_t *puVar1;\n    uint arg_8h_01;\n    uint *puVar2;\n    int32_t in_ECX;\n    \n    if ((~*(in_ECX + 0x18) & 1) == 0) {\n        fcn.0041a6a3(2, *(in_ECX + 0x14));\n    }\n    fcn.00427b7f(0);\n    if (arg_8h == NULL) {\n        fcn.0041a9fd(0);\n    }\n    else {\n        puVar1 = fcn.00426226(arg_8h);\n        arg_8h_00 = *puVar1;\n        if (arg_8h_00 == 0) {\n            arg_8h_01 = (***arg_8h)();\n            fcn.00427cbe(arg_8h_01);\n            fcn.004277e7();\n            puVar2 = fcn.00426226(arg_8h);\n            *puVar2 = *(in_ECX + 0x34);\n            *(in_ECX + 0x34) = *(in_ECX + 0x34) + 1;\n            (**(*arg_8h + 8))();\n        }\n        else if (arg_8h_00 < 0x7fff) {\n            fcn.0041a9fd(arg_8h_00);\n        }\n        else {\n            fcn.0041a9fd(0x7fff);\n            fcn.0041aa3c(arg_8h_00);\n        }\n    }\n    return;\n}\n",
        "token_count": 386
    },
    "00436f2e": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00436f2e(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    uint32_t arg_8h_00;\n    uint *puVar2;\n    uint uVar3;\n    int32_t unaff_EBP;\n    int32_t iVar4;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.0042d024(0x44bc88, 0x10);\n    arg_8h_00 = *(unaff_EBP + 8);\n    if (arg_8h_00 == 0xfffffffe) {\n        puVar2 = fcn.0042b76f();\n        *puVar2 = 0;\n        puVar2 = fcn.0042b75c();\n        *puVar2 = 9;\n    }\n    else {\n        if ((-1 < arg_8h_00) && (arg_8h_00 < *0x454808)) {\n            piVar1 = (arg_8h_00 >> 5) * 4 + 0x454820;\n            iVar4 = (arg_8h_00 & 0x1f) * 0x40;\n            if ((*(*piVar1 + 4 + iVar4) & 1) != 0) {\n                fcn.004380f2(arg_8h_00);\n                *(unaff_EBP + -4) = 0;\n                if ((*(*piVar1 + 4 + iVar4) & 1) == 0) {\n                    puVar2 = fcn.0042b75c();\n                    *puVar2 = 9;\n                    puVar2 = fcn.0042b76f();\n                    *puVar2 = 0;\n                    *(unaff_EBP + -0x1c) = 0xffffffff;\n                }\n                else {\n                    uVar3 = fcn.004367fb(*(unaff_EBP + 8), *(unaff_EBP + 0xc), *(unaff_EBP + 0x10));\n                    *(unaff_EBP + -0x1c) = uVar3;\n                }\n                *(unaff_EBP + -4) = 0xfffffffe;\n                fcn.00437000(0x44bc88);\n                goto code_r0x00436ffa;\n            }\n        }\n        puVar2 = fcn.0042b76f();\n        *puVar2 = 0;\n        puVar2 = fcn.0042b75c();\n        *puVar2 = 9;\n        fcn.0042ff7f(0, 0, 0, 0, 0);\n    }\ncode_r0x00436ffa:\n    fcn.0042d069();\n    return;\n}\n",
        "token_count": 634
    },
    "0040fab0": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0040fb08)\n\nulong __fastcall fcn.0040fab0(uint32_t param_1)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    uint32_t unaff_EBP;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    int32_t iVar8;\n    int32_t **in_FS_OFFSET;\n    bool bVar9;\n    int64_t iVar10;\n    uint uVar11;\n    int32_t iStack52;\n    uint32_t uStack48;\n    int32_t iStack44;\n    uint32_t uStack40;\n    int32_t iStack36;\n    int32_t *piStack20;\n    int32_t *piStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x43f0d8;\n    piStack12 = *in_FS_OFFSET;\n    uVar1 = *0x45060c ^ &stack0xffffffb8;\n    *in_FS_OFFSET = &piStack12;\n    iVar10 = (**(**(*(param_1 + 0x24) + 0x1c) + 0x14))();\n    iVar3 = iVar10 >> 0x20;\n    iVar8 = 0;\n    if (iVar10 < 0x10015) {\n        iVar8 = iVar3;\n    }\n    uVar11 = *(param_1 + 0x28);\n    fcn.0040e940(uVar11, 0);\n    piStack12 = NULL;\n    uStack48 = 0;\n    iStack44 = 0;\n    if (-1 < iVar8) {\n        uVar4 = param_1;\n        if (0 < iVar8) goto code_r0x0040fb60;\n        if (param_1 != 0) goto code_r0x0040fb60;\n    }\n    do {\n        uVar4 = unaff_EBP;\n        uVar11 = 0x74;\n        fcn.0040f630();\n        iVar8 = iStack52;\n        unaff_EBP = uVar4;\ncode_r0x0040fb60:\n        do {\n            uVar4 = *(uVar4 + 0x28);\n            uVar6 = uVar4 + uStack48;\n            iVar5 = (uVar4 >> 0x1f) + iStack44 + CARRY4(uVar4, uStack48);\n            if ((iVar8 <= iVar5) && ((iVar8 < iVar5 || (param_1 < uVar6)))) {\n                iVar5 = iVar8;\n                uVar6 = param_1;\n            }\n            uVar7 = uVar6 - uStack48;\n            iVar8 = (iVar5 - iStack44) - (uVar6 < uStack48);\n            (**(**(*(unaff_EBP + 0x24) + 0x1c) + 0x10))(-uVar6, -(iVar5 + (uVar6 != 0)), 2, uVar11);\n            uVar4 = unaff_EBP;\n            uVar2 = (**(**(*(uVar1 + 0x24) + 0x1c) + 0x28))(uStack40, uVar7);\n            if ((uVar2 != uVar7) || (uVar2 >> 0x1f != iVar8)) {\n                uVar2 = fcn.0040f630(0x65);\ncode_r0x0040fc22:\n                piStack12 = 0xffffffff;\n                fcn.0040e970();\n                *in_FS_OFFSET = piStack20;\n                return CONCAT44((((uVar2 >> 0x1f) - iVar5) - (uVar2 < uVar6)) + iStack36 +\n                                CARRY4(uVar2 - uVar6, uStack40), (uVar2 - uVar6) + uStack40);\n            }\n            for (uVar2 = uVar7 - 4; -1 < uVar2; uVar2 = uVar2 - 1) {\n                if (*(iVar3 + uVar2) == *0x44e554) goto code_r0x0040fc22;\n            }\n            bVar9 = CARRY4(uStack48, uVar7 - 3);\n            uStack48 = uStack48 + (uVar7 - 3);\n            iStack44 = iStack44 + (iVar8 - (uVar7 < 3)) + bVar9;\n            iVar8 = iStack52;\n            unaff_EBP = uVar4;\n        } while ((iVar5 < iStack52) || ((iVar5 <= iStack52 && (uVar6 < param_1))));\n    } while( true );\n}\n",
        "token_count": 1075
    },
    "00427010": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00427010(uint arg_8h, uint32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint arg_8h_00;\n    int32_t *in_ECX;\n    \n    in_ECX[1] = arg_ch;\n    if (arg_ch <= arg_ch + 0x40) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(0x40, arg_ch + 0x40);\n        *in_ECX = iVar1;\n        if (iVar1 != 0) {\n            arg_8h_00 = (*_sym.imp.KERNEL32.dll_GlobalLock)(iVar1);\n            fcn.004010b0(arg_8h_00, in_ECX[1], arg_8h, in_ECX[1]);\n            iVar1 = fcn.00426ea6(arg_8h_00);\n            in_ECX[2] = iVar1 == 0;\n            (*_sym.imp.KERNEL32.dll_GlobalUnlock)(*in_ECX);\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 238
    },
    "00407100": {
        "rules": [
            "hash data using djb2/86fcf1c18148478ab58e8c52ba43c8d5",
            "hash data using jshash/2d43aa00ef9c47beadbc2522c99f9e7b"
        ],
        "decompiled_code": "\nuint __thiscall fcn.00407100(int32_t param_1, int32_t param_2)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    \n    if (param_2 == 0) {\n        param_2 = (*(param_1 + 0x14) >> 1) + *(param_1 + 0x14);\n    }\n    iVar4 = *(param_1 + 0x34);\n    if (iVar4 < param_2) {\n        if (iVar4 == 0) {\n            iVar4 = 0;\n        }\n        else {\n            iVar4 = iVar4 + -1;\n        }\n        iVar4 = iVar4 >> 0x10;\n        iVar5 = param_2 + -1 >> 0x10;\n        if (iVar4 + 1 < iVar5) {\n            param_2 = (iVar4 + 2) * 0x10000;\n            iVar5 = iVar4 + 1;\n        }\n        if (*(param_1 + 0x38) == iVar5 || *(param_1 + 0x38) < iVar5) {\n            iVar3 = iVar5 * 2 + 4;\n            uVar1 = fcn.0041930b(iVar3 * 4);\n            iVar2 = *(param_1 + 0x34) + -1 >> 0x10;\n            if (iVar2 != -1) {\n                fcn.0042aaa0(uVar1, *(param_1 + 0x30), iVar2 * 4 + 4);\n            }\n            if (*(param_1 + 0x30) != 0) {\n                fcn.00419316(*(param_1 + 0x30));\n            }\n            *(param_1 + 0x30) = uVar1;\n            *(param_1 + 0x38) = iVar3;\n        }\n        iVar3 = *(param_1 + 0x34) + iVar4 * -0x10000;\n        if ((iVar4 < iVar5) && (iVar3 < 0x10000)) {\n            uVar1 = fcn.0041930b(0x200000);\n            if (iVar3 != 0) {\n                fcn.0042aaa0(uVar1, *(*(param_1 + 0x30) + iVar4 * 4), iVar3 * 0x20);\n                fcn.00419316(*(*(param_1 + 0x30) + iVar4 * 4));\n            }\n            *(*(param_1 + 0x30) + iVar4 * 4) = uVar1;\n        }\n        uVar1 = fcn.0041930b((param_2 + iVar5 * -0x10000) * 0x20);\n        if ((iVar5 == iVar4) && (iVar3 != 0)) {\n            fcn.0042aaa0(uVar1, *(*(param_1 + 0x30) + iVar4 * 4), iVar3 * 0x20);\n            fcn.00419316(*(*(param_1 + 0x30) + iVar4 * 4));\n        }\n        *(*(param_1 + 0x30) + iVar5 * 4) = uVar1;\n        *(param_1 + 0x34) = param_2;\n    }\n    return 1;\n}\n",
        "token_count": 760
    },
    "004096a0": {
        "rules": [
            "hash data using djb2/86fcf1c18148478ab58e8c52ba43c8d5",
            "hash data using jshash/2d43aa00ef9c47beadbc2522c99f9e7b"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __fastcall fcn.004096a0(int32_t *param_1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint8_t uVar3;\n    uint32_t uVar4;\n    uint uVar5;\n    int32_t **ppiVar6;\n    int32_t unaff_EBX;\n    int32_t unaff_ESI;\n    int32_t **in_FS_OFFSET;\n    char *pcVar7;\n    uint *puVar8;\n    int32_t iVar9;\n    uint uStack44;\n    uint uStack40;\n    uint uStack36;\n    int32_t iStack32;\n    int32_t iStack28;\n    int32_t *piStack24;\n    uchar uStack20;\n    uint uStack16;\n    int32_t *piStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x43e738;\n    piStack12 = *in_FS_OFFSET;\n    uVar4 = *0x45060c ^ &stack0xffffffbc;\n    *in_FS_OFFSET = &piStack12;\n    fcn.004016b0(param_1[1] + -0x10, uVar4);\n    param_1[2] = 0;\n    param_1[3] = 0;\n    param_1[4] = 0;\n    param_1[8] = 0;\n    param_1[9] = 0;\n    param_1[7] = 0;\n    uStack4 = 0;\n    if (param_1[0xb] != 0) {\n        fcn.00407f80();\n    }\n    param_1[0xb] = 0;\n    param_1[5] = 1;\n    fcn.00407100((*(*param_1 + -0xc) + (*(*param_1 + -0xc) >> 0x1f & 0x3fU) >> 6) + 8);\n    param_1[6] = 0;\n    puVar8 = *param_1[0xc];\n    *puVar8 = 0;\n    puVar8[1] = 0;\n    puVar8[2] = 0;\n    puVar8[3] = 0;\n    puVar8[4] = 0;\n    puVar8[5] = 0;\n    puVar8[6] = 0;\n    puVar8[7] = 0;\n    if (*(*param_1 + -0xc) == 0) {\n        puVar8 = 0xe;\n        pcVar7 = \"Empty document\";\n    }\n    else {\n        iStack28 = param_1[10];\n        puVar8 = &uStack44;\n        pcVar7 = NULL;\n        uStack44 = 0;\n        uStack40 = 0xffffffff;\n        uStack36 = 0;\n        iStack32 = *param_1;\n        uVar4 = fcn.00408f60(0, puVar8);\n        *(*param_1[0xc] + 4) = *(*param_1 + -0xc);\n        if (0 < uVar4) {\n            *(*param_1[0xc] + 0x14) = uVar4;\n            if (*(*(param_1[0xc] + (uVar4 >> 0x10) * 4) + 0x18 + (uVar4 & 0xffff) * 0x20) != 0) {\n                fcn.00402e60(\"Root element has sibling\");\n            }\n            goto code_r0x004097d3;\n        }\n    }\n    fcn.00401aa0(pcVar7, puVar8);\ncode_r0x004097d3:\n    param_1[2] = 0;\n    param_1[3] = 0;\n    param_1[4] = 0;\n    param_1[8] = 0;\n    param_1[9] = 0;\n    param_1[7] = 0;\n    if (*(unaff_ESI + -0xc) != 0) {\n        if (*(param_1[1] + -0xc) == 0) {\n            fcn.00402100(&stack0xffffffc0);\n        }\n        else {\n            iVar9 = unaff_ESI;\n            uVar5 = fcn.00401d30(&stack0xffffffc8, &stack0xffffffc0, 0x442150);\n            uStack16._0_1_ = 1;\n            uVar5 = fcn.00402000(&stack0xffffffc4, uVar5, param_1 + 1);\n            uStack16 = CONCAT31(uStack16._1_3_, 2);\n            fcn.00402100(uVar5);\n            uStack20 = 1;\n            piVar1 = iVar9 + -4;\n            LOCK();\n            iVar2 = *piVar1;\n            *piVar1 = *piVar1 + -1;\n            if (iVar2 + -1 < 1) {\n                (**(**(iVar9 + -0x10) + 4))(iVar9 + -0x10);\n            }\n            uStack16 = uStack16 & 0xffffff00;\n            piVar1 = unaff_EBX + -4;\n            LOCK();\n            iVar2 = *piVar1;\n            *piVar1 = *piVar1 + -1;\n            if (iVar2 == 1 || iVar2 + -1 < 0) {\n                (**(**(unaff_EBX + -0x10) + 4))(unaff_EBX + -0x10);\n            }\n        }\n    }\n    uVar3 = fcn.004070c0();\n    ppiVar6 = unaff_ESI + -0x10;\n    uStack16 = 0xffffffff;\n    piVar1 = unaff_ESI + -4;\n    LOCK();\n    iVar2 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar2 == 1 || iVar2 + -1 < 0) {\n        ppiVar6 = (**(**ppiVar6 + 4))(ppiVar6);\n    }\n    *in_FS_OFFSET = piStack24;\n    return ppiVar6 & 0xffffff00 | uVar3;\n}\n",
        "token_count": 1421
    },
    "00430b50": {
        "rules": [
            "compute adler32 checksum/59ba9d7991e641c88d7c729645f1cfca"
        ],
        "decompiled_code": "\nuint32_t * fcn.00430b50(uint32_t *param_1, char *param_2)\n\n{\n    char *pcVar1;\n    char *pcVar2;\n    char cVar3;\n    uint32_t uVar4;\n    uint32_t *puVar5;\n    char cVar6;\n    uint32_t uVar7;\n    char *pcVar8;\n    uint32_t uVar9;\n    uint32_t *puVar10;\n    \n    cVar3 = *param_2;\n    if (cVar3 == '\\0') {\n        return param_1;\n    }\n    if (param_2[1] == '\\0') {\n        uVar4 = param_1 & 3;\n        while (uVar4 != 0) {\n            if (*param_1 == cVar3) {\n                return param_1;\n            }\n            if (*param_1 == '\\0') {\n                return NULL;\n            }\n            uVar4 = param_1 + 1 & 3;\n            param_1 = param_1 + 1;\n        }\n        while( true ) {\n            while( true ) {\n                uVar4 = *param_1;\n                uVar9 = uVar4 ^ CONCAT22(CONCAT11(cVar3, cVar3), CONCAT11(cVar3, cVar3));\n                uVar7 = uVar4 ^ 0xffffffff ^ uVar4 + 0x7efefeff;\n                puVar10 = param_1 + 1;\n                if (((uVar9 ^ 0xffffffff ^ uVar9 + 0x7efefeff) & 0x81010100) != 0) break;\n                param_1 = puVar10;\n                if ((uVar7 & 0x81010100) != 0) {\n                    if ((uVar7 & 0x1010100) != 0) {\n                        return NULL;\n                    }\n                    if ((uVar4 + 0x7efefeff & 0x80000000) == 0) {\n                        return NULL;\n                    }\n                }\n            }\n            uVar4 = *param_1;\n            if (uVar4 == cVar3) {\n                return param_1;\n            }\n            if (uVar4 == '\\0') {\n                return NULL;\n            }\n            cVar6 = uVar4 >> 8;\n            if (cVar6 == cVar3) {\n                return param_1 + 1;\n            }\n            if (cVar6 == '\\0') break;\n            cVar6 = uVar4 >> 0x10;\n            if (cVar6 == cVar3) {\n                return param_1 + 2;\n            }\n            if (cVar6 == '\\0') {\n                return NULL;\n            }\n            cVar6 = uVar4 >> 0x18;\n            if (cVar6 == cVar3) {\n                return param_1 + 3;\n            }\n            param_1 = puVar10;\n            if (cVar6 == '\\0') {\n                return NULL;\n            }\n        }\n        return NULL;\n    }\n    do {\n        cVar6 = *param_1;\n        do {\n            while (puVar10 = param_1,  param_1 = puVar10 + 1,  cVar6 != cVar3) {\n                if (cVar6 == '\\0') {\n                    return NULL;\n                }\n                cVar6 = *param_1;\n            }\n            cVar6 = *param_1;\n            pcVar8 = param_2;\n            puVar5 = puVar10;\n        } while (cVar6 != param_2[1]);\n        do {\n            if (pcVar8[2] == '\\0') {\n                return puVar10;\n            }\n            if (*(puVar5 + 2) != pcVar8[2]) break;\n            pcVar1 = pcVar8 + 3;\n            if (*pcVar1 == '\\0') {\n                return puVar10;\n            }\n            pcVar2 = puVar5 + 3;\n            pcVar8 = pcVar8 + 2;\n            puVar5 = puVar5 + 2;\n        } while (*pcVar1 == *pcVar2);\n    } while( true );\n}\n",
        "token_count": 923
    },
    "00417ef0": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nvoid fcn.00417ef0(uint32_t param_1, uint8_t **param_2, int32_t param_3)\n\n{\n    uint8_t uVar1;\n    int32_t *piVar2;\n    uchar *puVar3;\n    uint8_t *puVar4;\n    int32_t iVar5;\n    uint8_t **ppuVar6;\n    int32_t iVar7;\n    uint uVar8;\n    uint32_t uVar9;\n    uchar *puVar10;\n    uchar *puVar11;\n    uint32_t uVar12;\n    uint8_t *puVar13;\n    uchar *puStack12;\n    uint8_t *puStack8;\n    uchar *puStack4;\n    \n    ppuVar6 = param_2;\n    iVar5 = param_1;\n    piVar2 = *(param_1 + 4);\n    puVar13 = *param_2;\n    uVar12 = *(param_1 + 0x1c);\n    puVar11 = *(param_1 + 0x34);\n    if (puVar11 < *(param_1 + 0x30)) {\n        puStack12 = *(param_1 + 0x30) + (-1 - puVar11);\n        param_1 = *(param_1 + 0x20);\n        param_2 = param_2[1];\n    }\n    else {\n        puStack12 = *(param_1 + 0x2c) - puVar11;\n        param_1 = *(param_1 + 0x20);\n        param_2 = param_2[1];\n    }\n    do {\n    // switch table (10 cases) at 0x418670\n        switch(*piVar2) {\n        case 0:\n            if ((0x101 < puStack12) && (0x9 < param_2)) {\n                *(iVar5 + 0x20) = param_1;\n                *(iVar5 + 0x1c) = uVar12;\n                puVar4 = *ppuVar6;\n                ppuVar6[1] = param_2;\n                *ppuVar6 = puVar13;\n                ppuVar6[2] = ppuVar6[2] + (puVar13 - puVar4);\n                *(iVar5 + 0x34) = puVar11;\n                param_3 = fcn.00418f30(*(piVar2 + 4), *(piVar2 + 0x11), piVar2[5], piVar2[6], iVar5, ppuVar6);\n                param_2 = ppuVar6[1];\n                param_1 = *(iVar5 + 0x20);\n                puVar13 = *ppuVar6;\n                uVar12 = *(iVar5 + 0x1c);\n                puVar11 = *(iVar5 + 0x34);\n                if (puVar11 < *(iVar5 + 0x30)) {\n                    puStack12 = *(iVar5 + 0x30) + (-1 - puVar11);\n                }\n                else {\n                    puStack12 = *(iVar5 + 0x2c) - puVar11;\n                }\n                if (param_3 != 0) {\n                    *piVar2 = (-(param_3 != 1) & 2) + 7;\n                    break;\n                }\n            }\n            *piVar2 = 1;\n            piVar2[3] = *(piVar2 + 4);\n            piVar2[2] = piVar2[5];\n        case 1:\n            for (; uVar12 < piVar2[3]; uVar12 = uVar12 + 8) {\n                if (param_2 == NULL) {\ncode_r0x00418499:\n                    *(iVar5 + 0x1c) = uVar12;\n                    *(iVar5 + 0x20) = param_1;\n                    puVar4 = *ppuVar6;\n                    ppuVar6[1] = NULL;\n                    *ppuVar6 = puVar13;\n                    ppuVar6[2] = ppuVar6[2] + (puVar13 - puVar4);\n                    *(iVar5 + 0x34) = puVar11;\n                    fcn.00418e00(iVar5, ppuVar6, param_3);\n                    return;\n                }\n                param_2 = param_2 + -1;\n                param_3 = 0;\n                param_1 = param_1 | *puVar13 << (uVar12 & 0x1f);\n                puVar13 = puVar13 + 1;\n            }\n            puStack8 = piVar2[2] + (*(piVar2[3] * 4 + 0x44fac0) & param_1) * 8;\n            param_1 = param_1 >> (puStack8[1] & 0x1f);\n            uVar12 = uVar12 - puStack8[1];\n            uVar1 = *puStack8;\n            uVar9 = uVar1;\n            if (uVar9 == 0) {\n                piVar2[2] = *(puStack8 + 4);\n                *piVar2 = 6;\n            }\n            else if ((uVar1 & 0x10) == 0) {\n                if ((uVar1 & 0x40) == 0) {\ncode_r0x004180c4:\n                    piVar2[3] = uVar9;\n                    piVar2[2] = puStack8 + *(puStack8 + 4) * 8;\n                }\n                else {\n                    if ((uVar1 & 0x20) == 0) {\n                        *piVar2 = 9;\n                        ppuVar6[6] = \"invalid literal/length code\";\ncode_r0x004184e5:\n                        *(iVar5 + 0x20) = param_1;\n                        *(iVar5 + 0x1c) = uVar12;\n                        ppuVar6[1] = param_2;\n                        ppuVar6[2] = ppuVar6[2] + (puVar13 - *ppuVar6);\n                        *ppuVar6 = puVar13;\n                        *(iVar5 + 0x34) = puVar11;\n                        fcn.00418e00(iVar5, ppuVar6, 0xfffffffd);\n                        return;\n                    }\n                    *piVar2 = 7;\n                }\n            }\n            else {\n                piVar2[2] = uVar1 & 0xf;\n                iVar7 = *(puStack8 + 4);\n                *piVar2 = 2;\n                piVar2[1] = iVar7;\n            }\n            break;\n        case 2:\n            uVar9 = piVar2[2];\n            for (; uVar12 < uVar9; uVar12 = uVar12 + 8) {\n                if (param_2 == NULL) goto code_r0x00418499;\n                param_2 = param_2 + -1;\n                param_3 = 0;\n                param_1 = param_1 | *puVar13 << (uVar12 & 0x1f);\n                puVar13 = puVar13 + 1;\n            }\n            piVar2[1] = piVar2[1] + (*(uVar9 * 4 + 0x44fac0) & param_1);\n            param_1 = param_1 >> (uVar9 & 0x1f);\n            uVar12 = uVar12 - uVar9;\n            *piVar2 = 3;\n            piVar2[3] = *(piVar2 + 0x11);\n            piVar2[2] = piVar2[6];\n        case 3:\n            for (; uVar12 < piVar2[3]; uVar12 = uVar12 + 8) {\n                if (param_2 == NULL) goto code_r0x00418499;\n                param_2 = param_2 + -1;\n                param_3 = 0;\n                param_1 = param_1 | *puVar13 << (uVar12 & 0x1f);\n                puVar13 = puVar13 + 1;\n            }\n            puStack8 = piVar2[2] + (*(piVar2[3] * 4 + 0x44fac0) & param_1) * 8;\n            param_1 = param_1 >> (puStack8[1] & 0x1f);\n            uVar12 = uVar12 - puStack8[1];\n            uVar1 = *puStack8;\n            uVar9 = uVar1;\n            if ((uVar1 & 0x10) == 0) {\n                if ((uVar1 & 0x40) != 0) {\n                    *piVar2 = 9;\n                    ppuVar6[6] = \"invalid distance code\";\n                    goto code_r0x004184e5;\n                }\n                goto code_r0x004180c4;\n            }\n            piVar2[2] = uVar1 & 0xf;\n            iVar7 = *(puStack8 + 4);\n            *piVar2 = 4;\n            piVar2[3] = iVar7;\n            break;\n        case 4:\n            uVar9 = piVar2[2];\n            for (; uVar12 < uVar9; uVar12 = uVar12 + 8) {\n                if (param_2 == NULL) goto code_r0x00418499;\n                param_2 = param_2 + -1;\n                param_3 = 0;\n                param_1 = param_1 | *puVar13 << (uVar12 & 0x1f);\n                puVar13 = puVar13 + 1;\n            }\n            piVar2[3] = piVar2[3] + (*(uVar9 * 4 + 0x44fac0) & param_1);\n            param_1 = param_1 >> (uVar9 & 0x1f);\n            uVar12 = uVar12 - uVar9;\n            *piVar2 = 5;\n        case 5:\n            if (puVar11 - *(iVar5 + 0x28) < piVar2[3]) {\n                iVar7 = (*(iVar5 + 0x2c) - *(iVar5 + 0x28)) - piVar2[3];\n            }\n            else {\n                iVar7 = -piVar2[3];\n            }\n            puStack4 = puVar11 + iVar7;\n            iVar7 = piVar2[1];\n            while (iVar7 != 0) {\n                puVar10 = puVar11;\n                if (puStack12 == NULL) {\n                    if (puVar11 == *(iVar5 + 0x2c)) {\n                        puStack12 = *(iVar5 + 0x30);\n                        puVar10 = *(iVar5 + 0x28);\n                        if (puStack12 != puVar10) {\n                            if (puVar10 < puStack12) {\n                                puStack12 = puStack12 + (-1 - puVar10);\n                            }\n                            else {\n                                puStack12 = *(iVar5 + 0x2c) + -puVar10;\n                            }\n                            puVar11 = puVar10;\n                            if (puStack12 != NULL) goto code_r0x0041837b;\n                        }\n                    }\n                    *(iVar5 + 0x34) = puVar11;\n                    param_3 = fcn.00418e00(iVar5, ppuVar6, param_3);\n                    puVar10 = *(iVar5 + 0x34);\n                    puVar11 = *(iVar5 + 0x30);\n                    if (puVar10 < puVar11) {\n                        puStack12 = puVar11 + (-1 - puVar10);\n                    }\n                    else {\n                        puStack12 = *(iVar5 + 0x2c) - puVar10;\n                    }\n                    if ((puVar10 == *(iVar5 + 0x2c)) && (puVar3 = *(iVar5 + 0x28),  puVar11 != puVar3)) {\n                        puVar10 = puVar3;\n                        if (puVar3 < puVar11) {\n                            puStack12 = puVar11 + (-1 - puVar3);\n                        }\n                        else {\n                            puStack12 = *(iVar5 + 0x2c) + -puVar3;\n                        }\n                    }\n                    if (puStack12 == NULL) goto code_r0x0041851d;\n                }\ncode_r0x0041837b:\n                puVar11 = puVar10 + 1;\n                param_3 = 0;\n                *puVar10 = *puStack4;\n                puStack4 = puStack4 + 1;\n                puStack12 = puStack12 + -1;\n                if (puStack4 == *(iVar5 + 0x2c)) {\n                    puStack4 = *(iVar5 + 0x28);\n                }\n                iVar7 = piVar2[1] + -1;\n                piVar2[1] = iVar7;\n            }\n            *piVar2 = 0;\n            break;\n        case 6:\n            puVar10 = puVar11;\n            if (puStack12 == NULL) {\n                if (puVar11 == *(iVar5 + 0x2c)) {\n                    puStack12 = *(iVar5 + 0x30);\n                    puVar10 = *(iVar5 + 0x28);\n                    if (puStack12 != puVar10) {\n                        if (puVar10 < puStack12) {\n                            puStack12 = puStack12 + (-1 - puVar10);\n                        }\n                        else {\n                            puStack12 = *(iVar5 + 0x2c) + -puVar10;\n                        }\n                        puVar11 = puVar10;\n                        if (puStack12 != NULL) goto code_r0x00418468;\n                    }\n                }\n                *(iVar5 + 0x34) = puVar11;\n                param_3 = fcn.00418e00(iVar5, ppuVar6, param_3);\n                puVar10 = *(iVar5 + 0x34);\n                puVar11 = *(iVar5 + 0x30);\n                if (puVar10 < puVar11) {\n                    puStack12 = puVar11 + (-1 - puVar10);\n                }\n                else {\n                    puStack12 = *(iVar5 + 0x2c) - puVar10;\n                }\n                if ((puVar10 == *(iVar5 + 0x2c)) && (puVar3 = *(iVar5 + 0x28),  puVar11 != puVar3)) {\n                    puVar10 = puVar3;\n                    if (puVar3 < puVar11) {\n                        puStack12 = puVar11 + (-1 - puVar3);\n                    }\n                    else {\n                        puStack12 = *(iVar5 + 0x2c) + -puVar3;\n                    }\n                }\n                if (puStack12 == NULL) {\ncode_r0x0041851d:\n                    *(iVar5 + 0x20) = param_1;\n                    *(iVar5 + 0x1c) = uVar12;\n                    puVar4 = *ppuVar6;\n                    ppuVar6[1] = param_2;\n                    *ppuVar6 = puVar13;\n                    ppuVar6[2] = ppuVar6[2] + (puVar13 - puVar4);\n                    *(iVar5 + 0x34) = puVar10;\n                    fcn.00418e00(iVar5, ppuVar6, param_3);\n                    return;\n                }\n            }\ncode_r0x00418468:\n            param_3 = 0;\n            *puVar10 = *(piVar2 + 2);\n            puVar11 = puVar10 + 1;\n            puStack12 = puStack12 + -1;\n            *piVar2 = 0;\n            break;\n        case 7:\n            if (7 < uVar12) {\n                uVar12 = uVar12 - 8;\n                param_2 = param_2 + 1;\n                puVar13 = puVar13 + -1;\n            }\n            *(iVar5 + 0x34) = puVar11;\n            uVar8 = fcn.00418e00(iVar5, ppuVar6, param_3);\n            puVar11 = *(iVar5 + 0x34);\n            if (*(iVar5 + 0x30) != puVar11) {\n                *(iVar5 + 0x1c) = uVar12;\n                *(iVar5 + 0x20) = param_1;\n                ppuVar6[1] = param_2;\n                ppuVar6[2] = ppuVar6[2] + (puVar13 - *ppuVar6);\n                *ppuVar6 = puVar13;\n                *(iVar5 + 0x34) = puVar11;\n                fcn.00418e00(iVar5, ppuVar6, uVar8);\n                return;\n            }\n            *piVar2 = 8;\n        case 8:\n            goto code_r0x004185c7;\n        case 9:\n            *(iVar5 + 0x20) = param_1;\n            *(iVar5 + 0x1c) = uVar12;\n            ppuVar6[1] = param_2;\n            ppuVar6[2] = ppuVar6[2] + (puVar13 - *ppuVar6);\n            *ppuVar6 = puVar13;\n            *(iVar5 + 0x34) = puVar11;\n            fcn.00418e00(iVar5, ppuVar6, 0xfffffffd);\n            return;\n        default:\n            *(iVar5 + 0x20) = param_1;\n            *(iVar5 + 0x1c) = uVar12;\n            ppuVar6[1] = param_2;\n            ppuVar6[2] = ppuVar6[2] + (puVar13 - *ppuVar6);\n            *ppuVar6 = puVar13;\n            *(iVar5 + 0x34) = puVar11;\n            fcn.00418e00(iVar5, ppuVar6, 0xfffffffe);\n            return;\n        }\n    } while( true );\ncode_r0x004185c7:\n    *(iVar5 + 0x20) = param_1;\n    *(iVar5 + 0x1c) = uVar12;\n    ppuVar6[1] = param_2;\n    ppuVar6[2] = ppuVar6[2] + (puVar13 - *ppuVar6);\n    *ppuVar6 = puVar13;\n    *(iVar5 + 0x34) = puVar11;\n    fcn.00418e00(iVar5, ppuVar6, 1);\n    return;\n}\n",
        "token_count": 4182
    },
    "004153d0": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nvoid fcn.004153d0(int32_t *param_1, int32_t param_2, int32_t *param_3)\n\n{\n    int32_t iVar1;\n    \n    if (param_3 != NULL) {\n        *param_3 = param_1[0xf];\n    }\n    if ((*param_1 == 4) || (*param_1 == 5)) {\n        (**(param_2 + 0x24))(*(param_2 + 0x28), param_1[3]);\n    }\n    if (*param_1 == 6) {\n        fcn.004186a0(param_1[1], param_2);\n    }\n    *param_1 = 0;\n    param_1[0xd] = param_1[10];\n    param_1[0xc] = param_1[10];\n    param_1[7] = 0;\n    param_1[8] = 0;\n    if (param_1[0xe] != NULL) {\n        iVar1 = (*param_1[0xe])(0, 0, 0);\n        param_1[0xf] = iVar1;\n        *(param_2 + 0x30) = iVar1;\n    }\n    return;\n}\n",
        "token_count": 275
    },
    "0041db10": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nvoid fcn.0041db10(void)\n\n{\n    uint8_t uVar1;\n    uint uVar2;\n    uchar *puVar3;\n    int32_t extraout_ECX;\n    int32_t iVar4;\n    uint8_t *puVar5;\n    uint16_t uVar6;\n    int32_t iVar7;\n    int32_t var_90h;\n    int32_t nWidth;\n    int32_t nHeight;\n    uint lpvBits;\n    uint32_t var_4h;\n    \n    var_4h = *0x45060c ^ &stack0xfffffffc;\n    uVar2 = (*_sym.imp.USER32.dll_GetMenuCheckMarkDimensions)();\n    nWidth = uVar2;\n    nHeight = uVar2 >> 0x10;\n    if ((nWidth < 5) || (iVar4 = nWidth,  nHeight < 6)) {\n        fcn.0041944d();\n        iVar4 = extraout_ECX;\n    }\n    if (0x20 < iVar4) {\n        iVar4 = 0x20;\n        nWidth = 0x20;\n    }\n    iVar7 = iVar4 + 0xf >> 4;\n    iVar4 = ((iVar4 + -4) / 2 + iVar7 * 0x10) - iVar4;\n    if (0xc < iVar4) {\n        iVar4 = 0xc;\n    }\n    if (0x20 < nHeight) {\n        nHeight = 0x20;\n    }\n    fcn.00429510(&lpvBits, 0xff, 0x80);\n    puVar3 = &lpvBits + (nHeight + -6 >> 1) * iVar7 * 2;\n    puVar5 = 0x444290;\n    var_90h = 5;\n    do {\n        uVar1 = *puVar5;\n        puVar5 = puVar5 + 1;\n        uVar6 = ~(uVar1 << (iVar4 & 0x1f));\n        *puVar3 = uVar6 >> 8;\n        puVar3[1] = uVar6;\n        puVar3 = puVar3 + iVar7 * 2;\n        var_90h = var_90h + -1;\n    } while (var_90h != 0);\n    uVar2 = 1;\n    *0x453ab8 = (*_sym.imp.GDI32.dll_CreateBitmap)(nWidth, nHeight, 1, 1, &lpvBits);\n    if (*0x453ab8 == 0) {\n        *0x453ab8 = (*_sym.imp.USER32.dll_LoadBitmapA)(0, 0x7fe3);\n    }\n    fcn.004294b3(uVar2);\n    return;\n}\n",
        "token_count": 611
    },
    "0041a238": {
        "rules": [
            "decompress data using aPLib/db7317f0dd944ab688d24dced6f5a7c2"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0041a238(uint32_t arg_8h)\n\n{\n    int32_t *in_ECX;\n    \n    if (arg_8h < 0x81) {\n        *in_ECX = in_ECX + 1;\n    }\n    else {\n        fcn.0041a1ad(arg_8h);\n    }\n    return *in_ECX;\n}\n",
        "token_count": 88
    },
    "0040a0e0": {
        "rules": [
            "encrypt data using Curve25519/ee72fa54c57a4f96b956b5431c8943ad"
        ],
        "decompiled_code": "\n// WARNING: Possible PIC construction at 0x0040a128: Changing call to branch\n// WARNING: Removing unreachable block (ram,0x0040a12d)\n// WARNING: Removing unreachable block (ram,0x0040a13e)\n// WARNING: Removing unreachable block (ram,0x0040a140)\n// WARNING: Removing unreachable block (ram,0x0040a157)\n\nvoid fcn.0040a0e0(int32_t param_1, int32_t param_2, uint32_t param_3)\n\n{\n    uint32_t uVar1;\n    uchar *puVar2;\n    uint32_t uVar3;\n    \n    uVar3 = *(param_1 + 0x10) + param_3 * 8;\n    uVar1 = *(param_1 + 0x10) >> 3 & 0x3f;\n    *(param_1 + 0x10) = uVar3;\n    if (uVar3 < param_3 * 8) {\n        *(param_1 + 0x14) = *(param_1 + 0x14) + 1;\n    }\n    *(param_1 + 0x14) = *(param_1 + 0x14) + (param_3 >> 0x1d);\n    uVar3 = 0x40 - uVar1;\n    if (uVar3 <= param_3) {\n        param_3 = uVar3;\n    }\n    puVar2 = uVar1 + 0x18 + param_1;\n    if (param_3 != 0) {\n        param_2 = param_2 - puVar2;\n        do {\n            *puVar2 = puVar2[param_2];\n            puVar2 = puVar2 + 1;\n            param_3 = param_3 - 1;\n        } while (param_3 != 0);\n    }\n    return;\n}\n",
        "token_count": 420
    },
    "0040a180": {
        "rules": [
            "encrypt data using Curve25519/ee72fa54c57a4f96b956b5431c8943ad"
        ],
        "decompiled_code": "\nvoid fcn.0040a180(uint param_1, int32_t param_2)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint in_stack_fffffff4;\n    \n    fcn.00409970();\n    uVar1 = *(param_2 + 0x10) >> 3 & 0x3f;\n    iVar2 = 0x38;\n    if (0x37 < uVar1) {\n        iVar2 = 0x78;\n    }\n    fcn.0040a0e0(param_2, 0x44e1e0, iVar2 - uVar1);\n    fcn.0040a0e0(param_2, &stack0xfffffff4, 8);\n    fcn.00409970();\n    fcn.00409a10(0);\n    fcn.004294b3(in_stack_fffffff4);\n    return;\n}\n",
        "token_count": 202
    },
    "00409970": {
        "rules": [
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00409970(int32_t param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uchar *puVar1;\n    uchar *puVar2;\n    int32_t iVar3;\n    \n    if (param_2 != 0) {\n        puVar2 = param_1 + 1;\n        puVar1 = in_EAX + 2;\n        iVar3 = (param_2 - 1U >> 2) + 1;\n        do {\n            puVar2[-1] = puVar1[-2];\n            *puVar2 = puVar1[-1];\n            puVar2[1] = *puVar1;\n            puVar2[2] = puVar1[1];\n            puVar1 = puVar1 + 4;\n            puVar2 = puVar2 + 4;\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != 0);\n    }\n    return;\n}\n",
        "token_count": 216
    },
    "004099b0": {
        "rules": [
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004099b0(int32_t param_1, uint *param_2)\n\n{\n    int32_t in_EAX;\n    ushort *puVar1;\n    int32_t iVar2;\n    \n    if (param_1 != 0) {\n        puVar1 = in_EAX + 2;\n        iVar2 = (param_1 - 1U >> 2) + 1;\n        do {\n            *param_2 = CONCAT31(CONCAT21(*puVar1, *(puVar1 + -1)), *(puVar1 + -1));\n            param_2 = param_2 + 1;\n            puVar1 = puVar1 + 2;\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    return;\n}\n",
        "token_count": 176
    },
    "004146d0": {
        "rules": [
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf"
        ],
        "decompiled_code": "\nvoid fcn.004146d0(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint *puVar4;\n    uint *puVar5;\n    \n    uVar3 = *(*(param_1 + 0x1c) + 0x14);\n    if (*(param_1 + 0x10) < uVar3) {\n        uVar3 = *(param_1 + 0x10);\n    }\n    if (uVar3 != 0) {\n        puVar4 = *(*(param_1 + 0x1c) + 0x10);\n        puVar5 = *(param_1 + 0xc);\n        for (uVar2 = uVar3 >> 2; uVar2 != 0; uVar2 = uVar2 - 1) {\n            *puVar5 = *puVar4;\n            puVar4 = puVar4 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        for (uVar2 = uVar3 & 3; uVar2 != 0; uVar2 = uVar2 - 1) {\n            *puVar5 = *puVar4;\n            puVar4 = puVar4 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        *(param_1 + 0xc) = *(param_1 + 0xc) + uVar3;\n        *(*(param_1 + 0x1c) + 0x10) = *(*(param_1 + 0x1c) + 0x10) + uVar3;\n        *(param_1 + 0x14) = *(param_1 + 0x14) + uVar3;\n        *(param_1 + 0x10) = *(param_1 + 0x10) - uVar3;\n        *(*(param_1 + 0x1c) + 0x14) = *(*(param_1 + 0x1c) + 0x14) - uVar3;\n        iVar1 = *(param_1 + 0x1c);\n        if (*(iVar1 + 0x14) == 0) {\n            *(iVar1 + 0x10) = *(iVar1 + 8);\n        }\n    }\n    return;\n}\n",
        "token_count": 523
    },
    "00418e00": {
        "rules": [
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf"
        ],
        "decompiled_code": "\nint32_t fcn.00418e00(int32_t param_1, int32_t param_2, int32_t param_3)\n\n{\n    uint uVar1;\n    uchar *puVar2;\n    uint32_t uVar3;\n    uint *puVar4;\n    uint32_t uVar5;\n    uint *puVar6;\n    uint *puVar7;\n    uint *puStack4;\n    \n    puVar4 = *(param_1 + 0x34);\n    puVar6 = *(param_1 + 0x30);\n    puStack4 = *(param_2 + 0xc);\n    if (puVar4 < puVar6) {\n        puVar4 = *(param_1 + 0x2c);\n    }\n    uVar3 = *(param_2 + 0x10);\n    uVar5 = puVar4 - puVar6;\n    if (uVar3 < puVar4 - puVar6) {\n        uVar5 = uVar3;\n    }\n    if ((uVar5 != 0) && (param_3 == -5)) {\n        param_3 = 0;\n    }\n    *(param_2 + 0x10) = uVar3 - uVar5;\n    *(param_2 + 0x14) = *(param_2 + 0x14) + uVar5;\n    if (*(param_1 + 0x38) != NULL) {\n        uVar1 = (**(param_1 + 0x38))(*(param_1 + 0x3c), puVar6, uVar5);\n        *(param_1 + 0x3c) = uVar1;\n        *(param_2 + 0x30) = uVar1;\n    }\n    puVar4 = puVar6;\n    puVar7 = puStack4;\n    for (uVar3 = uVar5 >> 2; uVar3 != 0; uVar3 = uVar3 - 1) {\n        *puVar7 = *puVar4;\n        puVar4 = puVar4 + 1;\n        puVar7 = puVar7 + 1;\n    }\n    puVar2 = puVar6 + uVar5;\n    for (uVar3 = uVar5 & 3; uVar3 != 0; uVar3 = uVar3 - 1) {\n        *puVar7 = *puVar4;\n        puVar4 = puVar4 + 1;\n        puVar7 = puVar7 + 1;\n    }\n    puStack4 = puStack4 + uVar5;\n    if (puVar2 == *(param_1 + 0x2c)) {\n        puVar4 = *(param_1 + 0x28);\n        if (*(param_1 + 0x34) == *(param_1 + 0x2c)) {\n            *(param_1 + 0x34) = puVar4;\n        }\n        uVar5 = *(param_1 + 0x34) - puVar4;\n        uVar3 = *(param_2 + 0x10);\n        if (uVar3 < uVar5) {\n            uVar5 = uVar3;\n        }\n        if ((uVar5 != 0) && (param_3 == -5)) {\n            param_3 = 0;\n        }\n        *(param_2 + 0x10) = uVar3 - uVar5;\n        *(param_2 + 0x14) = *(param_2 + 0x14) + uVar5;\n        if (*(param_1 + 0x38) != NULL) {\n            uVar1 = (**(param_1 + 0x38))(*(param_1 + 0x3c), puVar4, uVar5);\n            *(param_1 + 0x3c) = uVar1;\n            *(param_2 + 0x30) = uVar1;\n        }\n        puVar6 = puVar4;\n        puVar7 = puStack4;\n        for (uVar3 = uVar5 >> 2; uVar3 != 0; uVar3 = uVar3 - 1) {\n            *puVar7 = *puVar6;\n            puVar6 = puVar6 + 1;\n            puVar7 = puVar7 + 1;\n        }\n        puStack4 = puStack4 + uVar5;\n        puVar2 = puVar4 + uVar5;\n        for (uVar5 = uVar5 & 3; uVar5 != 0; uVar5 = uVar5 - 1) {\n            *puVar7 = *puVar6;\n            puVar6 = puVar6 + 1;\n            puVar7 = puVar7 + 1;\n        }\n    }\n    *(param_2 + 0xc) = puStack4;\n    *(param_1 + 0x30) = puVar2;\n    return param_3;\n}\n",
        "token_count": 1089
    },
    "00409a30": {
        "rules": [
            "encrypt data using Sosemanuk/d9cb91cf002a4780a153bbbb736437ff"
        ],
        "decompiled_code": "\nvoid fcn.00409a30(void)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    int32_t *unaff_EDI;\n    int32_t iStack64;\n    int32_t iStack60;\n    int32_t iStack56;\n    int32_t iStack52;\n    int32_t iStack48;\n    int32_t iStack44;\n    int32_t iStack40;\n    int32_t iStack36;\n    int32_t iStack32;\n    int32_t iStack28;\n    int32_t iStack24;\n    int32_t iStack20;\n    int32_t iStack16;\n    int32_t iStack12;\n    int32_t iStack8;\n    int32_t iStack4;\n    \n    uVar4 = unaff_EDI[2];\n    uVar2 = unaff_EDI[3];\n    uVar5 = unaff_EDI[1];\n    fcn.004099b0();\n    uVar1 = (~uVar5 & uVar2 | uVar4 & uVar5) + *unaff_EDI + -0x28955b88 + iStack64;\n    uVar1 = (uVar1 * 0x80 | uVar1 >> 0x19) + uVar5;\n    uVar2 = (~uVar1 & uVar4 | uVar5 & uVar1) + iStack60 + -0x173848aa + uVar2;\n    uVar2 = (uVar2 * 0x1000 | uVar2 >> 0x14) + uVar1;\n    uVar4 = (~uVar2 & uVar5 | uVar2 & uVar1) + iStack56 + 0x242070db + uVar4;\n    uVar4 = (uVar4 >> 0xf | uVar4 * 0x20000) + uVar2;\n    uVar5 = (~uVar4 & uVar1 | uVar2 & uVar4) + iStack52 + -0x3e423112 + uVar5;\n    uVar5 = (uVar5 >> 10 | uVar5 * 0x400000) + uVar4;\n    uVar1 = (~uVar5 & uVar2 | uVar4 & uVar5) + iStack48 + -0xa83f051 + uVar1;\n    uVar1 = (uVar1 * 0x80 | uVar1 >> 0x19) + uVar5;\n    uVar2 = (~uVar1 & uVar4 | uVar5 & uVar1) + iStack44 + 0x4787c62a + uVar2;\n    uVar2 = (uVar2 * 0x1000 | uVar2 >> 0x14) + uVar1;\n    uVar4 = (~uVar2 & uVar5 | uVar2 & uVar1) + iStack40 + -0x57cfb9ed + uVar4;\n    uVar4 = (uVar4 >> 0xf | uVar4 * 0x20000) + uVar2;\n    uVar5 = (~uVar4 & uVar1 | uVar2 & uVar4) + iStack36 + -0x2b96aff + uVar5;\n    uVar5 = (uVar5 >> 10 | uVar5 * 0x400000) + uVar4;\n    uVar1 = (~uVar5 & uVar2 | uVar4 & uVar5) + iStack32 + 0x698098d8 + uVar1;\n    uVar1 = (uVar1 * 0x80 | uVar1 >> 0x19) + uVar5;\n    uVar2 = (~uVar1 & uVar4 | uVar5 & uVar1) + iStack28 + -0x74bb0851 + uVar2;\n    uVar2 = (uVar2 * 0x1000 | uVar2 >> 0x14) + uVar1;\n    uVar4 = (~uVar2 & uVar5 | uVar2 & uVar1) + iStack24 + -0xa44f + uVar4;\n    uVar4 = (uVar4 >> 0xf | uVar4 * 0x20000) + uVar2;\n    uVar5 = (~uVar4 & uVar1 | uVar2 & uVar4) + iStack20 + -0x76a32842 + uVar5;\n    uVar5 = (uVar5 >> 10 | uVar5 * 0x400000) + uVar4;\n    uVar1 = (~uVar5 & uVar2 | uVar4 & uVar5) + iStack16 + 0x6b901122 + uVar1;\n    uVar1 = (uVar1 * 0x80 | uVar1 >> 0x19) + uVar5;\n    uVar2 = (~uVar1 & uVar4 | uVar5 & uVar1) + iStack12 + -0x2678e6d + uVar2;\n    uVar2 = (uVar2 * 0x1000 | uVar2 >> 0x14) + uVar1;\n    uVar4 = (~uVar2 & uVar5 | uVar2 & uVar1) + iStack8 + -0x5986bc72 + uVar4;\n    uVar4 = (uVar4 >> 0xf | uVar4 * 0x20000) + uVar2;\n    uVar5 = (~uVar4 & uVar1 | uVar2 & uVar4) + iStack4 + 0x49b40821 + uVar5;\n    uVar5 = (uVar5 >> 10 | uVar5 * 0x400000) + uVar4;\n    uVar1 = (~uVar2 & uVar4 | uVar2 & uVar5) + iStack60 + -0x9e1da9e + uVar1;\n    uVar1 = (uVar1 * 0x20 | uVar1 >> 0x1b) + uVar5;\n    uVar2 = (~uVar4 & uVar5 | uVar4 & uVar1) + iStack40 + -0x3fbf4cc0 + uVar2;\n    uVar2 = (uVar2 * 0x200 | uVar2 >> 0x17) + uVar1;\n    uVar4 = (~uVar5 & uVar1 | uVar2 & uVar5) + iStack20 + 0x265e5a51 + uVar4;\n    uVar4 = (uVar4 * 0x4000 | uVar4 >> 0x12) + uVar2;\n    uVar5 = (~uVar1 & uVar2 | uVar4 & uVar1) + iStack64 + -0x16493856 + uVar5;\n    uVar5 = (uVar5 >> 0xc | uVar5 * 0x100000) + uVar4;\n    uVar1 = (~uVar2 & uVar4 | uVar2 & uVar5) + iStack44 + -0x29d0efa3 + uVar1;\n    uVar1 = (uVar1 * 0x20 | uVar1 >> 0x1b) + uVar5;\n    uVar2 = (~uVar4 & uVar5 | uVar4 & uVar1) + iStack24 + 0x2441453 + uVar2;\n    uVar2 = (uVar2 * 0x200 | uVar2 >> 0x17) + uVar1;\n    uVar4 = (~uVar5 & uVar1 | uVar2 & uVar5) + iStack4 + -0x275e197f + uVar4;\n    uVar4 = (uVar4 * 0x4000 | uVar4 >> 0x12) + uVar2;\n    uVar5 = (~uVar1 & uVar2 | uVar4 & uVar1) + iStack48 + -0x182c0438 + uVar5;\n    uVar5 = (uVar5 >> 0xc | uVar5 * 0x100000) + uVar4;\n    uVar1 = (~uVar2 & uVar4 | uVar2 & uVar5) + iStack28 + 0x21e1cde6 + uVar1;\n    uVar1 = (uVar1 * 0x20 | uVar1 >> 0x1b) + uVar5;\n    uVar2 = (~uVar4 & uVar5 | uVar4 & uVar1) + iStack8 + -0x3cc8f82a + uVar2;\n    uVar2 = (uVar2 * 0x200 | uVar2 >> 0x17) + uVar1;\n    uVar4 = (~uVar5 & uVar1 | uVar2 & uVar5) + iStack52 + -0xb2af279 + uVar4;\n    uVar4 = (uVar4 * 0x4000 | uVar4 >> 0x12) + uVar2;\n    uVar5 = (~uVar1 & uVar2 | uVar4 & uVar1) + iStack32 + 0x455a14ed + uVar5;\n    uVar5 = (uVar5 >> 0xc | uVar5 * 0x100000) + uVar4;\n    uVar1 = (~uVar2 & uVar4 | uVar2 & uVar5) + iStack12 + -0x561c16fb + uVar1;\n    uVar1 = (uVar1 * 0x20 | uVar1 >> 0x1b) + uVar5;\n    uVar2 = (~uVar4 & uVar5 | uVar4 & uVar1) + iStack56 + -0x3105c08 + uVar2;\n    uVar2 = (uVar2 * 0x200 | uVar2 >> 0x17) + uVar1;\n    uVar4 = (~uVar5 & uVar1 | uVar2 & uVar5) + iStack36 + 0x676f02d9 + uVar4;\n    uVar4 = (uVar4 * 0x4000 | uVar4 >> 0x12) + uVar2;\n    uVar5 = (~uVar1 & uVar2 | uVar4 & uVar1) + iStack16 + -0x72d5b376 + uVar5;\n    uVar5 = (uVar5 >> 0xc | uVar5 * 0x100000) + uVar4;\n    uVar1 = (uVar2 ^ uVar4 ^ uVar5) + iStack44 + -0x5c6be + uVar1;\n    uVar1 = (uVar1 * 0x10 | uVar1 >> 0x1c) + uVar5;\n    uVar2 = (uVar4 ^ uVar5 ^ uVar1) + iStack32 + -0x788e097f + uVar2;\n    uVar2 = (uVar2 * 0x800 | uVar2 >> 0x15) + uVar1;\n    uVar4 = (uVar2 ^ uVar5 ^ uVar1) + iStack20 + 0x6d9d6122 + uVar4;\n    uVar4 = (uVar4 * 0x10000 | uVar4 >> 0x10) + uVar2;\n    uVar5 = (uVar2 ^ uVar4 ^ uVar1) + iStack8 + -0x21ac7f4 + uVar5;\n    uVar3 = (uVar5 >> 9 | uVar5 * 0x800000) + uVar4;\n    uVar1 = uVar1 + 0xa4beea44 + (uVar2 ^ uVar4 ^ uVar3) + iStack60;\n    uVar5 = (uVar1 * 0x10 | uVar1 >> 0x1c) + uVar3;\n    uVar2 = (uVar4 ^ uVar3 ^ uVar5) + iStack48 + 0x4bdecfa9 + uVar2;\n    uVar2 = (uVar2 * 0x800 | uVar2 >> 0x15) + uVar5;\n    uVar4 = (uVar2 ^ uVar3 ^ uVar5) + iStack36 + -0x944b4a0 + uVar4;\n    uVar4 = (uVar4 * 0x10000 | uVar4 >> 0x10) + uVar2;\n    uVar1 = uVar3 + 0xbebfbc70 + (uVar2 ^ uVar4 ^ uVar5) + iStack24;\n    uVar1 = (uVar1 >> 9 | uVar1 * 0x800000) + uVar4;\n    uVar5 = (uVar2 ^ uVar4 ^ uVar1) + iStack12 + 0x289b7ec6 + uVar5;\n    uVar5 = (uVar5 * 0x10 | uVar5 >> 0x1c) + uVar1;\n    uVar2 = (uVar4 ^ uVar1 ^ uVar5) + iStack64 + -0x155ed806 + uVar2;\n    uVar2 = (uVar2 * 0x800 | uVar2 >> 0x15) + uVar5;\n    uVar4 = (uVar2 ^ uVar1 ^ uVar5) + iStack52 + -0x2b10cf7b + uVar4;\n    uVar4 = (uVar4 * 0x10000 | uVar4 >> 0x10) + uVar2;\n    uVar1 = uVar1 + 0x4881d05 + (uVar2 ^ uVar4 ^ uVar5) + iStack40;\n    uVar1 = (uVar1 >> 9 | uVar1 * 0x800000) + uVar4;\n    uVar5 = (uVar2 ^ uVar4 ^ uVar1) + iStack28 + -0x262b2fc7 + uVar5;\n    uVar5 = (uVar5 * 0x10 | uVar5 >> 0x1c) + uVar1;\n    uVar2 = (uVar4 ^ uVar1 ^ uVar5) + iStack16 + -0x1924661b + uVar2;\n    uVar2 = (uVar2 * 0x800 | uVar2 >> 0x15) + uVar5;\n    uVar4 = (uVar2 ^ uVar1 ^ uVar5) + iStack4 + 0x1fa27cf8 + uVar4;\n    uVar4 = (uVar4 * 0x10000 | uVar4 >> 0x10) + uVar2;\n    uVar1 = (uVar2 ^ uVar4 ^ uVar5) + iStack56 + -0x3b53a99b + uVar1;\n    uVar1 = (uVar1 >> 9 | uVar1 * 0x800000) + uVar4;\n    uVar5 = ((~uVar2 | uVar1) ^ uVar4) + iStack64 + -0xbd6ddbc + uVar5;\n    uVar5 = (uVar5 * 0x40 | uVar5 >> 0x1a) + uVar1;\n    uVar2 = ((~uVar4 | uVar5) ^ uVar1) + iStack36 + 0x432aff97 + uVar2;\n    uVar2 = (uVar2 * 0x400 | uVar2 >> 0x16) + uVar5;\n    uVar4 = ((~uVar1 | uVar2) ^ uVar5) + iStack8 + -0x546bdc59 + uVar4;\n    uVar4 = (uVar4 * 0x8000 | uVar4 >> 0x11) + uVar2;\n    uVar1 = ((~uVar5 | uVar4) ^ uVar2) + iStack44 + -0x36c5fc7 + uVar1;\n    uVar1 = (uVar1 >> 0xb | uVar1 * 0x200000) + uVar4;\n    uVar5 = ((~uVar2 | uVar1) ^ uVar4) + iStack16 + 0x655b59c3 + uVar5;\n    uVar5 = (uVar5 * 0x40 | uVar5 >> 0x1a) + uVar1;\n    uVar2 = ((~uVar4 | uVar5) ^ uVar1) + iStack52 + -0x70f3336e + uVar2;\n    uVar2 = (uVar2 * 0x400 | uVar2 >> 0x16) + uVar5;\n    uVar4 = ((~uVar1 | uVar2) ^ uVar5) + iStack24 + -0x100b83 + uVar4;\n    uVar4 = (uVar4 * 0x8000 | uVar4 >> 0x11) + uVar2;\n    uVar1 = ((~uVar5 | uVar4) ^ uVar2) + iStack60 + -0x7a7ba22f + uVar1;\n    uVar1 = (uVar1 >> 0xb | uVar1 * 0x200000) + uVar4;\n    uVar5 = ((~uVar2 | uVar1) ^ uVar4) + iStack32 + 0x6fa87e4f + uVar5;\n    uVar5 = (uVar5 * 0x40 | uVar5 >> 0x1a) + uVar1;\n    uVar2 = ((~uVar4 | uVar5) ^ uVar1) + iStack4 + -0x1d31920 + uVar2;\n    uVar2 = (uVar2 * 0x400 | uVar2 >> 0x16) + uVar5;\n    uVar4 = ((~uVar1 | uVar2) ^ uVar5) + iStack40 + -0x5cfebcec + uVar4;\n    uVar4 = (uVar4 * 0x8000 | uVar4 >> 0x11) + uVar2;\n    uVar1 = ((~uVar5 | uVar4) ^ uVar2) + iStack12 + 0x4e0811a1 + uVar1;\n    uVar1 = (uVar1 >> 0xb | uVar1 * 0x200000) + uVar4;\n    uVar5 = ((~uVar2 | uVar1) ^ uVar4) + iStack48 + -0x8ac817e + uVar5;\n    uVar5 = (uVar5 * 0x40 | uVar5 >> 0x1a) + uVar1;\n    uVar2 = ((~uVar4 | uVar5) ^ uVar1) + iStack20 + -0x42c50dcb + uVar2;\n    uVar2 = (uVar2 * 0x400 | uVar2 >> 0x16) + uVar5;\n    uVar4 = ((~uVar1 | uVar2) ^ uVar5) + iStack56 + 0x2ad7d2bb + uVar4;\n    uVar4 = (uVar4 * 0x8000 | uVar4 >> 0x11) + uVar2;\n    *unaff_EDI = *unaff_EDI + uVar5;\n    uVar1 = ((~uVar5 | uVar4) ^ uVar2) + iStack28 + -0x14792c6f + uVar1;\n    unaff_EDI[1] = (uVar1 >> 0xb | uVar1 * 0x200000) + unaff_EDI[1] + uVar4;\n    unaff_EDI[2] = unaff_EDI[2] + uVar4;\n    unaff_EDI[3] = unaff_EDI[3] + uVar2;\n    return;\n}\n",
        "token_count": 4616
    },
    "00413c80": {
        "rules": [
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0",
            "hash data using aphash/10489b186fc44711a1078750698db7a9"
        ],
        "decompiled_code": "\nuint32_t fcn.00413c80(uint32_t param_1, uint8_t *param_2, uint32_t param_3)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    \n    if (param_2 == NULL) {\n        return 0;\n    }\n    if (*0x44e6c4 != 0) {\n        fcn.00413c20();\n    }\n    param_1 = ~param_1;\n    if (7 < param_3) {\n        uVar2 = param_3 >> 3;\n        do {\n            param_3 = param_3 - 8;\n            uVar1 = *((param_1 & 0xff ^ *param_2) * 4 + 0x451af4) ^ param_1 >> 8;\n            uVar1 = *((uVar1 & 0xff ^ param_2[1]) * 4 + 0x451af4) ^ uVar1 >> 8;\n            uVar1 = *((uVar1 & 0xff ^ param_2[2]) * 4 + 0x451af4) ^ uVar1 >> 8;\n            uVar1 = *((uVar1 & 0xff ^ param_2[3]) * 4 + 0x451af4) ^ uVar1 >> 8;\n            uVar1 = *((uVar1 & 0xff ^ param_2[4]) * 4 + 0x451af4) ^ uVar1 >> 8;\n            uVar1 = *((uVar1 & 0xff ^ param_2[5]) * 4 + 0x451af4) ^ uVar1 >> 8;\n            uVar1 = *((uVar1 & 0xff ^ param_2[6]) * 4 + 0x451af4) ^ uVar1 >> 8;\n            param_1 = uVar1 >> 8 ^ *((uVar1 & 0xff ^ param_2[7]) * 4 + 0x451af4);\n            param_2 = param_2 + 8;\n            uVar2 = uVar2 - 1;\n        } while (uVar2 != 0);\n    }\n    for (; param_3 != 0; param_3 = param_3 - 1) {\n        param_1 = param_1 >> 8 ^ *((param_1 & 0xff ^ *param_2) * 4 + 0x451af4);\n        param_2 = param_2 + 1;\n    }\n    return ~param_1;\n}\n",
        "token_count": 569
    },
    "00418f30": {
        "rules": [
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0",
            "hash data using aphash/10489b186fc44711a1078750698db7a9"
        ],
        "decompiled_code": "\nuint fcn.00418f30(uint32_t param_1, int32_t param_2, int32_t param_3, int32_t param_4, int32_t param_5, \n                 uint8_t **param_6)\n\n{\n    uint8_t *puVar1;\n    uint8_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    uint8_t *puVar10;\n    uchar *puVar11;\n    uchar *puVar12;\n    int32_t iVar13;\n    uint8_t *puStack20;\n    uchar *puStack16;\n    uchar *puStack12;\n    \n    puStack16 = *(param_5 + 0x34);\n    uVar8 = *(param_5 + 0x20);\n    puStack20 = param_6[1];\n    puVar10 = *param_6;\n    uVar3 = *(param_5 + 0x1c);\n    if (puStack16 < *(param_5 + 0x30)) {\n        puStack12 = *(param_5 + 0x30) + (-1 - puStack16);\n    }\n    else {\n        puStack12 = *(param_5 + 0x2c) - puStack16;\n    }\n    uVar7 = *(param_1 * 4 + 0x44fac0);\n    uVar6 = *(param_2 * 4 + 0x44fac0);\n    do {\n        for (; uVar3 < 0x14; uVar3 = uVar3 + 8) {\n            puStack20 = puStack20 + -1;\n            uVar8 = uVar8 | *puVar10 << (uVar3 & 0x1f);\n            puVar10 = puVar10 + 1;\n        }\n        uVar4 = uVar7 & uVar8;\n        uVar2 = *(param_3 + uVar4 * 8);\n        uVar9 = uVar2;\n        iVar13 = param_3 + uVar4 * 8;\n        if (uVar9 == 0) {\ncode_r0x00419168:\n            uVar8 = uVar8 >> (*(iVar13 + 1) & 0x1f);\n            uVar3 = uVar3 - *(iVar13 + 1);\n            *puStack16 = *(iVar13 + 4);\n            puStack16 = puStack16 + 1;\n            puStack12 = puStack12 + -1;\n        }\n        else {\n            uVar8 = uVar8 >> (*(iVar13 + 1) & 0x1f);\n            uVar3 = uVar3 - *(iVar13 + 1);\n            while ((uVar2 & 0x10) == 0) {\n                if ((uVar9 & 0x40) != 0) {\n                    if ((uVar9 & 0x20) != 0) {\n                        uVar7 = param_6[1] - puStack20;\n                        if (uVar3 >> 3 < param_6[1] - puStack20) {\n                            uVar7 = uVar3 >> 3;\n                        }\n                        *(param_5 + 0x20) = uVar8;\n                        *(param_5 + 0x1c) = uVar3 + uVar7 * -8;\n                        puVar1 = *param_6;\n                        param_6[1] = puStack20 + uVar7;\n                        *param_6 = puVar10 + -uVar7;\n                        param_6[2] = param_6[2] + ((puVar10 + -uVar7) - puVar1);\n                        *(param_5 + 0x34) = puStack16;\n                        return 1;\n                    }\n                    uVar6 = param_6[1] - puStack20;\n                    param_6[6] = \"invalid literal/length code\";\n                    uVar7 = uVar3 >> 3;\n                    if (uVar3 >> 3 < uVar6) goto code_r0x0041927f;\n                    goto code_r0x00419281;\n                }\n                iVar5 = (*(uVar9 * 4 + 0x44fac0) & uVar8) + *(iVar13 + 4);\n                uVar2 = *(iVar13 + iVar5 * 8);\n                uVar9 = uVar2;\n                iVar13 = iVar13 + iVar5 * 8;\n                if (uVar9 == 0) goto code_r0x00419168;\n                uVar8 = uVar8 >> (*(iVar13 + 1) & 0x1f);\n                uVar3 = uVar3 - *(iVar13 + 1);\n            }\n            uVar9 = uVar9 & 0xf;\n            param_1 = (*(uVar9 * 4 + 0x44fac0) & uVar8) + *(iVar13 + 4);\n            uVar8 = uVar8 >> uVar9;\n            for (uVar3 = uVar3 - uVar9; uVar3 < 0xf; uVar3 = uVar3 + 8) {\n                puStack20 = puStack20 + -1;\n                uVar8 = uVar8 | *puVar10 << (uVar3 & 0x1f);\n                puVar10 = puVar10 + 1;\n            }\n            uVar9 = uVar6 & uVar8;\n            iVar13 = param_4 + uVar9 * 8;\n            uVar8 = uVar8 >> (*(iVar13 + 1) & 0x1f);\n            uVar3 = uVar3 - *(iVar13 + 1);\n            uVar2 = *(param_4 + uVar9 * 8);\n            while ((uVar2 & 0x10) == 0) {\n                if ((uVar2 & 0x40) != 0) {\n                    uVar6 = param_6[1] - puStack20;\n                    param_6[6] = \"invalid distance code\";\n                    uVar7 = uVar3 >> 3;\n                    if (uVar3 >> 3 < uVar6) {\ncode_r0x0041927f:\n                        uVar6 = uVar7;\n                    }\ncode_r0x00419281:\n                    *(param_5 + 0x20) = uVar8;\n                    *(param_5 + 0x1c) = uVar3 + uVar6 * -8;\n                    puVar1 = *param_6;\n                    param_6[1] = puStack20 + uVar6;\n                    *param_6 = puVar10 + -uVar6;\n                    param_6[2] = param_6[2] + ((puVar10 + -uVar6) - puVar1);\n                    *(param_5 + 0x34) = puStack16;\n                    return 0xfffffffd;\n                }\n                iVar5 = (*(uVar2 * 4 + 0x44fac0) & uVar8) + *(iVar13 + 4);\n                puVar1 = iVar13 + iVar5 * 8;\n                iVar13 = iVar13 + iVar5 * 8;\n                uVar8 = uVar8 >> (*(iVar13 + 1) & 0x1f);\n                uVar3 = uVar3 - *(iVar13 + 1);\n                uVar2 = *puVar1;\n            }\n            uVar9 = uVar2 & 0xf;\n            for (; uVar3 < uVar9; uVar3 = uVar3 + 8) {\n                puStack20 = puStack20 + -1;\n                uVar8 = uVar8 | *puVar10 << (uVar3 & 0x1f);\n                puVar10 = puVar10 + 1;\n            }\n            uVar4 = (*(uVar9 * 4 + 0x44fac0) & uVar8) + *(iVar13 + 4);\n            uVar8 = uVar8 >> uVar9;\n            uVar3 = uVar3 - uVar9;\n            puStack12 = puStack12 + -param_1;\n            if (puStack16 - *(param_5 + 0x28) < uVar4) {\n                uVar4 = (*(param_5 + 0x28) - puStack16) + uVar4;\n                puVar12 = *(param_5 + 0x2c) - uVar4;\n                if (uVar4 < param_1) {\n                    param_1 = param_1 - uVar4;\n                    do {\n                        *puStack16 = *puVar12;\n                        puStack16 = puStack16 + 1;\n                        puVar12 = puVar12 + 1;\n                        uVar4 = uVar4 - 1;\n                    } while (uVar4 != 0);\n                    puVar12 = *(param_5 + 0x28);\n                }\n            }\n            else {\n                puVar11 = puStack16 + -uVar4;\n                *puStack16 = *puVar11;\n                puVar12 = puVar11 + 2;\n                puStack16[1] = puVar11[1];\n                param_1 = param_1 - 2;\n                puStack16 = puStack16 + 2;\n            }\n            do {\n                *puStack16 = *puVar12;\n                puStack16 = puStack16 + 1;\n                puVar12 = puVar12 + 1;\n                param_1 = param_1 - 1;\n            } while (param_1 != 0);\n        }\n        if ((puStack12 < 0x102) || (puStack20 < 0xa)) {\n            uVar7 = param_6[1] - puStack20;\n            if (uVar3 >> 3 < param_6[1] - puStack20) {\n                uVar7 = uVar3 >> 3;\n            }\n            *(param_5 + 0x20) = uVar8;\n            *(param_5 + 0x1c) = uVar3 + uVar7 * -8;\n            puVar1 = *param_6;\n            param_6[1] = puStack20 + uVar7;\n            *param_6 = puVar10 + -uVar7;\n            param_6[2] = param_6[2] + ((puVar10 + -uVar7) - puVar1);\n            *(param_5 + 0x34) = puStack16;\n            return 0;\n        }\n    } while( true );\n}\n",
        "token_count": 2359
    },
    "0040bc30": {
        "rules": [
            "calculate modulo 256 via x86 assembly"
        ],
        "decompiled_code": "\nuint32_t fcn.0040bc30(uint32_t param_1, char param_2)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00413c00();\n    return param_1 >> 8 ^ *(iVar1 + ((param_2 ^ param_1) & 0xff) * 4);\n}\n",
        "token_count": 76
    },
    "00426bdd": {
        "rules": [
            "calculate modulo 256 via x86 assembly"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00426bdd(int32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    \n    if (arg_8h != 0) {\n        uVar1 = (*_sym.imp.KERNEL32.dll_GlobalFlags)(arg_8h);\n        for (uVar1 = uVar1 & 0xff; uVar1 != 0; uVar1 = uVar1 - 1) {\n            (*_sym.imp.KERNEL32.dll_GlobalUnlock)(arg_8h);\n        }\n        (*_sym.imp.KERNEL32.dll_GlobalFree)(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 137
    },
    "0040c210": {
        "rules": [
            "generate random numbers using the Delphi LCG/d1e3669b265a4cefae2dee380548f202",
            "generate random numbers using the Delphi LCG/d1e3669b265a4cefae2dee380548f202"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0040c210(int32_t param_1, uint param_2)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    uint32_t unaff_ESI;\n    \n    uVar1 = fcn.0040bc30(*(param_1 + 0x198), param_2);\n    *(param_1 + 0x198) = uVar1;\n    uVar1 = ((uVar1 & 0xff) + *(param_1 + 0x19c)) * 0x8088405 + 1;\n    *(param_1 + 0x19c) = uVar1;\n    uVar2 = fcn.0040bc30(*(param_1 + 0x1a0), unaff_ESI & 0xffffff00 | uVar1 >> 0x18);\n    *(param_1 + 0x1a0) = uVar2;\n    return;\n}\n",
        "token_count": 210
    },
    "0040f6c0": {
        "rules": [
            "check for PEB NtGlobalFlag flag/02e6ad6983154968a9ea3bb4adc24b9d/10fcbce0171842839e4e3d1dbc7c6301"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0040f6c0(int32_t param_1, uint32_t param_2)\n\n{\n    int32_t iVar1;\n    char cVar2;\n    \n    if ((param_2 & 0xffff) < *(param_1 + 0x34)) {\n        iVar1 = *(*(param_1 + 0x30) + (param_2 & 0xffff) * 4);\n        *(param_1 + 0x20) = iVar1;\n        fcn.004139e0(*(iVar1 + 0x20));\n        (**(**(*(param_1 + 0x24) + 0x1c) + 0x10))(*(*(param_1 + 0x20) + 0x28) + *(param_1 + 0x68), 0, 0);\n        cVar2 = fcn.00411760();\n        if (cVar2 == '\\0') {\n            fcn.0040f630();\n        }\n        fcn.0040e820();\n        if (*0x10 == -0x2c) {\n            return;\n        }\n        iVar1 = *(*(param_1 + 0x24) + 0x50);\n        fcn.0040e850();\n        fcn.00413af0(*(param_1 + 0x18));\n        if (*(*(param_1 + 0x24) + 0x50) == iVar1) {\n            return;\n        }\n        fcn.0040f630(0x65);\n    }\n    fcn.0041944d();\n    return;\n}\n",
        "token_count": 354
    },
    "00423590": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489",
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00423590(uint32_t arg_8h, uint32_t arg_ch, int32_t arg_10h, int32_t *arg_14h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint var_ch;\n    int32_t *var_8h;\n    int32_t var_4h;\n    \n    if (arg_8h < 0x112) {\n        if (arg_8h == 0x111) {\n            iVar2 = fcn.0041d73d(0, arg_ch >> 0x10 | 0xbd110000, 0, 0);\n            if (iVar2 == 0) {\n                return 0;\n            }\n            if (arg_14h != NULL) {\n                *arg_14h = 1;\n                return 1;\n            }\n            return 1;\n        }\n        if (0x2a < arg_8h) {\n            if ((arg_8h < 0x30) || (arg_8h == 0x39)) goto code_r0x00423626;\n            if (arg_8h == 0x4e) {\n                var_8h = arg_14h;\n                var_4h = arg_10h;\n                uVar1 = fcn.0041d73d(0, *(arg_10h + 8) & 0xffff | 0xbc4e0000, &var_8h, 0);\n                return uVar1;\n            }\n        }\n    }\n    else if ((0x113 < arg_8h) && ((arg_8h < 0x116 || (arg_8h == 0x210)))) {\ncode_r0x00423626:\n        uVar1 = fcn.00422e7c(arg_8h + 0xbc00, arg_ch, arg_10h, arg_14h);\n        return uVar1;\n    }\n    if (arg_8h - 0x132 < 7) {\n        var_4h = arg_8h - 0x132;\n        var_8h = arg_ch;\n        uVar1 = fcn.00422e7c(0xbc19, 0, &var_ch, arg_14h);\n        if (*arg_14h != 0) {\n            return uVar1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 528
    },
    "004122e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nint32_t fcn.004122e0(uint param_1)\n\n{\n    int32_t *piVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t *unaff_EBP;\n    int32_t unaff_ESI;\n    int32_t unaff_EDI;\n    int32_t *in_FS_OFFSET;\n    int32_t iStack60;\n    int32_t iStack56;\n    int32_t iStack52;\n    int32_t aiStack48 [2];\n    int32_t iStack40;\n    uint32_t uStack32;\n    uint uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x43f510;\n    uStack12 = *in_FS_OFFSET;\n    uVar2 = *0x45060c ^ &stack0xffffffb4;\n    *in_FS_OFFSET = &uStack12;\n    fcn.0040cd80(param_1);\n    uStack8 = 0;\n    fcn.00412210(&stack0xffffffc0);\n    uStack12 = CONCAT31(uStack12._1_3_, 1);\n    iVar3 = (*_sym.imp.KERNEL32.dll_GetDiskFreeSpaceA)(unaff_EBP, &iStack60, &iStack56);\n    if (iVar3 == 0) {\n        fcn.00401f60(0x4423b4);\n        iVar3 = iStack60 + 1;\n        unaff_EBP = aiStack48;\n        if ((iStack56 - iVar3 | 1U - iStack52) < 0) {\n            fcn.00401660(iVar3);\n            unaff_EBP = &iStack52;\n        }\n        *(unaff_EBP + iStack60) = 0x5c;\n        if ((iVar3 < 0) || (unaff_EBP[-2] < iVar3)) {\n            fcn.00401090(0x80070057);\n        }\n        else {\n            unaff_EBP[-3] = iVar3;\n            *(iVar3 + unaff_EBP) = 0;\n            iVar3 = (*_sym.imp.KERNEL32.dll_GetDiskFreeSpaceA)\n                              (unaff_EBP, &stack0xffffffb4, &stack0xffffffb8, &stack0xffffffbc, &stack0xffffffc0);\n            if (iVar3 == 0) {\n                uStack32 = uStack32 & 0xffffff00;\n                piVar1 = unaff_EBP + -1;\n                LOCK();\n                iVar3 = *piVar1;\n                *piVar1 = *piVar1 + -1;\n                if (iVar3 == 1 || iVar3 + -1 < 0) {\n                    (**(*unaff_EBP[-4] + 4))(unaff_EBP + -4);\n                }\n                uStack32 = 0xffffffff;\n                fcn.00411b00();\n                *in_FS_OFFSET = iStack40;\n                return 0;\n            }\n        }\n    }\n    uStack32 = uStack32 & 0xffffff00;\n    piVar1 = unaff_EBP + -1;\n    LOCK();\n    iVar3 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar3 == 1 || iVar3 + -1 < 0) {\n        (**(*unaff_EBP[-4] + 4))(unaff_EBP + -4);\n    }\n    uStack32 = 0xffffffff;\n    fcn.00411b00();\n    *in_FS_OFFSET = iStack40;\n    return uVar2 * unaff_EDI * unaff_ESI;\n}\n",
        "token_count": 811
    },
    "004210f0": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nint32_t fcn.004210f0(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    iVar1 = fcn.00425a63(0x419469);\n    if (iVar1 == 0) {\n        fcn.0041944d();\n    }\n    uVar2 = (*_sym.imp.USER32.dll_GetMessageTime)();\n    *(iVar1 + 0x68) = uVar2;\n    uVar2 = (*_sym.imp.USER32.dll_GetMessagePos)();\n    *(iVar1 + 0x70) = uVar2 >> 0x10;\n    *(iVar1 + 0x6c) = uVar2;\n    return iVar1 + 0x58;\n}\n",
        "token_count": 160
    },
    "004164b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23"
        ],
        "decompiled_code": "\nvoid fcn.004164b0(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    \n    iVar3 = *(param_1 + 0x16b4);\n    if (iVar3 < 0xe) {\n        *(param_1 + 0x16b0) = *(param_1 + 0x16b0) | 2 << (iVar3 & 0x1f);\n        *(param_1 + 0x16b4) = iVar3 + 3;\n    }\n    else {\n        *(param_1 + 0x16b0) = *(param_1 + 0x16b0) | 2 << (iVar3 & 0x1f);\n        *(*(param_1 + 8) + *(param_1 + 0x14)) = *(param_1 + 0x16b0);\n        iVar3 = *(param_1 + 0x14) + 1;\n        *(param_1 + 0x14) = iVar3;\n        *(*(param_1 + 8) + iVar3) = *(param_1 + 0x16b1);\n        *(param_1 + 0x14) = *(param_1 + 0x14) + 1;\n        iVar3 = *(param_1 + 0x16b4);\n        *(param_1 + 0x16b4) = iVar3 + -0xd;\n        *(param_1 + 0x16b0) = 2 >> (0x10U - iVar3 & 0x1f);\n    }\n    iVar3 = *(param_1 + 0x16b4);\n    uVar1 = *0x443050 >> 0x10;\n    if (0x10 - uVar1 < iVar3) {\n        uVar2 = *0x443050 & 0xffff;\n        *(param_1 + 0x16b0) = *(param_1 + 0x16b0) | uVar2 << (iVar3 & 0x1f);\n        *(*(param_1 + 8) + *(param_1 + 0x14)) = *(param_1 + 0x16b0);\n        iVar3 = *(param_1 + 0x14) + 1;\n        *(param_1 + 0x14) = iVar3;\n        *(*(param_1 + 8) + iVar3) = *(param_1 + 0x16b1);\n        iVar3 = *(param_1 + 0x16b4);\n        *(param_1 + 0x14) = *(param_1 + 0x14) + 1;\n        *(param_1 + 0x16b4) = iVar3 + -0x10 + uVar1;\n        *(param_1 + 0x16b0) = uVar2 >> (0x10U - iVar3 & 0x1f);\n    }\n    else {\n        *(param_1 + 0x16b0) = *(param_1 + 0x16b0) | *0x443050 << (iVar3 & 0x1f);\n        *(param_1 + 0x16b4) = iVar3 + uVar1;\n    }\n    fcn.00417d00(param_1);\n    iVar3 = *(param_1 + 0x16b4);\n    if ((*(param_1 + 0x16ac) - iVar3) + 0xb < 9) {\n        if (iVar3 < 0xe) {\n            *(param_1 + 0x16b0) = *(param_1 + 0x16b0) | 2 << (iVar3 & 0x1f);\n            *(param_1 + 0x16b4) = iVar3 + 3;\n        }\n        else {\n            *(param_1 + 0x16b0) = *(param_1 + 0x16b0) | 2 << (iVar3 & 0x1f);\n            *(*(param_1 + 8) + *(param_1 + 0x14)) = *(param_1 + 0x16b0);\n            iVar3 = *(param_1 + 0x14) + 1;\n            *(param_1 + 0x14) = iVar3;\n            *(*(param_1 + 8) + iVar3) = *(param_1 + 0x16b1);\n            *(param_1 + 0x14) = *(param_1 + 0x14) + 1;\n            iVar3 = *(param_1 + 0x16b4);\n            *(param_1 + 0x16b4) = iVar3 + -0xd;\n            *(param_1 + 0x16b0) = 2 >> (0x10U - iVar3 & 0x1f);\n        }\n        iVar3 = *(param_1 + 0x16b4);\n        uVar1 = *0x443050 >> 0x10;\n        if (0x10 - uVar1 < iVar3) {\n            uVar2 = *0x443050 & 0xffff;\n            *(param_1 + 0x16b0) = *(param_1 + 0x16b0) | uVar2 << (iVar3 & 0x1f);\n            *(*(param_1 + 8) + *(param_1 + 0x14)) = *(param_1 + 0x16b0);\n            iVar3 = *(param_1 + 0x14) + 1;\n            *(param_1 + 0x14) = iVar3;\n            *(*(param_1 + 8) + iVar3) = *(param_1 + 0x16b1);\n            iVar3 = *(param_1 + 0x16b4);\n            *(param_1 + 0x14) = *(param_1 + 0x14) + 1;\n            *(param_1 + 0x16b4) = iVar3 + -0x10 + uVar1;\n            *(param_1 + 0x16b0) = uVar2 >> (0x10U - iVar3 & 0x1f);\n        }\n        else {\n            *(param_1 + 0x16b0) = *(param_1 + 0x16b0) | *0x443050 << (iVar3 & 0x1f);\n            *(param_1 + 0x16b4) = iVar3 + uVar1;\n        }\n        fcn.00417d00(param_1);\n    }\n    *(param_1 + 0x16ac) = 7;\n    return;\n}\n",
        "token_count": 1498
    },
    "00438b10": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nvoid fcn.00438b10(void)\n\n{\n    uint8_t *puVar1;\n    int32_t unaff_EBP;\n    int32_t unaff_ESI;\n    uint32_t *unaff_EDI;\n    uint var_20h;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x1c) != unaff_ESI) {\n        if (*(unaff_EBP + -0x20) != unaff_ESI) {\n            puVar1 = *((*unaff_EDI >> 5) * 4 + 0x454820) + 4 + (*unaff_EDI & 0x1f) * 0x40;\n            *puVar1 = *puVar1 & 0xfe;\n        }\n        fcn.00438192(*unaff_EDI);\n    }\n    return;\n}\n",
        "token_count": 188
    },
    "00426c15": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00426c15(int32_t arg_8h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint uVar4;\n    \n    iVar2 = fcn.00419a3e();\n    if ((iVar2 != 0) && (*(iVar2 + 0xc) != 0)) {\n        uVar3 = fcn.0042ed2d(*(iVar2 + 0xc));\n        if (arg_8h + 4U < uVar3) {\n            fcn.0042ebed(*(iVar2 + 0xc), (uVar3 - arg_8h) + -4);\n        }\n        else {\n            fcn.0042b954(*(iVar2 + 0xc));\n            *(iVar2 + 0xc) = 0;\n        }\n        return 1;\n    }\n    fcn.00419415();\n    pcVar1 = swi(3);\n    uVar4 = (*pcVar1)();\n    return uVar4;\n}\n",
        "token_count": 231
    },
    "0041dca3": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nint32_t fcn.0041dca3(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00419a3e();\n    return iVar1 + 0x30;\n}\n",
        "token_count": 47
    },
    "0043a41b": {
        "rules": [
            "hash data using aphash/ab9c9a8537c84744923d9bbb8bd71d10"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043a41b(uint32_t *arg_8h, uint32_t *arg_ch)\n\n{\n    uint16_t uVar1;\n    uint16_t uVar2;\n    uint32_t uVar3;\n    uint16_t uVar4;\n    uint32_t var_4h;\n    \n    uVar1 = *(arg_ch + 6) >> 4;\n    uVar4 = uVar1 & 0x7ff;\n    uVar2 = *(arg_ch + 6) & 0x8000;\n    uVar3 = *arg_ch;\n    var_4h = 0x80000000;\n    if ((uVar1 & 0x7ff) == 0) {\n        if (((arg_ch[1] & 0xfffff) == 0) && (uVar3 == 0)) {\n            arg_8h[1] = 0;\n            *arg_8h = 0;\n            goto code_r0x0043a4ca;\n        }\n        uVar4 = uVar4 + 0x3c01;\n        var_4h = 0;\n    }\n    else if (uVar4 == 0x7ff) {\n        uVar4 = 0x7fff;\n    }\n    else {\n        uVar4 = uVar4 + 0x3c00;\n    }\n    var_4h = uVar3 >> 0x15 | (arg_ch[1] & 0xfffff) << 0xb | var_4h;\n    uVar3 = uVar3 << 0xb;\n    while( true ) {\n        *arg_8h = uVar3;\n        arg_8h[1] = var_4h;\n        if ((var_4h & 0x80000000) != 0) break;\n        var_4h = arg_8h[1] * 2 | *arg_8h >> 0x1f;\n        uVar3 = *arg_8h * 2;\n        uVar4 = uVar4 - 1;\n    }\n    uVar2 = uVar2 | uVar4;\ncode_r0x0043a4ca:\n    *(arg_8h + 2) = uVar2;\n    return;\n}\n",
        "token_count": 502
    },
    "004010b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004010b0(uint param_1, uint param_2, uint param_3, uint param_4)\n\n{\n    uint uVar1;\n    \n    uVar1 = fcn.00428c08(param_1, param_2, param_3, param_4);\n    fcn.00401000(uVar1);\n    return;\n}\n",
        "token_count": 80
    },
    "004010e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004010e0(uint param_1, uint param_2, uint param_3, uint param_4)\n\n{\n    uint uVar1;\n    \n    uVar1 = fcn.00428c85(param_1, param_2, param_3, param_4);\n    fcn.00401000(uVar1);\n    return;\n}\n",
        "token_count": 80
    },
    "00401110": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t fcn.00401110(uint param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    uint16_t *puVar2;\n    uint16_t *puVar3;\n    uint32_t unaff_EDI;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_LoadResource)(param_1, param_2);\n    if (iVar1 == 0) {\n        return 0;\n    }\n    puVar2 = (*_sym.imp.KERNEL32.dll_LockResource)(iVar1);\n    if (puVar2 != NULL) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_SizeofResource)(param_1, param_2);\n        puVar3 = iVar1 + puVar2;\n        for (unaff_EDI = unaff_EDI & 0xf; unaff_EDI != 0; unaff_EDI = unaff_EDI - 1) {\n            if (puVar3 <= puVar2) {\n                return 0;\n            }\n            puVar2 = puVar2 + *puVar2 + 1;\n        }\n        if (puVar2 < puVar3) {\n            return -(*puVar2 != 0) & puVar2;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 277
    },
    "00401180": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00401180(uint param_1, uint32_t param_2)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_FindResourceA)(param_1, (param_2 >> 4) + 1 & 0xffff, 6);\n    if (iVar1 == 0) {\n        return;\n    }\n    fcn.00401110(param_1, iVar1, param_2);\n    return;\n}\n",
        "token_count": 105
    },
    "004013e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * __thiscall fcn.004013e0(int32_t *param_1, int32_t param_2, uint param_3, uint *param_4)\n\n{\n    int32_t iVar1;\n    uint *extraout_ECX;\n    uint *extraout_ECX_00;\n    int32_t unaff_retaddr;\n    \n    if (param_4 == NULL) {\n        fcn.00401090(0x80004005);\n        param_4 = extraout_ECX;\n    }\n    if (unaff_retaddr != 0) goto code_r0x00401411;\n    if (param_2 == 0) goto code_r0x00401411;\n    do {\n        fcn.00401090();\n        param_4 = extraout_ECX_00;\ncode_r0x00401411:\n        iVar1 = (***param_4)(param_2, 1);\n        if (iVar1 == 0) {\n            iVar1 = fcn.00401260();\n        }\n        *param_1 = iVar1 + 0x10;\n    } while ((param_2 < 0) || (*(iVar1 + 8) < param_2));\n    *(iVar1 + 4) = param_2;\n    *(param_2 + *param_1) = 0;\n    fcn.00428c08(*param_1, param_2, unaff_retaddr, param_2);\n    return param_1;\n}\n",
        "token_count": 322
    },
    "00401810": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool fcn.00401810(uint *param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    int32_t extraout_ECX;\n    \n    iVar1 = *param_2;\n    if (iVar1 == 0) {\n        fcn.00401090(0x80004005);\n        iVar1 = extraout_ECX;\n    }\n    iVar1 = fcn.004288e4(*param_1, iVar1);\n    return iVar1 == 0;\n}\n",
        "token_count": 112
    },
    "00401840": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.00401840(int32_t *param_1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    \n    piVar1 = fcn.0041a118();\n    if (piVar1 == NULL) {\n        piVar1 = fcn.00401090(0x80004005);\n    }\n    iVar2 = (**(*piVar1 + 0xc))();\n    *param_1 = iVar2 + 0x10;\n    return param_1;\n}\n",
        "token_count": 118
    },
    "00401870": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * __thiscall fcn.00401870(int32_t *param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    int32_t *extraout_ECX;\n    \n    if (param_2 == NULL) {\n        fcn.00401090(0x80004005);\n        param_2 = extraout_ECX;\n    }\n    iVar1 = (**(*param_2 + 0xc))();\n    *param_1 = iVar1 + 0x10;\n    return param_1;\n}\n",
        "token_count": 121
    },
    "004018c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * __thiscall fcn.004018c0(int32_t *param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.004016b0(*param_2 + -0x10);\n    *param_1 = iVar1 + 0x10;\n    return param_1;\n}\n",
        "token_count": 82
    },
    "00401910": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __thiscall fcn.00401910(int32_t *param_1, uint param_2, uint32_t param_3)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    ushort *puVar3;\n    uint uVar4;\n    \n    iVar2 = (*_sym.imp.KERNEL32.dll_FindResourceA)(param_2, (param_3 >> 4) + 1 & 0xffff, 6);\n    if (iVar2 != 0) {\n        puVar3 = fcn.00401110(param_2, iVar2, param_3);\n        if (puVar3 != NULL) {\n            iVar2 = (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)(3, 0, puVar3 + 1, *puVar3, 0, 0, 0, 0);\n            if ((1U - *(*param_1 + -4) | *(*param_1 + -8) - iVar2) < 0) {\n                fcn.00401660(iVar2);\n            }\n            (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)(3, 0, puVar3 + 1, *puVar3, *param_1, iVar2, 0, 0);\n            if ((-1 < iVar2) && (iVar2 <= *(*param_1 + -8))) {\n                *(*param_1 + -0xc) = iVar2;\n                *(iVar2 + *param_1) = 0;\n                return 1;\n            }\n            fcn.00401090(0x80070057);\n            pcVar1 = swi(3);\n            uVar4 = (*pcVar1)();\n            return uVar4;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 389
    },
    "00401a20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00401a20(int32_t *param_1, uint param_2, int32_t param_3, uint param_4, int32_t param_5)\n\n{\n    int32_t arg_8h;\n    code *pcVar1;\n    \n    param_5 = param_3 + param_5;\n    if ((1U - *(*param_1 + -4) | *(*param_1 + -8) - param_5) < 0) {\n        fcn.00401660(param_5);\n    }\n    arg_8h = *param_1;\n    fcn.00428c08(arg_8h, param_3, param_1, param_3);\n    fcn.00428c08(arg_8h + param_3, param_4, param_3, param_4);\n    if ((-1 < param_5) && (param_5 <= *(*param_1 + -8))) {\n        *(*param_1 + -0xc) = param_5;\n        *(param_5 + *param_1) = 0;\n        return;\n    }\n    fcn.00401090(0x80070057);\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 277
    },
    "00401aa0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00401aa0(int32_t *param_1, int32_t param_2, int32_t param_3)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t extraout_ECX;\n    int32_t unaff_EBP;\n    int32_t unaff_EDI;\n    uint32_t uVar3;\n    int32_t unaff_retaddr;\n    int32_t in_stack_ffffffec;\n    \n    if (param_3 == 0) {\n        fcn.00401600();\n        return;\n    }\n    if (param_2 != 0) goto code_r0x00401ac8;\n    do {\n        fcn.00401090();\n        param_2 = extraout_ECX;\ncode_r0x00401ac8:\n        iVar1 = *param_1;\n        uVar2 = *(iVar1 + -0xc);\n        uVar3 = param_2 - iVar1;\n        if ((1U - *(iVar1 + -4) | *(iVar1 + -8) - param_3) < 0) {\n            param_2 = unaff_retaddr;\n            in_stack_ffffffec = param_3;\n            fcn.00401660(param_3, unaff_EDI, unaff_EBP);\n            unaff_retaddr = param_2;\n        }\n        unaff_EBP = unaff_EDI;\n        unaff_EDI = in_stack_ffffffec;\n        iVar1 = *param_1;\n        if (uVar2 < uVar3) {\n            fcn.00428c08(iVar1, *(iVar1 + -8), param_2, param_3);\n        }\n        else {\n            fcn.00428c85(iVar1, *(iVar1 + -8), iVar1 + uVar3, param_3);\n        }\n        in_stack_ffffffec = unaff_EDI;\n    } while ((param_3 < 0) || (*(*param_1 + -8) < param_3));\n    *(*param_1 + -0xc) = param_3;\n    *(param_3 + *param_1) = 0;\n    return;\n}\n",
        "token_count": 478
    },
    "00401b30": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00401b30(int32_t *param_1, int32_t param_2, int32_t param_3)\n\n{\n    int32_t extraout_ECX;\n    uint32_t unaff_EBX;\n    uint32_t arg_10h;\n    uint32_t uVar1;\n    int32_t arg_ch;\n    int32_t iVar2;\n    uint32_t unaff_retaddr;\n    \n    iVar2 = *(*param_1 + -0xc);\n    arg_10h = param_2 - *param_1;\n    if (param_3 < 0) {\n        param_3 = fcn.00401090(0x80070057);\n        param_2 = extraout_ECX;\n    }\n    if (param_2 == 0) {\n        arg_ch = 0;\n    }\n    else {\n        arg_ch = fcn.00428f0d(param_2, param_3);\n    }\n    uVar1 = arg_10h;\n    if (iVar2 <= 0x7fffffff - arg_ch) goto code_r0x00401b83;\n    do {\n        fcn.00401090();\n        uVar1 = arg_10h;\ncode_r0x00401b83:\n        iVar2 = iVar2 + arg_ch;\n        if ((1U - *(*param_1 + -4) | *(*param_1 + -8) - iVar2) < 0) {\n            fcn.00401660(iVar2);\n        }\n        arg_10h = unaff_retaddr;\n        if (uVar1 <= unaff_EBX) {\n            arg_10h = uVar1 + *param_1;\n        }\n        fcn.00428c08(*param_1 + unaff_EBX, arg_ch, arg_10h, arg_ch);\n    } while ((iVar2 < 0) || (*(*param_1 + -8) < iVar2));\n    *(*param_1 + -0xc) = iVar2;\n    *(iVar2 + *param_1) = 0;\n    return;\n}\n",
        "token_count": 454
    },
    "00401be0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nchar ** __thiscall fcn.00401be0(char **param_1, char param_2)\n\n{\n    char *arg_8h;\n    char cVar1;\n    char *pcVar2;\n    \n    arg_8h = *param_1;\n    cVar1 = *arg_8h;\n    pcVar2 = NULL;\n    if (cVar1 != '\\0') {\n        do {\n            if (cVar1 == param_2) {\n                if (pcVar2 == NULL) {\n                    pcVar2 = arg_8h;\n                }\n            }\n            else {\n                pcVar2 = NULL;\n            }\n            arg_8h = fcn.004288fb(arg_8h);\n            cVar1 = *arg_8h;\n        } while (cVar1 != '\\0');\n        if (pcVar2 != NULL) {\n            fcn.004019d0(pcVar2 - *param_1);\n        }\n    }\n    return param_1;\n}\n",
        "token_count": 215
    },
    "00401c30": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * __thiscall fcn.00401c30(int32_t *param_1, int32_t *param_2, int32_t param_3)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    \n    if (param_3 < 0) {\n        param_3 = 0;\n    }\n    iVar2 = *param_1;\n    iVar1 = *(iVar2 + -0xc);\n    if (iVar1 <= param_3) {\n        iVar2 = fcn.004016b0(iVar2 + -0x10);\n        *param_2 = iVar2 + 0x10;\n        return param_2;\n    }\n    if (*(iVar2 + -0x10) != NULL) {\n        iVar2 = (**(**(iVar2 + -0x10) + 0x10))();\n        if (iVar2 != 0) goto code_r0x00401c91;\n    }\n    piVar3 = fcn.0041a118();\n    iVar2 = (**(*piVar3 + 0x10))();\ncode_r0x00401c91:\n    fcn.004013e0((*param_1 - param_3) + iVar1, param_3, iVar2);\n    return param_2;\n}\n",
        "token_count": 289
    },
    "00401cb0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * __thiscall fcn.00401cb0(int32_t *param_1, int32_t *param_2, int32_t param_3)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    \n    if (param_3 < 0) {\n        param_3 = 0;\n    }\n    iVar1 = *param_1;\n    if (*(iVar1 + -0xc) <= param_3) {\n        iVar1 = fcn.004016b0(iVar1 + -0x10);\n        *param_2 = iVar1 + 0x10;\n        return param_2;\n    }\n    if (*(iVar1 + -0x10) != NULL) {\n        iVar1 = (**(**(iVar1 + -0x10) + 0x10))();\n        if (iVar1 != 0) goto code_r0x00401d0b;\n    }\n    piVar2 = fcn.0041a118();\n    iVar1 = (**(*piVar2 + 0x10))();\ncode_r0x00401d0b:\n    fcn.004013e0(*param_1, param_3, iVar1);\n    return param_2;\n}\n",
        "token_count": 269
    },
    "00401d30": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * fcn.00401d30(int32_t *param_1, int32_t *param_2, char *param_3)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    char *pcVar5;\n    int32_t **in_FS_OFFSET;\n    int32_t *piStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack8 = 0x43dc29;\n    piStack12 = *in_FS_OFFSET;\n    uVar2 = *0x45060c ^ &stack0xffffffe4;\n    *in_FS_OFFSET = &piStack12;\n    uStack4 = 0;\n    if (*(*param_2 + -0x10) != NULL) {\n        piVar3 = (**(**(*param_2 + -0x10) + 0x10))(uVar2);\n        if (piVar3 != NULL) goto code_r0x00401d8b;\n    }\n    piVar3 = fcn.0041a118();\n    piVar3 = (**(*piVar3 + 0x10))();\ncode_r0x00401d8b:\n    if (piVar3 == NULL) {\n        piVar3 = fcn.00401090(0x80004005);\n    }\n    iVar4 = (**(*piVar3 + 0xc))();\n    *param_1 = iVar4 + 0x10;\n    uStack4 = 0;\n    if (param_3 == NULL) {\n        iVar4 = 0;\n    }\n    else {\n        pcVar5 = param_3;\n        do {\n            cVar1 = *pcVar5;\n            pcVar5 = pcVar5 + 1;\n        } while (cVar1 != '\\0');\n        iVar4 = pcVar5 - (param_3 + 1);\n    }\n    fcn.00401a20(param_1, *param_2, *(*param_2 + -0xc), param_3, iVar4);\n    *in_FS_OFFSET = piStack12;\n    return param_1;\n}\n",
        "token_count": 471
    },
    "00401e10": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "inject DLL reflectively/5c249d14806d4a4ea88afb4f94553771"
        ],
        "decompiled_code": "\nint32_t * fcn.00401e10(int32_t *param_1, char *param_2, int32_t *param_3)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    char *pcVar5;\n    int32_t **in_FS_OFFSET;\n    int32_t *piStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack8 = 0x43dc29;\n    piStack12 = *in_FS_OFFSET;\n    uVar2 = *0x45060c ^ &stack0xffffffe4;\n    *in_FS_OFFSET = &piStack12;\n    uStack4 = 0;\n    if (*(*param_3 + -0x10) != NULL) {\n        piVar3 = (**(**(*param_3 + -0x10) + 0x10))(uVar2);\n        if (piVar3 != NULL) goto code_r0x00401e6a;\n    }\n    piVar3 = fcn.0041a118();\n    piVar3 = (**(*piVar3 + 0x10))();\ncode_r0x00401e6a:\n    if (piVar3 == NULL) {\n        piVar3 = fcn.00401090(0x80004005);\n    }\n    iVar4 = (**(*piVar3 + 0xc))();\n    *param_1 = iVar4 + 0x10;\n    uStack4 = 0;\n    if (param_2 == NULL) {\n        iVar4 = 0;\n    }\n    else {\n        pcVar5 = param_2;\n        do {\n            cVar1 = *pcVar5;\n            pcVar5 = pcVar5 + 1;\n        } while (cVar1 != '\\0');\n        iVar4 = pcVar5 - (param_2 + 1);\n    }\n    fcn.00401a20(param_1, param_2, iVar4, *param_3, *(*param_3 + -0xc));\n    *in_FS_OFFSET = piStack12;\n    return param_1;\n}\n",
        "token_count": 471
    },
    "00402000": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "inject DLL reflectively/5c249d14806d4a4ea88afb4f94553771"
        ],
        "decompiled_code": "\nint32_t * fcn.00402000(int32_t *param_1, int32_t *param_2, int32_t *param_3)\n\n{\n    uint32_t uVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t **in_FS_OFFSET;\n    int32_t *piStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack8 = 0x43dc69;\n    piStack12 = *in_FS_OFFSET;\n    uVar1 = *0x45060c ^ &stack0xffffffe8;\n    *in_FS_OFFSET = &piStack12;\n    uStack4 = 0;\n    if (*(*param_2 + -0x10) != NULL) {\n        piVar2 = (**(**(*param_2 + -0x10) + 0x10))(uVar1);\n        if (piVar2 != NULL) goto code_r0x00402059;\n    }\n    piVar2 = fcn.0041a118();\n    piVar2 = (**(*piVar2 + 0x10))();\ncode_r0x00402059:\n    if (piVar2 == NULL) {\n        piVar2 = fcn.00401090(0x80004005);\n    }\n    iVar3 = (**(*piVar2 + 0xc))();\n    *param_1 = iVar3 + 0x10;\n    uStack4 = 0;\n    fcn.00401a20(param_1, *param_2, *(*param_2 + -0xc), *param_3, *(*param_3 + -0xc));\n    *in_FS_OFFSET = piStack12;\n    return param_1;\n}\n",
        "token_count": 377
    },
    "00402220": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __thiscall fcn.00402220(uint32_t *param_1, uint32_t *param_2)\n\n{\n    int32_t *piVar1;\n    uint32_t *puVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint32_t *puVar5;\n    uint uVar6;\n    uint32_t **in_FS_OFFSET;\n    int64_t iVar7;\n    int32_t unaff_retaddr;\n    uint32_t *puStack12;\n    uint32_t uStack8;\n    uint uStack4;\n    \n    puVar2 = param_2;\n    uStack8 = 0x43dca0;\n    puStack12 = *in_FS_OFFSET;\n    puVar5 = *0x45060c ^ &stack0xffffffe4;\n    *in_FS_OFFSET = &puStack12;\n    uStack4 = 0;\n    uVar6 = fcn.00401d30(&param_2, &stack0x00000008, param_2 + 0xb);\n    uStack4 = CONCAT31(uStack4._1_3_, 1);\n    fcn.00402100(uVar6);\n    uStack8 = uStack8 & 0xffffff00;\n    piVar1 = unaff_retaddr + -4;\n    LOCK();\n    iVar3 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar3 == 1 || iVar3 + -1 < 0) {\n        (**(**(unaff_retaddr + -0x10) + 4))(unaff_retaddr + -0x10);\n    }\n    param_1[2] = *puVar2;\n    iVar7 = fcn.004294d0(puVar2[7], 0, 0, 1);\n    param_1[5] = iVar7 + 0x7a00 >> 0x20;\n    param_1[4] = iVar7 + 0x7a00;\n    param_1[0xf] = 0;\n    param_1[0xe] = 0;\n    fcn.00401720(puVar2 + 1, param_1 + 6);\n    fcn.00401720(puVar2 + 3, param_1 + 8);\n    fcn.00401720(puVar2 + 5, param_1 + 10);\n    *param_1 = uStack8;\n    puVar2 = puStack12 + -1;\n    LOCK();\n    uVar4 = *puVar2;\n    *puVar2 = *puVar2 - 1;\n    if (uVar4 == 1 || uVar4 - 1 < 0) {\n        (**(*puStack12[-4] + 4))(puStack12 + -4);\n    }\n    *in_FS_OFFSET = puVar5;\n    return;\n}\n",
        "token_count": 646
    },
    "00402ee0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "PEB access",
            "access PEB ldr_data"
        ],
        "decompiled_code": "\nuint * __fastcall fcn.00402ee0(uint *param_1)\n\n{\n    uint32_t uVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t *unaff_ESI;\n    int32_t **in_FS_OFFSET;\n    int32_t *piStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x43ddfb;\n    piStack12 = *in_FS_OFFSET;\n    uVar1 = *0x45060c ^ &stack0xffffffe4;\n    *in_FS_OFFSET = &piStack12;\n    piVar2 = fcn.0041a118(uVar1);\n    if (piVar2 == NULL) {\n        piVar2 = fcn.00401090(0x80004005);\n    }\n    iVar3 = (**(*piVar2 + 0xc))();\n    param_1[1] = iVar3 + 0x10;\n    param_1[6] = 0;\n    param_1[7] = 0;\n    param_1[8] = 0;\n    param_1[9] = 0;\n    uStack8 = 0;\n    param_1[10] = 0;\n    param_1[0xb] = 0;\n    fcn.00401aa0(0x44197f, 0);\n    param_1[0xc] = 0;\n    param_1[0xd] = 0xffffffff;\n    param_1[2] = 0xffffffff;\n    param_1[0xf] = 0;\n    param_1[0xe] = 0;\n    param_1[4] = 0;\n    param_1[5] = 0;\n    *param_1 = 0;\n    fcn.0042907c(0);\n    fcn.0042907c(0);\n    fcn.0042907c(0);\n    *in_FS_OFFSET = unaff_ESI;\n    return param_1;\n}\n",
        "token_count": 458
    },
    "00403680": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __thiscall fcn.00403680(int32_t *param_1, int32_t param_2)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t **in_FS_OFFSET;\n    uint unaff_retaddr;\n    int32_t *piStack28;\n    int32_t *piStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack8 = 0x43def0;\n    piStack12 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack12;\n    uStack4 = 0;\n    fcn.00402ee0();\n    uStack4 = CONCAT31(uStack4._1_3_, 1);\n    fcn.004016b0(param_2 + -0x10);\n    fcn.00402330();\n    uVar3 = (**(*param_1 + 0xc))(&stack0xffffffac, unaff_retaddr);\n    fcn.004018a0();\n    piVar1 = piStack12 + -1;\n    LOCK();\n    iVar2 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar2 == 1 || iVar2 + -1 < 0) {\n        (**(*piStack12[-4] + 4))(piStack12 + -4);\n    }\n    *in_FS_OFFSET = piStack28;\n    return uVar3;\n}\n",
        "token_count": 330
    },
    "00403750": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00403750(int32_t param_1, int32_t param_2, int32_t param_3)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t **in_FS_OFFSET;\n    int32_t *piStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    iVar5 = param_2;\n    uStack4 = 0xffffffff;\n    uStack8 = 0x43df73;\n    piStack12 = *in_FS_OFFSET;\n    uVar1 = *0x45060c ^ &stack0xffffffd8;\n    *in_FS_OFFSET = &piStack12;\n    if (param_2 < 0) {\n        fcn.0041944d(uVar1);\n    }\n    if (-1 < param_3) {\n        *(param_1 + 0x10) = param_3;\n    }\n    if (param_2 == 0) {\n        if (*(param_1 + 4) != 0) {\n            if (0 < *(param_1 + 8)) {\n                do {\n                    fcn.004018a0();\n                    param_2 = param_2 + 1;\n                } while (param_2 < *(param_1 + 8));\n            }\n            fcn.00419316(*(param_1 + 4));\n            *(param_1 + 4) = 0;\n        }\n        param_2 = 0;\n        *(param_1 + 8) = 0;\n    }\n    else {\n        if (*(param_1 + 4) == 0) {\n            if (param_2 <= *(param_1 + 0x10)) {\n                iVar5 = *(param_1 + 0x10);\n            }\n            uVar2 = fcn.0041930b(iVar5 << 6);\n            *(param_1 + 4) = uVar2;\n            fcn.00429510(uVar2, 0, iVar5 << 6);\n            iVar4 = 0;\n            if (0 < param_2) {\n                do {\n                    uStack4 = 0;\n                    if (iVar4 * 0x40 + *(param_1 + 4) != 0) {\n                        fcn.00402ee0();\n                    }\n                    iVar4 = iVar4 + 1;\n                } while (iVar4 < param_2);\n            }\n            *(param_1 + 8) = param_2;\n            *(param_1 + 0xc) = iVar5;\n            goto code_r0x004039cd;\n        }\n        iVar4 = *(param_1 + 0xc);\n        if (param_2 <= iVar4) {\n            iVar5 = *(param_1 + 8);\n            if (iVar5 < param_2) {\n                fcn.00429510(iVar5 * 0x40 + *(param_1 + 4), 0, (param_2 - iVar5) * 0x40);\n                iVar5 = 0;\n                if (param_2 != *(param_1 + 8) && -1 < param_2 - *(param_1 + 8)) {\n                    do {\n                        uStack4 = 1;\n                        if ((*(param_1 + 8) + iVar5) * 0x40 + *(param_1 + 4) != 0) {\n                            fcn.00402ee0();\n                        }\n                        iVar5 = iVar5 + 1;\n                    } while (iVar5 < param_2 - *(param_1 + 8));\n                    *(param_1 + 8) = param_2;\n                    goto code_r0x004039cd;\n                }\n            }\n            else if ((param_2 < iVar5) && (iVar4 = 0,  iVar5 != param_2 && -1 < iVar5 - param_2)) {\n                do {\n                    fcn.004018a0();\n                    iVar4 = iVar4 + 1;\n                } while (iVar4 < *(param_1 + 8) - param_2);\n            }\n            *(param_1 + 8) = param_2;\n            goto code_r0x004039cd;\n        }\n        iVar3 = *(param_1 + 0x10);\n        if (iVar3 == 0) {\n            iVar3 = *(param_1 + 8) + (*(param_1 + 8) >> 0x1f & 7U) >> 3;\n            if (iVar3 < 4) {\n                iVar3 = 4;\n            }\n            else if (0x400 < iVar3) {\n                iVar3 = 0x400;\n            }\n        }\n        if (param_2 < iVar3 + iVar4) {\n            param_2 = iVar3 + iVar4;\n        }\n        if (param_2 < iVar4) {\n            fcn.0041944d(uVar1);\n        }\n        iVar4 = fcn.0041930b(param_2 << 6);\n        fcn.004010b0(iVar4, param_2 << 6, *(param_1 + 4), *(param_1 + 8) << 6);\n        fcn.00429510(*(param_1 + 8) * 0x40 + iVar4, 0, (iVar5 - *(param_1 + 8)) * 0x40);\n        iVar3 = 0;\n        if (iVar5 != *(param_1 + 8) && -1 < iVar5 - *(param_1 + 8)) {\n            do {\n                uStack4 = 2;\n                if ((*(param_1 + 8) + iVar3) * 0x40 + iVar4 != 0) {\n                    fcn.00402ee0();\n                }\n                iVar3 = iVar3 + 1;\n                uStack4 = 0xffffffff;\n            } while (iVar3 < iVar5 - *(param_1 + 8));\n        }\n        fcn.00419316(*(param_1 + 4));\n        *(param_1 + 4) = iVar4;\n        *(param_1 + 8) = iVar5;\n    }\n    *(param_1 + 0xc) = param_2;\ncode_r0x004039cd:\n    *in_FS_OFFSET = piStack12;\n    return;\n}\n",
        "token_count": 1399
    },
    "00403c70": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.00403c70(int32_t *param_1)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    char *pcVar5;\n    int32_t *unaff_EDI;\n    int32_t **in_FS_OFFSET;\n    char *unaff_retaddr;\n    int32_t *piStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x43dfd8;\n    piStack12 = *in_FS_OFFSET;\n    uVar2 = *0x45060c ^ &stack0xffffffe8;\n    *in_FS_OFFSET = &piStack12;\n    piVar3 = fcn.0041a118(uVar2);\n    if (piVar3 == NULL) {\n        piVar3 = fcn.00401090(0x80004005);\n    }\n    iVar4 = (**(*piVar3 + 0xc))();\n    *param_1 = iVar4 + 0x10;\n    uStack8 = 0;\n    if (unaff_retaddr == NULL) {\n        iVar4 = 0;\n    }\n    else {\n        if ((unaff_retaddr & 0xffff0000) == 0) {\n            iVar4 = fcn.0041a0e8(unaff_retaddr & 0xffff);\n            if (iVar4 != 0) {\n                fcn.00401910(iVar4, unaff_retaddr & 0xffff);\n            }\n            goto code_r0x00403d12;\n        }\n        pcVar5 = unaff_retaddr;\n        do {\n            cVar1 = *pcVar5;\n            pcVar5 = pcVar5 + 1;\n        } while (cVar1 != '\\0');\n        iVar4 = pcVar5 - (unaff_retaddr + 1);\n    }\n    fcn.00401aa0(unaff_retaddr, iVar4);\ncode_r0x00403d12:\n    *in_FS_OFFSET = unaff_EDI;\n    return param_1;\n}\n",
        "token_count": 470
    },
    "00403d30": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\ncode ** __fastcall fcn.00403d30(code **param_1)\n\n{\n    uint32_t uVar1;\n    int32_t *unaff_ESI;\n    int32_t **in_FS_OFFSET;\n    int32_t *piStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x43e008;\n    piStack12 = *in_FS_OFFSET;\n    uVar1 = *0x45060c ^ &stack0xffffffe8;\n    *in_FS_OFFSET = &piStack12;\n    fcn.00401450(uVar1);\n    uStack4 = 0;\n    *param_1 = vtable.CFileInfoArray.0;\n    fcn.00403750(0, 0x32);\n    param_1[5] = NULL;\n    param_1[6] = NULL;\n    param_1[7] = NULL;\n    *in_FS_OFFSET = unaff_ESI;\n    return param_1;\n}\n",
        "token_count": 225
    },
    "00403f30": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00403f30(int32_t param_1)\n\n{\n    double dVar1;\n    double dVar2;\n    int32_t iVar3;\n    ushort unaff_SI;\n    ushort in_FPUControlWord;\n    uint uVar4;\n    uint uStack12;\n    \n    if (*(param_1 + 0x18) != 0) {\n        uVar4 = *(*(param_1 + 0x18) + 0x20);\n        iVar3 = (*_sym.imp.USER32.dll_IsWindow)(uVar4);\n        if (iVar3 != 0) {\n            dVar1 = *(param_1 + 0x54);\n            if (*(param_1 + 0x54) < 0) {\n                dVar1 = dVar1 + *0x4419a8;\n            }\n            dVar2 = *(param_1 + 0x50);\n            if (*(param_1 + 0x50) < 0) {\n                dVar2 = dVar2 + *0x4419a8;\n            }\n            uStack12 = ROUND((dVar1 / dVar2) * *0x4419a0);\n            (*_sym.imp.USER32.dll_SendMessageA)\n                      (*(*(param_1 + 0x18) + 0x20), 0x402, uStack12, 0, uVar4, CONCAT22(in_FPUControlWord, unaff_SI));\n        }\n    }\n    return;\n}\n",
        "token_count": 324
    },
    "00404060": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\ncode ** __fastcall fcn.00404060(code **param_1)\n\n{\n    uint32_t uVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t **in_FS_OFFSET;\n    int32_t *piStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x43e046;\n    piStack12 = *in_FS_OFFSET;\n    uVar1 = *0x45060c ^ &stack0xffffffe0;\n    *in_FS_OFFSET = &piStack12;\n    *param_1 = vtable.CIRDeleteFiles.0;\n    piVar2 = fcn.0041a118(uVar1);\n    if (piVar2 == NULL) {\n        piVar2 = fcn.00401090(0x80004005);\n    }\n    iVar3 = (**(*piVar2 + 0xc))();\n    param_1[1] = iVar3 + 0x10;\n    uStack8 = 0;\n    piVar2 = fcn.0041a118();\n    if (piVar2 == NULL) {\n        piVar2 = fcn.00401090(0x80004005);\n    }\n    iVar3 = (**(*piVar2 + 0xc))();\n    param_1[0xb] = iVar3 + 0x10;\n    uStack8 = CONCAT31(uStack8._1_3_, 1);\n    fcn.00403d30();\n    fcn.00401600();\n    param_1[2] = NULL;\n    param_1[3] = NULL;\n    param_1[4] = 0x1;\n    param_1[5] = 0x1;\n    param_1[7] = NULL;\n    param_1[6] = NULL;\n    fcn.00401600();\n    param_1[8] = NULL;\n    param_1[0x14] = NULL;\n    param_1[0x15] = NULL;\n    param_1[9] = 0x32;\n    param_1[0x16] = 0x1;\n    param_1[10] = NULL;\n    *in_FS_OFFSET = param_1;\n    return param_1;\n}\n",
        "token_count": 517
    },
    "00404150": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00404150(code **param_1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t **ppiVar4;\n    int32_t **in_FS_OFFSET;\n    int32_t *piStack12;\n    uint uStack8;\n    uint32_t uStack4;\n    \n    uStack8 = 0x43e086;\n    piStack12 = *in_FS_OFFSET;\n    uVar3 = *0x45060c ^ &stack0xffffffec;\n    *in_FS_OFFSET = &piStack12;\n    *param_1 = vtable.CIRDeleteFiles.0;\n    uStack4 = 1;\n    fcn.00401ef0(uVar3);\n    ppiVar4 = param_1[0xb] + -0x10;\n    uStack4 = uStack4 & 0xffffff00;\n    piVar1 = param_1[0xb] + -4;\n    LOCK();\n    iVar2 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar2 + -1 < 1) {\n        (**(**ppiVar4 + 4))(ppiVar4);\n    }\n    ppiVar4 = param_1[1] + -0x10;\n    uStack4 = 0xffffffff;\n    piVar1 = param_1[1] + -4;\n    LOCK();\n    iVar2 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar2 == 1 || iVar2 + -1 < 0) {\n        (**(**ppiVar4 + 4))(ppiVar4);\n    }\n    *in_FS_OFFSET = piStack12;\n    return;\n}\n",
        "token_count": 390
    },
    "00404220": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00404220(int32_t param_1)\n\n{\n    int32_t **ppiVar1;\n    int32_t *piVar2;\n    int32_t **ppiVar3;\n    uint uVar4;\n    \n    uVar4 = 0;\n    piVar2 = fcn.0041a118();\n    if (piVar2 == NULL) {\n        piVar2 = fcn.00401090(0x80004005);\n    }\n    ppiVar3 = (**(*piVar2 + 0xc))();\n    if ((*(param_1 + 0x20) != NULL) && (**(param_1 + 0x20) != 0)) {\n        uVar4 = 1;\n    }\n    ppiVar1 = ppiVar3 + 3;\n    LOCK();\n    piVar2 = *ppiVar1;\n    *ppiVar1 = *ppiVar1 + -1;\n    if (piVar2 == 0x1 || piVar2 + -1 < 0) {\n        (**(**ppiVar3 + 4))(ppiVar3);\n    }\n    return uVar4;\n}\n",
        "token_count": 250
    },
    "00405fa0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00405fa0(int32_t *param_1)\n\n{\n    int32_t **ppiVar1;\n    code *pcVar2;\n    int32_t *piVar3;\n    int32_t **ppiVar4;\n    int32_t iVar5;\n    uint uVar6;\n    int32_t unaff_EDI;\n    int32_t *in_FS_OFFSET;\n    int32_t unaff_retaddr;\n    uint uStack52;\n    char *pcStack48;\n    uint32_t uStack44;\n    uint uStack40;\n    uint32_t uStack36;\n    int32_t iStack12;\n    uchar *puStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    puStack8 = 0x43e378;\n    iStack12 = *in_FS_OFFSET;\n    uStack36 = *0x45060c ^ &stack0xffffffe0;\n    *in_FS_OFFSET = &stack0xfffffff4;\n    uStack40 = 0x405fcc;\n    piVar3 = fcn.0041a118();\n    uVar6 = 0;\n    if (piVar3 == NULL) {\n        uStack40 = 0x80004005;\n        uStack44 = 0x405fe3;\n        piVar3 = fcn.00401090();\n    }\n    uStack44 = 0x405fec;\n    ppiVar4 = (**(*piVar3 + 0xc))();\n    uStack44 = unaff_retaddr == 0;\n    puStack8 = NULL;\n    param_1[0x16] = unaff_retaddr;\n    param_1[0x13] = uStack44;\n    pcStack48 = \"Start deleting files\";\n    uStack52 = 0x406019;\n    fcn.00403c70();\n    uStack52 = 0x406022;\n    (**(*param_1 + 4))();\n    pcVar2 = _sym.imp.USER32.dll_SendMessageA;\n    if (param_1[6] != 0) {\n        uStack52 = 0x640000;\n        (*_sym.imp.USER32.dll_SendMessageA)(*(param_1[6] + 0x20), 0x401, 0);\n        (*pcVar2)(*(param_1[6] + 0x20), 0x402, 0, 0);\n    }\n    uStack52 = 0x406059;\n    iVar5 = fcn.004055f0();\n    if (iVar5 == 0) {\n        puStack8 = &stack0xffffffcc;\n        fcn.00403c70(\"Invalid source\");\n        (**(*param_1 + 4))();\n        pcStack48 = param_1 + 1;\n        uVar6 = 1;\n        uStack52 = 0x406088;\n        fcn.00402100();\n    }\n    else {\n        uStack52 = 0x406091;\n        fcn.00405400();\n        uStack52 = 0x406098;\n        iVar5 = fcn.00405860();\n        if (iVar5 == 0) {\n            puStack8 = &stack0xffffffcc;\n            fcn.00403c70(\"Failed to delete one or more files\");\n            (**(*param_1 + 4))();\n            uVar6 = 2;\n        }\n    }\n    puStack8 = &stack0xffffffcc;\n    fcn.00403c70(\"End deleting files\");\n    (**(*param_1 + 4))();\n    ppiVar1 = ppiVar4 + 3;\n    LOCK();\n    piVar3 = *ppiVar1;\n    *ppiVar1 = *ppiVar1 + -1;\n    if (piVar3 == 0x1 || piVar3 + -1 < 0) {\n        (**(**ppiVar4 + 4))(ppiVar4);\n    }\n    *in_FS_OFFSET = unaff_EDI;\n    return uVar6;\n}\n",
        "token_count": 874
    },
    "00406120": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00406120(uint param_1)\n\n{\n    fcn.00409940(param_1);\n    return param_1;\n}\n",
        "token_count": 34
    },
    "00406140": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00406140(int32_t *param_1, int32_t param_2)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    \n    if (param_2 == 0) {\n        fcn.00401090(0x80070057);\n    }\n    iVar2 = fcn.00429b67(param_2, param_2);\n    if ((1U - *(*param_1 + -4) | *(*param_1 + -8) - iVar2) < 0) {\n        fcn.00401660(iVar2);\n    }\n    fcn.00429cd7(*param_1, iVar2 + 1, param_2, param_2);\n    if ((-1 < iVar2) && (iVar2 <= *(*param_1 + -8))) {\n        *(*param_1 + -0xc) = iVar2;\n        *(iVar2 + *param_1) = 0;\n        return;\n    }\n    fcn.00401090(0x80070057);\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 250
    },
    "004061e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "PEB access",
            "contain loop"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.004061e0(uint32_t param_1)\n\n{\n    uint32_t uVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint32_t **in_FS_OFFSET;\n    int32_t *unaff_retaddr;\n    char *pcVar5;\n    int32_t iVar6;\n    uint32_t *puStack16;\n    uint32_t *puStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack8 = 0x43e3c1;\n    puStack12 = *in_FS_OFFSET;\n    uVar1 = *0x45060c ^ &stack0xffffffd8;\n    *in_FS_OFFSET = &puStack12;\n    iVar4 = 0;\n    uStack4 = 0;\n    fcn.0040a180(param_1 + 0x58, param_1, uVar1);\n    piVar2 = fcn.0041a118();\n    if (piVar2 == NULL) {\n        piVar2 = fcn.00401090(0x80004005);\n    }\n    iVar3 = (**(*piVar2 + 0xc))();\n    *unaff_retaddr = iVar3 + 0x10;\n    uStack8 = 0;\n    piVar2 = fcn.0041a118();\n    if (piVar2 == NULL) {\n        piVar2 = fcn.00401090(0x80004005);\n    }\n    iVar3 = (**(*piVar2 + 0xc))();\n    uStack8 = 1;\n    iVar3 = iVar3 + 0x10;\n    do {\n        iVar6 = iVar3;\n        pcVar5 = \"%02x\";\n        fcn.004061c0(&stack0xffffffe4, \"%02x\", *(iVar4 + param_1 + 0x58));\n        iVar3 = iVar6;\n        fcn.00401b30(pcVar5, *(iVar6 + -0xc), iVar6);\n        iVar4 = iVar4 + 1;\n    } while (iVar4 < 0x10);\n    fcn.00406130();\n    puStack16 = param_1 & 0xffffff00;\n    piVar2 = iVar6 + -4;\n    LOCK();\n    iVar4 = *piVar2;\n    *piVar2 = *piVar2 + -1;\n    if (iVar4 == 1 || iVar4 + -1 < 0) {\n        (**(**(iVar6 + -0x10) + 4))(iVar6 + -0x10);\n    }\n    *in_FS_OFFSET = puStack16;\n    return unaff_retaddr;\n}\n",
        "token_count": 595
    },
    "00406300": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __thiscall fcn.00406300(uint param_1, uint param_2, int32_t param_3, uint param_4)\n\n{\n    if (param_3 == 0) {\n        fcn.00403c70(0x44197f);\n        return param_2;\n    }\n    fcn.0040a0e0(param_1, param_3, param_4);\n    fcn.004061e0(param_2);\n    return param_2;\n}\n",
        "token_count": 109
    },
    "00406360": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00406360(void)\n\n{\n    uint32_t uVar1;\n    int32_t **in_FS_OFFSET;\n    int32_t *piStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack8 = 0x43e3e8;\n    piStack12 = *in_FS_OFFSET;\n    uVar1 = *0x45060c ^ &stack0xffffffec;\n    *in_FS_OFFSET = &piStack12;\n    uStack4 = 0;\n    fcn.0041d46d(uVar1);\n    uStack4 = 0xffffffff;\n    fcn.0041ca18();\n    *in_FS_OFFSET = piStack12;\n    return;\n}\n",
        "token_count": 156
    },
    "004064c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.004064c0(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    uint uVar4;\n    int32_t *piVar5;\n    \n    iVar1 = *param_1;\n    iVar2 = *(iVar1 + -0xc);\n    if ((1U - *(iVar1 + -4) | *(iVar1 + -8) - iVar2) < 0) {\n        fcn.00401660(iVar2);\n    }\n    uVar4 = fcn.00429f00(*param_1, iVar2 + 1);\n    fcn.00401000(uVar4);\n    if ((-1 < iVar2) && (iVar2 <= *(*param_1 + -8))) {\n        *(*param_1 + -0xc) = iVar2;\n        *(iVar2 + *param_1) = 0;\n        return param_1;\n    }\n    fcn.00401090(0x80070057);\n    pcVar3 = swi(3);\n    piVar5 = (*pcVar3)();\n    return piVar5;\n}\n",
        "token_count": 258
    },
    "00406b00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\ncode ** __thiscall fcn.00406b00(code **param_1, uint param_2)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    uint32_t *in_FS_OFFSET;\n    uint uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x43e543;\n    uStack12 = *in_FS_OFFSET;\n    uVar1 = *0x45060c ^ &stack0xffffffe8;\n    *in_FS_OFFSET = &uStack12;\n    fcn.0041caa8(0x66, param_2);\n    uStack12 = 0;\n    *param_1 = vtable.CLauncherDlg.0;\n    fcn.0041fec0();\n    param_1[0x1e] = vtable.CProgressCtrl.0;\n    uStack12 = CONCAT31(uStack12._1_3_, 1);\n    fcn.0041a00a();\n    iVar2 = fcn.0041a00a();\n    pcVar3 = (*_sym.imp.USER32.dll_LoadIconA)(*(iVar2 + 0xc), 0x80);\n    param_1[0x33] = pcVar3;\n    *in_FS_OFFSET = uVar1;\n    return param_1;\n}\n",
        "token_count": 304
    },
    "00406d10": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00406d10(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uStack48;\n    uint uStack44;\n    uint uStack40;\n    uint uStack36;\n    uchar auStack28 [28];\n    \n    pcVar1 = _sym.imp.USER32.dll_PeekMessageA;\n    uStack36 = 0;\n    uStack40 = 0;\n    uStack44 = 0;\n    uStack48 = 0;\n    iVar2 = (*_sym.imp.USER32.dll_PeekMessageA)(auStack28);\n    while( true ) {\n        if (iVar2 == 0) {\n            iVar2 = 0;\n            do {\n                iVar3 = fcn.0041a00a();\n                iVar3 = (**(**(iVar3 + 4) + 0x60))(iVar2);\n                iVar2 = iVar2 + 1;\n            } while (iVar3 != 0);\n            return;\n        }\n        iVar2 = fcn.0041a00a();\n        iVar2 = (**(**(iVar2 + 4) + 0x5c))();\n        if (iVar2 == 0) break;\n        iVar2 = (*pcVar1)(&uStack48, 0, 0, 0);\n    }\n    (*_sym.imp.USER32.dll_PostQuitMessage)(0);\n    return;\n}\n",
        "token_count": 310
    },
    "00406e20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\ncode ** __fastcall fcn.00406e20(code **param_1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    \n    *param_1 = vtable.CZipCallback.0;\n    piVar1 = fcn.0041a118();\n    if (piVar1 == NULL) {\n        piVar1 = fcn.00401090(0x80004005);\n    }\n    iVar2 = (**(*piVar1 + 0xc))();\n    param_1[1] = iVar2 + 0x10;\n    *param_1 = vtable.CZipActionCallback.0;\n    piVar1 = fcn.0041a118();\n    if (piVar1 == NULL) {\n        piVar1 = fcn.00401090(0x80004005);\n    }\n    iVar2 = (**(*piVar1 + 0xc))();\n    param_1[5] = iVar2 + 0x10;\n    param_1[3] = NULL;\n    param_1[4] = NULL;\n    return param_1;\n}\n",
        "token_count": 240
    },
    "004072c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004072c0(uint32_t *arg_8h)\n\n{\n    char *arg_8h_00;\n    uint32_t uVar1;\n    uint32_t *puVar2;\n    char cVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint var_4h;\n    \n    puVar2 = arg_8h;\n    uVar1 = arg_8h[3];\n    arg_8h = arg_8h[2];\n    cVar3 = fcn.00407270(uVar1, &arg_8h);\n    if (cVar3 != '\\0') {\n        arg_8h_00 = arg_8h + uVar1;\n        *puVar2 = arg_8h;\n        cVar3 = *arg_8h_00;\n        uVar5 = arg_8h;\n        while ((cVar3 != '\\0' && (iVar4 = fcn.00428fe6(\" \\t\\n\\r<>=\\\\/?!\", cVar3),  iVar4 == 0))) {\n            iVar4 = fcn.0042a93e(arg_8h_00);\n            uVar5 = uVar5 + iVar4;\n            cVar3 = *(uVar5 + uVar1);\n            arg_8h_00 = uVar5 + uVar1;\n        }\n        if (uVar5 == *puVar2) {\n            uVar5 = uVar5 + 1;\n        }\n        puVar2[2] = uVar5;\n        puVar2[1] = uVar5 - 1;\n        return CONCAT31(uVar5 - 1 >> 8, 1);\n    }\n    *puVar2 = arg_8h;\n    puVar2[2] = arg_8h;\n    puVar2[1] = arg_8h - 1;\n    return arg_8h & 0xffffff00;\n}\n",
        "token_count": 430
    },
    "00407380": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __thiscall fcn.00407380(int32_t *param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t arg_10h;\n    \n    iVar2 = *param_1;\n    arg_10h = (param_1[1] - iVar2) + 1;\n    if ((*(param_1 + 4) & 8) == 0) {\n        iVar2 = fcn.0042a6df(param_1[3] + iVar2, param_2, arg_10h);\n        if (iVar2 != 0) {\n            return 0;\n        }\n        cVar1 = *(arg_10h + param_2);\n    }\n    else {\n        iVar2 = fcn.0042a924(param_1[3] + iVar2, param_2, arg_10h);\n        if (iVar2 != 0) {\n            return 0;\n        }\n        cVar1 = *(arg_10h + param_2);\n    }\n    if ((cVar1 != '\\0') && (iVar2 = fcn.00428fe6(0x441f74, cVar1),  iVar2 == 0)) {\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 286
    },
    "00407400": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00407400(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar1 = param_1[1] + -1 >> 0x10;\n    iVar2 = 0;\n    if (iVar1 != -1 && -1 < iVar1 + 1) {\n        do {\n            fcn.00419316(*(*param_1 + iVar2 * 4));\n            iVar2 = iVar2 + 1;\n        } while (iVar2 < (param_1[1] + -1 >> 0x10) + 1);\n    }\n    if (*param_1 != 0) {\n        fcn.00419316(*param_1);\n    }\n    return;\n}\n",
        "token_count": 169
    },
    "004076b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.004076b0(int32_t param_1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    \n    piVar1 = fcn.0041a118();\n    if (piVar1 == NULL) {\n        piVar1 = fcn.00401090(0x80004005);\n    }\n    iVar2 = (**(*piVar1 + 0xc))();\n    *(param_1 + 0x10) = iVar2 + 0x10;\n    return param_1;\n}\n",
        "token_count": 123
    },
    "00407ed0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * __thiscall fcn.00407ed0(int32_t *param_1, int32_t *param_2, int32_t param_3, int32_t param_4)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    int32_t extraout_ECX;\n    int32_t *unaff_retaddr;\n    \n    if (param_3 < 0) {\n        param_3 = 0;\n    }\n    if (param_4 < 0) {\n        param_4 = 0;\n    }\n    if (0x7fffffff - param_3 < param_4) {\n        fcn.00401090(0x80070057);\n        iVar2 = extraout_ECX;\n    }\n    else {\n        iVar2 = *param_1;\n        iVar1 = *(iVar2 + -0xc);\n        if (iVar1 < param_3 + param_4) {\n            param_4 = iVar1 - param_3;\n        }\n        if (iVar1 < param_3) {\n            param_4 = 0;\n        }\n        if ((param_3 == 0) && (param_4 == iVar1)) {\n            iVar2 = fcn.004016b0(iVar2 + -0x10);\n            *param_2 = iVar2 + 0x10;\n            return param_2;\n        }\n    }\n    if (*(iVar2 + -0x10) != NULL) {\n        iVar2 = (**(**(iVar2 + -0x10) + 0x10))();\n        if (iVar2 != 0) goto code_r0x00407f63;\n    }\n    piVar3 = fcn.0041a118();\n    iVar2 = (**(*piVar3 + 0x10))();\ncode_r0x00407f63:\n    fcn.004013e0(*param_1 + param_3, param_4, iVar2);\n    return unaff_retaddr;\n}\n",
        "token_count": 439
    },
    "00408130": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00408130(int32_t *param_1, int32_t param_2)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    int32_t unaff_retaddr;\n    uint *in_stack_fffffff0;\n    \n    iVar2 = 0;\n    if (0 < param_1[1]) {\n        puVar3 = param_2 + 8;\n        do {\n            puVar1 = puVar3 + *param_1 + (-8 - param_2);\n            puVar3[-2] = *puVar1;\n            puVar3[-1] = puVar1[1];\n            *puVar3 = puVar1[2];\n            in_stack_fffffff0 = puVar1 + 4;\n            puVar3[1] = puVar1[3];\n            fcn.00402100();\n            iVar2 = iVar2 + 1;\n            puVar3 = puVar3 + 5;\n        } while (iVar2 < param_1[1]);\n    }\n    iVar2 = *param_1;\n    if (iVar2 == 0) {\n        *param_1 = unaff_retaddr;\n        return;\n    }\n    fcn.0042a415(iVar2, 0x14, *(iVar2 + -4), fcn.00406e00);\n    fcn.00419316(iVar2 + -4);\n    *param_1 = in_stack_fffffff0;\n    return;\n}\n",
        "token_count": 331
    },
    "00408df0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00408df0(int32_t param_1, uint32_t param_2)\n\n{\n    uint32_t uVar1;\n    uint32_t *puVar2;\n    uint32_t uVar3;\n    uint32_t *arg_8h;\n    code **in_FS_OFFSET;\n    code *pcVar4;\n    code *pcStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x43e69b;\n    pcStack12 = *in_FS_OFFSET;\n    uVar1 = *0x45060c ^ &stack0xffffffe8;\n    *in_FS_OFFSET = &stack0xfffffff4;\n    uVar3 = -(param_2 * 0x14 >> 0x20 != 0) | param_2 * 0x14;\n    pcVar4 = 0x408e3d;\n    puVar2 = fcn.0041930b(-(0xfffffffb < uVar3) | uVar3 + 4, uVar1);\n    arg_8h = NULL;\n    uStack4 = 0;\n    if (puVar2 != NULL) {\n        pcVar4 = fcn.004076b0;\n        arg_8h = puVar2 + 1;\n        *puVar2 = param_2;\n        fcn.0042b6b5(arg_8h, 0x14, param_2, fcn.004076b0);\n    }\n    fcn.00408130(arg_8h);\n    *(param_1 + 4) = param_2;\n    *in_FS_OFFSET = pcVar4;\n    return;\n}\n",
        "token_count": 375
    },
    "00408e90": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * fcn.00408e90(int32_t *param_1, int32_t *param_2)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    uint32_t uVar5;\n    uint uVar6;\n    int32_t iVar7;\n    int32_t **ppiVar8;\n    int32_t *unaff_EDI;\n    int32_t **in_FS_OFFSET;\n    int32_t *piStack12;\n    int32_t *piStack8;\n    int32_t iStack4;\n    \n    iStack4 = -1;\n    piStack8 = 0x43e6c8;\n    piStack12 = *in_FS_OFFSET;\n    uVar5 = *0x45060c ^ &stack0xffffffe8;\n    *in_FS_OFFSET = &piStack12;\n    iVar2 = *param_2;\n    iVar7 = param_2[1];\n    if (iVar7 < iVar2) {\n        fcn.00403c70(0x44197f);\n        *in_FS_OFFSET = NULL;\n        return param_1;\n    }\n    iVar3 = param_2[3];\n    uVar6 = fcn.0041a118(uVar5);\n    fcn.004013e0(iVar3 + iVar2, (iVar7 - iVar2) + 1, uVar6);\n    iVar2 = iStack4;\n    ppiVar8 = iStack4 + -0x10;\n    iVar7 = fcn.004016b0(ppiVar8);\n    piVar4 = piStack8;\n    *piStack8 = iVar7 + 0x10;\n    piVar1 = iVar2 + -4;\n    LOCK();\n    iVar2 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar2 == 1 || iVar2 + -1 < 0) {\n        (**(**ppiVar8 + 4))(ppiVar8);\n    }\n    *in_FS_OFFSET = unaff_EDI;\n    return piVar4;\n}\n",
        "token_count": 466
    },
    "00409a10": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00409a10(uint param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    \n    if (in_EAX != 0) {\n        fcn.00429510(param_1, param_2);\n    }\n    return;\n}\n",
        "token_count": 64
    },
    "0040a540": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040a540(code **param_1)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    char *pcVar5;\n    int32_t **in_FS_OFFSET;\n    uint arg_8h;\n    code **appcStack280 [61];\n    int32_t *piStack36;\n    uint32_t uStack16;\n    int32_t *piStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x43e7ae;\n    piStack12 = *in_FS_OFFSET;\n    uStack16 = *0x45060c ^ appcStack280;\n    uVar2 = *0x45060c ^ &stack0xfffffedc;\n    *in_FS_OFFSET = &piStack12;\n    *param_1 = vtable.CSFEFileExtractor.0;\n    appcStack280[0] = param_1;\n    piVar3 = fcn.0041a118(uVar2);\n    if (piVar3 == NULL) {\n        piVar3 = fcn.00401090(0x80004005);\n    }\n    iVar4 = (**(*piVar3 + 0xc))();\n    param_1[5] = iVar4 + 0x10;\n    uStack8 = 0;\n    param_1[1] = NULL;\n    param_1[2] = NULL;\n    param_1[4] = NULL;\n    param_1[3] = NULL;\n    fcn.00401600();\n    arg_8h = 0x104;\n    iVar4 = (*_sym.imp.KERNEL32.dll_GetModuleFileNameA)(0, appcStack280);\n    if (iVar4 == 0) {\n        fcn.0041eb8d(\"Could not get module name\", 0, 0);\n    }\n    pcVar5 = &stack0xfffffedc;\n    do {\n        cVar1 = *pcVar5;\n        pcVar5 = pcVar5 + 1;\n    } while (cVar1 != '\\0');\n    fcn.00401aa0(&stack0xfffffedc, pcVar5 - &stack0xfffffedd);\n    *in_FS_OFFSET = piStack36;\n    fcn.004294b3(arg_8h);\n    return;\n}\n",
        "token_count": 531
    },
    "0040a640": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "inject DLL reflectively/5c249d14806d4a4ea88afb4f94553771",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0040a640(int32_t param_1, int32_t *param_2)\n\n{\n    char cVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    char *pcVar6;\n    uint32_t uVar7;\n    int32_t *in_FS_OFFSET;\n    uint in_stack_fffffb8c;\n    uint nNumberOfBytesToRead;\n    uint32_t uStack1088;\n    uchar auStack1068 [16];\n    uint uStack1052;\n    uint uStack1048;\n    int32_t *piStack1044;\n    int32_t iStack84;\n    uchar uStack76;\n    uint32_t uStack16;\n    int32_t iStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack8 = 0x43e80d;\n    iStack12 = *in_FS_OFFSET;\n    uStack16 = *0x45060c ^ &stack0xfffffbd4;\n    uStack1088 = *0x45060c ^ &stack0xfffffbc4;\n    *in_FS_OFFSET = &stack0xfffffff4;\n    uStack4 = 0;\n    piStack1044 = param_2;\n    uStack1048 = 0;\n    fcn.0041a00a();\n    fcn.0041d96f();\n    piVar2 = fcn.0041a118();\n    if (piVar2 == NULL) {\n        piVar2 = fcn.00401090();\n    }\n    iVar3 = (**(*piVar2 + 0xc))();\n    *param_2 = iVar3 + 0x10;\n    uStack8 = 0;\n    uStack1052 = 1;\n    fcn.00401600();\n    fcn.0041b5fd();\n    uStack8 = 1;\n    iVar3 = fcn.0042ba31(0x100000);\n    fcn.00429510(iVar3);\n    iVar4 = fcn.0041b9e2(*(param_1 + 0x14), 0x20, 0);\n    if (iVar4 != 0) {\n        nNumberOfBytesToRead = 0;\n        fcn.0041b380(100000, 0, 0);\n        uVar5 = fcn.0041b2f1(iVar3, 0x100000);\n        uVar7 = 0;\n        if (uVar5 != 0) {\ncode_r0x0040a750:\n            if ((((*(uVar7 + iVar3) != '\\v') || (*(uVar7 + 1 + iVar3) != '\\v')) || (*(uVar7 + 2 + iVar3) != -0x51)) ||\n               (((*(uVar7 + 3 + iVar3) != -0x51 || (*(uVar7 + 4 + iVar3) != '\\v')) || (*(uVar7 + 5 + iVar3) != '\\v'))))\n            goto code_r0x0040a773;\n            fcn.0041b380(uVar7 + 0x186a6, 0, 0);\n            fcn.00429510(&stack0xfffffbc0, 0, 0x400);\n            in_stack_fffffb8c = 4;\n            fcn.0041b2f1(&stack0xfffffbb4, 4);\n            fcn.0041b2f1(&stack0xfffffbb8, nNumberOfBytesToRead);\n            pcVar6 = &stack0xfffffbb0;\n            do {\n                cVar1 = *pcVar6;\n                pcVar6 = pcVar6 + 1;\n            } while (cVar1 != '\\0');\n            fcn.00401aa0(&stack0xfffffbb0, pcVar6 - &stack0xfffffbb1);\n            goto code_r0x0040a786;\n        }\ncode_r0x0040a77a:\n        in_stack_fffffb8c = 0x40a786;\n        fcn.0041eb8d(\"Data segment not found.\", 0, 0);\ncode_r0x0040a786:\n        fcn.0041b597();\n    }\n    fcn.0042b954(iVar3);\n    fcn.0041a00a();\n    fcn.0041d984();\n    uStack76 = 0;\n    fcn.0041b6d8();\n    *in_FS_OFFSET = iStack84;\n    fcn.004294b3(in_stack_fffffb8c);\n    return;\ncode_r0x0040a773:\n    uVar7 = uVar7 + 1;\n    if (uVar5 <= uVar7) goto code_r0x0040a77a;\n    goto code_r0x0040a750;\n}\n",
        "token_count": 1082
    },
    "0040aa10": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t * __fastcall fcn.0040aa10(int32_t *param_1)\n\n{\n    uint32_t uVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t *unaff_ESI;\n    int32_t **in_FS_OFFSET;\n    int32_t *piStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x43e8c9;\n    piStack12 = *in_FS_OFFSET;\n    uVar1 = *0x45060c ^ &stack0xffffffe8;\n    *in_FS_OFFSET = &piStack12;\n    piVar2 = fcn.0041a118(uVar1);\n    if (piVar2 == NULL) {\n        piVar2 = fcn.00401090(0x80004005);\n    }\n    iVar3 = (**(*piVar2 + 0xc))();\n    *param_1 = iVar3 + 0x10;\n    uStack8 = 0;\n    piVar2 = fcn.0041a118();\n    if (piVar2 == NULL) {\n        piVar2 = fcn.00401090(0x80004005);\n    }\n    iVar3 = (**(*piVar2 + 0xc))();\n    param_1[1] = iVar3 + 0x10;\n    param_1[0xb] = 0;\n    param_1[0xe] = 0;\n    param_1[0xd] = 0;\n    param_1[0xc] = 0;\n    uStack8 = CONCAT31(uStack8._1_3_, 3);\n    fcn.004098d0(0);\n    param_1[10] = 0;\n    *in_FS_OFFSET = unaff_ESI;\n    return param_1;\n}\n",
        "token_count": 424
    },
    "0040b9b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nbool fcn.0040b9b0(void)\n\n{\n    int32_t iVar1;\n    char cVar2;\n    int32_t *piVar3;\n    uint *puVar4;\n    int32_t unaff_ESI;\n    int32_t iVar5;\n    int32_t *in_FS_OFFSET;\n    char *pcStack116;\n    char *pcStack112;\n    int32_t **ppiStack108;\n    int32_t iStack104;\n    uchar *puStack100;\n    uchar *puStack96;\n    uchar *puStack92;\n    int32_t iStack80;\n    uint uStack76;\n    uint32_t uStack64;\n    uint uStack60;\n    uint uStack56;\n    int32_t iStack40;\n    uint32_t uStack32;\n    uchar uStack16;\n    uint uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x43ea28;\n    uStack12 = *in_FS_OFFSET;\n    puStack92 = *0x45060c ^ &stack0xffffffa8;\n    *in_FS_OFFSET = &stack0xfffffff4;\n    puStack96 = 0x40b9dc;\n    piVar3 = fcn.0041a118();\n    if (piVar3 == NULL) {\n        puStack96 = 0x80004005;\n        puStack100 = 0x40b9f3;\n        piVar3 = fcn.00401090();\n    }\n    puStack100 = 0x40b9fc;\n    (**(*piVar3 + 0xc))();\n    puStack100 = &stack0xffffffb0;\n    uStack8 = 0;\n    iStack104 = 0x40ba13;\n    iStack104 = fcn.0040a640();\n    uStack12 = CONCAT31(uStack12._1_3_, 1);\n    ppiStack108 = 0x40ba22;\n    fcn.00402100();\n    ppiStack108 = unaff_ESI + -0x10;\n    uStack16 = 0;\n    piVar3 = unaff_ESI + -4;\n    LOCK();\n    iVar5 = *piVar3;\n    *piVar3 = *piVar3 + -1;\n    if (iVar5 == 1 || iVar5 + -1 < 0) {\n        pcStack112 = 0x40ba46;\n        (**(**ppiStack108 + 4))();\n    }\n    ppiStack108 = 0x40ba4f;\n    fcn.0040aa10();\n    ppiStack108 = &stack0xffffffa4;\n    uStack16 = 2;\n    iVar5 = 1;\n    pcStack112 = 0x40ba67;\n    cVar2 = fcn.00409920();\n    if (cVar2 != '\\0') {\n        puStack92 = &stack0xffffff90;\n        pcStack112 = \"IR_ZCD\";\n        pcStack116 = 0x40ba85;\n        cVar2 = fcn.00408000();\n        if (cVar2 != '\\0') {\n            puStack96 = &stack0xffffff8c;\n            uStack64 = iStack80 != 0;\n            uStack76 = 0;\n            uStack60 = 0;\n            uStack56 = 0;\n            pcStack116 = \"Prog\";\n            cVar2 = fcn.00408070();\n            if (cVar2 != '\\0') {\n                puVar4 = fcn.0040a210(&stack0xffffff9c);\n                iVar5 = fcn.0042bb11(*puVar4);\n                piVar3 = iStack104 + -4;\n                LOCK();\n                iVar1 = *piVar3;\n                *piVar3 = *piVar3 + -1;\n                if (iVar1 == 1 || iVar1 + -1 < 0) {\n                    (**(**(iStack104 + -0x10) + 4))(iStack104 + -0x10);\n                }\n            }\n        }\n    }\n    uStack32 = uStack32 & 0xffffff00;\n    fcn.00408d40();\n    uStack32 = 0xffffffff;\n    piVar3 = ppiStack108 + -4;\n    LOCK();\n    iVar1 = *piVar3;\n    *piVar3 = *piVar3 + -1;\n    if (iVar1 == 1 || iVar1 + -1 < 0) {\n        (**(**(ppiStack108 + -0x10) + 4))(ppiStack108 + -0x10);\n    }\n    *in_FS_OFFSET = iStack40;\n    return iVar5 == 0;\n}\n",
        "token_count": 1048
    },
    "0040bb50": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.0040bb50(int32_t param_1, int32_t param_2)\n\n{\n    *(param_1 + 4) = *(param_2 + 4);\n    *(param_1 + 5) = *(param_2 + 5);\n    *(param_1 + 6) = *(param_2 + 6);\n    *(param_1 + 7) = *(param_2 + 7);\n    *(param_1 + 8) = *(param_2 + 8);\n    *(param_1 + 10) = *(param_2 + 10);\n    *(param_1 + 0xc) = *(param_2 + 0xc);\n    *(param_1 + 0xe) = *(param_2 + 0xe);\n    *(param_1 + 0x10) = *(param_2 + 0x10);\n    *(param_1 + 0x12) = *(param_2 + 0x12);\n    *(param_1 + 0x14) = *(param_2 + 0x14);\n    *(param_1 + 0x18) = *(param_2 + 0x18);\n    *(param_1 + 0x1c) = *(param_2 + 0x1c);\n    *(param_1 + 0x20) = *(param_2 + 0x20);\n    *(param_1 + 0x22) = *(param_2 + 0x22);\n    *(param_1 + 0x24) = *(param_2 + 0x24);\n    *(param_1 + 0x28) = *(param_2 + 0x28);\n    fcn.0040e900(param_2 + 0x2c);\n    fcn.0040e900(param_2 + 0x38);\n    fcn.0040e900(param_2 + 0x44);\n    return param_1;\n}\n",
        "token_count": 436
    },
    "0040bc60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040bc60(uint param_1)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t **in_FS_OFFSET;\n    int32_t *piStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x43ea5a;\n    piStack12 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack12;\n    iVar2 = fcn.004192dc(0x10);\n    uStack4 = 0;\n    if (iVar2 != 0) {\n        fcn.00410880(param_1);\n    }\n    piStack12 = 0xffffffff;\n    fcn.0042bc38(&stack0xffffffe4, 0x449964);\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 199
    },
    "0040bd40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\ncode ** __thiscall fcn.0040bd40(code **param_1, uint param_2, uint param_3)\n\n{\n    int32_t *unaff_ESI;\n    int32_t **in_FS_OFFSET;\n    int32_t *piStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack8 = 0x43f2e8;\n    piStack12 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack12;\n    *param_1 = vtable.CZipAbstractFile.0;\n    uStack4 = 0;\n    fcn.0041bbcc(param_2, param_3);\n    *param_1 = vtable.CZipFile.1.0;\n    param_1[1] = vtable.CZipFile.0;\n    *in_FS_OFFSET = unaff_ESI;\n    return param_1;\n}\n",
        "token_count": 195
    },
    "0040bea0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\ncode ** __thiscall fcn.0040bea0(code **param_1, int32_t param_2)\n\n{\n    uint32_t uVar1;\n    int32_t unaff_EDI;\n    int32_t *in_FS_OFFSET;\n    uint uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x43ea96;\n    uStack12 = *in_FS_OFFSET;\n    uVar1 = *0x45060c ^ &stack0xffffffe8;\n    *in_FS_OFFSET = &uStack12;\n    *param_1 = vtable.CZipFileHeader.0;\n    param_1[1] = *(param_2 + 4);\n    *(param_1 + 2) = *(param_2 + 8);\n    *(param_1 + 10) = *(param_2 + 10);\n    *(param_1 + 3) = *(param_2 + 0xc);\n    *(param_1 + 0xe) = *(param_2 + 0xe);\n    *(param_1 + 4) = *(param_2 + 0x10);\n    *(param_1 + 0x12) = *(param_2 + 0x12);\n    param_1[5] = *(param_2 + 0x14);\n    param_1[6] = *(param_2 + 0x18);\n    param_1[7] = *(param_2 + 0x1c);\n    *(param_1 + 8) = *(param_2 + 0x20);\n    *(param_1 + 0x22) = *(param_2 + 0x22);\n    param_1[9] = *(param_2 + 0x24);\n    param_1[10] = *(param_2 + 0x28);\n    fcn.0040e8c0(param_2 + 0x2c, uVar1);\n    uStack8 = 0;\n    fcn.0040e8c0(param_2 + 0x38);\n    uStack12 = CONCAT31(uStack12._1_3_, 1);\n    fcn.0040e8c0(param_2 + 0x44);\n    *in_FS_OFFSET = unaff_EDI;\n    return param_1;\n}\n",
        "token_count": 521
    },
    "0040bfe0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040bfe0(int32_t param_1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    \n    piVar1 = *(param_1 + 4);\n    if ((piVar1 != NULL) && (*(param_1 + 8) != 0)) {\n        iVar4 = *(param_1 + 8);\n        piVar3 = piVar1;\n        do {\n            for (iVar2 = *piVar3; iVar2 != 0; iVar2 = *(iVar2 + 8)) {\n            }\n            piVar3 = piVar3 + 1;\n            iVar4 = iVar4 + -1;\n        } while (iVar4 != 0);\n    }\n    fcn.00419316(piVar1);\n    *(param_1 + 4) = 0;\n    *(param_1 + 0xc) = 0;\n    *(param_1 + 0x10) = 0;\n    fcn.0042548a();\n    *(param_1 + 0x14) = 0;\n    return;\n}\n",
        "token_count": 258
    },
    "0040c030": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0040c030(int32_t param_1, int32_t param_2)\n\n{\n    int32_t *piVar1;\n    \n    *(param_2 + 8) = *(param_1 + 0x10);\n    piVar1 = param_1 + 0xc;\n    *piVar1 = *piVar1 + -1;\n    *(param_1 + 0x10) = param_2;\n    if (*piVar1 == 0) {\n        fcn.0040bfe0();\n    }\n    return;\n}\n",
        "token_count": 127
    },
    "0040c2f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.0040c2f0(char *param_1, int32_t param_2)\n\n{\n    char cVar1;\n    char *pcVar2;\n    int32_t arg_10h;\n    \n    pcVar2 = param_1;\n    do {\n        cVar1 = *pcVar2;\n        pcVar2 = pcVar2 + 1;\n    } while (cVar1 != '\\0');\n    arg_10h = pcVar2 - (param_1 + 1);\n    fcn.0040e850(arg_10h, 0);\n    fcn.0042aaa0(*(param_2 + 4), param_1, arg_10h);\n    return arg_10h;\n}\n",
        "token_count": 162
    },
    "0040c850": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0040c850(code **param_1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t **ppiVar4;\n    int32_t **in_FS_OFFSET;\n    int32_t *piStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack8 = 0x43eb2a;\n    piStack12 = *in_FS_OFFSET;\n    uVar3 = *0x45060c ^ &stack0xffffffec;\n    *in_FS_OFFSET = &piStack12;\n    *param_1 = vtable.CZipArchive.0;\n    uStack4 = 7;\n    fcn.0040c720(uVar3);\n    uStack4._0_1_ = 6;\n    fcn.0040e970();\n    uStack4._0_1_ = 5;\n    fcn.00424f1d();\n    ppiVar4 = param_1[0x59] + -0x10;\n    uStack4._0_1_ = 4;\n    piVar1 = param_1[0x59] + -4;\n    LOCK();\n    iVar2 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar2 + -1 < 1) {\n        (**(**ppiVar4 + 4))(ppiVar4);\n    }\n    ppiVar4 = param_1[0x58] + -0x10;\n    uStack4._0_1_ = 3;\n    piVar1 = param_1[0x58] + -4;\n    LOCK();\n    iVar2 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar2 == 1 || iVar2 + -1 < 0) {\n        (**(**ppiVar4 + 4))(ppiVar4);\n    }\n    uStack4._0_1_ = 2;\n    fcn.0040fa20();\n    uStack4._0_1_ = 1;\n    fcn.004129e0();\n    uStack4 = uStack4._1_3_ << 8;\n    param_1[0xb] = vtable.CZipArchive::CZipInternalInfo.0;\n    fcn.0040e970();\n    uStack4 = 0xffffffff;\n    fcn.0040c4e0();\n    *in_FS_OFFSET = piStack12;\n    return;\n}\n",
        "token_count": 565
    },
    "0040cd80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\ncode ** __fastcall fcn.0040cd80(code **param_1)\n\n{\n    uint32_t uVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t *unaff_ESI;\n    int32_t **in_FS_OFFSET;\n    uint unaff_retaddr;\n    int32_t *piStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x43ebc7;\n    piStack12 = *in_FS_OFFSET;\n    uVar1 = *0x45060c ^ &stack0xffffffec;\n    *in_FS_OFFSET = &piStack12;\n    *param_1 = vtable.CZipPathComponent.0;\n    piVar2 = fcn.0041a118(uVar1);\n    if (piVar2 == NULL) {\n        piVar2 = fcn.00401090(0x80004005);\n    }\n    iVar3 = (**(*piVar2 + 0xc))();\n    param_1[1] = iVar3 + 0x10;\n    uStack8 = 0;\n    piVar2 = fcn.0041a118();\n    if (piVar2 == NULL) {\n        piVar2 = fcn.00401090(0x80004005);\n    }\n    iVar3 = (**(*piVar2 + 0xc))();\n    param_1[2] = iVar3 + 0x10;\n    uStack8 = CONCAT31(uStack8._1_3_, 1);\n    piVar2 = fcn.0041a118();\n    if (piVar2 == NULL) {\n        piVar2 = fcn.00401090(0x80004005);\n    }\n    iVar3 = (**(*piVar2 + 0xc))();\n    param_1[3] = iVar3 + 0x10;\n    uStack8 = CONCAT31(uStack8._1_3_, 2);\n    piVar2 = fcn.0041a118();\n    if (piVar2 == NULL) {\n        piVar2 = fcn.00401090(0x80004005);\n    }\n    iVar3 = (**(*piVar2 + 0xc))();\n    param_1[4] = iVar3 + 0x10;\n    uStack8 = CONCAT31(uStack8._1_3_, 3);\n    piVar2 = fcn.0041a118();\n    if (piVar2 == NULL) {\n        piVar2 = fcn.00401090(0x80004005);\n    }\n    iVar3 = (**(*piVar2 + 0xc))();\n    param_1[5] = iVar3 + 0x10;\n    uStack8 = CONCAT31(uStack8._1_3_, 4);\n    fcn.00411c40(unaff_retaddr);\n    *in_FS_OFFSET = unaff_ESI;\n    return param_1;\n}\n",
        "token_count": 660
    },
    "0040cfc0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\ncode ** __fastcall fcn.0040cfc0(code **param_1)\n\n{\n    uint8_t uVar1;\n    uint32_t uVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    code *pcVar5;\n    int32_t unaff_EBX;\n    uint32_t unaff_ESI;\n    int32_t *in_FS_OFFSET;\n    uint uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x43ec5a;\n    uStack12 = *in_FS_OFFSET;\n    uVar2 = *0x45060c ^ &stack0xffffffdc;\n    *in_FS_OFFSET = &uStack12;\n    *param_1 = vtable.CZipArchive.0;\n    fcn.0040c390(10, uVar2);\n    param_1[2] = vtable.CZipArchive::CZipClbckStrg.0;\n    uStack8 = 0;\n    param_1[0xb] = vtable.CZipArchive::CZipInternalInfo.0;\n    fcn.0040e800();\n    param_1[0x1d] = 0x10000;\n    uStack8._0_1_ = 1;\n    fcn.00412930();\n    uStack8._0_1_ = 2;\n    fcn.0040f580();\n    uStack8 = CONCAT31(uStack8._1_3_, 3);\n    piVar3 = fcn.0041a118();\n    if (piVar3 == NULL) {\n        piVar3 = fcn.00401090(0x80004005);\n    }\n    iVar4 = (**(*piVar3 + 0xc))();\n    param_1[0x58] = iVar4 + 0x10;\n    uStack12 = CONCAT31(uStack12._1_3_, 4);\n    piVar3 = fcn.0041a118();\n    if (piVar3 == NULL) {\n        piVar3 = fcn.00401090(0x80004005);\n    }\n    iVar4 = (**(*piVar3 + 0xc))();\n    param_1[0x59] = iVar4 + 0x10;\n    uStack12 = CONCAT31(uStack12._1_3_, 5);\n    fcn.00424ef5(10);\n    param_1[0x5b] = vtable.CZipPtrList_void__.0;\n    fcn.0040e800();\n    *(param_1 + 0x62) = 1;\n    *(param_1 + 1) = 1;\n    *(param_1 + 0x15d) = 0;\n    *(param_1 + 0x15e) = 0;\n    param_1[0x40] = param_1 + 0x21;\n    param_1[0x14] = 0x40c1b0;\n    param_1[0x15] = 0x40c1e0;\n    *(param_1 + 0x57) = 0;\n    uVar1 = fcn.00412110();\n    *(param_1 + 9) = uVar1;\n    pcVar5 = fcn.00413bd0(unaff_ESI & 0xffffff00 | uVar1, 1);\n    param_1[10] = pcVar5;\n    *in_FS_OFFSET = unaff_EBX;\n    return param_1;\n}\n",
        "token_count": 792
    },
    "0040d2e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0040d2e0(int32_t *param_1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint32_t *puVar3;\n    uint uVar4;\n    uint32_t **in_FS_OFFSET;\n    uint unaff_retaddr;\n    uint32_t *puStack12;\n    int32_t iStack8;\n    uint uStack4;\n    \n    piVar1 = param_1;\n    uStack4 = 0xffffffff;\n    iStack8 = 0x43ec88;\n    puStack12 = *in_FS_OFFSET;\n    puVar3 = *0x45060c ^ &stack0xffffffec;\n    *in_FS_OFFSET = &puStack12;\n    (**(*param_1 + 0x24))(&param_1);\n    iStack8 = 0;\n    (**(*piVar1 + 4))();\n    uVar4 = fcn.0040cc80(unaff_retaddr, 0);\n    piVar1 = iStack8 + -4;\n    LOCK();\n    iVar2 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar2 == 1 || iVar2 + -1 < 0) {\n        (**(**(iStack8 + -0x10) + 4))(iStack8 + -0x10);\n    }\n    *in_FS_OFFSET = puVar3;\n    return uVar4;\n}\n",
        "token_count": 318
    },
    "0040d400": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.0040d400(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    uint uVar4;\n    int32_t *piVar5;\n    \n    iVar1 = *param_1;\n    iVar2 = *(iVar1 + -0xc);\n    if ((1U - *(iVar1 + -4) | *(iVar1 + -8) - iVar2) < 0) {\n        fcn.00401660(iVar2);\n    }\n    uVar4 = fcn.0042bc21(*param_1, iVar2 + 1);\n    fcn.00401000(uVar4);\n    if ((-1 < iVar2) && (iVar2 <= *(*param_1 + -8))) {\n        *(*param_1 + -0xc) = iVar2;\n        *(iVar2 + *param_1) = 0;\n        return param_1;\n    }\n    fcn.00401090(0x80070057);\n    pcVar3 = swi(3);\n    piVar5 = (*pcVar3)();\n    return piVar5;\n}\n",
        "token_count": 258
    },
    "0040d630": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040d630(int32_t param_1, uint32_t param_2)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint32_t auStack44 [11];\n    \n    auStack44[0] = 1;\n    auStack44[1] = 2;\n    auStack44[2] = 4;\n    auStack44[3] = 8;\n    auStack44[4] = 0x10;\n    auStack44[5] = 0x20;\n    auStack44[6] = 0x40;\n    auStack44[7] = 0x80;\n    auStack44[8] = 0x100;\n    auStack44[9] = 0x200;\n    auStack44[10] = 0x400;\n    iVar2 = 0;\n    do {\n        if ((param_2 & auStack44[iVar2]) != 0) {\n            if (param_1 == 0) {\n                fcn.0040c470(auStack44[iVar2]);\n            }\n            else {\n                piVar1 = fcn.0040cf40();\n                *piVar1 = param_1;\n            }\n        }\n        iVar2 = iVar2 + 1;\n    } while (iVar2 < 0xb);\n    return;\n}\n",
        "token_count": 297
    },
    "0040dad0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\ncode ** __thiscall fcn.0040dad0(code **param_1, code *param_2, char *param_3)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    char *pcVar5;\n    int32_t *unaff_ESI;\n    int32_t **in_FS_OFFSET;\n    code *unaff_retaddr;\n    int32_t *piStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x43ed2b;\n    piStack12 = *in_FS_OFFSET;\n    uVar2 = *0x45060c ^ &stack0xffffffe4;\n    *in_FS_OFFSET = &piStack12;\n    fcn.004194b9(uVar2);\n    *param_1 = vtable.CFileException.0;\n    piVar3 = fcn.0041a118();\n    if (piVar3 == NULL) {\n        piVar3 = fcn.00401090(0x80004005);\n    }\n    iVar4 = (**(*piVar3 + 0xc))();\n    param_1[4] = iVar4 + 0x10;\n    param_1[3] = param_2;\n    uStack8 = 0;\n    param_1[2] = unaff_retaddr;\n    if (param_3 == NULL) {\n        iVar4 = 0;\n    }\n    else {\n        pcVar5 = param_3;\n        do {\n            cVar1 = *pcVar5;\n            pcVar5 = pcVar5 + 1;\n        } while (cVar1 != '\\0');\n        iVar4 = pcVar5 - (param_3 + 1);\n    }\n    fcn.00401aa0(param_3, iVar4);\n    *in_FS_OFFSET = unaff_ESI;\n    return param_1;\n}\n",
        "token_count": 431
    },
    "0040dd70": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.0040dd70(int32_t param_1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t unaff_ESI;\n    int32_t *unaff_EDI;\n    int32_t **in_FS_OFFSET;\n    int32_t iVar4;\n    int32_t *piStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack8 = 0x43f4b1;\n    piStack12 = *in_FS_OFFSET;\n    uVar3 = *0x45060c ^ &stack0xffffffe0;\n    *in_FS_OFFSET = &piStack12;\n    uStack4 = 0;\n    iVar4 = param_1;\n    fcn.0040d800(param_1, uVar3);\n    uStack8 = 0;\n    fcn.0040dcd0(&stack0xffffffe8);\n    piStack12 = 0x1;\n    if (*(unaff_ESI + -0xc) != 0) {\n        fcn.0040cee0(*0x4429d1);\n        fcn.00401b30(unaff_EDI, unaff_EDI[-3]);\n    }\n    piVar1 = iVar4 + -4;\n    LOCK();\n    iVar2 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar2 == 1 || iVar2 + -1 < 0) {\n        (**(**(iVar4 + -0x10) + 4))(iVar4 + -0x10);\n    }\n    *in_FS_OFFSET = unaff_EDI;\n    return param_1;\n}\n",
        "token_count": 375
    },
    "0040dff0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * __thiscall fcn.0040dff0(int32_t param_1, int32_t *param_2)\n\n{\n    int32_t *piVar1;\n    char cVar2;\n    uint32_t uVar3;\n    int32_t *piVar4;\n    int32_t iVar5;\n    int32_t unaff_EBX;\n    int32_t *in_FS_OFFSET;\n    int32_t unaff_retaddr;\n    int32_t aiStack20 [2];\n    uint uStack12;\n    uint uStack8;\n    int32_t *piStack4;\n    \n    piVar4 = param_2;\n    piStack4 = 0xffffffff;\n    uStack8 = 0x43edf1;\n    uStack12 = *in_FS_OFFSET;\n    uVar3 = *0x45060c ^ &stack0xffffffe0;\n    *in_FS_OFFSET = &uStack12;\n    aiStack20[0] = 0;\n    if (*(*(param_1 + 0x160) + -0xc) == 0) {\n        fcn.0040dcd0(param_2);\n    }\n    else {\n        fcn.0040dd70(&stack0x00000008, uVar3);\n        uStack8 = 0;\n        cVar2 = fcn.0040de30(*(param_1 + 0x160), &param_2, *(param_1 + 0x28));\n        if (cVar2 == '\\0') {\n            piVar4 = fcn.0040dcd0(aiStack20);\n            uStack12 = CONCAT31(uStack12._1_3_, 1);\n        }\n        else {\n            piVar4 = &param_2;\n        }\n        iVar5 = fcn.004016b0(*piVar4 + -0x10);\n        piVar4 = piStack4;\n        *piStack4 = iVar5 + 0x10;\n        uStack12 = 0;\n        if (cVar2 == '\\0') {\n            piVar1 = unaff_EBX + -4;\n            LOCK();\n            iVar5 = *piVar1;\n            *piVar1 = *piVar1 + -1;\n            if (iVar5 + -1 < 1) {\n                (**(**(unaff_EBX + -0x10) + 4))(unaff_EBX + -0x10);\n            }\n        }\n        uStack12 = 0xffffffff;\n        piVar1 = unaff_retaddr + -4;\n        LOCK();\n        iVar5 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n        if (iVar5 == 1 || iVar5 + -1 < 0) {\n            (**(**(unaff_retaddr + -0x10) + 4))(unaff_retaddr + -0x10);\n        }\n    }\n    *in_FS_OFFSET = aiStack20[0];\n    return piVar4;\n}\n",
        "token_count": 645
    },
    "0040e820": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040e820(int32_t param_1)\n\n{\n    if (*(param_1 + 4) != 0) {\n        fcn.00419316(*(param_1 + 4));\n        *(param_1 + 8) = 0;\n        *(param_1 + 4) = 0;\n    }\n    return;\n}\n",
        "token_count": 81
    },
    "0040e8c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\ncode ** __thiscall fcn.0040e8c0(code **param_1, int32_t param_2)\n\n{\n    *param_1 = vtable.CZipAutoBuffer.0;\n    param_1[1] = NULL;\n    param_1[2] = NULL;\n    if (*(param_2 + 4) != 0) {\n        fcn.0040e850(*(param_2 + 8), 0);\n        fcn.0042aaa0(param_1[1], *(param_2 + 4), *(param_2 + 8));\n    }\n    return param_1;\n}\n",
        "token_count": 137
    },
    "0040ea20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040ea20(int32_t param_1)\n\n{\n    *(param_1 + 0x7c) = 0;\n    *(param_1 + 100) = 0;\n    *(param_1 + 0x68) = 0;\n    *(param_1 + 0x20) = 0;\n    if (*(param_1 + 0xc) != 0) {\n        fcn.00419316(*(param_1 + 0xc));\n        *(param_1 + 0x10) = 0;\n        *(param_1 + 0xc) = 0;\n    }\n    return;\n}\n",
        "token_count": 145
    },
    "0040eb20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0040eb20(int32_t param_1, int32_t param_2, int32_t param_3)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    \n    iVar4 = param_2;\n    if (param_2 < 0) {\n        fcn.0041944d();\n    }\n    if (-1 < param_3) {\n        *(param_1 + 0x10) = param_3;\n    }\n    if (param_2 != 0) {\n        if (*(param_1 + 4) == 0) {\n            iVar4 = *(param_1 + 0x10);\n            if (*(param_1 + 0x10) < param_2) {\n                iVar4 = param_2;\n            }\n            uVar1 = fcn.0041930b(iVar4 * 4);\n            *(param_1 + 4) = uVar1;\n            fcn.00429510(uVar1, 0, iVar4 * 4);\n            *(param_1 + 8) = param_2;\n            *(param_1 + 0xc) = iVar4;\n            return;\n        }\n        iVar3 = *(param_1 + 0xc);\n        if (iVar3 < param_2) {\n            iVar2 = *(param_1 + 0x10);\n            if (iVar2 == 0) {\n                iVar2 = *(param_1 + 8) + (*(param_1 + 8) >> 0x1f & 7U) >> 3;\n                if (iVar2 < 4) {\n                    iVar2 = 4;\n                }\n                else if (0x400 < iVar2) {\n                    iVar2 = 0x400;\n                }\n            }\n            if (param_2 < iVar2 + iVar3) {\n                param_2 = iVar2 + iVar3;\n            }\n            iVar2 = param_2;\n            if (param_2 < iVar3) {\n                iVar2 = fcn.0041944d();\n            }\n            iVar3 = fcn.0041930b(iVar2 * 4);\n            fcn.004010b0(iVar3, iVar2 * 4, *(param_1 + 4), *(param_1 + 8) * 4);\n            fcn.00429510(iVar3 + *(param_1 + 8) * 4, 0, (iVar4 - *(param_1 + 8)) * 4);\n            fcn.00419316(*(param_1 + 4));\n            *(param_1 + 4) = iVar3;\n            *(param_1 + 0xc) = param_2;\n        }\n        else {\n            iVar3 = *(param_1 + 8);\n            if (iVar3 < param_2) {\n                fcn.00429510(*(param_1 + 4) + iVar3 * 4, 0, (param_2 - iVar3) * 4);\n                *(param_1 + 8) = param_2;\n                return;\n            }\n        }\n        *(param_1 + 8) = iVar4;\n        return;\n    }\n    if (*(param_1 + 4) != 0) {\n        fcn.00419316(*(param_1 + 4));\n        *(param_1 + 4) = 0;\n    }\n    *(param_1 + 0xc) = 0;\n    *(param_1 + 8) = 0;\n    return;\n}\n",
        "token_count": 783
    },
    "0040ec70": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0040ec70(int32_t param_1, int32_t param_2, int32_t param_3)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    \n    iVar5 = param_2;\n    if (param_2 < 0) {\n        fcn.0041944d();\n    }\n    if (-1 < param_3) {\n        *(param_1 + 0x10) = param_3;\n    }\n    if (param_2 != 0) {\n        if (*(param_1 + 4) == 0) {\n            if (param_2 <= *(param_1 + 0x10)) {\n                iVar5 = *(param_1 + 0x10);\n            }\n            uVar2 = fcn.0041930b(iVar5 * 8);\n            *(param_1 + 4) = uVar2;\n            fcn.00429510(uVar2, 0, iVar5 * 8);\n            iVar3 = 0;\n            if (0 < param_2) {\n                do {\n                    puVar1 = *(param_1 + 4) + iVar3 * 8;\n                    if (puVar1 != NULL) {\n                        *(puVar1 + 1) = 0;\n                        *puVar1 = 0;\n                    }\n                    iVar3 = iVar3 + 1;\n                } while (iVar3 < param_2);\n            }\n            *(param_1 + 8) = param_2;\n            *(param_1 + 0xc) = iVar5;\n            return;\n        }\n        iVar3 = *(param_1 + 0xc);\n        if (iVar3 < param_2) {\n            iVar4 = *(param_1 + 0x10);\n            if (iVar4 == 0) {\n                iVar4 = *(param_1 + 8) + (*(param_1 + 8) >> 0x1f & 7U) >> 3;\n                if (iVar4 < 4) {\n                    iVar4 = 4;\n                }\n                else if (0x400 < iVar4) {\n                    iVar4 = 0x400;\n                }\n            }\n            if (param_2 < iVar4 + iVar3) {\n                param_2 = iVar4 + iVar3;\n            }\n            iVar4 = param_2;\n            if (param_2 < iVar3) {\n                iVar4 = fcn.0041944d();\n            }\n            iVar3 = fcn.0041930b(iVar4 * 8);\n            fcn.004010b0(iVar3, iVar4 * 8, *(param_1 + 4), *(param_1 + 8) * 8);\n            fcn.00429510(iVar3 + *(param_1 + 8) * 8, 0, (iVar5 - *(param_1 + 8)) * 8);\n            iVar4 = 0;\n            if (iVar5 != *(param_1 + 8) && -1 < iVar5 - *(param_1 + 8)) {\n                do {\n                    puVar1 = iVar3 + (*(param_1 + 8) + iVar4) * 8;\n                    if (puVar1 != NULL) {\n                        *(puVar1 + 1) = 0;\n                        *puVar1 = 0;\n                    }\n                    iVar4 = iVar4 + 1;\n                } while (iVar4 < iVar5 - *(param_1 + 8));\n            }\n            fcn.00419316(*(param_1 + 4));\n            *(param_1 + 4) = iVar3;\n            *(param_1 + 0xc) = param_2;\n        }\n        else {\n            iVar3 = *(param_1 + 8);\n            if (iVar3 < param_2) {\n                fcn.00429510(*(param_1 + 4) + iVar3 * 8, 0, (param_2 - iVar3) * 8);\n                iVar3 = 0;\n                if (param_2 != *(param_1 + 8) && -1 < param_2 - *(param_1 + 8)) {\n                    do {\n                        puVar1 = *(param_1 + 4) + (*(param_1 + 8) + iVar3) * 8;\n                        if (puVar1 != NULL) {\n                            *(puVar1 + 1) = 0;\n                            *puVar1 = 0;\n                        }\n                        iVar3 = iVar3 + 1;\n                    } while (iVar3 < param_2 - *(param_1 + 8));\n                    *(param_1 + 8) = param_2;\n                    return;\n                }\n            }\n        }\n        *(param_1 + 8) = iVar5;\n        return;\n    }\n    if (*(param_1 + 4) != 0) {\n        fcn.00419316(*(param_1 + 4));\n        *(param_1 + 4) = 0;\n    }\n    *(param_1 + 0xc) = 0;\n    *(param_1 + 8) = 0;\n    return;\n}\n",
        "token_count": 1144
    },
    "0040f0d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0040f0d0(int32_t param_1, int32_t param_2, uint param_3, uint param_4, int32_t param_5)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    uint *puVar3;\n    int32_t iVar4;\n    int32_t unaff_EBX;\n    int32_t iVar5;\n    uint unaff_retaddr;\n    \n    if ((-1 < param_2) && (0 < param_5)) {\n        iVar4 = *(param_1 + 8);\n        if (param_2 < iVar4) {\n            fcn.0040ec70(iVar4 + param_5, 0xffffffff);\n            iVar5 = param_2 * 8;\n            iVar4 = (iVar4 - unaff_EBX) * 8;\n            uVar2 = fcn.00428c85(*(param_1 + 4) + (unaff_EBX + param_5) * 8, iVar4, *(param_1 + 4) + iVar5, iVar4);\n            fcn.00401000(uVar2);\n            fcn.00429510(*(param_1 + 4) + iVar5, 0, param_5 * 8);\n            iVar4 = param_5;\n            if (0 < param_5) {\n                do {\n                    puVar3 = *(param_1 + 4) + iVar5;\n                    if (puVar3 != NULL) {\n                        *(puVar3 + 1) = 0;\n                        *puVar3 = 0;\n                    }\n                    iVar5 = iVar5 + 8;\n                    iVar4 = iVar4 + -1;\n                } while (iVar4 != 0);\n            }\n        }\n        else {\n            fcn.0040ec70(param_5 + param_2, 0xffffffff);\n            unaff_EBX = param_2;\n        }\n        unaff_EBX = unaff_EBX * 8;\n        do {\n            iVar4 = *(param_1 + 4);\n            *(iVar4 + unaff_EBX) = unaff_retaddr;\n            param_5 = param_5 + -1;\n            *(iVar4 + 4 + unaff_EBX) = param_2;\n            unaff_EBX = unaff_EBX + 8;\n        } while (param_5 != 0);\n        return;\n    }\n    fcn.0041944d();\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 555
    },
    "0040f2a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040f2a0(int32_t param_1)\n\n{\n    int32_t arg_ch;\n    code *pcVar1;\n    \n    arg_ch = *(param_1 + 0x34);\n    if (arg_ch != 0) {\n        if (arg_ch < 1) {\n            fcn.0042bc38(&stack0xfffffff8, 0x44a6f4);\n            pcVar1 = swi(3);\n            (*pcVar1)();\n            return;\n        }\n        fcn.0042be10(*(param_1 + 0x30), arg_ch, 4, 0x40ea40);\n    }\n    return;\n}\n",
        "token_count": 152
    },
    "0040f580": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\ncode ** __fastcall fcn.0040f580(code **param_1)\n\n{\n    uchar uVar1;\n    uint32_t uVar2;\n    code *pcVar3;\n    int32_t **in_FS_OFFSET;\n    int32_t *piStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x43ef9c;\n    piStack12 = *in_FS_OFFSET;\n    uVar2 = *0x45060c ^ &stack0xffffffe4;\n    *in_FS_OFFSET = &piStack12;\n    *param_1 = vtable.CZipCentralDir.0;\n    fcn.0040e800(uVar2);\n    uStack4 = 0;\n    fcn.0040e800();\n    fcn.0040f090();\n    param_1[0xb] = vtable.CZipArray_class_CZipFileHeader__.0;\n    fcn.0040f0b0();\n    param_1[0x11] = vtable.CZipArray_struct_CZipCentralDir::CZipFindFast_.0;\n    uStack4 = CONCAT31(uStack4._1_3_, 3);\n    *(param_1 + 0x10) = 1;\n    *(param_1 + 0x16) = 0;\n    *(param_1 + 0x18) = 0;\n    uVar1 = fcn.00412110(1);\n    pcVar3 = fcn.00413bd0(uVar1);\n    param_1[0x17] = pcVar3;\n    param_1[9] = NULL;\n    param_1[8] = NULL;\n    param_1[10] = 0x8000;\n    *in_FS_OFFSET = piStack12;\n    return param_1;\n}\n",
        "token_count": 415
    },
    "0040f890": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040f890(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    uint32_t *puVar2;\n    uint uVar3;\n    uint *unaff_EDI;\n    uint32_t **in_FS_OFFSET;\n    uint32_t *puStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x43f028;\n    puStack12 = *in_FS_OFFSET;\n    puVar2 = *0x45060c ^ &stack0xffffffe0;\n    *in_FS_OFFSET = &puStack12;\n    uVar3 = fcn.0040f2d0(0);\n    fcn.0040e940(uVar3, 0);\n    uVar1 = *(param_1 + 0x10);\n    *unaff_EDI = *0x44e554;\n    *(unaff_EDI + 1) = *(param_1 + 0x6c);\n    *(unaff_EDI + 6) = *(param_1 + 0x6e);\n    *(unaff_EDI + 2) = *(param_1 + 0x70);\n    *(unaff_EDI + 10) = *(param_1 + 0x72);\n    unaff_EDI[3] = *(param_1 + 0x74);\n    unaff_EDI[4] = *(param_1 + 0x78);\n    *(unaff_EDI + 5) = uVar1;\n    fcn.0042aaa0(unaff_EDI + 0x16, *(param_1 + 0xc), uVar1 & 0xffff);\n    fcn.004136c0(unaff_EDI, uVar3, 1);\n    fcn.0040e970();\n    *in_FS_OFFSET = puVar2;\n    return uVar3;\n}\n",
        "token_count": 423
    },
    "0040f980": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nuint __thiscall fcn.0040f980(int32_t param_1, uint param_2, uint16_t param_3)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    uint32_t *puVar4;\n    uint uVar5;\n    uint32_t **in_FS_OFFSET;\n    int32_t unaff_retaddr;\n    uint32_t *puStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x43f058;\n    puStack12 = *in_FS_OFFSET;\n    puVar4 = *0x45060c ^ &stack0xfffffff0;\n    *in_FS_OFFSET = &puStack12;\n    if (*(param_1 + 0x4c) <= param_3) {\n        fcn.0041944d();\n        pcVar3 = swi(3);\n        uVar5 = (*pcVar3)();\n        return uVar5;\n    }\n    fcn.004118d0(&param_3);\n    uStack8 = 0;\n    uVar5 = (**(param_1 + 0x5c))(unaff_retaddr);\n    puStack12 = 0xffffffff;\n    piVar1 = unaff_retaddr + -4;\n    LOCK();\n    iVar2 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar2 == 1 || iVar2 + -1 < 0) {\n        (**(**(unaff_retaddr + -0x10) + 4))(unaff_retaddr + -0x10);\n    }\n    *in_FS_OFFSET = puVar4;\n    return uVar5;\n}\n",
        "token_count": 384
    },
    "0040fa20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0040fa20(code **param_1)\n\n{\n    uint32_t uVar1;\n    int32_t **in_FS_OFFSET;\n    int32_t *piStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack8 = 0x43f0ac;\n    piStack12 = *in_FS_OFFSET;\n    uVar1 = *0x45060c ^ &stack0xffffffec;\n    *in_FS_OFFSET = &piStack12;\n    *param_1 = vtable.CZipCentralDir.0;\n    uStack4 = 3;\n    fcn.0040f680(1, uVar1);\n    uStack8._0_1_ = 2;\n    fcn.0040eac0();\n    uStack8._0_1_ = 1;\n    fcn.0040eaa0();\n    uStack8 = uStack8._1_3_ << 8;\n    fcn.0040e970();\n    uStack8 = 0xffffffff;\n    fcn.0040e970();\n    *in_FS_OFFSET = param_1;\n    return;\n}\n",
        "token_count": 261
    },
    "0040fc60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0040fc60(int32_t param_1, uint16_t param_2)\n\n{\n    int32_t *piVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint16_t uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t *unaff_EBP;\n    int32_t unaff_ESI;\n    int32_t iVar7;\n    int32_t iVar8;\n    int32_t **in_FS_OFFSET;\n    uint unaff_retaddr;\n    uchar *puVar9;\n    uint32_t uStack24;\n    uchar *puStack20;\n    uchar auStack16 [4];\n    int32_t *piStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x43f108;\n    piStack12 = *in_FS_OFFSET;\n    uVar2 = *0x45060c ^ &stack0xffffffd8;\n    *in_FS_OFFSET = &piStack12;\n    puVar9 = auStack16;\n    fcn.004118d0(puVar9, uVar2);\n    iVar6 = *(param_1 + 0x4c);\n    iVar8 = 0;\n    uStack8 = 0;\n    iVar5 = iVar6;\n    if (0 < iVar6) {\n        do {\n            iVar6 = unaff_ESI;\n            iVar7 = (iVar5 + iVar8) / 2;\n            puVar9 = puStack20;\n            iVar3 = fcn.0040f980();\n            unaff_ESI = iVar6;\n            if (iVar3 < 1) {\n                iVar8 = iVar7;\n                if (-1 < iVar3) break;\n                iVar8 = iVar7 + 1;\n                iVar7 = iVar5;\n            }\n            iVar5 = iVar7;\n        } while (iVar8 < iVar7);\n    }\n    uVar4 = iVar6;\n    if (param_2 != 0xffff) {\n        uVar4 = param_2;\n    }\n    uStack24 = uStack24 & 0xffff0000 | uVar4;\n    fcn.0040f0d0(iVar8, unaff_retaddr, uStack24, 1, puVar9);\n    piVar1 = unaff_ESI + -4;\n    LOCK();\n    iVar8 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar8 == 1 || iVar8 + -1 < 0) {\n        (**(**(unaff_ESI + -0x10) + 4))(unaff_ESI + -0x10);\n    }\n    *in_FS_OFFSET = unaff_EBP;\n    return;\n}\n",
        "token_count": 612
    },
    "004106b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.004106b0(uint param_1, int32_t param_2, int32_t param_3)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    uint uVar3;\n    uint unaff_ESI;\n    \n    if (((param_3 != param_2) && (param_2 < 0xb)) && (param_3 < 0xb)) {\n        pcVar1 = *(param_2 * 4 + 0x44e650);\n        pcVar2 = *(param_3 * 4 + 0x44e650);\n        if ((pcVar1 != NULL) && (pcVar2 != NULL)) {\n            uVar3 = (*pcVar1)(param_1, 1, 0);\n            uVar3 = (*pcVar2)(uVar3);\n            return uVar3;\n        }\n        fcn.0040bc60(0x73, 0);\n    }\n    return unaff_ESI;\n}\n",
        "token_count": 215
    },
    "004107c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.004107c0(uint param_1)\n\n{\n    // switch table (9 cases) at 0x41080c\n    switch(param_1) {\n    default:\n        return 100;\n    case 1:\n        return 500;\n    case 2:\n        return 0x1f5;\n    case 0xfffffffa:\n        return 0x1fb;\n    case 0xfffffffb:\n        return 0x1fa;\n    case 0xfffffffc:\n        return 0x1f9;\n    case 0xfffffffd:\n        return 0x1f8;\n    case 0xfffffffe:\n        return 0x1f7;\n    case 0xffffffff:\n        return 0x1f6;\n    }\n}\n",
        "token_count": 166
    },
    "00410880": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\ncode ** __fastcall fcn.00410880(code **param_1)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    char *pcVar5;\n    int32_t *unaff_EBX;\n    int32_t **in_FS_OFFSET;\n    char *unaff_retaddr;\n    uint uVar6;\n    int32_t *piStack12;\n    uint uStack8;\n    code *pcStack4;\n    \n    pcStack4 = 0xffffffff;\n    uStack8 = 0x43f1eb;\n    piStack12 = *in_FS_OFFSET;\n    uVar2 = *0x45060c ^ &stack0xffffffe4;\n    *in_FS_OFFSET = &piStack12;\n    uVar6 = 1;\n    fcn.004194c3(1);\n    *param_1 = vtable.CZipException.0;\n    piVar3 = fcn.0041a118(uVar6, uVar2);\n    if (piVar3 == NULL) {\n        piVar3 = fcn.00401090(0x80004005);\n    }\n    iVar4 = (**(*piVar3 + 0xc))();\n    param_1[2] = iVar4 + 0x10;\n    piStack12 = NULL;\n    param_1[3] = pcStack4;\n    if (unaff_retaddr != NULL) {\n        pcVar5 = unaff_retaddr;\n        do {\n            cVar1 = *pcVar5;\n            pcVar5 = pcVar5 + 1;\n        } while (cVar1 != '\\0');\n        fcn.00401aa0(unaff_retaddr, pcVar5 - (unaff_retaddr + 1));\n    }\n    *in_FS_OFFSET = unaff_EBX;\n    return param_1;\n}\n",
        "token_count": 409
    },
    "00410930": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nint32_t * fcn.00410930(int32_t *param_1)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    uint *puVar4;\n    int32_t *unaff_ESI;\n    int32_t unaff_EDI;\n    int32_t **in_FS_OFFSET;\n    uint uVar5;\n    uchar *puVar6;\n    uint uVar7;\n    uchar auStack20 [4];\n    uint uStack16;\n    int32_t *piStack12;\n    int32_t *piStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    piStack8 = 0x43f218;\n    piStack12 = *in_FS_OFFSET;\n    uVar1 = *0x45060c ^ &stack0xffffffe4;\n    *in_FS_OFFSET = &piStack12;\n    uStack16 = 0;\n    iVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)(uVar1);\n    if (iVar2 == 0) {\n        piVar3 = fcn.0042b75c();\n        if (*piVar3 == 0) {\n            uVar5 = 100;\n        }\n        else {\n            puVar4 = fcn.0042b75c();\n            uVar5 = *puVar4;\n        }\n        fcn.00410a20(param_1, uVar5, 1);\n    }\n    else {\n        uVar7 = 0;\n        puVar6 = auStack20;\n        uVar5 = 0x400;\n        (*_sym.imp.KERNEL32.dll_FormatMessageA)(0x1300, 0, iVar2, 0x400, puVar6, 0, 0);\n        fcn.00403c70(uVar5);\n        uVar5 = 0;\n        (*_sym.imp.KERNEL32.dll_LocalFree)(iVar2);\n        iVar2 = fcn.004016b0(unaff_EDI + -0x10, puVar6, uVar7, uVar5);\n        param_1 = piStack8;\n        *piStack8 = iVar2 + 0x10;\n        uStack16 = 0xffffffff;\n        piVar3 = unaff_EDI + -4;\n        LOCK();\n        iVar2 = *piVar3;\n        *piVar3 = *piVar3 + -1;\n        if (iVar2 == 1 || iVar2 + -1 < 0) {\n            (**(**(unaff_EDI + -0x10) + 4))(unaff_EDI + -0x10);\n        }\n    }\n    *in_FS_OFFSET = unaff_ESI;\n    return param_1;\n}\n",
        "token_count": 597
    },
    "00411150": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\ncode ** __fastcall fcn.00411150(code **param_1)\n\n{\n    uint32_t uVar1;\n    int32_t **in_FS_OFFSET;\n    int32_t *piStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack8 = 0x43f2e8;\n    piStack12 = *in_FS_OFFSET;\n    uVar1 = *0x45060c ^ &stack0xffffffe8;\n    *in_FS_OFFSET = &piStack12;\n    *param_1 = vtable.CZipAbstractFile.0;\n    uStack4 = 0;\n    fcn.0041b5fd(uVar1);\n    *param_1 = vtable.CZipFile.1.0;\n    param_1[1] = vtable.CZipFile.0;\n    *in_FS_OFFSET = piStack12;\n    return param_1;\n}\n",
        "token_count": 196
    },
    "004111c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004111c0(code **param_1)\n\n{\n    uint32_t uVar1;\n    int32_t **in_FS_OFFSET;\n    int32_t *piStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack8 = 0x43f318;\n    piStack12 = *in_FS_OFFSET;\n    uVar1 = *0x45060c ^ &stack0xffffffec;\n    *in_FS_OFFSET = &piStack12;\n    *param_1 = vtable.CZipFile.1.0;\n    param_1[1] = vtable.CZipFile.0;\n    uStack4 = 0;\n    fcn.0041b6d8(uVar1);\n    *param_1 = vtable.CZipAbstractFile.0;\n    *in_FS_OFFSET = piStack12;\n    return;\n}\n",
        "token_count": 191
    },
    "00411220": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\ncode ** __fastcall fcn.00411220(code **param_1)\n\n{\n    uint32_t uVar1;\n    int32_t **in_FS_OFFSET;\n    int32_t *piStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x43f356;\n    piStack12 = *in_FS_OFFSET;\n    uVar1 = *0x45060c ^ &stack0xffffffec;\n    *in_FS_OFFSET = &piStack12;\n    *param_1 = vtable.CZipFileHeader.0;\n    fcn.0040e800(uVar1);\n    uStack4 = 0;\n    fcn.0040e800();\n    uStack4 = CONCAT31(uStack4._1_3_, 1);\n    fcn.0040e800();\n    *(param_1 + 4) = 0;\n    param_1[9] = NULL;\n    *(param_1 + 0x12) = 0;\n    *(param_1 + 0xe) = 8;\n    *in_FS_OFFSET = piStack12;\n    return param_1;\n}\n",
        "token_count": 267
    },
    "004112b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004112b0(code **param_1)\n\n{\n    uint32_t uVar1;\n    int32_t **in_FS_OFFSET;\n    int32_t *piStack12;\n    uint uStack8;\n    uint32_t uStack4;\n    \n    uStack8 = 0x43f356;\n    piStack12 = *in_FS_OFFSET;\n    uVar1 = *0x45060c ^ &stack0xffffffec;\n    *in_FS_OFFSET = &piStack12;\n    *param_1 = vtable.CZipFileHeader.0;\n    uStack4 = 1;\n    fcn.0040e970(uVar1);\n    uStack4 = uStack4 & 0xffffff00;\n    fcn.0040e970();\n    uStack4 = 0xffffffff;\n    fcn.0040e970();\n    *in_FS_OFFSET = piStack12;\n    return;\n}\n",
        "token_count": 200
    },
    "00411390": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00411390(int32_t param_1)\n\n{\n    ushort uVar1;\n    int16_t iVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint *unaff_ESI;\n    int32_t *in_FS_OFFSET;\n    int32_t iVar5;\n    int32_t iStack72;\n    uint32_t uVar6;\n    uint uStack28;\n    int32_t iStack12;\n    uint uStack8;\n    int32_t iStack4;\n    \n    iStack4 = -1;\n    uStack8 = 0x43f388;\n    iStack12 = *in_FS_OFFSET;\n    uVar4 = *0x45060c ^ &stack0xffffffd4;\n    *in_FS_OFFSET = &stack0xfffffff4;\n    uVar6 = 0x2e;\n    fcn.0040e940(0x2e, 0, uVar4);\n    iVar3 = iStack4;\n    iStack12 = 0;\n    fcn.00413af0(uStack28, 0x2e, 1);\n    *(param_1 + 4) = *unaff_ESI;\n    *(param_1 + 8) = *(unaff_ESI + 1);\n    *(param_1 + 10) = *(unaff_ESI + 6);\n    *(param_1 + 0xc) = *(unaff_ESI + 2);\n    *(param_1 + 0xe) = *(unaff_ESI + 10);\n    *(param_1 + 0x10) = *(unaff_ESI + 3);\n    *(param_1 + 0x12) = *(unaff_ESI + 0xe);\n    *(param_1 + 0x14) = unaff_ESI[4];\n    *(param_1 + 0x18) = unaff_ESI[5];\n    *(param_1 + 0x1c) = unaff_ESI[6];\n    uVar1 = *(unaff_ESI + 7);\n    iVar2 = *(unaff_ESI + 0x1e);\n    *(param_1 + 0x20) = *(unaff_ESI + 0x22);\n    *(param_1 + 0x22) = *(unaff_ESI + 9);\n    *(param_1 + 0x24) = *(unaff_ESI + 0x26);\n    *(param_1 + 0x28) = *(unaff_ESI + 0x2a);\n    fcn.0040e820();\n    if (*(param_1 + 4) == *0x44e698) {\n        iStack72 = 0;\n        fcn.0040e850(uVar1);\n        iVar5 = *(param_1 + 0x3c);\n        fcn.00413af0(iVar5, uVar1, 1);\n        if (iVar2 != 0) {\n            fcn.0040e850(iVar2, 0);\n            fcn.00413af0(*(param_1 + 0x30), iVar2, 1);\n        }\n        if (uVar6 != 0) {\n            fcn.0040e850(uVar6 & 0xffff, 0);\n            fcn.00413af0(*(param_1 + 0x48), uVar6 & 0xffff, 1);\n        }\n        iVar3 = *(iVar3 + 0x50);\n        uVar4 = fcn.0040e970();\n        uVar4 = uVar4 & 0xffffff00 | iVar3 == iVar5;\n    }\n    else {\n        iStack72 = 0x41150a;\n        uVar4 = fcn.0040e970();\n        uVar4 = uVar4 & 0xffffff00;\n    }\n    *in_FS_OFFSET = iStack72;\n    return uVar4;\n}\n",
        "token_count": 867
    },
    "00411530": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00411530(int32_t param_1)\n\n{\n    uint16_t uVar1;\n    uint16_t uVar2;\n    int32_t iStack36;\n    uint32_t uStack32;\n    uint32_t uStack28;\n    uint32_t uStack24;\n    int32_t iStack20;\n    int32_t iStack16;\n    uint uStack4;\n    \n    uVar1 = *(param_1 + 0x10);\n    iStack36 = (uVar1 & 0xffff001f) * 2;\n    uStack28 = uVar1 >> 0xb;\n    uVar2 = *(param_1 + 0x12);\n    uStack32 = uVar1 >> 5 & 0xfffff83f;\n    iStack16 = (uVar2 >> 9) + 0x50;\n    uStack24 = uVar2 & 0xffff001f;\n    iStack20 = (uVar2 >> 5 & 0xfffff80fU) - 1;\n    uStack4 = 0xffffffff;\n    fcn.00428bf6(&iStack36);\n    return;\n}\n",
        "token_count": 256
    },
    "004115a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff",
            "parse PE header/27dc37a2d08e4034aa7bcaa8b888b251",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "PEB access",
            "access PEB ldr_data",
            "get ntdll base address",
            "enumerate PE sections"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.004115a0(int32_t param_1)\n\n{\n    uint *puVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint32_t arg_10h;\n    int16_t unaff_BX;\n    uint32_t arg_10h_00;\n    int32_t unaff_EBP;\n    int16_t iVar6;\n    uint32_t **in_FS_OFFSET;\n    uint32_t *puStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x43f3b8;\n    puStack12 = *in_FS_OFFSET;\n    uVar5 = *0x45060c ^ &stack0xffffffc8;\n    *in_FS_OFFSET = &puStack12;\n    uVar2 = *(param_1 + 0x4c);\n    uVar3 = *(param_1 + 0x40);\n    uVar4 = *(param_1 + 0x34);\n    arg_10h = uVar4 & 0xffff;\n    arg_10h_00 = uVar3 & 0xffff;\n    puVar1 = (uVar2 & 0xffff) + arg_10h + arg_10h_00 + 0x2e;\n    fcn.0040e940(puVar1, 0, uVar5);\n    *puVar1 = *(param_1 + 4);\n    *(puVar1 + 1) = *(param_1 + 8);\n    *(puVar1 + 6) = *(param_1 + 10);\n    *(puVar1 + 2) = *(param_1 + 0xc);\n    *(puVar1 + 10) = *(param_1 + 0xe);\n    *(puVar1 + 3) = *(param_1 + 0x10);\n    *(puVar1 + 0xe) = *(param_1 + 0x12);\n    puVar1[4] = *(param_1 + 0x14);\n    puVar1[5] = *(param_1 + 0x18);\n    puVar1[6] = *(param_1 + 0x1c);\n    *(puVar1 + 7) = uVar3;\n    iVar6 = uVar4;\n    *(puVar1 + 0x1e) = iVar6;\n    *(puVar1 + 8) = unaff_BX;\n    *(puVar1 + 0x22) = *(param_1 + 0x20);\n    *(puVar1 + 9) = *(param_1 + 0x22);\n    *(puVar1 + 0x26) = *(param_1 + 0x24);\n    *(puVar1 + 0x2a) = *(param_1 + 0x28);\n    puStack12 = NULL;\n    fcn.0042aaa0(puVar1 + 0x2e, *(param_1 + 0x3c), arg_10h_00);\n    if (iVar6 != 0) {\n        fcn.0042aaa0(arg_10h_00 + 0x2e + puVar1, *(param_1 + 0x30), unaff_EBP);\n    }\n    if (unaff_BX != 0) {\n        fcn.0042aaa0(arg_10h_00 + unaff_EBP + 0x2e + puVar1, *(param_1 + 0x48), arg_10h);\n    }\n    fcn.004136c0(puVar1, uVar2, 1);\n    fcn.0040e970();\n    *in_FS_OFFSET = uVar2 & 0xffff;\n    return uVar2;\n}\n",
        "token_count": 857
    },
    "004118d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.004118d0(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t **in_FS_OFFSET;\n    int32_t *unaff_retaddr;\n    int32_t *piStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack8 = 0x43dc69;\n    piStack12 = *in_FS_OFFSET;\n    uVar1 = *0x45060c ^ &stack0xffffffe8;\n    *in_FS_OFFSET = &piStack12;\n    uStack4 = 0;\n    piVar2 = fcn.0041a118(uVar1);\n    if (piVar2 == NULL) {\n        piVar2 = fcn.00401090(0x80004005);\n    }\n    iVar3 = (**(*piVar2 + 0xc))();\n    *unaff_retaddr = iVar3 + 0x10;\n    uStack8 = 0;\n    fcn.0040d380(param_1 + 0x38, unaff_retaddr);\n    *in_FS_OFFSET = NULL;\n    return unaff_retaddr;\n}\n",
        "token_count": 269
    },
    "00411af0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00411af0(void)\n\n{\n    uint uVar1;\n    \n    uVar1 = fcn.00411970();\n    fcn.004120b0(uVar1);\n    return;\n}\n",
        "token_count": 47
    },
    "00411bb0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nchar ** __thiscall fcn.00411bb0(char **param_1, char param_2)\n\n{\n    char cVar1;\n    char *pcVar2;\n    char *arg_8h;\n    code *pcVar3;\n    char *arg_8h_00;\n    uint uVar4;\n    char **ppcVar5;\n    int32_t iVar6;\n    \n    arg_8h_00 = *param_1;\n    cVar1 = *arg_8h_00;\n    while (param_2 == cVar1) {\n        arg_8h_00 = fcn.004288fb(arg_8h_00);\n        cVar1 = *arg_8h_00;\n    }\n    pcVar2 = *param_1;\n    if (arg_8h_00 != pcVar2) {\n        if ((1U - *(pcVar2 + -4) | *(pcVar2 + -8) - *(pcVar2 + -0xc)) < 0) {\n            fcn.00401660(*(pcVar2 + -0xc));\n        }\n        arg_8h = *param_1;\n        iVar6 = *(arg_8h + -0xc) - (arg_8h_00 - pcVar2);\n        uVar4 = fcn.00428c85(arg_8h, *(arg_8h + -0xc) + 1, arg_8h + (arg_8h_00 - pcVar2), iVar6 + 1);\n        fcn.00401000(uVar4);\n        if ((iVar6 < 0) || (*(*param_1 + -8) < iVar6)) {\n            fcn.00401090(0x80070057);\n            pcVar3 = swi(3);\n            ppcVar5 = (*pcVar3)();\n            return ppcVar5;\n        }\n        *(*param_1 + -0xc) = iVar6;\n        (*param_1)[iVar6] = '\\0';\n    }\n    return param_1;\n}\n",
        "token_count": 447
    },
    "00411f60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nint32_t * __thiscall fcn.00411f60(int32_t param_1, int32_t *param_2)\n\n{\n    int32_t *piVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t **ppiVar4;\n    int32_t *unaff_EBX;\n    int32_t *unaff_ESI;\n    int32_t **in_FS_OFFSET;\n    uchar auStack20 [4];\n    uint uStack16;\n    int32_t *piStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack8 = 0x43f4b1;\n    piStack12 = *in_FS_OFFSET;\n    uVar2 = *0x45060c ^ &stack0xffffffe0;\n    *in_FS_OFFSET = &piStack12;\n    uStack16 = 0;\n    uStack4 = 0;\n    iVar3 = fcn.004016b0(*(param_1 + 4) + -0x10);\n    *param_2 = iVar3 + 0x10;\n    uStack4 = 0;\n    uStack16 = 1;\n    fcn.0040dcd0(auStack20);\n    uStack8 = 1;\n    if ((unaff_EBX[-3] != 0) && (*(*param_2 + -0xc) != 0)) {\n        unaff_EBX = unaff_ESI;\n        fcn.0040cee0(*0x4429d1);\n        unaff_ESI = unaff_EBX;\n    }\n    fcn.00401b30(unaff_EBX, unaff_EBX[-3]);\n    ppiVar4 = uVar2 - 0x10;\n    auStack20[0] = 0;\n    piVar1 = uVar2 - 4;\n    LOCK();\n    iVar3 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar3 == 1 || iVar3 + -1 < 0) {\n        (**(**ppiVar4 + 4))(ppiVar4);\n    }\n    *in_FS_OFFSET = unaff_ESI;\n    return param_2;\n}\n",
        "token_count": 483
    },
    "00412060": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool fcn.00412060(uint param_1)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0042c81c(param_1);\n    return iVar1 == 0;\n}\n",
        "token_count": 47
    },
    "00412080": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.00412080(uint param_1)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    \n    iVar2 = fcn.00429af8(param_1, 0);\n    if (iVar2 == 0) {\n        cVar1 = fcn.004125d0(param_1);\n        return (cVar1 == '\\0') * 2 + -1;\n    }\n    return 0;\n}\n",
        "token_count": 99
    },
    "00412210": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00412210(int32_t param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.004016b0(*(param_1 + 0x10) + -0x10, 0);\n    *param_2 = iVar1 + 0x10;\n    return;\n}\n",
        "token_count": 83
    },
    "00412470": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t fcn.00412470(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint32_t uVar4;\n    \n    pcVar1 = _sym.imp.KERNEL32.dll_GetCurrentDirectoryA;\n    iVar2 = (*_sym.imp.KERNEL32.dll_GetCurrentDirectoryA)(0, 0);\n    if (iVar2 == 0) {\n        return 0;\n    }\n    uVar3 = fcn.0041930b(iVar2);\n    iVar2 = (*pcVar1)(iVar2, uVar3);\n    if (iVar2 == 0) {\n        uVar4 = fcn.00419316(uVar3);\n        return uVar4 & 0xffffff00;\n    }\n    fcn.00402e60(uVar3);\n    uVar4 = fcn.00419316(uVar3);\n    return uVar4 & 0xffffff00 | 1;\n}\n",
        "token_count": 210
    },
    "004124d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "PEB access"
        ],
        "decompiled_code": "\nuint32_t fcn.004124d0(uint param_1)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    code *pcVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t unaff_ESI;\n    int32_t unaff_EDI;\n    int32_t *in_FS_OFFSET;\n    int32_t iStack36;\n    uint uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x43f540;\n    uStack12 = *in_FS_OFFSET;\n    uVar4 = *0x45060c ^ &stack0xffffffc8;\n    *in_FS_OFFSET = &uStack12;\n    fcn.0040cd80(param_1, uVar4);\n    uStack8 = 0;\n    fcn.00412210(&stack0xffffffd4);\n    uStack12 = CONCAT31(uStack12._1_3_, 1);\n    fcn.00401f60(0x4423b4);\n    iVar5 = *(unaff_ESI + -0xc);\n    iVar1 = iVar5 + 1;\n    if ((*(unaff_ESI + -8) - iVar1 | 1U - *(unaff_ESI + -4)) < 0) {\n        unaff_ESI = unaff_EDI;\n        fcn.00401660(iVar1);\n    }\n    *(unaff_ESI + iVar5) = 0x5c;\n    if ((-1 < iVar1) && (iVar1 <= *(unaff_ESI + -8))) {\n        *(unaff_ESI + -0xc) = iVar1;\n        *(iVar1 + unaff_ESI) = 0;\n        iVar5 = (*_sym.imp.KERNEL32.dll_SetVolumeLabelA)(unaff_ESI, uStack8);\n        piVar2 = unaff_ESI + -4;\n        LOCK();\n        iVar1 = *piVar2;\n        *piVar2 = *piVar2 + -1;\n        if (iVar1 == 1 || iVar1 + -1 < 0) {\n            (**(**(unaff_ESI + -0x10) + 4))(unaff_ESI + -0x10);\n        }\n        uVar4 = fcn.00411b00();\n        *in_FS_OFFSET = iStack36;\n        return uVar4 & 0xffffff00 | iVar5 != 0;\n    }\n    fcn.00401090(0x80070057);\n    pcVar3 = swi(3);\n    uVar4 = (*pcVar3)();\n    return uVar4;\n}\n",
        "token_count": 591
    },
    "004125d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nuint fcn.004125d0(void)\n\n{\n    char cVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t **in_FS_OFFSET;\n    uint unaff_retaddr;\n    uint32_t uStack20;\n    int32_t *piStack16;\n    int32_t *piStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x43efc8;\n    piStack12 = *in_FS_OFFSET;\n    uStack20 = *0x45060c ^ &piStack16;\n    *in_FS_OFFSET = &piStack12;\n    piVar2 = fcn.0041a118();\n    if (piVar2 == NULL) {\n        piVar2 = fcn.00401090(0x80004005);\n    }\n    iVar3 = (**(*piVar2 + 0xc))();\n    uStack20 = iVar3 + 0x10;\n    uStack8 = 0;\n    cVar1 = fcn.00412470(&uStack20);\n    if (cVar1 != '\\0') {\n        cVar1 = fcn.00412060(unaff_retaddr);\n        if (cVar1 != '\\0') {\n            fcn.00412060(uStack20);\n            uStack8 = 0xffffffff;\n            piVar2 = uStack20 - 4;\n            LOCK();\n            iVar3 = *piVar2;\n            *piVar2 = *piVar2 + -1;\n            if (iVar3 == 1 || iVar3 + -1 < 0) {\n                (**(**(uStack20 - 0x10) + 4))(uStack20 - 0x10);\n            }\n            *in_FS_OFFSET = piStack16;\n            return 1;\n        }\n    }\n    uStack8 = 0xffffffff;\n    piVar2 = uStack20 - 4;\n    LOCK();\n    iVar3 = *piVar2;\n    *piVar2 = *piVar2 + -1;\n    if (iVar3 == 1 || iVar3 + -1 < 0) {\n        (**(**(uStack20 - 0x10) + 4))(uStack20 - 0x10);\n    }\n    *in_FS_OFFSET = piStack16;\n    return 0;\n}\n",
        "token_count": 516
    },
    "004126d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.004126d0(int32_t param_1)\n\n{\n    int32_t *piVar1;\n    bool bVar2;\n    char cVar3;\n    uint *puVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    int32_t extraout_ECX;\n    uint unaff_ESI;\n    int32_t **in_FS_OFFSET;\n    uint32_t uStack60;\n    int32_t *piStack36;\n    int32_t *piStack32;\n    int32_t *piStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x43f591;\n    piStack12 = *in_FS_OFFSET;\n    uStack60 = *0x45060c ^ &stack0xffffffc8;\n    *in_FS_OFFSET = &piStack12;\n    fcn.00403c70();\n    uVar6 = *0x4429d1;\n    uStack8 = 0;\n    fcn.00401be0();\n    fcn.0040cd80(unaff_ESI);\n    puVar4 = fcn.0040d800(&stack0xffffffcc);\n    uStack60 = 1;\n    iVar5 = param_1;\n    if (param_1 == 0) {\n        puVar4 = fcn.00401090(0x80004005);\n        iVar5 = extraout_ECX;\n    }\n    iVar5 = fcn.004288e4(*puVar4, iVar5);\n    if (iVar5 == 0) {\ncode_r0x00412792:\n        bVar2 = true;\n    }\n    else {\n        iVar5 = fcn.00412080(uVar6);\n        if (iVar5 == -1) goto code_r0x00412792;\n        bVar2 = false;\n    }\n    piVar1 = uStack60 - 4;\n    LOCK();\n    iVar5 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar5 == 1 || iVar5 + -1 < 0) {\n        (**(**(uStack60 - 0x10) + 4))(uStack60 - 0x10);\n    }\n    if (!bVar2) {\n        puVar4 = fcn.0040d800(&uStack60);\n        cVar3 = fcn.004126d0(*puVar4);\n        piVar1 = param_1 + -4;\n        LOCK();\n        iVar5 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n        if (iVar5 == 1 || iVar5 + -1 < 0) {\n            (**(**(param_1 + -0x10) + 4))(param_1 + -0x10);\n        }\n        if (cVar3 == '\\0') {\n            fcn.00411b00();\n            piVar1 = uVar6 - 4;\n            LOCK();\n            iVar5 = *piVar1;\n            *piVar1 = *piVar1 + -1;\n            if (iVar5 == 1 || iVar5 + -1 < 0) {\n                (**(**(uVar6 - 0x10) + 4))(uVar6 - 0x10);\n            }\n        }\n        else {\n            cVar3 = fcn.004120c0(uVar6);\n            if (cVar3 != '\\0') goto code_r0x004128a4;\n            fcn.00411b00();\n            piVar1 = uVar6 - 4;\n            LOCK();\n            iVar5 = *piVar1;\n            *piVar1 = *piVar1 + -1;\n            if (iVar5 == 1 || iVar5 + -1 < 0) {\n                (**(**(uVar6 - 0x10) + 4))(uVar6 - 0x10);\n                *in_FS_OFFSET = piStack36;\n                return 0;\n            }\n        }\n        *in_FS_OFFSET = piStack32;\n        return 0;\n    }\ncode_r0x004128a4:\n    fcn.00411b00();\n    piVar1 = uVar6 - 4;\n    LOCK();\n    iVar5 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar5 == 1 || iVar5 + -1 < 0) {\n        (**(**(uVar6 - 0x10) + 4))(uVar6 - 0x10);\n    }\n    *in_FS_OFFSET = piStack32;\n    return 1;\n}\n",
        "token_count": 1015
    },
    "00412930": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "execute .NET assembly via CLR host/2c9ef85a2fe94af39efaaae3fc9e6a8a"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\ncode ** __fastcall fcn.00412930(code **param_1)\n\n{\n    uint32_t uVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t **in_FS_OFFSET;\n    int32_t *piStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x43f5c6;\n    piStack12 = *in_FS_OFFSET;\n    uVar1 = *0x45060c ^ &stack0xffffffec;\n    *in_FS_OFFSET = &piStack12;\n    *param_1 = vtable.CZipStorage.0;\n    fcn.00411150(uVar1);\n    uStack4 = 0;\n    piVar2 = fcn.0041a118();\n    if (piVar2 == NULL) {\n        piVar2 = fcn.00401090(0x80004005);\n    }\n    iVar3 = (**(*piVar2 + 0xc))();\n    param_1[0xb] = iVar3 + 0x10;\n    uStack8 = CONCAT31(uStack8._1_3_, 1);\n    fcn.0040e800();\n    param_1[9] = NULL;\n    param_1[1] = 0x10000;\n    param_1[0x14] = 0xffffffff;\n    param_1[7] = NULL;\n    *in_FS_OFFSET = param_1;\n    return param_1;\n}\n",
        "token_count": 345
    },
    "004129e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004129e0(code **param_1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t **ppiVar4;\n    int32_t **in_FS_OFFSET;\n    int32_t *piStack12;\n    uint uStack8;\n    uint32_t uStack4;\n    \n    uStack8 = 0x43f5c6;\n    piStack12 = *in_FS_OFFSET;\n    uVar3 = *0x45060c ^ &stack0xffffffec;\n    *in_FS_OFFSET = &piStack12;\n    *param_1 = vtable.CZipStorage.0;\n    uStack4 = 1;\n    fcn.0040e970(uVar3);\n    ppiVar4 = param_1[0xb] + -0x10;\n    uStack4 = uStack4 & 0xffffff00;\n    piVar1 = param_1[0xb] + -4;\n    LOCK();\n    iVar2 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar2 == 1 || iVar2 + -1 < 0) {\n        (**(**ppiVar4 + 4))(ppiVar4);\n    }\n    uStack4 = 0xffffffff;\n    fcn.004111c0();\n    *in_FS_OFFSET = piStack12;\n    return;\n}\n",
        "token_count": 313
    },
    "00412ae0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00412ae0(int32_t param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.004016b0(*(param_1 + 0xc) + -0x10, 0);\n    *param_2 = iVar1 + 0x10;\n    return;\n}\n",
        "token_count": 83
    },
    "00412b10": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00412b10(int32_t param_1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    char cVar3;\n    uint32_t *puVar4;\n    uint32_t **in_FS_OFFSET;\n    int32_t unaff_retaddr;\n    uint32_t *puStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack8 = 0x43f058;\n    puStack12 = *in_FS_OFFSET;\n    puVar4 = *0x45060c ^ &stack0xfffffff0;\n    *in_FS_OFFSET = &puStack12;\n    uStack4 = 0;\n    fcn.00402100(&stack0x00000008);\n    *(*(param_1 + 0x24) + 8) = *(param_1 + 0x50) + 1;\n    cVar3 = (****(param_1 + 0x24))(unaff_retaddr);\n    if (cVar3 == '\\0') {\n        fcn.0040bc60(0x68, unaff_retaddr);\n    }\n    puStack12 = 0xffffffff;\n    piVar1 = unaff_retaddr + -4;\n    LOCK();\n    iVar2 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar2 == 1 || iVar2 + -1 < 0) {\n        (**(**(unaff_retaddr + -0x10) + 4))(unaff_retaddr + -0x10);\n    }\n    *in_FS_OFFSET = puVar4;\n    return;\n}\n",
        "token_count": 360
    },
    "00412d10": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "inject DLL reflectively/5c249d14806d4a4ea88afb4f94553771"
        ],
        "decompiled_code": "\nint32_t * __thiscall fcn.00412d10(int32_t param_1, int32_t *param_2)\n\n{\n    int32_t **in_FS_OFFSET;\n    int32_t *piVar1;\n    int32_t *piStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack8 = 0x43f649;\n    piStack12 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack12;\n    uStack4 = 0;\n    (**(**(param_1 + 0x1c) + 0x24))();\n    uStack8 = 0;\n    piVar1 = 0x1;\n    (**(**(param_1 + 0x1c) + 4))();\n    fcn.004016b0(*param_2 + -0x10);\n    fcn.00412b10(0xffffffff);\n    *in_FS_OFFSET = piVar1;\n    return param_2;\n}\n",
        "token_count": 217
    },
    "00413370": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00413370(int32_t param_1, int32_t param_2, uint32_t param_3)\n\n{\n    uint32_t uVar1;\n    uint32_t arg_10h;\n    \n    uVar1 = 0;\n    if (param_3 != 0) {\n        do {\n            arg_10h = *(param_1 + 0x44) - *(param_1 + 0x30);\n            if (arg_10h == 0) {\n                fcn.00412ed0();\n                arg_10h = *(param_1 + 0x44);\n            }\n            if (param_3 - uVar1 < arg_10h) {\n                arg_10h = param_3 - uVar1;\n            }\n            fcn.0042aaa0(*(param_1 + 0x40) + *(param_1 + 0x30), uVar1 + param_2, arg_10h);\n            *(param_1 + 0x30) = *(param_1 + 0x30) + arg_10h;\n            uVar1 = uVar1 + arg_10h;\n        } while (uVar1 < param_3);\n    }\n    return;\n}\n",
        "token_count": 274
    },
    "004133d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "inject DLL reflectively/5c249d14806d4a4ea88afb4f94553771"
        ],
        "decompiled_code": "\nuint __thiscall fcn.004133d0(int32_t param_1, uint param_2)\n\n{\n    uint32_t uVar1;\n    int32_t *unaff_EDI;\n    int32_t **in_FS_OFFSET;\n    int32_t *piStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack8 = 0x43dc69;\n    piStack12 = *in_FS_OFFSET;\n    uVar1 = *0x45060c ^ &stack0xffffffe8;\n    *in_FS_OFFSET = &piStack12;\n    uStack4 = 0;\n    fcn.00412f10(param_2, *(param_1 + 0x50) == *(param_1 + 0x28), 0, uVar1);\n    (**(**(param_1 + 0x1c) + 4))();\n    *in_FS_OFFSET = unaff_EDI;\n    return param_2;\n}\n",
        "token_count": 211
    },
    "00413dd0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nuint fcn.00413dd0(int32_t param_1)\n\n{\n    uint32_t *puVar1;\n    \n    if ((param_1 != 0) && (puVar1 = *(param_1 + 0x1c),  puVar1 != NULL)) {\n        *(param_1 + 0x14) = 0;\n        *(param_1 + 8) = 0;\n        *(param_1 + 0x18) = 0;\n        *puVar1 = -(puVar1[3] != 0) & 7;\n        fcn.004153d0(*(*(param_1 + 0x1c) + 0x14), param_1, 0);\n        return 0;\n    }\n    return 0xfffffffe;\n}\n",
        "token_count": 174
    },
    "00413e20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00413e20(int32_t param_1)\n\n{\n    int32_t iVar1;\n    \n    if (((param_1 != 0) && (*(param_1 + 0x1c) != 0)) && (*(param_1 + 0x24) != 0)) {\n        iVar1 = *(*(param_1 + 0x1c) + 0x14);\n        if (iVar1 != 0) {\n            fcn.004161f0(iVar1, param_1);\n        }\n        (**(param_1 + 0x24))(*(param_1 + 0x28), *(param_1 + 0x1c));\n        *(param_1 + 0x1c) = 0;\n        return 0;\n    }\n    return 0xfffffffe;\n}\n",
        "token_count": 181
    },
    "00413e70": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "inject DLL reflectively/5c249d14806d4a4ea88afb4f94553771"
        ],
        "decompiled_code": "\nuint fcn.00413e70(int32_t param_1, int32_t param_2, char *param_3, int32_t param_4)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    if (((param_3 == NULL) || (*param_3 != str.1.1.3[0])) || (param_4 != 0x38)) {\n        return 0xfffffffa;\n    }\n    if (param_1 == 0) {\n        return 0xfffffffe;\n    }\n    *(param_1 + 0x18) = 0;\n    if (*(param_1 + 0x20) == 0) {\n        *(param_1 + 0x20) = 0x416370;\n        *(param_1 + 0x28) = 0;\n    }\n    if (*(param_1 + 0x24) == 0) {\n        *(param_1 + 0x24) = 0x416390;\n    }\n    iVar1 = (**(param_1 + 0x20))(*(param_1 + 0x28), 1, 0x18);\n    *(param_1 + 0x1c) = iVar1;\n    if (iVar1 == 0) {\n        return 0xfffffffc;\n    }\n    *(iVar1 + 0x14) = 0;\n    *(*(param_1 + 0x1c) + 0xc) = 0;\n    if (param_2 < 0) {\n        param_2 = -param_2;\n        *(*(param_1 + 0x1c) + 0xc) = 1;\n    }\n    if ((7 < param_2) && (param_2 < 0x10)) {\n        *(*(param_1 + 0x1c) + 0x10) = param_2;\n        uVar2 = fcn.00415450(param_1, ~-(*(*(param_1 + 0x1c) + 0xc) != 0) & 0x416230, 1 << (param_2 & 0x1f));\n        *(*(param_1 + 0x1c) + 0x14) = uVar2;\n        if (*(*(param_1 + 0x1c) + 0x14) == 0) {\n            fcn.00413e20();\n            return 0xfffffffc;\n        }\n        fcn.00413dd0(param_1);\n        return 0;\n    }\n    fcn.00413e20(param_1);\n    return 0xfffffffe;\n}\n",
        "token_count": 580
    },
    "00414750": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t fcn.00414750(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    if (((param_1 != 0) && (iVar1 = *(param_1 + 0x1c),  iVar1 != 0)) &&\n       ((iVar2 = *(iVar1 + 4),  iVar2 == 0x2a || ((iVar2 == 0x71 || (iVar2 == 0x29a)))))) {\n        if (*(iVar1 + 8) != 0) {\n            (**(param_1 + 0x24))(*(param_1 + 0x28), *(iVar1 + 8));\n        }\n        iVar1 = *(*(param_1 + 0x1c) + 0x3c);\n        if (iVar1 != 0) {\n            (**(param_1 + 0x24))(*(param_1 + 0x28), iVar1);\n        }\n        iVar1 = *(*(param_1 + 0x1c) + 0x38);\n        if (iVar1 != 0) {\n            (**(param_1 + 0x24))(*(param_1 + 0x28), iVar1);\n        }\n        iVar1 = *(*(param_1 + 0x1c) + 0x30);\n        if (iVar1 != 0) {\n            (**(param_1 + 0x24))(*(param_1 + 0x28), iVar1);\n        }\n        (**(param_1 + 0x24))(*(param_1 + 0x28), *(param_1 + 0x1c));\n        *(param_1 + 0x1c) = 0;\n        return (iVar2 != 0x71) - 1 & 0xfffffffd;\n    }\n    return 0xfffffffe;\n}\n",
        "token_count": 412
    },
    "00415450": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "inject DLL reflectively/5c249d14806d4a4ea88afb4f94553771"
        ],
        "decompiled_code": "\nuint * fcn.00415450(int32_t param_1, uint param_2, int32_t param_3)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    \n    puVar1 = (**(param_1 + 0x20))(*(param_1 + 0x28), 1, 0x40);\n    if (puVar1 == NULL) {\n        return NULL;\n    }\n    iVar2 = (**(param_1 + 0x20))(*(param_1 + 0x28), 8, 0x5a0);\n    puVar1[9] = iVar2;\n    if (iVar2 == 0) {\n        (**(param_1 + 0x24))(*(param_1 + 0x28), puVar1);\n        return NULL;\n    }\n    iVar2 = (**(param_1 + 0x20))(*(param_1 + 0x28), 1, param_3);\n    puVar1[10] = iVar2;\n    if (iVar2 == 0) {\n        (**(param_1 + 0x24))(*(param_1 + 0x28), puVar1[9]);\n        (**(param_1 + 0x24))(*(param_1 + 0x28), puVar1);\n        return NULL;\n    }\n    puVar1[0xb] = iVar2 + param_3;\n    puVar1[0xe] = param_2;\n    *puVar1 = 0;\n    fcn.004153d0(puVar1, param_1, 0);\n    return puVar1;\n}\n",
        "token_count": 360
    },
    "004161f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.004161f0(int32_t param_1, int32_t param_2)\n\n{\n    fcn.004153d0(param_1, param_2, 0);\n    (**(param_2 + 0x24))(*(param_2 + 0x28), *(param_1 + 0x28));\n    (**(param_2 + 0x24))(*(param_2 + 0x28), *(param_1 + 0x24));\n    (**(param_2 + 0x24))(*(param_2 + 0x28), param_1);\n    return 0;\n}\n",
        "token_count": 139
    },
    "00416410": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00416410(int32_t param_1, uint param_2, uint param_3, int32_t param_4)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = *(param_1 + 0x16b4);\n    if (iVar1 < 0xe) {\n        *(param_1 + 0x16b0) = *(param_1 + 0x16b0) | param_4 << (iVar1 & 0x1f);\n        *(param_1 + 0x16b4) = iVar1 + 3;\n    }\n    else {\n        *(param_1 + 0x16b0) = *(param_1 + 0x16b0) | param_4 << (iVar1 & 0x1f);\n        *(*(param_1 + 8) + *(param_1 + 0x14)) = *(param_1 + 0x16b0);\n        iVar1 = *(param_1 + 0x14) + 1;\n        *(param_1 + 0x14) = iVar1;\n        *(*(param_1 + 8) + iVar1) = *(param_1 + 0x16b1);\n        iVar1 = *(param_1 + 0x16b4);\n        *(param_1 + 0x14) = *(param_1 + 0x14) + 1;\n        *(param_1 + 0x16b4) = iVar1 + -0xd;\n        *(param_1 + 0x16b0) = param_4 >> (0x10U - iVar1 & 0x1f);\n    }\n    fcn.00417e10(param_1, param_2, param_3, 1);\n    return;\n}\n",
        "token_count": 394
    },
    "00417d00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00417d00(int32_t param_1)\n\n{\n    int32_t iVar1;\n    \n    if (*(param_1 + 0x16b4) == 0x10) {\n        *(*(param_1 + 8) + *(param_1 + 0x14)) = *(param_1 + 0x16b0);\n        iVar1 = *(param_1 + 0x14) + 1;\n        *(param_1 + 0x14) = iVar1;\n        *(*(param_1 + 8) + iVar1) = *(param_1 + 0x16b1);\n        *(param_1 + 0x14) = *(param_1 + 0x14) + 1;\n        *(param_1 + 0x16b0) = 0;\n        *(param_1 + 0x16b4) = 0;\n        return;\n    }\n    if (7 < *(param_1 + 0x16b4)) {\n        *(*(param_1 + 8) + *(param_1 + 0x14)) = *(param_1 + 0x16b0);\n        *(param_1 + 0x14) = *(param_1 + 0x14) + 1;\n        *(param_1 + 0x16b0) = *(param_1 + 0x16b1);\n        *(param_1 + 0x16b4) = *(param_1 + 0x16b4) + -8;\n    }\n    return;\n}\n",
        "token_count": 345
    },
    "00417e10": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00417e10(int32_t param_1, uchar *param_2, int32_t param_3, int32_t param_4)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    \n    fcn.00417d90(param_1);\n    *(param_1 + 0x16ac) = 8;\n    if (param_4 != 0) {\n        *(*(param_1 + 0x14) + *(param_1 + 8)) = param_3;\n        iVar2 = *(param_1 + 0x14) + 1;\n        *(param_1 + 0x14) = iVar2;\n        uVar1 = param_3 >> 8;\n        *(iVar2 + *(param_1 + 8)) = uVar1;\n        iVar2 = *(param_1 + 0x14) + 1;\n        *(param_1 + 0x14) = iVar2;\n        *(iVar2 + *(param_1 + 8)) = ~param_3;\n        iVar2 = *(param_1 + 0x14) + 1;\n        *(param_1 + 0x14) = iVar2;\n        *(iVar2 + *(param_1 + 8)) = ~uVar1;\n        *(param_1 + 0x14) = *(param_1 + 0x14) + 1;\n    }\n    if (param_3 != 0) {\n        do {\n            *(*(param_1 + 0x14) + *(param_1 + 8)) = *param_2;\n            param_2 = param_2 + 1;\n            param_3 = param_3 + -1;\n            *(param_1 + 0x14) = *(param_1 + 0x14) + 1;\n        } while (param_3 != 0);\n    }\n    return;\n}\n",
        "token_count": 421
    },
    "00417eb0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "inject DLL reflectively/5c249d14806d4a4ea88afb4f94553771"
        ],
        "decompiled_code": "\nvoid fcn.00417eb0(uchar param_1, uchar param_2, uint param_3, uint param_4, int32_t param_5)\n\n{\n    uint *puVar1;\n    \n    puVar1 = (**(param_5 + 0x20))(*(param_5 + 0x28), 1, 0x1c);\n    if (puVar1 != NULL) {\n        *(puVar1 + 4) = param_1;\n        *(puVar1 + 0x11) = param_2;\n        *puVar1 = 0;\n        puVar1[5] = param_3;\n        puVar1[6] = param_4;\n    }\n    return;\n}\n",
        "token_count": 160
    },
    "004186a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004186a0(uint param_1, int32_t param_2)\n\n{\n    (**(param_2 + 0x24))(*(param_2 + 0x28), param_1);\n    return;\n}\n",
        "token_count": 52
    },
    "00419498": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00419498(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint uVar1;\n    \n    uVar1 = fcn.0042ccd0(arg_8h, arg_ch, arg_10h, arg_14h);\n    fcn.00401000(uVar1);\n    return;\n}\n",
        "token_count": 85
    },
    "00419b5c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "parse PE header/27dc37a2d08e4034aa7bcaa8b888b251"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.00419b5c(void)\n\n{\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.0042cbc6(4);\n    fcn.00403c70(\"comctl32.dll\");\n    *(unaff_EBP + -4) = 0;\n    fcn.00419b0e(unaff_EBP + -0x10);\n    fcn.004011c0();\n    *extraout_ECX = vtable.CComCtlWrapper.0;\n    extraout_ECX[4] = NULL;\n    extraout_ECX[5] = NULL;\n    extraout_ECX[6] = NULL;\n    extraout_ECX[7] = NULL;\n    extraout_ECX[8] = NULL;\n    extraout_ECX[9] = NULL;\n    extraout_ECX[10] = NULL;\n    extraout_ECX[0xb] = NULL;\n    extraout_ECX[0xc] = NULL;\n    extraout_ECX[0xd] = NULL;\n    extraout_ECX[0xe] = NULL;\n    extraout_ECX[0xf] = NULL;\n    extraout_ECX[0x10] = NULL;\n    extraout_ECX[0x11] = NULL;\n    extraout_ECX[0x12] = NULL;\n    extraout_ECX[0x13] = NULL;\n    extraout_ECX[0x14] = NULL;\n    extraout_ECX[0x15] = NULL;\n    extraout_ECX[0x16] = NULL;\n    extraout_ECX[0x17] = NULL;\n    extraout_ECX[0x18] = NULL;\n    extraout_ECX[0x19] = NULL;\n    extraout_ECX[0x1a] = NULL;\n    extraout_ECX[0x1b] = NULL;\n    extraout_ECX[0x1c] = NULL;\n    extraout_ECX[0x1d] = NULL;\n    extraout_ECX[0x1e] = NULL;\n    extraout_ECX[0x1f] = NULL;\n    extraout_ECX[0x20] = NULL;\n    extraout_ECX[0x21] = NULL;\n    extraout_ECX[0x22] = NULL;\n    extraout_ECX[0x23] = NULL;\n    extraout_ECX[0x24] = NULL;\n    extraout_ECX[0x25] = NULL;\n    extraout_ECX[0x26] = NULL;\n    extraout_ECX[0x27] = NULL;\n    extraout_ECX[0x28] = NULL;\n    extraout_ECX[0x29] = NULL;\n    extraout_ECX[0x2a] = NULL;\n    extraout_ECX[0x2b] = NULL;\n    extraout_ECX[0x2c] = NULL;\n    extraout_ECX[0x2d] = NULL;\n    extraout_ECX[0x2e] = NULL;\n    extraout_ECX[0x2f] = NULL;\n    extraout_ECX[0x30] = NULL;\n    extraout_ECX[0x31] = NULL;\n    extraout_ECX[0x32] = NULL;\n    extraout_ECX[0x33] = NULL;\n    extraout_ECX[0x34] = NULL;\n    extraout_ECX[0x35] = NULL;\n    extraout_ECX[0x36] = NULL;\n    extraout_ECX[0x37] = NULL;\n    extraout_ECX[0x38] = NULL;\n    extraout_ECX[0x39] = NULL;\n    extraout_ECX[0x3a] = NULL;\n    extraout_ECX[0x3b] = NULL;\n    extraout_ECX[0x3c] = NULL;\n    extraout_ECX[0x3d] = NULL;\n    extraout_ECX[0x3e] = NULL;\n    extraout_ECX[0x3f] = NULL;\n    extraout_ECX[0x40] = NULL;\n    extraout_ECX[0x41] = NULL;\n    extraout_ECX[0x42] = NULL;\n    extraout_ECX[0x43] = NULL;\n    extraout_ECX[0x44] = NULL;\n    extraout_ECX[0x45] = NULL;\n    extraout_ECX[0x46] = NULL;\n    extraout_ECX[0x47] = NULL;\n    extraout_ECX[0x48] = NULL;\n    extraout_ECX[0x49] = NULL;\n    extraout_ECX[0x4a] = NULL;\n    extraout_ECX[0x4b] = NULL;\n    extraout_ECX[0x4c] = NULL;\n    extraout_ECX[0x4d] = NULL;\n    extraout_ECX[0x4e] = NULL;\n    extraout_ECX[0x4f] = NULL;\n    extraout_ECX[0x50] = NULL;\n    extraout_ECX[0x51] = NULL;\n    extraout_ECX[0x52] = NULL;\n    extraout_ECX[0x53] = NULL;\n    extraout_ECX[0x54] = NULL;\n    extraout_ECX[0x55] = NULL;\n    extraout_ECX[0x56] = NULL;\n    extraout_ECX[0x57] = NULL;\n    extraout_ECX[0x58] = NULL;\n    extraout_ECX[0x59] = NULL;\n    extraout_ECX[0x5a] = NULL;\n    extraout_ECX[0x5b] = NULL;\n    extraout_ECX[0x5c] = NULL;\n    extraout_ECX[0x5d] = NULL;\n    extraout_ECX[0x5e] = NULL;\n    extraout_ECX[0x5f] = NULL;\n    extraout_ECX[0x60] = NULL;\n    extraout_ECX[0x61] = NULL;\n    fcn.0042cc9e();\n    return;\n}\n",
        "token_count": 1391
    },
    "00419d80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "parse PE header/27dc37a2d08e4034aa7bcaa8b888b251"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.00419d80(void)\n\n{\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.0042cbc6(4);\n    fcn.00403c70(\"comdlg32.dll\");\n    *(unaff_EBP + -4) = 0;\n    fcn.00419b0e(unaff_EBP + -0x10);\n    fcn.004011c0();\n    *extraout_ECX = vtable.CCommDlgWrapper.0;\n    extraout_ECX[4] = NULL;\n    extraout_ECX[5] = NULL;\n    extraout_ECX[6] = NULL;\n    extraout_ECX[7] = NULL;\n    extraout_ECX[8] = NULL;\n    extraout_ECX[9] = NULL;\n    extraout_ECX[10] = NULL;\n    extraout_ECX[0xb] = NULL;\n    extraout_ECX[0xc] = NULL;\n    extraout_ECX[0xd] = NULL;\n    extraout_ECX[0xe] = NULL;\n    extraout_ECX[0xf] = NULL;\n    extraout_ECX[0x10] = NULL;\n    extraout_ECX[0x11] = NULL;\n    extraout_ECX[0x12] = NULL;\n    extraout_ECX[0x13] = NULL;\n    extraout_ECX[0x14] = NULL;\n    extraout_ECX[0x15] = NULL;\n    extraout_ECX[0x16] = NULL;\n    extraout_ECX[0x17] = NULL;\n    extraout_ECX[0x18] = NULL;\n    fcn.0042cc9e();\n    return;\n}\n",
        "token_count": 411
    },
    "00419e03": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.00419e03(void)\n\n{\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.0042cbc6(4);\n    fcn.00403c70(\"shell32.dll\");\n    *(unaff_EBP + -4) = 0;\n    fcn.00419b0e(unaff_EBP + -0x10);\n    fcn.004011c0();\n    *extraout_ECX = vtable.CShellWrapper.0;\n    extraout_ECX[4] = NULL;\n    fcn.0042cc9e();\n    return;\n}\n",
        "token_count": 166
    },
    "0041a03d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041a03d(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uStack8;\n    \n    fcn.0041a00a();\n    iVar2 = fcn.00419afa();\n    if (iVar2 == 0) {\n        uStack8 = 0x44fd50;\n        fcn.0042bc38(&uStack8, 0x44a6f4);\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    return;\n}\n",
        "token_count": 124
    },
    "0041a08e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0041a08e(uint arg_8h, uchar *arg_ch, int32_t arg_10h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    ushort *puVar3;\n    \n    if ((arg_ch != NULL) && (arg_10h != 0)) {\n        iVar2 = fcn.0041a00a();\n        puVar3 = fcn.00401180(*(iVar2 + 0xc), arg_8h);\n        if (puVar3 == NULL) {\n            *arg_ch = 0;\n            iVar2 = 0;\n        }\n        else {\n            iVar2 = (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)(0, 0, puVar3 + 1, *puVar3, arg_ch, arg_10h + -1, 0, 0);\n            arg_ch[iVar2] = 0;\n        }\n        return iVar2;\n    }\n    fcn.0041944d();\n    pcVar1 = swi(3);\n    iVar2 = (*pcVar1)();\n    return iVar2;\n}\n",
        "token_count": 248
    },
    "0041a1d3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041a1d3(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    iVar1 = fcn.00419550(&var_4h, arg_8h, arg_ch);\n    if (iVar1 < 0) {\n        fcn.00401090(iVar1);\n    }\n    return var_4h;\n}\n",
        "token_count": 94
    },
    "0041b1d3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041b1d3(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint uVar1;\n    \n    uVar1 = fcn.0042cfbc(arg_8h, arg_ch, arg_10h);\n    fcn.00401000(uVar1);\n    return;\n}\n",
        "token_count": 77
    },
    "0041b692": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041b692(uint arg_8h, uint arg_ch)\n\n{\n    uint arg_8h_00;\n    \n    arg_8h_00 = fcn.004018e0(0x104);\n    fcn.00429510(arg_8h_00, 0, 0x104);\n    fcn.00419498(arg_8h_00, 0x104, arg_8h, 0xffffffff);\n    (*_sym.imp.SHLWAPI.dll_PathStripToRootA)(arg_8h_00);\n    fcn.00401560(0xffffffff);\n    return;\n}\n",
        "token_count": 140
    },
    "0041bbcc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_1ch\n\nvoid __cdecl fcn.0041bbcc(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_24h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.0042cbc6(0x18);\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *extraout_ECX = vtable.CFile.0;\n    fcn.00401840();\n    extraout_ECX[1] = 0xffffffff;\n    *(unaff_EBP + -4) = 0;\n    fcn.0040dad0(0, 0xffffffff, 0);\n    *(unaff_EBP + -4) = 1;\n    iVar1 = fcn.0041b9e2(*(unaff_EBP + 8), *(unaff_EBP + 0xc), unaff_EBP + -0x24);\n    if (iVar1 == 0) {\n        fcn.00424da4(*(unaff_EBP + -0x1c), *(unaff_EBP + -0x18), *(unaff_EBP + -0x14));\n    }\n    *(unaff_EBP + -0x24) = vtable.CFileException.0;\n    fcn.004011c0();\n    fcn.0042cc9e();\n    return;\n}\n",
        "token_count": 437
    },
    "0041bda7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0041bda7(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t *piVar3;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    *(param_1 + 0xa0) = 0;\n    var_4h = 0;\n    var_8h = 0;\n    var_14h = 4;\n    var_ch = 0;\n    piVar2 = 0x44ffd4;\n    var_10h = param_1;\n    iVar1 = *0x44ffd4;\n    while (iVar1 != 0) {\n        iVar1 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExA)(0x80000001, *piVar2, 0, 1, &var_4h);\n        if (iVar1 == 0) {\n            for (piVar3 = piVar2[1]; *piVar3 != 0; piVar3 = piVar3 + 2) {\n                iVar1 = (*_sym.imp.ADVAPI32.dll_RegQueryValueExA)(var_4h, *piVar3, 0, &var_ch, &var_8h, &var_14h);\n                if ((iVar1 == 0) && (var_ch == 4)) {\n                    if (var_8h == 0) {\n                        *(var_10h + 0xa0) = *(var_10h + 0xa0) & ~piVar3[1];\n                    }\n                    else {\n                        *(var_10h + 0xa0) = *(var_10h + 0xa0) | piVar3[1];\n                    }\n                }\n                var_8h = 0;\n                var_14h = 4;\n                var_ch = 0;\n            }\n            (*_sym.imp.ADVAPI32.dll_RegCloseKey)(var_4h);\n            var_4h = 0;\n        }\n        piVar2 = piVar2 + 2;\n        iVar1 = *piVar2;\n    }\n    return 1;\n}\n",
        "token_count": 498
    },
    "0041c79c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.0041c79c(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_21ch;\n    uint var_4h;\n    \n    fcn.0042cc65(0x214);\n    *(unaff_EBP + -0x21c) = extraout_ECX;\n    *extraout_ECX = vtable.CWinApp.0;\n    piVar1 = extraout_ECX[0x16];\n    *(unaff_EBP + -4) = 0;\n    *(unaff_EBP + -4) = 1;\n    if (piVar1 != NULL) {\n        (**(*piVar1 + 4))(1);\n    }\n    if (extraout_ECX[0x22] != NULL) {\n        (**(*extraout_ECX[0x22] + 0x18))(1);\n    }\n    iVar2 = fcn.0041a00a();\n    if (*(iVar2 + 0x14) == '\\0') {\n        if (*0x451f3c != NULL) {\n            (**(**0x451f3c + 4))(1);\n            *0x451f3c = NULL;\n        }\n        if (*0x451f38 != NULL) {\n            (**(**0x451f38 + 4))(1);\n            *0x451f38 = NULL;\n        }\n    }\n    if (extraout_ECX[0x1c] != NULL) {\n        fcn.00426bdd(extraout_ECX[0x1c]);\n    }\n    if (extraout_ECX[0x1d] != NULL) {\n        fcn.00426bdd(extraout_ECX[0x1d]);\n    }\n    if (*(extraout_ECX + 0x24) != 0) {\n        (*_sym.imp.KERNEL32.dll_GlobalDeleteAtom)(*(extraout_ECX + 0x24));\n    }\n    if (*(extraout_ECX + 0x92) != 0) {\n        (*_sym.imp.KERNEL32.dll_GlobalDeleteAtom)(*(extraout_ECX + 0x92));\n    }\n    if (extraout_ECX[0x23] != NULL) {\n        (**(*extraout_ECX[0x23] + 4))(1);\n    }\n    iVar2 = fcn.0041a00a();\n    if (*(iVar2 + 0x10) == extraout_ECX[0x14]) {\n        *(iVar2 + 0x10) = 0;\n    }\n    if (*(iVar2 + 4) == extraout_ECX) {\n        *(iVar2 + 4) = 0;\n    }\n    fcn.0042b954(extraout_ECX[0x14]);\n    fcn.0042b954(extraout_ECX[0x15]);\n    fcn.0042b954(extraout_ECX[0x18]);\n    fcn.0042b954(extraout_ECX[0x19]);\n    fcn.0042b954(extraout_ECX[0x1a]);\n    extraout_ECX[0xb] = NULL;\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.0041dd2c();\n    fcn.0042ccc1();\n    return;\n}\n",
        "token_count": 751
    },
    "0041caa8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041caa8(code *arg_8h, code *arg_ch)\n\n{\n    code **in_ECX;\n    \n    fcn.0041fec0();\n    *in_ECX = vtable.CDialog.0;\n    fcn.00429510(in_ECX + 0x15, 0, 0x20);\n    in_ECX[0x1a] = arg_ch;\n    in_ECX[0x15] = arg_8h;\n    in_ECX[0x16] = arg_8h & 0xffff;\n    return;\n}\n",
        "token_count": 130
    },
    "0041cfa0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: hMem\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0041cfa0(uint arg_8h, uint arg_ch, uint hInstance)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t *arg_8h_00;\n    int32_t unaff_EBP;\n    uint var_48h;\n    uint var_38h;\n    uint var_28h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint hMem;\n    uint var_4h;\n    \n    fcn.0042cbf9(0x3c);\n    *(unaff_EBP + -0x20) = arg_8h_00;\n    if (*(unaff_EBP + 0x10) == 0) {\n        iVar2 = fcn.0041a00a();\n        *(unaff_EBP + 0x10) = *(iVar2 + 0xc);\n    }\n    iVar2 = fcn.0041a00a();\n    piVar1 = *(iVar2 + 0x3c);\n    *(unaff_EBP + -0x28) = piVar1;\n    *(unaff_EBP + -0x14) = 0;\n    *(unaff_EBP + -4) = 0;\n    fcn.00423bc6(0x10);\n    fcn.00423bc6(0x3c000);\n    if (piVar1 == NULL) {\n        iVar2 = *(unaff_EBP + 8);\n    }\n    else {\n        iVar2 = (**(*arg_8h_00 + 0x134))(unaff_EBP + -0x48);\n        if (iVar2 == 0) goto code_r0x0041d14e;\n        iVar2 = (**(*piVar1 + 0x14))(unaff_EBP + -0x48, *(unaff_EBP + 8));\n    }\n    if (iVar2 != 0) {\n        fcn.00401840();\n        *(unaff_EBP + -4) = 1;\n        *(unaff_EBP + -0x18) = 0;\n        iVar3 = fcn.004272a6(iVar2, unaff_EBP + -0x1c, unaff_EBP + -0x18);\n        if (iVar3 == 0) {\n            fcn.0042726a(iVar2);\n            *(unaff_EBP + -4) = 2;\n            fcn.004271c6(*(unaff_EBP + -0x18));\n            uVar4 = fcn.00426ed3();\n            *(unaff_EBP + -0x14) = uVar4;\n            *(unaff_EBP + -4) = 1;\n            fcn.00426ec5();\n            if (*(unaff_EBP + -0x14) != 0) {\n                iVar2 = (*_sym.imp.KERNEL32.dll_GlobalLock)(*(unaff_EBP + -0x14));\n            }\n        }\n        arg_8h_00[0x11] = -1;\n        arg_8h_00[0xf] = arg_8h_00[0xf] | 0x10;\n        fcn.00422cc5(arg_8h_00);\n        if (*(unaff_EBP + 0xc) == 0) {\n            uVar4 = 0;\n        }\n        else {\n            uVar4 = *(*(unaff_EBP + 0xc) + 0x20);\n        }\n        iVar2 = (*_sym.imp.USER32.dll_CreateDialogIndirectParamA)(*(unaff_EBP + 0x10), iVar2, uVar4, fcn.0041c9da, 0);\n        fcn.004011c0();\n        *(unaff_EBP + -4) = 0xffffffff;\n        if ((*(unaff_EBP + -0x28) != NULL) && (iVar2 != 0)) {\n            (**(**(unaff_EBP + -0x28) + 0x18))(unaff_EBP + -0x48);\n            (**(*arg_8h_00 + 0x134))(0);\n        }\n        iVar3 = fcn.0042128d();\n        if (iVar3 == 0) {\n            (**(*arg_8h_00 + 0x11c))();\n        }\n        if ((iVar2 != 0) && ((*(arg_8h_00 + 0xf) & 0x10) == 0)) {\n            (*_sym.imp.USER32.dll_DestroyWindow)(iVar2);\n        }\n        if (*(unaff_EBP + -0x14) != 0) {\n            (*_sym.imp.KERNEL32.dll_GlobalUnlock)(*(unaff_EBP + -0x14));\n            (*_sym.imp.KERNEL32.dll_GlobalFree)(*(unaff_EBP + -0x14));\n        }\n    }\ncode_r0x0041d14e:\n    fcn.0042cc9e();\n    return;\n}\n",
        "token_count": 1197
    },
    "0041d4b6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041d4b6(uint arg_8h, uint arg_ch)\n\n{\n    uint *puVar1;\n    \n    puVar1 = fcn.00426226(arg_8h);\n    *puVar1 = arg_ch;\n    return;\n}\n",
        "token_count": 61
    },
    "0041d5e9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool __cdecl fcn.0041d5e9(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0042d146(arg_8h, arg_ch, 0x10);\n    return iVar1 == 0;\n}\n",
        "token_count": 65
    },
    "0041d605": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __cdecl\nfcn.0041d605(int32_t arg_8h, uint *arg_ch, uint noname_2, code *arg_14h, uint *arg_18h, int32_t arg_1ch, \n            int32_t *arg_20h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t extraout_ECX;\n    uint unaff_EBX;\n    uint uVar3;\n    uint *unaff_ESI;\n    uint *puVar4;\n    \n    uVar3 = unaff_EBX;\n    puVar4 = unaff_ESI;\n    if (arg_8h != 0) goto code_r0x0041d616;\ncode_r0x0041d611:\n    fcn.0041944d();\n    arg_8h = extraout_ECX;\n    uVar3 = unaff_EBX;\n    puVar4 = unaff_ESI;\ncode_r0x0041d616:\n    unaff_EBX = 1;\n    if (arg_20h != NULL) {\n        *arg_20h = arg_8h;\n        arg_20h[1] = arg_14h;\n        return 1;\n    }\n    if (0xb < arg_1ch - 0x39U) {\n        return 0;\n    }\n    // switch table (12 cases) at 0x41d70d\n    unaff_ESI = puVar4;\n    switch(*((arg_1ch - 0x39U) * 4 + 0x41d70d)) {\n    case 0x41d647:\n        (*arg_14h)();\n        return 1;\n    case 0x41d64f:\n        uVar2 = (*arg_14h)();\n        return uVar2;\n    case 0x41d657:\n        arg_18h = arg_ch;\n        break;\n    case 0x41d662:\n        arg_18h = arg_ch;\n        goto code_r0x0041d6fb;\n    case 0x41d66a:\n        if (arg_18h != NULL) {\n            (*arg_14h)(arg_18h[1], *arg_18h);\n            return 1;\n        }\n        goto code_r0x0041d611;\n    case 0x41d67e:\n        if (arg_18h != NULL) {\n            uVar2 = (*arg_14h)(arg_18h[1], *arg_18h);\n            return uVar2;\n        }\n        goto code_r0x0041d611;\n    case 0x41d68f:\n        if (arg_18h != NULL) {\n            (*arg_14h)(arg_ch, arg_18h[1], *arg_18h);\n            return 1;\n        }\n        goto code_r0x0041d611;\n    case 0x41d6a7:\n        if (arg_18h != NULL) {\n            uVar2 = (*arg_14h)(arg_ch, arg_18h[1], *arg_18h);\n            return uVar2;\n        }\n        goto code_r0x0041d611;\n    case 0x41d6bf:\n        unaff_ESI = arg_18h;\n        if (arg_18h != NULL) {\n            (*arg_14h)(arg_18h);\n            goto code_r0x0041d6ce;\n        }\n        goto code_r0x0041d611;\n    case 0x41d6dc:\n        goto code_r0x0041d6dc;\n    case 0x41d6f0:\n        break;\n    case 0x41d6f8:\ncode_r0x0041d6fb:\n        uVar2 = (*arg_14h)(arg_18h);\n        return uVar2;\n    }\n    (*arg_14h)(arg_18h);\n    return 1;\ncode_r0x0041d6dc:\n    unaff_ESI = arg_18h;\n    if (arg_18h != NULL) {\n        (*arg_14h)(arg_18h, arg_ch, puVar4, uVar3);\ncode_r0x0041d6ce:\n        iVar1 = arg_18h[7];\n        arg_18h[7] = 0;\n        return iVar1 == 0;\n    }\n    goto code_r0x0041d611;\n}\n",
        "token_count": 980
    },
    "0041dcf3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041dcf3(int32_t param_1)\n\n{\n    int32_t iVar1;\n    \n    *(param_1 + 0x20) = 0;\n    *(param_1 + 0x24) = 0;\n    *(param_1 + 0x2c) = 0;\n    *(param_1 + 0x30) = 0;\n    iVar1 = fcn.00419a3e();\n    *(iVar1 + 0x34) = 0;\n    *(iVar1 + 0x54) = 0;\n    (*_sym.imp.USER32.dll_GetCursorPos)(iVar1 + 0x4c);\n    *(param_1 + 0x40) = 0;\n    *(param_1 + 0x3c) = 0;\n    *(param_1 + 0x28) = 1;\n    return;\n}\n",
        "token_count": 201
    },
    "0041de1f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041de1f(int32_t arg_8h)\n\n{\n    code **ppcVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    int32_t *in_ECX;\n    uint arg_14h;\n    uint var_4h;\n    \n    ppcVar1 = (**(*in_ECX + 0x28))();\n    pcVar3 = *ppcVar1;\n    do {\n        if (pcVar3 == NULL) {\n            return 0;\n        }\n        arg_14h = 0;\n        if (*(arg_8h + 4) < 0xc000) {\n            iVar2 = fcn.0041f6bd(ppcVar1[1], *(arg_8h + 4), 0, 0);\n            if (iVar2 != 0) {\ncode_r0x0041de59:\n                (**(iVar2 + 0x14))(*(arg_8h + 8), *(arg_8h + 0xc));\n                return 1;\n            }\n        }\n        else {\n            pcVar3 = ppcVar1[1];\n            while (iVar2 = fcn.0041f6bd(pcVar3, 0xc000, 0, arg_14h),  iVar2 != 0) {\n                if (**(iVar2 + 0x10) == *(arg_8h + 4)) goto code_r0x0041de59;\n                pcVar3 = iVar2 + 0x18;\n            }\n        }\n        ppcVar1 = (**ppcVar1)();\n        pcVar3 = *ppcVar1;\n    } while( true );\n}\n",
        "token_count": 368
    },
    "0041e840": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041e840(uint32_t arg_8h)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    int32_t *in_ECX;\n    int32_t extraout_ECX;\n    \n    iVar2 = in_ECX[0x22];\n    if (iVar2 != 0) goto code_r0x0041e858;\n    do {\n        fcn.0041944d();\n        iVar2 = extraout_ECX;\ncode_r0x0041e858:\n    } while ((arg_8h < 0xe110) || (*(iVar2 + 4) + 0xe110U <= arg_8h));\n    puVar1 = fcn.0041e80d(arg_8h - 0xe110);\n    iVar2 = (**(*in_ECX + 0x88))(*puVar1);\n    if (iVar2 == 0) {\n        (***in_ECX[0x22])(arg_8h - 0xe110);\n    }\n    return 1;\n}\n",
        "token_count": 230
    },
    "0041eb8d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041eb8d(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0041a00a();\n    if (*(iVar1 + 4) != NULL) {\n    // WARNING: Could not recover jumptable at 0x0041eba3. Too many branches\n    // WARNING: Treating indirect jump as call\n        (**(**(iVar1 + 4) + 0x98))();\n        return;\n    }\n    fcn.0041ea2c(0, arg_8h, arg_ch, arg_10h);\n    return;\n}\n",
        "token_count": 148
    },
    "0041ee39": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041ee39(int32_t arg_8h, uint32_t *arg_ch)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint32_t uVar4;\n    uint32_t pvParam;\n    uint32_t uStack16;\n    uint32_t uStack12;\n    uint32_t uStack8;\n    \n    iVar2 = fcn.0041ec84();\n    if (iVar2 == 0) {\n        if ((((arg_8h == 0x12340042) && (arg_ch != NULL)) && (0x27 < *arg_ch)) &&\n           (iVar2 = (*_sym.imp.USER32.dll_SystemParametersInfoA)(0x30, 0, &pvParam, 0),  iVar2 != 0)) {\n            arg_ch[1] = 0;\n            arg_ch[2] = 0;\n            pcVar1 = _sym.imp.USER32.dll_GetSystemMetrics;\n            uVar4 = (*_sym.imp.USER32.dll_GetSystemMetrics)(0);\n            arg_ch[3] = uVar4;\n            uVar4 = (*pcVar1)(1);\n            arg_ch[5] = pvParam;\n            arg_ch[6] = uStack16;\n            arg_ch[7] = uStack12;\n            arg_ch[8] = uStack8;\n            uVar3 = 1;\n            arg_ch[4] = uVar4;\n            arg_ch[9] = 1;\n            if (0x47 < *arg_ch) {\n                fcn.0042c05d(arg_ch + 10, 0x20, \"DISPLAY\", 0x1f);\n            }\n        }\n        else {\n            uVar3 = 0;\n        }\n    }\n    else {\n        uVar3 = (**0x453770)(arg_8h, arg_ch);\n    }\n    return uVar3;\n}\n",
        "token_count": 420
    },
    "00420b46": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00420b46(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t *extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_18h;\n    uint var_14h;\n    uint var_4h;\n    \n    fcn.0042cbf9(0x24);\n    *(unaff_EBP + -0x2c) = *(unaff_EBP + 8);\n    *(unaff_EBP + -0x28) = extraout_ECX;\n    *(unaff_EBP + -0x24) = 0;\n    iVar1 = fcn.00419a3e();\n    *(unaff_EBP + -0x18) = iVar1;\n    *(unaff_EBP + -0x14) = *(iVar1 + 0xdc);\n    *(iVar1 + 0xdc) = extraout_ECX[8];\n    iVar1 = *extraout_ECX;\n    *(unaff_EBP + 8) = 0;\n    *(unaff_EBP + -4) = 0;\n    (**(iVar1 + 0xfc))(unaff_EBP + -0x2c);\n    *(unaff_EBP + 8) = 1;\n    *(*(unaff_EBP + -0x18) + 0xdc) = *(unaff_EBP + -0x14);\n    fcn.0042cc9e();\n    return;\n}\n",
        "token_count": 358
    },
    "00420bd1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00420bd1(int32_t arg_8h)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    int32_t in_ECX;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint var_60h;\n    uint lprcSrc;\n    int32_t var_38h;\n    int32_t var_34h;\n    int32_t var_30h;\n    int32_t var_2ch;\n    int32_t lpPoints;\n    int32_t var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t lprcDst;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = fcn.0041afdc();\n    if (arg_8h == 0) {\n        if ((var_4h & 0x40000000) == 0) {\n            iVar5 = (*_sym.imp.USER32.dll_GetWindow)(*(in_ECX + 0x20), 4);\n        }\n        else {\n            iVar5 = (*_sym.imp.USER32.dll_GetParent)(*(in_ECX + 0x20));\n        }\n        if (iVar5 != 0) {\n            iVar4 = (*_sym.imp.USER32.dll_SendMessageA)(iVar5, 0x36b, 0, 0);\n            if (iVar4 != 0) {\n                iVar5 = iVar4;\n            }\n        }\n    }\n    else {\n        iVar5 = *(arg_8h + 0x20);\n    }\n    pcVar1 = _sym.imp.USER32.dll_GetWindowRect;\n    (*_sym.imp.USER32.dll_GetWindowRect)(*(in_ECX + 0x20), &var_38h);\n    if ((var_4h & 0x40000000) == 0) {\n        if (iVar5 != 0) {\n            uVar2 = (*_sym.imp.USER32.dll_GetWindowLongA)(iVar5, 0xfffffff0);\n            if (((uVar2 & 0x10000000) == 0) || ((uVar2 & 0x20000000) != 0)) {\n                iVar5 = 0;\n            }\n        }\n        if (iVar5 == 0) {\n            iVar5 = fcn.0041c10b();\n            if (iVar5 != 0) {\n                iVar5 = *(iVar5 + 0x20);\n            }\n            uVar3 = fcn.0041edcc(iVar5, 1);\n            fcn.0041ee39(uVar3, iVar5);\n            pcVar1 = _sym.imp.USER32.dll_CopyRect;\n            (*_sym.imp.USER32.dll_CopyRect)(&lpPoints, &lprcSrc);\n            (*pcVar1)(&lprcDst, &lprcSrc);\n        }\n        else {\n            (*pcVar1)(iVar5, &lpPoints);\n            uVar3 = fcn.0041edcc(iVar5, 2);\n            fcn.0041ee39(uVar3, iVar5);\n            (*_sym.imp.USER32.dll_CopyRect)(&lprcDst, &lprcSrc);\n        }\n    }\n    else {\n        uVar3 = (*_sym.imp.USER32.dll_GetParent)(*(in_ECX + 0x20));\n        pcVar1 = _sym.imp.USER32.dll_GetClientRect;\n        (*_sym.imp.USER32.dll_GetClientRect)(uVar3, &lprcDst);\n        (*pcVar1)(iVar5, &lpPoints);\n        (*_sym.imp.USER32.dll_MapWindowPoints)(iVar5, uVar3, &lpPoints, 2);\n    }\n    iVar5 = (lpPoints + var_20h) / 2 - (var_30h - var_38h) / 2;\n    iVar4 = (var_24h + var_1ch) / 2 - (var_2ch - var_34h) / 2;\n    if (var_10h < (var_30h - var_38h) + iVar5) {\n        iVar5 = (var_38h - var_30h) + var_10h;\n    }\n    if (iVar5 < lprcDst) {\n        iVar5 = lprcDst;\n    }\n    if (var_ch < (var_2ch - var_34h) + iVar4) {\n        iVar4 = (var_34h - var_2ch) + var_ch;\n    }\n    if (iVar4 < var_14h) {\n        iVar4 = var_14h;\n    }\n    fcn.0041b151(0, iVar5, iVar4, 0xffffffff, 0xffffffff, 0x15);\n    return;\n}\n",
        "token_count": 1085
    },
    "00421200": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00421200(void)\n\n{\n    int32_t iVar1;\n    int32_t extraout_ECX;\n    uint *puVar2;\n    uint32_t unaff_retaddr;\n    uint uVar3;\n    \n    uVar3 = 0;\n    iVar1 = fcn.00421160(0);\n    if (iVar1 == 0) {\n        return 0;\n    }\n    iVar1 = iVar1 + 0x1c;\n    if (iVar1 == 0) {\n        fcn.0041944d(uVar3);\n        iVar1 = extraout_ECX;\n    }\n    if (*(iVar1 + 4) != 0) {\n        for (puVar2 = *(*(iVar1 + 4) + ((unaff_retaddr >> 4) % *(iVar1 + 8)) * 4); puVar2 != NULL; puVar2 = *puVar2) {\n            if (puVar2[1] == unaff_retaddr) {\n                return puVar2[2];\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 237
    },
    "00424a58": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00424a58(uint32_t arg_8h)\n\n{\n    int32_t iVar1;\n    \n    if (0x10b < arg_8h) {\n        if (arg_8h == 0x3e3) {\n            return 10;\n        }\n        if (arg_8h == 0x3e4) {\n            return 10;\n        }\n        if (arg_8h == 0x3e5) {\n            return 10;\n        }\n        if (arg_8h != 999) {\n            return 1;\n        }\n        return 5;\n    }\n    if (arg_8h == 0x10b) {\n        return 3;\n    }\n    if (arg_8h < 0x3f) {\n        if (arg_8h == 0x3e) {\n            return 8;\n        }\n        if (arg_8h < 0x1a) {\n            if (arg_8h == 0x19) {\n                return 9;\n            }\n            if (arg_8h < 0x19) {\n    // switch table (25 cases) at 0x424c68\n                switch(*(arg_8h * 4 + 0x424c68)) {\n                case 0x424a99:\n                    return 0;\n                case 0x424aa0:\n                    return 2;\n                case 0x424aa7:\n                    return 4;\n                case 0x424aae:\n                    return 7;\n                case 0x424ade:\n                    return 9;\n                case 0x424b64:\n                    return 3;\n                case 0x424b8d:\n                    return 10;\n                case 0x424bc9:\n                    return 6;\n                case 0x424c1c:\n                    return 5;\n                case 0x424c5e:\n                    return 1;\n                }\n            }\n            return 1;\n        }\n        if (0x27 < arg_8h) {\n            if (8 < arg_8h - 0x34) {\n                return 1;\n            }\n    // switch table (9 cases) at 0x424ccc\n            switch(*((arg_8h - 0x34) * 4 + 0x424ccc)) {\n            case 0x424b64:\n                return 3;\n            case 0x424b8d:\n                return 10;\n            case 0x424bc9:\n                return 6;\n            case 0x424c1c:\n                return 5;\n            case 0x424c5e:\n                return 1;\n            }\n        }\n        if (arg_8h == 0x27) {\n            return 0xd;\n        }\n        if (0x20 < arg_8h) {\n            if (arg_8h == 0x21) {\n                return 0xc;\n            }\n            if (arg_8h == 0x22) {\n                return 3;\n            }\n            if (arg_8h == 0x24) {\n                return 4;\n            }\n            if (arg_8h != 0x26) {\n                return 1;\n            }\n            return 0xe;\n        }\n        if (arg_8h == 0x20) {\n            return 0xb;\n        }\n        if (arg_8h == 0x1a) {\n            return 6;\n        }\n        if (arg_8h == 0x1b) {\n            return 9;\n        }\n        iVar1 = arg_8h - 0x1d;\n        if (iVar1 == 0) {\n            return 5;\n        }\ncode_r0x00424ad7:\n        if (iVar1 == 1) {\n            return 9;\n        }\n    }\n    else {\n        if (arg_8h < 0x6c) {\n            if (arg_8h == 0x6b) {\n                return 2;\n            }\n            if (0x47 < arg_8h) {\n                if (arg_8h == 0x50) {\n                    return 5;\n                }\n                if (arg_8h == 0x52) {\n                    return 5;\n                }\n                if (arg_8h == 0x55) {\n                    return 3;\n                }\n                if (arg_8h == 0x56) {\n                    return 5;\n                }\n                if (arg_8h != 0x58) {\n                    return 1;\n                }\n                return 10;\n            }\n            if (arg_8h == 0x47) {\n                return 5;\n            }\n            if (arg_8h == 0x40) {\n                return 5;\n            }\n            if (arg_8h == 0x41) {\n                return 5;\n            }\n            if (arg_8h == 0x42) {\n                return 6;\n            }\n            if (arg_8h == 0x43) {\n                return 3;\n            }\n            iVar1 = arg_8h - 0x44;\n            if (iVar1 == 0) {\n                return 4;\n            }\n        }\n        else {\n            if (arg_8h < 0x91) {\n                if (arg_8h == 0x90) {\n                    return 3;\n                }\n                if (arg_8h < 0x76) {\n                    if (arg_8h == 0x75) {\n                        return 10;\n                    }\n                    if (arg_8h == 0x6c) {\n                        return 0xc;\n                    }\n                    if (arg_8h == 0x6f) {\n                        return 3;\n                    }\n                    if (arg_8h != 0x70) {\n                        if (arg_8h == 0x71) {\n                            return 4;\n                        }\n                        if (arg_8h == 0x72) {\n                            return 6;\n                        }\n                        return 1;\n                    }\n                    return 0xd;\n                }\n                if (arg_8h == 0x7b) {\n                    return 3;\n                }\n                if (arg_8h == 0x7c) {\n                    return 3;\n                }\n                if (arg_8h == 0x7d) {\n                    return 3;\n                }\n                iVar1 = arg_8h - 0x83;\n                if (iVar1 == 0) {\n                    return 9;\n                }\n                goto code_r0x00424ad7;\n            }\n            if (arg_8h < 0xb7) {\n                if (arg_8h == 0xb6) {\n                    return 6;\n                }\n                if (arg_8h == 0x91) {\n                    return 7;\n                }\n                if (arg_8h == 0x9a) {\n                    return 3;\n                }\n                if (arg_8h == 0xa1) {\n                    return 3;\n                }\n                if (arg_8h == 0xa7) {\n                    return 0xc;\n                }\n                if (arg_8h != 0xaa) {\n                    return 1;\n                }\n                return 5;\n            }\n            if (arg_8h == 0xb7) {\n                return 5;\n            }\n            if (arg_8h == 0xbf) {\n                return 6;\n            }\n            if (arg_8h == 0xc1) {\n                return 6;\n            }\n            iVar1 = arg_8h - 0xce;\n            if (iVar1 == 0) {\n                return 3;\n            }\n        }\n        if (iVar1 == 2) {\n            return 3;\n        }\n    }\n    return 1;\n}\n",
        "token_count": 1710
    },
    "00425820": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: lpCriticalSection\n\nvoid __cdecl fcn.00425820(uint arg_8h, uint arg_ch)\n\n{\n    code **arg_8h_00;\n    uint uVar1;\n    code *pcVar2;\n    uint *extraout_ECX;\n    int32_t iVar3;\n    int32_t unaff_EBP;\n    uint var_18h;\n    uint lpCriticalSection;\n    uint uVar4;\n    uint *puVar5;\n    uint var_4h;\n    \n    fcn.0042cbf9(0x10);\n    *(unaff_EBP + -0x18) = extraout_ECX;\n    puVar5 = extraout_ECX + 7;\n    *(unaff_EBP + -0x14) = puVar5;\n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(puVar5);\n    if ((*(unaff_EBP + 8) < 1) || (extraout_ECX[3] <= *(unaff_EBP + 8))) goto code_r0x00425947;\n    arg_8h_00 = (*_sym.imp.KERNEL32.dll_TlsGetValue)(*extraout_ECX);\n    if (arg_8h_00 == NULL) {\n        *(unaff_EBP + -4) = 0;\n        arg_8h_00 = fcn.004254a0(0x10);\n        if (arg_8h_00 == NULL) {\n            arg_8h_00 = NULL;\n        }\n        else {\n            *arg_8h_00 = vtable.CThreadData.0;\n        }\n        *(unaff_EBP + -4) = 0xffffffff;\n        arg_8h_00[2] = NULL;\n        arg_8h_00[3] = NULL;\n        fcn.004255d2(arg_8h_00);\ncode_r0x00425877:\n        if (arg_8h_00[3] == NULL) {\n            uVar1 = fcn.0041a1d3(extraout_ECX[3], 4);\n            pcVar2 = (*_sym.imp.KERNEL32.dll_LocalAlloc)(0, uVar1);\n        }\n        else {\n            uVar4 = 2;\n            uVar1 = fcn.0041a1d3(extraout_ECX[3], 4);\n            pcVar2 = (*_sym.imp.KERNEL32.dll_LocalReAlloc)(arg_8h_00[3], uVar1, uVar4);\n        }\n        if (pcVar2 == NULL) {\n            (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(*(unaff_EBP + -0x14));\n            pcVar2 = fcn.00419415();\n        }\n        arg_8h_00[3] = pcVar2;\n        fcn.00429510(pcVar2 + arg_8h_00[2] * 4, 0, (extraout_ECX[3] - arg_8h_00[2]) * 4);\n        arg_8h_00[2] = extraout_ECX[3];\n        (*_sym.imp.KERNEL32.dll_TlsSetValue)(*extraout_ECX, arg_8h_00);\n        iVar3 = *(unaff_EBP + 8);\n    }\n    else {\n        iVar3 = *(unaff_EBP + 8);\n        if ((arg_8h_00[2] <= iVar3) && (*(unaff_EBP + 0xc) != 0)) goto code_r0x00425877;\n    }\n    if ((arg_8h_00[3] != NULL) && (iVar3 < arg_8h_00[2])) {\n        *(arg_8h_00[3] + iVar3 * 4) = *(unaff_EBP + 0xc);\n    }\n    puVar5 = *(unaff_EBP + -0x14);\ncode_r0x00425947:\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(puVar5);\n    fcn.0042cc9e();\n    return;\n}\n",
        "token_count": 931
    },
    "00426226": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.00426226(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    int32_t in_ECX;\n    uint var_4h;\n    \n    iVar1 = arg_8h;\n    puVar2 = fcn.00426024(arg_8h, &arg_8h, &var_4h);\n    if (puVar2 == NULL) {\n        if (*(in_ECX + 4) == 0) {\n            fcn.00425f7b(*(in_ECX + 8), 1);\n        }\n        puVar2 = fcn.004261d6();\n        puVar2[1] = iVar1;\n        *puVar2 = *(arg_8h * 4 + *(in_ECX + 4));\n        *(arg_8h * 4 + *(in_ECX + 4)) = puVar2;\n    }\n    return puVar2 + 2;\n}\n",
        "token_count": 216
    },
    "00426398": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: lpClassName\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.00426398(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t unaff_EBP;\n    uint var_18h;\n    uint var_14h;\n    uint lpClassName;\n    uint var_4h;\n    \n    fcn.0042cbc6(0xc);\n    fcn.0041a00a();\n    fcn.00426527(1);\n    *(unaff_EBP + -0x14) = 0;\n    fcn.004262e3(unaff_EBP + -0x10, 0x445030, unaff_EBP + -0x14);\n    *(unaff_EBP + -4) = 0;\n    while (*(*(unaff_EBP + -0x10) + -0xc) != 0) {\n        iVar1 = fcn.0041a00a();\n        (*_sym.imp.USER32.dll_UnregisterClassA)(*(unaff_EBP + -0x10), *(iVar1 + 8));\n        uVar2 = fcn.004262e3(unaff_EBP + -0x18, 0x445030, unaff_EBP + -0x14);\n        *(unaff_EBP + -4) = 1;\n        fcn.00402100(uVar2);\n        *(unaff_EBP + -4) = 0;\n        fcn.004011c0();\n    }\n    fcn.00401600();\n    fcn.00426599(1);\n    fcn.004011c0();\n    fcn.0042cc9e();\n    return;\n}\n",
        "token_count": 415
    },
    "00426599": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00426599(uint32_t arg_8h)\n\n{\n    if (0x10 < arg_8h) {\n        arg_8h = fcn.0041944d();\n    }\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(arg_8h * 0x18 + 0x453ac0);\n    return;\n}\n",
        "token_count": 82
    },
    "00426702": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __cdecl fcn.00426702(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    int32_t unaff_EBP;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.0042cbc6(4);\n    fcn.00401840();\n    *(unaff_EBP + -4) = 0;\n    iVar1 = fcn.00401fd0(*(unaff_EBP + 0xc));\n    if (iVar1 != 0) {\n        fcn.004265be(*(unaff_EBP + 8), *(unaff_EBP + -0x10), *(unaff_EBP + 0x10), *(unaff_EBP + 0x14));\n    }\n    fcn.004011c0();\n    fcn.0042cc9e();\n    return;\n}\n",
        "token_count": 234
    },
    "00426b1e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00426b1e(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint unaff_EBX;\n    uchar lpString1;\n    uint var_103h;\n    uint32_t var_4h;\n    \n    var_4h = *0x45060c ^ &stack0xfffffffc;\n    if (arg_8h != 0) goto code_r0x00426b45;\n    do {\n        fcn.0041944d();\ncode_r0x00426b45:\n    } while (arg_ch == 0);\n    uVar1 = (*_sym.imp.KERNEL32.dll_lstrlenA)(arg_ch);\n    lpString1 = 0;\n    fcn.00429510(&var_103h, 0, 0xff);\n    if (uVar1 < 0x101) {\n        uVar2 = (*_sym.imp.USER32.dll_GetWindowTextA)(arg_8h, &lpString1, 0x100);\n        if (uVar2 == uVar1) {\n            iVar3 = (*_sym.imp.KERNEL32.dll_lstrcmpA)(&lpString1, arg_ch);\n            if (iVar3 == 0) goto code_r0x00426ba5;\n        }\n    }\n    (*_sym.imp.USER32.dll_SetWindowTextA)(arg_8h, arg_ch);\ncode_r0x00426ba5:\n    fcn.004294b3(unaff_EBX);\n    return;\n}\n",
        "token_count": 348
    },
    "00426d34": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00426d34(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0041a00a();\n    (*_sym.imp.KERNEL32.dll_InterlockedIncrement)(iVar1 + 0x2c);\n    return;\n}\n",
        "token_count": 59
    },
    "00426eed": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00426eed(int32_t arg_8h)\n\n{\n    int16_t iVar1;\n    int16_t *piVar2;\n    \n    if (*(arg_8h + 2) == -1) {\n        piVar2 = arg_8h + 0x1a;\n    }\n    else {\n        piVar2 = arg_8h + 0x12;\n    }\n    if (*piVar2 == -1) {\n        piVar2 = piVar2 + 2;\n    }\n    else {\n        do {\n            iVar1 = *piVar2;\n            piVar2 = piVar2 + 1;\n        } while (iVar1 != 0);\n    }\n    if (*piVar2 == -1) {\n        piVar2 = piVar2 + 2;\n    }\n    else {\n        do {\n            iVar1 = *piVar2;\n            piVar2 = piVar2 + 1;\n        } while (iVar1 != 0);\n    }\n    do {\n        iVar1 = *piVar2;\n        piVar2 = piVar2 + 1;\n    } while (iVar1 != 0);\n    return;\n}\n",
        "token_count": 256
    },
    "004276e2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.004276e2(void)\n\n{\n    int32_t iVar1;\n    int32_t extraout_ECX;\n    uint *puVar2;\n    uint32_t unaff_retaddr;\n    uint uVar3;\n    \n    uVar3 = 0;\n    iVar1 = fcn.0042765a(0);\n    if (iVar1 == 0) {\n        return 0;\n    }\n    iVar1 = iVar1 + 0x1c;\n    if (iVar1 == 0) {\n        fcn.0041944d(uVar3);\n        iVar1 = extraout_ECX;\n    }\n    if (*(iVar1 + 4) != 0) {\n        for (puVar2 = *(*(iVar1 + 4) + ((unaff_retaddr >> 4) % *(iVar1 + 8)) * 4); puVar2 != NULL; puVar2 = *puVar2) {\n            if (puVar2[1] == unaff_retaddr) {\n                return puVar2[2];\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 239
    },
    "00427812": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00427812(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iVar4;\n    int32_t in_ECX;\n    int32_t unaff_EDI;\n    \n    iVar2 = arg_8h;\n    iVar4 = unaff_EDI;\n    if (-1 < arg_8h) goto code_r0x00427827;\n    do {\n        fcn.0041944d();\n        iVar4 = unaff_EDI;\ncode_r0x00427827:\n        if (-1 < arg_ch) {\n            *(in_ECX + 0x10) = arg_ch;\n        }\n        if (iVar2 == 0) {\n            if (*(in_ECX + 4) != 0) {\n                fcn.00419316(*(in_ECX + 4));\n                *(in_ECX + 4) = 0;\n            }\n            *(in_ECX + 0xc) = 0;\n            *(in_ECX + 8) = 0;\n            return;\n        }\n        if (*(in_ECX + 4) == 0) {\n            iVar4 = *(in_ECX + 0x10);\n            if (*(in_ECX + 0x10) < iVar2) {\n                iVar4 = iVar2;\n            }\n            uVar3 = fcn.004192dc(iVar4 << 2);\n            *(in_ECX + 4) = uVar3;\n            fcn.00429510(uVar3, 0, iVar4 << 2);\n            *(in_ECX + 0xc) = iVar4;\n            goto code_r0x00427943;\n        }\n        unaff_EDI = *(in_ECX + 0xc);\n        if (iVar2 <= unaff_EDI) {\n            iVar1 = *(in_ECX + 8);\n            if (iVar1 < iVar2) {\n                fcn.00429510(*(in_ECX + 4) + iVar1 * 4, 0, (iVar2 - iVar1) * 4, iVar4);\n            }\n            goto code_r0x00427943;\n        }\n        iVar4 = *(in_ECX + 0x10);\n        if (iVar4 == 0) {\n            iVar4 = *(in_ECX + 8) + (*(in_ECX + 8) >> 0x1f & 7U) >> 3;\n            if (iVar4 < 4) {\n                iVar4 = 4;\n            }\n            else if (0x400 < iVar4) {\n                iVar4 = 0x400;\n            }\n        }\n        arg_8h = iVar4 + unaff_EDI;\n        if (iVar4 + unaff_EDI <= iVar2) {\n            arg_8h = iVar2;\n        }\n    } while (arg_8h < unaff_EDI);\n    iVar4 = fcn.004192dc(arg_8h << 2);\n    fcn.004010b0(iVar4, arg_8h << 2, *(in_ECX + 4), *(in_ECX + 8) << 2);\n    fcn.00429510(iVar4 + *(in_ECX + 8) * 4, 0, (iVar2 - *(in_ECX + 8)) * 4);\n    fcn.00419316(*(in_ECX + 4));\n    *(in_ECX + 4) = iVar4;\n    *(in_ECX + 0xc) = arg_8h;\ncode_r0x00427943:\n    *(in_ECX + 8) = iVar2;\n    return;\n}\n",
        "token_count": 811
    },
    "0042794d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042794d(int32_t arg_8h, uint *arg_ch, int32_t arg_10h)\n\n{\n    code *pcVar1;\n    int32_t in_ECX;\n    int32_t iVar2;\n    \n    if ((-1 < arg_8h) && (0 < arg_10h)) {\n        if (arg_8h < *(in_ECX + 8)) {\n            iVar2 = *(in_ECX + 8);\n            fcn.00427812(iVar2 + arg_10h, 0xffffffff);\n            iVar2 = (iVar2 - arg_8h) * 4;\n            fcn.004010e0(*(in_ECX + 4) + (arg_8h + arg_10h) * 4, iVar2, *(in_ECX + 4) + arg_8h * 4, iVar2);\n            fcn.00429510(*(in_ECX + 4) + arg_8h * 4, 0, arg_10h << 2);\n        }\n        else {\n            fcn.00427812(arg_8h + arg_10h, 0xffffffff);\n        }\n        arg_8h = arg_8h << 2;\n        do {\n            arg_10h = arg_10h + -1;\n            *(arg_8h + *(in_ECX + 4)) = *arg_ch;\n            arg_8h = arg_8h + 4;\n        } while (arg_10h != 0);\n        return;\n    }\n    fcn.0041944d();\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 372
    },
    "00428448": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00428448(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t in_ECX;\n    int32_t iVar4;\n    \n    iVar1 = arg_8h;\n    iVar4 = 0;\n    if (-1 < arg_8h) goto code_r0x00428460;\n    do {\n        fcn.0041944d();\ncode_r0x00428460:\n        if (iVar4 <= arg_ch) {\n            *(in_ECX + 0x10) = arg_ch;\n        }\n        if (iVar1 == iVar4) {\n            fcn.00419316(*(in_ECX + 4));\n            *(in_ECX + 0xc) = iVar4;\n            *(in_ECX + 8) = iVar4;\n            goto code_r0x00428564;\n        }\n        if (*(in_ECX + 4) == iVar4) {\n            uVar2 = fcn.004192dc(iVar1 << 2);\n            *(in_ECX + 4) = uVar2;\n            fcn.00429510(uVar2, 0, iVar1 << 2);\n            *(in_ECX + 0xc) = iVar1;\ncode_r0x004284cc:\n            *(in_ECX + 8) = iVar1;\n            return;\n        }\n        iVar4 = *(in_ECX + 0xc);\n        if (iVar1 <= iVar4) {\n            iVar4 = *(in_ECX + 8);\n            if (iVar4 < iVar1) {\n                fcn.00429510(*(in_ECX + 4) + iVar4 * 4, 0, (iVar1 - iVar4) * 4);\n            }\n            goto code_r0x004284cc;\n        }\n        iVar3 = *(in_ECX + 0x10);\n        if (iVar3 == 0) {\n            iVar3 = *(in_ECX + 8) + (*(in_ECX + 8) >> 0x1f & 7U) >> 3;\n            if (iVar3 < 4) {\ncode_r0x004284fe:\n                iVar3 = 4;\n            }\n            else if (iVar3 < 0x401) {\n                if (iVar3 < 4) goto code_r0x004284fe;\n            }\n            else {\n                iVar3 = 0x400;\n            }\n        }\n        arg_8h = iVar3 + iVar4;\n        if (iVar3 + iVar4 <= iVar1) {\n            arg_8h = iVar1;\n        }\n    } while (arg_8h < iVar4);\n    iVar4 = fcn.004192dc(arg_8h << 2);\n    fcn.004010b0(iVar4, arg_8h << 2, *(in_ECX + 4), *(in_ECX + 8) << 2);\n    fcn.00429510(iVar4 + *(in_ECX + 8) * 4, 0, (iVar1 - *(in_ECX + 8)) * 4);\n    fcn.00419316(*(in_ECX + 4));\n    *(in_ECX + 8) = iVar1;\n    *(in_ECX + 0xc) = arg_8h;\ncode_r0x00428564:\n    *(in_ECX + 4) = iVar4;\n    return;\n}\n",
        "token_count": 762
    },
    "0042856e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042856e(int32_t arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    int32_t in_ECX;\n    \n    if ((-1 < arg_8h) && (0 < arg_10h)) {\n        if (arg_8h < *(in_ECX + 8)) {\n            iVar1 = *(in_ECX + 8);\n            fcn.00428448(iVar1 + arg_10h, 0xffffffff);\n            fcn.004010e0(*(in_ECX + 4) + (arg_8h + arg_10h) * 4, ((*(in_ECX + 8) - arg_8h) - arg_10h) * 4, \n                         *(in_ECX + 4) + arg_8h * 4, (iVar1 - arg_8h) * 4);\n            fcn.00429510(*(in_ECX + 4) + arg_8h * 4, 0, arg_10h << 2);\n        }\n        else {\n            fcn.00428448(arg_8h + arg_10h, 0xffffffff);\n        }\n        arg_8h = arg_8h << 2;\n        do {\n            arg_10h = arg_10h + -1;\n            *(arg_8h + *(in_ECX + 4)) = arg_ch;\n            arg_8h = arg_8h + 4;\n        } while (arg_10h != 0);\n        return;\n    }\n    fcn.0041944d();\n    pcVar2 = swi(3);\n    (*pcVar2)();\n    return;\n}\n",
        "token_count": 387
    },
    "00429b67": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00429b67(uint arg_8h, uint arg_ch)\n\n{\n    fcn.00429b10(fcn.004330bc, arg_8h, 0, arg_ch);\n    return;\n}\n",
        "token_count": 52
    },
    "0042a1b7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042a1b7(uint arg_8h)\n\n{\n    fcn.0042a08b(arg_8h, 0, 0);\n    return;\n}\n",
        "token_count": 44
    },
    "0042e9c6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0042e9c6(void)\n\n{\n    uint64_t uVar1;\n    uint32_t uVar2;\n    bool bVar3;\n    float fVar4;\n    float10 in_ST0;\n    uint32_t uStack32;\n    float fStack28;\n    \n    uVar1 = ROUND(in_ST0);\n    uStack32 = uVar1;\n    fStack28 = uVar1 >> 0x20;\n    fVar4 = in_ST0;\n    if ((uStack32 != 0) || (fVar4 = fStack28,  (uVar1 & 0x7fffffff00000000) != 0)) {\n        if (fVar4 < 0) {\n            uVar2 = 0x80000000 < (in_ST0 - uVar1 ^ 0x80000000);\n            bVar3 = CARRY4(uStack32, uVar2);\n            uStack32 = uStack32 + uVar2;\n            fStack28 = fStack28 + bVar3;\n        }\n        else {\n            uVar2 = 0x80000000 < in_ST0 - uVar1;\n            bVar3 = uStack32 < uVar2;\n            uStack32 = uStack32 - uVar2;\n            fStack28 = fStack28 - bVar3;\n        }\n    }\n    return CONCAT44(fStack28, uStack32);\n}\n",
        "token_count": 308
    },
    "004301e8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004301e8(uint *arg_8h)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    \n    if (arg_8h == NULL) {\n        puVar1 = fcn.0042b75c();\n        *puVar1 = 0x16;\n        fcn.0042ff7f(0, 0, 0, 0, 0);\n        uVar2 = 0x16;\n    }\n    else {\n        *arg_8h = *0x450dd4;\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 139
    },
    "00430221": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00430221(uint *arg_8h)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    \n    if (arg_8h == NULL) {\n        puVar1 = fcn.0042b75c();\n        *puVar1 = 0x16;\n        fcn.0042ff7f(0, 0, 0, 0, 0);\n        uVar2 = 0x16;\n    }\n    else {\n        *arg_8h = *0x450dd8;\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 138
    },
    "0043025a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0043025a(uint *arg_8h)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    \n    if (arg_8h == NULL) {\n        puVar1 = fcn.0042b75c();\n        *puVar1 = 0x16;\n        fcn.0042ff7f(0, 0, 0, 0, 0);\n        uVar2 = 0x16;\n    }\n    else {\n        *arg_8h = *0x450dd0;\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 139
    },
    "00434c04": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00434c18)\n// WARNING: Removing unreachable block (ram,0x00434c1e)\n// WARNING: Removing unreachable block (ram,0x00434c20)\n\nvoid fcn.00434c04(void)\n\n{\n    return;\n}\n",
        "token_count": 65
    },
    "00438a72": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00438a72(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    int32_t unaff_EBP;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.0042d024(0x44bcf0, 0x14);\n    *(unaff_EBP + -0x1c) = 0;\n    puVar1 = *(unaff_EBP + 0x18);\n    if (((puVar1 == NULL) || (*puVar1 = 0xffffffff,  *(unaff_EBP + 8) == 0)) ||\n       ((*(unaff_EBP + 0x1c) != 0 && ((*(unaff_EBP + 0x14) & 0xfffffe7f) != 0)))) {\n        puVar1 = fcn.0042b75c();\n        *puVar1 = 0x16;\n        fcn.0042ff7f(0, 0, 0, 0, 0);\n    }\n    else {\n        *(unaff_EBP + -4) = 0;\n        uVar2 = fcn.00438353(unaff_EBP + -0x1c, *(unaff_EBP + 8), *(unaff_EBP + 0xc), *(unaff_EBP + 0x10), \n                             *(unaff_EBP + 0x14));\n        *(unaff_EBP + -0x20) = uVar2;\n        *(unaff_EBP + -4) = 0xfffffffe;\n        fcn.00438b10();\n        if (*(unaff_EBP + -0x20) != 0) {\n            *puVar1 = 0xffffffff;\n        }\n    }\n    fcn.0042d069();\n    return;\n}\n",
        "token_count": 457
    },
    "00438b3e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00438b3e(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    fcn.00438a72(arg_ch, arg_10h, arg_14h, arg_18h, arg_8h, 1);\n    return;\n}\n",
        "token_count": 79
    },
    "0043b098": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0043b098(uint *arg_8h)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    \n    if (arg_8h == NULL) {\n        puVar1 = fcn.0042b75c();\n        *puVar1 = 0x16;\n        fcn.0042ff7f(0, 0, 0, 0, 0);\n        uVar2 = 0x16;\n    }\n    else {\n        *arg_8h = *0x454798;\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 138
    },
    "0043d809": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0043d809(uint param_1)\n\n{\n    fcn.00429510(param_1, 0, 0x18);\n    return param_1;\n}\n",
        "token_count": 43
    },
    "0042915a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0042915a(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = fcn.0043198b(arg_8h, arg_ch, arg_10h, arg_14h, in_EAX, 0, 0, 0);\n    return uVar1;\n}\n",
        "token_count": 111
    },
    "0042776c": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.0042776c(void)\n\n{\n    uint arg_8h;\n    uint var_18h;\n    uint32_t var_4h;\n    \n    var_4h = *0x45060c ^ &stack0xfffffffc;\n    arg_8h = (*_sym.imp.KERNEL32.dll_GetOEMCP)(&var_18h);\n    (*_sym.imp.KERNEL32.dll_GetCPInfo)();\n    fcn.004294b3(arg_8h);\n    return;\n}\n",
        "token_count": 110
    },
    "0040c390": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0040c390(code **param_1, code *param_2)\n\n{\n    param_1[1] = NULL;\n    param_1[3] = NULL;\n    param_1[4] = NULL;\n    param_1[5] = NULL;\n    *param_1 = \n    vtable.CMap_enum_CZipArchive::CallbackType__enum_CZipArchive::CallbackType__struct_CZipActionCallback___struct_CZipActionCallback__.0\n    ;\n    param_1[2] = 0x11;\n    param_1[6] = param_2;\n    return;\n}\n",
        "token_count": 138
    },
    "00411350": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00411350(int32_t param_1, uint *param_2)\n\n{\n    *param_2 = *(param_1 + 0x14);\n    param_2[1] = *(param_1 + 0x18);\n    param_2[2] = *(param_1 + 0x1c);\n    return;\n}\n",
        "token_count": 82
    },
    "00419e6a": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00419e6a(uint arg_8h)\n\n{\n    uchar uVar1;\n    uint *puVar2;\n    code *pcVar3;\n    int32_t iVar4;\n    uint uVar5;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_14h;\n    uint var_4h;\n    \n    fcn.0042cbf9(0xc);\n    *(unaff_EBP + -0x14) = extraout_ECX;\n    *extraout_ECX = vtable.AFX_MODULE_STATE.0;\n    extraout_ECX[7] = NULL;\n    extraout_ECX[8] = NULL;\n    extraout_ECX[9] = NULL;\n    extraout_ECX[10] = NULL;\n    fcn.00401840();\n    extraout_ECX[0x10] = NULL;\n    extraout_ECX[0x11] = NULL;\n    extraout_ECX[0x14] = 0xffffffff;\n    *(unaff_EBP + -4) = 0;\n    extraout_ECX[0x15] = NULL;\n    extraout_ECX[0x1a] = NULL;\n    extraout_ECX[0x1b] = NULL;\n    uVar1 = *(unaff_EBP + 8);\n    extraout_ECX[10] = 0x20;\n    extraout_ECX[8] = 0x14;\n    extraout_ECX[6] = NULL;\n    *(extraout_ECX + 5) = uVar1;\n    *(unaff_EBP + -4) = 2;\n    fcn.004018e0(0x1000);\n    *(unaff_EBP + -4) = 1;\n    extraout_ECX[0xc] = 0x1;\n    extraout_ECX[0x11] = 0x18;\n    pcVar3 = fcn.004192dc(0xc);\n    extraout_ECX[0x1e] = pcVar3;\n    iVar4 = fcn.004254a0(0x188);\n    *(unaff_EBP + 8) = iVar4;\n    *(unaff_EBP + -4) = 4;\n    if (iVar4 == 0) {\n        uVar5 = 0;\n    }\n    else {\n        uVar5 = fcn.00419b5c();\n    }\n    puVar2 = extraout_ECX[0x1e];\n    *(unaff_EBP + -4) = 1;\n    *puVar2 = uVar5;\n    iVar4 = fcn.004254a0(100);\n    *(unaff_EBP + 8) = iVar4;\n    *(unaff_EBP + -4) = 5;\n    if (iVar4 == 0) {\n        uVar5 = 0;\n    }\n    else {\n        uVar5 = fcn.00419d80();\n    }\n    pcVar3 = extraout_ECX[0x1e];\n    *(unaff_EBP + -4) = 1;\n    *(pcVar3 + 4) = uVar5;\n    iVar4 = fcn.004254a0(0x14);\n    *(unaff_EBP + 8) = iVar4;\n    *(unaff_EBP + -4) = 6;\n    if (iVar4 == 0) {\n        uVar5 = 0;\n    }\n    else {\n        uVar5 = fcn.00419e03();\n    }\n    *(extraout_ECX[0x1e] + 8) = uVar5;\n    extraout_ECX[0x1f] = 0x1;\n    extraout_ECX[0x20] = NULL;\n    extraout_ECX[0x21] = NULL;\n    extraout_ECX[0x22] = NULL;\n    fcn.0042cc9e();\n    return;\n}\n",
        "token_count": 885
    },
    "0041d8bc": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041d8bc(code **param_1)\n\n{\n    *param_1 = vtable.CCmdUI.0;\n    param_1[8] = NULL;\n    param_1[2] = NULL;\n    param_1[1] = NULL;\n    param_1[9] = NULL;\n    param_1[4] = NULL;\n    param_1[3] = NULL;\n    param_1[5] = NULL;\n    param_1[7] = NULL;\n    param_1[6] = NULL;\n    return;\n}\n",
        "token_count": 127
    },
    "0041d930": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0041d930(int32_t param_1)\n\n{\n    uint uVar1;\n    \n    uVar1 = fcn.0041a00a();\n    *(param_1 + 0x1c) = uVar1;\n    *(param_1 + 4) = 1;\n    *(param_1 + 0x14) = 1;\n    *(param_1 + 8) = 0;\n    *(param_1 + 0xc) = 0;\n    *(param_1 + 0x10) = 0;\n    *(param_1 + 0x18) = 0;\n    return param_1;\n}\n",
        "token_count": 151
    },
    "0041df81": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041df81(int32_t arg_8h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar2 = *(arg_8h + 4);\n    if ((iVar2 == 0x200) || (iVar2 == 0xa0)) {\n        iVar2 = fcn.00419a3e();\n        iVar3 = fcn.0041dece(*(arg_8h + 0x14), *(arg_8h + 0x18));\n        if ((iVar3 == 0) || (*(arg_8h + 4) != *(iVar2 + 0x54))) {\n            *(iVar2 + 0x4c) = *(arg_8h + 0x14);\n            *(iVar2 + 0x50) = *(arg_8h + 0x18);\n            *(iVar2 + 0x54) = *(arg_8h + 4);\n            uVar1 = 1;\n        }\n        else {\n            uVar1 = 0;\n        }\n    }\n    else if ((iVar2 == 0xf) || (iVar2 == 0x118)) {\n        uVar1 = 0;\n    }\n    else {\n        uVar1 = 1;\n    }\n    return uVar1;\n}\n",
        "token_count": 294
    },
    "00424857": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00424857(code *arg_8h)\n\n{\n    code **in_ECX;\n    \n    in_ECX[3] = NULL;\n    in_ECX[4] = NULL;\n    in_ECX[2] = NULL;\n    in_ECX[1] = NULL;\n    in_ECX[5] = NULL;\n    *in_ECX = vtable.CStringList.0;\n    in_ECX[6] = arg_8h;\n    return;\n}\n",
        "token_count": 107
    },
    "00424ef5": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00424ef5(code *arg_8h)\n\n{\n    code **in_ECX;\n    \n    in_ECX[3] = NULL;\n    in_ECX[4] = NULL;\n    in_ECX[2] = NULL;\n    in_ECX[1] = NULL;\n    in_ECX[5] = NULL;\n    *in_ECX = vtable.CPtrList.0;\n    in_ECX[6] = arg_8h;\n    return;\n}\n",
        "token_count": 108
    },
    "00426198": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00426198(code *arg_8h)\n\n{\n    code **in_ECX;\n    \n    *in_ECX = vtable.CMapPtrToPtr.0;\n    if (arg_8h < 1) {\n        arg_8h = 0xa;\n    }\n    in_ECX[1] = NULL;\n    in_ECX[2] = 0x11;\n    in_ECX[3] = NULL;\n    in_ECX[4] = NULL;\n    in_ECX[5] = NULL;\n    in_ECX[6] = arg_8h;\n    return;\n}\n",
        "token_count": 136
    },
    "00427316": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __cdecl fcn.00427316(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    code *pcVar1;\n    int32_t arg_ch_00;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.0042cbc6(4);\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    pcVar1 = *(unaff_EBP + 8);\n    *extraout_ECX = vtable.CHandleMap.0;\n    fcn.0042838f(*(pcVar1 + 4), 0x40);\n    *(unaff_EBP + -4) = 0;\n    fcn.00426198(10);\n    *(unaff_EBP + -4) = 1;\n    fcn.00426198(4);\n    arg_ch_00 = 0;\n    *(unaff_EBP + -4) = 2;\n    if (*(unaff_EBP + 0xc) != 0) goto code_r0x0042736b;\n    do {\n        arg_ch_00 = fcn.0041944d();\ncode_r0x0042736b:\n    } while (*(unaff_EBP + 0x10) == arg_ch_00);\n    fcn.00425f7b(7, arg_ch_00);\n    extraout_ECX[5] = *(unaff_EBP + 0xc);\n    extraout_ECX[6] = *(unaff_EBP + 0x10);\n    extraout_ECX[0x16] = *(unaff_EBP + 0x14);\n    extraout_ECX[0x17] = *(unaff_EBP + 0x18);\n    extraout_ECX[0x15] = pcVar1;\n    fcn.0042cc9e();\n    return;\n}\n",
        "token_count": 470
    },
    "0041aec4": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041aec4(uint arg_8h)\n\n{\n    uint32_t uVar1;\n    uint32_t arg_8h_00;\n    uint *in_ECX;\n    \n    uVar1 = (*_sym.imp.KERNEL32.dll_lstrlenA)(*in_ECX);\n    arg_8h_00 = *(in_ECX + 2);\n    fcn.0041a9fd(arg_8h_00);\n    fcn.0041a9fd(arg_8h_00);\n    fcn.0041ad98(*in_ECX, uVar1 & 0xffff);\n    return;\n}\n",
        "token_count": 139
    },
    "004250a0": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004250a0(uint16_t *arg_8h, uint arg_ch)\n\n{\n    uint *in_ECX;\n    uint var_8h;\n    uint var_4h;\n    \n    if (*arg_8h < 0x76c) {\n        *in_ECX = 0;\n        in_ECX[1] = 0;\n    }\n    else {\n        fcn.0042500b(*arg_8h, arg_8h[1], arg_8h[3], arg_8h[4], arg_8h[5], arg_8h[6], arg_ch);\n        *in_ECX = in_ECX;\n        in_ECX[1] = in_ECX;\n    }\n    return;\n}\n",
        "token_count": 167
    },
    "00409940": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "hash data with MD5"
        ],
        "decompiled_code": "\nvoid fcn.00409940(uint *param_1)\n\n{\n    param_1[5] = 0;\n    param_1[4] = 0;\n    *param_1 = 0x67452301;\n    param_1[1] = 0xefcdab89;\n    param_1[2] = 0x98badcfe;\n    param_1[3] = 0x10325476;\n    return;\n}\n",
        "token_count": 100
    },
    "00424e0d": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00424e0d(int32_t param_1)\n\n{\n    *(param_1 + 0xc) = 0;\n    *(param_1 + 0x10) = 0;\n    *(param_1 + 8) = 0;\n    *(param_1 + 4) = 0;\n    fcn.0042548a();\n    *(param_1 + 0x14) = 0;\n    return;\n}\n",
        "token_count": 103
    },
    "004193ea": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004193ea(int32_t param_1)\n\n{\n    int32_t iVar1;\n    \n    *(param_1 + 0xc) = 1;\n    iVar1 = fcn.0041a08e(*(param_1 + 0x94), param_1 + 0x14, 0x80);\n    *(param_1 + 0x10) = iVar1 != 0;\n    return;\n}\n",
        "token_count": 98
    },
    "004225f9": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\ncode ** __fastcall fcn.004225f9(code **param_1)\n\n{\n    param_1[5] = NULL;\n    param_1[2] = NULL;\n    param_1[3] = NULL;\n    *param_1 = vtable.CMFCComObject_class_ATL::CAccessibleProxy_.2.0;\n    param_1[1] = vtable.CMFCComObject_class_ATL::CAccessibleProxy_.1.0;\n    param_1[4] = vtable.CMFCComObject_class_ATL::CAccessibleProxy_.0;\n    fcn.00426d34();\n    return param_1;\n}\n",
        "token_count": 145
    },
    "00424625": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00424625(uint arg_8h)\n\n{\n    code *pcVar1;\n    uint arg_8h_00;\n    int32_t iVar2;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.0042cbc6(4);\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    extraout_ECX[1] = NULL;\n    extraout_ECX[2] = NULL;\n    extraout_ECX[3] = NULL;\n    *(unaff_EBP + -4) = 0;\n    iVar2 = *(unaff_EBP + 8);\n    *extraout_ECX = vtable.CPaintDC.0;\n    pcVar1 = *(iVar2 + 0x20);\n    extraout_ECX[4] = pcVar1;\n    arg_8h_00 = (*_sym.imp.USER32.dll_BeginPaint)(pcVar1, extraout_ECX + 5);\n    iVar2 = fcn.004245a3(arg_8h_00);\n    if (iVar2 == 0) {\n        fcn.0042417b();\n    }\n    fcn.0042cc9e();\n    return;\n}\n",
        "token_count": 302
    },
    "0042492c": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042492c(int32_t param_1)\n\n{\n    code *pcVar1;\n    uint *puVar2;\n    \n    puVar2 = *(param_1 + 4);\n    while( true ) {\n        if (puVar2 == NULL) {\n            *(param_1 + 0xc) = 0;\n            *(param_1 + 0x10) = 0;\n            *(param_1 + 8) = 0;\n            *(param_1 + 4) = 0;\n            fcn.0042548a();\n            *(param_1 + 0x14) = 0;\n            return;\n        }\n        if (puVar2 == 0xfffffff8) break;\n        fcn.00424898(0);\n        puVar2 = *puVar2;\n    }\n    fcn.0041944d();\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 213
    },
    "00425fd9": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00425fd9(int32_t param_1)\n\n{\n    if (*(param_1 + 4) != 0) {\n        fcn.00419316(*(param_1 + 4));\n        *(param_1 + 4) = 0;\n    }\n    *(param_1 + 0xc) = 0;\n    *(param_1 + 0x10) = 0;\n    fcn.0042548a();\n    *(param_1 + 0x14) = 0;\n    return;\n}\n",
        "token_count": 121
    },
    "0043d89e": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nuint * __fastcall fcn.0043d89e(uint *param_1)\n\n{\n    int32_t iVar1;\n    \n    fcn.0043d86a();\n    *param_1 = 0x38;\n    param_1[2] = 0x400000;\n    param_1[1] = 0x400000;\n    param_1[3] = 0x900;\n    param_1[4] = 0x447188;\n    iVar1 = fcn.0043d81f();\n    if (iVar1 < 0) {\n        *0x451af0 = 1;\n    }\n    return param_1;\n}\n",
        "token_count": 147
    },
    "004269ba": {
        "rules": [
            "execute .NET assembly via CLR host/2c9ef85a2fe94af39efaaae3fc9e6a8a",
            "create or open registry key"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004269ba(int32_t param_1)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_ch = 0;\n    var_4h = 0;\n    var_8h = 0;\n    iVar2 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExA)(0x80000001, \"software\", 0, 0x2001f, &var_4h);\n    pcVar1 = _sym.imp.ADVAPI32.dll_RegCreateKeyExA;\n    if (iVar2 == 0) {\n        iVar2 = (*_sym.imp.ADVAPI32.dll_RegCreateKeyExA)\n                          (var_4h, *(param_1 + 0x54), 0, 0, 0, 0x2001f, 0, &var_8h, &var_10h);\n        if (iVar2 == 0) {\n            (*pcVar1)(var_8h, *(param_1 + 0x68), 0, 0, 0, 0x2001f, 0, &var_ch, &var_10h);\n        }\n    }\n    pcVar1 = _sym.imp.ADVAPI32.dll_RegCloseKey;\n    if (var_4h != 0) {\n        (*_sym.imp.ADVAPI32.dll_RegCloseKey)(var_4h);\n    }\n    if (var_8h != 0) {\n        (*pcVar1)(var_8h);\n    }\n    return var_ch;\n}\n",
        "token_count": 380
    },
    "00412040": {
        "rules": [
            "set file attributes"
        ],
        "decompiled_code": "\nbool fcn.00412040(uint param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_SetFileAttributesA)(param_1, param_2);\n    return iVar1 != 0;\n}\n",
        "token_count": 61
    },
    "0040e9a0": {
        "rules": [
            "read file via mapping/d48f13c7a6654d1aa96bb5e757e14a84"
        ],
        "decompiled_code": "\nuint32_t __thiscall fcn.0040e9a0(uint32_t *param_1, int32_t param_2)\n\n{\n    uint32_t in_EAX;\n    uint uVar1;\n    uint32_t uVar2;\n    \n    if (param_2 != 0) {\n        uVar1 = fcn.00411140(0, 4, 0, 0, \"ZipArchive Mapping File\");\n        in_EAX = (*_sym.imp.KERNEL32.dll_CreateFileMappingA)(uVar1);\n        *param_1 = in_EAX;\n        if (in_EAX != 0) {\n            uVar2 = (*_sym.imp.KERNEL32.dll_MapViewOfFile)(in_EAX, 2, 0, 0, 0);\n            param_1[1] = uVar2;\n            return uVar2 & 0xffffff00 | uVar2 != 0;\n        }\n    }\n    return in_EAX & 0xffffff00;\n}\n",
        "token_count": 217
    },
    "0043d154": {
        "rules": [
            "create or open file"
        ],
        "decompiled_code": "\nvoid fcn.0043d154(void)\n\n{\n    *0x451748 = (*_sym.imp.KERNEL32.dll_CreateFileA)(\"CONOUT$\", 0x40000000, 3, 0, 3, 0, 0);\n    return;\n}\n",
        "token_count": 60
    },
    "00426a4d": {
        "rules": [
            "create or open registry key"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00426a4d(uint lpSubKey)\n\n{\n    int32_t iVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    var_4h = 0;\n    iVar1 = fcn.004269ba();\n    if (iVar1 == 0) {\n        var_4h = 0;\n    }\n    else {\n        (*_sym.imp.ADVAPI32.dll_RegCreateKeyExA)(iVar1, lpSubKey, 0, 0, 0, 0x2001f, 0, &var_4h, &var_8h);\n        (*_sym.imp.ADVAPI32.dll_RegCloseKey)(iVar1);\n    }\n    return var_4h;\n}\n",
        "token_count": 165
    },
    "004021c0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.004021c0(char *param_1)\n\n{\n    char cVar1;\n    char *pcVar2;\n    \n    if (param_1 == NULL) {\n        fcn.00401aa0(0, 0);\n        return;\n    }\n    pcVar2 = param_1;\n    do {\n        cVar1 = *pcVar2;\n        pcVar2 = pcVar2 + 1;\n    } while (cVar1 != '\\0');\n    fcn.00401aa0(param_1, pcVar2 - (param_1 + 1));\n    return;\n}\n",
        "token_count": 132
    },
    "00402e60": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __thiscall fcn.00402e60(uint param_1, char *param_2)\n\n{\n    char cVar1;\n    char *pcVar2;\n    \n    if (param_2 == NULL) {\n        fcn.00401aa0(0, 0);\n        return param_1;\n    }\n    pcVar2 = param_2;\n    do {\n        cVar1 = *pcVar2;\n        pcVar2 = pcVar2 + 1;\n    } while (cVar1 != '\\0');\n    fcn.00401aa0(param_2, pcVar2 - (param_2 + 1));\n    return param_1;\n}\n",
        "token_count": 146
    },
    "00402ea0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __thiscall fcn.00402ea0(uint param_1, char *param_2)\n\n{\n    char cVar1;\n    char *pcVar2;\n    \n    if (param_2 == NULL) {\n        fcn.00401b30(0, 0);\n        return param_1;\n    }\n    pcVar2 = param_2;\n    do {\n        cVar1 = *pcVar2;\n        pcVar2 = pcVar2 + 1;\n    } while (cVar1 != '\\0');\n    fcn.00401b30(param_2, pcVar2 - (param_2 + 1));\n    return param_1;\n}\n",
        "token_count": 146
    },
    "004098d0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.004098d0(char *param_1)\n\n{\n    char cVar1;\n    char *pcVar2;\n    \n    if (param_1 != NULL) {\n        pcVar2 = param_1;\n        do {\n            cVar1 = *pcVar2;\n            pcVar2 = pcVar2 + 1;\n        } while (cVar1 != '\\0');\n        fcn.00401aa0(param_1, pcVar2 - (param_1 + 1));\n        fcn.00401600();\n        fcn.004096a0();\n        return;\n    }\n    fcn.00401600();\n    fcn.00401600();\n    fcn.004096a0();\n    return;\n}\n",
        "token_count": 160
    },
    "0040c470": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __thiscall fcn.0040c470(int32_t param_1, uint32_t param_2)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    \n    iVar3 = *(param_1 + 4);\n    if (iVar3 == 0) {\n        return 0;\n    }\n    uVar5 = param_2 >> 4;\n    uVar4 = uVar5 % *(param_1 + 8);\n    iVar2 = *(iVar3 + uVar4 * 4);\n    piVar1 = iVar3 + uVar4 * 4;\n    while( true ) {\n        if (iVar2 == 0) {\n            return 0;\n        }\n        if ((*(iVar2 + 0xc) == uVar5) && (iVar3 = fcn.0040c050(iVar2, &param_2),  iVar3 != 0)) break;\n        piVar1 = iVar2 + 8;\n        iVar2 = *piVar1;\n    }\n    *piVar1 = *(iVar2 + 8);\n    fcn.0040c030(iVar2);\n    return 1;\n}\n",
        "token_count": 277
    },
    "0040c4e0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040c4e0(code **param_1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    code *pcVar4;\n    \n    *param_1 = \n    vtable.CMap_enum_CZipArchive::CallbackType__enum_CZipArchive::CallbackType__struct_CZipActionCallback___struct_CZipActionCallback__.0\n    ;\n    piVar1 = param_1[1];\n    if ((piVar1 != NULL) && (param_1[2] != NULL)) {\n        pcVar4 = param_1[2];\n        piVar3 = piVar1;\n        do {\n            for (iVar2 = *piVar3; iVar2 != 0; iVar2 = *(iVar2 + 8)) {\n            }\n            piVar3 = piVar3 + 1;\n            pcVar4 = pcVar4 + -1;\n        } while (pcVar4 != NULL);\n    }\n    fcn.00419316(piVar1);\n    param_1[1] = NULL;\n    param_1[3] = NULL;\n    param_1[4] = NULL;\n    fcn.0042548a();\n    param_1[5] = NULL;\n    return;\n}\n",
        "token_count": 282
    },
    "0040c4f0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.0040c4f0(int32_t param_1, uint32_t param_2, uint32_t *param_3, uint32_t *param_4)\n\n{\n    int32_t iVar1;\n    uint32_t *puVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    \n    puVar2 = param_4;\n    *param_4 = param_2 >> 4;\n    uVar4 = (param_2 >> 4) % *(param_1 + 8);\n    *param_3 = uVar4;\n    if (*(param_1 + 4) == 0) {\n        return 0;\n    }\n    iVar1 = *(*(param_1 + 4) + uVar4 * 4);\n    while( true ) {\n        if (iVar1 == 0) {\n            return 0;\n        }\n        if ((*(iVar1 + 0xc) == *puVar2) && (iVar3 = fcn.0040c050(iVar1, &param_2),  iVar3 != 0)) break;\n        iVar1 = *(iVar1 + 8);\n    }\n    return iVar1;\n}\n",
        "token_count": 265
    },
    "0040c580": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040c580(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = 0;\n    *(param_1 + 0x198) = 0x12345678;\n    *(param_1 + 0x19c) = 0x23456789;\n    *(param_1 + 0x1a0) = 0x34567890;\n    if (*(param_1 + 0x194) != 0) {\n        do {\n            fcn.0040c210();\n            uVar1 = uVar1 + 1;\n        } while (uVar1 < *(param_1 + 0x194));\n    }\n    return;\n}\n",
        "token_count": 161
    },
    "0040f530": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040f530(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    code *pcVar3;\n    int32_t iVar4;\n    \n    iVar1 = *(param_1 + 0x34);\n    iVar4 = 0;\n    if (0 < iVar1) {\n        do {\n            if ((iVar4 < 0) || (*(param_1 + 0x34) <= iVar4)) {\n                fcn.0041944d();\n                pcVar3 = swi(3);\n                (*pcVar3)();\n                return;\n            }\n            puVar2 = *(*(param_1 + 0x30) + iVar4 * 4);\n            if (puVar2 != NULL) {\n                (***puVar2)(1);\n            }\n            iVar4 = iVar4 + 1;\n        } while (iVar4 < iVar1);\n    }\n    fcn.0040eb20(0, 0xffffffff);\n    return;\n}\n",
        "token_count": 221
    },
    "004192dc": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004192dc(uint arg_8h)\n\n{\n    int32_t iVar1;\n    \n    while( true ) {\n        iVar1 = fcn.0042ba31(arg_8h);\n        if (iVar1 != 0) {\n            return iVar1;\n        }\n        if (*0x44fb04 == NULL) break;\n        iVar1 = (**0x44fb04)(arg_8h);\n        if (iVar1 == 0) {\n            return 0;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 120
    },
    "0041930b": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.0041930b(uint param_1)\n\n{\n    int32_t iVar1;\n    \n    while( true ) {\n        iVar1 = fcn.0042ba31(param_1);\n        if (iVar1 != 0) {\n            return iVar1;\n        }\n        if (*0x44fb04 == NULL) break;\n        iVar1 = (**0x44fb04)(param_1);\n        if (iVar1 == 0) {\n            return 0;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 116
    },
    "0041962b": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041962b(int32_t arg_8h)\n\n{\n    uint uVar1;\n    \n    if (arg_8h == 0) {\n        return;\n    }\n    if (arg_8h == 0xc) {\n        uVar1 = 0x8007000e;\n    }\n    else {\n        if (arg_8h == 0x16) goto code_r0x00419655;\n        if (arg_8h == 0x22) goto code_r0x00419655;\n        if (arg_8h == 0x50) {\n            return;\n        }\n        uVar1 = 0x80004005;\n    }\n    do {\n        fcn.00401090(uVar1);\ncode_r0x00419655:\n        uVar1 = 0x80070057;\n    } while( true );\n}\n",
        "token_count": 193
    },
    "0041a50f": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __thiscall fcn.0041a50f(uint *param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    uint *extraout_ECX;\n    uint unaff_EBP;\n    \n    if (param_1 != NULL) goto code_r0x0041a51d;\n    do {\n        fcn.0041944d();\n        param_1 = extraout_ECX;\ncode_r0x0041a51d:\n        iVar1 = (***param_1)();\n    } while (iVar1 == 0);\n    if (iVar1 != 0) goto code_r0x0041a4f4;\n    do {\n        iVar1 = fcn.0041944d(unaff_EBP);\ncode_r0x0041a4f4:\n    } while (param_2 == 0);\n    do {\n        if (iVar1 == param_2) {\n            return 1;\n        }\n        iVar1 = *(iVar1 + 0x10);\n    } while (iVar1 != 0);\n    return 0;\n}\n",
        "token_count": 234
    },
    "0041b1f1": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041b1f1(uint param_1, int32_t param_2)\n\n{\n    char *in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *unaff_EDI;\n    \n    iVar1 = 0;\n    iVar2 = param_2;\n    if (param_2 != 0) {\n        do {\n            if (*in_EAX == '\\0') break;\n            in_EAX = in_EAX + 1;\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n        if (iVar2 != 0) goto code_r0x0041b20f;\n    }\n    iVar1 = -0x7ff8ffa9;\ncode_r0x0041b20f:\n    if (unaff_EDI != NULL) {\n        if (-1 < iVar1) {\n            *unaff_EDI = param_2 - iVar2;\n            return;\n        }\n        *unaff_EDI = 0;\n    }\n    return;\n}\n",
        "token_count": 231
    },
    "0041bc63": {
        "rules": [
            "contain loop",
            "link function at runtime on Windows"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041bc63(uint arg_8h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint *in_ECX;\n    int32_t iVar3;\n    uint var_4h;\n    \n    *in_ECX = arg_8h;\n    in_ECX[1] = 0;\n    if (*0x451f50 == '\\0') {\n        iVar2 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(\"KERNEL32\");\n        if (iVar2 != 0) goto code_r0x0041bc9d;\ncode_r0x0041bc98:\n        do {\n            fcn.0041944d();\ncode_r0x0041bc9d:\n            pcVar1 = _sym.imp.KERNEL32.dll_GetProcAddress;\n            iVar3 = iVar2;\n            *0x451f40 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, \"CreateActCtxA\");\n            *0x451f44 = (*pcVar1)(iVar2, \"ReleaseActCtx\");\n            *0x451f48 = (*pcVar1)(iVar2, \"ActivateActCtx\");\n            *0x451f4c = (*pcVar1)(iVar2, \"DeactivateActCtx\");\n            iVar2 = iVar3;\n            if (*0x451f40 == 0) {\n                if ((*0x451f44 != 0) || (*0x451f48 != 0)) goto code_r0x0041bc98;\n            }\n            else if ((*0x451f44 == 0) || (*0x451f48 == 0)) goto code_r0x0041bc98;\n        } while (*0x451f4c != 0);\n        *0x451f50 = '\\x01';\n    }\n    return;\n}\n",
        "token_count": 396
    },
    "0041fe70": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041fe70(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *in_ECX;\n    int32_t *extraout_ECX;\n    int32_t unaff_ESI;\n    \n    iVar2 = 0x7fffffff;\n    iVar1 = unaff_ESI;\n    if (arg_8h == 0x7fffffff) goto code_r0x0041fe93;\n    if (*in_ECX == 0x7fffffff) goto code_r0x0041fe91;\n    if (*in_ECX == arg_8h) goto code_r0x0041fe91;\n    do {\n        iVar2 = fcn.0041944d();\n        in_ECX = extraout_ECX;\ncode_r0x0041fe91:\n        *in_ECX = arg_8h;\n        iVar1 = unaff_ESI;\ncode_r0x0041fe93:\n        arg_8h = iVar1;\n        unaff_ESI = arg_8h;\n    } while (*in_ECX == iVar2);\n    fcn.00426527(*in_ECX);\n    return;\n}\n",
        "token_count": 261
    },
    "00420034": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00420034(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t nPos;\n    \n    if (arg_8h == 0) {\n        fcn.0041944d();\n    }\n    iVar1 = (*_sym.imp.USER32.dll_GetMenuItemCount)(*(arg_8h + 4));\n    nPos = 0;\n    if (0 < iVar1) {\n        do {\n            iVar2 = fcn.0041fe2a(nPos);\n            if (iVar2 == 0) {\n                iVar2 = fcn.0041fe15(nPos);\n                if (iVar2 == arg_ch) goto code_r0x00420096;\n            }\n            else {\n                if (*(iVar2 + 4) == arg_ch) {\ncode_r0x00420096:\n                    iVar1 = fcn.004276e2(*(arg_8h + 4));\n                    return iVar1;\n                }\n                iVar2 = fcn.00420034(iVar2, arg_ch);\n                if (iVar2 != 0) {\n                    return iVar2;\n                }\n            }\n            nPos = nPos + 1;\n        } while (nPos < iVar1);\n    }\n    return 0;\n}\n",
        "token_count": 290
    },
    "004214da": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004214da(uint hDlg, uint nIDDlgItem, int32_t arg_10h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar2 = (*_sym.imp.USER32.dll_GetDlgItem)(hDlg, nIDDlgItem);\n    pcVar1 = _sym.imp.USER32.dll_GetTopWindow;\n    if (iVar2 != 0) {\n        iVar3 = (*_sym.imp.USER32.dll_GetTopWindow)(iVar2);\n        if ((iVar3 != 0) && (iVar3 = fcn.004214da(iVar2, nIDDlgItem, arg_10h),  iVar3 != 0)) {\n            return;\n        }\n        if (arg_10h == 0) {\n            fcn.004211d4(iVar2);\n            return;\n        }\n        iVar2 = fcn.00421200();\n        if (iVar2 != 0) {\n            return;\n        }\n    }\n    iVar2 = (*pcVar1)(hDlg);\n    while( true ) {\n        if (iVar2 == 0) {\n            return;\n        }\n        iVar3 = fcn.004214da(iVar2, nIDDlgItem, arg_10h);\n        if (iVar3 != 0) break;\n        iVar2 = (*_sym.imp.USER32.dll_GetWindow)(iVar2, 2);\n    }\n    return;\n}\n",
        "token_count": 314
    },
    "00421553": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00421553(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar3 = *arg_ch;\n    while( true ) {\n        if (iVar3 == 0) {\n            return 0;\n        }\n        piVar1 = fcn.00421200(iVar3);\n        if ((piVar1 != NULL) && (iVar2 = (**(*piVar1 + 0x108))(arg_ch),  iVar2 != 0)) break;\n        if (iVar3 == arg_8h) {\n            return 0;\n        }\n        iVar3 = (*_sym.imp.USER32.dll_GetParent)(iVar3);\n    }\n    return 1;\n}\n",
        "token_count": 177
    },
    "004216c9": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.004216c9(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint var_1ch;\n    \n    pcVar1 = _sym.imp.USER32.dll_PeekMessageA;\n    while( true ) {\n        iVar2 = (*pcVar1)(&var_1ch, 0, 0x121, 0x121, 1);\n        if (iVar2 == 0) break;\n        (*_sym.imp.USER32.dll_DispatchMessageA)(&var_1ch);\n    }\n    fcn.0042112e();\n    return;\n}\n",
        "token_count": 133
    },
    "00421a83": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.00421a83(int32_t param_1)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint arg_8h;\n    int32_t *piVar3;\n    \n    pcVar1 = _sym.imp.USER32.dll_GetParent;\n    if ((param_1 != 0) && (iVar2 = *(param_1 + 0x20),  iVar2 != 0)) {\n        while( true ) {\n            arg_8h = (*pcVar1)(iVar2);\n            piVar3 = fcn.004211d4(arg_8h);\n            if ((piVar3 == NULL) || (iVar2 = (**(*piVar3 + 0x128))(),  iVar2 != 0)) break;\n            iVar2 = piVar3[8];\n        }\n        return piVar3;\n    }\n    return NULL;\n}\n",
        "token_count": 197
    },
    "004224ee": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004224ee(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t arg_8h;\n    \n    if ((param_1 != 0) && (iVar1 = *(param_1 + 0x20),  *(param_1 + 0x20) != 0)) {\n        do {\n            arg_8h = iVar1;\n            iVar1 = fcn.004224a4(arg_8h);\n        } while (iVar1 != 0);\n        uVar2 = fcn.004211d4(arg_8h);\n        return uVar2;\n    }\n    return 0;\n}\n",
        "token_count": 151
    },
    "0042496e": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042496e(code **param_1)\n\n{\n    code *pcVar1;\n    uint *puVar2;\n    \n    *param_1 = vtable.CStringList.0;\n    puVar2 = param_1[1];\n    while( true ) {\n        if (puVar2 == NULL) {\n            param_1[3] = NULL;\n            param_1[4] = NULL;\n            param_1[2] = NULL;\n            param_1[1] = NULL;\n            fcn.0042548a();\n            param_1[5] = NULL;\n            return;\n        }\n        if (puVar2 == 0xfffffff8) break;\n        fcn.00424898(0);\n        puVar2 = *puVar2;\n    }\n    fcn.0041944d();\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 204
    },
    "00424e56": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00424e56(int32_t param_1)\n\n{\n    int32_t *arg_8h;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t extraout_ECX;\n    \n    if (param_1 != 0) goto code_r0x00424e5f;\n    do {\n        fcn.0041944d();\n        param_1 = extraout_ECX;\ncode_r0x00424e5f:\n        arg_8h = *(param_1 + 4);\n    } while (arg_8h == NULL);\n    iVar1 = *arg_8h;\n    iVar2 = arg_8h[2];\n    *(param_1 + 4) = iVar1;\n    if (iVar1 == 0) {\n        *(param_1 + 8) = 0;\n    }\n    else {\n        *(iVar1 + 4) = 0;\n    }\n    fcn.00424e2f(arg_8h);\n    return iVar2;\n}\n",
        "token_count": 229
    },
    "00424ecc": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00424ecc(int32_t arg_8h, uint *arg_ch)\n\n{\n    int32_t in_ECX;\n    \n    if (arg_ch != NULL) goto code_r0x00424ee5;\n    for (arg_ch = *(in_ECX + 4); (arg_ch != NULL && (arg_ch[2] != arg_8h)); arg_ch = *arg_ch) {\ncode_r0x00424ee5:\n    }\n    return;\n}\n",
        "token_count": 106
    },
    "004250fd": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004250fd(uint lpFileTime, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint *in_ECX;\n    uint lpSystemTime;\n    uint lpLocalFileTime;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_FileTimeToLocalFileTime)(lpFileTime, &lpLocalFileTime);\n    if (iVar1 != 0) goto code_r0x0042512a;\n    do {\n        *in_ECX = 0;\n        in_ECX[1] = 0;\n        lpFileTime = 0x80070057;\n        fcn.00401090();\ncode_r0x0042512a:\n        iVar1 = (*_sym.imp.KERNEL32.dll_FileTimeToSystemTime)(&lpLocalFileTime, &lpSystemTime, lpFileTime);\n    } while (iVar1 == 0);\n    fcn.004250a0(&lpSystemTime, arg_ch);\n    *in_ECX = var_8h;\n    in_ECX[1] = var_4h;\n    return;\n}\n",
        "token_count": 248
    },
    "0042548a": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042548a(int32_t *param_1)\n\n{\n    int32_t *piVar1;\n    \n    if (param_1 != NULL) {\n        do {\n            piVar1 = *param_1;\n            fcn.00419316(param_1);\n            param_1 = piVar1;\n        } while (piVar1 != NULL);\n    }\n    return;\n}\n",
        "token_count": 89
    },
    "004255f0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004255f0(int32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    uint *puVar2;\n    uint *puVar3;\n    int32_t *in_ECX;\n    int32_t arg_8h_00;\n    uint var_4h;\n    \n    arg_8h_00 = *in_ECX;\n    if (arg_8h_00 == 0) {\n        var_4h = 0;\n    }\n    else {\n        if (arg_8h_00 == arg_8h) {\n            piVar1 = fcn.004255b8(arg_8h);\n            *in_ECX = *piVar1;\n        }\n        else {\n            do {\n                piVar1 = fcn.004255b8(arg_8h_00);\n                if (*piVar1 == arg_8h) break;\n                piVar1 = fcn.004255b8(arg_8h_00);\n                arg_8h_00 = *piVar1;\n            } while (arg_8h_00 != 0);\n            if (arg_8h_00 == 0) {\n                return 0;\n            }\n            puVar2 = fcn.004255b8(arg_8h);\n            puVar3 = fcn.004255b8(arg_8h_00);\n            *puVar3 = *puVar2;\n        }\n        var_4h = 1;\n    }\n    return var_4h;\n}\n",
        "token_count": 332
    },
    "004257b8": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004257b8(int32_t arg_8h)\n\n{\n    uint32_t *puVar1;\n    uint *puVar2;\n    int32_t in_ECX;\n    int32_t iVar3;\n    uint var_4h;\n    \n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(in_ECX + 0x1c);\n    if ((0 < arg_8h) && (arg_8h < *(in_ECX + 0xc))) {\n        for (iVar3 = *(in_ECX + 0x14); iVar3 != 0; iVar3 = *(iVar3 + 4)) {\n            if (arg_8h < *(iVar3 + 8)) {\n                puVar2 = *(*(iVar3 + 0xc) + arg_8h * 4);\n                if (puVar2 != NULL) {\n                    (***puVar2)(1);\n                }\n                *(*(iVar3 + 0xc) + arg_8h * 4) = 0;\n            }\n        }\n        puVar1 = *(in_ECX + 0x10) + arg_8h * 8;\n        *puVar1 = *puVar1 & 0xfffffffe;\n    }\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(in_ECX + 0x1c);\n    return;\n}\n",
        "token_count": 297
    },
    "00426024": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.00426024(uint32_t arg_8h, uint32_t *arg_ch, uint32_t *arg_10h)\n\n{\n    uint *puVar1;\n    int32_t in_ECX;\n    uint32_t uVar2;\n    \n    *arg_10h = arg_8h >> 4;\n    uVar2 = (arg_8h >> 4) % *(in_ECX + 8);\n    *arg_ch = uVar2;\n    if (*(in_ECX + 4) != 0) {\n        for (puVar1 = *(*(in_ECX + 4) + uVar2 * 4); puVar1 != NULL; puVar1 = *puVar1) {\n            if (puVar1[1] == arg_8h) {\n                return puVar1;\n            }\n        }\n    }\n    return NULL;\n}\n",
        "token_count": 195
    },
    "0042605f": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0042605f(uint32_t arg_8h)\n\n{\n    int32_t in_ECX;\n    int32_t extraout_ECX;\n    uint *puVar1;\n    \n    if (in_ECX == 0) {\n        fcn.0041944d();\n        in_ECX = extraout_ECX;\n    }\n    if (*(in_ECX + 4) != 0) {\n        for (puVar1 = *(*(in_ECX + 4) + ((arg_8h >> 4) % *(in_ECX + 8)) * 4); puVar1 != NULL; puVar1 = *puVar1) {\n            if (puVar1[1] == arg_8h) {\n                return puVar1[2];\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 183
    },
    "004260cd": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.004260cd(uint32_t arg_8h)\n\n{\n    uint *puVar1;\n    uint *arg_8h_00;\n    int32_t in_ECX;\n    uint *puVar2;\n    \n    if (*(in_ECX + 4) == 0) {\n        arg_8h_00 = NULL;\n    }\n    else {\n        puVar2 = *(in_ECX + 4) + ((arg_8h >> 4) % *(in_ECX + 8)) * 4;\n        puVar1 = *puVar2;\n        while (arg_8h_00 = puVar1,  arg_8h_00 != NULL) {\n            if (arg_8h_00[1] == arg_8h) {\n                *puVar2 = *arg_8h_00;\n                fcn.00426006(arg_8h_00);\n                return 0x1;\n            }\n            puVar2 = arg_8h_00;\n            puVar1 = *arg_8h_00;\n        }\n    }\n    return arg_8h_00;\n}\n",
        "token_count": 249
    },
    "00426cae": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00426cae(int32_t hWnd, uint lpPoint, uint arg_10h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint uVar4;\n    uint lpRect;\n    \n    (*_sym.imp.USER32.dll_ClientToScreen)(hWnd, &lpPoint);\n    pcVar1 = _sym.imp.USER32.dll_GetWindow;\n    uVar4 = 5;\n    do {\n        hWnd = (*pcVar1)(hWnd, uVar4);\n        if (hWnd == 0) {\n            return 0;\n        }\n        iVar2 = (*_sym.imp.USER32.dll_GetDlgCtrlID)(hWnd);\n        if ((iVar2 != 0xffff) &&\n           (uVar3 = (*_sym.imp.USER32.dll_GetWindowLongA)(hWnd, 0xfffffff0),  (uVar3 & 0x10000000) != 0)) {\n            (*_sym.imp.USER32.dll_GetWindowRect)(hWnd, &lpRect);\n            iVar2 = (*_sym.imp.USER32.dll_PtInRect)(&lpRect, lpPoint, arg_10h);\n            if (iVar2 != 0) {\n                return hWnd;\n            }\n        }\n        uVar4 = 2;\n    } while( true );\n}\n",
        "token_count": 293
    },
    "00426dc6": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00426dc6(int32_t param_1)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar2 = (*_sym.imp.USER32.dll_GetCapture)();\n    pcVar1 = _sym.imp.USER32.dll_SendMessageA;\n    for (; iVar2 != 0; iVar2 = fcn.004224a4(iVar2)) {\n        iVar3 = (*pcVar1)(iVar2, 0x365, 0, 0);\n        if (iVar3 != 0) {\n            return;\n        }\n    }\n    for (iVar2 = (*_sym.imp.USER32.dll_GetFocus)(); iVar2 != 0; iVar2 = fcn.004224a4(iVar2)) {\n        iVar3 = (*pcVar1)(iVar2, 0x365, 0, 0);\n        if (iVar3 != 0) {\n            return;\n        }\n    }\n    iVar2 = fcn.004224ee();\n    if (iVar2 == 0) {\n        iVar2 = fcn.0041944d();\n    }\n    iVar2 = (*_sym.imp.USER32.dll_GetLastActivePopup)(*(iVar2 + 0x20));\n    while( true ) {\n        if (iVar2 == 0) {\n            (*pcVar1)(*(param_1 + 0x20), 0x111, 0xe147, 0);\n            return;\n        }\n        iVar3 = (*pcVar1)(iVar2, 0x365, 0, 0);\n        if (iVar3 != 0) break;\n        iVar2 = fcn.004224a4(iVar2);\n    }\n    return;\n}\n",
        "token_count": 391
    },
    "00426ed9": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00426ed9(int16_t *arg_8h)\n\n{\n    int16_t iVar1;\n    \n    do {\n        iVar1 = *arg_8h;\n        arg_8h = arg_8h + 1;\n    } while (iVar1 != 0);\n    return;\n}\n",
        "token_count": 70
    },
    "00427b7f": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __cdecl fcn.00427b7f(uint arg_8h)\n\n{\n    uint arg_ch;\n    int32_t iVar1;\n    uint uVar2;\n    uint *puVar3;\n    int32_t extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.0042cbc6(0xc);\n    if ((~*(extraout_ECX + 0x18) & 1) == 0) {\n        if (*(extraout_ECX + 0x38) != 0) goto code_r0x00427c6d;\n        iVar1 = fcn.004192dc(0x14);\n        *(unaff_EBP + -0x18) = iVar1;\n        *(unaff_EBP + -4) = 1;\n        if (iVar1 == 0) {\n            uVar2 = 0;\n        }\n        else {\n            uVar2 = fcn.00428421();\n        }\n        arg_ch = *(extraout_ECX + 0x40);\n        *(unaff_EBP + -4) = 0xffffffff;\n        *(extraout_ECX + 0x38) = uVar2;\n        fcn.00428448(1, arg_ch);\n        iVar1 = *(extraout_ECX + 0x38);\n        if (0 < *(iVar1 + 8)) goto code_r0x00427c46;\n        do {\n            iVar1 = fcn.0041944d();\ncode_r0x00427c46:\n            **(iVar1 + 4) = 0;\n            *(extraout_ECX + 0x34) = 1;\n            *(unaff_EBP + -0x10) = 0;\n            fcn.00427aab(unaff_EBP + -0x10);\n            *(unaff_EBP + -0x18) = 0;\n            fcn.0042794d(0, unaff_EBP + -0x18, 1);\ncode_r0x00427c6d:\n            if (*(unaff_EBP + 8) == 0) goto code_r0x00427cb6;\n            fcn.004277e7();\n            fcn.0042856e(*(extraout_ECX + 0x34), *(unaff_EBP + 8), 1);\n            *(unaff_EBP + -0x14) = 0;\n            fcn.004260a4(1, unaff_EBP + -0x14);\n        } while (*(unaff_EBP + -0x14) == 0);\n        uVar2 = *(extraout_ECX + 0x34);\n        *(unaff_EBP + 8) = 2;\n        fcn.0042794d(uVar2, unaff_EBP + 8, 1);\n    }\n    else {\n        if (*(extraout_ECX + 0x38) == 0) {\n            iVar1 = fcn.004192dc(0x1c);\n            *(unaff_EBP + -0x18) = iVar1;\n            *(unaff_EBP + -4) = 0;\n            if (iVar1 == 0) {\n                uVar2 = 0;\n            }\n            else {\n                uVar2 = fcn.00426198(*(extraout_ECX + 0x40));\n            }\n            *(unaff_EBP + -4) = 0xffffffff;\n            *(extraout_ECX + 0x38) = uVar2;\n            fcn.00425f7b(*(extraout_ECX + 0x44), 1);\n            puVar3 = fcn.00426226(0);\n            *puVar3 = 0;\n            *(extraout_ECX + 0x34) = 1;\n        }\n        if (*(unaff_EBP + 8) == 0) goto code_r0x00427cb6;\n        fcn.004277e7();\n        puVar3 = fcn.00426226(*(unaff_EBP + 8));\n        *puVar3 = *(extraout_ECX + 0x34);\n    }\n    *(extraout_ECX + 0x34) = *(extraout_ECX + 0x34) + 1;\ncode_r0x00427cb6:\n    fcn.0042cc9e();\n    return;\n}\n",
        "token_count": 1043
    },
    "00430c20": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint32_t * fcn.00430c20(uint32_t *param_1, char param_2)\n\n{\n    uint32_t uVar1;\n    char cVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t *puVar5;\n    \n    uVar1 = param_1 & 3;\n    while (uVar1 != 0) {\n        if (*param_1 == param_2) {\n            return param_1;\n        }\n        if (*param_1 == '\\0') {\n            return NULL;\n        }\n        uVar1 = param_1 + 1 & 3;\n        param_1 = param_1 + 1;\n    }\n    while( true ) {\n        while( true ) {\n            uVar1 = *param_1;\n            uVar4 = uVar1 ^ CONCAT22(CONCAT11(param_2, param_2), CONCAT11(param_2, param_2));\n            uVar3 = uVar1 ^ 0xffffffff ^ uVar1 + 0x7efefeff;\n            puVar5 = param_1 + 1;\n            if (((uVar4 ^ 0xffffffff ^ uVar4 + 0x7efefeff) & 0x81010100) != 0) break;\n            param_1 = puVar5;\n            if ((uVar3 & 0x81010100) != 0) {\n                if ((uVar3 & 0x1010100) != 0) {\n                    return NULL;\n                }\n                if ((uVar1 + 0x7efefeff & 0x80000000) == 0) {\n                    return NULL;\n                }\n            }\n        }\n        uVar1 = *param_1;\n        if (uVar1 == param_2) {\n            return param_1;\n        }\n        if (uVar1 == '\\0') {\n            return NULL;\n        }\n        cVar2 = uVar1 >> 8;\n        if (cVar2 == param_2) {\n            return param_1 + 1;\n        }\n        if (cVar2 == '\\0') break;\n        cVar2 = uVar1 >> 0x10;\n        if (cVar2 == param_2) {\n            return param_1 + 2;\n        }\n        if (cVar2 == '\\0') {\n            return NULL;\n        }\n        cVar2 = uVar1 >> 0x18;\n        if (cVar2 == param_2) {\n            return param_1 + 3;\n        }\n        param_1 = puVar5;\n        if (cVar2 == '\\0') {\n            return NULL;\n        }\n    }\n    return NULL;\n}\n",
        "token_count": 591
    },
    "00430cde": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00430cde(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *arg_8h_00;\n    int32_t *piVar3;\n    int32_t *piVar4;\n    int32_t unaff_EBP;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.0042d024(0x44b9c8, 0xc);\n    fcn.00434bd1(0xe);\n    *(unaff_EBP + -4) = 0;\n    arg_8h_00 = *0x453e3c;\n    iVar1 = *(unaff_EBP + 8);\n    iVar2 = *(iVar1 + 4);\n    if (iVar2 != 0) {\n        piVar3 = 0x453e38;\n        do {\n            piVar4 = piVar3;\n            *(unaff_EBP + -0x1c) = arg_8h_00;\n            if (arg_8h_00 == NULL) goto code_r0x00430d22;\n            piVar3 = arg_8h_00;\n        } while (*arg_8h_00 != iVar2);\n        piVar4[1] = arg_8h_00[1];\n        fcn.0042b954(arg_8h_00);\ncode_r0x00430d22:\n        fcn.0042b954(*(iVar1 + 4));\n        *(iVar1 + 4) = 0;\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    fcn.00430d45();\n    fcn.0042d069();\n    return;\n}\n",
        "token_count": 400
    },
    "00406a80": {
        "rules": [
            "extract resource via kernel32 functions"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: hWnd\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: hResData\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_24h\n\nvoid fcn.00406a80(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t *piVar3;\n    uint32_t uVar4;\n    int32_t *arg_8h;\n    int32_t unaff_EBP;\n    uint uVar5;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint hResData;\n    uint hWnd;\n    uint var_4h;\n    \n    fcn.0042cbf9(0x24);\n    *(unaff_EBP + -0x20) = arg_8h;\n    *(unaff_EBP + -0x1c) = arg_8h[0x18];\n    *(unaff_EBP + -0x18) = arg_8h[0x17];\n    iVar1 = fcn.0041a00a();\n    uVar5 = *(iVar1 + 0xc);\n    if (arg_8h[0x16] != 0) {\n        iVar1 = fcn.0041a00a();\n        uVar5 = *(iVar1 + 0xc);\n        uVar2 = (*_sym.imp.KERNEL32.dll_FindResourceA)(uVar5, arg_8h[0x16], 5);\n        uVar2 = (*_sym.imp.KERNEL32.dll_LoadResource)(uVar5, uVar2);\n        *(unaff_EBP + -0x18) = uVar2;\n    }\n    if (*(unaff_EBP + -0x18) != 0) {\n        uVar2 = (*_sym.imp.KERNEL32.dll_LockResource)(*(unaff_EBP + -0x18));\n        *(unaff_EBP + -0x1c) = uVar2;\n    }\n    if (*(unaff_EBP + -0x1c) != 0) {\n        uVar2 = fcn.0041cccc();\n        *(unaff_EBP + -0x14) = uVar2;\n        fcn.0042128d();\n        *(unaff_EBP + -0x28) = 0;\n        *(unaff_EBP + -0x2c) = 0;\n        *(unaff_EBP + -0x24) = 0;\n        if (((*(unaff_EBP + -0x14) != 0) &&\n            (iVar1 = (*_sym.imp.USER32.dll_GetDesktopWindow)(),  *(unaff_EBP + -0x14) != iVar1)) &&\n           (iVar1 = (*_sym.imp.USER32.dll_IsWindowEnabled)(*(unaff_EBP + -0x14)),  iVar1 != 0)) {\n            (*_sym.imp.USER32.dll_EnableWindow)(*(unaff_EBP + -0x14), 0);\n            *(unaff_EBP + -0x2c) = 1;\n            piVar3 = fcn.0041c10b();\n            *(unaff_EBP + -0x24) = piVar3;\n            if (((piVar3 != NULL) && (iVar1 = (**(*piVar3 + 0x128))(),  iVar1 != 0)) &&\n               (iVar1 = fcn.0041b0aa(),  iVar1 != 0)) {\n                fcn.0041b0c5(0);\n                *(unaff_EBP + -0x28) = 1;\n            }\n        }\n        *(unaff_EBP + -4) = 0;\n        fcn.00422cc5(arg_8h);\n        uVar2 = fcn.004211d4(*(unaff_EBP + -0x14));\n        iVar1 = fcn.0041cfa0(*(unaff_EBP + -0x1c), uVar2, uVar5);\n        if (iVar1 != 0) {\n            if ((*(arg_8h + 0xf) & 0x10) != 0) {\n                uVar5 = 4;\n                uVar4 = fcn.0041afdc();\n                if ((uVar4 & 0x100) != 0) {\n                    uVar5 = 5;\n                }\n                fcn.00420d91(uVar5);\n            }\n            if (arg_8h[8] != 0) {\n                fcn.0041b151(0, 0, 0, 0, 0, 0x97);\n            }\n        }\n        *(unaff_EBP + -4) = 0xffffffff;\n        if (*(unaff_EBP + -0x28) != 0) {\n            fcn.0041b0c5(1);\n        }\n        if (*(unaff_EBP + -0x2c) != 0) {\n            (*_sym.imp.USER32.dll_EnableWindow)(*(unaff_EBP + -0x14), 1);\n        }\n        if ((*(unaff_EBP + -0x14) != 0) && (iVar1 = (*_sym.imp.USER32.dll_GetActiveWindow)(),  iVar1 == arg_8h[8])) {\n            (*_sym.imp.USER32.dll_SetActiveWindow)(*(unaff_EBP + -0x14));\n        }\n        (**(*arg_8h + 0x60))();\n        fcn.0041cd08();\n        if (arg_8h[0x16] != 0) {\n            (*_sym.imp.KERNEL32.dll_FreeResource)(*(unaff_EBP + -0x18));\n        }\n    }\n    fcn.0042cc9e();\n    return;\n}\n",
        "token_count": 1360
    },
    "0041d34f": {
        "rules": [
            "extract resource via kernel32 functions"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041d34f(uint hResData, uint arg_ch, uint arg_10h)\n\n{\n    uint arg_8h;\n    \n    arg_8h = (*_sym.imp.KERNEL32.dll_LockResource)(hResData);\n    fcn.0041d322(arg_8h, arg_ch, 0, arg_10h);\n    return;\n}\n",
        "token_count": 86
    },
    "00423edd": {
        "rules": [
            "extract resource via kernel32 functions"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00423edd(int32_t lpName)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t arg_8h;\n    uint var_4h;\n    \n    iVar3 = 0;\n    arg_8h = 0;\n    if (lpName != 0) {\n        iVar1 = fcn.0041a00a();\n        uVar2 = *(iVar1 + 0xc);\n        iVar1 = (*_sym.imp.KERNEL32.dll_FindResourceA)(uVar2, lpName, 0xf0);\n        if (iVar1 != 0) {\n            iVar3 = (*_sym.imp.KERNEL32.dll_LoadResource)(uVar2, iVar1);\n            if (iVar3 == 0) {\n                return 0;\n            }\n            arg_8h = (*_sym.imp.KERNEL32.dll_LockResource)(iVar3);\n        }\n    }\n    uVar2 = fcn.00423a57(arg_8h);\n    if ((arg_8h != 0) && (iVar3 != 0)) {\n        (*_sym.imp.KERNEL32.dll_FreeResource)(iVar3);\n    }\n    return uVar2;\n}\n",
        "token_count": 269
    },
    "004121b0": {
        "rules": [
            "delete file"
        ],
        "decompiled_code": "\nuint fcn.004121b0(uint param_1)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_DeleteFileA)(param_1);\n    if (iVar1 == 0) {\n        if (param_1 != '\\0') {\n            fcn.0040bc60(0x71, param_1);\n        }\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 96
    },
    "004120c0": {
        "rules": [
            "create directory"
        ],
        "decompiled_code": "\nbool fcn.004120c0(uint param_1)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_CreateDirectoryA)(param_1, 0);\n    return iVar1 != 0;\n}\n",
        "token_count": 55
    },
    "004121e0": {
        "rules": [
            "move file"
        ],
        "decompiled_code": "\nuint fcn.004121e0(uint param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_MoveFileA)(param_1, param_2);\n    if (iVar1 == 0) {\n        if (param_1 != '\\0') {\n            fcn.0040bc60(0x72, param_1);\n        }\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 105
    },
    "0041ec84": {
        "rules": [
            "link function at runtime on Windows",
            "link many functions at runtime"
        ],
        "decompiled_code": "\nbool fcn.0041ec84(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    \n    if (*0x45377c != 0) {\n        return *0x453770 != 0;\n    }\n    *0x453780 = fcn.0041ec2a();\n    iVar2 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(\"USER32\");\n    pcVar1 = _sym.imp.KERNEL32.dll_GetProcAddress;\n    if (((((iVar2 != 0) && (*0x453760 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, 0x4444c0),  *0x453760 != 0)) &&\n         (*0x453764 = (*pcVar1)(iVar2, \"MonitorFromWindow\"),  *0x453764 != 0)) &&\n        ((*0x453768 = (*pcVar1)(iVar2, \"MonitorFromRect\"),  *0x453768 != 0 &&\n         (*0x45376c = (*pcVar1)(iVar2, \"MonitorFromPoint\"),  *0x45376c != 0)))) &&\n       ((*0x453774 = (*pcVar1)(iVar2, \"EnumDisplayMonitors\"),  *0x453774 != 0 &&\n        ((*0x453770 = (*pcVar1)(iVar2, \"GetMonitorInfoA\"),  *0x453770 != 0 &&\n         (*0x453778 = (*pcVar1)(iVar2, \"EnumDisplayDevicesA\"),  *0x453778 != 0)))))) {\n        *0x45377c = 1;\n        return true;\n    }\n    *0x453760 = 0;\n    *0x453764 = 0;\n    *0x453768 = 0;\n    *0x45376c = 0;\n    *0x453770 = 0;\n    *0x453774 = 0;\n    *0x453778 = 0;\n    *0x45377c = 1;\n    return false;\n}\n",
        "token_count": 447
    },
    "004198da": {
        "rules": [
            "set application hook"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004198da(code **param_1)\n\n{\n    code *pcVar1;\n    \n    pcVar1 = _sym.imp.USER32.dll_UnhookWindowsHookEx;\n    *param_1 = vtable._AFX_THREAD_STATE.0;\n    if (param_1[0xb] != NULL) {\n        (*pcVar1)(param_1[0xb]);\n    }\n    if (param_1[10] != NULL) {\n        (*pcVar1)(param_1[10]);\n    }\n    if (param_1[3] != NULL) {\n        fcn.0042b954(param_1[3]);\n    }\n    return;\n}\n",
        "token_count": 146
    },
    "00426437": {
        "rules": [
            "set application hook"
        ],
        "decompiled_code": "\nvoid fcn.00426437(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    fcn.00426398();\n    iVar2 = fcn.0041a00a();\n    if ((*(iVar2 + 4) != 0) && (pcVar1 = *(*(iVar2 + 4) + 0x3c),  pcVar1 != NULL)) {\n        (*pcVar1)(1, 0);\n    }\n    iVar2 = fcn.0041a03d();\n    if ((*(iVar2 + 0x3c) != NULL) && (iVar3 = (**(**(iVar2 + 0x3c) + 0x144))(),  iVar3 != 0)) {\n        *(iVar2 + 0x3c) = 0;\n    }\n    iVar2 = fcn.00419a3e();\n    iVar3 = fcn.0041a00a();\n    pcVar1 = _sym.imp.USER32.dll_UnhookWindowsHookEx;\n    if (*(iVar3 + 0x14) == '\\0') {\n        if (*(iVar2 + 0x2c) != 0) {\n            (*_sym.imp.USER32.dll_UnhookWindowsHookEx)(*(iVar2 + 0x2c));\n            *(iVar2 + 0x2c) = 0;\n        }\n        if (*(iVar2 + 0x28) != 0) {\n            (*pcVar1)(*(iVar2 + 0x28));\n            *(iVar2 + 0x28) = 0;\n        }\n    }\n    return;\n}\n",
        "token_count": 358
    },
    "0041b333": {
        "rules": [
            "write file on Windows"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041b333(uint lpBuffer, int32_t lpNumberOfBytesWritten)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint arg_8h;\n    int32_t in_ECX;\n    \n    iVar1 = lpNumberOfBytesWritten;\n    if (lpNumberOfBytesWritten != 0) {\n        iVar2 = (*_sym.imp.KERNEL32.dll_WriteFile)\n                          (*(in_ECX + 4), lpBuffer, lpNumberOfBytesWritten, &lpNumberOfBytesWritten, 0);\n        if (iVar2 == 0) {\n            arg_8h = (*_sym.imp.KERNEL32.dll_GetLastError)(*(in_ECX + 0xc));\n            fcn.00424dea(arg_8h, lpBuffer);\n        }\n        if (lpNumberOfBytesWritten != iVar1) {\n            fcn.00424da4(0xd, 0xffffffff, *(in_ECX + 0xc));\n        }\n    }\n    return;\n}\n",
        "token_count": 214
    },
    "004254d3": {
        "rules": [
            "get thread local storage value"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004254d3(int32_t arg_8h)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint *in_ECX;\n    \n    puVar1 = in_ECX + 7;\n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(puVar1);\n    if ((((0 < arg_8h) && (arg_8h < in_ECX[3])) && (iVar3 = (*_sym.imp.KERNEL32.dll_TlsGetValue)(*in_ECX),  iVar3 != 0))\n       && (arg_8h < *(iVar3 + 8))) {\n        uVar2 = *(*(iVar3 + 0xc) + arg_8h * 4);\n        (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(puVar1);\n        return uVar2;\n    }\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(puVar1);\n    return 0;\n}\n",
        "token_count": 214
    }
}