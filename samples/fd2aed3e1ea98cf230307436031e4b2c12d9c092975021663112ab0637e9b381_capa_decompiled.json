{
    "00402774": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00402774(code **param_1)\n\n{\n    *param_1 = vtable.std::exception.0;\n    if (param_1[2] != NULL) {\n        fcn.00404ea5(param_1[1]);\n    }\n    return;\n}\n",
        "token_count": 64
    },
    "00401660": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401660(uint arg_8h, int32_t arg_ch)\n\n{\n    uint arg_10h;\n    int32_t in_ECX;\n    \n    if ((arg_8h != '\\0') && (0xf < *(in_ECX + 0x18))) {\n        arg_10h = *(in_ECX + 4);\n        if (arg_ch != 0) {\n            fcn.00402909(in_ECX + 4, 0x10, arg_10h, arg_ch);\n        }\n        fcn.004028fe(arg_10h);\n    }\n    *(in_ECX + 0x14) = arg_ch;\n    *(in_ECX + 0x18) = 0xf;\n    *(in_ECX + 4 + arg_ch) = 0;\n    return;\n}\n",
        "token_count": 184
    },
    "004019c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nbool __cdecl fcn.004019c0(uint32_t arg_8h, uint arg_ch)\n\n{\n    uint32_t uVar1;\n    uint arg_10h;\n    int32_t in_ECX;\n    uint unaff_EBX;\n    uint unaff_EBP;\n    uint unaff_ESI;\n    uint32_t arg_14h;\n    uint unaff_retaddr;\n    uint in_stack_0000000c;\n    uint in_stack_00000010;\n    uint in_stack_00000014;\n    uint in_stack_00000018;\n    uint in_stack_0000001c;\n    uint in_stack_00000020;\n    uint in_stack_00000024;\n    uint in_stack_00000028;\n    uint in_stack_0000002c;\n    \n    if (arg_8h == 0xffffffff) {\n        fcn.0040234a();\n    }\n    uVar1 = *(in_ECX + 0x18);\n    if (uVar1 < arg_8h) {\n        fcn.00401c20(arg_8h, *(in_ECX + 0x14), unaff_ESI, unaff_EBX, unaff_EBP, unaff_retaddr, arg_8h, arg_ch, \n                     in_stack_0000000c, in_stack_00000010, in_stack_00000014, in_stack_00000018, in_stack_0000001c, \n                     in_stack_00000020, in_stack_00000024, in_stack_00000028, in_stack_0000002c);\n        return arg_8h != 0;\n    }\n    if ((arg_ch != '\\0') && (arg_8h < 0x10)) {\n        arg_14h = *(in_ECX + 0x14);\n        if (arg_8h < *(in_ECX + 0x14)) {\n            arg_14h = arg_8h;\n        }\n        if (0xf < uVar1) {\n            arg_10h = *(in_ECX + 4);\n            if (arg_14h != 0) {\n                fcn.00402909(in_ECX + 4, 0x10, arg_10h, arg_14h);\n            }\n            fcn.004028fe(arg_10h);\n        }\n        *(in_ECX + 0x14) = arg_14h;\n        *(in_ECX + 0x18) = 0xf;\n        *(in_ECX + 4 + arg_14h) = 0;\n        return arg_8h != 0;\n    }\n    if (arg_8h == 0) {\n        *(in_ECX + 0x14) = 0;\n        if (0xf < uVar1) {\n            **(in_ECX + 4) = 0;\n            return false;\n        }\n        *(in_ECX + 4) = 0;\n    }\n    return arg_8h != 0;\n}\n",
        "token_count": 653
    },
    "00401c20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch_2\n// WARNING: Could not reconcile some variable overlaps\n\nuint * __cdecl\nfcn.00401c20(uint noname_0, int32_t noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6\n            , uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, \n            uint noname_13, uint noname_14, uint noname_15, uint arg_8h)\n\n{\n    uint32_t uVar1;\n    uint *arg_8h_00;\n    int32_t arg_10h;\n    uint *puVar2;\n    int32_t in_ECX;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint *in_FS_OFFSET;\n    uint32_t var_4h;\n    uint var_8h;\n    uint var_ch;\n    uint var_10h;\n    code *apcStack44 [3];\n    uint32_t var_28h;\n    uint auStack28 [2];\n    uchar *var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h_2;\n    uint var_ch_2;\n    \n    var_14h = 0x885620;\n    var_18h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_18h;\n    var_1ch = &stack0xffffffc8;\n    uVar4 = var_4h | 0xf;\n    uVar5 = var_4h;\n    if (uVar4 != 0xffffffff) {\n        uVar1 = *(in_ECX + 0x18);\n        uVar3 = uVar1 >> 1;\n        uVar5 = uVar4;\n        if ((uVar4 / 3 < uVar3) && (uVar1 <= -uVar3 - 2)) {\n            uVar5 = uVar3 + uVar1;\n        }\n    }\n    uVar4 = uVar5 + 1;\n    var_10h_2 = 0;\n    if (uVar4 == 0) {\n        uVar4 = 0;\n    }\n    else if (0xffffffff / uVar4 == 0) {\n        auStack28[0] = 0;\n        fcn.0040264c(auStack28);\n        apcStack44[0] = vtable.std::bad_alloc.0;\n        fcn.00402d6b(apcStack44, 0x889a68);\n        var_28h = var_4h;\n        var_10h_2 = CONCAT31(var_10h_2._1_3_, 2);\n        var_1ch = &stack0xffffffbc;\n        fcn.00401e00(var_4h + 1);\n        return 0x401ce5;\n    }\n    var_1ch = &stack0xffffffc8;\n    arg_8h_00 = fcn.00402a7d(uVar4);\n    if (noname_1 != 0) {\n        if (*(in_ECX + 0x18) < 0x10) {\n            arg_10h = in_ECX + 4;\n        }\n        else {\n            arg_10h = *(in_ECX + 4);\n        }\n        fcn.00402909(arg_8h_00, uVar5 + 1, arg_10h, noname_1);\n    }\n    if (0xf < *(in_ECX + 0x18)) {\n        fcn.004028fe();\n    }\n    puVar2 = in_ECX + 4;\n    *puVar2 = 0;\n    *puVar2 = arg_8h_00;\n    *(in_ECX + 0x18) = uVar5;\n    *(in_ECX + 0x14) = noname_1;\n    if (0xf < uVar5) {\n        puVar2 = arg_8h_00;\n    }\n    *(puVar2 + noname_1) = 0;\n    *in_FS_OFFSET = var_18h;\n    return puVar2;\n}\n",
        "token_count": 959
    },
    "00401e00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401e00(uint32_t arg_8h)\n\n{\n    code *pcVar1;\n    uint32_t arg_8h_00;\n    code *var_ch;\n    \n    if (arg_8h == 0) {\n        arg_8h_00 = 0;\n    }\n    else {\n        arg_8h_00 = arg_8h;\n        if (0xffffffff / arg_8h == 0) {\n            arg_8h = 0;\n            fcn.0040264c(&arg_8h);\n            var_ch = vtable.std::bad_alloc.0;\n            fcn.00402d6b(&var_ch, 0x889a68);\n            pcVar1 = swi(3);\n            (*pcVar1)();\n            return;\n        }\n    }\n    fcn.00402a7d(arg_8h_00);\n    return;\n}\n",
        "token_count": 200
    },
    "00401f70": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00401f70(uint32_t param_1)\n\n{\n    uint32_t extraout_ECX;\n    code *var_10h;\n    uint var_4h;\n    \n    if (0xffffffff / param_1 == 0) {\n        var_4h = 0;\n        fcn.0040264c(&var_4h);\n        var_10h = vtable.std::bad_alloc.0;\n        fcn.00402d6b(&var_10h, 0x889a68);\n        param_1 = extraout_ECX;\n    }\n    fcn.00402a7d(param_1);\n    return;\n}\n",
        "token_count": 147
    },
    "null": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "",
        "token_count": 0
    },
    "00402f46": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.00402f46(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, uint noname_13\n            , uint noname_14, uint arg_8h, uint arg_ch, uint noname_17, uint noname_18, uint arg_18h, uint arg_1ch, \n            uint arg_20h)\n\n{\n    int32_t iVar1;\n    int32_t *in_FS_OFFSET;\n    uint *var_8h_3;\n    uint *var_ch_2;\n    uint var_10h_2;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    uint var_38h;\n    uint *var_34h;\n    uint var_30h;\n    code *var_2ch;\n    uint *var_28h_2;\n    code *pcStack40;\n    uint32_t uStack36;\n    uint uStack32;\n    uint *puStack28;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uchar *var_8h_2;\n    int32_t var_4h_2;\n    \n    var_8h_2 = &stack0xfffffffc;\n    puStack16 = &stack0xffffffc0;\n    if (var_8h_3 == 0x123) {\n        *var_ch_2 = 0x402ff1;\n        var_38h = 1;\n    }\n    else {\n        pcStack40 = fcn.0040301d;\n        uStack36 = *0x88b3a0 ^ &fcn.00402f46::var_28h_2;\n        uStack32 = var_24h;\n        puStack28 = var_ch_2;\n        uStack24 = var_20h;\n        uStack20 = var_1ch;\n        var_4h_2 = 0;\n        var_28h_2 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &fcn.00402f46::var_28h_2;\n        var_34h = var_8h_3;\n        var_30h = var_10h_2;\n        iVar1 = fcn.00406bad();\n        var_2ch = *(iVar1 + 0x80);\n        (*var_2ch)(*var_8h_3, &fcn.00402f46::var_34h);\n        var_38h = 0;\n        if (var_4h_2 == 0) {\n            *in_FS_OFFSET = var_28h_2;\n        }\n        else {\n            *var_28h_2 = **in_FS_OFFSET;\n            *in_FS_OFFSET = var_28h_2;\n        }\n    }\n    return var_38h;\n}\n",
        "token_count": 724
    },
    "00403236": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00403236(uint arg_8h)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    int32_t in_ECX;\n    uint in_EDX;\n    uint unaff_EBX;\n    uint unaff_EBP;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    ushort in_ES;\n    ushort in_CS;\n    ushort in_SS;\n    ushort in_DS;\n    ushort in_FS;\n    ushort in_GS;\n    uint8_t in_AF;\n    uint8_t in_TF;\n    uint8_t in_IF;\n    uint8_t in_NT;\n    uint8_t in_AC;\n    uint8_t in_VIF;\n    uint8_t in_VIP;\n    uint8_t in_ID;\n    uint unaff_retaddr;\n    int32_t var_328h;\n    uint var_324h;\n    uint var_320h;\n    \n    if (in_ECX == *0x88b3a0) {\n        return;\n    }\n    *0x88ea78 = (in_NT & 1) * 0x4000 | SBORROW4(&stack0xfffffffc, 0x328) * 0x800 | (in_IF & 1) * 0x200 |\n                (in_TF & 1) * 0x100 | (&var_328h < 0) * 0x80 | (*0x10 == 0x32c) * 0x40 | (in_AF & 1) * 0x10 |\n                ((POPCOUNT(&var_328h & 0xff) & 1U) == 0) * 4 | &stack0xfffffffc < 0x328 | (in_ID & 1) * 0x200000 |\n                (in_VIP & 1) * 0x100000 | (in_VIF & 1) * 0x80000 | (in_AC & 1) * 0x40000;\n    *0x88ea7c = &arg_8h;\n    *0x88e9b8 = 0x10001;\n    *0x88e960 = 0xc0000409;\n    *0x88e964 = 1;\n    var_328h = *0x88b3a0;\n    var_324h = *0x88b3a4;\n    *0x88e96c = unaff_retaddr;\n    *0x88ea44 = in_GS;\n    *0x88ea48 = in_FS;\n    *0x88ea4c = in_ES;\n    *0x88ea50 = in_DS;\n    *0x88ea54 = unaff_EDI;\n    *0x88ea58 = unaff_ESI;\n    *0x88ea5c = unaff_EBX;\n    *0x88ea60 = in_EDX;\n    *0x88ea64 = in_ECX;\n    *0x88ea68 = in_EAX;\n    *0x88ea6c = unaff_EBP;\n    *0x88ea70 = unaff_retaddr;\n    *0x88ea74 = in_CS;\n    *0x88ea80 = in_SS;\n    *0x88e9b0 = (**0x8860c8)();\n    fcn.0040885b(1);\n    (**0x8860c4)(0);\n    (**0x8860c0)(0x886a8c);\n    if (*0x88e9b0 == 0) {\n        fcn.0040885b(1);\n    }\n    uVar1 = (**0x8860bc)(0xc0000409);\n    (**0x886020)(uVar1);\n    return;\n}\n",
        "token_count": 817
    },
    "00405b45": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Possible PIC construction at 0x00405c38: Changing call to branch\n// WARNING: Removing unreachable block (ram,0x00405c3d)\n// WARNING: Removing unreachable block (ram,0x00405c6b)\n// WARNING: Removing unreachable block (ram,0x00405c43)\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00405b45(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    code *pcVar4;\n    int32_t unaff_EBP;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.00406fac(0x889208, 0x18);\n    fcn.0040d9a5(8);\n    *(unaff_EBP + -4) = 0;\n    if (*0x88e51c != 1) {\n        *0x88e518 = 1;\n        *0x88e514 = *(unaff_EBP + 0x10);\n        if (*(unaff_EBP + 0xc) == 0) {\n            piVar1 = fcn.00406924(*0x892948);\n            *(unaff_EBP + -0x28) = piVar1;\n            if (piVar1 != NULL) {\n                piVar2 = fcn.00406924(*0x892944);\n                *(unaff_EBP + -0x24) = piVar2;\n                *(unaff_EBP + -0x1c) = piVar1;\n                *(unaff_EBP + -0x20) = piVar2;\n                while( true ) {\n                    piVar2 = piVar2 + -1;\n                    *(unaff_EBP + -0x24) = piVar2;\n                    if (piVar2 < piVar1) break;\n                    iVar3 = fcn.0040691b();\n                    if (*piVar2 != iVar3) {\n                        if (piVar2 < piVar1) break;\n                        pcVar4 = fcn.00406924(*piVar2);\n                        iVar3 = fcn.0040691b();\n                        *piVar2 = iVar3;\n                        (*pcVar4)();\n                        iVar3 = fcn.00406924(*0x892948);\n                        piVar1 = fcn.00406924(*0x892944);\n                        if ((*(unaff_EBP + -0x1c) != iVar3) || (*(unaff_EBP + -0x20) != piVar1)) {\n                            *(unaff_EBP + -0x1c) = iVar3;\n                            *(unaff_EBP + -0x28) = iVar3;\n                            *(unaff_EBP + -0x20) = piVar1;\n                            *(unaff_EBP + -0x24) = piVar1;\n                            piVar2 = piVar1;\n                        }\n                        piVar1 = *(unaff_EBP + -0x28);\n                    }\n                }\n            }\n            fcn.00405a07(0x88621c);\n        }\n        fcn.00405a07(0x886224);\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    if (*(unaff_EBP + 0x10) != 0) {\n        fcn.0040d8b3(8);\n    }\n    return;\n}\n",
        "token_count": 793
    },
    "0040735a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0040735a(uint arg_8h, uint noname_1, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    int32_t unaff_EBP;\n    int32_t iVar5;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.00406fac(0x889298, 0x10);\n    iVar1 = *(unaff_EBP + 0x10);\n    iVar2 = *(unaff_EBP + 8);\n    if (*(iVar1 + 4) < 0x81) {\n        iVar5 = *(iVar2 + 8);\n    }\n    else {\n        iVar5 = *(iVar2 + 8);\n    }\n    *(unaff_EBP + -0x1c) = iVar5;\n    iVar3 = fcn.00406bad();\n    *(iVar3 + 0x90) = *(iVar3 + 0x90) + 1;\n    *(unaff_EBP + -4) = 0;\n    while (iVar5 != *(unaff_EBP + 0x14)) {\n        if ((iVar5 < 0) || (*(iVar1 + 4) <= iVar5)) {\n            fcn.00408495();\n        }\n        iVar3 = iVar5 * 8;\n        piVar4 = *(iVar1 + 8) + iVar3;\n        iVar5 = *piVar4;\n        *(unaff_EBP + -0x20) = iVar5;\n        *(unaff_EBP + -4) = 1;\n        if (piVar4[1] != 0) {\n            *(iVar2 + 8) = iVar5;\n            fcn.004084e0(*(*(iVar1 + 8) + 4 + iVar3), iVar2, 0x103);\n        }\n        *(unaff_EBP + -4) = 0;\n        *(unaff_EBP + -0x1c) = iVar5;\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    fcn.00407420();\n    if (iVar5 != *(unaff_EBP + 0x14)) {\n        fcn.00408495();\n    }\n    *(iVar2 + 8) = iVar5;\n    fcn.00406ff1();\n    return;\n}\n",
        "token_count": 561
    },
    "00407420": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00407420(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00406bad();\n    if (0 < *(iVar1 + 0x90)) {\n        iVar1 = fcn.00406bad();\n        *(iVar1 + 0x90) = *(iVar1 + 0x90) + -1;\n    }\n    return;\n}\n",
        "token_count": 86
    },
    "00407ad1": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00407ad1(uint noname_0, uint noname_1, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t unaff_EBP;\n    int32_t *unaff_ESI;\n    int32_t unaff_EDI;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_1ch;\n    \n    *(unaff_EDI + -4) = *(unaff_EBP + -0x24);\n    fcn.00403184(*(unaff_EBP + -0x28));\n    iVar1 = fcn.00406bad();\n    *(iVar1 + 0x88) = *(unaff_EBP + -0x2c);\n    iVar1 = fcn.00406bad();\n    *(iVar1 + 0x8c) = *(unaff_EBP + -0x30);\n    if ((((*unaff_ESI == -0x1f928c9d) && (unaff_ESI[4] == 3)) &&\n        ((iVar1 = unaff_ESI[5],  iVar1 == 0x19930520 || ((iVar1 == 0x19930521 || (iVar1 == 0x19930522)))))) &&\n       ((*(unaff_EBP + -0x34) == 0 && (*(unaff_EBP + -0x1c) != 0)))) {\n        iVar1 = fcn.0040315d(unaff_ESI[6]);\n        if (iVar1 != 0) {\n            fcn.00407480(unaff_ESI);\n        }\n    }\n    return;\n}\n",
        "token_count": 378
    },
    "0041465d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0041465d(void)\n\n{\n    int32_t unaff_EBP;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x1c) != 0) {\n        fcn.0040d8b3(0);\n    }\n    return;\n}\n",
        "token_count": 67
    },
    "004149ad": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.004149ad(uint arg_8h, uint arg_ch, uint32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t arg_8h_00;\n    uint uVar3;\n    code *pcVar4;\n    code *pcVar5;\n    uint var_14h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    iVar1 = fcn.0040691b();\n    var_4h = 0;\n    if (*0x88eec0 == 0) {\n        iVar2 = (**0x886040)(\"USER32.DLL\");\n        pcVar4 = *0x886034;\n        if (iVar2 == 0) {\n            return 0;\n        }\n        arg_8h_00 = (**0x886034)(iVar2, \"MessageBoxA\");\n        if (arg_8h_00 == 0) {\n            return 0;\n        }\n        *0x88eec0 = fcn.004068a9(arg_8h_00);\n        uVar3 = (*pcVar4)(iVar2, \"GetActiveWindow\");\n        *0x88eec4 = fcn.004068a9(uVar3);\n        uVar3 = (*pcVar4)(iVar2, \"GetLastActivePopup\");\n        *0x88eec8 = fcn.004068a9(uVar3);\n        uVar3 = (*pcVar4)(iVar2, \"GetUserObjectInformationA\");\n        *0x88eed0 = fcn.004068a9(uVar3);\n        if (*0x88eed0 != 0) {\n            uVar3 = (*pcVar4)(iVar2, \"GetProcessWindowStation\");\n            *0x88eecc = fcn.004068a9(uVar3);\n        }\n    }\n    if ((*0x88eecc != iVar1) && (*0x88eed0 != iVar1)) {\n        pcVar4 = fcn.00406924(*0x88eecc);\n        pcVar5 = fcn.00406924(*0x88eed0);\n        if (((pcVar4 != NULL) && (pcVar5 != NULL)) &&\n           (((iVar2 = (*pcVar4)(),  iVar2 == 0 || (iVar2 = (*pcVar5)(iVar2, 1, &var_14h, 0xc, &var_8h),  iVar2 == 0)) ||\n            ((var_ch & 1) == 0)))) {\n            arg_10h = arg_10h | 0x200000;\n            goto code_r0x00414aef;\n        }\n    }\n    if ((((*0x88eec4 != iVar1) && (pcVar4 = fcn.00406924(*0x88eec4),  pcVar4 != NULL)) &&\n        (var_4h = (*pcVar4)(),  var_4h != 0)) &&\n       ((*0x88eec8 != iVar1 && (pcVar4 = fcn.00406924(*0x88eec8),  pcVar4 != NULL)))) {\n        var_4h = (*pcVar4)(var_4h);\n    }\ncode_r0x00414aef:\n    pcVar4 = fcn.00406924(*0x88eec0);\n    if (pcVar4 == NULL) {\n        return 0;\n    }\n    uVar3 = (*pcVar4)(var_4h, arg_8h, arg_ch, arg_10h);\n    return uVar3;\n}\n",
        "token_count": 800
    },
    "00409134": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00409134(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    uint32_t arg_8h_00;\n    uint *puVar2;\n    uint uVar3;\n    int32_t unaff_EBP;\n    int32_t iVar4;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.00406fac(0x8894d8, 0x10);\n    arg_8h_00 = *(unaff_EBP + 8);\n    if (arg_8h_00 == 0xfffffffe) {\n        puVar2 = fcn.004038c1();\n        *puVar2 = 0;\n        puVar2 = fcn.004038ae();\n        *puVar2 = 9;\n    }\n    else {\n        if ((-1 < arg_8h_00) && (arg_8h_00 < *0x892830)) {\n            piVar1 = (arg_8h_00 >> 5) * 4 + 0x892840;\n            iVar4 = (arg_8h_00 & 0x1f) * 0x40;\n            if ((*(*piVar1 + 4 + iVar4) & 1) != 0) {\n                fcn.00415381(arg_8h_00);\n                *(unaff_EBP + -4) = 0;\n                if ((*(*piVar1 + 4 + iVar4) & 1) == 0) {\n                    puVar2 = fcn.004038ae();\n                    *puVar2 = 9;\n                    puVar2 = fcn.004038c1();\n                    *puVar2 = 0;\n                    *(unaff_EBP + -0x1c) = 0xffffffff;\n                }\n                else {\n                    uVar3 = fcn.00408a01(*(unaff_EBP + 8), *(unaff_EBP + 0xc), *(unaff_EBP + 0x10));\n                    *(unaff_EBP + -0x1c) = uVar3;\n                }\n                *(unaff_EBP + -4) = 0xfffffffe;\n                fcn.00409206(0x8894d8);\n                goto code_r0x00409200;\n            }\n        }\n        puVar2 = fcn.004038c1();\n        *puVar2 = 0;\n        puVar2 = fcn.004038ae();\n        *puVar2 = 9;\n        fcn.0040382b(0, 0, 0, 0, 0);\n    }\ncode_r0x00409200:\n    fcn.00406ff1();\n    return;\n}\n",
        "token_count": 623
    },
    "0041041e": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.0041041e(uint *arg_8h)\n\n{\n    char cVar1;\n    char *pcVar2;\n    uint *puVar3;\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    if (**0x88ee48 == 'X') {\n        pcVar2 = \"void\";\n    }\n    else {\n        if (**0x88ee48 != 'Z') {\n            fcn.0040ffee(&var_8h);\n            if ((var_4h == '\\0') && (cVar1 = **0x88ee48,  cVar1 != '\\0')) {\n                if (cVar1 != '@') {\n                    if (cVar1 != 'Z') {\n                        fcn.0040f710(2);\n                        return arg_8h;\n                    }\n                    *0x88ee48 = *0x88ee48 + 1;\n                    pcVar2 = \",...\";\n                    if ((~(*0x88ee58 >> 0x12) & 1) == 0) {\n                        pcVar2 = \",<ellipsis>\";\n                    }\n                    puVar3 = fcn.004101d4(&var_10h, pcVar2);\n                    *arg_8h = *puVar3;\n                    arg_8h[1] = puVar3[1];\n                    return arg_8h;\n                }\n                *0x88ee48 = *0x88ee48 + 1;\n            }\n            *arg_8h = var_8h;\n            arg_8h[1] = var_4h;\n            return arg_8h;\n        }\n        pcVar2 = 0x88694c;\n        if ((~(*0x88ee58 >> 0x12) & 1) == 0) {\n            pcVar2 = \"<ellipsis>\";\n        }\n    }\n    *0x88ee48 = *0x88ee48 + 1;\n    fcn.0040fadc(pcVar2);\n    return arg_8h;\n}\n",
        "token_count": 449
    },
    "004156d0": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17",
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nvoid fcn.004156d0(void)\n\n{\n    uint8_t *puVar1;\n    int32_t unaff_EBP;\n    uint32_t unaff_ESI;\n    int32_t unaff_EDI;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x1c) == unaff_EDI) {\n        puVar1 = *((unaff_ESI >> 5) * 4 + 0x892840) + 4 + (unaff_ESI & 0x1f) * 0x40;\n        *puVar1 = *puVar1 & 0xfe;\n    }\n    fcn.00415421(unaff_ESI);\n    return;\n}\n",
        "token_count": 156
    },
    "0040eb8d": {
        "rules": [
            "encrypt data using Curve25519/bbf924b96e5b4ce780ce59f68f21b030"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0040efb5)\n// WARNING: Removing unreachable block (ram,0x0040ef75)\n// WARNING: Removing unreachable block (ram,0x0040ef8d)\n// WARNING: Removing unreachable block (ram,0x0040ef35)\n// WARNING: Removing unreachable block (ram,0x0040efcd)\n// WARNING: Removing unreachable block (ram,0x0040ef4d)\n// WARNING: Removing unreachable block (ram,0x0040ee21)\n\nuint32_t fcn.0040eb8d(void)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    char *pcVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    bool bVar6;\n    \n    do {\n        uVar5 = 0;\n        if (**0x88ee48 == '_') {\n            *0x88ee48 = *0x88ee48 + 1;\n            uVar5 = 0x4000;\n        }\n        cVar1 = **0x88ee48;\n        if (('@' < cVar1) && (cVar1 < '[')) {\n            uVar2 = **0x88ee48 - 0x41;\n            *0x88ee48 = *0x88ee48 + 1;\n            if ((uVar2 & 1) == 0) {\n                uVar5 = uVar5 | 0x8000;\n            }\n            else {\n                uVar5 = uVar5 | 0xa000;\n            }\n            if (0x17 < uVar2) {\n                return uVar5;\n            }\n            if ((uVar5 & 0x8000) == 0) {\n                uVar5 = uVar5 & 0xffff9fff;\n            }\n            else {\n                uVar5 = uVar5 | 0x800;\n            }\n            uVar4 = uVar2 & 0x18;\n            if (uVar4 == 0) {\n                if ((uVar5 & 0x8000) == 0) {\n                    uVar5 = uVar5 | 0x800;\n                }\n                else {\n                    uVar5 = uVar5 | 0x40;\n                }\n            }\n            else if (uVar4 == 8) {\n                if ((uVar5 & 0x8000) == 0) {\n                    uVar5 = uVar5 & 0xfffff7ff | 0x1000;\n                }\n                else {\n                    uVar5 = uVar5 | 0x80;\n                }\n            }\n            else {\n                if (uVar4 != 0x10) {\n                    return 0xffff;\n                }\n                if ((uVar5 & 0x8000) == 0) {\n                    uVar5 = uVar5 & 0xffffe7ff;\n                }\n            }\n            uVar2 = uVar2 & 6;\n            if (uVar2 != 0) {\n                if (uVar2 == 2) {\n                    if ((uVar5 & 0x8000) == 0) {\n                        return uVar5 & 0xffff9fff;\n                    }\n                    return uVar5 | 0x200;\n                }\n                if (uVar2 != 4) {\n                    if (uVar2 != 6) {\n                        return 0xffff;\n                    }\n                    return uVar5 | 0x400;\n                }\n                return uVar5 | 0x100;\n            }\n            return uVar5;\n        }\n        if (cVar1 != '$') {\n            cVar1 = **0x88ee48;\n            if (('/' < cVar1) && (cVar1 < '9')) {\n                *0x88ee48 = *0x88ee48 + 1;\n    // switch table (9 cases) at 0x40f055\n                switch(cVar1) {\n                case '0':\n                    return 0x800;\n                case '1':\n                    return 0x1000;\n                case '2':\n                    return 0;\n                case '3':\n                    return 0x4000;\n                case '4':\n                    return 0x2000;\n                case '5':\n                    return 0x6000;\n                case '6':\n                    return 0x6800;\n                case '7':\n                    return 0x7000;\n                case '8':\n                    return 0x7800;\n                default:\n                    return 0xffff;\n                }\n            }\n            if (cVar1 != '9') {\n                return (cVar1 != '\\0') + 0xfffe;\n            }\n            *0x88ee48 = *0x88ee48 + 1;\n            return 0xfffd;\n        }\n        bVar6 = false;\n        pcVar3 = *0x88ee48 + 1;\n        cVar1 = *pcVar3;\n        if ('B' < cVar1) {\n            if (cVar1 == 'C') {\n                uVar5 = 0x7c00;\n                goto code_r0x0040eeeb;\n            }\n            if (cVar1 == 'D') {\n                uVar5 = uVar5 | 0x9100;\n                goto code_r0x0040eeeb;\n            }\n            if (cVar1 == 'E') {\n                uVar5 = uVar5 | 0x9200;\n                goto code_r0x0040eeeb;\n            }\n            if (cVar1 != 'R') {\n                *0x88ee48 = pcVar3;\n                return 0xffff;\n            }\n            pcVar3 = *0x88ee48 + 2;\n            cVar1 = *pcVar3;\n            bVar6 = true;\n            if ((cVar1 < '0') || ('5' < cVar1)) {\n                *0x88ee48 = pcVar3;\n                return (cVar1 == '\\0') + 0xfffe;\n            }\ncode_r0x0040ee01:\n            if (bVar6) {\n                uVar5 = uVar5 | 0x8e00;\n            }\n            else {\n                uVar5 = uVar5 | 0x8d00;\n            }\n            if ((*pcVar3 - 0x30U & 1) != 0) {\n                uVar5 = uVar5 | 0x2000;\n            }\n            uVar2 = *pcVar3 - 0x30U & 6;\n            if (uVar2 == 0) {\n                if ((uVar5 & 0x8000) == 0) {\n                    uVar5 = uVar5 | 0x800;\n                }\n                else {\n                    uVar5 = uVar5 | 0x40;\n                }\n            }\n            else if (uVar2 == 2) {\n                if ((uVar5 & 0x8000) == 0) {\n                    uVar5 = uVar5 & 0xfffff7ff | 0x1000;\n                }\n                else {\n                    uVar5 = uVar5 | 0x80;\n                }\n            }\n            else {\n                if (uVar2 != 4) {\n                    *0x88ee48 = pcVar3;\n                    return 0xffff;\n                }\n                if ((uVar5 & 0x8000) == 0) {\n                    uVar5 = uVar5 & 0xffffe7ff;\n                }\n            }\n            goto code_r0x0040eeeb;\n        }\n        if (cVar1 == 'B') {\n            uVar5 = uVar5 | 0x9800;\n            goto code_r0x0040eeeb;\n        }\n        if (cVar1 == '\\0') {\n            uVar5 = 0xfffe;\n            pcVar3 = *0x88ee48;\n            goto code_r0x0040eeeb;\n        }\n        if (cVar1 != '$') {\n            if (cVar1 < '0') {\n                *0x88ee48 = pcVar3;\n                return 0xffff;\n            }\n            if ('5' < cVar1) {\n                if (cVar1 != 'A') {\n                    *0x88ee48 = pcVar3;\n                    return 0xffff;\n                }\n                uVar5 = uVar5 | 0x9000;\n                goto code_r0x0040eeeb;\n            }\n            goto code_r0x0040ee01;\n        }\n        if ((*0x88ee48)[2] == 'P') {\n            pcVar3 = *0x88ee48 + 2;\n        }\n        *0x88ee48 = pcVar3 + 1;\n        cVar1 = **0x88ee48;\n        if (cVar1 < 'K') {\n            if (cVar1 == 'J') {\ncode_r0x0040ed7a:\n                cVar1 = pcVar3[2];\n                if (('/' < cVar1) && (cVar1 < ':')) {\n                    *0x88ee48 = pcVar3 + cVar1 + -0x2d;\n                    uVar5 = fcn.0040eb8d();\n                    return uVar5 | 0x10000;\n                }\n                uVar5 = 0xffff;\n                pcVar3 = pcVar3 + 2;\ncode_r0x0040eeeb:\n                *0x88ee48 = pcVar3 + 1;\n                return uVar5;\n            }\n            if (cVar1 == '\\0') {\n                return 0xfffe;\n            }\n            if (cVar1 != 'F') {\n                bVar6 = cVar1 == 'H';\ncode_r0x0040ec34:\n                if (!bVar6) {\n                    return 0xffff;\n                }\n            }\n        }\n        else {\n            if (cVar1 < 'L') {\n                return 0xffff;\n            }\n            if ('M' < cVar1) {\n                if ('O' < cVar1) {\n                    bVar6 = cVar1 == 'Q';\n                    goto code_r0x0040ec34;\n                }\n                goto code_r0x0040ed7a;\n            }\n        }\n        *0x88ee48 = pcVar3 + 2;\n    } while( true );\n}\n",
        "token_count": 2266
    },
    "0041f610": {
        "rules": [
            "decompress data using aPLib/06666ba0b6a14a5481e4ee6eb664d454"
        ],
        "decompiled_code": "\nuint32_t * fcn.0041f610(uint32_t *param_1, char param_2)\n\n{\n    uint32_t uVar1;\n    char cVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t *puVar5;\n    \n    uVar1 = param_1 & 3;\n    while (uVar1 != 0) {\n        if (*param_1 == param_2) {\n            return param_1;\n        }\n        if (*param_1 == '\\0') {\n            return NULL;\n        }\n        uVar1 = param_1 + 1 & 3;\n        param_1 = param_1 + 1;\n    }\n    while( true ) {\n        while( true ) {\n            uVar1 = *param_1;\n            uVar4 = uVar1 ^ CONCAT22(CONCAT11(param_2, param_2), CONCAT11(param_2, param_2));\n            uVar3 = uVar1 ^ 0xffffffff ^ uVar1 + 0x7efefeff;\n            puVar5 = param_1 + 1;\n            if (((uVar4 ^ 0xffffffff ^ uVar4 + 0x7efefeff) & 0x81010100) != 0) break;\n            param_1 = puVar5;\n            if ((uVar3 & 0x81010100) != 0) {\n                if ((uVar3 & 0x1010100) != 0) {\n                    return NULL;\n                }\n                if ((uVar1 + 0x7efefeff & 0x80000000) == 0) {\n                    return NULL;\n                }\n            }\n        }\n        uVar1 = *param_1;\n        if (uVar1 == param_2) {\n            return param_1;\n        }\n        if (uVar1 == '\\0') {\n            return NULL;\n        }\n        cVar2 = uVar1 >> 8;\n        if (cVar2 == param_2) {\n            return param_1 + 1;\n        }\n        if (cVar2 == '\\0') break;\n        cVar2 = uVar1 >> 0x10;\n        if (cVar2 == param_2) {\n            return param_1 + 2;\n        }\n        if (cVar2 == '\\0') {\n            return NULL;\n        }\n        cVar2 = uVar1 >> 0x18;\n        if (cVar2 == param_2) {\n            return param_1 + 3;\n        }\n        param_1 = puVar5;\n        if (cVar2 == '\\0') {\n            return NULL;\n        }\n    }\n    return NULL;\n}\n",
        "token_count": 591
    },
    "00885000": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nuint32_t __fastcall fcn.00885000(uint param_1)\n\n{\n    uint var_4h;\n    \n    (**0x886044)(0, param_1);\n    *0x88efb4 = *0x88efb4 * 0x343fd + 0x269ec3;\n    return *0x88efb4 >> 0x10 & 0x7fff;\n}\n",
        "token_count": 107
    },
    "00885040": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __fastcall fcn.00885040(uint param_1)\n\n{\n    uint8_t *unaff_ESI;\n    uint var_4h;\n    \n    (**0x886044)(0, param_1);\n    *0x88efb4 = *0x88efb4 * 0x343fd + 0x269ec3;\n    *unaff_ESI = *unaff_ESI ^ *0x88efb4 >> 0x10;\n    return;\n}\n",
        "token_count": 123
    },
    "00884ea0": {
        "rules": [
            "64-bit execution via heavens gate/d0eb93f2c5e64800b89b59bc3f7592fa"
        ],
        "decompiled_code": "\nuint fcn.00884ea0(void)\n\n{\n    uint var_4h;\n    \n    return 0x269ec3;\n}\n",
        "token_count": 30
    },
    "00885120": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nuint fcn.00885120(void)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint *arg_10h;\n    uint var_ach;\n    int32_t var_a8h;\n    uint var_88h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint32_t var_58h;\n    uint var_48h;\n    uint32_t var_44h;\n    int32_t *var_40h;\n    int32_t var_3ch;\n    int32_t var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint *var_24h;\n    uint var_20h;\n    uint32_t var_1ch;\n    code *var_18h;\n    char var_11h;\n    uint32_t var_10h;\n    uint var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x8856c0;\n    var_ch = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_ch;\n    arg_10h = &var_88h;\n    (**0x8861c0)(arg_10h, 0, 0, 0, 0);\n    pcVar1 = *0x886054;\n    var_18h = NULL;\n    do {\n        iVar3 = var_18h;\n        if (var_18h < 10) break;\n        (*pcVar1)(0, &var_28h, &var_6ch, &var_64h);\n        (**0x88608c)(0, 0, 0);\n        (**0x8861b4)(0, 0, 0);\n        (**0x8861d4)();\n        (**0x8861b0)(0, 0);\n        (**0x8861b8)();\n        (**0x8861cc)(0);\n        (**0x8861d0)();\n        (**0x886030)();\n        (**0x886038)(0, 0, 0);\n        (**0x8861a4)(0, 0, 0, 0);\n        (**0x8861a0)(0, 0, 0, 0);\n        (**0x886020)(0, 0);\n        (**0x8861bc)(0, 0, 0);\n        (**0x886000)(0, 0, 0, 0);\n        (**0x886004)(0, 0);\n        (**0x8861dc)(0, 0, 0, 0);\n        (**0x8861a8)(0, 0, 0, 0, 0, 0);\n        (**0x8861c4)(0);\n        var_44h = 0xf;\n        var_48h = 0;\n        var_58h = var_58h & 0xffffff00;\n        var_4h = 0;\n        var_40h = fcn.00402a7d(4);\n        if (var_40h == NULL) {\n            var_40h = NULL;\n        }\n        else {\n            *var_40h = &var_40h;\n        }\n        var_34h = 0;\n        var_30h = 0;\n        var_2ch = 0;\n        fcn.00402489(\"hokenonohuwumiputedima\", \n                     \"zepibomigifuzihuhikebazu kilajatovitacofugorakojatobuyu koxuhirurenagepuxakenihife\", arg_10h);\n        if (var_34h != 0) {\n            arg_10h = var_24h;\n            fcn.00402040();\n            fcn.004028fe(var_34h);\n            iVar3 = var_18h;\n        }\n        var_34h = 0;\n        var_30h = 0;\n        var_2ch = 0;\n        fcn.004028fe(var_40h);\n        var_4h = 0xffffffff;\n        if (0xf < var_44h) {\n            fcn.004028fe(var_58h);\n        }\n        var_18h = iVar3 + 1;\n    } while (var_18h < 0x6a42b);\n    var_10h = 0x4655ac;\n    iVar3 = 0;\n    var_11h = '\\x01';\n    do {\n        if (0x15bf < iVar3) {\n            var_11h = '\\0';\n            (**0x886014)();\n        }\n        if (iVar3 < 0) {\n            (**0x88602c)(0x6f699, 0x71, 0x89900, var_24h, &var_20h);\n        }\n        pcVar1 = *0x88601c;\n        iVar3 = iVar3 + 1;\n    } while (var_11h != '\\0');\n    var_1ch = 0x20;\n    iVar3 = 0;\n    while( true ) {\n        (*pcVar1)(&var_18h, &var_60h, &var_68h);\n        (**0x886088)(0, &var_3ch);\n        (**0x886090)(&var_ach);\n        if ((((0x31893 < iVar3) && (var_18h != 0x86e4)) && (var_3ch != 0x23b74f)) && (var_a8h != 0x5696a3)) break;\n        if (var_1ch < 0x40) {\n            var_1ch = var_1ch + 1;\n        }\n        if (*0x8917d8 == 0) {\n            *0x8917d8 = (**0x886040)(\"kernel32.dll\");\n        }\n        iVar3 = iVar3 + 1;\n    }\n    var_44h = 0xf;\n    var_48h = 0;\n    var_58h = var_58h & 0xffffff00;\n    *0x88efc0 = (**0x886034)(*0x8917d8, \"GlobalAlloc\");\n    if (0xf < var_44h) {\n        fcn.004028fe(var_58h);\n    }\n    var_44h = 0xf;\n    var_48h = 0;\n    var_58h = var_58h & 0xffffff00;\n    var_24h = (**0x88efc0)(0, var_10h);\n    var_18h = (**0x88efc0)(0, var_10h);\n    iVar3 = *0x88ce78;\n    *0x88efb4 = *0x8888e8;\n    uVar2 = 0;\n    if (var_10h != 0) {\n        do {\n            var_18h[uVar2] = *(iVar3 + 0x932 + uVar2);\n            uVar2 = uVar2 + 1;\n        } while (uVar2 < var_10h);\n    }\n    fcn.00884f60(&var_18h, &var_10h);\n    (**0x88604c)(var_18h, var_10h, var_1ch, 0x88efcc);\n    iVar3 = 0;\n    var_24h = var_10h;\n    if (0 < var_10h) {\n        do {\n            fcn.00885040();\n            (**0x88600c)(0);\n            (**0x886050)(0, \"hokenonohuwumiputedima\");\n            iVar3 = iVar3 + 1;\n        } while (iVar3 < var_24h);\n    }\n    (*var_18h)();\n    (**0x886028)(0);\n    (**0x886058)(0, 0);\n    (**0x886030)();\n    (**0x886014)();\n    *(*in_FS_OFFSET[0xb] + 8) = 1;\n    *in_FS_OFFSET = var_ch;\n    return 0;\n}\n",
        "token_count": 1836
    },
    "008854b0": {
        "rules": [
            "64-bit execution via heavens gate/cf627f8086064c53962fc93043360d1e"
        ],
        "decompiled_code": "\nvoid fcn.008854b0(void)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint uStack1100;\n    char *pcStack1096;\n    uint uStack1092;\n    char *pcStack1088;\n    uint uStack1084;\n    \n    uStack1084 = 0x888aa4;\n    pcStack1088 = 0x8854c8;\n    *0x8917d8 = (**0x886018)();\n    pcVar1 = *0x886034;\n    pcStack1088 = \"CreateToolhelp32Snapshot\";\n    pcStack1096 = 0x8854db;\n    uStack1092 = *0x8917d8;\n    *0x88efc4 = (**0x886034)();\n    pcStack1096 = \"hokenonohuwumiputedima\";\n    uStack1100 = *0x8917d8;\n    str.hokenonohuwumiputedima[5] = 'e';\n    str.hokenonohuwumiputedima[6] = '3';\n    str.hokenonohuwumiputedima[7] = '2';\n    str.hokenonohuwumiputedima[8] = 'F';\n    str.hokenonohuwumiputedima[9] = 'i';\n    str.hokenonohuwumiputedima[0] = 'M';\n    str.hokenonohuwumiputedima[1] = 'o';\n    str.hokenonohuwumiputedima[2] = 'd';\n    str.hokenonohuwumiputedima[3] = 'u';\n    str.hokenonohuwumiputedima[4] = 'l';\n    str.hokenonohuwumiputedima[10] = 'r';\n    str.hokenonohuwumiputedima[11] = 's';\n    str.hokenonohuwumiputedima[12] = 't';\n    str.hokenonohuwumiputedima[13] = 'W';\n    str.hokenonohuwumiputedima[14] = '\\0';\n    *0x88efbc = (*pcVar1)();\n    uVar2 = (**0x88efc4)(8, 0);\n    iVar3 = (**0x88efbc)(uVar2, &stack0xfffffbb4);\n    if (iVar3 == 0) {\n        fcn.00885120();\n    }\n    return;\n}\n",
        "token_count": 557
    },
    "004010b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004010b0(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    fcn.00402909(arg_8h, arg_ch, arg_10h, arg_14h);\n    return arg_8h;\n}\n",
        "token_count": 67
    },
    "004010e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004010e0(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    fcn.0040242c(arg_8h, arg_ch, arg_10h, arg_14h);\n    return arg_8h;\n}\n",
        "token_count": 68
    },
    "004011a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004011a0(code **param_1)\n\n{\n    *param_1 = vtable.std::logic_error.0;\n    if (0xf < param_1[9]) {\n        fcn.004028fe(param_1[4]);\n    }\n    param_1[9] = 0xf;\n    param_1[8] = NULL;\n    *(param_1 + 4) = 0;\n    *param_1 = vtable.std::exception.0;\n    if (param_1[2] != NULL) {\n        fcn.00404ea5(param_1[1]);\n    }\n    return;\n}\n",
        "token_count": 143
    },
    "00401430": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.00401430(int32_t *arg_8h)\n\n{\n    int32_t **ppiVar1;\n    uint *in_FS_OFFSET;\n    uint var_ch;\n    uint uStack12;\n    uint uStack8;\n    \n    uStack8 = 0xffffffff;\n    uStack12 = 0x885698;\n    var_ch = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_ch;\n    ppiVar1 = fcn.00402a7d(4);\n    if (ppiVar1 == NULL) {\n        ppiVar1 = NULL;\n    }\n    else {\n        *ppiVar1 = arg_8h;\n    }\n    *arg_8h = ppiVar1;\n    arg_8h[3] = 0;\n    arg_8h[4] = 0;\n    arg_8h[5] = 0;\n    *in_FS_OFFSET = var_ch;\n    return arg_8h;\n}\n",
        "token_count": 214
    },
    "00401490": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00401490(uint param_1)\n\n{\n    uint *unaff_ESI;\n    uint var_4h;\n    \n    if (unaff_ESI[3] != 0) {\n        fcn.00402040(param_1);\n        fcn.004028fe(unaff_ESI[3]);\n    }\n    unaff_ESI[3] = 0;\n    unaff_ESI[4] = 0;\n    unaff_ESI[5] = 0;\n    fcn.004028fe(*unaff_ESI);\n    return;\n}\n",
        "token_count": 127
    },
    "00401540": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401540(int32_t arg_8h, uint32_t arg_ch, uint32_t arg_10h)\n\n{\n    int32_t *arg_8h_00;\n    int32_t in_ECX;\n    uint unaff_EBX;\n    int32_t *piVar1;\n    uint unaff_EBP;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    uint32_t noname_0;\n    uint unaff_retaddr;\n    uint in_stack_00000010;\n    uint in_stack_00000014;\n    uint in_stack_00000018;\n    uint in_stack_0000001c;\n    uint in_stack_00000020;\n    uint in_stack_00000024;\n    uint in_stack_00000028;\n    \n    if (*(arg_8h + 0x14) < arg_ch) {\n        fcn.00402382();\n    }\n    noname_0 = *(arg_8h + 0x14) - arg_ch;\n    if (arg_10h < noname_0) {\n        noname_0 = arg_10h;\n    }\n    if (in_ECX != arg_8h) {\n        if (noname_0 == 0xffffffff) {\n            fcn.0040234a();\n        }\n        if (*(in_ECX + 0x18) < noname_0) {\n            fcn.00401c20(noname_0, *(in_ECX + 0x14), unaff_EDI, unaff_ESI, unaff_EBX, unaff_EBP, unaff_retaddr, arg_8h, \n                         arg_ch, arg_10h, in_stack_00000010, in_stack_00000014, in_stack_00000018, in_stack_0000001c, \n                         in_stack_00000020, in_stack_00000024, in_stack_00000028);\n        }\n        else if (noname_0 == 0) {\n            *(in_ECX + 0x14) = 0;\n            if (*(in_ECX + 0x18) < 0x10) {\n                *(in_ECX + 4) = 0;\n                return;\n            }\n            **(in_ECX + 4) = 0;\n            return;\n        }\n        if (noname_0 != 0) {\n            if (*(arg_8h + 0x18) < 0x10) {\n                arg_8h = arg_8h + 4;\n            }\n            else {\n                arg_8h = *(arg_8h + 4);\n            }\n            piVar1 = in_ECX + 4;\n            arg_8h_00 = piVar1;\n            if (0xf < *(in_ECX + 0x18)) {\n                arg_8h_00 = *piVar1;\n            }\n            fcn.00402909(arg_8h_00, *(in_ECX + 0x18), arg_8h + arg_ch, noname_0);\n            *(in_ECX + 0x14) = noname_0;\n            if (0xf < *(in_ECX + 0x18)) {\n                piVar1 = *piVar1;\n            }\n            *(piVar1 + noname_0) = 0;\n        }\n        return;\n    }\n    fcn.00401900(noname_0 + arg_ch, 0xffffffff);\n    fcn.00401900(0, arg_ch);\n    return;\n}\n",
        "token_count": 769
    },
    "00401710": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nuint fcn.00401710(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint32_t uVar4;\n    uint32_t unaff_ESI;\n    int32_t unaff_EDI;\n    code *var_10h;\n    uint var_4h;\n    \n    if (0x9249249 < unaff_ESI) {\n        fcn.00401b00();\n    }\n    if (unaff_ESI == 0) {\n        uVar4 = 0;\n    }\n    else {\n        uVar4 = unaff_ESI;\n        if (0xffffffff / unaff_ESI < 0x1c) {\n            var_4h = 0;\n            fcn.0040264c(&var_4h);\n            var_10h = vtable.std::bad_alloc.0;\n            fcn.00402d6b(&var_10h, 0x889a68);\n            pcVar1 = swi(3);\n            uVar3 = (*pcVar1)();\n            return uVar3;\n        }\n    }\n    iVar2 = fcn.00402a7d(uVar4 * 0x1c);\n    *(unaff_EDI + 0xc) = iVar2;\n    *(unaff_EDI + 0x10) = iVar2;\n    *(unaff_EDI + 0x14) = iVar2 + unaff_ESI * 0x1c;\n    return 1;\n}\n",
        "token_count": 328
    },
    "004017a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004017a0(uint param_1)\n\n{\n    int32_t unaff_ESI;\n    uint var_4h;\n    \n    if (*(unaff_ESI + 0xc) != 0) {\n        fcn.00402040(param_1);\n        fcn.004028fe(*(unaff_ESI + 0xc));\n    }\n    *(unaff_ESI + 0xc) = 0;\n    *(unaff_ESI + 0x10) = 0;\n    *(unaff_ESI + 0x14) = 0;\n    return;\n}\n",
        "token_count": 132
    },
    "00401820": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401820(uint *arg_8h, uint32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    uint *puVar2;\n    int32_t *arg_8h_00;\n    int32_t in_ECX;\n    uint *puVar3;\n    uint unaff_EBX;\n    int32_t *piVar4;\n    uint unaff_EBP;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    uint unaff_retaddr;\n    uint in_stack_0000000c;\n    uint in_stack_00000010;\n    uint in_stack_00000014;\n    uint in_stack_00000018;\n    uint in_stack_0000001c;\n    uint in_stack_00000020;\n    uint in_stack_00000024;\n    uint in_stack_00000028;\n    \n    if (arg_8h != NULL) {\n        uVar1 = *(in_ECX + 0x18);\n        puVar2 = in_ECX + 4;\n        puVar3 = puVar2;\n        if (0xf < uVar1) {\n            puVar3 = *puVar2;\n        }\n        if (puVar3 <= arg_8h) {\n            puVar3 = puVar2;\n            if (0xf < uVar1) {\n                puVar3 = *puVar2;\n            }\n            if (arg_8h < *(in_ECX + 0x14) + puVar3) {\n                if (0xf < uVar1) {\n                    puVar2 = *puVar2;\n                }\n                fcn.00401540(in_ECX, arg_8h - puVar2, arg_ch);\n                return;\n            }\n        }\n    }\n    if (arg_ch == 0xffffffff) {\n        fcn.0040234a();\n    }\n    if (*(in_ECX + 0x18) < arg_ch) {\n        fcn.00401c20(arg_ch, *(in_ECX + 0x14), unaff_EDI, unaff_ESI, unaff_EBX, unaff_EBP, unaff_retaddr, arg_8h, arg_ch\n                     , in_stack_0000000c, in_stack_00000010, in_stack_00000014, in_stack_00000018, in_stack_0000001c, \n                     in_stack_00000020, in_stack_00000024, in_stack_00000028);\n    }\n    else if (arg_ch == 0) {\n        *(in_ECX + 0x14) = 0;\n        if (*(in_ECX + 0x18) < 0x10) {\n            *(in_ECX + 4) = 0;\n            return;\n        }\n        **(in_ECX + 4) = 0;\n        return;\n    }\n    if (arg_ch != 0) {\n        piVar4 = in_ECX + 4;\n        arg_8h_00 = piVar4;\n        if (0xf < *(in_ECX + 0x18)) {\n            arg_8h_00 = *piVar4;\n        }\n        fcn.00402909(arg_8h_00, *(in_ECX + 0x18), arg_8h, arg_ch);\n        *(in_ECX + 0x14) = arg_ch;\n        if (0xf < *(in_ECX + 0x18)) {\n            piVar4 = *piVar4;\n        }\n        *(piVar4 + arg_ch) = 0;\n    }\n    return;\n}\n",
        "token_count": 779
    },
    "00401900": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401900(uint32_t arg_8h, uint32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    int32_t iVar3;\n    \n    if (*(in_ECX + 0x14) < arg_8h) {\n        fcn.00402382();\n    }\n    uVar1 = *(in_ECX + 0x14) - arg_8h;\n    if (uVar1 < arg_ch) {\n        arg_ch = uVar1;\n    }\n    if (arg_ch != 0) {\n        if (*(in_ECX + 0x18) < 0x10) {\n            iVar2 = in_ECX + 4;\n            iVar3 = in_ECX + 4;\n        }\n        else {\n            iVar2 = *(in_ECX + 4);\n            iVar3 = *(in_ECX + 4);\n        }\n        fcn.0040242c(iVar3 + arg_8h, *(in_ECX + 0x18) - arg_8h, iVar2 + arg_8h + arg_ch, uVar1 - arg_ch);\n        iVar2 = *(in_ECX + 0x14) - arg_ch;\n        *(in_ECX + 0x14) = iVar2;\n        if (0xf < *(in_ECX + 0x18)) {\n            *(*(in_ECX + 4) + iVar2) = 0;\n            return;\n        }\n        *(in_ECX + 4 + iVar2) = 0;\n    }\n    return;\n}\n",
        "token_count": 355
    },
    "00401ab0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401ab0(uint arg_8h)\n\n{\n    fcn.004028fe(arg_8h);\n    return;\n}\n",
        "token_count": 34
    },
    "00401d90": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00401d90(uint *arg_8h)\n\n{\n    uint *in_EAX;\n    int32_t in_ECX;\n    uint *puVar1;\n    \n    if (arg_8h != NULL) {\n        in_EAX = in_ECX + 4;\n        puVar1 = in_EAX;\n        if (0xf < *(in_ECX + 0x18)) {\n            puVar1 = *in_EAX;\n        }\n        if (puVar1 <= arg_8h) {\n            if (0xf < *(in_ECX + 0x18)) {\n                in_EAX = *in_EAX;\n            }\n            if (arg_8h < *(in_ECX + 0x14) + in_EAX) {\n                return CONCAT31(in_EAX >> 8, 1);\n            }\n        }\n    }\n    return in_EAX & 0xffffff00;\n}\n",
        "token_count": 203
    },
    "00401ec0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00401ec0(uint32_t param_1)\n\n{\n    uint32_t extraout_ECX;\n    code *var_10h;\n    uint var_4h;\n    \n    if (0xffffffff / param_1 < 0x1c) {\n        var_4h = 0;\n        fcn.0040264c(&var_4h);\n        var_10h = vtable.std::bad_alloc.0;\n        fcn.00402d6b(&var_10h, 0x889a68);\n        param_1 = extraout_ECX;\n    }\n    fcn.00402a7d(param_1 * 0x1c);\n    return;\n}\n",
        "token_count": 156
    },
    "00401f20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00401f20(uint32_t param_1)\n\n{\n    uint32_t extraout_ECX;\n    code *var_10h;\n    uint var_4h;\n    \n    if (0xffffffff / param_1 < 4) {\n        var_4h = 0;\n        fcn.0040264c(&var_4h);\n        var_10h = vtable.std::bad_alloc.0;\n        fcn.00402d6b(&var_10h, 0x889a68);\n        param_1 = extraout_ECX;\n    }\n    fcn.00402a7d(param_1 * 4);\n    return;\n}\n",
        "token_count": 150
    },
    "00402040": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00402040(void)\n\n{\n    int32_t in_EAX;\n    int32_t unaff_EDI;\n    \n    if (in_EAX != unaff_EDI) {\n        do {\n            if (0xf < *(in_EAX + 0x18)) {\n                fcn.004028fe(*(in_EAX + 4));\n            }\n            *(in_EAX + 0x18) = 0xf;\n            *(in_EAX + 0x14) = 0;\n            *(in_EAX + 4) = 0;\n            in_EAX = in_EAX + 0x1c;\n        } while (in_EAX != unaff_EDI);\n    }\n    return;\n}\n",
        "token_count": 157
    },
    "00402238": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402238(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    fcn.004010b0(arg_8h, arg_ch, arg_10h, arg_14h);\n    return;\n}\n",
        "token_count": 63
    },
    "00402253": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402253(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    fcn.004010e0(arg_8h, arg_ch, arg_10h, arg_14h);\n    return;\n}\n",
        "token_count": 63
    },
    "0040226e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040226e(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint var_4h;\n    \n    fcn.00402238(arg_8h, arg_ch, arg_10h, arg_14h);\n    return;\n}\n",
        "token_count": 71
    },
    "0040228d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040228d(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint var_4h;\n    \n    fcn.00402253(arg_8h, arg_ch, arg_10h, arg_14h);\n    return;\n}\n",
        "token_count": 71
    },
    "004025a2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004025a2(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    fcn.00404c80(arg_8h, arg_ch, arg_10h, 0, &arg_14h);\n    return;\n}\n",
        "token_count": 68
    },
    "004025c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004025c0(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    fcn.00404c80(arg_8h, arg_ch, arg_10h, arg_14h, &arg_18h);\n    return;\n}\n",
        "token_count": 76
    },
    "00402609": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402609(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    fcn.00404916(arg_8h, arg_ch, &arg_10h);\n    return;\n}\n",
        "token_count": 52
    },
    "00402622": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402622(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    fcn.0040494f(arg_8h, arg_ch, &arg_10h);\n    return;\n}\n",
        "token_count": 53
    },
    "004048fa": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004048fa(uint arg_8h, uint arg_ch)\n\n{\n    fcn.004048a3(fcn.00403c73, arg_8h, 0, arg_ch);\n    return;\n}\n",
        "token_count": 52
    },
    "00404916": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404916(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    fcn.004048a3(fcn.00403c73, arg_8h, arg_ch, arg_10h);\n    return;\n}\n",
        "token_count": 60
    },
    "00404933": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404933(uint arg_8h, uint arg_ch)\n\n{\n    fcn.004048a3(fcn.0040b8db, arg_8h, 0, arg_ch);\n    return;\n}\n",
        "token_count": 53
    },
    "0040494f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040494f(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    fcn.004048a3(fcn.0040b8db, arg_8h, arg_ch, arg_10h);\n    return;\n}\n",
        "token_count": 62
    },
    "00404a38": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00404a38(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0040496c(fcn.00403c73, arg_8h, arg_ch, arg_10h, 0, arg_14h);\n    if (iVar1 < 0) {\n        iVar1 = -1;\n    }\n    return iVar1;\n}\n",
        "token_count": 109
    },
    "00404a61": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00404a61(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0040496c(fcn.00403c73, arg_8h, arg_ch, arg_10h, arg_14h, arg_18h);\n    if (iVar1 < 0) {\n        iVar1 = -1;\n    }\n    return iVar1;\n}\n",
        "token_count": 117
    },
    "00404c57": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00404c57(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0040496c(fcn.0040b8db, arg_8h, arg_ch, arg_10h, 0, arg_14h);\n    if (iVar1 < 0) {\n        iVar1 = -1;\n    }\n    return iVar1;\n}\n",
        "token_count": 110
    },
    "00404c80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00404c80(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0040496c(fcn.0040b8db, arg_8h, arg_ch, arg_10h, arg_14h, arg_18h);\n    if (iVar1 < 0) {\n        iVar1 = -1;\n    }\n    return iVar1;\n}\n",
        "token_count": 118
    },
    "00405551": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __cdecl fcn.00405551(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *arg_8h_00;\n    int32_t unaff_EBP;\n    int32_t iVar3;\n    uint var_20h;\n    uint var_1ch;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.00406fac(0x8891a8, 0x10);\n    iVar1 = *(unaff_EBP + 8);\n    if (*(iVar1 + 4) == 0) {\n        fcn.0040d9a5(0xe);\n        *(unaff_EBP + -4) = 0;\n        if (*(iVar1 + 4) == 0) {\n            iVar1 = fcn.0040551e(0, iVar1 + 9, 0, 0x2800);\n            *(unaff_EBP + -0x1c) = iVar1;\n            if (iVar1 == 0) {\n                fcn.00413e50(0x88b3a0, unaff_EBP + -0x10, 0xfffffffe);\n                goto code_r0x0040564e;\n            }\n            iVar2 = fcn.00402ce0(iVar1);\n            *(unaff_EBP + -0x20) = iVar2;\n            while( true ) {\n                iVar3 = iVar2 + -1;\n                *(unaff_EBP + -0x20) = iVar3;\n                if ((iVar2 == 0) || (*(iVar3 + iVar1) != ' ')) break;\n                *(iVar3 + iVar1) = '\\0';\n                iVar2 = iVar3;\n            }\n            arg_8h_00 = fcn.00404ddb(8);\n            if (arg_8h_00 != NULL) {\n                iVar1 = fcn.00404ddb(iVar2 + 1);\n                if (iVar1 == 0) {\n                    fcn.00404ea5(arg_8h_00);\n                }\n                else {\n                    iVar2 = fcn.00404caa(iVar1, iVar2 + 1, *(unaff_EBP + -0x1c));\n                    if (iVar2 != 0) {\n                        fcn.004036c4(0, 0, 0, 0, 0);\n                    }\n                    *(*(unaff_EBP + 8) + 4) = iVar1;\n                    *arg_8h_00 = iVar1;\n                    iVar1 = *(unaff_EBP + 0xc);\n                    arg_8h_00[1] = *(iVar1 + 4);\n                    *(iVar1 + 4) = arg_8h_00;\n                }\n            }\n            fcn.00404ea5(*(unaff_EBP + -0x1c));\n        }\n        *(unaff_EBP + -4) = 0xfffffffe;\n        fcn.00405657();\n    }\ncode_r0x0040564e:\n    fcn.00406ff1();\n    return;\n}\n",
        "token_count": 718
    },
    "00405a48": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00405a48(int32_t *arg_8h)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    \n    if ((arg_8h == NULL) || (*0x88e510 == 0)) {\n        puVar1 = fcn.004038ae();\n        *puVar1 = 0x16;\n        fcn.0040382b(0, 0, 0, 0, 0);\n        uVar2 = 0x16;\n    }\n    else {\n        *arg_8h = *0x88e510;\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 149
    },
    "00405a84": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00405a84(int32_t *arg_8h)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    \n    if ((arg_8h == NULL) || (*0x88e50c == 0)) {\n        puVar1 = fcn.004038ae();\n        *puVar1 = 0x16;\n        fcn.0040382b(0, 0, 0, 0, 0);\n        uVar2 = 0x16;\n    }\n    else {\n        *arg_8h = *0x88e50c;\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 151
    },
    "00405c71": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405c71(uint arg_8h)\n\n{\n    fcn.00405b45(arg_8h, 0, 0);\n    return;\n}\n",
        "token_count": 41
    },
    "00406843": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00406857)\n// WARNING: Removing unreachable block (ram,0x0040685d)\n// WARNING: Removing unreachable block (ram,0x0040685f)\n\nvoid fcn.00406843(void)\n\n{\n    return;\n}\n",
        "token_count": 62
    },
    "00407040": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00407040(int32_t *arg_8h, int32_t arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    int32_t unaff_EDI;\n    int32_t *var_18h;\n    uint var_14h;\n    int32_t *var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_1h;\n    \n    piVar3 = *(arg_ch + 8) ^ *0x88b3a0;\n    var_1h._0_1_ = '\\0';\n    var_ch = 1;\n    if (*piVar3 != -2) {\n        fcn.00403236(unaff_EDI);\n    }\n    fcn.00403236(unaff_EDI);\n    iVar2 = arg_ch;\n    if ((*(arg_8h + 1) & 0x66) == 0) {\n        *(arg_ch + -4) = &var_18h;\n        iVar2 = *(arg_ch + 0xc);\n        var_18h = arg_8h;\n        var_14h = arg_10h;\n        if (iVar2 == -2) {\n            return var_ch;\n        }\n        do {\n            var_10h = piVar3 + iVar2 * 3 + 4;\n            var_8h = *var_10h;\n            if (piVar3[iVar2 * 3 + 5] != 0) {\n                iVar1 = fcn.00413f42();\n                var_1h._0_1_ = '\\x01';\n                if (iVar1 < 0) {\n                    var_ch = 0;\n                    goto code_r0x004070e8;\n                }\n                if (0 < iVar1) {\n                    if (((*arg_8h == -0x1f928c9d) && (*0x886a6c != NULL)) &&\n                       (iVar1 = fcn.004140e0(0x886a6c),  iVar1 != 0)) {\n                        (**0x886a6c)(arg_8h, 1);\n                    }\n                    fcn.00413f72();\n                    if (*(arg_ch + 0xc) != iVar2) {\n                        unaff_EDI = arg_ch + 0x10;\n                        fcn.00413f8c();\n                    }\n                    *(arg_ch + 0xc) = var_8h;\n                    if (*piVar3 != -2) {\n                        fcn.00403236(unaff_EDI);\n                    }\n                    fcn.00403236(unaff_EDI);\n                    fcn.00413f59();\n                    goto code_r0x004071ac;\n                }\n            }\n            iVar2 = var_8h;\n        } while (var_8h != -2);\n        if (var_1h == '\\0') {\n            return var_ch;\n        }\n    }\n    else {\ncode_r0x004071ac:\n        if (*(iVar2 + 0xc) == -2) {\n            return var_ch;\n        }\n        fcn.00413f8c(arg_ch + 0x10, 0x88b3a0);\n    }\ncode_r0x004070e8:\n    if (*piVar3 != -2) {\n        fcn.00403236(unaff_EDI);\n    }\n    fcn.00403236(unaff_EDI);\n    return var_ch;\n}\n",
        "token_count": 793
    },
    "0040b097": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040b097(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.004092bd();\n    fcn.00409443(1, iVar1 + 0x20);\n    return;\n}\n",
        "token_count": 53
    },
    "0040b0aa": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040b0aa(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    fcn.0041be4d(arg_8h, arg_ch, &arg_10h);\n    return;\n}\n",
        "token_count": 56
    },
    "0040b0c3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040b0c3(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    fcn.0041be6a(arg_8h, arg_ch, &arg_10h);\n    return;\n}\n",
        "token_count": 57
    },
    "0040b0dc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040b0dc(uint arg_8h, uint arg_ch)\n\n{\n    fcn.0041be6a(arg_8h, 0, &arg_ch);\n    return;\n}\n",
        "token_count": 48
    },
    "0040b0f4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040b0f4(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    fcn.0041be87(arg_8h, arg_ch, &arg_10h);\n    return;\n}\n",
        "token_count": 56
    },
    "0040b10d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040b10d(uint arg_8h, uint arg_ch)\n\n{\n    fcn.0041be87(arg_8h, 0, &arg_ch);\n    return;\n}\n",
        "token_count": 47
    },
    "0041b828": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0041b828(uint8_t *arg_8h, uint8_t *arg_ch, uint32_t arg_10h)\n\n{\n    uint8_t *puVar1;\n    uint32_t uVar2;\n    uint8_t *puVar3;\n    uint32_t uVar4;\n    uint32_t var_4h;\n    \n    var_4h = 0;\n    if (arg_10h != 0) {\n        if ((3 < arg_10h) && (puVar1 = arg_8h,  puVar3 = arg_ch,  arg_10h != 4)) {\n            do {\n                arg_8h = puVar1 + 4;\n                arg_ch = puVar3 + 4;\n                if ((*puVar1 == 0) || (*puVar1 != *puVar3)) {\n                    uVar2 = *puVar1;\n                    uVar4 = *puVar3;\n                    goto code_r0x0041b8e4;\n                }\n                if ((puVar1[1] == 0) || (puVar1[1] != puVar3[1])) {\n                    uVar2 = puVar1[1];\n                    uVar4 = puVar3[1];\n                    goto code_r0x0041b8e4;\n                }\n                if ((puVar1[2] == 0) || (puVar1[2] != puVar3[2])) {\n                    uVar2 = puVar1[2];\n                    uVar4 = puVar3[2];\n                    goto code_r0x0041b8e4;\n                }\n                if ((puVar1[3] == 0) || (puVar1[3] != puVar3[3])) {\n                    uVar2 = puVar1[3];\n                    uVar4 = puVar3[3];\n                    goto code_r0x0041b8e4;\n                }\n                var_4h = var_4h + 4;\n                puVar1 = arg_8h;\n                puVar3 = arg_ch;\n            } while (var_4h < arg_10h - 4);\n        }\n        for (; var_4h < arg_10h; var_4h = var_4h + 1) {\n            if ((*arg_8h == 0) || (*arg_8h != *arg_ch)) {\n                uVar2 = *arg_8h;\n                uVar4 = *arg_ch;\ncode_r0x0041b8e4:\n                return uVar2 - uVar4;\n            }\n            arg_8h = arg_8h + 1;\n            arg_ch = arg_ch + 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 602
    },
    "0041bdbd": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_1ch\n\nvoid __cdecl fcn.0041bdbd(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint arg_8h_00;\n    uint uVar3;\n    int32_t unaff_EBP;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.00406fac(0x889870, 0x10);\n    iVar1 = fcn.004092bd();\n    iVar1 = iVar1 + 0x20;\n    *(unaff_EBP + -0x1c) = iVar1;\n    if (*(unaff_EBP + 0xc) == 0) {\n        puVar2 = fcn.004038ae();\n        *puVar2 = 0x16;\n        fcn.0040382b(0, 0, 0, 0, 0);\n    }\n    else {\n        fcn.00409394(iVar1);\n        *(unaff_EBP + -4) = 0;\n        arg_8h_00 = fcn.0041bced(iVar1);\n        uVar3 = (**(unaff_EBP + 8))(iVar1, *(unaff_EBP + 0xc), *(unaff_EBP + 0x10), *(unaff_EBP + 0x14));\n        *(unaff_EBP + -0x20) = uVar3;\n        fcn.0041bd89(arg_8h_00, iVar1);\n        *(unaff_EBP + -4) = 0xfffffffe;\n        fcn.0041be45();\n    }\n    fcn.00406ff1();\n    return;\n}\n",
        "token_count": 437
    },
    "0041be4d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041be4d(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    fcn.0041bdbd(fcn.00403c73, arg_8h, arg_ch, arg_10h);\n    return;\n}\n",
        "token_count": 62
    },
    "0041be6a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041be6a(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    fcn.0041bdbd(fcn.0040cc41, arg_8h, arg_ch, arg_10h);\n    return;\n}\n",
        "token_count": 62
    },
    "0041be87": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041be87(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    fcn.0041bdbd(fcn.0040b8db, arg_8h, arg_ch, arg_10h);\n    return;\n}\n",
        "token_count": 62
    },
    "0041bea4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041bea4(uint arg_8h, uint arg_ch)\n\n{\n    fcn.0041bdbd(fcn.00403c73, arg_8h, 0, arg_ch);\n    return;\n}\n",
        "token_count": 54
    },
    "0041bec0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041bec0(uint arg_8h, uint arg_ch)\n\n{\n    fcn.0041bdbd(fcn.0040cc41, arg_8h, 0, arg_ch);\n    return;\n}\n",
        "token_count": 53
    },
    "0041bedc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041bedc(uint arg_8h, uint arg_ch)\n\n{\n    fcn.0041bdbd(fcn.0040b8db, arg_8h, 0, arg_ch);\n    return;\n}\n",
        "token_count": 54
    },
    "0041d06c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041d06c(uint *arg_8h)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    \n    if (arg_8h == NULL) {\n        puVar1 = fcn.004038ae();\n        *puVar1 = 0x16;\n        fcn.0040382b(0, 0, 0, 0, 0);\n        uVar2 = 0x16;\n    }\n    else {\n        *arg_8h = *0x88bed4;\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 137
    },
    "0041d0a5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041d0a5(uint *arg_8h)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    \n    if (arg_8h == NULL) {\n        puVar1 = fcn.004038ae();\n        *puVar1 = 0x16;\n        fcn.0040382b(0, 0, 0, 0, 0);\n        uVar2 = 0x16;\n    }\n    else {\n        *arg_8h = *0x88bed8;\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 138
    },
    "0041d0de": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041d0de(uint *arg_8h)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    \n    if (arg_8h == NULL) {\n        puVar1 = fcn.004038ae();\n        *puVar1 = 0x16;\n        fcn.0040382b(0, 0, 0, 0, 0);\n        uVar2 = 0x16;\n    }\n    else {\n        *arg_8h = *0x88bed0;\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 137
    },
    "00884ed0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00884ed0(uint8_t *param_1)\n\n{\n    uint8_t in_AL;\n    uint8_t *unaff_ESI;\n    uint8_t *unaff_EDI;\n    \n    *unaff_EDI = *unaff_EDI | (in_AL & 0xf0) * '\\x04';\n    *unaff_ESI = *unaff_ESI | (in_AL & 0xfc) << 4;\n    *param_1 = *param_1 | in_AL << 6;\n    return;\n}\n",
        "token_count": 121
    },
    "00884f30": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00884f30(int32_t *param_1)\n\n{\n    int32_t in_EAX;\n    uint var_4h;\n    \n    *param_1 = in_EAX * 0x343fd + 0x269ec3;\n    return;\n}\n",
        "token_count": 63
    },
    "00884f60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __cdecl fcn.00884f60(int32_t *arg_8h, uint32_t *arg_ch)\n\n{\n    uchar *puVar1;\n    uchar uVar2;\n    uchar uVar3;\n    uchar uVar4;\n    int32_t iVar5;\n    int32_t *in_EAX;\n    uint32_t uVar6;\n    uint var_ch;\n    uint32_t var_8h;\n    uint var_1h;\n    \n    iVar5 = *in_EAX;\n    uVar6 = 0;\n    var_8h = 0;\n    if (*arg_ch != 0) {\n        uVar6 = 0;\n        do {\n            puVar1 = *arg_8h + var_8h;\n            uVar2 = *puVar1;\n            uVar3 = puVar1[1];\n            uVar4 = puVar1[2];\n            fcn.00884ed0();\n            *(uVar6 + iVar5) = uVar2;\n            *(uVar6 + 1 + iVar5) = uVar3;\n            *(uVar6 + 2 + iVar5) = uVar4;\n            var_8h = var_8h + 4;\n            uVar6 = uVar6 + 3;\n        } while (var_8h < *arg_ch);\n    }\n    (**0x88603c)(*arg_8h);\n    *arg_8h = iVar5;\n    *arg_ch = uVar6;\n    return;\n}\n",
        "token_count": 344
    },
    "00402e88": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00402e88(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = fcn.00408363(arg_8h, arg_ch, arg_10h, arg_14h, in_EAX, 0, 0, 0);\n    return uVar1;\n}\n",
        "token_count": 110
    },
    "00401140": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401140(uint arg_8h)\n\n{\n    code **in_ECX;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x885658;\n    var_ch = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_ch;\n    fcn.0040263b();\n    var_4h = 0;\n    *in_ECX = vtable.std::logic_error.0;\n    in_ECX[8] = NULL;\n    in_ECX[9] = 0xf;\n    *(in_ECX + 4) = 0;\n    fcn.00401540(arg_8h, 0, 0xffffffff);\n    *in_FS_OFFSET = var_ch;\n    return;\n}\n",
        "token_count": 197
    },
    "004012f0": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004012f0(int32_t arg_8h)\n\n{\n    code **in_ECX;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x885638;\n    var_ch = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_ch;\n    fcn.004026bc(arg_8h);\n    var_4h = 0;\n    *in_ECX = vtable.std::logic_error.0;\n    in_ECX[9] = 0xf;\n    in_ECX[8] = NULL;\n    *(in_ECX + 4) = 0;\n    fcn.00401540(arg_8h + 0xc, 0, 0xffffffff);\n    *in_FS_OFFSET = var_ch;\n    return;\n}\n",
        "token_count": 207
    },
    "00401370": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401370(char *arg_8h)\n\n{\n    char cVar1;\n    char *pcVar2;\n    int32_t in_ECX;\n    \n    *(in_ECX + 0x18) = 0xf;\n    *(in_ECX + 0x14) = 0;\n    *(in_ECX + 4) = 0;\n    pcVar2 = arg_8h;\n    do {\n        cVar1 = *pcVar2;\n        pcVar2 = pcVar2 + 1;\n    } while (cVar1 != '\\0');\n    fcn.00401820(arg_8h, pcVar2 - (arg_8h + 1));\n    return;\n}\n",
        "token_count": 159
    },
    "004013b0": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004013b0(uint arg_8h)\n\n{\n    int32_t in_ECX;\n    \n    *(in_ECX + 0x14) = 0;\n    *(in_ECX + 0x18) = 0xf;\n    *(in_ECX + 4) = 0;\n    fcn.00401540(arg_8h, 0, 0xffffffff);\n    return;\n}\n",
        "token_count": 94
    },
    "00401990": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401990(int32_t arg_8h)\n\n{\n    int32_t in_ECX;\n    \n    *(in_ECX + 0x14) = arg_8h;\n    if (0xf < *(in_ECX + 0x18)) {\n        *(*(in_ECX + 4) + arg_8h) = 0;\n        return;\n    }\n    *(in_ECX + 4 + arg_8h) = 0;\n    return;\n}\n",
        "token_count": 109
    },
    "0041cbfd": {
        "rules": [
            "create or open file"
        ],
        "decompiled_code": "\nvoid fcn.0041cbfd(void)\n\n{\n    *0x88bec4 = (**0x886070)(\"CONOUT$\", 0x40000000, 3, 0, 3, 0, 0);\n    return;\n}\n",
        "token_count": 55
    },
    "00401090": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00401090(char *arg_8h)\n\n{\n    char *pcVar1;\n    char cVar2;\n    \n    pcVar1 = arg_8h + 1;\n    do {\n        cVar2 = *arg_8h;\n        arg_8h = arg_8h + 1;\n    } while (cVar2 != '\\0');\n    return arg_8h - pcVar1;\n}\n",
        "token_count": 98
    },
    "00401630": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401630(char *arg_8h)\n\n{\n    char cVar1;\n    char *pcVar2;\n    \n    pcVar2 = arg_8h;\n    do {\n        cVar1 = *pcVar2;\n        pcVar2 = pcVar2 + 1;\n    } while (cVar1 != '\\0');\n    fcn.00401820(arg_8h, pcVar2 - (arg_8h + 1));\n    return;\n}\n",
        "token_count": 107
    },
    "00405349": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00405349(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *arg_8h_00;\n    int32_t *piVar3;\n    int32_t *piVar4;\n    int32_t unaff_EBP;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.00406fac(0x889148, 0xc);\n    fcn.0040d9a5(0xe);\n    *(unaff_EBP + -4) = 0;\n    arg_8h_00 = *0x88e4e4;\n    iVar1 = *(unaff_EBP + 8);\n    iVar2 = *(iVar1 + 4);\n    if (iVar2 != 0) {\n        piVar3 = 0x88e4e0;\n        do {\n            piVar4 = piVar3;\n            *(unaff_EBP + -0x1c) = arg_8h_00;\n            if (arg_8h_00 == NULL) goto code_r0x0040538d;\n            piVar3 = arg_8h_00;\n        } while (*arg_8h_00 != iVar2);\n        piVar4[1] = arg_8h_00[1];\n        fcn.00404ea5(arg_8h_00);\ncode_r0x0040538d:\n        fcn.00404ea5(*(iVar1 + 4));\n        *(iVar1 + 4) = 0;\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    fcn.004053b0();\n    fcn.00406ff1();\n    return;\n}\n",
        "token_count": 400
    },
    "004054ae": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.004054ae(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *arg_8h_00;\n    int32_t *piVar3;\n    int32_t *piVar4;\n    int32_t unaff_EBP;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.00406fac(0x889188, 0xc);\n    fcn.0040d9a5(0xe);\n    *(unaff_EBP + -4) = 0;\n    arg_8h_00 = *0x88e4e4;\n    iVar1 = *(unaff_EBP + 8);\n    iVar2 = *(iVar1 + 4);\n    if (iVar2 != 0) {\n        piVar3 = 0x88e4e0;\n        do {\n            piVar4 = piVar3;\n            *(unaff_EBP + -0x1c) = arg_8h_00;\n            if (arg_8h_00 == NULL) goto code_r0x004054f2;\n            piVar3 = arg_8h_00;\n        } while (*arg_8h_00 != iVar2);\n        piVar4[1] = arg_8h_00[1];\n        fcn.00404ea5(arg_8h_00);\ncode_r0x004054f2:\n        fcn.00404ea5(*(iVar1 + 4));\n        *(iVar1 + 4) = 0;\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    fcn.00405515();\n    fcn.00406ff1();\n    return;\n}\n",
        "token_count": 399
    },
    "008850e0": {
        "rules": [
            "contain loop",
            "get common file path"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.008850e0(uint arg_8h)\n\n{\n    int32_t unaff_EBX;\n    int32_t iVar1;\n    \n    iVar1 = 0;\n    if (0 < unaff_EBX) {\n        do {\n            fcn.00885040();\n            (**0x88600c)(0);\n            (**0x886050)(0, \"hokenonohuwumiputedima\");\n            iVar1 = iVar1 + 1;\n        } while (iVar1 < unaff_EBX);\n    }\n    return;\n}\n",
        "token_count": 122
    },
    "0041ca15": {
        "rules": [
            "get geographical location"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041ca15(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    (**0x886074)(arg_8h, arg_ch, arg_10h, arg_14h);\n    return;\n}\n",
        "token_count": 63
    }
}