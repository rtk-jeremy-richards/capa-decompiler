{
    "004043b0": {
        "rules": [
            "hash data using aphash/d4672a7c2b8d413ab72f7529ccc05031"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004043b0(uint32_t *arg_8h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint lpCriticalSection;\n    uint lpBuffer;\n    uint lpNumberOfEventsRead;\n    int32_t var_2e4h;\n    int32_t var_2e0h;\n    uint32_t var_2dch;\n    int32_t var_2d8h;\n    int32_t var_2d4h;\n    int32_t var_2d0h;\n    uint var_2cch;\n    uint var_2c8h;\n    uint var_2c4h;\n    uint var_2c0h;\n    uint var_2bch;\n    uint var_2b8h;\n    uint var_2b4h;\n    uint var_2b0h;\n    uint var_2ach;\n    uint var_2a8h;\n    uint var_2a4h;\n    uint var_2a0h;\n    uint var_29ch;\n    uint var_298h;\n    uint var_294h;\n    uint var_290h;\n    uint var_28ch;\n    uint var_288h;\n    uint var_284h;\n    uint var_280h;\n    uint var_27ch;\n    uint var_278h;\n    uint var_274h;\n    uint var_270h;\n    uint var_26ch;\n    uint var_268h;\n    uint var_264h;\n    uint var_260h;\n    uint var_25ch;\n    uint var_258h;\n    uint var_254h;\n    uint var_250h;\n    uint var_24ch;\n    uint var_248h;\n    uint var_244h;\n    uint var_240h;\n    uint var_23ch;\n    uint var_238h;\n    uint var_234h;\n    uint var_230h;\n    uint var_22ch;\n    uint var_228h;\n    uint var_224h;\n    uint var_220h;\n    uint var_21ch;\n    uint var_218h;\n    uint var_214h;\n    uint var_210h;\n    uint var_20ch;\n    uint var_208h;\n    uint var_204h;\n    uint var_200h;\n    uint var_1fch;\n    uint var_1f8h;\n    uint var_1f4h;\n    uint var_1f0h;\n    uint var_1ech;\n    uint var_1e8h;\n    uint var_1e4h;\n    uint var_1e0h;\n    uint var_1dch;\n    uint var_1d8h;\n    uint var_1d4h;\n    uint var_1d0h;\n    uint var_1cch;\n    uint var_1c8h;\n    uint var_1c4h;\n    uint var_1c0h;\n    uint var_1bch;\n    uint var_1b8h;\n    uint var_1b4h;\n    uint var_1b0h;\n    uint var_1ach;\n    uint var_1a8h;\n    uint var_1a4h;\n    uint var_1a0h;\n    uint var_19ch;\n    uint var_198h;\n    uint var_194h;\n    uint var_190h;\n    uint var_18ch;\n    uint var_188h;\n    uint var_184h;\n    uint var_180h;\n    uint var_17ch;\n    uint var_178h;\n    uint var_174h;\n    uint var_170h;\n    uint var_16ch;\n    uint var_168h;\n    uint var_164h;\n    uint var_160h;\n    uint var_15ch;\n    uint var_158h;\n    uint var_154h;\n    uint var_150h;\n    uint var_14ch;\n    uint var_148h;\n    uint var_144h;\n    uint var_140h;\n    uint var_13ch;\n    uint var_138h;\n    uint var_134h;\n    uint var_130h;\n    uint var_12ch;\n    uint var_128h;\n    uint var_124h;\n    uint var_120h;\n    uint var_11ch;\n    uint var_118h;\n    uint var_114h;\n    uint var_110h;\n    uint var_10ch;\n    uint var_108h;\n    uint var_104h;\n    uint var_100h;\n    uint var_fch;\n    uint var_f8h;\n    uint var_f4h;\n    uint var_f0h;\n    uint var_ech;\n    uint var_e8h;\n    uint var_e4h;\n    uint var_e0h;\n    uint var_dch;\n    uint var_d8h;\n    uint var_d4h;\n    uint var_d0h;\n    uint var_cch;\n    uint var_c8h;\n    uint var_c4h;\n    uint var_c0h;\n    uint var_bch;\n    uint var_b8h;\n    uint var_b4h;\n    uint var_b0h;\n    uint var_ach;\n    uint var_a8h;\n    uint var_a4h;\n    uint var_a0h;\n    uint var_9ch;\n    uint var_98h;\n    uint var_94h;\n    uint var_90h;\n    uint var_8ch;\n    uint var_88h;\n    uint var_84h;\n    uint var_80h;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint32_t var_ch;\n    uint32_t var_8h;\n    \n    var_8h = *arg_8h;\n    uVar2 = arg_8h[1];\n    var_2d4h = *0x7b7f70;\n    var_2e0h = *0x7b7f74;\n    iVar3 = -0x3910c8e0;\n    var_2d8h = *0x7b7f78;\n    var_2e4h = *0x7b7f7c;\n    var_2d0h = 0x20;\n    do {\n        iVar1 = var_8h * 0x10;\n        if (*0x4add21c == 0x4c3) {\n            (*_sym.imp.KERNEL32.DLL_EnterCriticalSection)(&lpCriticalSection);\n        }\n        if (*0x4add21c == 0xfa9) {\n            *0x4add218 = 0xedeb2e40;\n        }\n        *0x4add214 = 0x9150ce2e;\n        if (*0x4add21c == 0x912) {\n            *0x8cfd0c = 0;\n        }\n        var_a0h = 0x23409e45;\n        var_224h = 0x546684a8;\n        var_118h = 0x3f378b90;\n        var_2ach = 0x26b873dc;\n        var_16ch = 0x358cf5cb;\n        var_70h = 0x29983644;\n        var_2b4h = 0x7dc6e5f5;\n        var_ech = 0x3aa9ec81;\n        var_21ch = 0x39fd3d19;\n        var_2a4h = 0x348f6274;\n        var_200h = 0x6e41c7d3;\n        var_29ch = 0x53e187b4;\n        var_e4h = 0xfed61d6;\n        var_294h = 0x7ada085d;\n        var_9ch = 0x4a1e8d93;\n        var_164h = 0x456866b3;\n        var_110h = 0x510c15d;\n        var_94h = 0xa2eee99;\n        var_dch = 0x778c3974;\n        var_214h = 0x5a464473;\n        var_20ch = 0x685fa3d3;\n        var_1bch = 0x6d8c862c;\n        var_2b0h = 0x6888eb1;\n        var_28ch = 0x5090d793;\n        var_f0h = 0x4abedd81;\n        var_c0h = 0x76ec4423;\n        var_258h = 0x15e92005;\n        var_34h = 0x70241620;\n        var_284h = 0x131b9522;\n        var_d4h = 0x2942bb1d;\n        var_2c4h = 0x2523a75b;\n        var_124h = 0x11d08d33;\n        var_11ch = 0x4b222137;\n        var_98h = 0x321ecfe3;\n        var_27ch = 0x575b796;\n        var_e8h = 0x1fffdd6a;\n        var_8ch = 0x75faf039;\n        var_2ch = 0x15899521;\n        var_68h = 0x1109d039;\n        var_1e8h = 0x75fcdb38;\n        var_1a8h = 0x713f7202;\n        var_e0h = 0x2a34467c;\n        var_1c0h = 0x7ab9969b;\n        var_15ch = 0x6e6f4f62;\n        var_220h = 0x68a0941f;\n        var_84h = 0x771b8962;\n        var_1b4h = 0x708fef37;\n        var_24h = 0xae5cf82;\n        var_268h = 0x5afd073b;\n        var_260h = 0x7da8d542;\n        var_150h = 0x63059b8b;\n        var_190h = 0x4e282ba7;\n        var_30h = 0x5c4d4cf4;\n        var_2c0h = 0x1a6faced;\n        var_60h = 0x2a7bc4d0;\n        var_b8h = 0x571fe9f2;\n        var_28h = 0x7fb79e3b;\n        var_108h = 0x12911132;\n        var_274h = 0x5e46be7b;\n        var_cch = 0x3ab28b4;\n        var_1ch = 0x79ed9082;\n        var_d8h = 0x51c3c43d;\n        var_18h = 0x4ed5ae5f;\n        var_7ch = 0x77ee5c69;\n        var_180h = 0x699e0318;\n        var_14h = 0x6a3df6d9;\n        var_1ach = 0x6a68727f;\n        var_210h = 0x71a88410;\n        var_90h = 0x72144519;\n        var_178h = 0x7943706e;\n        var_2a0h = 0x166ccf3d;\n        var_230h = 0x5d7bef27;\n        var_2b8h = 0x3fb67f18;\n        var_26ch = 0x687df6e2;\n        var_1a4h = 0xb23fdac;\n        var_1f8h = 0x3c0ec683;\n        var_1d0h = 0x52c79ee7;\n        var_170h = 0xea67b34;\n        var_1e0h = 0x59ee28df;\n        var_2c8h = 0x2817525b;\n        var_204h = 0x41ec49cf;\n        var_74h = 0x152f532e;\n        var_248h = 0x6bcf2b09;\n        var_264h = 0xd0455f;\n        var_58h = 0x113cca32;\n        var_1a0h = 0x2ca09670;\n        var_148h = 0x1083bd57;\n        var_c4h = 0x8e56de1;\n        var_50h = 0x357268d5;\n        var_130h = 0x3f5a247a;\n        var_188h = 0x7a66e545;\n        var_168h = 0x24e4c52e;\n        var_228h = 0x18be6c3e;\n        var_154h = 0x3db8192e;\n        var_100h = 0x777708fe;\n        var_88h = 0x746719ea;\n        var_2cch = 0x70e28784;\n        var_19ch = 0x74b1451c;\n        var_bch = 0x1fc38e1c;\n        var_128h = 0x1a454084;\n        var_270h = 0x6cfab315;\n        var_14ch = 0x5bcca26f;\n        var_25ch = 0xadc7db7;\n        var_b0h = 0x33be3dc9;\n        var_254h = 0x218471aa;\n        var_194h = 0x65649589;\n        var_218h = 0x51dad296;\n        var_160h = 0x3c96d833;\n        var_2bch = 0x65f5d1c;\n        var_20h = 0x45644988;\n        var_18ch = 0x69748472;\n        var_114h = 0x297ecfd3;\n        var_140h = 0x4f7dbcd7;\n        var_298h = 0x18561cab;\n        var_b4h = 0x720ef4aa;\n        var_280h = 0x10ed17e7;\n        var_d0h = 0x3953200b;\n        var_6ch = 0x5142c32a;\n        var_a8h = 0x563d11f2;\n        var_1fch = 0x160fd461;\n        var_24ch = 0x603ca06c;\n        var_10ch = 0x13629ac1;\n        var_144h = 0x74093f37;\n        var_48h = 0x679680a8;\n        var_1f4h = 0x207d8eeb;\n        var_238h = 0xa216c63;\n        var_104h = 0x2f5adecc;\n        var_184h = 0x44a2df35;\n        var_244h = 0x4a3c9e05;\n        var_23ch = 0x2ac010e7;\n        var_64h = 0x67852e;\n        var_288h = 0x483f468d;\n        var_198h = 0xea69142;\n        var_1ech = 0x1b85e6;\n        var_5ch = 0x2e8bf091;\n        var_1b8h = 0x7accba6a;\n        var_2a8h = 0x70b903ac;\n        var_40h = 0x8dfbb34;\n        var_1c8h = 0x41683a2c;\n        var_f8h = 0x1c83fdd3;\n        var_1f0h = 0x4ad81701;\n        var_13ch = 0x5d5c7f97;\n        var_54h = 0x679ac91e;\n        var_4ch = 0x1899f8c7;\n        var_ach = 0x4b6ad8c;\n        var_208h = 0x103e9126;\n        var_240h = 0x72b610fa;\n        var_1e4h = 0x348041df;\n        var_a4h = 0x7cee9c15;\n        var_158h = 0x18528e3a;\n        var_1dch = 0x2d0d3107;\n        var_fch = 0x7b65c550;\n        var_234h = 0x75ec9eda;\n        var_38h = 0x42646a58;\n        var_80h = 0x3ddf5eff;\n        var_134h = 0x36dc2ee9;\n        var_44h = 0x21b2f01a;\n        var_138h = 0x726bed3c;\n        var_290h = 0x6718329c;\n        var_120h = 0x8d77509;\n        var_250h = 0x56f4f074;\n        var_c8h = 0x6b3a3a26;\n        var_1d4h = 0x6bee7b34;\n        var_1cch = 0x2a76cefe;\n        var_3ch = 0x25736362;\n        var_1c4h = 0x5e24fb8f;\n        var_278h = 0x13cc9676;\n        var_12ch = 0x145ce368;\n        var_1d8h = 0x53a4e4aa;\n        var_17ch = 0x180454cc;\n        var_78h = 0x5abc23bd;\n        var_1b0h = 0x7a98d7b;\n        var_22ch = 0x48a0c18f;\n        var_f4h = 0x6e4572f2;\n        var_174h = 0x924e26a9;\n        uVar2 = uVar2 - ((var_8h >> 5) + var_2e4h ^ iVar3 + var_8h ^ iVar1 + var_2d8h);\n        var_10h = 4;\n        var_ch = (uVar2 >> 5) + var_2e0h;\n        var_2dch = uVar2 * 0x10 + var_2d4h ^ iVar3 + uVar2 ^ var_ch;\n        *0x8cfd08 = 0;\n        var_8h = var_8h - var_2dch;\n        if (*0x4add21c == 0x1d5) {\n            (**0x401030)(0, &lpBuffer, 0, &lpNumberOfEventsRead);\n            (**0x401014)(0);\n        }\n        iVar3 = iVar3 + 0x61c88647;\n        var_2d0h = var_2d0h + -1;\n    } while (var_2d0h != 0);\n    arg_8h[1] = uVar2;\n    *arg_8h = var_8h;\n    return;\n}\n",
        "token_count": 4545
    },
    "00404bd0": {
        "rules": [
            "parse credit card information/4eef9ae1278b42f592aee8ead6d8bf37"
        ],
        "decompiled_code": "\nvoid fcn.00404bd0(void)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    uint32_t uVar3;\n    code *pcVar4;\n    uint32_t uVar5;\n    code *arg_8h;\n    uint var_2a0h;\n    uint var_29ch;\n    uint var_298h;\n    uint var_294h;\n    uint var_290h;\n    uint var_28ch;\n    uint var_288h;\n    uint var_284h;\n    uint var_280h;\n    uint var_27ch;\n    uint var_278h;\n    uint var_274h;\n    uint var_270h;\n    uint var_26ch;\n    uint var_268h;\n    uint var_264h;\n    uint var_260h;\n    uint var_25ch;\n    uint var_258h;\n    uint var_254h;\n    uint var_250h;\n    uint var_24ch;\n    uint var_248h;\n    uint var_244h;\n    uint var_240h;\n    uint var_23ch;\n    uint var_238h;\n    uint var_234h;\n    uint var_230h;\n    uint var_22ch;\n    uint var_228h;\n    uint var_224h;\n    uint var_220h;\n    uint var_21ch;\n    uint var_218h;\n    uint var_214h;\n    uint var_210h;\n    uint var_20ch;\n    uint var_208h;\n    uint var_204h;\n    uint var_200h;\n    uint var_1fch;\n    uint var_1f8h;\n    uint var_1f4h;\n    uint var_1f0h;\n    uint var_1ech;\n    uint var_1e8h;\n    uint var_1e4h;\n    uint var_1e0h;\n    uint var_1dch;\n    uint var_1d8h;\n    uint var_1d4h;\n    uint var_1d0h;\n    uint var_1cch;\n    uint var_1c8h;\n    uint var_1c4h;\n    uint var_1c0h;\n    uint var_1bch;\n    uint var_1b8h;\n    uint var_1b4h;\n    uint var_1b0h;\n    uint var_1ach;\n    uint var_1a8h;\n    uint var_1a4h;\n    uint var_1a0h;\n    uint var_19ch;\n    uint var_198h;\n    uint var_194h;\n    uint var_190h;\n    uint var_18ch;\n    uint var_188h;\n    uint var_184h;\n    uint var_180h;\n    uint var_17ch;\n    uint var_178h;\n    uint var_174h;\n    uint var_170h;\n    uint var_16ch;\n    uint var_168h;\n    uint var_164h;\n    uint var_160h;\n    uint var_15ch;\n    uint var_158h;\n    uint var_154h;\n    uint var_150h;\n    uint var_14ch;\n    uint var_148h;\n    uint var_144h;\n    uint var_140h;\n    uint var_13ch;\n    uint var_138h;\n    uint var_134h;\n    uint var_130h;\n    uint var_12ch;\n    uint var_128h;\n    uint var_124h;\n    uint var_120h;\n    uint var_11ch;\n    uint var_118h;\n    uint var_114h;\n    uint var_110h;\n    uint var_10ch;\n    uint var_108h;\n    uint var_104h;\n    uint var_100h;\n    uint var_fch;\n    uint var_f8h;\n    uint var_f4h;\n    uint var_f0h;\n    uint var_ech;\n    uint var_e8h;\n    uint var_e4h;\n    uint var_e0h;\n    uint var_dch;\n    uint var_d8h;\n    uint var_d4h;\n    uint var_d0h;\n    uint var_cch;\n    uint var_c8h;\n    uint var_c4h;\n    uint var_c0h;\n    uint var_bch;\n    uint var_b8h;\n    uint var_b4h;\n    uint var_b0h;\n    uint var_ach;\n    uint var_a8h;\n    uint var_a4h;\n    uint var_a0h;\n    uint var_9ch;\n    uint var_98h;\n    uint var_94h;\n    uint var_90h;\n    uint var_8ch;\n    uint var_88h;\n    uint var_84h;\n    uint var_80h;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    *0x4abde9c = (**0x40101c)(0, *0x4add21c, 0x1000, 0x40);\n    pcVar2 = _sym.imp.KERNEL32.DLL_GetSystemDefaultLangID;\n    uVar5 = 0;\n    while ((*pcVar2)(),  uVar3 = *0x4add21c,  arg_8h = *0x4abde9c,  uVar5 < 0x14d250) {\n        uVar5 = uVar5 + 1;\n        if ((0x6c < uVar5 >> 0x1f) && ((0x6d < uVar5 >> 0x1f || (0xd69e5f84 < uVar5)))) break;\n    }\n    uVar5 = 0;\n    *0x4eeaf34 = *0x7bc6fc;\n    if (*0x4add21c != 0) {\n        iVar1 = *0x7bc6fc + 0xb2d3b;\n        do {\n            arg_8h[uVar5] = *(iVar1 + uVar5);\n            uVar5 = uVar5 + 1;\n        } while (uVar5 < uVar3);\n    }\n    pcVar4 = _sym.imp.KERNEL32.DLL_HeapAlloc;\n    uVar5 = uVar3 >> 3;\n    pcVar2 = arg_8h;\n    for (; uVar5 != 0; uVar5 = uVar5 - 1) {\n        if (uVar3 == 0x16a1) {\n            (*pcVar4)(0, 0, 0);\n        }\n        fcn.004043b0(arg_8h);\n        arg_8h = arg_8h + 8;\n        pcVar2 = *0x4abde9c;\n        uVar3 = *0x4add21c;\n    }\n    *0x4add210 = pcVar2;\n    (*pcVar2)();\n    return;\n}\n",
        "token_count": 1722
    },
    "00405f02": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Possible PIC construction at 0x00406008: Changing call to branch\n// WARNING: Removing unreachable block (ram,0x0040600d)\n// WARNING: Removing unreachable block (ram,0x0040603c)\n// WARNING: Removing unreachable block (ram,0x00406013)\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00405f02(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    code *pcVar1;\n    int32_t *piVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    code *pcVar5;\n    int32_t unaff_EBP;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.00407030(0x7b5a20, 0x20);\n    fcn.004074d7(8);\n    *(unaff_EBP + -4) = 0;\n    pcVar1 = _sym.imp.KERNEL32.DLL_DecodePointer;\n    if (*0x7be854 != 1) {\n        *0x7be850 = 1;\n        *0x7be84c = *(unaff_EBP + 0x10);\n        if (*(unaff_EBP + 0xc) == 0) {\n            piVar2 = (*_sym.imp.KERNEL32.DLL_DecodePointer)(*0x4eeb07c);\n            *(unaff_EBP + -0x30) = piVar2;\n            if (piVar2 != NULL) {\n                piVar3 = (*pcVar1)(*0x4eeb078);\n                *(unaff_EBP + -0x2c) = piVar3;\n                *(unaff_EBP + -0x24) = piVar2;\n                *(unaff_EBP + -0x28) = piVar3;\n                while( true ) {\n                    piVar3 = piVar3 + -1;\n                    *(unaff_EBP + -0x2c) = piVar3;\n                    if (piVar3 < piVar2) break;\n                    iVar4 = fcn.00406bb3();\n                    if (*piVar3 != iVar4) {\n                        if (piVar3 < piVar2) break;\n                        pcVar5 = (*pcVar1)(*piVar3);\n                        iVar4 = fcn.00406bb3();\n                        *piVar3 = iVar4;\n                        (*pcVar5)();\n                        iVar4 = (*pcVar1)(*0x4eeb07c);\n                        piVar2 = (*pcVar1)(*0x4eeb078);\n                        if ((*(unaff_EBP + -0x24) != iVar4) || (*(unaff_EBP + -0x28) != piVar2)) {\n                            *(unaff_EBP + -0x24) = iVar4;\n                            *(unaff_EBP + -0x30) = iVar4;\n                            *(unaff_EBP + -0x28) = piVar2;\n                            *(unaff_EBP + -0x2c) = piVar2;\n                            piVar3 = piVar2;\n                        }\n                        piVar2 = *(unaff_EBP + -0x30);\n                    }\n                }\n            }\n            *(unaff_EBP + -0x1c) = 0x40114c;\n            while (*(unaff_EBP + -0x1c) < 0x401150) {\n                if (**(unaff_EBP + -0x1c) != NULL) {\n                    (***(unaff_EBP + -0x1c))();\n                }\n                *(unaff_EBP + -0x1c) = *(unaff_EBP + -0x1c) + 4;\n            }\n        }\n        *(unaff_EBP + -0x20) = 0x401154;\n        while (*(unaff_EBP + -0x20) < 0x401158) {\n            if (**(unaff_EBP + -0x20) != NULL) {\n                (***(unaff_EBP + -0x20))();\n            }\n            *(unaff_EBP + -0x20) = *(unaff_EBP + -0x20) + 4;\n        }\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    if (*(unaff_EBP + 0x10) != 0) {\n        fcn.004073fe(8);\n    }\n    return;\n}\n",
        "token_count": 1019
    },
    "0040680c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0040680c(void)\n\n{\n    int32_t unaff_EBP;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x1c) != 0) {\n        fcn.004073fe(0);\n    }\n    return;\n}\n",
        "token_count": 64
    },
    "0040693e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0040693e(void)\n\n{\n    uint unaff_EBX;\n    uint in_stack_fffffd2c;\n    uint in_stack_fffffd30;\n    uint var_2c8h;\n    \n    fcn.00407fd0();\n    fcn.004069c3(unaff_EBX, in_stack_fffffd2c, in_stack_fffffd30);\n    return;\n}\n",
        "token_count": 89
    },
    "00406b79": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406b79(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint uVar3;\n    \n    if (arg_8h != 0) {\n        iVar1 = (*_sym.imp.KERNEL32.DLL_HeapFree)(*0x7be894, 0, arg_8h);\n        if (iVar1 == 0) {\n            puVar2 = fcn.00407261();\n            uVar3 = (*_sym.imp.KERNEL32.DLL_GetLastError)();\n            uVar3 = fcn.0040721f(uVar3);\n            *puVar2 = uVar3;\n        }\n    }\n    return;\n}\n",
        "token_count": 157
    },
    "00407a6e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nfloat10 fcn.00407a6e(double param_1)\n\n{\n    double dVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint arg_14h;\n    double dVar6;\n    uchar in_XMM0 [16];\n    double dVar7;\n    double dVar8;\n    uint64_t in_XMM2_Qa;\n    double dVar9;\n    uint32_t uVar11;\n    uchar auVar10 [16];\n    double dVar12;\n    ulong in_XMM6_Qa;\n    double dVar13;\n    double dVar14;\n    double dVar15;\n    double dVar16;\n    double dVar17;\n    uint in_XMM7_Dc;\n    uint in_XMM7_Dd;\n    double dStack12;\n    \n    dVar6 = SUB168(in_XMM0, 0);\n    uVar11 = SUB164(in_XMM0 >> 0x20, 0);\n    uVar3 = uVar11 >> 0xc;\n    auVar10 = pinsrw(ZEXT816(0), 0x2000, 2);\n    uVar2 = uVar3 & 0x7ffff;\n    if (uVar2 - 0x3fb00 < 0x3bb) {\n        iVar4 = (uVar3 & 0xfffc) - 0xfb00;\n        auVar10 = CONCAT88(in_XMM2_Qa & CONCAT44(in_XMM7_Dd, in_XMM7_Dc), *0x4033f8 & dVar6) | auVar10;\n        iVar5 = iVar4 * 4;\n        dVar9 = SUB168(auVar10, 0);\n        dVar13 = dVar6 * *(iVar4 * 2 + 0x402b60);\n        dVar1 = SQRT(*0x403400 - dVar6 * dVar6) * dVar9;\n        dVar7 = dVar13 - dVar1;\n        uVar11 = SUB164(auVar10 >> 0x20, 0);\n        uVar2 = uVar11 & 0x80000000;\n        dVar8 = dVar7 * dVar7;\n        return ((dVar6 - dVar9) * (dVar6 + dVar9)) / (dVar13 + dVar1) +\n               (*0x4033a0 + *0x4033a8 * dVar8) * dVar7 * dVar8 * dVar8 +\n               *0x403398 * dVar7 * dVar8 + (*(iVar5 + 0x401c60) ^ uVar2 << 0x20) +\n               ((*(iVar5 + 0x401c68) ^ SUB168(CONCAT412(uVar11, ZEXT412(uVar2) << 0x20) >> 0x40, 0)) &\n               0xffffffff00000000);\n    }\n    if (uVar2 - 0x3febb < 0x43) {\n        dVar1 = SQRT(*0x403400 - dVar6 * dVar6);\n        dVar7 = dVar6 & *0x403390;\n        dVar8 = (dVar6 & 0x7fffffffffffffff) - dVar7;\n        dVar9 = *0x4033f8 & dVar1 | SUB168(auVar10, 0);\n        iVar5 = ((dVar1 << 2) >> 0x30) - 0xfec0;\n        dVar1 = dVar1 * *(iVar5 * 8 + 0x402b60);\n        dVar13 = (dVar7 * dVar9 - dVar1) + dVar8 * dVar9;\n        iVar5 = iVar5 * 0x10;\n        dVar14 = dVar13 * dVar13;\n        auVar10 = pinsrw(0x0, (SUB161(CONCAT412(in_XMM7_Dd, CONCAT48(in_XMM7_Dc, dVar6)) >> 0x3f, 0) & 1) << 0xf, 3);\n        return (((*0x4033a8 * dVar14 + *0x4033a0) * dVar13 * dVar14 * dVar14 +\n                *0x403398 * dVar13 * dVar14 + (*0x403360 - *(iVar5 + 0x401c60))) -\n               (((*0x403400 - dVar7 * dVar7) - dVar9 * dVar9) - ((dVar6 & 0x7fffffffffffffff) + dVar7) * dVar8) /\n               (dVar1 + dVar1 + dVar13)) + (*0x403368 - *(iVar5 + 0x401c68) & 0xffffffff00000000) | SUB168(auVar10, 0);\n    }\n    if (uVar2 - 0x3c300 < 0x3800) {\n        dVar1 = dVar6 * dVar6;\n        dVar7 = dVar6 * dVar6;\n        dVar8 = dVar6 * dVar1;\n        return dVar6 + dVar8 * dVar8 * dVar8 * (*0x4033b0 * dVar1 + *0x4033c0 + *0x4033d0 * dVar1 * dVar1) +\n                       dVar6 * dVar7 * (*0x4033b8 * dVar7 + *0x4033c8 + *0x4033d8 * dVar7 * dVar7);\n    }\n    if (uVar2 - 0x3fefe < 2) {\n        dVar1 = SQRT(*0x403400 - dVar6 * dVar6);\n        dVar8 = dVar6 & *0x403380;\n        uVar11 = dVar1 >> 0x20;\n        dVar14 = dVar1 & 0xffffffff | uVar11 << 0x20;\n        dVar7 = dVar1 & *0x403380;\n        dVar6 = dVar6 - dVar8;\n        dVar12 = SUB168(CONCAT412(uVar11, CONCAT48(SUB84(dVar1, 0), dVar14)) >> 0x40, 0);\n        dVar15 = SUB128(CONCAT84(in_XMM6_Qa, uVar11), 0) << 0x20;\n        dVar1 = (uVar11 << 0x20) * (uVar11 << 0x20);\n        dVar9 = (uVar11 << 0x20) * (uVar11 << 0x20);\n        dVar16 = dVar15 * dVar1;\n        dVar17 = SUB168(CONCAT412(uVar11, ZEXT812(dVar15)) >> 0x40, 0) * dVar9;\n        dVar13 = dVar16 * dVar16 * dVar16;\n        auVar10 = pinsrw(ZEXT816(0), SUB162(in_XMM0 >> 0x30, 0) & 0x8000, 3);\n        return (((*0x403360 + (*0x4033e0 * dVar1 + *0x4033e8) * dVar16 * dVar16 * dVar13) -\n                ((dVar1 * dVar1 * *0x4033d0 + *0x4033c0 + *0x4033b0 * dVar1) * dVar13 +\n                 (SUB128(CONCAT84(dVar17, (dVar9 * dVar9 * *0x4033d8 + *0x4033c8 + *0x4033b8 * dVar9) * dVar17 >> 0x20)\n                         , 0) << 0x20) +\n                (((((*0x403400 - dVar8 * dVar8) - (dVar8 + dVar8) * dVar6) - dVar7 * dVar7) - dVar6 * dVar6) +\n                (dVar14 + dVar14 + (dVar7 - dVar14)) * (dVar7 - dVar14)) / (dVar12 + dVar12))) -\n               (dVar15 - (*0x403368 + (dVar15 - *0x403368)))) - (dVar15 - *0x403368) | SUB168(auVar10, 0);\n    }\n    if (uVar2 < 0x3ff00) {\n        if (0x7fdf < (param_1 >> 0x30 & 0x7ff0) - 0x10) {\n            param_1 = param_1 | param_1 + 0.0;\n        }\n        return param_1;\n    }\n    if ((0x3ff00000 - (uVar11 & 0x7fffffff) | SUB164(in_XMM0, 0)) != 0) {\n        if (((param_1 >> 0x20 & 0x7fffffff) + 0x80100000) - (SUB84(param_1, 0) == 0) < 0) {\n            auVar10 = pinsrw(ZEXT816(0), 0x7ff0, 3);\n            dStack12 = SUB168(auVar10, 0) * 0.0;\n            arg_14h = 0x3d;\n        }\n        else {\n            dStack12 = param_1 + 0.0;\n            arg_14h = 0x3f1;\n        }\n        fcn.00409f06(&param_1, &param_1, &dStack12, arg_14h);\n        return dStack12;\n    }\n    return *0x403368 + *0x403360 | ~*0x4033f0 & dVar6;\n}\n",
        "token_count": 2204
    },
    "00408c0c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00408c0c(uint arg_8h)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    int32_t in_ECX;\n    uint in_EDX;\n    uint unaff_EBX;\n    uint unaff_EBP;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    ushort in_ES;\n    ushort in_CS;\n    ushort in_SS;\n    ushort in_DS;\n    ushort in_FS;\n    ushort in_GS;\n    uint8_t in_AF;\n    uint8_t in_TF;\n    uint8_t in_IF;\n    uint8_t in_NT;\n    uint8_t in_AC;\n    uint8_t in_VIF;\n    uint8_t in_VIP;\n    uint8_t in_ID;\n    uint unaff_retaddr;\n    int32_t var_328h;\n    uint var_324h;\n    uint var_320h;\n    \n    if (in_ECX == *0x7b7340) {\n        return;\n    }\n    *0x7bf380 = (in_NT & 1) * 0x4000 | SBORROW4(&stack0xfffffffc, 0x328) * 0x800 | (in_IF & 1) * 0x200 |\n                (in_TF & 1) * 0x100 | (&var_328h < 0) * 0x80 | (*0x10 == 0x32c) * 0x40 | (in_AF & 1) * 0x10 |\n                ((POPCOUNT(&var_328h & 0xff) & 1U) == 0) * 4 | &stack0xfffffffc < 0x328 | (in_ID & 1) * 0x200000 |\n                (in_VIP & 1) * 0x100000 | (in_VIF & 1) * 0x80000 | (in_AC & 1) * 0x40000;\n    *0x7bf384 = &arg_8h;\n    *0x7bf2c0 = 0x10001;\n    *0x7bf268 = 0xc0000409;\n    *0x7bf26c = 1;\n    var_328h = *0x7b7340;\n    var_324h = *0x7b7344;\n    *0x7bf274 = unaff_retaddr;\n    *0x7bf34c = in_GS;\n    *0x7bf350 = in_FS;\n    *0x7bf354 = in_ES;\n    *0x7bf358 = in_DS;\n    *0x7bf35c = unaff_EDI;\n    *0x7bf360 = unaff_ESI;\n    *0x7bf364 = unaff_EBX;\n    *0x7bf368 = in_EDX;\n    *0x7bf36c = in_ECX;\n    *0x7bf370 = in_EAX;\n    *0x7bf374 = unaff_EBP;\n    *0x7bf378 = unaff_retaddr;\n    *0x7bf37c = in_CS;\n    *0x7bf388 = in_SS;\n    *0x7bf2b8 = (*_sym.imp.KERNEL32.DLL_IsDebuggerPresent)();\n    fcn.00408c04(1);\n    (*_sym.imp.KERNEL32.DLL_SetUnhandledExceptionFilter)(0);\n    (*_sym.imp.KERNEL32.DLL_UnhandledExceptionFilter)(0x4039e8);\n    if (*0x7bf2b8 == 0) {\n        fcn.00408c04(1);\n    }\n    uVar1 = (*_sym.imp.KERNEL32.DLL_GetCurrentProcess)(0xc0000409);\n    (*_sym.imp.KERNEL32.DLL_TerminateProcess)(uVar1);\n    return;\n}\n",
        "token_count": 847
    },
    "00409b9b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00409b9b(uint arg_8h, uint arg_ch, uint32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    code *pcVar4;\n    code *pcVar5;\n    code *pcVar6;\n    uint unaff_EBX;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x7b7340 ^ &stack0xfffffffc;\n    var_20h = arg_8h;\n    var_1ch = arg_ch;\n    var_18h = fcn.00406bb3();\n    var_14h = 0;\n    if (*0x7bf24c == 0) {\n        iVar1 = (**0x4010bc)(0x403900);\n        pcVar6 = *0x40105c;\n        if ((iVar1 == 0) ||\n           (iVar2 = (**0x40105c)(iVar1, 0x4038f4),  pcVar4 = _sym.imp.KERNEL32.DLL_EncodePointer,  iVar2 == 0))\n        goto code_r0x00409cf8;\n        *0x7bf24c = (*_sym.imp.KERNEL32.DLL_EncodePointer)(iVar2);\n        uVar3 = (*pcVar6)(iVar1, 0x4038e4);\n        *0x7bf250 = (*pcVar4)(uVar3);\n        uVar3 = (*pcVar6)(iVar1, 0x4038d0);\n        *0x7bf254 = (*pcVar4)(uVar3);\n        uVar3 = (*pcVar6)(iVar1, 0x4038b4);\n        *0x7bf25c = (*pcVar4)(uVar3);\n        if (*0x7bf25c != 0) {\n            uVar3 = (*pcVar6)(iVar1, 0x40389c);\n            *0x7bf258 = (*pcVar4)(uVar3);\n        }\n    }\n    pcVar6 = _sym.imp.KERNEL32.DLL_DecodePointer;\n    if ((*0x7bf258 == var_18h) || (*0x7bf25c == var_18h)) {\ncode_r0x00409ca7:\n        if ((((*0x7bf250 != var_18h) && (pcVar4 = (*pcVar6)(*0x7bf250),  pcVar4 != NULL)) &&\n            (var_14h = (*pcVar4)(),  var_14h != 0)) &&\n           ((*0x7bf254 != var_18h && (pcVar4 = (*pcVar6)(*0x7bf254),  pcVar4 != NULL)))) {\n            var_14h = (*pcVar4)(var_14h);\n        }\n    }\n    else {\n        pcVar4 = (*_sym.imp.KERNEL32.DLL_DecodePointer)(*0x7bf258);\n        pcVar5 = (*pcVar6)(*0x7bf25c);\n        if (((pcVar4 == NULL) || (pcVar5 == NULL)) ||\n           (((iVar1 = (*pcVar4)(),  iVar1 != 0 && (iVar1 = (*pcVar5)(iVar1, 1, &var_10h, 0xc, &var_24h),  iVar1 != 0))\n            && ((var_8h & 1) != 0)))) goto code_r0x00409ca7;\n        arg_10h = arg_10h | 0x200000;\n    }\n    pcVar6 = (*pcVar6)(*0x7bf24c);\n    if (pcVar6 != NULL) {\n        (*pcVar6)(var_14h, var_20h, var_1ch, arg_10h);\n    }\ncode_r0x00409cf8:\n    fcn.00408c0c(unaff_EBX);\n    return;\n}\n",
        "token_count": 939
    },
    "0040c0cd": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040c0cd(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint unaff_EBX;\n    uint var_28h;\n    uint var_24h;\n    int32_t var_1ch;\n    uint var_18h;\n    uint32_t var_14h;\n    uint var_10h;\n    uint32_t var_4h;\n    \n    var_4h = *0x7b7340 ^ &stack0xfffffffc;\n    fcn.004094b8(arg_10h);\n    var_14h = fcn.0040d5ed(&var_10h, &var_28h, arg_ch, 0, 0, 0, 0, &var_24h);\n    iVar1 = fcn.0040cb4b(&var_10h, arg_8h);\n    if ((var_14h & 3) == 0) {\n        if (iVar1 == 1) {\ncode_r0x0040c126:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x0040c166;\n        }\n        if (iVar1 != 2) {\ncode_r0x0040c158:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x0040c166;\n        }\n    }\n    else if ((var_14h & 1) == 0) {\n        if ((var_14h & 2) == 0) goto code_r0x0040c158;\n        goto code_r0x0040c126;\n    }\n    if (var_18h != '\\0') {\n        *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n    }\ncode_r0x0040c166:\n    fcn.00408c0c(unaff_EBX);\n    return;\n}\n",
        "token_count": 508
    },
    "0040c175": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040c175(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint unaff_EBX;\n    uint var_28h;\n    uint var_24h;\n    int32_t var_1ch;\n    uint var_18h;\n    uint32_t var_14h;\n    uint var_10h;\n    uint32_t var_4h;\n    \n    var_4h = *0x7b7340 ^ &stack0xfffffffc;\n    fcn.004094b8(arg_10h);\n    var_14h = fcn.0040d5ed(&var_10h, &var_28h, arg_ch, 0, 0, 0, 0, &var_24h);\n    iVar1 = fcn.0040d09c(&var_10h, arg_8h);\n    if ((var_14h & 3) == 0) {\n        if (iVar1 == 1) {\ncode_r0x0040c1ce:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x0040c20e;\n        }\n        if (iVar1 != 2) {\ncode_r0x0040c200:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x0040c20e;\n        }\n    }\n    else if ((var_14h & 1) == 0) {\n        if ((var_14h & 2) == 0) goto code_r0x0040c200;\n        goto code_r0x0040c1ce;\n    }\n    if (var_18h != '\\0') {\n        *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n    }\ncode_r0x0040c20e:\n    fcn.00408c0c(unaff_EBX);\n    return;\n}\n",
        "token_count": 512
    },
    "0040cb4b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_38h\n\nvoid __cdecl fcn.0040cb4b(uint16_t *arg_8h, uint32_t *arg_ch)\n\n{\n    uint32_t *puVar1;\n    uint16_t uVar2;\n    uint16_t uVar3;\n    uint32_t uVar4;\n    uint8_t uVar5;\n    bool bVar6;\n    int32_t iVar7;\n    uint8_t uVar8;\n    uint32_t *puVar9;\n    uint *puVar10;\n    uint32_t uVar11;\n    uint32_t uVar12;\n    int32_t iVar13;\n    int32_t iVar14;\n    uint32_t uVar15;\n    int32_t iVar16;\n    bool bVar17;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint32_t var_28h;\n    uint var_24h;\n    uint32_t var_20h;\n    uint var_1ch;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x7b7340 ^ &stack0xfffffffc;\n    uVar2 = arg_8h[5];\n    uVar15 = *(arg_8h + 3);\n    var_10h = uVar15;\n    uVar4 = *(arg_8h + 1);\n    uVar3 = *arg_8h;\n    uVar12 = uVar2 & 0x7fff;\n    iVar13 = uVar12 - 0x3fff;\n    var_ch = uVar4;\n    var_8h = uVar3 << 0x10;\n    uVar5 = str.5_v_[1];\n    if (iVar13 == -0x3fff) {\n        iVar14 = 0;\n        iVar13 = 0;\n        do {\n            if ((&var_10h)[iVar13] != 0) {\n                var_10h = 0;\n                var_ch = 0;\n                var_8h = 0;\n                break;\n            }\n            iVar13 = iVar13 + 1;\n        } while (iVar13 < 3);\n    }\n    else {\n        bVar6 = false;\n        iVar16 = str.5_v_[0] + L'\\xffffffff';\n        iVar14 = str.5_v_[0] + (str.5_v_[0] >> 0x1f & 0x1fU) >> 5;\n        puVar1 = &var_10h + iVar14;\n        uVar8 = 0x1f - (str.5_v_[0] & 0x1f);\n        if ((*puVar1 & 1 << (uVar8 & 0x1f)) != 0) {\n            uVar11 = (&var_10h)[iVar14] & ~(-1 << (uVar8 & 0x1f));\n            iVar7 = iVar14;\n            while( true ) {\n                if (uVar11 != 0) {\n                    iVar7 = iVar16 + (iVar16 >> 0x1f & 0x1fU) >> 5;\n                    uVar11 = 1 << (0x1f - (iVar16 & 0x1f) & 0x1f);\n                    puVar9 = &var_10h + iVar7;\n                    var_20h = *puVar9 + uVar11;\n                    if (var_20h < *puVar9) goto code_r0x0040cc8f;\n                    bVar17 = var_20h < uVar11;\n                    do {\n                        bVar6 = false;\n                        if (!bVar17) goto code_r0x0040cc96;\ncode_r0x0040cc8f:\n                        do {\n                            bVar6 = true;\ncode_r0x0040cc96:\n                            iVar7 = iVar7 + -1;\n                            *puVar9 = var_20h;\n                            if ((iVar7 < 0) || (!bVar6)) goto code_r0x0040cca4;\n                            puVar9 = &var_10h + iVar7;\n                            var_20h = *puVar9 + 1;\n                        } while (var_20h < *puVar9);\n                        bVar17 = var_20h == 0;\n                    } while( true );\n                }\n                iVar7 = iVar7 + 1;\n                if (2 < iVar7) break;\n                uVar11 = (&var_10h)[iVar7];\n            }\n        }\ncode_r0x0040cca4:\n        *puVar1 = *puVar1 & -1 << (uVar8 & 0x1f);\n        iVar14 = iVar14 + 1;\n        if (iVar14 < 3) {\n            puVar10 = &var_10h + iVar14;\n            for (iVar16 = 3 - iVar14; iVar16 != 0; iVar16 = iVar16 + -1) {\n                *puVar10 = 0;\n                puVar10 = puVar10 + 1;\n            }\n        }\n        iVar14 = iVar13;\n        if (bVar6) {\n            iVar14 = uVar12 - 0x3ffe;\n        }\n        if (iVar14 < *0x7b7c78 - str.5_v_[0]) {\n            var_10h = 0;\n            var_ch = 0;\n            var_8h = 0;\n        }\n        else {\n            if (*0x7b7c78 < iVar14) {\n                if (iVar14 < *0x7b7c74) {\n                    iVar14 = iVar14 + str.5_v_[3];\n                    var_10h = var_10h & 0x7fffffff;\n                    iVar13 = str.5_v_[1] + (str.5_v_[1] >> 0x1f & 0x1fU) >> 5;\n                    uVar8 = uVar5 & 0x1f;\n                    var_28h = 0;\n                    var_20h = 0;\n                    do {\n                        uVar15 = (&var_10h)[var_20h];\n                        (&var_10h)[var_20h] = uVar15 >> uVar8 | var_28h;\n                        var_28h = (uVar15 & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n                        var_20h = var_20h + 1;\n                    } while (var_20h < 3);\n                    iVar16 = 2;\n                    puVar10 = &var_8h + -iVar13;\n                    do {\n                        if (iVar16 < iVar13) {\n                            (&var_10h)[iVar16] = 0;\n                        }\n                        else {\n                            (&var_10h)[iVar16] = *puVar10;\n                        }\n                        puVar10 = puVar10 + -1;\n                        iVar16 = iVar16 + -1;\n                    } while (-1 < iVar16);\n                }\n                else {\n                    var_ch = 0;\n                    var_8h = 0;\n                    var_10h = 0x80000000;\n                    iVar13 = str.5_v_[1] + (str.5_v_[1] >> 0x1f & 0x1fU) >> 5;\n                    uVar8 = uVar5 & 0x1f;\n                    var_28h = 0;\n                    var_20h = 0;\n                    do {\n                        uVar15 = (&var_10h)[var_20h];\n                        (&var_10h)[var_20h] = uVar15 >> uVar8 | var_28h;\n                        var_28h = (uVar15 & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n                        var_20h = var_20h + 1;\n                    } while (var_20h < 3);\n                    iVar14 = 2;\n                    puVar10 = &var_8h + -iVar13;\n                    do {\n                        if (iVar14 < iVar13) {\n                            (&var_10h)[iVar14] = 0;\n                        }\n                        else {\n                            (&var_10h)[iVar14] = *puVar10;\n                        }\n                        puVar10 = puVar10 + -1;\n                        iVar14 = iVar14 + -1;\n                    } while (-1 < iVar14);\n                    iVar14 = str.5_v_[3] + *0x7b7c74;\n                }\n                goto code_r0x0040d04f;\n            }\n            iVar13 = *0x7b7c78 - iVar13;\n            var_10h = uVar15;\n            var_ch = uVar4;\n            iVar14 = iVar13 + (iVar13 >> 0x1f & 0x1fU) >> 5;\n            uVar8 = iVar13 & 0x1f;\n            var_8h = uVar3 << 0x10;\n            var_28h = 0;\n            var_20h = 0;\n            do {\n                uVar15 = (&var_10h)[var_20h];\n                (&var_10h)[var_20h] = uVar15 >> uVar8 | var_28h;\n                var_28h = (uVar15 & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n                var_20h = var_20h + 1;\n            } while (var_20h < 3);\n            iVar13 = 2;\n            puVar10 = &var_8h + -iVar14;\n            do {\n                if (iVar13 < iVar14) {\n                    (&var_10h)[iVar13] = 0;\n                }\n                else {\n                    (&var_10h)[iVar13] = *puVar10;\n                }\n                puVar10 = puVar10 + -1;\n                iVar13 = iVar13 + -1;\n            } while (-1 < iVar13);\n            iVar14 = str.5_v_[0] + L'\\xffffffff';\n            iVar13 = str.5_v_[0] + (str.5_v_[0] >> 0x1f & 0x1fU) >> 5;\n            uVar8 = 0x1f - (str.5_v_[0] & 0x1f);\n            puVar1 = &var_10h + iVar13;\n            if ((*puVar1 & 1 << (uVar8 & 0x1f)) != 0) {\n                uVar15 = (&var_10h)[iVar13] & ~(-1 << (uVar8 & 0x1f));\n                iVar16 = iVar13;\n                while (uVar15 == 0) {\n                    iVar16 = iVar16 + 1;\n                    if (2 < iVar16) goto code_r0x0040ce43;\n                    uVar15 = (&var_10h)[iVar16];\n                }\n                iVar16 = iVar14 + (iVar14 >> 0x1f & 0x1fU) >> 5;\n                bVar6 = false;\n                uVar12 = 1 << (0x1f - (iVar14 & 0x1f) & 0x1f);\n                uVar4 = (&var_10h)[iVar16];\n                uVar15 = uVar4 + uVar12;\n                if ((uVar15 < uVar4) || (uVar15 < uVar12)) {\n                    bVar6 = true;\n                }\n                (&var_10h)[iVar16] = uVar15;\n                while ((iVar16 = iVar16 + -1,  -1 < iVar16 && (bVar6))) {\n                    uVar4 = (&var_10h)[iVar16];\n                    uVar15 = uVar4 + 1;\n                    bVar6 = false;\n                    if ((uVar15 < uVar4) || (uVar15 == 0)) {\n                        bVar6 = true;\n                    }\n                    (&var_10h)[iVar16] = uVar15;\n                }\n            }\ncode_r0x0040ce43:\n            *puVar1 = *puVar1 & -1 << (uVar8 & 0x1f);\n            iVar13 = iVar13 + 1;\n            if (iVar13 < 3) {\n                puVar10 = &var_10h + iVar13;\n                for (iVar14 = 3 - iVar13; iVar14 != 0; iVar14 = iVar14 + -1) {\n                    *puVar10 = 0;\n                    puVar10 = puVar10 + 1;\n                }\n            }\n            iVar13 = str.5_v_[1] + L'\\x01' + (str.5_v_[1] + L'\\x01' >> 0x1f & 0x1fU) >> 5;\n            uVar8 = uVar5 + 1 & 0x1f;\n            var_28h = 0;\n            var_20h = 0;\n            do {\n                uVar15 = (&var_10h)[var_20h];\n                (&var_10h)[var_20h] = uVar15 >> uVar8 | var_28h;\n                var_28h = (uVar15 & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n                var_20h = var_20h + 1;\n            } while (var_20h < 3);\n            iVar14 = 2;\n            puVar10 = &var_8h + -iVar13;\n            do {\n                if (iVar14 < iVar13) {\n                    (&var_10h)[iVar14] = 0;\n                }\n                else {\n                    (&var_10h)[iVar14] = *puVar10;\n                }\n                puVar10 = puVar10 + -1;\n                iVar14 = iVar14 + -1;\n            } while (-1 < iVar14);\n        }\n        iVar14 = 0;\n    }\ncode_r0x0040d04f:\n    uVar15 = iVar14 << (0x1f - uVar5 & 0x1f) | -((uVar2 & 0x8000) != 0) & 0x80000000 | var_10h;\n    if (str.5_v_[2] == L'@') {\n        arg_ch[1] = uVar15;\n        *arg_ch = var_ch;\n    }\n    else if (str.5_v_[2] == L' ') {\n        *arg_ch = uVar15;\n    }\n    fcn.00408c0c(uVar2 & 0x8000);\n    return;\n}\n",
        "token_count": 3278
    },
    "0040d09c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_38h\n\nvoid __cdecl fcn.0040d09c(uint16_t *arg_8h, uint32_t *arg_ch)\n\n{\n    uint32_t *puVar1;\n    uint16_t uVar2;\n    uint16_t uVar3;\n    uint32_t uVar4;\n    uint8_t uVar5;\n    bool bVar6;\n    int32_t iVar7;\n    uint8_t uVar8;\n    uint32_t *puVar9;\n    uint *puVar10;\n    uint32_t uVar11;\n    uint32_t uVar12;\n    int32_t iVar13;\n    int32_t iVar14;\n    uint32_t uVar15;\n    int32_t iVar16;\n    bool bVar17;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint32_t var_28h;\n    uint var_24h;\n    uint32_t var_20h;\n    uint var_1ch;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x7b7340 ^ &stack0xfffffffc;\n    uVar2 = arg_8h[5];\n    uVar15 = *(arg_8h + 3);\n    var_10h = uVar15;\n    uVar4 = *(arg_8h + 1);\n    uVar3 = *arg_8h;\n    uVar12 = uVar2 & 0x7fff;\n    iVar13 = uVar12 - 0x3fff;\n    var_ch = uVar4;\n    var_8h = uVar3 << 0x10;\n    uVar5 = *0x7b7c98;\n    if (iVar13 == -0x3fff) {\n        iVar14 = 0;\n        iVar13 = 0;\n        do {\n            if ((&var_10h)[iVar13] != 0) {\n                var_10h = 0;\n                var_ch = 0;\n                var_8h = 0;\n                break;\n            }\n            iVar13 = iVar13 + 1;\n        } while (iVar13 < 3);\n    }\n    else {\n        bVar6 = false;\n        iVar16 = *0x7b7c94 + -1;\n        iVar14 = *0x7b7c94 + (*0x7b7c94 >> 0x1f & 0x1fU) >> 5;\n        puVar1 = &var_10h + iVar14;\n        uVar8 = 0x1f - (*0x7b7c94 & 0x1f);\n        if ((*puVar1 & 1 << (uVar8 & 0x1f)) != 0) {\n            uVar11 = (&var_10h)[iVar14] & ~(-1 << (uVar8 & 0x1f));\n            iVar7 = iVar14;\n            while( true ) {\n                if (uVar11 != 0) {\n                    iVar7 = iVar16 + (iVar16 >> 0x1f & 0x1fU) >> 5;\n                    uVar11 = 1 << (0x1f - (iVar16 & 0x1f) & 0x1f);\n                    puVar9 = &var_10h + iVar7;\n                    var_20h = *puVar9 + uVar11;\n                    if (var_20h < *puVar9) goto code_r0x0040d1e0;\n                    bVar17 = var_20h < uVar11;\n                    do {\n                        bVar6 = false;\n                        if (!bVar17) goto code_r0x0040d1e7;\ncode_r0x0040d1e0:\n                        do {\n                            bVar6 = true;\ncode_r0x0040d1e7:\n                            iVar7 = iVar7 + -1;\n                            *puVar9 = var_20h;\n                            if ((iVar7 < 0) || (!bVar6)) goto code_r0x0040d1f5;\n                            puVar9 = &var_10h + iVar7;\n                            var_20h = *puVar9 + 1;\n                        } while (var_20h < *puVar9);\n                        bVar17 = var_20h == 0;\n                    } while( true );\n                }\n                iVar7 = iVar7 + 1;\n                if (2 < iVar7) break;\n                uVar11 = (&var_10h)[iVar7];\n            }\n        }\ncode_r0x0040d1f5:\n        *puVar1 = *puVar1 & -1 << (uVar8 & 0x1f);\n        iVar14 = iVar14 + 1;\n        if (iVar14 < 3) {\n            puVar10 = &var_10h + iVar14;\n            for (iVar16 = 3 - iVar14; iVar16 != 0; iVar16 = iVar16 + -1) {\n                *puVar10 = 0;\n                puVar10 = puVar10 + 1;\n            }\n        }\n        iVar14 = iVar13;\n        if (bVar6) {\n            iVar14 = uVar12 - 0x3ffe;\n        }\n        if (iVar14 < *0x7b7c90 - *0x7b7c94) {\n            var_10h = 0;\n            var_ch = 0;\n            var_8h = 0;\n        }\n        else {\n            if (*0x7b7c90 < iVar14) {\n                if (iVar14 < *0x7b7c8c) {\n                    iVar14 = iVar14 + *0x7b7ca0;\n                    var_10h = var_10h & 0x7fffffff;\n                    iVar13 = *0x7b7c98 + (*0x7b7c98 >> 0x1f & 0x1fU) >> 5;\n                    uVar8 = uVar5 & 0x1f;\n                    var_28h = 0;\n                    var_20h = 0;\n                    do {\n                        uVar15 = (&var_10h)[var_20h];\n                        (&var_10h)[var_20h] = uVar15 >> uVar8 | var_28h;\n                        var_28h = (uVar15 & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n                        var_20h = var_20h + 1;\n                    } while (var_20h < 3);\n                    iVar16 = 2;\n                    puVar10 = &var_8h + -iVar13;\n                    do {\n                        if (iVar16 < iVar13) {\n                            (&var_10h)[iVar16] = 0;\n                        }\n                        else {\n                            (&var_10h)[iVar16] = *puVar10;\n                        }\n                        puVar10 = puVar10 + -1;\n                        iVar16 = iVar16 + -1;\n                    } while (-1 < iVar16);\n                }\n                else {\n                    var_ch = 0;\n                    var_8h = 0;\n                    var_10h = 0x80000000;\n                    iVar13 = *0x7b7c98 + (*0x7b7c98 >> 0x1f & 0x1fU) >> 5;\n                    uVar8 = uVar5 & 0x1f;\n                    var_28h = 0;\n                    var_20h = 0;\n                    do {\n                        uVar15 = (&var_10h)[var_20h];\n                        (&var_10h)[var_20h] = uVar15 >> uVar8 | var_28h;\n                        var_28h = (uVar15 & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n                        var_20h = var_20h + 1;\n                    } while (var_20h < 3);\n                    iVar14 = 2;\n                    puVar10 = &var_8h + -iVar13;\n                    do {\n                        if (iVar14 < iVar13) {\n                            (&var_10h)[iVar14] = 0;\n                        }\n                        else {\n                            (&var_10h)[iVar14] = *puVar10;\n                        }\n                        puVar10 = puVar10 + -1;\n                        iVar14 = iVar14 + -1;\n                    } while (-1 < iVar14);\n                    iVar14 = *0x7b7ca0 + *0x7b7c8c;\n                }\n                goto code_r0x0040d5a0;\n            }\n            iVar13 = *0x7b7c90 - iVar13;\n            var_10h = uVar15;\n            var_ch = uVar4;\n            iVar14 = iVar13 + (iVar13 >> 0x1f & 0x1fU) >> 5;\n            uVar8 = iVar13 & 0x1f;\n            var_8h = uVar3 << 0x10;\n            var_28h = 0;\n            var_20h = 0;\n            do {\n                uVar15 = (&var_10h)[var_20h];\n                (&var_10h)[var_20h] = uVar15 >> uVar8 | var_28h;\n                var_28h = (uVar15 & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n                var_20h = var_20h + 1;\n            } while (var_20h < 3);\n            iVar13 = 2;\n            puVar10 = &var_8h + -iVar14;\n            do {\n                if (iVar13 < iVar14) {\n                    (&var_10h)[iVar13] = 0;\n                }\n                else {\n                    (&var_10h)[iVar13] = *puVar10;\n                }\n                puVar10 = puVar10 + -1;\n                iVar13 = iVar13 + -1;\n            } while (-1 < iVar13);\n            iVar14 = *0x7b7c94 + -1;\n            iVar13 = *0x7b7c94 + (*0x7b7c94 >> 0x1f & 0x1fU) >> 5;\n            uVar8 = 0x1f - (*0x7b7c94 & 0x1f);\n            puVar1 = &var_10h + iVar13;\n            if ((*puVar1 & 1 << (uVar8 & 0x1f)) != 0) {\n                uVar15 = (&var_10h)[iVar13] & ~(-1 << (uVar8 & 0x1f));\n                iVar16 = iVar13;\n                while (uVar15 == 0) {\n                    iVar16 = iVar16 + 1;\n                    if (2 < iVar16) goto code_r0x0040d394;\n                    uVar15 = (&var_10h)[iVar16];\n                }\n                iVar16 = iVar14 + (iVar14 >> 0x1f & 0x1fU) >> 5;\n                bVar6 = false;\n                uVar12 = 1 << (0x1f - (iVar14 & 0x1f) & 0x1f);\n                uVar4 = (&var_10h)[iVar16];\n                uVar15 = uVar4 + uVar12;\n                if ((uVar15 < uVar4) || (uVar15 < uVar12)) {\n                    bVar6 = true;\n                }\n                (&var_10h)[iVar16] = uVar15;\n                while ((iVar16 = iVar16 + -1,  -1 < iVar16 && (bVar6))) {\n                    uVar4 = (&var_10h)[iVar16];\n                    uVar15 = uVar4 + 1;\n                    bVar6 = false;\n                    if ((uVar15 < uVar4) || (uVar15 == 0)) {\n                        bVar6 = true;\n                    }\n                    (&var_10h)[iVar16] = uVar15;\n                }\n            }\ncode_r0x0040d394:\n            *puVar1 = *puVar1 & -1 << (uVar8 & 0x1f);\n            iVar13 = iVar13 + 1;\n            if (iVar13 < 3) {\n                puVar10 = &var_10h + iVar13;\n                for (iVar14 = 3 - iVar13; iVar14 != 0; iVar14 = iVar14 + -1) {\n                    *puVar10 = 0;\n                    puVar10 = puVar10 + 1;\n                }\n            }\n            iVar13 = *0x7b7c98 + 1 + (*0x7b7c98 + 1 >> 0x1f & 0x1fU) >> 5;\n            uVar8 = uVar5 + 1 & 0x1f;\n            var_28h = 0;\n            var_20h = 0;\n            do {\n                uVar15 = (&var_10h)[var_20h];\n                (&var_10h)[var_20h] = uVar15 >> uVar8 | var_28h;\n                var_28h = (uVar15 & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n                var_20h = var_20h + 1;\n            } while (var_20h < 3);\n            iVar14 = 2;\n            puVar10 = &var_8h + -iVar13;\n            do {\n                if (iVar14 < iVar13) {\n                    (&var_10h)[iVar14] = 0;\n                }\n                else {\n                    (&var_10h)[iVar14] = *puVar10;\n                }\n                puVar10 = puVar10 + -1;\n                iVar14 = iVar14 + -1;\n            } while (-1 < iVar14);\n        }\n        iVar14 = 0;\n    }\ncode_r0x0040d5a0:\n    uVar15 = iVar14 << (0x1f - uVar5 & 0x1f) | -((uVar2 & 0x8000) != 0) & 0x80000000 | var_10h;\n    if (*0x7b7c9c == 0x40) {\n        arg_ch[1] = uVar15;\n        *arg_ch = var_ch;\n    }\n    else if (*0x7b7c9c == 0x20) {\n        *arg_ch = uVar15;\n    }\n    fcn.00408c0c(uVar2 & 0x8000);\n    return;\n}\n",
        "token_count": 3303
    },
    "004082c5": {
        "rules": [
            "hash data using aphash/ab9c9a8537c84744923d9bbb8bd71d10"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.004082c5(uint param_1, int32_t param_2)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = *(param_2 + 4) & 0x7ff00000;\n    if (uVar1 != 0x7ff00000) {\n        return uVar1;\n    }\n    return *(param_2 + 4);\n}\n",
        "token_count": 92
    },
    "null": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint main(void)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint uVar5;\n    uchar auStack616 [612];\n    \n    if (*0x4add21c == 0x598) {\n        fcn.00405cc8();\n    }\n    pcVar2 = *0x401034;\n    pcVar1 = *0x401004;\n    iVar3 = 0;\n    do {\n        if (*0x4add21c == 0x57c) {\n            uVar5 = 0;\n            uVar4 = 0;\n            (*pcVar1)();\n            (*pcVar2)(0, 0, auStack616, uVar4, uVar5);\n        }\n        if (iVar3 == 0xa23d8) {\n            *0x4add20c = (**0x401028)(0x404310);\n        }\n        iVar3 = iVar3 + 1;\n    } while (iVar3 < 0xa4808);\n    *0x4add21c = *0x7bd6ac + 0xb2d3b;\n    iVar3 = (**0x401018)(0x7bf5a0);\n    if (iVar3 == 0x14f7) {\n        if (*0x4add21c == 0x18) {\n            (**0x40100c)();\n            uVar4 = 0;\n            (**0x401008)();\n            (**0x40102c)(0, 0, 0, uVar4);\n        }\n        if (*0x4add21c == 0x6ad) {\n            (**0x401024)();\n            (**0x401118)(0, 0, 0);\n            (**0x401110)(0);\n        }\n        fcn.00405d12(0, 0);\n        fcn.00405bb0(0, 0, 0, 0);\n        fcn.004060b0(0, 0);\n    }\n    fcn.00404bd0();\n    return 0;\n}\n",
        "token_count": 463
    },
    "00405bb0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405bb0(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint var_2c8h;\n    \n    fcn.00406b3d(arg_8h, arg_ch);\n    fcn.00406b3d(arg_10h, arg_14h);\n    fcn.00408037();\n    fcn.004069bc();\n    return;\n}\n",
        "token_count": 100
    },
    "00406042": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406042(uint arg_8h)\n\n{\n    fcn.00405f02(arg_8h, 0, 0);\n    return;\n}\n",
        "token_count": 40
    },
    "00406b0a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406b0a(uint arg_8h, uint arg_ch)\n\n{\n    uint var_2c8h;\n    \n    fcn.00406b3d(arg_8h, arg_ch);\n    fcn.00407fd0();\n    fcn.004069bc();\n    return;\n}\n",
        "token_count": 71
    },
    "00407662": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00407676)\n// WARNING: Removing unreachable block (ram,0x0040767c)\n// WARNING: Removing unreachable block (ram,0x0040767e)\n\nvoid fcn.00407662(void)\n\n{\n    return;\n}\n",
        "token_count": 62
    },
    "00409ab2": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00409ab2(int32_t arg_8h)\n\n{\n    if ((arg_8h != 0) && (*(arg_8h + -8) == 0xdddd)) {\n        fcn.00406b79(arg_8h + -8);\n    }\n    return;\n}\n",
        "token_count": 70
    }
}