{
    "004010a4": {
        "rules": [
            "decompress data using aPLib/06666ba0b6a14a5481e4ee6eb664d454"
        ],
        "decompiled_code": "\nulong __fastcall\nfcn.004010a4(uint param_1, uint param_2, uint8_t *param_3, int32_t param_4, uint8_t *param_5, uint32_t param_6)\n\n{\n    uint8_t uVar1;\n    uint32_t uVar2;\n    uint8_t uVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    uint8_t uVar6;\n    int32_t iVar7;\n    uint32_t unaff_EBP;\n    uint8_t *puVar8;\n    uint8_t *puVar9;\n    bool bVar10;\n    bool bVar11;\n    bool bVar12;\n    bool bVar13;\n    uint32_t uStack40;\n    int32_t iStack36;\n    \n    iStack36 = param_4;\n    uStack40 = param_6;\n    if ((param_3 != NULL) && (param_5 != NULL)) {\n        uVar6 = 0;\n        puVar9 = param_5;\n        while (bVar10 = iStack36 != 0,  iStack36 = iStack36 + -1,  bVar10) {\n            uVar1 = *param_3;\n            param_3 = param_3 + 1;\n            bVar10 = uStack40 == 0;\n            uStack40 = uStack40 - 1;\n            if (bVar10) break;\n            *puVar9 = uVar1;\n            puVar9 = puVar9 + 1;\n            iVar7 = 2;\n            while( true ) {\n                bVar10 = CARRY1(uVar6, uVar6);\n                uVar6 = uVar6 * '\\x02';\n                if (uVar6 == 0) {\n                    bVar10 = iStack36 == 0;\n                    iStack36 = iStack36 + -1;\n                    if (bVar10) goto code_r0x0040134a;\n                    uVar6 = *param_3;\n                    param_3 = param_3 + 1;\n                    bVar10 = CARRY1(uVar6, uVar6);\n                    uVar6 = uVar6 * '\\x02' + 1;\n                }\n                if (!bVar10) break;\n                bVar10 = CARRY1(uVar6, uVar6);\n                uVar6 = uVar6 * '\\x02';\n                if (uVar6 == 0) {\n                    bVar10 = iStack36 == 0;\n                    iStack36 = iStack36 + -1;\n                    if (bVar10) goto code_r0x0040134a;\n                    uVar6 = *param_3;\n                    param_3 = param_3 + 1;\n                    bVar10 = CARRY1(uVar6, uVar6);\n                    uVar6 = uVar6 * '\\x02' + 1;\n                }\n                if (bVar10) {\n                    bVar10 = CARRY1(uVar6, uVar6);\n                    uVar6 = uVar6 * '\\x02';\n                    if (uVar6 == 0) {\n                        bVar10 = iStack36 == 0;\n                        iStack36 = iStack36 + -1;\n                        if (bVar10) goto code_r0x0040134a;\n                        uVar6 = *param_3;\n                        param_3 = param_3 + 1;\n                        bVar10 = CARRY1(uVar6, uVar6);\n                        uVar6 = uVar6 * '\\x02' + 1;\n                    }\n                    if (bVar10) {\n                        bVar10 = CARRY1(uVar6, uVar6);\n                        uVar6 = uVar6 * '\\x02';\n                        if (uVar6 == 0) {\n                            bVar10 = iStack36 == 0;\n                            iStack36 = iStack36 + -1;\n                            if (bVar10) goto code_r0x0040134a;\n                            uVar6 = *param_3;\n                            param_3 = param_3 + 1;\n                            bVar10 = CARRY1(uVar6, uVar6);\n                            uVar6 = uVar6 * '\\x02' + 1;\n                        }\n                        bVar11 = CARRY1(uVar6, uVar6);\n                        uVar6 = uVar6 * '\\x02';\n                        if (uVar6 == 0) {\n                            bVar11 = iStack36 == 0;\n                            iStack36 = iStack36 + -1;\n                            if (bVar11) goto code_r0x0040134a;\n                            uVar6 = *param_3;\n                            param_3 = param_3 + 1;\n                            bVar11 = CARRY1(uVar6, uVar6);\n                            uVar6 = uVar6 * '\\x02' + 1;\n                        }\n                        bVar12 = CARRY1(uVar6, uVar6);\n                        uVar6 = uVar6 * '\\x02';\n                        if (uVar6 == 0) {\n                            bVar12 = iStack36 == 0;\n                            iStack36 = iStack36 + -1;\n                            if (bVar12) goto code_r0x0040134a;\n                            uVar6 = *param_3;\n                            param_3 = param_3 + 1;\n                            bVar12 = CARRY1(uVar6, uVar6);\n                            uVar6 = uVar6 * '\\x02' + 1;\n                        }\n                        bVar13 = CARRY1(uVar6, uVar6);\n                        uVar6 = uVar6 * '\\x02';\n                        if (uVar6 == 0) {\n                            bVar13 = iStack36 == 0;\n                            iStack36 = iStack36 + -1;\n                            if (bVar13) goto code_r0x0040134a;\n                            uVar6 = *param_3;\n                            param_3 = param_3 + 1;\n                            bVar13 = CARRY1(uVar6, uVar6);\n                            uVar6 = uVar6 * '\\x02' + 1;\n                        }\n                        uVar4 = ((bVar10 * 2 + bVar11) * 2 + bVar12) * 2 + bVar13;\n                        if (uVar4 != 0) {\n                            if (param_6 - uStack40 < uVar4) goto code_r0x0040134a;\n                            uVar4 = puVar9[-uVar4];\n                        }\n                        bVar10 = uStack40 == 0;\n                        uStack40 = uStack40 - 1;\n                        if (bVar10) goto code_r0x0040134a;\n                        *puVar9 = uVar4;\n                        puVar9 = puVar9 + 1;\n                        iVar7 = 2;\n                    }\n                    else {\n                        bVar10 = iStack36 == 0;\n                        iStack36 = iStack36 + -1;\n                        if (bVar10) goto code_r0x0040134a;\n                        uVar1 = *param_3;\n                        param_3 = param_3 + 1;\n                        uVar3 = uVar1 >> 1;\n                        unaff_EBP = uVar3;\n                        if (uVar3 == 0) {\n                            return CONCAT44(param_2, puVar9 - param_5);\n                        }\n                        uVar4 = ((uVar1 & 1) != 0) + 2;\n                        if ((param_6 - uStack40 < unaff_EBP) ||\n                           (bVar10 = uStack40 < uVar4,  uStack40 = uStack40 - uVar4,  bVar10)) goto code_r0x0040134a;\n                        puVar8 = puVar9 + -unaff_EBP;\n                        for (; uVar4 != 0; uVar4 = uVar4 - 1) {\n                            *puVar9 = *puVar8;\n                            puVar8 = puVar8 + 1;\n                            puVar9 = puVar9 + 1;\n                        }\n                        iVar7 = 1;\n                    }\n                }\n                else {\n                    uVar4 = 1;\n                    do {\n                        bVar10 = CARRY1(uVar6, uVar6);\n                        uVar6 = uVar6 * '\\x02';\n                        if (uVar6 == 0) {\n                            bVar10 = iStack36 == 0;\n                            iStack36 = iStack36 + -1;\n                            if (bVar10) goto code_r0x0040134a;\n                            uVar6 = *param_3;\n                            param_3 = param_3 + 1;\n                            bVar10 = CARRY1(uVar6, uVar6);\n                            uVar6 = uVar6 * '\\x02' + 1;\n                        }\n                        bVar11 = CARRY4(uVar4, uVar4);\n                        uVar2 = uVar4 * 2;\n                        uVar4 = uVar2 + bVar10;\n                        if (bVar11 || CARRY4(uVar2, bVar10)) goto code_r0x0040134a;\n                        bVar10 = CARRY1(uVar6, uVar6);\n                        uVar6 = uVar6 * '\\x02';\n                        if (uVar6 == 0) {\n                            bVar10 = iStack36 == 0;\n                            iStack36 = iStack36 + -1;\n                            if (bVar10) goto code_r0x0040134a;\n                            uVar6 = *param_3;\n                            param_3 = param_3 + 1;\n                            bVar10 = CARRY1(uVar6, uVar6);\n                            uVar6 = uVar6 * '\\x02' + 1;\n                        }\n                    } while (bVar10);\n                    iVar5 = uVar4 - iVar7;\n                    iVar7 = 1;\n                    if (iVar5 == 0) {\n                        uVar4 = 1;\n                        do {\n                            bVar10 = CARRY1(uVar6, uVar6);\n                            uVar6 = uVar6 * '\\x02';\n                            if (uVar6 == 0) {\n                                bVar10 = iStack36 == 0;\n                                iStack36 = iStack36 + -1;\n                                if (bVar10) goto code_r0x0040134a;\n                                uVar6 = *param_3;\n                                param_3 = param_3 + 1;\n                                bVar10 = CARRY1(uVar6, uVar6);\n                                uVar6 = uVar6 * '\\x02' + 1;\n                            }\n                            bVar11 = CARRY4(uVar4, uVar4);\n                            uVar2 = uVar4 * 2;\n                            uVar4 = uVar2 + bVar10;\n                            if (bVar11 || CARRY4(uVar2, bVar10)) goto code_r0x0040134a;\n                            bVar10 = CARRY1(uVar6, uVar6);\n                            uVar6 = uVar6 * '\\x02';\n                            if (uVar6 == 0) {\n                                bVar10 = iStack36 == 0;\n                                iStack36 = iStack36 + -1;\n                                if (bVar10) goto code_r0x0040134a;\n                                uVar6 = *param_3;\n                                param_3 = param_3 + 1;\n                                bVar10 = CARRY1(uVar6, uVar6);\n                                uVar6 = uVar6 * '\\x02' + 1;\n                            }\n                        } while (bVar10);\n                        if ((param_6 - uStack40 < unaff_EBP) ||\n                           (bVar10 = uStack40 < uVar4,  uStack40 = uStack40 - uVar4,  bVar10)) goto code_r0x0040134a;\n                        puVar8 = puVar9 + -unaff_EBP;\n                        for (; uVar4 != 0; uVar4 = uVar4 - 1) {\n                            *puVar9 = *puVar8;\n                            puVar8 = puVar8 + 1;\n                            puVar9 = puVar9 + 1;\n                        }\n                    }\n                    else {\n                        uVar4 = iVar5 - 1;\n                        if (((uVar4 & 0xff000000) != 0) || (bVar10 = iStack36 == 0,  iStack36 = iStack36 + -1,  bVar10))\n                        goto code_r0x0040134a;\n                        unaff_EBP = CONCAT31(uVar4, *param_3);\n                        param_3 = param_3 + 1;\n                        uVar4 = 1;\n                        do {\n                            bVar10 = CARRY1(uVar6, uVar6);\n                            uVar6 = uVar6 * '\\x02';\n                            if (uVar6 == 0) {\n                                bVar10 = iStack36 == 0;\n                                iStack36 = iStack36 + -1;\n                                if (bVar10) goto code_r0x0040134a;\n                                uVar6 = *param_3;\n                                param_3 = param_3 + 1;\n                                bVar10 = CARRY1(uVar6, uVar6);\n                                uVar6 = uVar6 * '\\x02' + 1;\n                            }\n                            bVar11 = CARRY4(uVar4, uVar4);\n                            uVar2 = uVar4 * 2;\n                            uVar4 = uVar2 + bVar10;\n                            if (bVar11 || CARRY4(uVar2, bVar10)) goto code_r0x0040134a;\n                            bVar10 = CARRY1(uVar6, uVar6);\n                            uVar6 = uVar6 * '\\x02';\n                            if (uVar6 == 0) {\n                                bVar10 = iStack36 == 0;\n                                iStack36 = iStack36 + -1;\n                                if (bVar10) goto code_r0x0040134a;\n                                uVar6 = *param_3;\n                                param_3 = param_3 + 1;\n                                bVar10 = CARRY1(uVar6, uVar6);\n                                uVar6 = uVar6 * '\\x02' + 1;\n                            }\n                        } while (bVar10);\n                        uVar4 = (((uVar4 - (unaff_EBP < 32000)) + 2) - (unaff_EBP < 0x500)) + (unaff_EBP < 0x80) +\n                                (unaff_EBP < 0x80);\n                        if ((param_6 - uStack40 < unaff_EBP) ||\n                           (bVar10 = uStack40 < uVar4,  uStack40 = uStack40 - uVar4,  bVar10)) goto code_r0x0040134a;\n                        puVar8 = puVar9 + -unaff_EBP;\n                        for (; uVar4 != 0; uVar4 = uVar4 - 1) {\n                            *puVar9 = *puVar8;\n                            puVar8 = puVar8 + 1;\n                            puVar9 = puVar9 + 1;\n                        }\n                    }\n                }\n            }\n        }\n    }\ncode_r0x0040134a:\n    return CONCAT44(param_2, 0xffffffff);\n}\n",
        "token_count": 3363
    },
    "00403e30": {
        "rules": [
            "decompress data using aPLib/06666ba0b6a14a5481e4ee6eb664d454"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00403e9f)\n\nvoid __cdecl fcn.00403e30(uint *arg_8h, uint arg_ch, uint32_t arg_10h)\n\n{\n    uint uVar1;\n    uint var_8h;\n    uint *var_4h;\n    \n    if (arg_10h != 0) {\n        var_4h = arg_8h;\n        do {\n            if ((var_4h & 3) == 0) {\n                if (arg_10h < 4) {\n                    return;\n                }\n                uVar1 = CONCAT22(CONCAT11(arg_ch, arg_ch), CONCAT11(arg_ch, arg_ch));\n                for (; 0xf < arg_10h; arg_10h = arg_10h - 0x10) {\n                    *var_4h = uVar1;\n                    var_4h[1] = uVar1;\n                    var_4h[2] = uVar1;\n                    var_4h[3] = uVar1;\n                    var_4h = var_4h + 4;\n                }\n                for (; 3 < arg_10h; arg_10h = arg_10h - 4) {\n                    *var_4h = uVar1;\n                    var_4h = var_4h + 1;\n                }\n                return;\n            }\n            *var_4h = arg_ch;\n            var_4h = var_4h + 1;\n            arg_10h = arg_10h - 1;\n        } while (arg_10h != 0);\n    }\n    return;\n}\n",
        "token_count": 360
    },
    "00406c20": {
        "rules": [
            "decompress data using aPLib/06666ba0b6a14a5481e4ee6eb664d454"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00406c20(uint8_t *arg_8h)\n\n{\n    uchar *puVar1;\n    uint16_t uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint uVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    uint *in_ECX;\n    uint32_t uVar10;\n    uint16_t *puVar11;\n    int32_t iVar12;\n    uint32_t in_EDX;\n    uint32_t uVar13;\n    uint32_t uVar14;\n    uint16_t *puVar15;\n    int32_t iVar16;\n    uint32_t uVar17;\n    int32_t iVar18;\n    uchar *puVar19;\n    uint32_t uVar20;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    int32_t var_40h;\n    uint32_t var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint32_t var_30h;\n    uint32_t var_2ch;\n    uint var_28h;\n    uint32_t var_24h;\n    uint32_t var_20h;\n    uint32_t var_1ch;\n    int32_t var_18h;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    uint var_ch;\n    uint32_t var_8h;\n    uint8_t *var_4h;\n    \n    var_18h = 0;\n    iVar3 = in_ECX[4];\n    uVar4 = in_ECX[2];\n    var_24h = in_ECX[0xe];\n    var_2ch = in_ECX[0xf];\n    var_30h = in_ECX[0x10];\n    var_3ch = in_ECX[0x11];\n    uVar5 = in_ECX[1];\n    var_10h = in_ECX[0xd];\n    var_1ch = in_ECX[0xb];\n    var_4h = in_ECX[6];\n    var_14h = in_ECX[9];\n    iVar6 = in_ECX[5];\n    uVar7 = in_ECX[10];\n    uVar8 = in_ECX[0xc];\n    var_20h = in_ECX[7];\n    var_48h._0_1_ = *in_ECX;\n    var_8h = in_ECX[8];\n    do {\n        uVar14 = var_3ch;\n        uVar13 = var_1ch & (1 << (uVar4 & 0x1f)) - 1U;\n        puVar15 = iVar3 + (var_10h * 0x10 + uVar13) * 2;\n        uVar2 = *puVar15;\n        uVar9 = var_8h;\n        uVar20 = var_20h;\n        if (var_20h < 0x1000000) {\n            uVar20 = var_20h << 8;\n            uVar9 = var_8h << 8 | *var_4h;\n            var_4h = var_4h + 1;\n        }\n        var_20h = (uVar20 >> 0xb) * uVar2;\n        if (uVar9 < var_20h) {\n            *puVar15 = (0x800 - uVar2 >> 5) + uVar2;\n            iVar18 = iVar3 + 0xe6c;\n            if ((uVar8 != 0) || (var_1ch != 0)) {\n                uVar14 = var_14h;\n                if (var_14h == 0) {\n                    uVar14 = uVar7;\n                }\n                iVar18 = iVar18 + ((*((uVar14 - 1) + iVar6) >> (8 - var_48h & 0x1f)) +\n                                  ((var_1ch & (1 << (uVar5 & 0x1f)) - 1U) << (var_48h & 0x1f))) * 0x600;\n            }\n            if (var_10h < 7) {\n                uVar13 = 3;\n                if (var_10h < 4) {\n                    uVar13 = var_10h;\n                }\n                uVar14 = 1;\n                do {\n                    uVar14 = uVar14 * 2;\n                    uVar2 = *(uVar14 + iVar18);\n                    if (var_20h < 0x1000000) {\n                        var_20h = var_20h << 8;\n                        uVar9 = uVar9 << 8 | *var_4h;\n                        var_4h = var_4h + 1;\n                    }\n                    uVar20 = (var_20h >> 0xb) * uVar2;\n                    if (uVar9 < uVar20) {\n                        *(uVar14 + iVar18) = (0x800 - uVar2 >> 5) + uVar2;\n                        var_20h = uVar20;\n                    }\n                    else {\n                        var_20h = var_20h - uVar20;\n                        uVar9 = uVar9 - uVar20;\n                        *(uVar14 + iVar18) = uVar2 - (uVar2 >> 5);\n                        uVar14 = uVar14 + 1;\n                    }\n                    var_8h = uVar9;\n                } while (uVar14 < 0x100);\n            }\n            else {\n                var_8h = 0x100;\n                uVar20 = *(((-(var_14h < var_24h) & uVar7) - var_24h) + in_ECX[5] + var_14h);\n                uVar13 = (-(var_10h < 10) & 0xfffffffd) + 6;\n                uVar14 = 1;\n                uVar17 = var_8h;\n                do {\n                    var_8h = uVar17;\n                    uVar20 = uVar20 * 2;\n                    uVar17 = var_8h & uVar20;\n                    puVar15 = iVar18 + (uVar17 + var_8h + uVar14) * 2;\n                    uVar2 = *puVar15;\n                    if (var_20h < 0x1000000) {\n                        var_20h = var_20h << 8;\n                        uVar9 = uVar9 << 8 | *var_4h;\n                        var_4h = var_4h + 1;\n                    }\n                    uVar10 = (var_20h >> 0xb) * uVar2;\n                    if (uVar9 < uVar10) {\n                        uVar17 = ~uVar17;\n                        uVar14 = uVar14 * 2;\n                        *puVar15 = (0x800 - uVar2 >> 5) + uVar2;\n                        var_20h = uVar10;\n                    }\n                    else {\n                        var_20h = var_20h - uVar10;\n                        uVar14 = uVar14 * 2 + 1;\n                        uVar9 = uVar9 - uVar10;\n                        *puVar15 = uVar2 - (uVar2 >> 5);\n                    }\n                    uVar17 = var_8h & uVar17;\n                    var_8h = uVar9;\n                } while (uVar14 < 0x100);\n            }\n            var_10h = var_10h - uVar13;\n            *(var_14h + iVar6) = uVar14;\n            var_14h = var_14h + 1;\n            var_1ch = var_1ch + 1;\n        }\n        else {\n            uVar20 = uVar20 - var_20h;\n            var_8h = uVar9 - var_20h;\n            *puVar15 = uVar2 - (uVar2 >> 5);\n            uVar2 = *(iVar3 + 0x180 + var_10h * 2);\n            if (uVar20 < 0x1000000) {\n                uVar20 = uVar20 * 0x100;\n                var_8h = var_8h * 0x100 | *var_4h;\n                var_4h = var_4h + 1;\n            }\n            uVar9 = (uVar20 >> 0xb) * uVar2;\n            if (var_8h < uVar9) {\n                *(iVar3 + 0x180 + var_10h * 2) = (0x800 - uVar2 >> 5) + uVar2;\n                var_10h = var_10h + 0xc;\n                puVar15 = iVar3 + 0x664;\n            }\n            else {\n                uVar20 = uVar20 - uVar9;\n                var_8h = var_8h - uVar9;\n                *(iVar3 + 0x180 + var_10h * 2) = uVar2 - (uVar2 >> 5);\n                if ((uVar8 == 0) && (var_1ch == 0)) {\n                    return 1;\n                }\n                uVar2 = *(iVar3 + 0x198 + var_10h * 2);\n                if (uVar20 < 0x1000000) {\n                    uVar20 = uVar20 * 0x100;\n                    var_8h = var_8h * 0x100 | *var_4h;\n                    var_4h = var_4h + 1;\n                }\n                uVar9 = (uVar20 >> 0xb) * uVar2;\n                if (var_8h < uVar9) {\n                    *(iVar3 + 0x198 + var_10h * 2) = (0x800 - uVar2 >> 5) + uVar2;\n                    puVar15 = iVar3 + ((var_10h + 0xf) * 0x10 + uVar13) * 2;\n                    uVar2 = *puVar15;\n                    if (uVar9 < 0x1000000) {\n                        uVar9 = uVar9 * 0x100;\n                        var_8h = var_8h << 8 | *var_4h;\n                        var_4h = var_4h + 1;\n                    }\n                    var_20h = (uVar9 >> 0xb) * uVar2;\n                    if (var_8h < var_20h) {\n                        *puVar15 = (0x800 - uVar2 >> 5) + uVar2;\n                        *(var_14h + iVar6) = *(((-(var_14h < var_24h) & uVar7) - var_24h) + var_14h + iVar6);\n                        var_14h = var_14h + 1;\n                        var_1ch = var_1ch + 1;\n                        var_10h = (-(var_10h < 7) & 0xfffffffe) + 0xb;\n                        goto code_r0x0040782a;\n                    }\n                    uVar9 = uVar9 - var_20h;\n                    var_8h = var_8h - var_20h;\n                    *puVar15 = uVar2 - (uVar2 >> 5);\n                }\n                else {\n                    uVar20 = uVar20 - uVar9;\n                    var_8h = var_8h - uVar9;\n                    *(iVar3 + 0x198 + var_10h * 2) = uVar2 - (uVar2 >> 5);\n                    uVar2 = *(iVar3 + 0x1b0 + var_10h * 2);\n                    if (uVar20 < 0x1000000) {\n                        uVar20 = uVar20 * 0x100;\n                        var_8h = var_8h * 0x100 | *var_4h;\n                        var_4h = var_4h + 1;\n                    }\n                    uVar9 = (uVar20 >> 0xb) * uVar2;\n                    if (var_8h < uVar9) {\n                        *(iVar3 + 0x1b0 + var_10h * 2) = (0x800 - uVar2 >> 5) + uVar2;\n                        uVar14 = var_2ch;\n                    }\n                    else {\n                        uVar20 = uVar20 - uVar9;\n                        var_8h = var_8h - uVar9;\n                        *(iVar3 + 0x1b0 + var_10h * 2) = uVar2 - (uVar2 >> 5);\n                        uVar2 = *(iVar3 + 0x1c8 + var_10h * 2);\n                        if (uVar20 < 0x1000000) {\n                            uVar20 = uVar20 * 0x100;\n                            var_8h = var_8h * 0x100 | *var_4h;\n                            var_4h = var_4h + 1;\n                        }\n                        uVar17 = (uVar20 >> 0xb) * uVar2;\n                        if (var_8h < uVar17) {\n                            *(iVar3 + 0x1c8 + var_10h * 2) = (0x800 - uVar2 >> 5) + uVar2;\n                            uVar14 = var_30h;\n                            uVar9 = uVar17;\n                        }\n                        else {\n                            uVar9 = uVar20 - uVar17;\n                            var_8h = var_8h - uVar17;\n                            *(iVar3 + 0x1c8 + var_10h * 2) = uVar2 - (uVar2 >> 5);\n                            var_3ch = var_30h;\n                        }\n                        var_30h = var_2ch;\n                    }\n                    var_2ch = var_24h;\n                    var_24h = uVar14;\n                }\n                var_10h = (-(var_10h < 7) & 0xfffffffd) + 0xb;\n                puVar15 = iVar3 + 0xa68;\n            }\n            uVar14 = var_30h;\n            uVar2 = *puVar15;\n            if (uVar9 < 0x1000000) {\n                uVar9 = uVar9 << 8;\n                var_8h = var_8h << 8 | *var_4h;\n                var_4h = var_4h + 1;\n            }\n            var_20h = (uVar9 >> 0xb) * uVar2;\n            if (var_8h < var_20h) {\n                var_40h = 0;\n                uVar9 = 8;\n                *puVar15 = (0x800 - uVar2 >> 5) + uVar2;\n                puVar11 = puVar15 + uVar13 * 8 + 2;\n            }\n            else {\n                uVar9 = uVar9 - var_20h;\n                var_8h = var_8h - var_20h;\n                *puVar15 = uVar2 - (uVar2 >> 5);\n                uVar2 = puVar15[1];\n                if (uVar9 < 0x1000000) {\n                    uVar9 = uVar9 * 0x100;\n                    var_8h = var_8h * 0x100 | *var_4h;\n                    var_4h = var_4h + 1;\n                }\n                uVar20 = (uVar9 >> 0xb) * uVar2;\n                if (var_8h < uVar20) {\n                    var_40h = 8;\n                    uVar9 = 8;\n                    puVar15[1] = (0x800 - uVar2 >> 5) + uVar2;\n                    puVar11 = puVar15 + uVar13 * 8 + 0x82;\n                    var_20h = uVar20;\n                }\n                else {\n                    var_20h = uVar9 - uVar20;\n                    var_40h = 0x10;\n                    var_8h = var_8h - uVar20;\n                    puVar11 = puVar15 + 0x102;\n                    puVar15[1] = uVar2 - (uVar2 >> 5);\n                    uVar9 = 0x100;\n                }\n            }\n            uVar20 = 1;\n            do {\n                uVar13 = uVar20 * 2;\n                uVar2 = puVar11[uVar20];\n                if (var_20h < 0x1000000) {\n                    var_20h = var_20h << 8;\n                    var_8h = var_8h << 8 | *var_4h;\n                    var_4h = var_4h + 1;\n                }\n                uVar17 = (var_20h >> 0xb) * uVar2;\n                if (var_8h < uVar17) {\n                    puVar11[uVar20] = (0x800 - uVar2 >> 5) + uVar2;\n                    var_20h = uVar17;\n                }\n                else {\n                    var_20h = var_20h - uVar17;\n                    var_8h = var_8h - uVar17;\n                    puVar11[uVar20] = uVar2 - (uVar2 >> 5);\n                    uVar13 = uVar13 + 1;\n                }\n                uVar20 = uVar13;\n            } while (uVar13 < uVar9);\n            uVar13 = uVar13 + (var_40h - uVar9);\n            if (0xb < var_10h) {\n                uVar9 = 3;\n                if (uVar13 < 4) {\n                    uVar9 = uVar13;\n                }\n                iVar18 = iVar3 + 0x360 + uVar9 * 0x80;\n                uVar2 = *(iVar18 + 2);\n                if (var_20h < 0x1000000) {\n                    var_20h = var_20h << 8;\n                    var_8h = var_8h << 8 | *var_4h;\n                    var_4h = var_4h + 1;\n                }\n                uVar9 = (var_20h >> 0xb) * uVar2;\n                if (var_8h < uVar9) {\n                    *(iVar18 + 2) = (0x800 - uVar2 >> 5) + uVar2;\n                    iVar12 = 2;\n                }\n                else {\n                    var_8h = var_8h - uVar9;\n                    uVar9 = var_20h - uVar9;\n                    iVar12 = 3;\n                    *(iVar18 + 2) = uVar2 - (uVar2 >> 5);\n                }\n                iVar12 = iVar12 * 2;\n                uVar2 = *(iVar12 + iVar18);\n                if (uVar9 < 0x1000000) {\n                    uVar9 = uVar9 << 8;\n                    var_8h = var_8h << 8 | *var_4h;\n                    var_4h = var_4h + 1;\n                }\n                uVar20 = (uVar9 >> 0xb) * uVar2;\n                if (var_8h < uVar20) {\n                    *(iVar12 + iVar18) = (0x800 - uVar2 >> 5) + uVar2;\n                }\n                else {\n                    var_8h = var_8h - uVar20;\n                    uVar20 = uVar9 - uVar20;\n                    *(iVar12 + iVar18) = uVar2 - (uVar2 >> 5);\n                    iVar12 = iVar12 + 1;\n                }\n                iVar12 = iVar12 * 2;\n                uVar2 = *(iVar12 + iVar18);\n                if (uVar20 < 0x1000000) {\n                    uVar20 = uVar20 << 8;\n                    var_8h = var_8h << 8 | *var_4h;\n                    var_4h = var_4h + 1;\n                }\n                uVar9 = (uVar20 >> 0xb) * uVar2;\n                if (var_8h < uVar9) {\n                    *(iVar12 + iVar18) = (0x800 - uVar2 >> 5) + uVar2;\n                }\n                else {\n                    var_8h = var_8h - uVar9;\n                    uVar9 = uVar20 - uVar9;\n                    *(iVar12 + iVar18) = uVar2 - (uVar2 >> 5);\n                    iVar12 = iVar12 + 1;\n                }\n                iVar12 = iVar12 * 2;\n                uVar2 = *(iVar12 + iVar18);\n                if (uVar9 < 0x1000000) {\n                    uVar9 = uVar9 << 8;\n                    var_8h = var_8h << 8 | *var_4h;\n                    var_4h = var_4h + 1;\n                }\n                uVar20 = (uVar9 >> 0xb) * uVar2;\n                if (var_8h < uVar20) {\n                    *(iVar12 + iVar18) = (0x800 - uVar2 >> 5) + uVar2;\n                }\n                else {\n                    var_8h = var_8h - uVar20;\n                    uVar20 = uVar9 - uVar20;\n                    *(iVar12 + iVar18) = uVar2 - (uVar2 >> 5);\n                    iVar12 = iVar12 + 1;\n                }\n                iVar12 = iVar12 * 2;\n                uVar2 = *(iVar12 + iVar18);\n                if (uVar20 < 0x1000000) {\n                    uVar20 = uVar20 << 8;\n                    var_8h = var_8h << 8 | *var_4h;\n                    var_4h = var_4h + 1;\n                }\n                uVar9 = (uVar20 >> 0xb) * uVar2;\n                if (var_8h < uVar9) {\n                    *(iVar12 + iVar18) = (0x800 - uVar2 >> 5) + uVar2;\n                }\n                else {\n                    var_8h = var_8h - uVar9;\n                    uVar9 = uVar20 - uVar9;\n                    *(iVar12 + iVar18) = uVar2 - (uVar2 >> 5);\n                    iVar12 = iVar12 + 1;\n                }\n                iVar12 = iVar12 * 2;\n                uVar2 = *(iVar12 + iVar18);\n                if (uVar9 < 0x1000000) {\n                    uVar9 = uVar9 << 8;\n                    var_8h = var_8h << 8 | *var_4h;\n                    var_4h = var_4h + 1;\n                }\n                uVar20 = (uVar9 >> 0xb) * uVar2;\n                if (var_8h < uVar20) {\n                    *(iVar12 + iVar18) = (0x800 - uVar2 >> 5) + uVar2;\n                }\n                else {\n                    var_8h = var_8h - uVar20;\n                    uVar20 = uVar9 - uVar20;\n                    *(iVar12 + iVar18) = uVar2 - (uVar2 >> 5);\n                    iVar12 = iVar12 + 1;\n                }\n                uVar9 = iVar12 - 0x40;\n                var_20h = uVar20;\n                if (3 < uVar9) {\n                    iVar18 = (uVar9 >> 1) - 1;\n                    uVar17 = uVar9 & 1 | 2;\n                    if (uVar9 < 0xe) {\n                        var_3ch = 1;\n                        uVar17 = uVar17 << (iVar18 & 0x1f);\n                        iVar12 = 1;\n                        iVar16 = iVar3 + (uVar17 - uVar9) * 2 + 0x55e;\n                        uVar9 = uVar17;\n                        do {\n                            var_20h = iVar18;\n                            iVar12 = iVar12 * 2;\n                            uVar2 = *(iVar12 + iVar16);\n                            if (uVar20 < 0x1000000) {\n                                uVar20 = uVar20 << 8;\n                                var_8h = var_8h << 8 | *var_4h;\n                                var_4h = var_4h + 1;\n                            }\n                            uVar17 = (uVar20 >> 0xb) * uVar2;\n                            if (var_8h < uVar17) {\n                                *(iVar12 + iVar16) = (0x800 - uVar2 >> 5) + uVar2;\n                                uVar20 = uVar17;\n                            }\n                            else {\n                                uVar20 = uVar20 - uVar17;\n                                var_8h = var_8h - uVar17;\n                                *(iVar12 + iVar16) = uVar2 - (uVar2 >> 5);\n                                iVar12 = iVar12 + 1;\n                                uVar9 = uVar9 | var_3ch;\n                            }\n                            var_3ch = var_3ch * 2;\n                            iVar18 = var_20h + -1;\n                            var_20h = uVar20;\n                        } while (iVar18 != 0);\n                    }\n                    else {\n                        iVar18 = (uVar9 >> 1) - 5;\n                        do {\n                            if (uVar20 < 0x1000000) {\n                                uVar20 = uVar20 << 8;\n                                var_8h = var_8h << 8 | *var_4h;\n                                var_4h = var_4h + 1;\n                            }\n                            uVar20 = uVar20 >> 1;\n                            uVar9 = var_8h - uVar20 >> 0x1f;\n                            uVar17 = uVar17 * 2 + 1 + uVar9;\n                            var_8h = (var_8h - uVar20) + (uVar9 & uVar20);\n                            iVar18 = iVar18 + -1;\n                        } while (iVar18 != 0);\n                        uVar9 = uVar17 * 0x10;\n                        uVar2 = *(iVar3 + 0x646);\n                        if (uVar20 < 0x1000000) {\n                            uVar20 = uVar20 << 8;\n                            var_8h = var_8h * 0x100 | *var_4h;\n                            var_4h = var_4h + 1;\n                        }\n                        uVar17 = (uVar20 >> 0xb) * uVar2;\n                        if (var_8h < uVar17) {\n                            *(iVar3 + 0x646) = (0x800 - uVar2 >> 5) + uVar2;\n                            iVar18 = 2;\n                        }\n                        else {\n                            var_8h = var_8h - uVar17;\n                            uVar17 = uVar20 - uVar17;\n                            iVar18 = 3;\n                            *(iVar3 + 0x646) = uVar2 - (uVar2 >> 5);\n                            uVar9 = uVar9 | 1;\n                        }\n                        iVar18 = iVar18 * 2;\n                        uVar2 = *(iVar18 + 0x644 + iVar3);\n                        if (uVar17 < 0x1000000) {\n                            uVar17 = uVar17 << 8;\n                            var_8h = var_8h << 8 | *var_4h;\n                            var_4h = var_4h + 1;\n                        }\n                        uVar20 = (uVar17 >> 0xb) * uVar2;\n                        if (var_8h < uVar20) {\n                            *(iVar18 + 0x644 + iVar3) = (0x800 - uVar2 >> 5) + uVar2;\n                        }\n                        else {\n                            var_8h = var_8h - uVar20;\n                            uVar20 = uVar17 - uVar20;\n                            *(iVar18 + 0x644 + iVar3) = uVar2 - (uVar2 >> 5);\n                            iVar18 = iVar18 + 1;\n                            uVar9 = uVar9 | 2;\n                        }\n                        iVar18 = iVar18 * 2;\n                        uVar2 = *(iVar18 + 0x644 + iVar3);\n                        if (uVar20 < 0x1000000) {\n                            uVar20 = uVar20 << 8;\n                            var_8h = var_8h << 8 | *var_4h;\n                            var_4h = var_4h + 1;\n                        }\n                        uVar17 = (uVar20 >> 0xb) * uVar2;\n                        if (var_8h < uVar17) {\n                            *(iVar18 + 0x644 + iVar3) = (0x800 - uVar2 >> 5) + uVar2;\n                        }\n                        else {\n                            var_8h = var_8h - uVar17;\n                            uVar17 = uVar20 - uVar17;\n                            *(iVar18 + 0x644 + iVar3) = uVar2 - (uVar2 >> 5);\n                            iVar18 = iVar18 + 1;\n                            uVar9 = uVar9 | 4;\n                        }\n                        uVar2 = *(iVar3 + 0x644 + iVar18 * 2);\n                        if (uVar17 < 0x1000000) {\n                            uVar17 = uVar17 << 8;\n                            var_8h = var_8h << 8 | *var_4h;\n                            var_4h = var_4h + 1;\n                        }\n                        var_20h = (uVar17 >> 0xb) * uVar2;\n                        if (var_8h < var_20h) {\n                            *(iVar3 + 0x644 + iVar18 * 2) = (0x800 - uVar2 >> 5) + uVar2;\n                        }\n                        else {\n                            var_8h = var_8h - var_20h;\n                            var_20h = uVar17 - var_20h;\n                            uVar9 = uVar9 | 8;\n                            *(iVar3 + 0x644 + iVar18 * 2) = uVar2 - (uVar2 >> 5);\n                        }\n                        if (uVar9 == 0xffffffff) {\n                            var_18h = uVar13 + 0x112;\n                            var_10h = var_10h - 0xc;\ncode_r0x0040783e:\n                            if (var_20h < 0x1000000) {\n                                var_20h = var_20h << 8;\n                                var_8h = var_8h << 8 | *var_4h;\n                                var_4h = var_4h + 1;\n                            }\n                            in_ECX[6] = var_4h;\n                            in_ECX[8] = var_8h;\n                            in_ECX[0xb] = var_1ch;\n                            in_ECX[7] = var_20h;\n                            in_ECX[0x12] = var_18h;\n                            in_ECX[9] = var_14h;\n                            in_ECX[0xe] = var_24h;\n                            in_ECX[0xf] = var_2ch;\n                            in_ECX[0x10] = var_30h;\n                            in_ECX[0x11] = var_3ch;\n                            in_ECX[0xd] = var_10h;\n                            return 0;\n                        }\n                    }\n                }\n                var_30h = var_2ch;\n                var_2ch = var_24h;\n                var_24h = uVar9 + 1;\n                var_3ch = uVar14;\n                uVar14 = uVar8;\n                if (uVar8 == 0) {\n                    uVar14 = var_1ch;\n                }\n                if (uVar14 <= uVar9) {\n                    return 1;\n                }\n                var_10h = (-(var_10h < 0x13) & 0xfffffffd) + 10;\n            }\n            uVar13 = uVar13 + 2;\n            if (in_EDX == var_14h) {\n                return 1;\n            }\n            uVar14 = uVar13;\n            if (in_EDX - var_14h < uVar13) {\n                uVar14 = in_EDX - var_14h;\n            }\n            var_1ch = var_1ch + uVar14;\n            var_18h = uVar13 - uVar14;\n            uVar9 = ((-(var_14h < var_24h) & uVar7) - var_24h) + var_14h;\n            if (uVar7 < uVar9 + uVar14) {\n                do {\n                    puVar1 = uVar9 + iVar6;\n                    uVar9 = uVar9 + 1;\n                    *(var_14h + iVar6) = *puVar1;\n                    var_14h = var_14h + 1;\n                    if (uVar9 == uVar7) {\n                        uVar9 = 0;\n                    }\n                    uVar14 = uVar14 - 1;\n                } while (uVar14 != 0);\n            }\n            else {\n                puVar19 = var_14h + iVar6;\n                iVar18 = uVar9 - var_14h;\n                var_14h = var_14h + uVar14;\n                puVar1 = puVar19 + uVar14;\n                do {\n                    *puVar19 = puVar19[iVar18];\n                    puVar19 = puVar19 + 1;\n                } while (puVar19 != puVar1);\n            }\n        }\ncode_r0x0040782a:\n        if ((in_EDX <= var_14h) || (arg_8h <= var_4h)) goto code_r0x0040783e;\n    } while( true );\n}\n",
        "token_count": 7686
    },
    "004079b0": {
        "rules": [
            "decompress data using aPLib/06666ba0b6a14a5481e4ee6eb664d454"
        ],
        "decompiled_code": "\nbool __cdecl\nfcn.004079b0(uint *arg_8h, uint32_t arg_ch, uchar *arg_10h, uint32_t *arg_14h, int32_t arg_18h, uint *arg_1ch)\n\n{\n    uchar uVar1;\n    bool bVar2;\n    uint32_t uVar3;\n    uchar *arg_8h_00;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint *puVar6;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *arg_14h;\n    *arg_14h = 0;\n    fcn.004078c0();\n    *arg_1ch = 0;\n    iVar4 = arg_8h[0x12];\n    do {\n        if (iVar4 == 0x112) {\n            if (arg_8h[8] == 0) {\n                *arg_1ch = 1;\n            }\n            return arg_8h[8] != 0;\n        }\n        if (arg_8h[0x13] != 0) {\n            while ((var_4h != 0 && (arg_8h[0x16] < 5))) {\n                uVar1 = *arg_10h;\n                arg_10h = arg_10h + 1;\n                *(arg_8h[0x16] + 0x5c + arg_8h) = uVar1;\n                arg_8h[0x16] = arg_8h[0x16] + 1;\n                *arg_14h = *arg_14h + 1;\n                var_4h = var_4h - 1;\n            }\n            if (arg_8h[0x16] < 5) goto code_r0x00407c3c;\n            if (*(arg_8h + 0x17) != '\\0') {\n                return true;\n            }\n            arg_8h[7] = 0xffffffff;\n            arg_8h[8] = CONCAT31(CONCAT21(CONCAT11(*(arg_8h + 0x5d), *(arg_8h + 0x5e)), *(arg_8h + 0x5f)), \n                                 *(arg_8h + 0x18));\n            arg_8h[0x13] = 0;\n            arg_8h[0x16] = 0;\n        }\n        bVar2 = false;\n        if (arg_ch <= arg_8h[9]) {\n            if ((arg_8h[0x12] == 0) && (arg_8h[8] == 0)) {\n                *arg_1ch = 4;\n                return false;\n            }\n            if (arg_18h == 0) {\n                *arg_1ch = 2;\n                return false;\n            }\n            if (arg_8h[0x12] != 0) goto code_r0x00407bfc;\n            bVar2 = true;\n        }\n        if (arg_8h[0x14] != 0) {\n            uVar3 = (0x300 << (arg_8h[1] + *arg_8h & 0x1fU)) + 0x736;\n            if (uVar3 != 0) {\n                puVar6 = arg_8h[4];\n                for (uVar5 = uVar3 >> 1; uVar5 != 0; uVar5 = uVar5 - 1) {\n                    *puVar6 = 0x4000400;\n                    puVar6 = puVar6 + 1;\n                }\n                for (uVar3 = (uVar3 & 1) != 0; uVar3 != 0; uVar3 = uVar3 - 1) {\n                    *puVar6 = 0x400;\n                    puVar6 = puVar6 + 2;\n                }\n            }\n            arg_8h[0x11] = 1;\n            arg_8h[0x10] = 1;\n            arg_8h[0xf] = 1;\n            arg_8h[0xe] = 1;\n            arg_8h[0xd] = 0;\n            arg_8h[0x14] = 0;\n        }\n        uVar3 = arg_8h[0x16];\n        if (uVar3 == 0) {\n            if ((var_4h < 0x14) || (bVar2)) {\n                iVar4 = fcn.00407c90(arg_8h, arg_10h, var_4h);\n                if (iVar4 == 0) {\n                    fcn.00403de0(arg_8h + 0x17, arg_10h, var_4h);\n                    arg_8h[0x16] = var_4h;\n                    *arg_14h = *arg_14h + var_4h;\ncode_r0x00407c3c:\n                    *arg_1ch = 3;\n                    return false;\n                }\n                arg_8h_00 = arg_10h;\n                if ((bVar2) && (iVar4 != 2)) goto code_r0x00407bfc;\n            }\n            else {\n                arg_8h_00 = arg_10h + (var_4h - 0x14);\n            }\n            arg_8h[6] = arg_10h;\n            iVar4 = fcn.00406ba0(arg_8h_00);\n            if (iVar4 != 0) {\n                return true;\n            }\n            iVar4 = arg_8h[6] - arg_10h;\n            *arg_14h = *arg_14h + iVar4;\n        }\n        else {\n            for (uVar5 = 0; (uVar3 < 0x14 && (uVar5 < var_4h)); uVar5 = uVar5 + 1) {\n                *(uVar3 + 0x5c + arg_8h) = arg_10h[uVar5];\n                uVar3 = uVar3 + 1;\n            }\n            arg_8h[0x16] = uVar3;\n            if ((uVar3 < 0x14) || (bVar2)) {\n                iVar4 = fcn.00407c90(arg_8h, arg_8h + 0x17, uVar3);\n                if (iVar4 == 0) {\n                    *arg_14h = *arg_14h + uVar5;\n                    *arg_1ch = 3;\n                    return false;\n                }\n                if ((bVar2) && (iVar4 != 2)) {\ncode_r0x00407bfc:\n                    *arg_1ch = 2;\n                    return true;\n                }\n            }\n            arg_8h[6] = arg_8h + 0x17;\n            iVar4 = fcn.00406ba0(arg_8h + 0x17);\n            if (iVar4 != 0) {\n                return true;\n            }\n            iVar4 = ((arg_8h[6] - uVar3) - arg_8h) + (uVar5 - 0x5c);\n            *arg_14h = *arg_14h + iVar4;\n            arg_8h[0x16] = 0;\n        }\n        var_4h = var_4h - iVar4;\n        arg_10h = arg_10h + iVar4;\n        iVar4 = arg_8h[0x12];\n    } while( true );\n}\n",
        "token_count": 1691
    },
    "00407c90": {
        "rules": [
            "decompress data using aPLib/06666ba0b6a14a5481e4ee6eb664d454"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00407c90(uint *arg_8h, uint8_t *arg_ch, int32_t arg_10h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint16_t *puVar7;\n    uint8_t *puVar8;\n    int32_t iVar9;\n    int32_t iVar10;\n    uint32_t uVar11;\n    uint8_t *puVar12;\n    uint var_14h;\n    uint32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    puVar8 = arg_ch + arg_10h;\n    iVar4 = arg_8h[4];\n    iVar9 = arg_8h[0xd];\n    uVar1 = arg_8h[8];\n    uVar2 = (1 << (arg_8h[2] & 0x1f)) - 1U & arg_8h[0xb];\n    uVar11 = arg_8h[7];\n    if (uVar11 < 0x1000000) {\n        if (puVar8 <= arg_ch) {\n            return 0;\n        }\n        uVar11 = uVar11 << 8;\n        uVar1 = uVar1 << 8 | *arg_ch;\n        arg_ch = arg_ch + 1;\n    }\n    uVar3 = (uVar11 >> 0xb) * *(arg_8h[4] + (arg_8h[0xd] * 0x10 + uVar2) * 2);\n    if (uVar1 < uVar3) {\n        iVar4 = arg_8h[4] + 0xe6c;\n        if ((arg_8h[0xc] != 0) || (arg_8h[0xb] != 0)) {\n            iVar9 = arg_8h[9];\n            if (iVar9 == 0) {\n                iVar9 = arg_8h[10];\n            }\n            iVar4 = iVar4 + ((*(arg_8h[5] + -1 + iVar9) >> (8U - *arg_8h & 0x1f)) +\n                            (((1 << (arg_8h[1] & 0x1f)) - 1U & arg_8h[0xb]) << (*arg_8h & 0x1f))) * 0x600;\n        }\n        if (arg_8h[0xd] < 7) {\n            uVar11 = 1;\n            do {\n                uVar11 = uVar11 * 2;\n                uVar2 = uVar3;\n                if (uVar3 < 0x1000000) {\n                    if (puVar8 <= arg_ch) {\n                        return 0;\n                    }\n                    uVar2 = uVar3 << 8;\n                    uVar1 = uVar1 << 8 | *arg_ch;\n                    arg_ch = arg_ch + 1;\n                }\n                uVar3 = (uVar2 >> 0xb) * *(uVar11 + iVar4);\n                if (uVar3 <= uVar1) {\n                    uVar1 = uVar1 - uVar3;\n                    uVar11 = uVar11 + 1;\n                    uVar3 = uVar2 - uVar3;\n                }\n                puVar12 = arg_ch;\n            } while (uVar11 < 0x100);\n        }\n        else {\n            if (arg_8h[9] < arg_8h[0xe]) {\n                iVar9 = arg_8h[10];\n            }\n            else {\n                iVar9 = 0;\n            }\n            uVar2 = *((arg_8h[5] - arg_8h[0xe]) + arg_8h[9] + iVar9);\n            arg_8h = 0x100;\n            uVar11 = 1;\n            do {\n                uVar2 = uVar2 * 2;\n                uVar6 = arg_8h & uVar2;\n                if (uVar3 < 0x1000000) {\n                    if (puVar8 <= arg_ch) {\n                        return 0;\n                    }\n                    uVar3 = uVar3 << 8;\n                    uVar1 = uVar1 << 8 | *arg_ch;\n                    arg_ch = arg_ch + 1;\n                }\n                uVar5 = (uVar3 >> 0xb) * *(iVar4 + (uVar6 + uVar11 + arg_8h) * 2);\n                if (uVar1 < uVar5) {\n                    uVar11 = uVar11 * 2;\n                    uVar6 = ~uVar6;\n                    uVar3 = uVar5;\n                }\n                else {\n                    uVar3 = uVar3 - uVar5;\n                    uVar11 = uVar11 * 2 + 1;\n                    uVar1 = uVar1 - uVar5;\n                }\n                arg_8h = arg_8h & uVar6;\n                puVar12 = arg_ch;\n            } while (uVar11 < 0x100);\n        }\n        arg_8h = 0x1;\n        goto code_r0x00408257;\n    }\n    uVar11 = uVar11 - uVar3;\n    uVar1 = uVar1 - uVar3;\n    puVar12 = arg_ch;\n    if (uVar11 < 0x1000000) {\n        if (puVar8 <= arg_ch) {\n            return 0;\n        }\n        uVar11 = uVar11 * 0x100;\n        uVar1 = uVar1 * 0x100 | *arg_ch;\n        puVar12 = arg_ch + 1;\n    }\n    uVar6 = (uVar11 >> 0xb) * *(iVar4 + 0x180 + iVar9 * 2);\n    if (uVar1 < uVar6) {\n        var_10h = 0;\n        puVar7 = iVar4 + 0x664;\n        arg_8h = 0x2;\n    }\n    else {\n        uVar11 = uVar11 - uVar6;\n        arg_8h = 0x3;\n        uVar1 = uVar1 - uVar6;\n        if (uVar11 < 0x1000000) {\n            if (puVar8 <= puVar12) {\n                return 0;\n            }\n            uVar1 = uVar1 * 0x100 | *puVar12;\n            uVar11 = uVar11 * 0x100;\n            puVar12 = puVar12 + 1;\n        }\n        uVar3 = (uVar11 >> 0xb) * *(iVar4 + 0x198 + iVar9 * 2);\n        if (uVar1 < uVar3) {\n            if (uVar3 < 0x1000000) {\n                if (puVar8 <= puVar12) {\n                    return 0;\n                }\n                uVar3 = uVar3 * 0x100;\n                uVar1 = uVar1 << 8 | *puVar12;\n                puVar12 = puVar12 + 1;\n            }\n            uVar6 = (uVar3 >> 0xb) * *(iVar4 + ((iVar9 + 0xf) * 0x10 + uVar2) * 2);\n            if (uVar1 < uVar6) {\n                if ((uVar6 < 0x1000000) && (puVar8 <= puVar12)) {\n                    return 0;\n                }\n                return 3;\n            }\ncode_r0x00407ff8:\n            uVar1 = uVar1 - uVar6;\n            uVar6 = uVar3 - uVar6;\n        }\n        else {\n            uVar11 = uVar11 - uVar3;\n            uVar1 = uVar1 - uVar3;\n            if (uVar11 < 0x1000000) {\n                if (puVar8 <= puVar12) {\n                    return 0;\n                }\n                uVar11 = uVar11 * 0x100;\n                uVar1 = uVar1 * 0x100 | *puVar12;\n                puVar12 = puVar12 + 1;\n            }\n            uVar6 = (uVar11 >> 0xb) * *(iVar4 + 0x1b0 + iVar9 * 2);\n            if (uVar6 <= uVar1) {\n                uVar3 = uVar11 - uVar6;\n                uVar1 = uVar1 - uVar6;\n                if (uVar3 < 0x1000000) {\n                    if (puVar8 <= puVar12) {\n                        return 0;\n                    }\n                    uVar3 = uVar3 * 0x100;\n                    uVar1 = uVar1 * 0x100 | *puVar12;\n                    puVar12 = puVar12 + 1;\n                }\n                uVar6 = (uVar3 >> 0xb) * *(iVar4 + 0x1c8 + iVar9 * 2);\n                if (uVar6 <= uVar1) goto code_r0x00407ff8;\n            }\n        }\n        var_10h = 0xc;\n        puVar7 = iVar4 + 0xa68;\n    }\n    if (uVar6 < 0x1000000) {\n        if (puVar8 <= puVar12) {\n            return 0;\n        }\n        uVar6 = uVar6 << 8;\n        uVar1 = uVar1 << 8 | *puVar12;\n        puVar12 = puVar12 + 1;\n    }\n    uVar3 = (uVar6 >> 0xb) * *puVar7;\n    if (uVar1 < uVar3) {\n        arg_ch = 0x8;\n        puVar7 = puVar7 + uVar2 * 8 + 2;\n        var_4h = 0;\n    }\n    else {\n        uVar6 = uVar6 - uVar3;\n        uVar1 = uVar1 - uVar3;\n        if (uVar6 < 0x1000000) {\n            if (puVar8 <= puVar12) {\n                return 0;\n            }\n            uVar6 = uVar6 * 0x100;\n            uVar1 = uVar1 * 0x100 | *puVar12;\n            puVar12 = puVar12 + 1;\n        }\n        uVar11 = (uVar6 >> 0xb) * puVar7[1];\n        if (uVar1 < uVar11) {\n            arg_ch = 0x8;\n            var_4h = 8;\n            puVar7 = puVar7 + uVar2 * 8 + 0x82;\n            uVar3 = uVar11;\n        }\n        else {\n            uVar3 = uVar6 - uVar11;\n            var_4h = 0x10;\n            uVar1 = uVar1 - uVar11;\n            arg_ch = 0x100;\n            puVar7 = puVar7 + 0x102;\n        }\n    }\n    uVar11 = 1;\n    do {\n        uVar2 = uVar11 * 2;\n        uVar6 = uVar3;\n        if (uVar3 < 0x1000000) {\n            if (puVar8 <= puVar12) {\n                return 0;\n            }\n            uVar6 = uVar3 << 8;\n            uVar1 = uVar1 << 8 | *puVar12;\n            puVar12 = puVar12 + 1;\n        }\n        uVar3 = (uVar6 >> 0xb) * puVar7[uVar11];\n        if (uVar3 <= uVar1) {\n            uVar1 = uVar1 - uVar3;\n            uVar2 = uVar2 + 1;\n            uVar3 = uVar6 - uVar3;\n        }\n        uVar11 = uVar2;\n    } while (uVar2 < arg_ch);\n    uVar2 = uVar2 + (var_4h - arg_ch);\n    if (var_10h < 4) {\n        uVar11 = 1;\n        uVar6 = 3;\n        if (uVar2 < 4) {\n            uVar6 = uVar2;\n        }\n        do {\n            uVar11 = uVar11 * 2;\n            uVar2 = uVar3;\n            if (uVar3 < 0x1000000) {\n                if (puVar8 <= puVar12) {\n                    return 0;\n                }\n                uVar2 = uVar3 << 8;\n                uVar1 = uVar1 << 8 | *puVar12;\n                puVar12 = puVar12 + 1;\n            }\n            uVar3 = (uVar2 >> 0xb) * *(uVar11 + uVar6 * 0x80 + iVar4 + 0x360);\n            if (uVar3 <= uVar1) {\n                uVar1 = uVar1 - uVar3;\n                uVar11 = uVar11 + 1;\n                uVar3 = uVar2 - uVar3;\n            }\n        } while (uVar11 < 0x40);\n        uVar11 = uVar11 - 0x40;\n        if (3 < uVar11) {\n            iVar9 = (uVar11 >> 1) - 1;\n            if (uVar11 < 0xe) {\n                iVar4 = iVar4 + (((uVar11 & 1 | 2) << (iVar9 & 0x1f)) - uVar11) * 2 + 0x55e;\n            }\n            else {\n                iVar9 = (uVar11 >> 1) - 5;\n                do {\n                    if (uVar3 < 0x1000000) {\n                        if (puVar8 <= puVar12) {\n                            return 0;\n                        }\n                        uVar3 = uVar3 << 8;\n                        uVar1 = uVar1 << 8 | *puVar12;\n                        puVar12 = puVar12 + 1;\n                    }\n                    uVar3 = uVar3 >> 1;\n                    uVar1 = uVar1 - (0xffffffffU - (uVar1 - uVar3 >> 0x1f) & uVar3);\n                    iVar9 = iVar9 + -1;\n                } while (iVar9 != 0);\n                iVar9 = 4;\n                iVar4 = iVar4 + 0x644;\n            }\n            iVar10 = 1;\n            do {\n                iVar10 = iVar10 * 2;\n                uVar11 = uVar3;\n                if (uVar3 < 0x1000000) {\n                    if (puVar8 <= puVar12) {\n                        return 0;\n                    }\n                    uVar11 = uVar3 << 8;\n                    uVar1 = uVar1 << 8 | *puVar12;\n                    puVar12 = puVar12 + 1;\n                }\n                uVar3 = (uVar11 >> 0xb) * *(iVar10 + iVar4);\n                if (uVar3 <= uVar1) {\n                    uVar1 = uVar1 - uVar3;\n                    iVar10 = iVar10 + 1;\n                    uVar3 = uVar11 - uVar3;\n                }\n                iVar9 = iVar9 + -1;\n            } while (iVar9 != 0);\n        }\n    }\ncode_r0x00408257:\n    if (0xffffff < uVar3) {\n        return arg_8h;\n    }\n    if (puVar8 <= puVar12) {\n        return 0;\n    }\n    return arg_8h;\n}\n",
        "token_count": 3509
    },
    "00408380": {
        "rules": [
            "decompress data using aPLib/06666ba0b6a14a5481e4ee6eb664d454"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00408380(uint32_t *arg_8h, uint8_t *arg_ch, uint32_t arg_10h)\n\n{\n    uint8_t uVar1;\n    uint32_t uVar2;\n    \n    if (arg_10h < 5) {\n        return 4;\n    }\n    uVar2 = *(arg_ch + 1);\n    if (uVar2 < 0x1000) {\n        uVar2 = 0x1000;\n    }\n    arg_8h[3] = uVar2;\n    uVar1 = *arg_ch;\n    if (0xe0 < uVar1) {\n        return 4;\n    }\n    uVar2 = uVar1 / 9;\n    *arg_8h = uVar1 % 9;\n    arg_8h[2] = uVar2 / 5;\n    arg_8h[1] = uVar2 % 5;\n    return 0;\n}\n",
        "token_count": 215
    },
    "0040190f": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040190f(uchar *arg_8h)\n\n{\n    uint32_t *puVar1;\n    uint16_t uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uchar *in_ECX;\n    int32_t iVar7;\n    uint32_t uVar8;\n    int32_t *piVar9;\n    uchar *in_EDX;\n    int32_t *piVar10;\n    uchar *puVar11;\n    int32_t iVar12;\n    uchar *puVar13;\n    uint32_t uVar14;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar3 = *(in_EDX + 0x3c);\n    uVar2 = *(in_EDX + iVar3 + 0x14);\n    var_ch = *(in_EDX + iVar3 + 6);\n    iVar12 = *(in_EDX + iVar3 + 0x3c);\n    puVar11 = in_EDX;\n    puVar13 = in_ECX;\n    for (iVar7 = *(in_EDX + iVar3 + 0x54); iVar7 != 0; iVar7 = iVar7 + -1) {\n        *puVar13 = *puVar11;\n        puVar11 = puVar11 + 1;\n        puVar13 = puVar13 + 1;\n    }\n    if (var_ch != 0) {\n        piVar10 = in_EDX + uVar2 + 0x2c + iVar3;\n        do {\n            uVar8 = iVar12 + -1 + piVar10[-1] & ~(iVar12 - 1U);\n            if (uVar8 != 0) {\n                puVar11 = in_EDX + *piVar10;\n                puVar13 = in_ECX + piVar10[-2];\n                for (; uVar8 != 0; uVar8 = uVar8 - 1) {\n                    *puVar13 = *puVar11;\n                    puVar11 = puVar11 + 1;\n                    puVar13 = puVar13 + 1;\n                }\n            }\n            piVar10 = piVar10 + 10;\n            var_ch = var_ch - 1;\n        } while (var_ch != 0);\n    }\n    if (arg_8h == NULL) {\n        arg_8h = in_ECX;\n    }\n    iVar12 = iVar3 + 0xb0;\n    if (*(in_EDX + iVar3 + 4) != -0x799c) {\n        iVar12 = iVar3 + 0xa0;\n    }\n    iVar7 = *(in_EDX + iVar12);\n    if ((iVar7 != 0) && (uVar8 = *(in_EDX + iVar12 + 4),  uVar8 != 0)) {\n        if (*(in_EDX + iVar3 + 4) == -0x799c) {\n            iVar12 = *(in_EDX + iVar3 + 0x30);\n        }\n        else {\n            iVar12 = *(in_EDX + iVar3 + 0x34);\n        }\n        puVar11 = *(in_EDX + iVar3 + 0x30);\n        uVar5 = arg_8h - *(in_EDX + iVar3 + 0x30);\n        iVar3 = *(in_EDX + iVar3 + 0x34);\n        piVar10 = in_ECX + iVar7;\n        for (; 8 < uVar8; uVar8 = uVar8 - *piVar9) {\n            iVar7 = *piVar10;\n            uVar14 = piVar10[1] - 8U >> 1;\n            if ((piVar10[1] <= uVar8) && (uVar14 != 0)) {\n                piVar9 = piVar10 + 2;\n                do {\n                    uVar2 = *piVar9;\n                    if (uVar2 >> 0xc == 3) {\n                        *(in_ECX + (uVar2 & 0xfff) + iVar7) = arg_8h + (*(in_ECX + (uVar2 & 0xfff) + iVar7) - iVar12);\n                    }\n                    else if (uVar2 >> 0xc == 10) {\n                        uVar6 = uVar2 & 0xfff;\n                        puVar1 = in_ECX + uVar6 + iVar7;\n                        uVar4 = *puVar1;\n                        *puVar1 = *puVar1 + uVar5;\n                        *(in_ECX + uVar6 + 4 + iVar7) =\n                             *(in_ECX + uVar6 + 4 + iVar7) + (((arg_8h >> 0x1f) - iVar3) - (arg_8h < puVar11)) +\n                             CARRY4(uVar4, uVar5);\n                    }\n                    piVar9 = piVar9 + 2;\n                    uVar14 = uVar14 - 1;\n                } while (uVar14 != 0);\n            }\n            piVar9 = piVar10 + 1;\n            piVar10 = piVar10 + piVar10[1];\n        }\n    }\n    return 0;\n}\n",
        "token_count": 1180
    },
    "0040267e": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040267e(uint32_t arg_8h, uint32_t *arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int16_t iVar4;\n    uint uVar5;\n    code *pcVar6;\n    int32_t iVar7;\n    int32_t arg_8h_00;\n    int32_t iVar8;\n    int32_t iVar9;\n    int32_t *piVar10;\n    uint32_t uVar11;\n    int32_t *in_EDX;\n    uint32_t uVar12;\n    uint32_t uVar13;\n    uint var_68h;\n    uint var_60h;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_10h = 0;\n    uVar13 = 0;\n    uVar5 = (**0x4090b4)(0x409830);\n    pcVar6 = (**0x409024)(uVar5, 0x40988c);\n    if ((pcVar6 != NULL) && (iVar7 = (*pcVar6)(),  -1 < iVar7)) {\n        uVar5 = (**0x409084)(0, 0x200);\n        pcVar6 = *0x40907c;\n        iVar7 = (**0x40907c)(uVar5);\n        if (iVar7 != 0) {\n            uVar5 = (**0x409084)(0, 0x100);\n            arg_8h_00 = (*pcVar6)(uVar5);\n            if (((arg_8h_00 != 0) && (iVar8 = fcn.0040261e(arg_8h_00, 0x28),  iVar8 != 0)) &&\n               (iVar8 = fcn.0040261e(arg_8h_00 + 0x28, 0x40),  iVar8 != 0)) {\n                uVar1 = *(arg_8h_00 + 0x18);\n                iVar8 = *(arg_8h_00 + 0x3c);\n                iVar2 = *(arg_8h_00 + 0x1c);\n                piVar10 = in_EDX + 2;\n                iVar3 = *(arg_8h_00 + 0x38);\n                uVar13 = 4;\n                while ((iVar3 != uVar1 + 0x10 || (iVar8 != iVar2 + (0xffffffef < uVar1)))) {\n                    uVar12 = 0;\n                    iVar8 = fcn.0040261e(arg_8h_00 + 0x68, 0x98);\n                    if (iVar8 == 0) break;\n                    uVar13 = uVar13 + 0x120;\n                    iVar3 = *(arg_8h_00 + 0x68);\n                    iVar8 = *(arg_8h_00 + 0x6c);\n                    if (uVar13 <= arg_8h) {\n                        uVar11 = *(arg_8h_00 + 0xb0) >> 1;\n                        *(piVar10 + 6) = var_10h;\n                        piVar10[5] = *(arg_8h_00 + 0xd0);\n                        *(piVar10 + 7) = *(arg_8h_00 + 0xd4);\n                        piVar10[4] = *(arg_8h_00 + 0xa8);\n                        piVar10[2] = *(arg_8h_00 + 0x98);\n                        piVar10[3] = *(arg_8h_00 + 0x9c);\n                        if ((uVar11 < 0x100) && (iVar9 = fcn.0040261e(iVar7, *(arg_8h_00 + 0xb0)),  iVar9 != 0)) {\n                            if (uVar11 != 0) {\n                                do {\n                                    *(uVar12 + 0x20 + piVar10) = *(iVar7 + uVar12 * 2);\n                                    uVar12 = uVar12 + 1;\n                                } while (uVar12 < uVar11);\n                            }\n                            *(uVar11 + 0x20 + piVar10) = 0;\n                            iVar4 = (**0x4090f8)(piVar10 + 8, 0x5c);\n                            *(piVar10 + 0x1e) = iVar4 + (-0x1f - piVar10);\n                        }\n                        piVar10 = piVar10 + 0x48;\n                        var_10h = var_10h + 1;\n                    }\n                }\n                if (in_EDX != NULL) {\n                    *in_EDX = var_10h;\n                }\n            }\n            uVar5 = (**0x409084)(0, iVar7);\n            (**0x409080)(uVar5);\n            if (arg_8h_00 != 0) {\n                uVar5 = (**0x409084)(0, arg_8h_00);\n                (**0x409080)(uVar5);\n            }\n        }\n    }\n    uVar5 = 0;\n    if (arg_ch != NULL) {\n        *arg_ch = uVar13;\n    }\n    if ((uVar13 <= arg_8h) && (uVar13 != 0)) {\n        uVar5 = 1;\n    }\n    return uVar5;\n}\n",
        "token_count": 1280
    },
    "00401360": {
        "rules": [
            "hash data using aphash/10489b186fc44711a1078750698db7a9",
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0"
        ],
        "decompiled_code": "\nulong __fastcall fcn.00401360(uint param_1, uint param_2, uint32_t *param_3, uint32_t param_4)\n\n{\n    uint8_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    \n    uVar2 = 0;\n    if (param_3 != NULL) {\n        uVar2 = 0xffffffff;\n        if (param_4 != 0) {\n            do {\n                if ((param_3 & 3) == 0) break;\n                uVar1 = *param_3;\n                param_3 = param_3 + 1;\n                uVar2 = uVar2 >> 8 ^ *((uVar2 ^ uVar1) * 4 + 0x409138);\n                param_4 = param_4 - 1;\n            } while (param_4 != 0);\n            uVar3 = param_4 & 7;\n            for (param_4 = param_4 >> 3; param_4 != 0; param_4 = param_4 - 1) {\n                uVar2 = (uVar2 ^ *param_3) >> 8 ^ *(((uVar2 ^ *param_3) & 0xff) * 4 + 0x409138);\n                uVar2 = uVar2 >> 8 ^ *((uVar2 & 0xff) * 4 + 0x409138);\n                uVar2 = uVar2 >> 8 ^ *((uVar2 & 0xff) * 4 + 0x409138);\n                uVar2 = uVar2 >> 8 ^ *((uVar2 & 0xff) * 4 + 0x409138) ^ param_3[1];\n                param_3 = param_3 + 2;\n                uVar2 = uVar2 >> 8 ^ *((uVar2 & 0xff) * 4 + 0x409138);\n                uVar2 = uVar2 >> 8 ^ *((uVar2 & 0xff) * 4 + 0x409138);\n                uVar2 = uVar2 >> 8 ^ *((uVar2 & 0xff) * 4 + 0x409138);\n                uVar2 = uVar2 >> 8 ^ *((uVar2 & 0xff) * 4 + 0x409138);\n            }\n            for (; uVar3 != 0; uVar3 = uVar3 - 1) {\n                uVar1 = *param_3;\n                param_3 = param_3 + 1;\n                uVar2 = uVar2 >> 8 ^ *((uVar2 ^ uVar1) * 4 + 0x409138);\n            }\n        }\n        uVar2 = ~uVar2;\n    }\n    return CONCAT44(param_2, uVar2);\n}\n",
        "token_count": 626
    },
    "004015bd": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004015bd(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    int32_t in_ECX;\n    uint var_4h;\n    \n    iVar1 = fcn.00401567();\n    if (iVar1 != 0) {\n        in_ECX = iVar1;\n    }\n    iVar2 = (**0x409094)(in_ECX, 0xc0000000, 0, 0, 4, 0x80, 0);\n    if (iVar2 == -1) {\n        uVar3 = (**0x409064)();\n    }\n    else {\n        iVar4 = (**0x409088)(iVar2);\n        if (iVar4 == 0) {\n            uVar3 = (**0x409064)();\n        }\n        else {\n            (**0x409078)(iVar2);\n            uVar3 = 0;\n        }\n        (**0x409068)(iVar2);\n    }\n    if (iVar1 != 0) {\n        uVar5 = (**0x409084)(0, iVar1);\n        (**0x409080)(uVar5);\n    }\n    return uVar3;\n}\n",
        "token_count": 278
    },
    "0040164a": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040164a(int32_t *arg_8h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint uVar6;\n    int32_t *in_EDX;\n    int32_t iVar7;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    iVar3 = *0x41b144;\n    iVar7 = 0;\n    iVar2 = fcn.00401567();\n    if (iVar2 != 0) {\n        iVar3 = iVar2;\n    }\n    iVar3 = (**0x409094)(iVar3, 0x80000000, 1, 0, 3, 0x80, 0);\n    if (iVar3 != -1) {\n        iVar4 = (**0x409070)(iVar3, 0);\n        if (iVar4 == 0) {\n            iVar4 = 0xe8;\n            goto code_r0x004016f6;\n        }\n        uVar6 = (**0x409084)(0, iVar4 + 2);\n        iVar7 = (**0x40907c)(uVar6);\n        if (iVar7 != 0) {\n            iVar5 = (**0x409090)(iVar3, iVar7, iVar4, &var_4h, 0);\n            if (iVar5 != 0) {\n                if (iVar4 == var_4h) {\n                    *(iVar4 + iVar7) = 0;\n                    *in_EDX = iVar7;\n                    *arg_8h = iVar4;\n                    iVar4 = 0;\n                }\n                else {\n                    iVar4 = 0x1e;\n                }\n                goto code_r0x004016f6;\n            }\n        }\n    }\n    iVar4 = (**0x409064)();\ncode_r0x004016f6:\n    if (iVar3 != -1) {\n        (**0x409068)(iVar3);\n    }\n    pcVar1 = *0x409080;\n    if ((iVar7 != 0) && (iVar4 != 0)) {\n        uVar6 = (**0x409084)(0, iVar7);\n        (*pcVar1)(uVar6);\n    }\n    if (iVar2 != 0) {\n        uVar6 = (**0x409084)(0, iVar2);\n        (*pcVar1)(uVar6);\n    }\n    return iVar4;\n}\n",
        "token_count": 553
    },
    "00402138": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00402138(uint *param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint noname_1;\n    int32_t iVar3;\n    uint *puVar4;\n    uint var_2e8h;\n    int32_t var_230h;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    var_18h = 0xccccfeeb;\n    iVar3 = 0;\n    puVar4 = &var_2e8h;\n    for (iVar2 = 0x2cc; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar4 = 0;\n        puVar4 = puVar4 + 1;\n    }\n    var_4h = *param_1;\n    var_ch = 0;\n    (**0x4090a0)();\n    iVar2 = fcn.0040246a();\n    if (iVar2 != 0) {\n        var_ch = 0x10;\n    }\n    var_2e8h = 0x10003;\n    iVar2 = fcn.00401f9a();\n    iVar1 = (**0x40905c)(var_4h, iVar2, &var_14h, 4, &var_10h);\n    if (((iVar1 != 0) && (var_10h == 4)) && (iVar1 = fcn.004020e0(&var_18h),  iVar1 != 0)) {\n        var_8h = 6000;\n        do {\n            (**0x4090c0)(param_1[1]);\n            (**0x40908c)(300);\n            (**0x4090bc)(param_1[1]);\n            var_8h = var_8h + -300;\n            iVar1 = (**0x409098)(param_1[1], &var_2e8h);\n            if (iVar1 == 0) goto code_r0x0040225c;\n            if (var_8h < 1) {\n                if (var_230h != iVar2) goto code_r0x00402264;\n                break;\n            }\n        } while (var_230h != iVar2);\n        iVar3 = fcn.00401d72(var_ch, noname_1, fcn.00401d5a);\n        (**0x4090c4)();\n        fcn.004020e0(&var_14h);\n        if (iVar3 != -1) goto code_r0x00402264;\n    }\ncode_r0x0040225c:\n    iVar3 = (**0x409064)();\ncode_r0x00402264:\n    (**0x4090a0)();\n    return iVar3;\n}\n",
        "token_count": 638
    },
    "0040251f": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0040251f(int32_t param_1)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint extraout_ECX;\n    int32_t iVar4;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    iVar4 = 0;\n    var_4h = 0;\n    iVar2 = fcn.00402f29();\n    if (iVar2 == 0) {\n        iVar2 = fcn.00402292(extraout_ECX);\n        if ((iVar2 != 0) && (var_8h = fcn.00402318(),  var_8h != 0)) {\n            cVar1 = '\\0';\n            if (((*0x41b138 & 1) != 0) && (*(*(param_1 + 0x3c) + 4 + param_1) == 0x14c)) {\n                cVar1 = fcn.004024d7();\n                cVar1 = '\\x01' - (cVar1 != '\\0');\n            }\n            iVar4 = (**0x409094)(var_ch, 0x80000000, 1, 0, 3, 0x80, 0);\n            if (iVar4 != -1) {\n                iVar2 = (**0x409074)(iVar4, var_8h, 0, 0);\n                if (((iVar2 == var_8h) && (iVar2 = (**0x409090)(iVar4, &var_14h, 4, &var_10h, 0),  iVar2 != 0)) &&\n                   (var_10h == 4)) {\n                    var_4h = var_14h + param_1;\n                }\n                (**0x409068)(iVar4);\n            }\n            iVar4 = var_4h;\n            if (cVar1 != '\\0') {\n                fcn.004024d7();\n                iVar4 = var_4h;\n            }\n        }\n        uVar3 = (**0x409084)(0, var_ch);\n        (**0x409080)(uVar3);\n    }\n    return iVar4;\n}\n",
        "token_count": 508
    },
    "0040334d": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040334d(uint *arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint in_EDX;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint var_230h;\n    uint var_228h;\n    uint var_20ch;\n    uint var_4h;\n    \n    iVar4 = 2;\n    iVar3 = 0;\n    var_4h = in_EDX;\n    iVar1 = (**0x409034)(2, 0);\n    if (iVar1 != -1) {\n        var_230h = 0x22c;\n        iVar2 = (**0x40903c)(iVar1, &var_230h);\n        if (iVar2 != 0) {\n            do {\n                iVar2 = (**0x409018)(&var_20ch, 0x409a44);\n                if (iVar2 == 0) {\n                    iVar3 = (**0x409040)(var_4h, 0, var_228h);\n                    if (iVar3 != 0) {\n                        iVar4 = 0;\n                        if (arg_8h != NULL) {\n                            *arg_8h = var_228h;\n                        }\n                        break;\n                    }\n                    iVar4 = (**0x409064)();\n                }\n                iVar2 = (**0x409038)(iVar1, &var_230h);\n            } while (iVar2 != 0);\n            (**0x409068)(iVar1);\n            if (iVar4 == 0) {\n                return iVar3;\n            }\n            (**0x4090d0)(iVar4);\n            return iVar3;\n        }\n        (**0x409068)(iVar1);\n    }\n    return 0;\n}\n",
        "token_count": 386
    },
    "00404210": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.00404210(code **arg_8h)\n\n{\n    int32_t **ppiVar1;\n    uint16_t uVar2;\n    code **ppcVar3;\n    ushort uVar4;\n    uint32_t *arg_8h_00;\n    int32_t iVar5;\n    int32_t iVar6;\n    code *pcVar7;\n    int32_t *piVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    int32_t iVar11;\n    uint32_t uVar12;\n    bool bVar13;\n    ulong uVar14;\n    uint *puVar15;\n    uint uVar16;\n    uint uVar17;\n    uint var_804h;\n    uint var_55ch;\n    uint var_40ch;\n    int32_t aiStack892 [2];\n    uint var_370h;\n    int32_t var_368h;\n    int32_t var_360h;\n    int32_t var_344h;\n    int32_t var_328h;\n    uint var_270h;\n    uint var_26ch;\n    uint var_268h;\n    int32_t var_1d4h;\n    int32_t var_1b4h;\n    uint var_19ch;\n    uint var_198h;\n    uint var_194h;\n    int32_t var_18ch;\n    uint var_188h;\n    int32_t var_184h;\n    uint var_180h;\n    uint var_17ch;\n    uint var_174h;\n    uint var_170h;\n    uint var_164h;\n    int32_t var_130h;\n    int32_t var_11ch;\n    uint var_110h;\n    uint var_10ch;\n    uint var_108h;\n    int32_t var_104h;\n    int32_t var_100h;\n    uint var_fch;\n    uint var_f4h;\n    uint var_f0h;\n    uint var_e8h;\n    uint var_b4h;\n    uint var_b0h;\n    uint var_ach;\n    uint var_a8h;\n    uint var_a4h;\n    uint32_t var_9ch;\n    uint32_t var_98h;\n    uint32_t *var_94h;\n    int32_t var_90h;\n    uint32_t var_8ch;\n    int32_t var_88h;\n    int32_t var_84h;\n    uint32_t var_80h;\n    uint32_t var_7ch;\n    int32_t var_78h;\n    int32_t var_71h;\n    uint32_t var_6ch;\n    code *var_68h;\n    int32_t var_64h;\n    uint32_t var_60h;\n    uint32_t var_5ch;\n    uint32_t var_58h;\n    uint32_t var_54h;\n    uint32_t var_50h;\n    uint32_t var_4ch;\n    uint32_t var_48h;\n    uint32_t var_44h;\n    uint32_t var_40h;\n    uint32_t var_3ch;\n    uint32_t var_38h;\n    uint32_t var_34h;\n    uint32_t var_30h;\n    uint32_t var_2ch;\n    uint32_t var_28h;\n    uint32_t var_24h;\n    uint32_t var_20h;\n    uint32_t var_1ch;\n    uint32_t var_18h;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    uint32_t var_8h;\n    uint32_t var_4h;\n    \n    ppcVar3 = arg_8h;\n    arg_8h_00 = (*arg_8h[0x10])(0x40, 0x20009);\n    if ((arg_8h_00 == NULL) || (var_94h = arg_8h_00,  var_60h = (*arg_8h[0x10])(0x40, 0x20009),  var_60h == 0)) {\n        return -1;\n    }\n    fcn.00403e30(&var_90h, 0, 4);\n    var_b0h = 0xb8637;\n    var_b4h = 0xba40;\n    iVar5 = (*arg_8h[0x10])(0x40, 0xb8638);\n    if (iVar5 == 0) {\n        return -1;\n    }\n    fcn.00406b60(iVar5, &var_b0h, 0x40b00d, &var_b4h, 0x40b000, 5, arg_8h);\n    var_71h._0_1_ = '\\0';\n    *0x41b0a8 = iVar5;\n    iVar5 = fcn.00403d30(arg_8h, 6, 1, &var_71h);\n    var_24h = fcn.00403d30(arg_8h, 6, 2, 0);\n    iVar6 = fcn.00403d30(arg_8h, 6, 3, 0);\n    if (((iVar5 == 0) && (var_24h == 0)) && (iVar6 == 0)) {\n        return -1;\n    }\n    (*arg_8h[0x15])();\n    fcn.00406a40(arg_8h);\n    iVar5 = fcn.00406730(arg_8h);\n    if (iVar5 < 0) {\n        return iVar5;\n    }\n    if (*(arg_8h[0x20] + 0x3c) != 0) {\n        fcn.00406630(arg_8h);\n    }\n    iVar5 = fcn.00403d30(arg_8h, 6, 3, 0);\n    var_7ch = (-(iVar5 != 0) & 0xffffe580) - 0x580;\n    fcn.00403e30(arg_8h[0x20] + 0x270, 0, 4000);\n    if (*arg_8h[0x20] == 0) {\n        puVar15 = &var_804h;\n        uVar17 = 10;\n        uVar16 = 0x11;\n    }\n    else {\n        puVar15 = &var_55ch;\n        uVar17 = 7;\n        uVar16 = 0xc;\n    }\n    uVar16 = (*arg_8h[0xb])(uVar16, uVar17, 1, 0x20, puVar15);\n    *(arg_8h[0x20] + 0x26c) = uVar16;\n    fcn.00403e30(var_60h, 0, 0x20009);\n    fcn.00403e30(arg_8h_00, 0, 0x20009);\n    fcn.00403e30(&var_55ch, 0, 0x150);\n    fcn.00403e30(&var_804h, 0, 0x2a8);\n    if (*arg_8h[0x20] == 0) {\n        uVar16 = (*arg_8h[0xf])(0x409578, 0x409774);\n        pcVar7 = (*arg_8h[3])(uVar16);\n        iVar5 = (*pcVar7)();\n        pcVar7 = arg_8h[0x20];\n        *(pcVar7 + 0x1218) = *(iVar5 + 0x94);\n        *(pcVar7 + 0x121c) = 0;\n    }\n    else {\n        uVar14 = fcn.00406700();\n        pcVar7 = arg_8h[0x20];\n        *(pcVar7 + 0x1218) = uVar14;\n        *(pcVar7 + 0x121c) = uVar14 >> 0x20;\n    }\n    uVar16 = (*arg_8h[0xf])(0x409588, 0x409788);\n    var_68h = (*arg_8h[3])(uVar16);\n    if (*arg_8h[0x20] == 0) {\n        fcn.00403e30(&var_130h, 0, 0x7c);\n        var_110h = 0x6e;\n        var_10ch = 100;\n        var_108h = 44000;\n        var_100h = *(*(arg_8h[0x20] + 0x1218) + *(arg_8h[0x20] + 0x26c) * 0x10) + 0x2c;\n        var_fch = 0x1b8;\n        uVar10 = 0;\n        var_104h = var_100h;\n        var_f4h = 6;\n        var_f0h = 0x10000;\n        var_e8h = 0x4800000;\n        do {\n            uVar4 = (*arg_8h[0x1d])(*(&var_130h + uVar10));\n            *(uVar10 + 0x16df3 + *0x41b0a8) = uVar4;\n            uVar10 = uVar10 + 2;\n        } while (uVar10 < 0x7c);\n    }\n    else {\n        fcn.00403e30(&var_1d4h, 0, 0xa4);\n        pcVar7 = arg_8h[0x20];\n        var_19ch = 0x6e;\n        var_198h = 100;\n        var_194h = 44000;\n        var_184h = *(*(pcVar7 + 0x1218) + *(pcVar7 + 0x26c) * 0x18) + 0x48;\n        uVar10 = 0;\n        var_18ch = var_184h;\n        var_180h = *(*(pcVar7 + 0x1218) + 4 + *(pcVar7 + 0x26c) * 0x18);\n        var_188h = var_180h;\n        var_17ch = 0x1b8;\n        var_174h = 6;\n        var_170h = 0x10000;\n        var_164h = 0x4800200;\n        do {\n            uVar4 = (*arg_8h[0x1d])(*(&var_1d4h + uVar10));\n            *(uVar10 + 0x16def + *0x41b0a8) = uVar4;\n            uVar10 = uVar10 + 2;\n        } while (uVar10 < 0xa4);\n    }\n    fcn.00406680(arg_8h);\n    iVar5 = 100;\n    do {\n        if (*arg_8h[0x20] == 0) {\n            puVar15 = &var_804h;\n            uVar17 = 10;\n            uVar16 = 0x11;\n        }\n        else {\n            puVar15 = &var_55ch;\n            uVar17 = 7;\n            uVar16 = 0xc;\n        }\n        (*arg_8h[0xb])(uVar16, uVar17, 1, 0x20, puVar15);\n        iVar5 = iVar5 + -1;\n    } while (iVar5 != 0);\n    do {\n        do {\n            bVar13 = false;\n            iVar5 = 0xf;\n            do {\n                var_90h = 0;\n                var_80h = (*arg_8h[0x1e])(*0x41b0a8, 0xb8638, 0, &var_90h);\n                if (var_80h != 0) {\n                    bVar13 = true;\n                }\n                iVar5 = iVar5 + -1;\n            } while (iVar5 != 0);\n            if (!bVar13) {\n                return -1;\n            }\n            if (*arg_8h[0x20] == 0) {\n                puVar15 = &var_804h;\n                uVar17 = 10;\n                uVar16 = 0x11;\n            }\n            else {\n                puVar15 = &var_55ch;\n                uVar17 = 7;\n                uVar16 = 0xc;\n            }\n            uVar10 = (*arg_8h[0xb])(uVar16, uVar17, 1, 0x20, puVar15);\n            piVar8 = arg_8h[0x20];\n            if (*piVar8 == 0) {\n                iVar5 = *(piVar8[0x486] + (uVar10 & 0xffff) * 0x10);\n            }\n            else {\n                iVar5 = *(piVar8[0x486] + (uVar10 & 0xffff) * 0x18);\n                var_8ch = *(piVar8[0x486] + 4 + (uVar10 & 0xffff) * 0x18);\n            }\n            var_28h = iVar5 + 0x4000;\n            uVar10 = iVar5 - 0x4000;\n            iVar5 = 0xf;\n            do {\n                var_90h = 0;\n                (*arg_8h[0x1e])(*0x41b0a8, 0xb8638, 0, &var_90h);\n                uVar9 = var_60h;\n                iVar5 = iVar5 + -1;\n            } while (iVar5 != 0);\n        } while (var_28h <= uVar10);\n        do {\n            *var_94h = uVar10;\n            if (*arg_8h[0x20] != 0) {\n                var_94h[1] = var_8ch;\n            }\n            fcn.00403e30(uVar9, 0, 0x20009);\n            if (*arg_8h[0x20] == 0) {\n                uVar17 = 0xc;\n                uVar16 = 0xc;\n            }\n            else {\n                uVar17 = 0x10;\n                uVar16 = 0x10;\n            }\n            iVar5 = (*var_68h)(0, 0x409794, 0x250a, uVar16, var_94h, uVar17, uVar9);\n            if (iVar5 != -0xdf) {\n                iVar5 = uVar9 + 8;\n                if (*arg_8h[0x20] == 0) {\n                    iVar5 = uVar9 + 4;\n                }\n                iVar5 = fcn.00404020(iVar5, 0x4097a8, 8);\n                if (iVar5 == 0) {\n                    iVar5 = 0;\n                    var_64h = -1;\n                    stack0xffffff8c = 0;\n                    fcn.00403e30(var_94h, 0, 0x20009);\n                    *var_94h = uVar10;\n                    if (*arg_8h[0x20] == 0) {\n                        *(var_94h + 1) = 0xffff;\n                    }\n                    else {\n                        *(var_94h + 2) = 0xfffd;\n                        var_94h[1] = var_8ch;\n                    }\n                    goto code_r0x00404830;\n                }\n            }\n            uVar10 = uVar10 + 8;\n        } while (uVar10 < var_28h);\n    } while( true );\ncode_r0x00404830:\n    do {\n        fcn.00404150(arg_8h);\n        var_9ch = 0;\n        piVar8 = arg_8h[0x20] + 0x270;\n        do {\n            if (*piVar8 == 0) break;\n            var_9ch = var_9ch + 1;\n            piVar8 = piVar8 + 1;\n        } while (var_9ch < 1000);\n        var_6ch = 1;\n        if (1 < var_9ch) {\n            var_78h = 0x274;\n            var_24h = var_9ch / 2;\n            do {\n                if (var_24h <= var_6ch) {\n                    piVar8 = arg_8h[0x20];\n                    iVar6 = piVar8[0x486];\n                    uVar10 = *(var_78h + -4 + piVar8);\n                    if (*piVar8 == 0) {\n                        var_98h = *(iVar6 + uVar10 * 0x10);\n                        iVar11 = 0;\n                        var_28h = 0;\n                        var_4ch = *(iVar6 + *(var_78h + piVar8) * 0x10);\n                    }\n                    else {\n                        var_98h = *(iVar6 + uVar10 * 0x18);\n                        iVar11 = *(iVar6 + 4 + uVar10 * 0x18);\n                        var_4ch = *(iVar6 + *(var_78h + piVar8) * 0x18);\n                        var_28h = *(iVar6 + 4 + *(var_78h + piVar8) * 0x18);\n                    }\n                    if ((var_4ch - var_98h == 0xb000) && (var_28h - iVar11 == var_4ch < var_98h)) {\n                        bVar13 = stack0xffffff8c == 1;\n                        stack0xffffff8c = 0;\n                    }\n                    else {\n                        if ((var_98h - var_4ch != 0xb000) || (iVar11 - var_28h != var_98h < var_4ch)) {\n                            iVar5 = 0;\n                            goto code_r0x00404952;\n                        }\n                        bVar13 = stack0xffffff8c == 0;\n                        stack0xffffff8c = 1;\n                    }\n                    if (bVar13) {\n                        iVar5 = 0;\n                    }\n                    iVar5 = iVar5 + 1;\n                    if (iVar5 == 9) {\n                        var_64h = var_6ch - 5;\n                        break;\n                    }\n                }\ncode_r0x00404952:\n                var_6ch = var_6ch + 1;\n                var_78h = var_78h + 4;\n            } while (var_6ch < var_9ch);\n        }\n        iVar6 = stack0xffffff8c;\n        if (var_64h == -1) {\n            return -1;\n        }\n        if (stack0xffffff8c == 0) {\n            (*arg_8h[10])(*(arg_8h[0x20] + var_64h * 4 + 0x270));\n            (*arg_8h[10])(*(arg_8h[0x20] + var_64h * 4 + 0x274));\n            uVar16 = *(arg_8h[0x20] + var_64h * 4 + 0x278);\n        }\n        else {\n            (*arg_8h[10])(*(arg_8h[0x20] + var_64h * 4 + 0x278));\n            (*arg_8h[10])(*(arg_8h[0x20] + var_64h * 4 + 0x274));\n            uVar16 = *(arg_8h[0x20] + var_64h * 4 + 0x270);\n        }\n        (*arg_8h[10])(uVar16);\n        var_24h = (*arg_8h[0x10])(0x40, 0x203a0);\n        if (var_24h != 0) {\n            fcn.00403e30(var_24h, 0xde, 0x203a0);\n            uVar16 = (*arg_8h[0xb])(0x6e, 0x12f, 1, 0x20, var_24h);\n            *(arg_8h[0x20] + 0x1210) = uVar16;\n            (*arg_8h[0x11])(var_24h);\n        }\n        piVar8 = arg_8h[0x20];\n        var_6ch = piVar8[0x484];\n        if (var_6ch == 0) {\n            return -1;\n        }\n        if (*piVar8 == 0) goto code_r0x00404b0d;\n        var_28h = piVar8[0x486];\n        if (iVar6 != 0) {\n            uVar10 = *(var_28h + *(piVar8 + var_64h + 0x9f) * 0x18);\n            var_24h = *(var_28h + 4 + *(piVar8 + var_64h + 0x9f) * 0x18) + (0xffff4fff < uVar10);\n            uVar9 = var_6ch & 0xffff;\n            var_4ch = uVar9 * 3;\n            if ((*(var_28h + uVar9 * 0x18) == uVar10 + 0xb000) && (*(var_28h + 4 + uVar9 * 0x18) == var_24h)) break;\n            goto code_r0x00404830;\n        }\n        uVar10 = *(var_28h + *(piVar8 + var_64h + 0x9b) * 0x18);\n        var_24h = *(var_28h + 4 + *(piVar8 + var_64h + 0x9b) * 0x18) + (0xffff4fff < uVar10);\n        uVar9 = var_6ch & 0xffff;\n        var_4ch = uVar9 * 3;\n    } while ((*(var_28h + uVar9 * 0x18) != uVar10 + 0xb000) ||\n            (iVar6 = stack0xffffff8c,  *(var_28h + 4 + uVar9 * 0x18) != var_24h));\n    goto code_r0x00404b4b;\ncode_r0x00404b0d:\n    if (iVar6 == 0) {\n        uVar2 = *(piVar8 + var_64h + 0x9b);\n    }\n    else {\n        uVar2 = *(piVar8 + var_64h + 0x9f);\n    }\n    if (*(piVar8[0x486] + (var_6ch & 0xffff) * 0x10) != *(piVar8[0x486] + uVar2 * 0x10) + 0xb000) goto code_r0x00404830;\ncode_r0x00404b4b:\n    (*arg_8h[10])(var_6ch);\n    if (*arg_8h[0x20] == 0) {\n        uVar17 = 0x20005;\n        uVar16 = 0x20005;\n    }\n    else {\n        uVar17 = 0x20009;\n        uVar16 = 0x20009;\n    }\n    (*var_68h)(0, 0x409794, 0x2514, uVar16, var_94h, uVar17, var_60h);\n    pcVar7 = arg_8h[0x20];\n    if (iVar6 == 0) {\n        uVar16 = *(pcVar7 + var_64h * 4 + 0x26c);\n    }\n    else {\n        uVar16 = *(pcVar7 + var_64h * 4 + 0x27c);\n    }\n    *(pcVar7 + 0x1c) = uVar16;\n    fcn.00403e30(&var_370h, 0, 0x100);\n    (*arg_8h[9])(*(arg_8h[0x20] + 0x1c), 0x100, &var_370h);\n    piVar8 = arg_8h[0x20];\n    if (*piVar8 == 0) {\n        bVar13 = var_368h == 0x44;\n    }\n    else {\n        bVar13 = var_360h == 0x30;\n    }\n    if (!bVar13) {\n        fcn.00403e30(piVar8 + 0x9c, 0, 4000);\n        *(arg_8h[0x20] + 0x18) = 1;\n        goto code_r0x00404830;\n    }\n    if (*piVar8 == 0) {\n        var_8ch = *(piVar8[0x486] + *(piVar8 + 7) * 0x10);\n        var_90h = var_8ch;\n    }\n    else {\n        var_88h = *(piVar8[0x486] + *(piVar8 + 7) * 0x18);\n        var_8ch = *(piVar8[0x486] + 4 + *(piVar8 + 7) * 0x18);\n        var_90h = var_88h;\n        var_84h = var_8ch;\n    }\n    if (*piVar8 == 0) {\n        uVar16 = 8;\n    }\n    else {\n        uVar16 = 0x10;\n    }\n    (*arg_8h[8])(piVar8[7], uVar16, &var_90h);\n    piVar8 = arg_8h[0x20];\n    iVar5 = piVar8[7];\n    if (*piVar8 == 0) {\n        puVar15 = &var_130h;\n        uVar16 = 0x7c;\n        var_130h = iVar5;\n        var_11ch = iVar5;\n    }\n    else {\n        puVar15 = &var_1d4h;\n        uVar16 = 0xa4;\n        var_1d4h = iVar5;\n        var_1b4h = iVar5;\n    }\n    (*arg_8h[8])(piVar8[0x9b], uVar16, puVar15);\n    piVar8 = arg_8h[0x20];\n    if (*piVar8 == 0) {\n        var_90h = *(piVar8[0x486] + *(piVar8 + 0x9c) * 0x10);\n        uVar16 = 8;\n        var_8ch = var_90h;\n    }\n    else {\n        var_90h = *(piVar8[0x486] + *(piVar8 + 0x9c) * 0x18);\n        var_8ch = *(piVar8[0x486] + 4 + *(piVar8 + 0x9c) * 0x18);\n        uVar16 = 0x10;\n        var_88h = var_90h;\n        var_84h = var_8ch;\n    }\n    (*arg_8h[8])(piVar8[7], uVar16, &var_90h);\n    fcn.00403e30(&var_370h, 0xde, 0x100);\n    (*arg_8h[9])(*(arg_8h[0x20] + 0x26c), 0x100, &var_370h);\n    piVar8 = arg_8h[0x20];\n    iVar5 = 0x2c;\n    if (*piVar8 != 0) {\n        iVar5 = 0x48;\n    }\n    if (*(&var_370h + iVar5) != -0x21212122) {\n        iVar5 = piVar8[0x486];\n        if (*piVar8 == 0) {\n            var_328h = var_344h - *(iVar5 + *(piVar8 + 0x9c) * 0x10);\n        }\n        else {\n            var_328h = var_328h - *(iVar5 + *(piVar8 + 0x9c) * 0x18);\n        }\n        var_328h = var_328h + 44000;\n        if (*piVar8 == 0) {\n            if (iVar6 == 0) {\n                iVar6 = *(iVar5 + *(piVar8 + var_64h + 0x9a) * 0x10);\n                iVar5 = *(iVar5 + *(piVar8 + var_64h + 0x9b) * 0x10);\n                uVar2 = *(piVar8 + var_64h + 0x99);\n            }\n            else {\n                iVar6 = *(iVar5 + *(piVar8 + var_64h + 0xa0) * 0x10);\n                iVar5 = *(iVar5 + *(piVar8 + var_64h + 0xa1) * 0x10);\n                uVar2 = *(piVar8 + var_64h + 0x9f);\n            }\n            var_68h = iVar6 + var_328h;\n            iVar6 = *(piVar8[0x486] + uVar2 * 0x10);\n        }\n        else if (iVar6 == 0) {\n            var_68h = *(iVar5 + *(piVar8 + var_64h + 0x9a) * 0x18) + var_328h;\n            iVar5 = *(iVar5 + *(piVar8 + var_64h + 0x9b) * 0x18);\n            iVar6 = *(piVar8[0x486] + *(piVar8 + var_64h + 0x99) * 0x18);\n        }\n        else {\n            var_68h = *(iVar5 + *(piVar8 + var_64h + 0xa0) * 0x18) + var_328h;\n            iVar5 = *(iVar5 + *(piVar8 + var_64h + 0xa1) * 0x18);\n            iVar6 = *(piVar8[0x486] + *(piVar8 + var_64h + 0x9f) * 0x18);\n        }\n        iVar5 = iVar5 + var_328h;\n        if (*piVar8 == 0) {\n            uVar16 = 8;\n            var_8ch = iVar5;\n        }\n        else {\n            uVar16 = 0x10;\n            var_88h = iVar5;\n        }\n        var_90h = iVar5;\n        (*arg_8h[8])(piVar8[7], uVar16, &var_90h);\n        (*arg_8h[9])(*(arg_8h[0x20] + 0x26c), 0x100, &var_370h);\n        var_24h = *arg_8h[0x20];\n        uVar10 = 0;\n        do {\n            if ((var_68h - ((var_24h != 0) * 4 + 4)) + uVar10 == *(&var_370h + uVar10)) break;\n            uVar10 = uVar10 + 4;\n        } while (uVar10 < 0x100);\n        if (uVar10 != 0x100) {\n            if (var_24h == 0) {\n                *(&var_370h + uVar10) = (uVar10 - 4) + iVar6 + var_328h;\n                *(aiStack892 + uVar10 + 4) = (uVar10 - 4) + iVar5;\n                var_8ch = var_68h;\n                uVar16 = 8;\n            }\n            else {\n                *(&var_370h + uVar10) = (uVar10 - 8) + iVar6 + var_328h;\n                *(aiStack892 + uVar10) = (uVar10 - 8) + iVar5;\n                var_88h = var_68h;\n                uVar16 = 0x10;\n            }\n            var_90h = var_68h;\n            (*arg_8h[8])(*(arg_8h[0x20] + 0x1c), uVar16, &var_90h);\n            (*arg_8h[8])(*(arg_8h[0x20] + 0x26c), 0x100, &var_370h);\n        }\n        fcn.00403e30(&var_40ch, 0, 0x9c);\n        var_40ch = 0x9c;\n        (*arg_8h[0xe])(&var_40ch);\n        fcn.00403e30(&var_270h, 0, 0x9c);\n        var_270h = 0x9c;\n        var_26ch = 6;\n        var_268h = 2;\n        uVar14 = (*arg_8h[0x18])(0, 0, 2, 1);\n        uVar14 = (*arg_8h[0x18])(uVar14, 1, 1);\n        iVar5 = (*arg_8h[0x19])(&var_270h, 3, uVar14);\n        if (iVar5 == 0) {\n            fcn.00403e30(&var_40ch, 0, 0x9c);\n            var_40ch = 0x9c;\n            (*arg_8h[0xe])(&var_40ch);\n            fcn.00403e30(&var_270h, 0, 0x9c);\n            var_270h = 0x9c;\n            var_26ch = 6;\n            var_268h = 3;\n            uVar14 = (*arg_8h[0x18])(0, 0, 2, 1);\n            uVar14 = (*arg_8h[0x18])(uVar14, 1, 1);\n            iVar5 = (*arg_8h[0x19])(&var_270h, 3, uVar14);\n            if (iVar5 == 0) {\n                fcn.00403e30(&var_40ch, 0, 0x9c);\n                var_40ch = 0x9c;\n                (*arg_8h[0xe])(&var_40ch);\n                fcn.00403e30(&var_270h, 0, 0x9c);\n                var_270h = 0x9c;\n                var_26ch = 6;\n                var_268h = 1;\n                uVar14 = (*arg_8h[0x18])(0, 0, 2, 1);\n                uVar14 = (*arg_8h[0x18])(uVar14, 1, 1);\n                iVar5 = (*arg_8h[0x19])(&var_270h, 3, uVar14);\n                uVar10 = var_80h;\n                if (iVar5 == 0) {\n                    (*arg_8h[0x1f])(var_80h);\n                    (*arg_8h[0x1f])(uVar10);\n                    if (*(arg_8h[0x20] + 0x18) == 0) {\n                        return -1;\n                    }\n                    do {\n                        (*arg_8h[0x1b])(100000);\n                    } while( true );\n                }\n                ppiVar1 = arg_8h + 0x20;\n                if (**ppiVar1 == 0) {\n                    var_28h = 0xb4;\n                    iVar5 = 0xb8;\n                    arg_8h = 0xf8;\n                    *0x8 = 0x16c;\n                    var_68h = 0x124;\n                }\n                else {\n                    var_28h = 0x180;\n                    iVar5 = 0x188;\n                    arg_8h = 0x208;\n                    *0x8 = 0x2e0;\n                    var_68h = 0x260;\n                }\n                var_38h = (*ppiVar1)[8] + iVar5;\n                var_78h = iVar5;\n                fcn.00403e30(&var_38h, 0, 4);\n                if (*ppcVar3[0x20] == 0) {\n                    uVar16 = 8;\n                    var_34h = var_38h;\n                }\n                else {\n                    var_2ch = var_7ch;\n                    var_34h = var_7ch;\n                    uVar16 = 0x10;\n                    var_30h = var_38h;\n                }\n                (*ppcVar3[8])(*(ppcVar3[0x20] + 0x1c), uVar16, &var_38h);\n                (*ppcVar3[9])(*(ppcVar3[0x20] + 0x26c), 4, &var_38h);\n                uVar10 = var_38h - iVar5;\n                uVar9 = arg_8h;\n                if (*ppcVar3[0x20] != 0) {\n                    uVar9 = iVar5 + *(ppcVar3[0x20] + 0x20) + 4;\n                    fcn.00403e30(&var_38h, 0, 4);\n                    if (*ppcVar3[0x20] == 0) {\n                        uVar16 = 8;\n                        var_34h = uVar9;\n                    }\n                    else {\n                        var_2ch = var_7ch;\n                        var_34h = var_7ch;\n                        uVar16 = 0x10;\n                        var_30h = uVar9;\n                    }\n                    var_38h = uVar9;\n                    (*ppcVar3[8])(*(ppcVar3[0x20] + 0x1c), uVar16, &var_38h);\n                    (*ppcVar3[9])(*(ppcVar3[0x20] + 0x26c), 4, &var_38h);\n                    uVar9 = var_38h;\n                }\n                var_6ch = 0;\n                do {\n                    fcn.00403e30(&var_38h, 0, 4);\n                    var_38h = var_28h + uVar10;\n                    if (*ppcVar3[0x20] == 0) {\n                        uVar16 = 8;\n                        var_34h = var_38h;\n                    }\n                    else {\n                        uVar16 = 0x10;\n                        var_34h = uVar9;\n                        var_30h = var_38h;\n                        var_2ch = uVar9;\n                    }\n                    (*ppcVar3[8])(*(ppcVar3[0x20] + 0x1c), uVar16, &var_38h);\n                    (*ppcVar3[9])(*(ppcVar3[0x20] + 0x26c), 4, &var_38h);\n                    var_24h = uVar10;\n                    if (var_38h == 4) break;\n                    var_24h = var_78h + uVar10;\n                    fcn.00403e30(&var_48h, 0, 4);\n                    var_48h = var_24h;\n                    if (*ppcVar3[0x20] == 0) {\n                        var_44h = var_24h;\n                        uVar16 = 8;\n                    }\n                    else {\n                        var_40h = var_24h;\n                        uVar16 = 0x10;\n                        var_44h = uVar9;\n                        var_3ch = uVar9;\n                    }\n                    (*ppcVar3[8])(*(ppcVar3[0x20] + 0x1c), uVar16, &var_48h);\n                    (*ppcVar3[9])(*(ppcVar3[0x20] + 0x26c), 4, &var_48h);\n                    var_24h = var_48h - var_78h;\n                    if (*ppcVar3[0x20] != 0) {\n                        uVar10 = uVar10 + 4 + var_78h;\n                        fcn.00403e30(&var_20h, 0, 4);\n                        if (*ppcVar3[0x20] == 0) {\n                            uVar16 = 8;\n                            var_1ch = uVar10;\n                        }\n                        else {\n                            uVar16 = 0x10;\n                            var_1ch = uVar9;\n                            var_18h = uVar10;\n                            var_14h = uVar9;\n                        }\n                        var_20h = uVar10;\n                        (*ppcVar3[8])(*(ppcVar3[0x20] + 0x1c), uVar16, &var_20h);\n                        (*ppcVar3[9])(*(ppcVar3[0x20] + 0x26c), 4, &var_20h);\n                        uVar9 = var_20h;\n                    }\n                    var_6ch = var_6ch + 1;\n                    uVar10 = var_24h;\n                } while (var_6ch < 2000);\n                if (var_6ch == 2000) {\n                    return -1;\n                }\n                var_28h = 0;\n                var_4ch = stack0xffffff8c + 8;\n                uVar10 = var_24h;\n                var_24h = stack0xffffff8c + 4;\n                do {\n                    fcn.00403e30(&var_38h, 0, 4);\n                    var_38h = stack0xffffff8c + uVar10;\n                    if (*ppcVar3[0x20] == 0) {\n                        uVar16 = 8;\n                        var_34h = var_38h;\n                    }\n                    else {\n                        uVar16 = 0x10;\n                        var_34h = uVar9;\n                        var_30h = var_38h;\n                        var_2ch = uVar9;\n                    }\n                    (*ppcVar3[8])(*(ppcVar3[0x20] + 0x1c), uVar16, &var_38h);\n                    (*ppcVar3[9])(*(ppcVar3[0x20] + 0x26c), 4, &var_38h);\n                    var_60h = var_38h;\n                    fcn.00403de0(&var_ach, &var_60h, 4);\n                    fcn.00403e30(&var_48h, 0, 4);\n                    var_48h = var_24h + uVar10;\n                    if (*ppcVar3[0x20] == 0) {\n                        uVar16 = 8;\n                        var_44h = var_48h;\n                    }\n                    else {\n                        uVar16 = 0x10;\n                        var_44h = uVar9;\n                        var_40h = var_48h;\n                        var_3ch = uVar9;\n                    }\n                    (*ppcVar3[8])(*(ppcVar3[0x20] + 0x1c), uVar16, &var_48h);\n                    (*ppcVar3[9])(*(ppcVar3[0x20] + 0x26c), 4, &var_48h);\n                    var_60h = var_48h;\n                    fcn.00403de0(&var_a8h, &var_60h, 4);\n                    fcn.00403e30(&var_20h, 0, 4);\n                    var_20h = var_4ch + uVar10;\n                    if (*ppcVar3[0x20] == 0) {\n                        uVar16 = 8;\n                        var_1ch = var_20h;\n                    }\n                    else {\n                        uVar16 = 0x10;\n                        var_1ch = uVar9;\n                        var_18h = var_20h;\n                        var_14h = uVar9;\n                    }\n                    (*ppcVar3[8])(*(ppcVar3[0x20] + 0x1c), uVar16, &var_20h);\n                    (*ppcVar3[9])(*(ppcVar3[0x20] + 0x26c), 4, &var_20h);\n                    var_60h = var_20h;\n                    fcn.00403de0(&var_a4h, &var_60h, 4);\n                    iVar5 = fcn.00404020(0x4097b4, &var_ach, 0xc);\n                    if (iVar5 == 0) break;\n                    var_98h = var_78h + uVar10;\n                    fcn.00403e30(&var_5ch, 0, 4);\n                    var_5ch = var_98h;\n                    if (*ppcVar3[0x20] == 0) {\n                        var_58h = var_98h;\n                        uVar16 = 8;\n                    }\n                    else {\n                        var_54h = var_98h;\n                        uVar16 = 0x10;\n                        var_58h = uVar9;\n                        var_50h = uVar9;\n                    }\n                    (*ppcVar3[8])(*(ppcVar3[0x20] + 0x1c), uVar16, &var_5ch);\n                    (*ppcVar3[9])(*(ppcVar3[0x20] + 0x26c), 4, &var_5ch);\n                    var_98h = var_5ch - var_78h;\n                    if (*ppcVar3[0x20] != 0) {\n                        uVar10 = uVar10 + 4 + var_78h;\n                        fcn.00403e30(&var_10h, 0, 4);\n                        if (*ppcVar3[0x20] == 0) {\n                            uVar16 = 8;\n                            var_ch = uVar10;\n                        }\n                        else {\n                            uVar16 = 0x10;\n                            var_ch = uVar9;\n                            var_8h = uVar10;\n                            var_4h = uVar9;\n                        }\n                        var_10h = uVar10;\n                        (*ppcVar3[8])(*(ppcVar3[0x20] + 0x1c), uVar16, &var_10h);\n                        (*ppcVar3[9])(*(ppcVar3[0x20] + 0x26c), 4, &var_10h);\n                        uVar9 = var_10h;\n                    }\n                    var_28h = var_28h + 1;\n                    uVar10 = var_98h;\n                } while (var_28h < 2000);\n                if (var_28h == 2000) {\n                    return -1;\n                }\n                uVar10 = uVar10 + arg_8h;\n                var_24h = 0;\n                if (*ppcVar3[0x20] == 0) {\n                    fcn.00403e30(&var_10h, 0, 4);\n                    if (*ppcVar3[0x20] == 0) {\n                        uVar16 = 8;\n                        var_ch = uVar10;\n                    }\n                    else {\n                        uVar16 = 0x10;\n                        var_ch = uVar9;\n                        var_8h = uVar10;\n                        var_4h = uVar9;\n                    }\n                    var_10h = uVar10;\n                    (*ppcVar3[8])(*(ppcVar3[0x20] + 0x1c), uVar16, &var_10h);\n                    (*ppcVar3[9])(*(ppcVar3[0x20] + 0x26c), 4, &var_10h);\n                    uVar10 = var_10h & 0xfffffff8;\n                }\n                else {\n                    fcn.00403e30(&var_5ch, 0, 4);\n                    if (*ppcVar3[0x20] == 0) {\n                        uVar16 = 8;\n                        var_58h = uVar10;\n                    }\n                    else {\n                        uVar16 = 0x10;\n                        var_58h = uVar9;\n                        var_54h = uVar10;\n                        var_50h = uVar9;\n                    }\n                    var_5ch = uVar10;\n                    (*ppcVar3[8])(*(ppcVar3[0x20] + 0x1c), uVar16, &var_5ch);\n                    (*ppcVar3[9])(*(ppcVar3[0x20] + 0x26c), 4, &var_5ch);\n                    uVar10 = uVar10 + 4;\n                    fcn.00403e30(&var_10h, 0, 4);\n                    if (*ppcVar3[0x20] == 0) {\n                        uVar16 = 8;\n                        var_ch = uVar10;\n                    }\n                    else {\n                        uVar16 = 0x10;\n                        var_ch = uVar9;\n                        var_8h = uVar10;\n                        var_4h = uVar9;\n                    }\n                    var_10h = uVar10;\n                    (*ppcVar3[8])(*(ppcVar3[0x20] + 0x1c), uVar16, &var_10h);\n                    (*ppcVar3[9])(*(ppcVar3[0x20] + 0x26c), 4, &var_10h);\n                    uVar10 = var_5ch & 0xfffffff0;\n                    var_24h = var_10h;\n                }\n                uVar9 = *(ppcVar3[0x20] + 0x20) + arg_8h;\n                fcn.00403e30(&var_48h, 0, 4);\n                if (*ppcVar3[0x20] == 0) {\n                    uVar16 = 8;\n                    var_44h = uVar9;\n                }\n                else {\n                    var_3ch = var_7ch;\n                    var_44h = var_7ch;\n                    uVar16 = 0x10;\n                    var_40h = uVar9;\n                }\n                var_48h = uVar9;\n                (*ppcVar3[8])(*(ppcVar3[0x20] + 0x1c), uVar16, &var_48h);\n                (*ppcVar3[9])(*(ppcVar3[0x20] + 0x26c), 4, &var_48h);\n                uVar9 = arg_8h;\n                if (*ppcVar3[0x20] != 0) {\n                    uVar9 = arg_8h + 4U + *(ppcVar3[0x20] + 0x20);\n                    fcn.00403e30(&var_10h, 0, 4);\n                    if (*ppcVar3[0x20] == 0) {\n                        uVar16 = 8;\n                        var_ch = uVar9;\n                    }\n                    else {\n                        var_4h = var_7ch;\n                        var_ch = var_7ch;\n                        uVar16 = 0x10;\n                        var_8h = uVar9;\n                    }\n                    var_10h = uVar9;\n                    (*ppcVar3[8])(*(ppcVar3[0x20] + 0x1c), uVar16, &var_10h);\n                    (*ppcVar3[9])(*(ppcVar3[0x20] + 0x26c), 4, &var_10h);\n                    uVar9 = var_10h;\n                }\n                uVar12 = *(ppcVar3[0x20] + 0x20) + arg_8h;\n                var_4ch = uVar9;\n                fcn.00403e30(&var_20h, 0, 4);\n                piVar8 = ppcVar3[0x20];\n                var_20h = uVar12;\n                if (*piVar8 == 0) {\n                    var_1ch = uVar12;\n                    (*ppcVar3[8])(piVar8[7], 8, &var_20h);\n                    uVar16 = 4;\n                }\n                else {\n                    var_14h = var_7ch;\n                    var_1ch = var_7ch;\n                    var_18h = uVar12;\n                    (*ppcVar3[8])(piVar8[7], 0x10, &var_20h);\n                    var_1ch = var_24h;\n                    uVar16 = 8;\n                }\n                var_20h = uVar10;\n                (*ppcVar3[8])(*(ppcVar3[0x20] + 0x26c), uVar16, &var_20h);\n                iVar5 = var_68h;\n                uVar10 = *(ppcVar3[0x20] + 0x20) + var_68h;\n                fcn.00403e30(&var_38h, 0, 4);\n                if (*ppcVar3[0x20] == 0) {\n                    uVar16 = 8;\n                    var_34h = uVar10;\n                }\n                else {\n                    var_2ch = var_7ch;\n                    var_34h = var_7ch;\n                    uVar16 = 0x10;\n                    var_30h = uVar10;\n                }\n                var_38h = uVar10;\n                (*ppcVar3[8])(*(ppcVar3[0x20] + 0x1c), uVar16, &var_38h);\n                (*ppcVar3[9])(*(ppcVar3[0x20] + 0x26c), 4, &var_38h);\n                uVar10 = arg_8h;\n                if (*ppcVar3[0x20] != 0) {\n                    uVar10 = iVar5 + 4 + *(ppcVar3[0x20] + 0x20);\n                    fcn.00403e30(&var_10h, 0, 4);\n                    if (*ppcVar3[0x20] == 0) {\n                        uVar16 = 8;\n                        var_ch = uVar10;\n                    }\n                    else {\n                        var_4h = var_7ch;\n                        var_ch = var_7ch;\n                        uVar16 = 0x10;\n                        var_8h = uVar10;\n                    }\n                    var_10h = uVar10;\n                    (*ppcVar3[8])(*(ppcVar3[0x20] + 0x1c), uVar16, &var_10h);\n                    (*ppcVar3[9])(*(ppcVar3[0x20] + 0x26c), 4, &var_10h);\n                    uVar10 = var_10h;\n                }\n                uVar9 = *(ppcVar3[0x20] + 0x20) + var_68h;\n                fcn.00403e30(&var_20h, 0, 4);\n                piVar8 = ppcVar3[0x20];\n                var_20h = uVar9;\n                if (*piVar8 == 0) {\n                    var_1ch = uVar9;\n                    (*ppcVar3[8])(piVar8[7], 8, &var_20h);\n                    uVar16 = 4;\n                }\n                else {\n                    var_14h = var_7ch;\n                    var_1ch = var_7ch;\n                    var_18h = uVar9;\n                    (*ppcVar3[8])(piVar8[7], 0x10, &var_20h);\n                    var_1ch = 0;\n                    uVar16 = 8;\n                }\n                var_20h = 0;\n                (*ppcVar3[8])(*(ppcVar3[0x20] + 0x26c), uVar16, &var_20h);\n                var_24h = (**ppcVar3)(ppcVar3[1], ppcVar3[2]);\n                uVar9 = *(ppcVar3[0x20] + 0x20) + arg_8h;\n                fcn.00403e30(&var_20h, 0, 4);\n                piVar8 = ppcVar3[0x20];\n                var_20h = uVar9;\n                if (*piVar8 == 0) {\n                    var_1ch = uVar9;\n                    (*ppcVar3[8])(piVar8[7], 8, &var_20h);\n                    uVar16 = 4;\n                }\n                else {\n                    var_14h = var_7ch;\n                    var_1ch = var_7ch;\n                    var_18h = uVar9;\n                    (*ppcVar3[8])(piVar8[7], 0x10, &var_20h);\n                    var_1ch = var_4ch;\n                    uVar16 = 8;\n                }\n                var_20h = var_48h;\n                (*ppcVar3[8])(*(ppcVar3[0x20] + 0x26c), uVar16, &var_20h);\n                uVar9 = *(ppcVar3[0x20] + 0x20) + var_68h;\n                fcn.00403e30(&var_20h, 0, 4);\n                piVar8 = ppcVar3[0x20];\n                var_20h = uVar9;\n                if (*piVar8 == 0) {\n                    var_1ch = uVar9;\n                    (*ppcVar3[8])(piVar8[7], 8, &var_20h);\n                    uVar16 = 4;\n                }\n                else {\n                    var_14h = var_7ch;\n                    var_1ch = var_7ch;\n                    var_18h = uVar9;\n                    (*ppcVar3[8])(piVar8[7], 0x10, &var_20h);\n                    uVar16 = 8;\n                    var_1ch = uVar10;\n                }\n                var_20h = var_38h;\n                (*ppcVar3[8])(*(ppcVar3[0x20] + 0x26c), uVar16, &var_20h);\n                return var_24h;\n            }\n        }\n        if (var_71h == '\\0') {\n            var_5ch = 0x300;\n            iVar5 = 0x5c0;\n        }\n        else {\n            var_5ch = 0x900;\n            iVar5 = 0x578;\n        }\n        fcn.00403e30(&var_10h, 0, 4);\n        if (*arg_8h[0x20] == 0) {\n            uVar16 = 8;\n            var_ch = var_5ch;\n        }\n        else {\n            var_4h = 0xfffffa80;\n            var_ch = 0xfffffa80;\n            uVar16 = 0x10;\n            var_8h = var_5ch;\n        }\n        var_10h = var_5ch;\n        (*arg_8h[8])(*(arg_8h[0x20] + 0x1c), uVar16, &var_10h);\n        (*arg_8h[9])(*(arg_8h[0x20] + 0x26c), 4, &var_10h);\n        var_5ch = var_5ch + 4;\n        fcn.00403e30(&var_5ch, 0, 4);\n        if (*arg_8h[0x20] == 0) {\n            uVar16 = 8;\n            var_58h = var_5ch;\n        }\n        else {\n            var_50h = 0xfffffa80;\n            var_58h = 0xfffffa80;\n            uVar16 = 0x10;\n            var_54h = var_5ch;\n        }\n        (*arg_8h[8])(*(arg_8h[0x20] + 0x1c), uVar16, &var_5ch);\n        (*arg_8h[9])(*(arg_8h[0x20] + 0x26c), 4, &var_5ch);\n        var_38h = var_10h + iVar5;\n        fcn.00403e30(&var_10h, 0, 4);\n        var_34h = var_5ch;\n        if (*arg_8h[0x20] == 0) {\n            uVar16 = 8;\n            var_ch = var_38h;\n        }\n        else {\n            var_4h = var_5ch;\n            var_ch = var_5ch;\n            uVar16 = 0x10;\n            var_8h = var_38h;\n        }\n        var_10h = var_38h;\n        (*arg_8h[8])(*(arg_8h[0x20] + 0x1c), uVar16, &var_10h);\n        (*arg_8h[9])(*(arg_8h[0x20] + 0x26c), 4, &var_10h);\n        var_38h = var_38h + 4;\n        fcn.00403e30(&var_38h, 0, 4);\n        if (*arg_8h[0x20] == 0) {\n            uVar16 = 8;\n            var_34h = var_38h;\n        }\n        else {\n            var_2ch = var_34h;\n            uVar16 = 0x10;\n            var_30h = var_38h;\n        }\n        (*arg_8h[8])(*(arg_8h[0x20] + 0x1c), uVar16, &var_38h);\n        (*arg_8h[9])(*(arg_8h[0x20] + 0x26c), 4, &var_38h);\n        uVar10 = var_38h;\n        uVar9 = var_10h - iVar5;\n        var_4ch = uVar9;\n        var_24h = (*arg_8h[0x1a])();\n        uVar12 = 0;\n        arg_8h = uVar9;\n        do {\n            fcn.00403e30(&var_10h, 0, 4);\n            var_10h = arg_8h + 0x2e0;\n            if (*ppcVar3[0x20] == 0) {\n                uVar16 = 8;\n                var_ch = var_10h;\n            }\n            else {\n                uVar16 = 0x10;\n                var_ch = uVar10;\n                var_8h = var_10h;\n                var_4h = uVar10;\n            }\n            (*ppcVar3[8])(*(ppcVar3[0x20] + 0x1c), uVar16, &var_10h);\n            (*ppcVar3[9])(*(ppcVar3[0x20] + 0x26c), 4, &var_10h);\n            if (var_10h == var_24h) break;\n            fcn.00403e30(&var_5ch, 0, 4);\n            var_5ch = arg_8h + 0x2e8;\n            if (*ppcVar3[0x20] == 0) {\n                uVar16 = 8;\n                var_58h = var_5ch;\n            }\n            else {\n                uVar16 = 0x10;\n                var_58h = uVar10;\n                var_54h = var_5ch;\n                var_50h = uVar10;\n            }\n            (*ppcVar3[8])(*(ppcVar3[0x20] + 0x1c), uVar16, &var_5ch);\n            (*ppcVar3[9])(*(ppcVar3[0x20] + 0x26c), 4, &var_5ch);\n            var_80h = var_5ch - 0x2e8;\n            if (*ppcVar3[0x20] != 0) {\n                fcn.00403e30(&var_48h, 0, 4);\n                var_48h = arg_8h + 0x2ec;\n                if (*ppcVar3[0x20] == 0) {\n                    uVar16 = 8;\n                    var_44h = var_48h;\n                }\n                else {\n                    uVar16 = 0x10;\n                    var_44h = uVar10;\n                    var_40h = var_48h;\n                    var_3ch = uVar10;\n                }\n                (*ppcVar3[8])(*(ppcVar3[0x20] + 0x1c), uVar16, &var_48h);\n                (*ppcVar3[9])(*(ppcVar3[0x20] + 0x26c), 4, &var_48h);\n                uVar10 = var_48h;\n            }\n            uVar12 = uVar12 + 1;\n            arg_8h = var_80h;\n        } while (uVar12 < 2000);\n        uVar10 = var_38h;\n        if (uVar12 != 2000) {\n            var_28h = 0;\n            uVar9 = var_4ch;\n            do {\n                fcn.00403e30(&var_10h, 0, 4);\n                var_10h = uVar9 + 0x438;\n                if (*ppcVar3[0x20] == 0) {\n                    uVar16 = 8;\n                    var_ch = var_10h;\n                }\n                else {\n                    var_4h = uVar10;\n                    var_ch = uVar10;\n                    uVar16 = 0x10;\n                    var_8h = var_10h;\n                }\n                (*ppcVar3[8])(*(ppcVar3[0x20] + 0x1c), uVar16, &var_10h);\n                (*ppcVar3[9])(*(ppcVar3[0x20] + 0x26c), 4, &var_10h);\n                var_60h = var_10h;\n                fcn.00403de0(&var_ach, &var_60h, 4);\n                fcn.00403e30(&var_5ch, 0, 4);\n                var_5ch = uVar9 + 0x43c;\n                if (*ppcVar3[0x20] == 0) {\n                    uVar16 = 8;\n                    var_58h = var_5ch;\n                }\n                else {\n                    var_50h = uVar10;\n                    var_58h = uVar10;\n                    uVar16 = 0x10;\n                    var_54h = var_5ch;\n                }\n                (*ppcVar3[8])(*(ppcVar3[0x20] + 0x1c), uVar16, &var_5ch);\n                (*ppcVar3[9])(*(ppcVar3[0x20] + 0x26c), 4, &var_5ch);\n                var_60h = var_5ch;\n                fcn.00403de0(&var_a8h, &var_60h, 4);\n                fcn.00403e30(&var_38h, 0, 4);\n                var_38h = uVar9 + 0x440;\n                if (*ppcVar3[0x20] == 0) {\n                    uVar16 = 8;\n                    var_34h = var_38h;\n                }\n                else {\n                    var_2ch = uVar10;\n                    var_34h = uVar10;\n                    uVar16 = 0x10;\n                    var_30h = var_38h;\n                }\n                (*ppcVar3[8])(*(ppcVar3[0x20] + 0x1c), uVar16, &var_38h);\n                (*ppcVar3[9])(*(ppcVar3[0x20] + 0x26c), 4, &var_38h);\n                var_60h = var_38h;\n                fcn.00403de0(&var_a4h, &var_60h, 4);\n                iVar5 = fcn.00404020(0x4097b4, &var_ach, 0xc);\n                if (iVar5 == 0) break;\n                fcn.00403e30(&var_48h, 0, 4);\n                var_48h = uVar9 + 0x2e8;\n                if (*ppcVar3[0x20] == 0) {\n                    uVar16 = 8;\n                    var_44h = var_48h;\n                }\n                else {\n                    var_3ch = uVar10;\n                    var_44h = uVar10;\n                    uVar16 = 0x10;\n                    var_40h = var_48h;\n                }\n                (*ppcVar3[8])(*(ppcVar3[0x20] + 0x1c), uVar16, &var_48h);\n                (*ppcVar3[9])(*(ppcVar3[0x20] + 0x26c), 4, &var_48h);\n                var_80h = var_48h - 0x2e8;\n                if (*ppcVar3[0x20] != 0) {\n                    uVar9 = uVar9 + 0x2ec;\n                    fcn.00403e30(&var_20h, 0, 4);\n                    if (*ppcVar3[0x20] == 0) {\n                        uVar16 = 8;\n                        var_1ch = uVar9;\n                    }\n                    else {\n                        var_14h = uVar10;\n                        var_1ch = uVar10;\n                        uVar16 = 0x10;\n                        var_18h = uVar9;\n                    }\n                    var_20h = uVar9;\n                    (*ppcVar3[8])(*(ppcVar3[0x20] + 0x1c), uVar16, &var_20h);\n                    (*ppcVar3[9])(*(ppcVar3[0x20] + 0x26c), 4, &var_20h);\n                }\n                var_28h = var_28h + 1;\n                uVar9 = var_80h;\n            } while (var_28h < 2000);\n            if (var_28h != 2000) {\n                uVar12 = uVar9 + 0x348;\n                var_24h = 0;\n                if (*ppcVar3[0x20] == 0) {\n                    fcn.00403e30(&var_10h, 0, 4);\n                    if (*ppcVar3[0x20] == 0) {\n                        uVar16 = 8;\n                        var_ch = uVar12;\n                    }\n                    else {\n                        var_4h = uVar10;\n                        var_ch = uVar10;\n                        uVar16 = 0x10;\n                        var_8h = uVar12;\n                    }\n                    var_10h = uVar12;\n                    (*ppcVar3[8])(*(ppcVar3[0x20] + 0x1c), uVar16, &var_10h);\n                    (*ppcVar3[9])(*(ppcVar3[0x20] + 0x26c), 4, &var_10h);\n                    var_28h = var_10h & 0xfffffff8;\n                }\n                else {\n                    fcn.00403e30(&var_5ch, 0, 4);\n                    if (*ppcVar3[0x20] == 0) {\n                        uVar16 = 8;\n                        var_58h = uVar12;\n                    }\n                    else {\n                        var_50h = uVar10;\n                        var_58h = uVar10;\n                        uVar16 = 0x10;\n                        var_54h = uVar12;\n                    }\n                    var_5ch = uVar12;\n                    (*ppcVar3[8])(*(ppcVar3[0x20] + 0x1c), uVar16, &var_5ch);\n                    (*ppcVar3[9])(*(ppcVar3[0x20] + 0x26c), 4, &var_5ch);\n                    uVar9 = uVar9 + 0x34c;\n                    fcn.00403e30(&var_10h, 0, 4);\n                    if (*ppcVar3[0x20] == 0) {\n                        uVar16 = 8;\n                        var_ch = uVar9;\n                    }\n                    else {\n                        var_4h = uVar10;\n                        var_ch = uVar10;\n                        uVar16 = 0x10;\n                        var_8h = uVar9;\n                    }\n                    var_10h = uVar9;\n                    (*ppcVar3[8])(*(ppcVar3[0x20] + 0x1c), uVar16, &var_10h);\n                    (*ppcVar3[9])(*(ppcVar3[0x20] + 0x26c), 4, &var_10h);\n                    var_24h = var_10h;\n                    var_28h = var_5ch & 0xfffffff0;\n                }\n                uVar9 = arg_8h + 0x348;\n                fcn.00403e30(&var_38h, 0, 4);\n                if (*ppcVar3[0x20] == 0) {\n                    uVar16 = 8;\n                    var_34h = uVar9;\n                }\n                else {\n                    var_2ch = uVar10;\n                    var_34h = uVar10;\n                    uVar16 = 0x10;\n                    var_30h = uVar9;\n                }\n                var_38h = uVar9;\n                (*ppcVar3[8])(*(ppcVar3[0x20] + 0x1c), uVar16, &var_38h);\n                (*ppcVar3[9])(*(ppcVar3[0x20] + 0x26c), 4, &var_38h);\n                uVar12 = arg_8h;\n                if (*ppcVar3[0x20] != 0) {\n                    fcn.00403e30(&var_10h, 0, 4);\n                    var_10h = arg_8h + 0x34c;\n                    if (*ppcVar3[0x20] == 0) {\n                        uVar16 = 8;\n                        var_ch = var_10h;\n                    }\n                    else {\n                        var_4h = uVar10;\n                        var_ch = uVar10;\n                        uVar16 = 0x10;\n                        var_8h = var_10h;\n                    }\n                    (*ppcVar3[8])(*(ppcVar3[0x20] + 0x1c), uVar16, &var_10h);\n                    (*ppcVar3[9])(*(ppcVar3[0x20] + 0x26c), 4, &var_10h);\n                    uVar12 = var_10h;\n                }\n                var_4ch = uVar12;\n                fcn.00403e30(&var_20h, 0, 4);\n                piVar8 = ppcVar3[0x20];\n                var_20h = uVar9;\n                if (*piVar8 == 0) {\n                    var_1ch = uVar9;\n                    (*ppcVar3[8])(piVar8[7], 8, &var_20h);\n                    uVar16 = 4;\n                }\n                else {\n                    var_14h = uVar10;\n                    var_1ch = uVar10;\n                    var_18h = uVar9;\n                    (*ppcVar3[8])(piVar8[7], 0x10);\n                    var_1ch = var_24h;\n                    uVar16 = 8;\n                }\n                var_20h = var_28h;\n                (*ppcVar3[8])(*(ppcVar3[0x20] + 0x26c), uVar16, &var_20h);\n                uVar9 = arg_8h + 0x3a0;\n                fcn.00403e30(&var_48h, 0, 4);\n                if (*ppcVar3[0x20] == 0) {\n                    uVar16 = 8;\n                    var_44h = uVar9;\n                }\n                else {\n                    var_3ch = uVar10;\n                    var_44h = uVar10;\n                    uVar16 = 0x10;\n                    var_40h = uVar9;\n                }\n                var_48h = uVar9;\n                (*ppcVar3[8])(*(ppcVar3[0x20] + 0x1c), uVar16, &var_48h);\n                (*ppcVar3[9])(*(ppcVar3[0x20] + 0x26c), 4, &var_48h);\n                uVar12 = arg_8h;\n                if (*ppcVar3[0x20] != 0) {\n                    fcn.00403e30(&var_10h, 0, 4);\n                    var_10h = arg_8h + 0x3a4;\n                    if (*ppcVar3[0x20] == 0) {\n                        uVar16 = 8;\n                        var_ch = var_10h;\n                    }\n                    else {\n                        var_4h = uVar10;\n                        var_ch = uVar10;\n                        uVar16 = 0x10;\n                        var_8h = var_10h;\n                    }\n                    (*ppcVar3[8])(*(ppcVar3[0x20] + 0x1c), uVar16, &var_10h);\n                    (*ppcVar3[9])(*(ppcVar3[0x20] + 0x26c), 4, &var_10h);\n                    uVar12 = var_10h;\n                }\n                var_24h = uVar12;\n                fcn.00403e30(&var_20h, 0, 4);\n                piVar8 = ppcVar3[0x20];\n                var_20h = uVar9;\n                if (*piVar8 == 0) {\n                    var_1ch = uVar9;\n                    (*ppcVar3[8])(piVar8[7], 8, &var_20h);\n                    uVar16 = 4;\n                }\n                else {\n                    var_14h = uVar10;\n                    var_1ch = uVar10;\n                    var_18h = uVar9;\n                    (*ppcVar3[8])(piVar8[7], 0x10);\n                    var_1ch = 0;\n                    uVar16 = 8;\n                }\n                var_20h = 0;\n                (*ppcVar3[8])(*(ppcVar3[0x20] + 0x26c), uVar16, &var_20h);\n                var_80h = (**ppcVar3)(ppcVar3[1], ppcVar3[2]);\n                fcn.00403e30(&var_20h, 0, 4);\n                piVar8 = ppcVar3[0x20];\n                var_20h = arg_8h + 0x348;\n                if (*piVar8 == 0) {\n                    var_1ch = var_20h;\n                    (*ppcVar3[8])(piVar8[7], 8, &var_20h);\n                    uVar16 = 4;\n                }\n                else {\n                    var_14h = uVar10;\n                    var_1ch = uVar10;\n                    var_18h = var_20h;\n                    (*ppcVar3[8])(piVar8[7], 0x10, &var_20h);\n                    var_1ch = var_4ch;\n                    uVar16 = 8;\n                }\n                var_20h = var_38h;\n                (*ppcVar3[8])(*(ppcVar3[0x20] + 0x26c), uVar16, &var_20h);\n                fcn.00403e30(&var_20h, 0, 4);\n                piVar8 = ppcVar3[0x20];\n                if (*piVar8 == 0) {\n                    var_20h = uVar9;\n                    var_1ch = uVar9;\n                    (*ppcVar3[8])(piVar8[7], 8, &var_20h);\n                    uVar16 = 4;\n                }\n                else {\n                    var_14h = uVar10;\n                    var_1ch = uVar10;\n                    var_20h = uVar9;\n                    var_18h = uVar9;\n                    (*ppcVar3[8])(piVar8[7], 0x10);\n                    var_1ch = var_24h;\n                    uVar16 = 8;\n                }\n                var_20h = var_48h;\n                (*ppcVar3[8])(*(ppcVar3[0x20] + 0x26c), uVar16, &var_20h);\n                return var_80h;\n            }\n        }\n    }\n    return -1;\n}\n",
        "token_count": 18482
    },
    "00401d72": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00401d72(uint32_t arg_8h, uint noname_1, code *arg_10h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint in_ECX;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    uchar *puVar6;\n    int32_t iVar7;\n    uchar *puVar8;\n    code *pcVar9;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    code *var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_10h = fcn.0040311d;\n    var_4h = 0;\n    var_8h = 0;\n    var_ch = 0;\n    puVar6 = *0x41b0c8;\n    if (((arg_8h & 0x10) == 0) && ((*0x41b138 & 1) != 0)) {\n        var_10h = 0x416a50;\n        puVar6 = *0x41b0d0;\n    }\n    if (puVar6 == NULL) {\n        iVar5 = 2;\n    }\n    else {\n        uVar4 = *(puVar6 + *(puVar6 + 0x3c) + 0x50) + 0xfffU & 0xfffff000;\n        iVar5 = fcn.00401849(&var_ch);\n        iVar7 = var_4h;\n        if (((iVar5 == 0) && (iVar5 = fcn.00401807(&var_8h),  iVar7 = var_4h,  iVar5 == 0)) &&\n           (iVar5 = fcn.0040190f(var_8h),  iVar5 == 0)) {\n            puVar6 = *0x41b0c8;\n            puVar8 = iVar7 + 0xc5c + uVar4;\n            for (iVar5 = *0x41b0d8; iVar5 != 0; iVar5 = iVar5 + -1) {\n                *puVar8 = *puVar6;\n                puVar6 = puVar6 + 1;\n                puVar8 = puVar8 + 1;\n            }\n            iVar1 = uVar4 + iVar7;\n            puVar6 = *0x41b0d0;\n            puVar8 = iVar7 + 0xc5c + *0x41b0d8 + uVar4;\n            for (iVar5 = *0x41b0dc; iVar5 != 0; iVar5 = iVar5 + -1) {\n                *puVar8 = *puVar6;\n                puVar6 = puVar6 + 1;\n                puVar8 = puVar8 + 1;\n            }\n            puVar6 = *0x41b0e0;\n            puVar8 = iVar7 + 0xc5c + *0x41b0d8 + *0x41b0dc + uVar4;\n            for (iVar5 = *0x41b0e8; iVar5 != 0; iVar5 = iVar5 + -1) {\n                *puVar8 = *puVar6;\n                puVar6 = puVar6 + 1;\n                puVar8 = puVar8 + 1;\n            }\n            *(iVar1 + 0x3c) = var_8h;\n            *(iVar1 + 0x40) = var_8h >> 0x1f;\n            iVar5 = var_8h + 0xc5c + uVar4;\n            *(iVar1 + 0x18) = iVar5;\n            *(iVar1 + 0x1c) = iVar5 >> 0x1f;\n            iVar5 = var_8h + 0xc5c + *0x41b0d8 + uVar4;\n            *(iVar1 + 0x20) = iVar5;\n            *(iVar1 + 0x24) = iVar5 >> 0x1f;\n            iVar5 = var_8h + 0xc5c + *0x41b0dc + *0x41b0d8 + uVar4;\n            *(iVar1 + 0x30) = iVar5;\n            *(iVar1 + 0x34) = iVar5 >> 0x1f;\n            *(iVar1 + 0x28) = *0x41b0d8;\n            *(iVar1 + 0x2c) = *0x41b0dc;\n            *(iVar1 + 0x38) = *0x41b0e8;\n            if (((arg_8h & 0x10) == 0) && ((*0x41b138 & 1) != 0)) {\n                iVar5 = fcn.00401c0a();\n            }\n            else {\n                iVar5 = fcn.00401cb2();\n            }\n            iVar7 = var_4h;\n            if (iVar5 == 0) {\n                pcVar9 = iVar1 + 0x4c;\n                for (iVar3 = 0x800; iVar3 != 0; iVar3 = iVar3 + -1) {\n                    *pcVar9 = *var_10h;\n                    var_10h = var_10h + 1;\n                    pcVar9 = pcVar9 + 1;\n                }\n                if (arg_10h != NULL) {\n                    iVar5 = (*arg_10h)(in_ECX, var_8h + uVar4 + 0x4c, var_8h + uVar4, arg_8h, 0);\n                    iVar7 = var_4h;\n                }\n            }\n        }\n        if (iVar7 != 0) {\n            uVar2 = (**0x409120)(0xffffffff, iVar7);\n            (**0x40911c)(uVar2);\n        }\n        if (var_ch != 0) {\n            (**0x409068)(var_ch);\n        }\n    }\n    return iVar5;\n}\n",
        "token_count": 1362
    },
    "00401f9a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00401f9a(uint param_1)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int32_t *piVar3;\n    int32_t *piVar4;\n    int32_t iVar5;\n    uint *puVar6;\n    uint var_228h;\n    int32_t var_220h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_24h;\n    int32_t var_18h;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    var_8h = 0;\n    uVar2 = (**0x409084)(0, 0x1000);\n    piVar3 = (**0x40907c)(uVar2);\n    if (piVar3 != NULL) {\n        puVar6 = &var_228h;\n        for (iVar5 = 0x1e8; iVar5 != 0; iVar5 = iVar5 + -1) {\n            *puVar6 = 0;\n            puVar6 = puVar6 + 1;\n        }\n        iVar5 = (**0x40910c)(param_1, 0, &var_3ch, 0x18, &var_ch);\n        if (-1 < iVar5) {\n            iVar5 = (**0x40905c)(param_1, var_38h, &var_228h, 0x1e8, &var_ch);\n            if ((iVar5 != 0) && (var_220h != 0)) {\n                iVar5 = (**0x40905c)(param_1, var_220h, piVar3, 0x1000, &var_4h);\n                if (iVar5 != 0) {\n                    iVar5 = (**0x40905c)(param_1, piVar3[0xf] + var_220h, piVar3, 0x1000, &var_4h);\n                    pcVar1 = *0x40905c;\n                    if (iVar5 != 0) {\n                        var_8h = piVar3[10] + var_220h;\n                        piVar4 = piVar3 + 0x34;\n                        if (*(piVar3 + 1) != -0x799c) {\n                            piVar4 = piVar3 + 0x30;\n                        }\n                        if ((*piVar4 != 0) && (piVar4[1] != 0)) {\n                            iVar5 = (**0x40905c)(param_1, *piVar4 + var_220h, &var_24h, 0x18, &var_4h);\n                            if ((iVar5 != 0) && (var_18h != 0)) {\n                                iVar5 = (*pcVar1)(param_1, var_18h, piVar3, 0x1000, &var_4h);\n                                if ((iVar5 != 0) && (*piVar3 != 0)) {\n                                    var_8h = *piVar3;\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        uVar2 = (**0x409084)(0, piVar3);\n        (**0x409080)(uVar2);\n    }\n    return var_8h;\n}\n",
        "token_count": 728
    },
    "0040246a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.0040246a(int32_t param_1)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint32_t var_4h;\n    \n    var_4h = 0;\n    if (*0x41b108 == NULL) {\n        uVar1 = (**0x4090b4)(0x4098b0, 0x4098c0);\n        *0x41b108 = (**0x409024)(uVar1);\n        if (*0x41b108 == NULL) {\n            return var_4h;\n        }\n    }\n    if ((param_1 != 0) && (iVar2 = (**0x409040)(0x400, 0, param_1),  iVar2 != 0)) {\n        iVar3 = (**0x41b108)(iVar2, &var_4h);\n        var_4h = var_4h & -(iVar3 != 0);\n        (**0x409068)(iVar2);\n    }\n    return var_4h;\n}\n",
        "token_count": 239
    },
    "00402d26": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00402d26(uint32_t *arg_8h, uint32_t *arg_ch)\n\n{\n    uint32_t uVar1;\n    uint32_t *puVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uchar *puVar5;\n    int32_t in_EDX;\n    uint uVar6;\n    uint32_t *puVar7;\n    uint var_10h;\n    uint var_ch;\n    uint32_t var_8h;\n    uint32_t var_4h;\n    \n    fcn.0040267e(0, &var_4h);\n    var_8h = var_4h;\n    puVar2 = (**0x409020)(0, var_4h, 0x3000, 4);\n    if (puVar2 != NULL) {\n        do {\n            iVar3 = fcn.0040267e(var_8h, &var_4h);\n            uVar1 = var_4h;\n            if ((iVar3 != 0) || (var_4h <= var_8h)) break;\n            var_8h = var_4h;\n            (**0x409044)(puVar2, 0, 0x8000);\n            puVar2 = (**0x409020)(0, uVar1, 0x3000, 4);\n        } while (puVar2 != NULL);\n        uVar6 = 2;\n        if ((puVar2 != NULL) && (uVar1 <= var_8h)) {\n            var_4h = 0;\n            puVar7 = puVar2 + 2;\n            if (*puVar2 != 0) {\n                do {\n                    iVar3 = *(puVar7 + 0x1e) + 0x20 + puVar7;\n                    if ((in_EDX == 0) || (iVar4 = (**0x409028)(iVar3, in_EDX),  iVar4 == 0)) {\ncode_r0x00402e28:\n                        uVar6 = 0;\n                        *arg_8h = puVar7[2];\n                        arg_8h[1] = puVar7[3];\n                        if (arg_ch != NULL) {\n                            *arg_ch = puVar7[4];\n                        }\n                        break;\n                    }\n                    puVar5 = (**0x409100)(iVar3, 0x2e);\n                    if (puVar5 != NULL) {\n                        *puVar5 = 0;\n                        iVar3 = (**0x409028)(iVar3, in_EDX);\n                        if (iVar3 == 0) goto code_r0x00402e28;\n                    }\n                    puVar7 = puVar7 + 0x48;\n                    var_4h = var_4h + 1;\n                } while (var_4h < *puVar2);\n            }\n            goto code_r0x00402e49;\n        }\n    }\n    uVar6 = 8;\ncode_r0x00402e49:\n    if (puVar2 != NULL) {\n        (**0x409044)(puVar2, 0, 0x8000);\n    }\n    return uVar6;\n}\n",
        "token_count": 699
    },
    "0040311d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040311d(code **arg_8h)\n\n{\n    code **ppcVar1;\n    uint32_t uVar2;\n    code cVar3;\n    int16_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    char cVar7;\n    int32_t iVar8;\n    code **ppcVar9;\n    code *pcVar10;\n    uint32_t *puVar11;\n    uint32_t uVar12;\n    uint var_2ch;\n    uint var_28h;\n    code *var_24h;\n    uint var_20h;\n    uint32_t var_1ch;\n    uint *var_18h;\n    uint var_14h;\n    code *var_10h;\n    int32_t *var_ch;\n    code **var_8h;\n    uint32_t var_4h;\n    \n    ppcVar1 = arg_8h;\n    uVar12 = 0;\n    ppcVar9 = arg_8h[0xf];\n    if (ppcVar9 == NULL) {\n        ppcVar1 = arg_8h + 0x11;\n        pcVar10 = *arg_8h;\n        arg_8h = ppcVar9;\n        (*pcVar10)(0, 0, ppcVar1, &var_2ch);\n    }\n    else {\n        var_10h = ppcVar9[0xf] + ppcVar9;\n        var_24h = *(var_10h + 0x14);\n        var_1ch = *(var_10h + 6);\n        var_14h = 0;\n        arg_8h = ppcVar9;\n        if (*(var_10h + 0x80) != 0) {\n            var_ch = *(var_10h + 0x80) + ppcVar9;\n            iVar6 = var_ch[3];\n            if (iVar6 != 0) {\n                do {\n                    iVar8 = 0;\n                    cVar3 = *(iVar6 + arg_8h);\n                    if (cVar3 != 0x0) {\n                        ppcVar9 = ppcVar1 + 0x213;\n                        do {\n                            iVar8 = iVar8 + 1;\n                            *ppcVar9 = cVar3;\n                            ppcVar9 = ppcVar9 + 2;\n                            cVar3 = (iVar6 + arg_8h)[iVar8];\n                        } while (cVar3 != 0x0);\n                    }\n                    iVar4 = iVar8 * 2;\n                    *(ppcVar1 + 0x11) = iVar4;\n                    *(ppcVar1 + 0x46) = iVar4 + 2;\n                    ppcVar1[0x12] = ppcVar1 + 0x213;\n                    iVar8 = (**ppcVar1)(0, 0, ppcVar1 + 0x11, &var_14h);\n                    if (iVar8 < 0) {\n                        iVar8 = -0x3ffffc91;\n                        break;\n                    }\n                    var_4h = 0;\n                    iVar6 = var_ch[4];\n                    iVar5 = *var_ch;\n                    if ((*var_ch != 0) || (iVar5 = iVar6,  iVar6 != 0)) {\n                        var_8h = iVar5 + arg_8h;\n                        var_18h = iVar6 + arg_8h;\n                        while( true ) {\n                            ppcVar9 = *var_8h;\n                            if (ppcVar9 == NULL) break;\n                            if (ppcVar9 < 0) {\n                                if ((ppcVar9 < arg_8h) || (*(var_10h + 0x50) + arg_8h <= ppcVar9)) {\n                                    var_4h = *var_8h;\n                                    ppcVar9 = NULL;\n                                }\n                            }\n                            else {\n                                ppcVar9 = ppcVar9 + arg_8h;\n                            }\n                            if (ppcVar9 != NULL) {\n                                pcVar10 = ppcVar9 + 2;\n                                iVar6 = 0;\n                                cVar3 = *pcVar10;\n                                while (cVar3 != 0x0) {\n                                    iVar6 = iVar6 + 1;\n                                    cVar3 = pcVar10[iVar6];\n                                }\n                                *(ppcVar1 + 0x11) = iVar6;\n                                ppcVar1[0x12] = pcVar10;\n                                ppcVar9 = ppcVar1 + 0x11;\n                                *(ppcVar1 + 0x46) = iVar6 + 1;\n                            }\n                            iVar8 = (*ppcVar1[2])(var_14h, ppcVar9, var_4h, &var_20h);\n                            if (iVar8 < 0) {\n                                iVar8 = -0x3fffff86;\n                                break;\n                            }\n                            *var_18h = var_20h;\n                            var_8h = var_8h + 1;\n                            var_18h = var_18h + 1;\n                        }\n                    }\n                    iVar6 = var_ch[8];\n                    var_ch = var_ch + 5;\n                } while (iVar6 != 0);\n                if (iVar8 < 0) {\n                    return;\n                }\n            }\n        }\n        pcVar10 = var_10h;\n        var_ch = *(var_10h + 0x54);\n        iVar6 = (*ppcVar1[4])(0xffffffff, &arg_8h, &var_ch, 4, &var_28h);\n        if (var_1ch != 0) {\n            puVar11 = pcVar10 + var_24h + 0x3c;\n            do {\n                if (iVar6 < 0) {\n                    return;\n                }\n                uVar2 = *puVar11;\n                if ((uVar2 & 0x20000000) == 0) {\n                    if ((uVar2 & 0x40000000) == 0) {\n                        cVar7 = '\\x04';\n                    }\n                    else {\n                        cVar7 = (-((uVar2 & 0x80000000) != 0) & 2U) + 2;\n                    }\n                }\n                else {\n                    cVar7 = (-((uVar2 & 0x80000000) != 0) & 0x20U) + 0x20;\n                }\n                var_ch = puVar11[-7];\n                var_24h = puVar11[-6] + arg_8h;\n                iVar6 = (*ppcVar1[4])(0xffffffff, &var_24h, &var_ch, cVar7, &var_28h);\n                puVar11 = puVar11 + 10;\n                uVar12 = uVar12 + 1;\n                pcVar10 = var_10h;\n            } while (uVar12 < var_1ch);\n        }\n        if (-1 < iVar6) {\n            (*(*(pcVar10 + 0x28) + arg_8h))(arg_8h, 1, ppcVar1 + 6);\n        }\n    }\n    return;\n}\n",
        "token_count": 1589
    },
    "00403739": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00403739(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint *extraout_ECX;\n    uint *extraout_ECX_00;\n    uint *arg_8h;\n    uint extraout_ECX_01;\n    uint noname_1;\n    uint extraout_ECX_02;\n    code *pcVar5;\n    int32_t *piVar6;\n    uint uStack28;\n    int32_t iStack24;\n    int32_t iStack20;\n    \n    iVar2 = fcn.00403647();\n    pcVar5 = *0x409054;\n    if (iVar2 == 0) {\n        uVar3 = (**0x4090a8)(0);\n        (*pcVar5)(uVar3);\n    }\n    uStack28 = 0;\n    piVar6 = &iStack24;\n    for (iVar2 = 0x10; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *piVar6 = 0;\n        piVar6 = piVar6 + 1;\n    }\n    iVar2 = fcn.0040334d(&uStack28);\n    pcVar1 = *0x409068;\n    if (iVar2 == 0) {\n        if (*0x41b140 == 0) {\n            fcn.004034fa();\n            arg_8h = extraout_ECX_00;\n            goto code_r0x004037f9;\n        }\n        iVar2 = fcn.004034fa();\n        if (iVar2 != 0) {\n            (**0x4090c0)(iStack20);\n            (*pcVar1)(uStack28);\n            (*pcVar1)(uStack28);\n        }\n    }\n    else {\n        (**0x409068)(iVar2);\n        if (*0x41b140 == 0) {\n            uStack28 = 0;\n            piVar6 = &iStack24;\n            for (iVar2 = 0x10; iVar2 != 0; iVar2 = iVar2 + -1) {\n                *piVar6 = 0;\n                piVar6 = piVar6 + 1;\n            }\n            arg_8h = &uStack28;\n            iStack24 = fcn.0040334d(arg_8h);\n            goto code_r0x004037f9;\n        }\n    }\n    fcn.00403410();\n    arg_8h = extraout_ECX;\ncode_r0x004037f9:\n    if (iStack24 != 0) {\n        if (iStack20 == 0) {\n            uStack28 = 0;\n            iVar2 = fcn.0040246a();\n            if ((iVar2 != 0) || (*0x41b140 != 0)) {\n                uStack28 = 0x10;\n            }\n            uVar3 = uStack28;\n            iVar2 = 0;\n            noname_1 = extraout_ECX_01;\n            do {\n                iVar4 = fcn.00401d72(uVar3, noname_1, fcn.00401a78);\n                pcVar5 = *0x409054;\n                if (iVar4 == 0) break;\n                (**0x40908c)(0x32);\n                iVar2 = iVar2 + 1;\n                noname_1 = extraout_ECX_02;\n                pcVar5 = *0x409054;\n            } while (iVar2 < 5);\n        }\n        else {\n            iVar2 = fcn.00402138(arg_8h, arg_8h);\n            if (iVar2 == 0) {\n                if (*0x41b140 == 0) {\n                    (**0x4090c0)(iStack20);\n                }\n            }\n            else if (*0x41b140 != 0) {\n                (*pcVar5)(iStack24, 1);\n            }\n            (*pcVar1)(iStack20);\n        }\n        (*pcVar1)(iStack24);\n    }\n    fcn.00402fda();\n    uVar3 = (**0x409084)(0, *0x41b144);\n    (**0x409080)(uVar3);\n    uVar3 = (**0x4090a8)(0);\n    (*pcVar5)(uVar3);\n    return;\n}\n",
        "token_count": 962
    },
    "004038de": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint fcn.004038de(void)\n\n{\n    ushort uVar1;\n    uint uVar2;\n    code *pcVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint *puVar6;\n    uint var_24h;\n    \n    uVar5 = 0;\n    uVar2 = (**0x4090b4)(0x4098b0, 0x409a60);\n    pcVar3 = (**0x409024)(uVar2);\n    puVar6 = &var_24h;\n    for (iVar4 = 0x24; iVar4 != 0; iVar4 = iVar4 + -1) {\n        *puVar6 = 0;\n        puVar6 = puVar6 + 1;\n    }\n    if (pcVar3 != NULL) {\n        (*pcVar3)(&var_24h);\n        if (var_24h == 0) {\n            uVar1 = (**0x409030)();\n            if ((uVar1 == '\\x06') && (uVar1 >> 8 != '\\0')) {\n                iVar4 = fcn.00403cc0(0x4038cf, 0, 0);\n                if (iVar4 == 0) {\n                    uVar5 = 1;\n                }\n            }\n        }\n    }\n    return uVar5;\n}\n",
        "token_count": 305
    },
    "00403a20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00403a20(int32_t arg_8h)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    uint uVar3;\n    uint uVar4;\n    int32_t iVar5;\n    \n    uVar2 = (**0x409048)(0x409538);\n    pcVar1 = *0x409024;\n    uVar3 = (**0x409024)(uVar2, 0x409554);\n    *(arg_8h + 0xc) = uVar3;\n    uVar3 = (*pcVar1)(uVar2, 0x4098f0);\n    *(arg_8h + 0x10) = uVar3;\n    uVar3 = (**(arg_8h + 0xc))(uVar2, 0x409564);\n    *(arg_8h + 0x14) = uVar3;\n    uVar3 = (**(arg_8h + 0xc))(uVar2, 0x409970);\n    *(arg_8h + 0x18) = uVar3;\n    uVar3 = (**(arg_8h + 0xc))(uVar2, 0x40998c);\n    *(arg_8h + 0x1c) = uVar3;\n    (**(arg_8h + 0x10))(0x409578);\n    (**(arg_8h + 0x10))(0x409580);\n    uVar3 = (**(arg_8h + 0x10))(0x409588);\n    uVar4 = (**(arg_8h + 0xc))(uVar3, 0x409590);\n    *(arg_8h + 0x20) = uVar4;\n    uVar4 = (**(arg_8h + 0xc))(uVar3, 0x4095a0);\n    *(arg_8h + 0x24) = uVar4;\n    uVar4 = (**(arg_8h + 0xc))(uVar3, 0x4095b0);\n    *(arg_8h + 0x28) = uVar4;\n    uVar4 = (**(arg_8h + 0xc))(uVar3, 0x4095c0);\n    *(arg_8h + 0x2c) = uVar4;\n    uVar4 = (**(arg_8h + 0xc))(uVar3, 0x4095d0);\n    *(arg_8h + 0x78) = uVar4;\n    uVar3 = (**(arg_8h + 0xc))(uVar3, 0x4095e8);\n    *(arg_8h + 0x7c) = uVar3;\n    uVar3 = (**(arg_8h + 0xc))(uVar2, 0x4098c0);\n    *(arg_8h + 0x30) = uVar3;\n    uVar3 = (**(arg_8h + 0xc))(uVar2, 0x409600);\n    *(arg_8h + 0x34) = uVar3;\n    uVar3 = (**(arg_8h + 0xc))(uVar2, 0x409614);\n    *(arg_8h + 0x38) = uVar3;\n    uVar3 = (**(arg_8h + 0xc))(uVar2, 0x409624);\n    *(arg_8h + 0x3c) = uVar3;\n    uVar3 = (**(arg_8h + 0xc))(uVar2, 0x409638);\n    *(arg_8h + 0x40) = uVar3;\n    uVar3 = (**(arg_8h + 0xc))(uVar2, 0x409644);\n    *(arg_8h + 0x44) = uVar3;\n    uVar3 = (**(arg_8h + 0xc))(uVar2, 0x409650);\n    *(arg_8h + 0x48) = uVar3;\n    uVar3 = (**(arg_8h + 0xc))(uVar2, 0x409668);\n    *(arg_8h + 0x4c) = uVar3;\n    uVar3 = (**(arg_8h + 0xc))(uVar2, 0x409678);\n    *(arg_8h + 0x50) = uVar3;\n    uVar3 = (**(arg_8h + 0xc))(uVar2, 0x40968c);\n    *(arg_8h + 0x54) = uVar3;\n    uVar3 = (**(arg_8h + 0xc))(uVar2, 0x40969c);\n    *(arg_8h + 0x58) = uVar3;\n    uVar3 = (**(arg_8h + 0xc))(uVar2, 0x4096a8);\n    *(arg_8h + 0x5c) = uVar3;\n    uVar3 = (**(arg_8h + 0xc))(uVar2, 0x4096b4);\n    *(arg_8h + 0x60) = uVar3;\n    uVar3 = (**(arg_8h + 0xc))(uVar2, 0x4096c8);\n    *(arg_8h + 100) = uVar3;\n    uVar3 = (**(arg_8h + 0xc))(uVar2, 0x4096dc);\n    *(arg_8h + 0x68) = uVar3;\n    uVar2 = (**(arg_8h + 0xc))(uVar2, 0x4096f0);\n    *(arg_8h + 0x6c) = uVar2;\n    uVar2 = (**(arg_8h + 0x10))(0x4096f8);\n    uVar3 = (**(arg_8h + 0xc))(uVar2, 0x409700);\n    *(arg_8h + 0x70) = uVar3;\n    iVar5 = (**(arg_8h + 0xc))(uVar2, 0x409708);\n    *(arg_8h + 0x74) = iVar5;\n    if ((((((((*(arg_8h + 0x18) != 0) && (*(arg_8h + 0x1c) != 0)) && (*(arg_8h + 0x20) != 0)) &&\n           (((*(arg_8h + 0x24) != 0 && (*(arg_8h + 0x30) != 0)) &&\n            ((*(arg_8h + 0x34) != 0 && ((*(arg_8h + 0x38) != 0 && (*(arg_8h + 0x70) != 0)))))))) && (iVar5 != 0)) &&\n         (((((*(arg_8h + 0x28) != 0 && (*(arg_8h + 0x2c) != 0)) && (*(arg_8h + 0x3c) != 0)) &&\n           ((*(arg_8h + 0x40) != 0 && (*(arg_8h + 0x44) != 0)))) &&\n          ((*(arg_8h + 0x48) != 0 && ((*(arg_8h + 0x4c) != 0 && (*(arg_8h + 0x78) != 0)))))))) &&\n        ((*(arg_8h + 0x50) != 0 && (((*(arg_8h + 0x54) != 0 && (*(arg_8h + 0x5c) != 0)) && (*(arg_8h + 0x58) != 0))))))\n       && (((*(arg_8h + 0x60) != 0 && (*(arg_8h + 0x68) != 0)) && ((*(arg_8h + 0x6c) != 0 && (*(arg_8h + 0x14) != 0)))))\n       ) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 1854
    },
    "00403d30": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00403d30(int32_t arg_8h, uint arg_ch, uint arg_10h, int32_t arg_14h)\n\n{\n    ulong uVar1;\n    uint var_138h;\n    char var_9eh;\n    uint var_9ch;\n    uint var_98h;\n    uint var_94h;\n    \n    fcn.00403e30(&var_138h, 0, 0x9c);\n    var_138h = 0x9c;\n    (**(arg_8h + 0x38))(&var_138h);\n    if (arg_14h != 0) {\n        *arg_14h = var_9eh != '\\x01';\n    }\n    fcn.00403e30(&var_9ch, 0, 0x9c);\n    var_98h = arg_ch;\n    var_94h = arg_10h;\n    var_9ch = 0x9c;\n    uVar1 = (**(arg_8h + 0x60))(0, 0, 2, 1);\n    uVar1 = (**(arg_8h + 0x60))(uVar1, 1, 1);\n    (**(arg_8h + 100))(&var_9ch, 3, uVar1);\n    return;\n}\n",
        "token_count": 302
    },
    "00403de0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuchar * __cdecl fcn.00403de0(uchar *arg_8h, uchar *arg_ch, int32_t arg_10h)\n\n{\n    uint var_ch;\n    uchar *var_8h;\n    uchar *var_4h;\n    \n    var_8h = arg_ch;\n    var_4h = arg_8h;\n    while( true ) {\n        if (arg_10h == 0) break;\n        *var_4h = *var_8h;\n        var_4h = var_4h + 1;\n        var_8h = var_8h + 1;\n        arg_10h = arg_10h + -1;\n    }\n    return arg_8h;\n}\n",
        "token_count": 160
    },
    "00403fe0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nchar * __cdecl fcn.00403fe0(char *arg_8h, int32_t arg_ch)\n\n{\n    char cVar1;\n    uint var_8h;\n    char *var_4h;\n    \n    var_4h = NULL;\n    do {\n        if (*arg_8h == arg_ch) {\n            var_4h = arg_8h;\n        }\n        cVar1 = *arg_8h;\n        arg_8h = arg_8h + 1;\n    } while (cVar1 != '\\0');\n    return var_4h;\n}\n",
        "token_count": 128
    },
    "00404020": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nint32_t __cdecl fcn.00404020(uint8_t *arg_8h, uint8_t *arg_ch, int32_t arg_10h)\n\n{\n    uint var_8h;\n    uint var_1h;\n    \n    while( true ) {\n        if (arg_10h == 0) {\n            return 0;\n        }\n        if (*arg_8h != *arg_ch) break;\n        arg_8h = arg_8h + 1;\n        arg_ch = arg_ch + 1;\n        arg_10h = arg_10h + -1;\n    }\n    return *arg_8h - *arg_ch;\n}\n",
        "token_count": 160
    },
    "00404080": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nint32_t __cdecl fcn.00404080(char *arg_8h, char *arg_ch)\n\n{\n    char cVar1;\n    char cVar2;\n    int32_t var_8h;\n    uint var_1h;\n    \n    if (arg_8h == NULL) {\n        if (arg_ch == NULL) {\n            var_8h = 0;\n        }\n        else {\n            var_8h = -*arg_ch;\n        }\n    }\n    else if (arg_ch == NULL) {\n        var_8h = *arg_8h;\n    }\n    else {\n        while( true ) {\n            cVar1 = fcn.00404120(*arg_8h);\n            cVar2 = fcn.00404120(*arg_ch);\n            if ((cVar1 != cVar2) || (*arg_8h == '\\0')) break;\n            arg_8h = arg_8h + 1;\n            arg_ch = arg_ch + 1;\n        }\n        var_8h = cVar1 - cVar2;\n    }\n    return var_8h;\n}\n",
        "token_count": 256
    },
    "00404150": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404150(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t arg_8h_00;\n    uint uVar2;\n    uint32_t uVar3;\n    \n    arg_8h_00 = (**(arg_8h + 0x40))(0x40, 44000);\n    if (arg_8h_00 != 0) {\n        fcn.00403e30(arg_8h_00, 0xde, 44000);\n        uVar3 = 0x270;\n        do {\n            iVar1 = *(uVar3 + *(arg_8h + 0x80));\n            if (iVar1 != 0) {\n                (**(arg_8h + 0x28))(iVar1);\n            }\n            uVar3 = uVar3 + 4;\n        } while (uVar3 < 0x1210);\n        fcn.00403e30(*(arg_8h + 0x80) + 0x270, 0, 4000);\n        uVar3 = 0x270;\n        do {\n            uVar2 = (**(arg_8h + 0x2c))(0x6e, 100, 1, 0x20, arg_8h_00);\n            *(uVar3 + *(arg_8h + 0x80)) = uVar2;\n            if (*(uVar3 + *(arg_8h + 0x80)) == 0) break;\n            uVar3 = uVar3 + 4;\n        } while (uVar3 < 0x1210);\n        (**(arg_8h + 0x44))(arg_8h_00);\n    }\n    return;\n}\n",
        "token_count": 388
    },
    "00406730": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00406730(int32_t arg_8h)\n\n{\n    uint uVar1;\n    uint uVar2;\n    int32_t iVar3;\n    code *pcVar4;\n    uint32_t *puVar5;\n    uint32_t *puVar6;\n    uint32_t uVar7;\n    int32_t iVar8;\n    bool bVar9;\n    uint var_11ch;\n    uint var_1ch;\n    uint32_t var_18h;\n    uint32_t var_14h;\n    int32_t var_10h;\n    code *var_ch;\n    uint32_t *var_8h;\n    uint var_4h;\n    \n    var_18h = (**(arg_8h + 0x68))();\n    uVar1 = (**(arg_8h + 0x54))();\n    var_1ch = uVar1;\n    uVar2 = (**(arg_8h + 0x3c))(0x409710, 0x4098c0);\n    iVar3 = (**(arg_8h + 0xc))(uVar2);\n    *(arg_8h + 0x30) = iVar3;\n    if (iVar3 != 0) {\n        uVar2 = (**(arg_8h + 0x34))(*(arg_8h + 0x80) + 0x3c);\n        iVar3 = (**(arg_8h + 0x30))(uVar2);\n        if (iVar3 == 0) {\n            *(*(arg_8h + 0x80) + 0x3c) = 0;\n        }\n    }\n    iVar3 = fcn.00403d30(arg_8h, 6, 3, 0);\n    if ((iVar3 != 0) || (iVar3 = fcn.00403d30(arg_8h, 6, 2, 0),  iVar3 != 0)) {\n        return 0;\n    }\n    iVar3 = (**(arg_8h + 0x3c))(0x409578);\n    if (iVar3 == 0) {\n        return -1;\n    }\n    pcVar4 = (**(arg_8h + 0xc))(iVar3, 0x40971c);\n    if (((pcVar4 == NULL) || (var_ch = pcVar4,  iVar3 = (*pcVar4)(0xb, 0, 0, &var_4h),  iVar3 != -0x3ffffffc)) ||\n       (puVar5 = (**(arg_8h + 0x58))(uVar1, 8, var_4h),  puVar5 == NULL)) {\n        iVar3 = -1;\n    }\n    else {\n        var_8h = puVar5;\n        iVar3 = (*pcVar4)(0xb, puVar5, var_4h, &var_4h);\n        if (-1 < iVar3) {\n            fcn.00403e30(&var_11ch, 0, 0x100);\n            puVar6 = puVar5 + 8;\n            fcn.00403f60(&var_11ch, puVar6);\n            *(*(arg_8h + 0x80) + 0x244) = puVar5[3];\n            var_10h = fcn.00403fe0(&var_11ch, 0x5c);\n            puVar5 = var_8h;\n            if (*(*(arg_8h + 0x80) + 0x3c) != 0) {\n                uVar7 = 0;\n                bVar9 = *var_8h == 0;\n                if (*var_8h != 0) {\n                    do {\n                        iVar3 = fcn.00404080(puVar6, 0x409738);\n                        if (iVar3 == 0) break;\n                        uVar7 = uVar7 + 1;\n                        puVar6 = puVar6 + 0x47;\n                    } while (uVar7 < *puVar5);\n                    bVar9 = uVar7 == *var_8h;\n                }\n                if (!bVar9) {\n                    *(*(arg_8h + 0x80) + 0x248) = var_8h[uVar7 * 0x47 + 3];\n                }\n            }\n            iVar3 = var_10h;\n            if (*(*(arg_8h + 0x80) + 0x3c) == 0) {\n                uVar1 = (**(arg_8h + 0x10))(var_10h + 1);\n                *(*(arg_8h + 0x80) + 0x40) = uVar1;\n            }\n            else {\n                (**(arg_8h + 0x48))(*(arg_8h + 0x80) + 0x44, 0x100);\n                fcn.00403f30(*(arg_8h + 0x80) + 0x44, 0x409754);\n                fcn.00403f30(*(arg_8h + 0x80) + 0x44, iVar3);\n                (**(arg_8h + 0x48))(*(arg_8h + 0x80) + 0x144, 0x100);\n                fcn.00403f30(*(arg_8h + 0x80) + 0x144, 0x409760);\n            }\n            uVar1 = (**(arg_8h + 0x34))(&var_14h, 0, 0, 0);\n            uVar1 = (**(arg_8h + 0x34))(uVar1);\n            uVar1 = (**(arg_8h + 0x34))(uVar1);\n            (**(arg_8h + 0x4c))(uVar1);\n            uVar1 = (**0x409084)(0, 0x1000);\n            puVar5 = (**0x40907c)(uVar1);\n            iVar3 = (*var_ch)(0x40, puVar5, 0x1000, &var_4h);\n            if (iVar3 == -0x3ffffffc) {\n                iVar8 = 0x1000;\n                do {\n                    (**(arg_8h + 0x5c))(var_1ch, 0, puVar5);\n                    iVar8 = iVar8 + 0x1000;\n                    uVar1 = (**0x409084)(0, iVar8);\n                    puVar5 = (**0x40907c)(uVar1);\n                    iVar3 = (*var_ch)(0x40, puVar5, iVar8, &var_4h);\n                } while (iVar3 == -0x3ffffffc);\n            }\n            if (-1 < iVar3) {\n                uVar7 = 0;\n                if (*puVar5 != 0) {\n                    puVar6 = puVar5 + 4;\n                    while ((puVar6[-1] != var_18h || (*puVar6 != var_14h))) {\n                        uVar7 = uVar7 + 1;\n                        puVar6 = puVar6 + 7;\n                        if (*puVar5 <= uVar7) {\n                            return 0;\n                        }\n                    }\n                    *(*(arg_8h + 0x80) + 0x20) = puVar5[uVar7 * 7 + 2];\n                }\n                return 0;\n            }\n        }\n    }\n    return iVar3;\n}\n",
        "token_count": 1677
    },
    "00406a40": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406a40(int32_t arg_8h)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint var_a0h;\n    int32_t var_9ch;\n    int32_t var_98h;\n    uint var_4h;\n    \n    var_4h = 0;\n    pcVar1 = *(arg_8h + 0x30);\n    if (pcVar1 != NULL) {\n        uVar2 = (**(arg_8h + 0x34))(&var_4h);\n        (*pcVar1)(uVar2);\n    }\n    fcn.00403e30(&var_a0h, 0, 0x9c);\n    var_a0h = 0x9c;\n    iVar3 = (**(arg_8h + 0x38))(&var_a0h);\n    if (iVar3 == 0) {\n        return;\n    }\n    if (var_9ch == 5) {\n        if (var_98h != 1) goto code_r0x00406b44;\n        *(*(arg_8h + 0x80) + 0x14) = 1;\n    }\n    if (var_9ch == 6) {\n        if (var_98h == 0) {\n            *(*(arg_8h + 0x80) + 0x10) = 1;\n        }\n        if (var_98h == 1) {\n            *(*(arg_8h + 0x80) + 4) = 1;\n        }\n        if (var_98h == 2) {\n            *(*(arg_8h + 0x80) + 8) = 1;\n            *(*(arg_8h + 0x80) + 0xc) = 1;\n        }\n    }\ncode_r0x00406b44:\n    **(arg_8h + 0x80) = var_4h;\n    return;\n}\n",
        "token_count": 448
    },
    "00406ba0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00406ba0(uint32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    uint32_t in_EDX;\n    \n    do {\n        iVar1 = fcn.00406c20(arg_8h);\n        if (iVar1 != 0) {\n            return iVar1;\n        }\n        if (*(in_ECX + 0xc) <= *(in_ECX + 0x2c)) {\n            *(in_ECX + 0x30) = *(in_ECX + 0xc);\n        }\n        fcn.004078c0();\n    } while (((*(in_ECX + 0x24) < in_EDX) && (*(in_ECX + 0x18) < arg_8h)) && (*(in_ECX + 0x48) < 0x112));\n    if (0x112 < *(in_ECX + 0x48)) {\n        *(in_ECX + 0x48) = 0x112;\n    }\n    return 0;\n}\n",
        "token_count": 234
    },
    "004078c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004078c0(int32_t param_1, int32_t param_2)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = *(param_1 + 0x48);\n    if ((uVar1 != 0) && (uVar1 < 0x112)) {\n        uVar5 = *(param_1 + 0x24);\n        uVar2 = *(param_1 + 0x28);\n        uVar6 = uVar1;\n        if (param_2 - uVar5 < uVar1) {\n            uVar6 = param_2 - uVar5;\n        }\n        uVar3 = *(param_1 + 0x38);\n        iVar4 = *(param_1 + 0x14);\n        if ((*(param_1 + 0x30) == 0) && (*(param_1 + 0xc) - *(param_1 + 0x2c) <= uVar6)) {\n            *(param_1 + 0x30) = *(param_1 + 0xc);\n        }\n        *(param_1 + 0x2c) = *(param_1 + 0x2c) + uVar6;\n        *(param_1 + 0x48) = uVar1 - uVar6;\n        for (; uVar6 != 0; uVar6 = uVar6 - 1) {\n            *(uVar5 + iVar4) = *(((-(uVar5 < uVar3) & uVar2) - uVar3) + uVar5 + iVar4);\n            uVar5 = uVar5 + 1;\n        }\n        *(param_1 + 0x24) = uVar5;\n    }\n    return;\n}\n",
        "token_count": 442
    },
    "00408270": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nint32_t __cdecl\nfcn.00408270(uint arg_8h, uint *arg_ch, uint arg_10h, uint32_t *arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            int32_t *arg_24h, int32_t *arg_28h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint var_80h;\n    uint uStack128;\n    uint uStack124;\n    uint uStack120;\n    uint var_70h;\n    uint var_6ch;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_28h;\n    uint var_10h;\n    uint uStack16;\n    uint uStack12;\n    uint uStack8;\n    \n    uVar1 = *arg_14h;\n    var_58h = *arg_ch;\n    *arg_ch = 0;\n    *arg_14h = 0;\n    if (uVar1 < 5) {\n        return 6;\n    }\n    var_6ch = 0;\n    var_70h = 0;\n    iVar2 = fcn.00408380(&var_10h, arg_18h, arg_1ch);\n    if (iVar2 == 0) {\n        iVar2 = fcn.00407940(&var_80h, &var_10h, arg_28h);\n        if (iVar2 == 0) {\n            *arg_14h = uVar1;\n            var_6ch = arg_8h;\n            var_5ch = 0;\n            var_80h = var_10h;\n            uStack128 = uStack16;\n            uStack124 = uStack12;\n            uStack120 = uStack8;\n            var_34h = 1;\n            var_38h = 0;\n            var_28h = 0;\n            var_54h = 0;\n            var_50h = 0;\n            var_30h = 1;\n            iVar2 = fcn.004079b0(&var_80h, var_58h, arg_10h, arg_14h, arg_20h, arg_24h);\n            if ((iVar2 == 0) && (*arg_24h == 3)) {\n                iVar2 = 6;\n            }\n            *arg_ch = var_5ch;\n            (**(*arg_28h + 0x44))(var_70h);\n        }\n    }\n    return iVar2;\n}\n",
        "token_count": 593
    },
    "00401a78": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00401a78(int32_t *arg_8h, int32_t arg_ch, int32_t arg_10h, uint32_t arg_14h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    uint32_t uVar3;\n    int64_t iVar4;\n    uchar auStack56 [8];\n    ushort uStack48;\n    ushort uStack46;\n    uint uStack44;\n    int16_t *piStack40;\n    int32_t iStack36;\n    int16_t aiStack32 [14];\n    \n    uVar2 = 0xffffffff;\n    if (((arg_14h & 0x10) == 0) && ((*0x41b138 & 1) != 0)) {\n        uVar3 = 0;\n        if ((*0x41b148 | *0x41b14c) == 0) {\n            fcn.004028eb();\n            iVar4 = fcn.00402e64(0x409824);\n            if (iVar4 != 0) {\n                do {\n                    aiStack32[uVar3] = *(uVar3 + 0x40983c);\n                    uVar3 = uVar3 + 1;\n                } while (uVar3 < 0xb);\n                piStack40 = aiStack32;\n                uStack44 = 0;\n                iStack36 = piStack40 >> 0x1f;\n                uStack48 = 0x14;\n                uStack46 = 0x16;\n                iVar1 = fcn.00403980(iVar4, iVar4 >> 0x20, 4, 0, 0, 0, 0, 0, &uStack48, &uStack48 >> 0x1f, auStack56, \n                                     auStack56 >> 0x1f, unaff_EDI, unaff_ESI);\n                if (iVar1 < 0) {\n                    uVar2 = (**0x40911c)();\n                }\n                else {\n                    *0x41b148 = fcn.00402e64(0x409848);\n                }\n            }\n            if (*0x41b148 == 0) goto code_r0x00401c01;\n        }\n        *0x41b14c = *0x41b148 >> 0x20;\n        iVar1 = fcn.00403980(*0x41b148, *0x41b14c, 7, 0, *arg_8h, *arg_8h >> 0x1f, 0, 0, 0, 0, arg_ch, arg_ch >> 0x1f, \n                             arg_10h, arg_10h >> 0x1f);\n        arg_8h[1] = iVar1;\n        if (iVar1 == 0) goto code_r0x00401c01;\n    }\n    else {\n        iVar1 = (**0x4090a4)(*arg_8h);\n        arg_8h[1] = iVar1;\n        if (iVar1 == 0) {\n            uVar2 = (**0x409064)();\n            goto code_r0x00401c01;\n        }\n        iVar1 = (**0x40909c)(iVar1, 30000);\n        if (iVar1 == 0) {\n            (**0x4090b0)(arg_8h[1], &stack0xffffffa0);\n        }\n    }\n    uVar2 = 0;\ncode_r0x00401c01:\n    *0x41b14c = *0x41b148 >> 0x20;\n    return uVar2;\n}\n",
        "token_count": 815
    },
    "00402c98": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00402c98(int32_t arg_8h, uint32_t arg_ch)\n\n{\n    uint uVar1;\n    uchar *puVar2;\n    int32_t iVar3;\n    int32_t unaff_EDI;\n    uint uVar4;\n    uchar *puVar5;\n    \n    uVar4 = 8;\n    uVar1 = (**0x409084)(0, 0x318);\n    puVar2 = (**0x40907c)(uVar1);\n    if (puVar2 != NULL) {\n        puVar5 = puVar2;\n        for (iVar3 = 0x318; iVar3 != 0; iVar3 = iVar3 + -1) {\n            *puVar5 = 0;\n            puVar5 = puVar5 + 1;\n        }\n        *(puVar2 + 8) = unaff_EDI;\n        *(puVar2 + 0xc) = unaff_EDI >> 0x1f;\n        *(puVar2 + 0x10) = arg_8h;\n        *(puVar2 + 0x14) = arg_8h >> 0x1f;\n        if (((arg_ch & 0x10) == 0) && ((*0x41b138 & 1) != 0)) {\n            uVar4 = fcn.0040298d(0);\n        }\n        else {\n            uVar4 = fcn.00402b23(0);\n        }\n        uVar1 = (**0x409084)(0, puVar2);\n        (**0x409080)(uVar1);\n    }\n    return uVar4;\n}\n",
        "token_count": 362
    },
    "004035da": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.004035da(void)\n\n{\n    uint uVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    uint var_24h;\n    \n    (**0x409048)(0);\n    *0x41b13c = fcn.00401738();\n    fcn.00402f29();\n    puVar4 = &var_24h;\n    for (iVar3 = 0x24; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar4 = 0;\n        puVar4 = puVar4 + 1;\n    }\n    uVar1 = (**0x4090b4)(0x4098b0, 0x409a60);\n    pcVar2 = (**0x409024)(uVar1);\n    if (pcVar2 != NULL) {\n        (*pcVar2)(&var_24h);\n        if (var_24h == 9) {\n            *0x41b138 = 1;\n            *0x41b140 = 1;\n        }\n    }\n    return;\n}\n",
        "token_count": 257
    },
    "00403980": {
        "rules": [
            "64-bit execution via heavens gate/41888d14e91b4c9e83f5980fa2a0ad87"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.00403980(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, uint arg_10h)\n\n{\n    code **extraout_ECX;\n    uint32_t uVar1;\n    \n    fcn.004039d5(0x33);\n    uVar1 = extraout_ECX[2] + 1 & 0xfe;\n    do {\n        uVar1 = uVar1 - 1;\n    } while (uVar1 != 0);\n    (**extraout_ECX)();\n    return;\n}\n",
        "token_count": 184
    },
    "null": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong __fastcall\nentry0(uint param_1, uint param_2, int32_t *param_3, uint32_t param_4, int32_t param_5, uint32_t param_6)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    // [00] -r-x section size 32768 named drws1\n    if (((((param_3 != NULL) && (param_5 != 0)) && (0x17 < param_4)) &&\n        ((*param_3 == 0x32335041 && (uVar1 = param_3[1],  0x17 < uVar1)))) &&\n       ((uVar1 <= param_4 && (param_3[2] < param_4 - uVar1 || param_3[2] == param_4 - uVar1)))) {\n        iVar2 = fcn.00401360(uVar1 + param_3, param_3[2]);\n        if ((iVar2 == param_3[3]) && (param_3[4] < param_6 || param_3[4] == param_6)) {\n            iVar2 = fcn.004010a4(uVar1 + param_3, param_3[2], param_5, param_6);\n            if (iVar2 == param_3[4]) {\n                iVar3 = fcn.00401360(param_5, iVar2);\n                if (iVar3 == param_3[5]) goto code_r0x0040107a;\n            }\n        }\n    }\n    iVar2 = -1;\ncode_r0x0040107a:\n    return CONCAT44(param_2, iVar2);\n}\n",
        "token_count": 375
    },
    "00401440": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00401440(void)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint *puVar6;\n    uint var_85ch;\n    uint var_654h;\n    uint var_44ch;\n    uint var_244h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint *var_2ch;\n    uint *var_28h;\n    uint var_20h;\n    uint var_4h;\n    \n    uVar5 = 0;\n    (**0x40906c)(*0x41b144, &var_85ch, 0x104);\n    puVar6 = &var_244h;\n    for (iVar4 = 0x208; iVar4 != 0; iVar4 = iVar4 + -1) {\n        *puVar6 = 0;\n        puVar6 = puVar6 + 1;\n    }\n    puVar6 = &var_654h;\n    for (iVar4 = 0x208; iVar4 != 0; iVar4 = iVar4 + -1) {\n        *puVar6 = 0;\n        puVar6 = puVar6 + 1;\n    }\n    puVar6 = &var_44ch;\n    for (iVar4 = 0x208; iVar4 != 0; iVar4 = iVar4 + -1) {\n        *puVar6 = 0;\n        puVar6 = puVar6 + 1;\n    }\n    uVar3 = (**0x409060)(0x4097c0, &var_654h, 0x208);\n    pcVar1 = *0x4090e8;\n    if ((uVar3 != 0) && (uVar3 < 0x209)) {\n        (**0x4090e8)(&var_244h, 0x4097d0, &var_654h);\n        (*pcVar1)(&var_44ch, 0x4097f8, &var_85ch);\n        puVar6 = &var_3ch;\n        for (iVar4 = 0x3c; iVar4 != 0; iVar4 = iVar4 + -1) {\n            *puVar6 = 0;\n            puVar6 = puVar6 + 1;\n        }\n        var_2ch = &var_244h;\n        var_3ch = 0x3c;\n        var_28h = &var_44ch;\n        var_30h = 0x409818;\n        var_20h = 3;\n        var_38h = 0x40;\n        (**0x40912c)(0, 6);\n        pcVar2 = *0x4090e4;\n        var_34h = (**0x4090e4)();\n        pcVar1 = *0x4090dc;\n        while( true ) {\n            iVar4 = (*pcVar1)(&var_3ch);\n            if (iVar4 != 0) break;\n            iVar4 = (**0x409064)();\n            if (iVar4 != 0x4c7) break;\n            var_34h = (*pcVar2)();\n        }\n        (**0x409130)();\n        uVar5 = 1;\n        (**0x409068)(var_4h);\n    }\n    return uVar5;\n}\n",
        "token_count": 763
    },
    "00401738": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nchar fcn.00401738(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint *puVar3;\n    uint8_t *puVar4;\n    uint32_t *puVar5;\n    char cVar6;\n    uint var_8h;\n    uint var_4h;\n    \n    cVar6 = '\\0';\n    iVar1 = (**0x409008)(0xffffffff, 8, &var_8h);\n    if (iVar1 != 0) {\n        iVar1 = (**0x40900c)(var_8h, 0x19, 0, 0, &var_4h);\n        if (iVar1 == 0) {\n            iVar1 = (**0x409064)();\n            if (iVar1 == 0x7a) {\n                uVar2 = (**0x409084)(0, var_4h);\n                puVar3 = (**0x40907c)(uVar2);\n                if (puVar3 != NULL) {\n                    iVar1 = (**0x40900c)(var_8h, 0x19, puVar3, var_4h, &var_4h);\n                    if (iVar1 != 0) {\n                        puVar4 = (**0x409000)(*puVar3);\n                        if ((puVar4 != NULL) && (*puVar4 != 0)) {\n                            puVar5 = (**0x409004)(*puVar3, *puVar4 - 1);\n                            if (puVar5 != NULL) {\n                                if (*puVar5 < 0x2000) {\n                                    cVar6 = '\\x01';\n                                }\n                                else {\n                                    cVar6 = '\\x03' - (*puVar5 < 0x3000);\n                                }\n                            }\n                        }\n                    }\n                    uVar2 = (**0x409084)(0, puVar3);\n                    (**0x409080)(uVar2);\n                }\n            }\n        }\n        (**0x409068)(var_8h);\n    }\n    return cVar6;\n}\n",
        "token_count": 445
    },
    "00402273": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00402273(int32_t param_1)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = *(param_1 + 0x3c);\n    if (*(iVar1 + 4 + param_1) == -0x799c) {\n        iVar1 = *(iVar1 + 0x88 + param_1);\n    }\n    else {\n        iVar1 = *(iVar1 + 0x78 + param_1);\n    }\n    return iVar1 + param_1;\n}\n",
        "token_count": 115
    },
    "00402292": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00402292(int32_t param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    uint16_t *puVar5;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    iVar3 = fcn.00402273();\n    if (((iVar3 != 0) && (iVar1 = *(iVar3 + 0x1c),  iVar1 != 0)) && (*(iVar3 + 0x20) != 0)) {\n        var_8h = 0;\n        uVar2 = *(iVar3 + 0x18);\n        puVar5 = *(iVar3 + 0x24) + param_1;\n        piVar4 = *(iVar3 + 0x20) + param_1;\n        if (uVar2 != 0) {\n            do {\n                iVar3 = (**0x4090cc)(*piVar4 + param_1, param_2);\n                if (iVar3 == 0) {\n                    return iVar1 + param_1 + *puVar5 * 4;\n                }\n                puVar5 = puVar5 + 1;\n                piVar4 = piVar4 + 1;\n                var_8h = var_8h + 1;\n            } while (var_8h < uVar2);\n        }\n    }\n    return 0;\n}\n",
        "token_count": 346
    },
    "00402318": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00402318(int32_t param_1, uint32_t param_2)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    uint var_8h;\n    uint var_4h;\n    \n    param_1 = *(param_1 + 0x3c) + param_1;\n    iVar1 = *(param_1 + 6);\n    iVar2 = param_1 + 0x18 + *(param_1 + 0x14);\n    while ((param_2 < *(iVar2 + 0xc) ||\n           ((*(param_1 + 0x3c) + -1 + *(iVar2 + 0x10) & ~(*(param_1 + 0x3c) - 1U)) + *(iVar2 + 0xc) <= param_2))) {\n        iVar1 = iVar1 + -1;\n        iVar2 = iVar2 + 0x28;\n        if (iVar1 == 0) {\n            return 0;\n        }\n    }\n    return (*(iVar2 + 0x14) - *(iVar2 + 0xc)) + param_2;\n}\n",
        "token_count": 254
    },
    "0040237f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nuint __fastcall\nfcn.0040237f(uint param_1, int32_t param_2, uint param_3, uint param_4, int32_t param_5, int32_t param_6)\n\n{\n    int32_t iVar1;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    uint *puVar2;\n    uchar *puVar3;\n    bool bVar4;\n    uint in_stack_fffff838;\n    uint in_stack_fffff83c;\n    uint in_stack_fffff840;\n    uint in_stack_fffff844;\n    int32_t iStack1736;\n    int32_t iStack1732;\n    uint auStack744 [46];\n    int32_t iStack560;\n    int32_t iStack24;\n    int32_t iStack20;\n    \n    puVar2 = auStack744;\n    iStack20 = param_2;\n    for (iVar1 = 0x2cc; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0;\n        puVar2 = puVar2 + 1;\n    }\n    auStack744[0] = 0x10001;\n    puVar3 = &stack0xfffff840;\n    for (iVar1 = 0x4d0; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar3 = 0;\n        puVar3 = puVar3 + 1;\n    }\n    iStack24 = 0;\n    do {\n        if (param_2 == 0) {\n            iVar1 = (**0x409108)(param_3, auStack744);\n        }\n        else {\n            iVar1 = fcn.00403980(*0x41b118, *0x41b11c, 2, 0, param_3, param_4, &stack0xfffff840, \n                                 &stack0xfffff840 >> 0x1f, unaff_EDI, unaff_ESI, in_stack_fffff838, in_stack_fffff83c, \n                                 in_stack_fffff840, in_stack_fffff844);\n        }\n        if (-1 < iVar1) {\n            if (iStack20 == 0) {\n                if (iStack560 == param_5) {\n                    bVar4 = param_6 == 0;\ncode_r0x00402439:\n                    if (bVar4) {\n                        return 1;\n                    }\n                }\n            }\n            else if (iStack1736 == param_5) {\n                bVar4 = iStack1732 == param_6;\n                goto code_r0x00402439;\n            }\n        }\n        (**0x40908c)(10);\n        iStack24 = iStack24 + 10;\n        param_2 = iStack20;\n        if (1000 < iStack24) {\n            return 0;\n        }\n    } while( true );\n}\n",
        "token_count": 642
    },
    "0040298d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040298d(uint param_1, uint *param_2)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uchar *puVar3;\n    uint unaff_EDI;\n    uint *puVar4;\n    uint noname_8;\n    uint noname_9;\n    uint noname_10;\n    uint noname_11;\n    uint uVar5;\n    uchar auStack1280 [48];\n    uint uStack1232;\n    uint32_t uStack1160;\n    uint uStack1156;\n    uint *puStack1032;\n    int32_t iStack1028;\n    uchar auStack48 [4];\n    uchar *puStack44;\n    int32_t iStack40;\n    uint *puStack36;\n    uint *puStack32;\n    uint uStack28;\n    uint32_t uStack24;\n    uint *puStack20;\n    \n    puVar3 = auStack1280;\n    puStack36 = param_2;\n    for (iVar2 = 0x4d0; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar3 = 0;\n        puVar3 = puVar3 + 1;\n    }\n    puStack32 = fcn.004028eb();\n    puVar1 = puStack20;\n    uVar5 = 0x40;\n    uStack1232 = 0x100003;\n    puVar3 = 0x4039e6;\n    puVar4 = param_2 + 0x86;\n    for (iVar2 = 0x100; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar4 = *puVar3;\n        puVar3 = puVar3 + 1;\n        puVar4 = puVar4 + 1;\n    }\n    noname_11 = 0x3000;\n    noname_10 = 0x318;\n    noname_9 = 0;\n    noname_8 = *puStack20;\n    uStack24 = (**0x40901c)();\n    if (uStack24 == 0) {\ncode_r0x00402b10:\n        uVar5 = (**0x409064)();\n    }\n    else {\n        puStack44 = auStack1280;\n        iStack40 = puStack44 >> 0x1f;\n        iVar2 = fcn.00403980(*puStack32, puStack32[1], 2, 0, puVar1[1], puVar1[1] >> 0x1f, puStack44, iStack40, noname_8\n                             , noname_9, noname_10, noname_11, uVar5, unaff_EDI);\n        if (-1 < iVar2) {\n            puStack20 = puStack1032;\n            uStack28 = iStack1028;\n            if ((puStack36[4] == puStack36 + 6) && (puStack36[5] == puStack36 + 6 >> 0x1f)) {\n                puStack36[4] = uStack24 + 0x18;\n                puStack36[5] = 0xffffffe7 < uStack24;\n            }\n            *puStack36 = puStack1032;\n            puStack36[1] = iStack1028;\n            iVar2 = (**0x4090b8)(*puVar1, uStack24, puStack36, 0x318, auStack48);\n            if (iVar2 == 0) goto code_r0x00402b10;\n            uStack1160 = uStack24;\n            puStack1032 = uStack24 + 0x218;\n            iStack1028 = puStack1032 >> 0x1f;\n            uStack1156 = 0;\n            iVar2 = fcn.00403980(puStack32[2], puStack32[3], 2, 0, puVar1[1], puVar1[1] >> 0x1f, puStack44, iStack40, \n                                 noname_8, noname_9, noname_10, noname_11, uVar5, unaff_EDI);\n            if (-1 < iVar2) {\n                (**0x4090c0)(puVar1[1]);\n                fcn.0040237f(puVar1[1], puVar1[1] >> 0x1f, puStack20, uStack28);\n                (**0x4090bc)(puVar1[1]);\n                return 0;\n            }\n        }\n        uVar5 = 5;\n    }\n    return uVar5;\n}\n",
        "token_count": 1026
    },
    "00402b23": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00402b23(uint *param_1, int32_t *param_2)\n\n{\n    int32_t *piVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uchar *puVar4;\n    uint *puVar5;\n    int32_t *piVar6;\n    uint var_5b0h;\n    uint var_2e0h;\n    uint32_t var_230h;\n    int32_t var_228h;\n    uint var_10h;\n    int32_t *var_ch;\n    uint *var_8h;\n    uint32_t var_4h;\n    \n    puVar5 = &var_2e0h;\n    var_ch = param_2;\n    var_8h = param_1;\n    for (iVar3 = 0x2cc; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar5 = 0;\n        puVar5 = puVar5 + 1;\n    }\n    puVar5 = &var_5b0h;\n    for (iVar3 = 0x2cc; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar5 = 0;\n        puVar5 = puVar5 + 1;\n    }\n    var_5b0h = 0x10003;\n    iVar3 = (**0x40902c)();\n    puVar5 = var_8h;\n    if (param_1[2] == iVar3) {\n        iVar3 = (*param_2[2])(param_2[4]);\n        if (iVar3 != 0) {\n            return 0;\n        }\n    }\n    else {\n        var_2e0h = 0x10003;\n        var_4h = (**0x40901c)(*var_8h, 0, 0x318, 0x3000, 0x40);\n        if (var_4h != 0) {\n            iVar3 = (**0x409108)(puVar5[1], &var_2e0h);\n            puVar5 = var_8h;\n            piVar1 = var_ch;\n            if (-1 < iVar3) {\n                *param_2 = var_228h;\n                param_2[1] = 0;\n                puVar4 = 0x403a0b;\n                piVar6 = param_2 + 0x86;\n                for (iVar3 = 0x100; iVar3 != 0; iVar3 = iVar3 + -1) {\n                    *piVar6 = *puVar4;\n                    puVar4 = puVar4 + 1;\n                    piVar6 = piVar6 + 1;\n                }\n                var_230h = var_4h;\n                var_228h = var_4h + 0x218;\n                if ((var_ch[4] == var_ch + 6) && (var_ch[5] == var_ch + 6 >> 0x1f)) {\n                    var_ch[4] = var_4h + 0x18;\n                    var_ch[5] = 0xffffffe7 < var_4h;\n                }\n                iVar3 = (**0x4090b8)(*var_8h, var_4h, var_ch, 0x318, &var_10h);\n                if (iVar3 == 0) goto code_r0x00402c87;\n                iVar3 = (**0x409110)(puVar5[1], &var_2e0h);\n                if (-1 < iVar3) {\n                    (**0x409108)(puVar5[1], &var_5b0h);\n                    (**0x4090c0)(puVar5[1]);\n                    fcn.0040237f(puVar5[1], puVar5[1] >> 0x1f, *piVar1, piVar1[1]);\n                    (**0x4090bc)(puVar5[1]);\n                    return 0;\n                }\n            }\n            return 5;\n        }\n    }\ncode_r0x00402c87:\n    uVar2 = (**0x409064)();\n    return uVar2;\n}\n",
        "token_count": 923
    },
    "00402e64": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong __cdecl fcn.00402e64(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint32_t *puVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    uint32_t var_28h;\n    int32_t var_24h;\n    uint32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    iVar4 = 0;\n    iVar6 = 0;\n    var_14h = 0;\n    iVar2 = fcn.00402d26(&var_28h, &var_4h);\n    if ((iVar2 == 0) &&\n       (var_8h = (**0x409020)(0, var_4h, 0x3000, 4),  uVar5 = var_28h,  iVar2 = var_24h,  var_10h = var_8h,  var_8h != 0\n       )) {\n        do {\n            var_20h = uVar5;\n            var_1ch = iVar2;\n            fcn.0040261e(var_8h, 0x1000);\n            iVar1 = var_10h;\n            var_8h = var_8h + 0x1000;\n            var_20h = uVar5 + 0x1000;\n            var_1ch = iVar2 + (0xffffefff < uVar5);\n            var_4h = var_4h + -0x1000;\n            uVar5 = var_20h;\n            iVar2 = var_1ch;\n        } while (var_4h != 0);\n        puVar3 = fcn.00402292(0x1000);\n        iVar4 = var_14h;\n        iVar6 = var_14h;\n        if (puVar3 != NULL) {\n            iVar6 = *puVar3 + var_28h;\n            iVar4 = var_24h + CARRY4(*puVar3, var_28h);\n        }\n        (**0x409044)(iVar1, 0, 0x8000);\n    }\n    return CONCAT44(iVar4, iVar6);\n}\n",
        "token_count": 534
    },
    "00402f29": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00402f29(uint param_1, int32_t *param_2)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint uVar5;\n    int32_t iVar6;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar2 = (**0x409084)(0, 0x208);\n    iVar3 = (**0x40907c)(uVar2);\n    if (iVar3 != 0) {\n        iVar6 = 0x104;\n        do {\n            iVar4 = (**0x409058)(param_1, iVar3, iVar6);\n            pcVar1 = *0x409084;\n            if ((iVar4 == 0) || (iVar6 != iVar4)) break;\n            iVar6 = iVar6 + 0x104;\n            uVar2 = (**0x409084)(0, iVar3);\n            (**0x409080)(uVar2);\n            uVar2 = (*pcVar1)(0, iVar6 * 2);\n            iVar3 = (**0x40907c)(uVar2);\n        } while (iVar3 != 0);\n        if (iVar3 != 0) {\n            if (iVar4 != 0) {\n                *param_2 = iVar3;\n                return 0;\n            }\n            uVar2 = (**0x409064)();\n            uVar5 = (**0x409084)(0, iVar3);\n            (**0x409080)(uVar5);\n            return uVar2;\n        }\n    }\n    return 8;\n}\n",
        "token_count": 369
    },
    "00402fda": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t fcn.00402fda(void)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    uint32_t uVar8;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar7 = *0x41b144;\n    uVar8 = 8;\n    iVar3 = (**0x4090c8)(*0x41b144);\n    pcVar1 = *0x409084;\n    if (iVar7 != 0) {\n        uVar4 = (**0x409084)(0, iVar3 * 2 + 0x1a);\n        iVar5 = (**0x40907c)(uVar4);\n        if (iVar5 != 0) {\n            uVar4 = (*pcVar1)(0, iVar3 * 2 + 6);\n            iVar3 = (**0x40907c)(uVar4);\n            if (iVar3 != 0) {\n                (**0x40904c)(iVar5, iVar7);\n                iVar6 = (**0x4090fc)(iVar5, 0x5c);\n                uVar4 = (**0x4090a0)();\n                pcVar2 = *0x4090e8;\n                (**0x4090e8)(iVar6 + 2, 0x409998, uVar4);\n                (*pcVar2)(iVar3, 0x4099a8, iVar7);\n                uVar4 = (*pcVar1)(0, 0x104);\n                iVar7 = (**0x40907c)(uVar4);\n                if (iVar7 != 0) {\n                    uVar4 = (**0x4090a0)();\n                    uVar4 = (**0x4090ec)(iVar7, 0x4099b8, uVar4, uVar4);\n                    uVar8 = fcn.004015bd(uVar4);\n                    if (uVar8 == 0) {\n                        uVar8 = (**0x4090d8)(0, 0x409980, iVar5, iVar3, 0, 0);\n                        uVar8 = ~-(0x20 < uVar8) & uVar8;\n                    }\n                    uVar4 = (*pcVar1)(0, iVar7);\n                    (**0x409080)(uVar4);\n                }\n                uVar4 = (*pcVar1)(0, iVar3);\n                (**0x409080)(uVar4);\n            }\n            uVar4 = (*pcVar1)(0, iVar5);\n            (**0x409080)(uVar4);\n        }\n    }\n    return uVar8;\n}\n",
        "token_count": 609
    },
    "00403647": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nuint fcn.00403647(void)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    code *pcVar3;\n    uint uVar4;\n    int32_t *piVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    int32_t *piVar8;\n    uchar *puVar9;\n    int32_t *piVar10;\n    uint var_8h;\n    uint var_4h;\n    \n    puVar9 = 0x41b0c8;\n    for (iVar7 = 0x24; pcVar3 = *0x409084,  iVar7 != 0; iVar7 = iVar7 + -1) {\n        *puVar9 = 0;\n        puVar9 = puVar9 + 1;\n    }\n    *0x41b0d8 = 0x7000;\n    uVar4 = (**0x409084)(0, 0x7000);\n    pcVar2 = *0x40907c;\n    *0x41b0c8 = (**0x40907c)(uVar4);\n    *0x41b0cc = *0x41b0c8 >> 0x1f;\n    iVar7 = fcn.00401080(0x416d38);\n    uVar4 = (*pcVar3)(0, iVar7 * 2);\n    piVar5 = (*pcVar2)(uVar4);\n    if (piVar5 == NULL) {\n        (**0x4090f4)(0x409a74);\n        uVar4 = 0;\n    }\n    else {\n        iVar6 = entry0(0x416d38, 0x41e7, piVar5, iVar7 * 2);\n        if (iVar6 == iVar7) {\n            iVar7 = *piVar5;\n            piVar8 = piVar5;\n            iVar1 = iVar6;\n            while (iVar7 != 0x22222222) {\n                if (iVar1 == 0) goto code_r0x004036d3;\n                piVar8 = piVar8 + 1;\n                iVar1 = iVar1 + -1;\n                iVar7 = *piVar8;\n            }\n            piVar10 = piVar8;\n            for (iVar7 = 0x184; iVar7 != 0; iVar7 = iVar7 + -1) {\n                *piVar10 = 0;\n                piVar10 = piVar10 + 1;\n            }\n            puVar9 = 0x41af20;\n            for (iVar7 = 0x184; iVar7 != 0; iVar7 = iVar7 + -1) {\n                *piVar8 = *puVar9;\n                puVar9 = puVar9 + 1;\n                piVar8 = piVar8 + 1;\n            }\n            *0x41b0cc = piVar5 >> 0x1f;\n            *0x41b0c8 = piVar5;\n            *0x41b0d8 = iVar6;\n            fcn.0040164a(0x41b0e8);\n            uVar4 = 1;\n        }\n        else {\ncode_r0x004036d3:\n            uVar4 = 0;\n        }\n    }\n    return uVar4;\n}\n",
        "token_count": 725
    },
    "00403cc0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00403cc0(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint var_88h;\n    uint var_84h;\n    uint var_80h;\n    code *var_34h;\n    code *var_30h;\n    uint var_8h;\n    \n    iVar1 = fcn.00403a20(&var_88h);\n    if (iVar1 == 0) {\n        return 0xffffffff;\n    }\n    var_88h = arg_8h;\n    var_84h = arg_ch;\n    var_80h = arg_10h;\n    uVar2 = (*var_34h)();\n    var_8h = (*var_30h)(uVar2, 8, 0x1220);\n    uVar2 = fcn.00404210(&var_88h);\n    return uVar2;\n}\n",
        "token_count": 212
    },
    "00403f30": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00403f30(int32_t arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00403fb0(arg_8h);\n    fcn.00403f60(iVar1 + arg_8h, arg_ch);\n    return arg_8h;\n}\n",
        "token_count": 78
    },
    "00403f60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00403f60(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t var_4h;\n    \n    for (var_4h = 0; *(arg_8h + var_4h) = *(arg_ch + var_4h),  *(arg_8h + var_4h) != '\\0'; var_4h = var_4h + 1) {\n    }\n    return;\n}\n",
        "token_count": 104
    },
    "00403fb0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00403fb0(char *arg_8h)\n\n{\n    char *var_4h;\n    \n    for (var_4h = arg_8h; *var_4h != '\\0'; var_4h = var_4h + 1) {\n    }\n    return var_4h - arg_8h;\n}\n",
        "token_count": 81
    },
    "00404120": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00404120(int32_t arg_8h)\n\n{\n    int32_t var_4h;\n    \n    if ((arg_8h < 0x41) || (0x5a < arg_8h)) {\n        var_4h = arg_8h;\n    }\n    else {\n        var_4h = arg_8h + 0x20;\n    }\n    return var_4h;\n}\n",
        "token_count": 99
    },
    "00406630": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406630(int32_t arg_8h)\n\n{\n    *(*(arg_8h + 0x80) + 0x254) = 0x2e0;\n    *(*(arg_8h + 0x80) + 600) = 0x348;\n    *(*(arg_8h + 0x80) + 0x250) = *(*(arg_8h + 0x80) + 0x254) + 8;\n    *(*(arg_8h + 0x80) + 0x25c) = 0x3a0;\n    return;\n}\n",
        "token_count": 143
    },
    "00406680": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406680(int32_t arg_8h)\n\n{\n    int32_t arg_8h_00;\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    \n    arg_8h_00 = (**(arg_8h + 0x40))(0x40, 0xb18f8);\n    if (arg_8h_00 != 0) {\n        iVar3 = 0;\n        fcn.00403e30(arg_8h_00, 0, 0xb18f8);\n        fcn.00403de0(arg_8h_00, *0x41b0a8 + 0x568, 0x9bf67);\n        iVar4 = 0;\n        do {\n            iVar1 = (**(arg_8h + 0x70))(*(iVar4 + arg_8h_00));\n            iVar4 = iVar4 + 4;\n            iVar3 = iVar3 + iVar1;\n        } while (iVar4 < 0xb18f8);\n        uVar2 = (**(arg_8h + 0x70))(iVar3);\n        *(*0x41b0a8 + 0x10) = uVar2;\n        (**(arg_8h + 0x44))(arg_8h_00);\n    }\n    return;\n}\n",
        "token_count": 308
    },
    "00406b60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.00406b60(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h)\n\n{\n    uint var_4h;\n    \n    fcn.00408270(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch, 0, &var_4h, &arg_20h);\n    return;\n}\n",
        "token_count": 114
    },
    "00407940": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00407940(int32_t arg_8h, uint *arg_ch, int32_t *arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar2 = (0x300 << (arg_ch[1] + *arg_ch & 0x1fU)) + 0x736;\n    if ((*(arg_8h + 0x10) == 0) || (iVar2 != *(arg_8h + 0x54))) {\n        (**(*arg_10h + 0x44))(*(arg_8h + 0x10));\n        *(arg_8h + 0x10) = 0;\n        iVar1 = (**(*arg_10h + 0x40))(0x40, iVar2 * 2);\n        *(arg_8h + 0x10) = iVar1;\n        *(arg_8h + 0x54) = iVar2;\n        if (iVar1 == 0) {\n            return 2;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 239
    }
}