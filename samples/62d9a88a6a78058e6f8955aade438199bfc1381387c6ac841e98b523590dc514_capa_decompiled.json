{
    "null": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "",
        "token_count": 0
    },
    "004089be": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004089be(int32_t arg_8h, int32_t arg_ch, uint32_t arg_10h)\n\n{\n    int32_t extraout_ECX;\n    uint32_t uVar1;\n    \n    if ((arg_10h != 0) && (arg_ch == 0)) {\n        arg_10h = fcn.00405a76();\n        arg_ch = extraout_ECX;\n    }\n    if ((~*(arg_8h + 0x18) & 1) == 0) {\n        for (; arg_10h != 0; arg_10h = arg_10h - uVar1) {\n            uVar1 = 0x1fffffff;\n            if (arg_10h < 0x1fffffff) {\n                uVar1 = arg_10h;\n            }\n            fcn.004087b2();\n        }\n    }\n    else {\n        for (; arg_10h != 0; arg_10h = arg_10h - uVar1) {\n            uVar1 = 0x1fffffff;\n            if (arg_10h < 0x1fffffff) {\n                uVar1 = arg_10h;\n            }\n            fcn.004141fa(arg_ch, uVar1 * 4);\n            arg_ch = arg_ch + uVar1 * 4;\n        }\n    }\n    return;\n}\n",
        "token_count": 303
    },
    "0040c8b9": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.0040c8b9(int32_t *param_1, uint8_t param_2)\n\n{\n    bool bVar1;\n    bool bVar2;\n    code *pcVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    int32_t unaff_EBX;\n    uint8_t unaff_retaddr;\n    \n    bVar1 = true;\n    bVar2 = false;\n    if (((param_2 & 4) == 0) || (uVar4 = fcn.0040fb17(),  (uVar4 & 0x10000000) != 0)) {\n        bVar1 = false;\n    }\n    iVar5 = (*_sym.imp.USER32.dll_GetParent)(param_1[8]);\n    param_1[0xf] = param_1[0xf] | 0x18;\n    iVar6 = fcn.004074f6();\n    pcVar3 = _sym.imp.USER32.dll_UpdateWindow;\ncode_r0x0040c978:\n    while ((!bVar2 || (iVar7 = (*_sym.imp.USER32.dll_PeekMessageA)(iVar6, 0, 0, 0, 0),  iVar7 != 0))) {\n        do {\n            iVar7 = fcn.004078ee();\n            if (iVar7 == 0) {\n                fcn.004065c4(0);\n                return -1;\n            }\n            if ((bVar1) && ((*(iVar6 + 4) == 0x118 || (*(iVar6 + 4) == 0x104)))) {\n                fcn.0040fc39(1);\n                (*pcVar3)(param_1[8]);\n                bVar1 = false;\n            }\n            iVar7 = (**(*param_1 + 0x80))();\n            if (iVar7 == 0) {\n                param_1[0xf] = param_1[0xf] & 0xffffffe7;\n                return param_1[0x11];\n            }\n            iVar7 = fcn.00407808(iVar6);\n            if (iVar7 != 0) {\n                bVar2 = true;\n                unaff_EBX = 0;\n            }\n            iVar7 = (*_sym.imp.USER32.dll_PeekMessageA)(iVar6, 0, 0, 0, 0);\n        } while (iVar7 != 0);\n    }\n    if (bVar1) {\n        fcn.0040fc39(1);\n        (*pcVar3)(param_1[8]);\n        bVar1 = false;\n    }\n    if ((((unaff_retaddr & 1) == 0) && (iVar5 != 0)) && (unaff_EBX == 0)) {\n        (*_sym.imp.USER32.dll_SendMessageA)(iVar5, 0x121, 0, param_1[8]);\n    }\n    if ((unaff_retaddr & 2) == 0) goto code_r0x0040c959;\n    goto code_r0x0040c974;\ncode_r0x0040c959:\n    iVar7 = (*_sym.imp.USER32.dll_SendMessageA)(param_1[8], 0x36a, 0, unaff_EBX);\n    unaff_EBX = unaff_EBX + 1;\n    if (iVar7 == 0) {\ncode_r0x0040c974:\n        bVar2 = false;\n    }\n    goto code_r0x0040c978;\n}\n",
        "token_count": 788
    },
    "0040f675": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nbool __cdecl fcn.0040f675(uint32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    bool bVar4;\n    uint32_t var_34h;\n    uint var_30h;\n    uint var_24h;\n    uint var_1ch;\n    uint var_18h;\n    char *var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = fcn.00409b0a();\n    arg_8h = arg_8h & ~*(var_4h + 0x18);\n    if (arg_8h == 0) {\n        bVar4 = true;\n    }\n    else {\n        uVar3 = 0;\n        fcn.004215c0(&var_34h, 0, 0x28);\n        var_30h = _sym.imp.USER32.dll_DefWindowProcA;\n        iVar1 = fcn.00409b0a();\n        var_24h = *(iVar1 + 8);\n        var_1ch = *0x4637a0;\n        var_ch = 8;\n        if ((arg_8h & 1) != 0) {\n            var_34h = 0xb;\n            var_10h = \"AfxWnd80s\";\n            iVar1 = fcn.0040f491(&var_34h);\n            if (iVar1 != 0) {\n                uVar3 = 1;\n            }\n        }\n        if ((arg_8h & 0x20) != 0) {\n            var_34h = var_34h | 0x8b;\n            var_10h = \"AfxOleControl80s\";\n            iVar1 = fcn.0040f491(&var_34h);\n            if (iVar1 != 0) {\n                uVar3 = uVar3 | 0x20;\n            }\n        }\n        if ((arg_8h & 2) != 0) {\n            var_34h = 0;\n            var_10h = \"AfxControlBar80s\";\n            var_18h = 0x10;\n            iVar1 = fcn.0040f491(&var_34h);\n            if (iVar1 != 0) {\n                uVar3 = uVar3 | 2;\n            }\n        }\n        if ((arg_8h & 4) != 0) {\n            var_34h = 8;\n            var_18h = 0;\n            iVar1 = fcn.0040f634(&var_34h, \"AfxMDIFrame80s\", 0x7a01);\n            if (iVar1 != 0) {\n                uVar3 = uVar3 | 4;\n            }\n        }\n        if ((arg_8h & 8) != 0) {\n            var_34h = 0xb;\n            var_18h = 6;\n            iVar1 = fcn.0040f634(&var_34h, \"AfxFrameOrView80s\", 0x7a02);\n            if (iVar1 != 0) {\n                uVar3 = uVar3 | 8;\n            }\n        }\n        if ((arg_8h & 0x10) != 0) {\n            var_8h = 0xff;\n            uVar2 = fcn.0040d24e(&var_ch, 0x3fc0);\n            uVar3 = uVar3 | uVar2;\n            arg_8h = arg_8h & 0xffffc03f;\n        }\n        if ((arg_8h & 0x40) != 0) {\n            var_8h = 0x10;\n            uVar2 = fcn.0040d24e(&var_ch, 0x40);\n            uVar3 = uVar3 | uVar2;\n        }\n        if ((arg_8h & 0x80) != 0) {\n            var_8h = 2;\n            uVar2 = fcn.0040d24e(&var_ch, 0x80);\n            uVar3 = uVar3 | uVar2;\n        }\n        if ((arg_8h & 0x100) != 0) {\n            var_8h = 8;\n            uVar2 = fcn.0040d24e(&var_ch, 0x100);\n            uVar3 = uVar3 | uVar2;\n        }\n        if ((arg_8h & 0x200) != 0) {\n            var_8h = 0x20;\n            uVar2 = fcn.0040d24e(&var_ch, 0x200);\n            uVar3 = uVar3 | uVar2;\n        }\n        if ((arg_8h & 0x400) != 0) {\n            var_8h = 1;\n            uVar2 = fcn.0040d24e(&var_ch, 0x400);\n            uVar3 = uVar3 | uVar2;\n        }\n        if ((arg_8h & 0x800) != 0) {\n            var_8h = 0x40;\n            uVar2 = fcn.0040d24e(&var_ch, 0x800);\n            uVar3 = uVar3 | uVar2;\n        }\n        if ((arg_8h & 0x1000) != 0) {\n            var_8h = 4;\n            uVar2 = fcn.0040d24e(&var_ch, 0x1000);\n            uVar3 = uVar3 | uVar2;\n        }\n        if ((arg_8h & 0x2000) != 0) {\n            var_8h = 0x80;\n            uVar2 = fcn.0040d24e(&var_ch, 0x2000);\n            uVar3 = uVar3 | uVar2;\n        }\n        if ((arg_8h & 0x4000) != 0) {\n            var_8h = 0x800;\n            uVar2 = fcn.0040d24e(&var_ch, 0x4000);\n            uVar3 = uVar3 | uVar2;\n        }\n        if ((arg_8h & 0x8000) != 0) {\n            var_8h = 0x400;\n            uVar2 = fcn.0040d24e(&var_ch, 0x8000);\n            uVar3 = uVar3 | uVar2;\n        }\n        if ((arg_8h & 0x10000) != 0) {\n            var_8h = 0x200;\n            uVar2 = fcn.0040d24e(&var_ch, 0x10000);\n            uVar3 = uVar3 | uVar2;\n        }\n        if ((arg_8h & 0x20000) != 0) {\n            var_8h = 0x100;\n            uVar2 = fcn.0040d24e(&var_ch, 0x20000);\n            uVar3 = uVar3 | uVar2;\n        }\n        if ((arg_8h & 0x40000) != 0) {\n            var_8h = 0x8000;\n            uVar2 = fcn.0040d24e(&var_ch, 0x40000);\n            uVar3 = uVar3 | uVar2;\n        }\n        *(var_4h + 0x18) = *(var_4h + 0x18) | uVar3;\n        if ((*(var_4h + 0x18) & 0x3fc0) == 0x3fc0) {\n            *(var_4h + 0x18) = *(var_4h + 0x18) | 0x10;\n            uVar3 = uVar3 | 0x10;\n        }\n        bVar4 = (uVar3 & arg_8h) == arg_8h;\n    }\n    return bVar4;\n}\n",
        "token_count": 1811
    },
    "004101f1": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004101f1(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint *puVar3;\n    uint *puVar4;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    fcn.0040fdc1();\n    puVar4 = &var_8h;\n    fcn.0040fdc1(puVar4);\n    do {\n        iVar1 = var_4h;\n        if (var_4h == 0) {\n            puVar3 = &var_10h;\ncode_r0x00410246:\n            fcn.0040fdc1(puVar3, puVar4);\n            return arg_8h;\n        }\n        uVar2 = fcn.0040fd25();\n        if ((uVar2 >> 0x11 & 1) != 0) {\ncode_r0x00410243:\n            puVar3 = &var_8h;\n            goto code_r0x00410246;\n        }\n        if (var_10h != var_8h) {\n            fcn.00405a76();\n            goto code_r0x00410243;\n        }\n        puVar4 = &var_4h;\n        var_ch = iVar1;\n        fcn.0040fe2e();\n    } while( true );\n}\n",
        "token_count": 318
    },
    "00410257": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00410257(int32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    uint var_8h;\n    int32_t var_4h;\n    \n    fcn.0040fdc1();\n    fcn.004101d0(&var_8h, 1);\n    while( true ) {\n        if (var_4h == 0) {\n            return arg_8h;\n        }\n        uVar1 = fcn.0040fd25();\n        if ((uVar1 >> 0x11 & 1) != 0) break;\n        fcn.0040fdfb();\n        if (*(arg_8h + 4) != 0) {\n            fcn.0040fdfb();\n        }\n    }\n    return arg_8h;\n}\n",
        "token_count": 179
    },
    "0041036d": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041036d(uint param_1)\n\n{\n    bool bVar1;\n    char cVar2;\n    uint32_t uVar3;\n    uint uVar4;\n    int32_t iVar5;\n    uint var_10h;\n    uint var_8h;\n    int32_t var_4h;\n    \n    fcn.0040fdc1(param_1);\n    bVar1 = false;\n    do {\n        if (((var_4h == 0) || (fcn.0040fdfb(&var_4h),  iVar5 = var_4h,  var_4h == 0)) ||\n           (uVar3 = fcn.0040fd25(),  (uVar3 >> 0x11 & 1) != 0)) {\n            uVar4 = fcn.004101f1(&var_10h);\n            fcn.0040fddd(uVar4);\n            if (var_4h == 0) {\n                return;\n            }\n            if (bVar1) {\n                return;\n            }\n            bVar1 = true;\n            iVar5 = var_4h;\n        }\n        cVar2 = fcn.0040fd3e(*(iVar5 + 8));\n        if (cVar2 == '\\0') {\n            fcn.0040fddd(&var_8h);\n            return;\n        }\n    } while( true );\n}\n",
        "token_count": 308
    },
    "004103e8": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004103e8(uint param_1)\n\n{\n    bool bVar1;\n    char cVar2;\n    uint32_t uVar3;\n    uint uVar4;\n    uint var_10h;\n    uint var_8h;\n    int32_t var_4h;\n    \n    fcn.0040fdc1(param_1);\n    bVar1 = false;\n    do {\n        if ((var_4h == 0) || (uVar3 = fcn.0040fd25(),  (uVar3 >> 0x11 & 1) != 0)) {\n            uVar4 = fcn.00410257(&var_10h);\n            fcn.0040fddd(uVar4);\n            if (var_4h == 0) {\n                return;\n            }\n            if (bVar1) {\n                return;\n            }\n            bVar1 = true;\n        }\n        else {\n            fcn.0040fe2e(&var_4h);\n        }\n        if ((var_4h != 0) && (cVar2 = fcn.0040fd3e(*(var_4h + 8)),  cVar2 == '\\0')) {\n            fcn.0040fddd(&var_8h);\n            return;\n        }\n    } while( true );\n}\n",
        "token_count": 290
    },
    "00411c6d": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00411c6d(int32_t param_1)\n\n{\n    uint32_t *puVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t iVar5;\n    uint8_t *puVar6;\n    int32_t iVar7;\n    int32_t iStack44;\n    int32_t iStack40;\n    int32_t iStack36;\n    int32_t iStack32;\n    int32_t iStack28;\n    int32_t iStack24;\n    \n    iStack24 = param_1 + 0x1c;\n    iStack28 = 0x411c82;\n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)();\n    iVar3 = *(param_1 + 4);\n    iVar7 = *(param_1 + 8);\n    if ((iVar3 <= iVar7) || ((*(*(param_1 + 0x10) + iVar7 * 8) & 1) != 0)) {\n        iVar7 = 1;\n        if (1 < iVar3) {\n            puVar6 = *(param_1 + 0x10);\n            do {\n                puVar6 = puVar6 + 8;\n                if ((*puVar6 & 1) == 0) break;\n                iVar7 = iVar7 + 1;\n            } while (iVar7 < iVar3);\n            if (iVar7 < iVar3) goto code_r0x00411d51;\n        }\n        iVar3 = iVar3 + 0x20;\n        iStack28 = *(param_1 + 0x10);\n        if (iStack28 == 0) {\n            iStack28 = 8;\n            iStack36 = 0x411ccd;\n            iStack32 = iVar3;\n            iStack28 = fcn.00401a90();\n            iStack32 = 2;\n            iStack36 = 0x411cd8;\n            iStack36 = (*_sym.imp.KERNEL32.dll_GlobalAlloc)();\n        }\n        else {\n            iStack32 = 0x411ce1;\n            uVar4 = (*_sym.imp.KERNEL32.dll_GlobalHandle)();\n            iStack36 = 0x411cea;\n            iStack32 = uVar4;\n            (*_sym.imp.KERNEL32.dll_GlobalUnlock)();\n            iStack36 = 0x2002;\n            iStack40 = 8;\n            iStack44 = iVar3;\n            iStack40 = fcn.00401a90();\n            iStack44 = uVar4;\n            iStack36 = (*_sym.imp.KERNEL32.dll_GlobalReAlloc)();\n        }\n        if (iStack36 == 0) {\n            iStack36 = *(param_1 + 0x10);\n            if (iStack36 != 0) {\n                iStack40 = 0x411d13;\n                iStack40 = (*_sym.imp.KERNEL32.dll_GlobalHandle)();\n                iStack44 = 0x411d1a;\n                (*_sym.imp.KERNEL32.dll_GlobalLock)();\n            }\n            iStack40 = 0x411d24;\n            (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)();\n            iStack44 = 0x45f338;\n            iStack40 = iVar3;\n            fcn.00421cb9(&stack0xffffffd4, 0x45950c);\n            pcVar2 = swi(3);\n            iVar3 = (*pcVar2)();\n            return iVar3;\n        }\n        iStack40 = 0x411d30;\n        iVar5 = (*_sym.imp.KERNEL32.dll_GlobalLock)();\n        iStack28 = (iVar3 - *(param_1 + 4)) * 8;\n        iStack36 = iVar5 + *(param_1 + 4) * 8;\n        iStack32 = 0;\n        iStack40 = 0x411d48;\n        fcn.004215c0();\n        *(param_1 + 4) = iVar3;\n        *(param_1 + 0x10) = iVar5;\n    }\ncode_r0x00411d51:\n    if (*(param_1 + 0xc) <= iVar7) {\n        *(param_1 + 0xc) = iVar7 + 1;\n    }\n    puVar1 = *(param_1 + 0x10) + iVar7 * 8;\n    *puVar1 = *puVar1 | 1;\n    *(param_1 + 8) = iVar7 + 1;\n    iStack32 = 0x411d75;\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)();\n    return iVar7;\n}\n",
        "token_count": 1012
    },
    "00413d9e": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00413d9e(int32_t arg_8h, uint32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    if ((arg_ch == 0) || (arg_8h == 0)) {\n        iVar1 = 0;\n    }\n    else {\n        if ((*(in_ECX + 0x18) & 1) == 0) {\n            fcn.00413cfa(4, *(in_ECX + 0x14));\n        }\n        uVar3 = *(in_ECX + 0x2c) - *(in_ECX + 0x28);\n        if (arg_ch < uVar3) {\n            uVar3 = arg_ch;\n        }\n        fcn.00405c0f(arg_8h, arg_ch, *(in_ECX + 0x28), uVar3);\n        *(in_ECX + 0x28) = *(in_ECX + 0x28) + uVar3;\n        arg_8h = arg_8h + uVar3;\n        uVar3 = arg_ch - uVar3;\n        if (uVar3 != 0) {\n            iVar1 = uVar3 - uVar3 % *(in_ECX + 0x20);\n            var_8h = 0;\n            var_4h = iVar1;\n            do {\n                iVar2 = (**(**(in_ECX + 0x24) + 0x34))(arg_8h, var_4h);\n                arg_8h = arg_8h + iVar2;\n                var_8h = var_8h + iVar2;\n                var_4h = var_4h - iVar2;\n                if (iVar2 == 0) break;\n            } while (var_4h != 0);\n            uVar3 = uVar3 - var_8h;\n            if ((uVar3 != 0) && (var_8h == iVar1)) {\n                uVar4 = 0;\n                if (*(in_ECX + 8) == 0) {\n                    if ((*(in_ECX + 0xc) != 0) || (var_4h = *(in_ECX + 0x20),  *(in_ECX + 0x20) < uVar3)) {\n                        var_4h = uVar3;\n                    }\n                    var_8h = *(in_ECX + 0x30);\n                    do {\n                        iVar1 = (**(**(in_ECX + 0x24) + 0x34))(var_8h, var_4h);\n                        var_8h = var_8h + iVar1;\n                        var_4h = var_4h - iVar1;\n                        uVar4 = uVar4 + iVar1;\n                        if ((iVar1 == 0) || (var_4h == 0)) break;\n                    } while (uVar4 < uVar3);\n                    iVar1 = *(in_ECX + 0x30);\n                    *(in_ECX + 0x2c) = iVar1 + uVar4;\n                }\n                else {\n                    (**(**(in_ECX + 0x24) + 0x50))(0, *(in_ECX + 0x20), in_ECX + 0x30, in_ECX + 0x2c);\n                    iVar1 = *(in_ECX + 0x30);\n                }\n                uVar4 = *(in_ECX + 0x2c) - iVar1;\n                *(in_ECX + 0x28) = iVar1;\n                if (uVar3 < uVar4) {\n                    uVar4 = uVar3;\n                }\n                fcn.00405c0f(arg_8h, uVar3, iVar1, uVar4);\n                *(in_ECX + 0x28) = *(in_ECX + 0x28) + uVar4;\n                uVar3 = uVar3 - uVar4;\n            }\n        }\n        iVar1 = arg_ch - uVar3;\n    }\n    return iVar1;\n}\n",
        "token_count": 942
    },
    "00413ecd": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00413ecd(int32_t param_1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar3 = *(param_1 + 0x28);\n    if ((*(param_1 + 0x18) & 1) == 0) {\n        piVar1 = param_1 + 0x30;\n        iVar2 = *piVar1;\n        if (*(param_1 + 8) == 0) {\n            if (iVar3 != iVar2) {\n                (**(**(param_1 + 0x24) + 0x38))(iVar2, iVar3 - iVar2);\n            }\n        }\n        else {\n            if (iVar3 != iVar2) {\n                (**(**(param_1 + 0x24) + 0x50))(2, iVar3 - iVar2, 0, 0);\n            }\n            (**(**(param_1 + 0x24) + 0x50))(1, *(param_1 + 0x20), piVar1, param_1 + 0x2c);\n        }\n        iVar3 = *piVar1;\n    }\n    else {\n        if (*(param_1 + 0x2c) != iVar3) {\n            iVar3 = iVar3 - *(param_1 + 0x2c);\n            (**(**(param_1 + 0x24) + 0x28))(iVar3, iVar3 >> 0x1f, 1);\n        }\n        iVar3 = *(param_1 + 0x2c);\n    }\n    *(param_1 + 0x28) = iVar3;\n    return;\n}\n",
        "token_count": 375
    },
    "00413f44": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00413f44(int32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t in_ECX;\n    int32_t iVar6;\n    int32_t iVar7;\n    uint arg_8h_00;\n    int32_t in_stack_ffffffe4;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    iVar6 = in_ECX;\n    if ((*(in_ECX + 0x18) & 1) != 0) goto code_r0x00413f5e;\n    arg_8h_00 = 4;\n    in_stack_ffffffe4 = *(in_ECX + 0x14);\n    do {\n        fcn.00413cfa(arg_8h_00, in_stack_ffffffe4);\n        iVar6 = in_ECX;\ncode_r0x00413f5e:\n        in_ECX = in_stack_ffffffe4;\n        uVar2 = *(iVar6 + 0x28);\n        piVar1 = iVar6 + 0x2c;\n        var_4h = *piVar1 - uVar2;\n        uVar3 = arg_8h + var_4h;\n        if (*(iVar6 + 8) == 0) {\n            uVar4 = *(iVar6 + 0x30);\n            if (uVar4 < uVar2) {\n                if (0 < var_4h) {\n                    fcn.00413d7f(uVar4, *piVar1 - uVar4, uVar2, var_4h);\n                    uVar4 = *(iVar6 + 0x30);\n                    *(iVar6 + 0x28) = uVar4;\n                    *piVar1 = uVar4 + var_4h;\n                }\n                if (*(iVar6 + 0xc) == 0) {\n                    arg_8h = *(iVar6 + 0x20);\n                }\n                arg_8h = arg_8h - var_4h;\n                iVar7 = var_4h + uVar4;\n                do {\n                    iVar5 = (**(**(iVar6 + 0x24) + 0x34))(iVar7, arg_8h);\n                    var_4h = var_4h + iVar5;\n                    arg_8h = arg_8h - iVar5;\n                    iVar7 = iVar7 + iVar5;\n                    if ((iVar5 == 0) || (arg_8h == 0)) break;\n                } while (var_4h < uVar3);\n                *(iVar6 + 0x28) = *(iVar6 + 0x30);\n                *piVar1 = *(iVar6 + 0x30) + var_4h;\n            }\n        }\n        else {\n            if (var_4h != 0) {\n                (**(**(iVar6 + 0x24) + 0x28))(-var_4h, -var_4h >> 0x1f, 1);\n            }\n            (**(**(iVar6 + 0x24) + 0x50))(0, *(iVar6 + 0x20), iVar6 + 0x30, piVar1);\n            *(iVar6 + 0x28) = *(iVar6 + 0x30);\n        }\n        if (uVar3 <= *piVar1 - *(iVar6 + 0x28)) {\n            return;\n        }\n        arg_8h_00 = 3;\n        in_stack_ffffffe4 = in_ECX;\n    } while( true );\n}\n",
        "token_count": 815
    },
    "00414031": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00414031(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    ushort unaff_SI;\n    \n    if ((~*(param_1 + 0x18) & 1) == 0) {\n        fcn.00413cfa(2, *(param_1 + 0x14));\n    }\n    uVar1 = *(param_1 + 0x28) + 2;\n    if (*(param_1 + 0x2c) <= uVar1 && uVar1 != *(param_1 + 0x2c)) {\n        fcn.00413ecd();\n    }\n    **(param_1 + 0x28) = unaff_SI;\n    *(param_1 + 0x28) = *(param_1 + 0x28) + 2;\n    return param_1;\n}\n",
        "token_count": 194
    },
    "0041406b": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0041406b(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    uint unaff_ESI;\n    \n    if ((~*(param_1 + 0x18) & 1) == 0) {\n        fcn.00413cfa(2, *(param_1 + 0x14));\n    }\n    uVar1 = *(param_1 + 0x28) + 4;\n    if (*(param_1 + 0x2c) <= uVar1 && uVar1 != *(param_1 + 0x2c)) {\n        fcn.00413ecd();\n    }\n    **(param_1 + 0x28) = unaff_ESI;\n    *(param_1 + 0x28) = *(param_1 + 0x28) + 4;\n    return param_1;\n}\n",
        "token_count": 197
    },
    "004140a4": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.004140a4(int32_t param_1)\n\n{\n    ushort *unaff_ESI;\n    \n    if ((*(param_1 + 0x18) & 1) == 0) {\n        fcn.00413cfa(4, *(param_1 + 0x14));\n    }\n    if (*(param_1 + 0x2c) < *(param_1 + 0x28) + 2U) {\n        fcn.00413f44((*(param_1 + 0x28) - *(param_1 + 0x2c)) + 2);\n    }\n    *unaff_ESI = **(param_1 + 0x28);\n    *(param_1 + 0x28) = *(param_1 + 0x28) + 2;\n    return param_1;\n}\n",
        "token_count": 193
    },
    "004140e7": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.004140e7(int32_t param_1)\n\n{\n    uint *unaff_ESI;\n    \n    if ((*(param_1 + 0x18) & 1) == 0) {\n        fcn.00413cfa(4, *(param_1 + 0x14));\n    }\n    if (*(param_1 + 0x2c) < *(param_1 + 0x28) + 4U) {\n        fcn.00413f44((*(param_1 + 0x28) - *(param_1 + 0x2c)) + 4);\n    }\n    *unaff_ESI = **(param_1 + 0x28);\n    *(param_1 + 0x28) = *(param_1 + 0x28) + 4;\n    return param_1;\n}\n",
        "token_count": 193
    },
    "004141fa": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004141fa(int32_t arg_8h, uint32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t in_ECX;\n    uint32_t uVar2;\n    int32_t iVar3;\n    \n    if ((arg_ch != 0) && (arg_8h != 0)) {\n        if ((~*(in_ECX + 0x18) & 1) == 0) {\n            fcn.00413cfa(2, *(in_ECX + 0x14));\n        }\n        uVar1 = *(in_ECX + 0x2c) - *(in_ECX + 0x28);\n        uVar2 = arg_ch;\n        if (uVar1 <= arg_ch) {\n            uVar2 = uVar1;\n        }\n        fcn.00405c0f(*(in_ECX + 0x28), uVar1, arg_8h, uVar2);\n        *(in_ECX + 0x28) = *(in_ECX + 0x28) + uVar2;\n        arg_ch = arg_ch - uVar2;\n        if (arg_ch != 0) {\n            fcn.00413ecd();\n            iVar3 = arg_ch - arg_ch % *(in_ECX + 0x20);\n            (**(**(in_ECX + 0x24) + 0x38))(arg_8h + uVar2, iVar3);\n            arg_ch = arg_ch - iVar3;\n            if (*(in_ECX + 8) != 0) {\n                (**(**(in_ECX + 0x24) + 0x50))(1, *(in_ECX + 0x20), in_ECX + 0x30, in_ECX + 0x2c);\n                *(in_ECX + 0x28) = *(in_ECX + 0x30);\n            }\n            if (arg_ch < *(in_ECX + 0x20)) goto code_r0x0041429f;\n            do {\n                fcn.00405a76();\ncode_r0x0041429f:\n            } while (*(in_ECX + 0x28) != *(in_ECX + 0x30));\n            fcn.00405c0f(*(in_ECX + 0x28), arg_ch, arg_8h + uVar2 + iVar3, arg_ch);\n            *(in_ECX + 0x28) = *(in_ECX + 0x28) + arg_ch;\n        }\n    }\n    return;\n}\n",
        "token_count": 560
    },
    "00415b97": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00415b97(int32_t *arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    uint *extraout_ECX;\n    uint *puVar2;\n    \n    if ((*(in_ECX + 0x70) & 0x1000) != 0) {\n        if ((*(in_ECX + 0x6c) & 1) != (arg_8h != NULL)) {\n            arg_8h = NULL;\n            *(in_ECX + 0x6c) = *(in_ECX + 0x6c) ^ 1;\n            puVar2 = *(in_ECX + 0x50);\n            if (puVar2 == NULL) {\n                fcn.00405a76();\n                puVar2 = extraout_ECX;\n            }\n            iVar1 = (***puVar2)(puVar2, 0x455e88, &arg_8h);\n            if (-1 < iVar1) {\n                (**(*arg_8h + 0x14))(arg_8h, 0xfffffd37);\n                (**(*arg_8h + 8))(arg_8h);\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 273
    },
    "00416c14": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.00416c14(uint *arg_8h, uint arg_ch, uint32_t arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h, int32_t arg_28h, int32_t arg_2ch, uint arg_30h)\n\n{\n    int32_t iVar1;\n    int32_t extraout_ECX;\n    \n    iVar1 = 0;\n    if (arg_8h == NULL) {\n        arg_8h = fcn.00401090(0x80004005);\n        iVar1 = extraout_ECX;\n    }\n    *(arg_8h + 0xc) = arg_10h;\n    *(arg_8h + 0x32) = arg_18h;\n    arg_8h[8] = (arg_10h & 0xffff) >> 0xe & 1;\n    *(arg_8h + 0x33) = arg_1ch;\n    arg_8h[5] = arg_30h;\n    arg_8h[1] = arg_24h;\n    arg_8h[9] = arg_20h;\n    arg_8h[10] = arg_14h;\n    *arg_8h = arg_ch;\n    arg_8h[0xb] = iVar1;\n    arg_8h[2] = iVar1;\n    arg_8h[3] = iVar1;\n    arg_8h[4] = iVar1;\n    arg_8h[6] = iVar1;\n    arg_8h[7] = 1;\n    if (arg_28h != iVar1) {\n        arg_8h[7] = 3;\n        arg_8h[2] = arg_28h;\n    }\n    if (arg_2ch != iVar1) {\n        arg_8h[7] = arg_8h[7] | 4;\n        arg_8h[3] = arg_2ch;\n    }\n    return;\n}\n",
        "token_count": 461
    },
    "0041b98f": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nuint32_t fcn.0041b98f(uint32_t param_1)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    \n    if (param_1 == 0) {\n        return param_1;\n    }\n    iVar1 = *(param_1 + 0x50);\n    if (iVar1 != 0) {\n        if ((*(iVar1 + 0x70) & 0x1000) != 0) {\n            return (-((*(iVar1 + 0x6c) & 1) != 0) & 0xfffffff0) + 0x20;\n        }\n        return 0;\n    }\n    uVar2 = fcn.0041b8f2(param_1, 0);\n    return uVar2 & 0x30;\n}\n",
        "token_count": 180
    },
    "0041cfdf": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __thiscall fcn.0041cfdf(uint param_1, uint8_t param_2)\n\n{\n    fcn.004028b0();\n    if ((param_2 & 1) != 0) {\n        fcn.0040597d(param_1);\n    }\n    return param_1;\n}\n",
        "token_count": 70
    },
    "0041e4db": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint * __thiscall fcn.0041e4db(uint *param_1, uint8_t param_2)\n\n{\n    if (param_1[2] != 0) {\n        fcn.0040597d(*param_1);\n    }\n    if ((param_2 & 1) != 0) {\n        fcn.0040597d(param_1);\n    }\n    return param_1;\n}\n",
        "token_count": 93
    },
    "0041e72a": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041e72a(int32_t arg_8h, int32_t arg_ch, uint32_t arg_10h)\n\n{\n    int32_t extraout_ECX;\n    uint32_t uVar1;\n    \n    if ((arg_10h != 0) && (arg_ch == 0)) {\n        arg_10h = fcn.00405a76();\n        arg_ch = extraout_ECX;\n    }\n    if ((~*(arg_8h + 0x18) & 1) == 0) {\n        for (; arg_10h != 0; arg_10h = arg_10h - uVar1) {\n            uVar1 = 0xaaaaaaa;\n            if (arg_10h < 0xaaaaaaa) {\n                uVar1 = arg_10h;\n            }\n            fcn.004087b2();\n        }\n    }\n    else {\n        for (; arg_10h != 0; arg_10h = arg_10h - uVar1) {\n            uVar1 = 0xaaaaaaa;\n            if (arg_10h < 0xaaaaaaa) {\n                uVar1 = arg_10h;\n            }\n            fcn.004141fa(arg_ch, uVar1 * 0xc);\n            arg_ch = arg_ch + uVar1 * 0xc;\n        }\n    }\n    return;\n}\n",
        "token_count": 307
    },
    "00420adb": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00420adb(int32_t param_1, int32_t param_2)\n\n{\n    uint32_t uVar1;\n    uint32_t *puVar2;\n    uint *puVar3;\n    uint arg_8h;\n    uint in_stack_fffffff4;\n    \n    if (param_2 != 0) goto code_r0x00420af1;\n    in_stack_fffffff4 = *(param_1 + 0x14);\n    arg_8h = 6;\n    while( true ) {\n        fcn.00413cfa(arg_8h, in_stack_fffffff4);\ncode_r0x00420af1:\n        if ((~*(param_1 + 0x18) & 1) != 0) break;\n        arg_8h = 1;\n    }\n    if (*(param_2 + 8) == 0xffff) {\n        fcn.00405a5c();\n    }\n    fcn.004209e2(0);\n    puVar2 = fcn.0041cb52(param_2);\n    uVar1 = *puVar2;\n    if (uVar1 == 0) {\n        fcn.00414031(0xffff);\n        fcn.0041431a(param_1);\n        fcn.004209ce();\n        puVar3 = fcn.0041cb52(param_2);\n        *puVar3 = *(param_1 + 0x34);\n        *(param_1 + 0x34) = *(param_1 + 0x34) + 1;\n    }\n    else if (uVar1 < 0x7fff) {\n        fcn.00414031(uVar1 | 0x8000);\n    }\n    else {\n        fcn.00414031(0x7fff);\n        fcn.0041406b(uVar1 | 0x80000000);\n    }\n    return;\n}\n",
        "token_count": 423
    },
    "00420d43": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00420d43(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    uint32_t *puVar2;\n    uint uVar3;\n    uint *puVar4;\n    int32_t *in_stack_fffffff8;\n    \n    if ((~*(param_1 + 0x18) & 1) == 0) {\n        in_stack_fffffff8 = *(param_1 + 0x14);\n        fcn.00413cfa(2, in_stack_fffffff8);\n    }\n    fcn.004209e2(0);\n    if (in_stack_fffffff8 == NULL) {\n        fcn.00414031(0);\n    }\n    else {\n        puVar2 = fcn.0041cb52(in_stack_fffffff8);\n        uVar1 = *puVar2;\n        if (uVar1 == 0) {\n            uVar3 = (***in_stack_fffffff8)();\n            fcn.00420adb(uVar3);\n            fcn.004209ce();\n            puVar4 = fcn.0041cb52(in_stack_fffffff8);\n            *puVar4 = *(param_1 + 0x34);\n            *(param_1 + 0x34) = *(param_1 + 0x34) + 1;\n            (**(*in_stack_fffffff8 + 8))(param_1);\n        }\n        else if (uVar1 < 0x7fff) {\n            fcn.00414031(uVar1);\n        }\n        else {\n            fcn.00414031(0x7fff);\n            fcn.0041406b(uVar1);\n        }\n    }\n    return;\n}\n",
        "token_count": 371
    },
    "00430153": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00430153(uint arg_8h, uint arg_ch, uint32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    code *pcVar4;\n    uint var_20h;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_10h = fcn.00429057();\n    var_4h = 0;\n    var_8h = 0;\n    var_ch = 0;\n    if (*0x4644c8 == 0) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(\"USER32.DLL\");\n        pcVar4 = _sym.imp.KERNEL32.dll_GetProcAddress;\n        if ((iVar1 == 0) || (iVar2 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar1, 0x4553c8),  iVar2 == 0)) {\n            return 0;\n        }\n        *0x4644c8 = fcn.00428ff4(iVar2);\n        uVar3 = (*pcVar4)(iVar1, 0x4553b8);\n        *0x4644cc = fcn.00428ff4(uVar3);\n        uVar3 = (*pcVar4)(iVar1, 0x4553a4);\n        *0x4644d0 = fcn.00428ff4(uVar3);\n        iVar2 = fcn.00423f4b(&var_8h);\n        if (iVar2 != 0) {\n            fcn.00427d62(0, 0, 0, 0, 0);\n        }\n        if (var_8h == 2) {\n            uVar3 = (*pcVar4)(iVar1, \"GetUserObjectInformationA\");\n            *0x4644d8 = fcn.00428ff4(uVar3);\n            if (*0x4644d8 != 0) {\n                uVar3 = (*pcVar4)(iVar1, \"GetProcessWindowStation\");\n                *0x4644d4 = fcn.00428ff4(uVar3);\n            }\n        }\n    }\n    iVar1 = var_10h;\n    if ((*0x4644d4 == var_10h) || (*0x4644d8 == var_10h)) {\ncode_r0x004302a1:\n        if (*0x4644cc != iVar1) {\n            pcVar4 = fcn.00429060(*0x4644cc);\n            var_4h = (*pcVar4)();\n            if ((var_4h != 0) && (*0x4644d0 != iVar1)) {\n                pcVar4 = fcn.00429060(*0x4644d0, var_4h);\n                var_4h = (*pcVar4)();\n            }\n        }\n    }\n    else {\n        pcVar4 = fcn.00429060(*0x4644d4);\n        iVar2 = (*pcVar4)();\n        if (iVar2 != 0) {\n            pcVar4 = fcn.00429060(*0x4644d8, iVar2, 1, &var_20h, 0xc, &var_14h);\n            iVar2 = (*pcVar4)();\n            if ((iVar2 != 0) && ((var_18h & 1) != 0)) goto code_r0x004302a1;\n        }\n        iVar1 = fcn.00423f82(&var_ch);\n        if (iVar1 != 0) {\n            fcn.00427d62(0, 0, 0, 0, 0);\n        }\n        if (var_ch < 4) {\n            arg_10h = arg_10h | 0x40000;\n        }\n        else {\n            arg_10h = arg_10h | 0x200000;\n        }\n    }\n    pcVar4 = fcn.00429060(*0x4644c8, var_4h, arg_8h, arg_ch, arg_10h);\n    uVar3 = (*pcVar4)();\n    return uVar3;\n}\n",
        "token_count": 964
    },
    "00431490": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00431490(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    uint32_t arg_8h_00;\n    uint *puVar2;\n    uint uVar3;\n    int32_t unaff_EBP;\n    int32_t iVar4;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.004259a4(0x45cbd0, 0x10);\n    arg_8h_00 = *(unaff_EBP + 8);\n    if (arg_8h_00 == 0xfffffffe) {\n        puVar2 = fcn.00423e71();\n        *puVar2 = 0;\n        puVar2 = fcn.00423e5e();\n        *puVar2 = 9;\n    }\n    else {\n        if ((-1 < arg_8h_00) && (arg_8h_00 < *0x46558c)) {\n            piVar1 = (arg_8h_00 >> 5) * 4 + 0x4655a0;\n            iVar4 = (arg_8h_00 & 0x1f) * 0x28;\n            if ((*(*piVar1 + 4 + iVar4) & 1) != 0) {\n                fcn.00432f69(arg_8h_00);\n                *(unaff_EBP + -4) = 0;\n                if ((*(*piVar1 + 4 + iVar4) & 1) == 0) {\n                    puVar2 = fcn.00423e5e();\n                    *puVar2 = 9;\n                    puVar2 = fcn.00423e71();\n                    *puVar2 = 0;\n                    *(unaff_EBP + -0x1c) = 0xffffffff;\n                }\n                else {\n                    uVar3 = fcn.00430eca(*(unaff_EBP + 8), *(unaff_EBP + 0xc), *(unaff_EBP + 0x10));\n                    *(unaff_EBP + -0x1c) = uVar3;\n                }\n                *(unaff_EBP + -4) = 0xfffffffe;\n                fcn.00431562(0x45cbd0);\n                goto code_r0x0043155c;\n            }\n        }\n        puVar2 = fcn.00423e71();\n        *puVar2 = 0;\n        puVar2 = fcn.00423e5e();\n        *puVar2 = 9;\n        fcn.00427e5e(0, 0, 0, 0, 0);\n    }\ncode_r0x0043155c:\n    fcn.004259e9();\n    return;\n}\n",
        "token_count": 634
    },
    "00431e26": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00431e26(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint unaff_EBX;\n    uint var_28h;\n    uint var_24h;\n    int32_t var_1ch;\n    uint var_18h;\n    uint32_t var_14h;\n    uint var_10h;\n    uint32_t var_4h;\n    \n    var_4h = *0x460604 ^ &stack0xfffffffc;\n    fcn.00421655(arg_10h);\n    var_14h = fcn.00434415(&var_10h, &var_28h, arg_ch, 0, 0, 0, 0, &var_24h);\n    iVar1 = fcn.00433991(&var_10h, arg_8h);\n    if ((var_14h & 3) == 0) {\n        if (iVar1 == 1) {\ncode_r0x00431e7d:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x00431ebd;\n        }\n        if (iVar1 != 2) {\ncode_r0x00431eaf:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x00431ebd;\n        }\n    }\n    else if ((var_14h & 1) == 0) {\n        if ((var_14h & 2) == 0) goto code_r0x00431eaf;\n        goto code_r0x00431e7d;\n    }\n    if (var_18h != '\\0') {\n        *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n    }\ncode_r0x00431ebd:\n    fcn.00421e2f(unaff_EBX);\n    return;\n}\n",
        "token_count": 502
    },
    "00431ecc": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00431ecc(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint unaff_EBX;\n    uint var_28h;\n    uint var_24h;\n    int32_t var_1ch;\n    uint var_18h;\n    uint32_t var_14h;\n    uint var_10h;\n    uint32_t var_4h;\n    \n    var_4h = *0x460604 ^ &stack0xfffffffc;\n    fcn.00421655(arg_10h);\n    var_14h = fcn.00434415(&var_10h, &var_28h, arg_ch, 0, 0, 0, 0, &var_24h);\n    iVar1 = fcn.00433ed3(&var_10h, arg_8h);\n    if ((var_14h & 3) == 0) {\n        if (iVar1 == 1) {\ncode_r0x00431f23:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x00431f63;\n        }\n        if (iVar1 != 2) {\ncode_r0x00431f55:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x00431f63;\n        }\n    }\n    else if ((var_14h & 1) == 0) {\n        if ((var_14h & 2) == 0) goto code_r0x00431f55;\n        goto code_r0x00431f23;\n    }\n    if (var_18h != '\\0') {\n        *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n    }\ncode_r0x00431f63:\n    fcn.00421e2f(unaff_EBX);\n    return;\n}\n",
        "token_count": 500
    },
    "004338b5": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.004338b5(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    uint32_t arg_8h_00;\n    uint *puVar2;\n    uint uVar3;\n    int32_t unaff_EBP;\n    int32_t iVar4;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.004259a4(0x45cc78, 0x10);\n    arg_8h_00 = *(unaff_EBP + 8);\n    if (arg_8h_00 == 0xfffffffe) {\n        puVar2 = fcn.00423e71();\n        *puVar2 = 0;\n        puVar2 = fcn.00423e5e();\n        *puVar2 = 9;\n    }\n    else {\n        if ((-1 < arg_8h_00) && (arg_8h_00 < *0x46558c)) {\n            piVar1 = (arg_8h_00 >> 5) * 4 + 0x4655a0;\n            iVar4 = (arg_8h_00 & 0x1f) * 0x28;\n            if ((*(*piVar1 + 4 + iVar4) & 1) != 0) {\n                fcn.00432f69(arg_8h_00);\n                *(unaff_EBP + -4) = 0;\n                if ((*(*piVar1 + 4 + iVar4) & 1) == 0) {\n                    puVar2 = fcn.00423e5e();\n                    *puVar2 = 9;\n                    puVar2 = fcn.00423e71();\n                    *puVar2 = 0;\n                    *(unaff_EBP + -0x1c) = 0xffffffff;\n                }\n                else {\n                    uVar3 = fcn.00433313(*(unaff_EBP + 8), *(unaff_EBP + 0xc), *(unaff_EBP + 0x10));\n                    *(unaff_EBP + -0x1c) = uVar3;\n                }\n                *(unaff_EBP + -4) = 0xfffffffe;\n                fcn.00433987(0x45cc78);\n                goto code_r0x00433981;\n            }\n        }\n        puVar2 = fcn.00423e71();\n        *puVar2 = 0;\n        puVar2 = fcn.00423e5e();\n        *puVar2 = 9;\n        fcn.00427e5e(0, 0, 0, 0, 0);\n    }\ncode_r0x00433981:\n    fcn.004259e9();\n    return;\n}\n",
        "token_count": 633
    },
    "0040e9f9": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_28h\n\nvoid __cdecl fcn.0040e9f9(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint32_t uVar5;\n    code **ppcVar6;\n    uint32_t uVar7;\n    int32_t *arg_8h_00;\n    int32_t iVar8;\n    code *pcVar9;\n    int32_t unaff_EBP;\n    int16_t iVar10;\n    int16_t iVar11;\n    uint var_7ch;\n    uint var_5ch;\n    uint var_2ch;\n    uint32_t var_28h;\n    uint *var_24h;\n    uint *var_18h;\n    uint *var_14h;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.00423bfe(0x70);\n    *(unaff_EBP + -0x10) = 0;\n    *(unaff_EBP + -0x14) = 0x7fffffff;\n    uVar7 = *(unaff_EBP + 8);\n    *(unaff_EBP + -4) = 0;\n    if (uVar7 == 0x111) {\n        iVar3 = (**(*arg_8h_00 + 0xe8))(*(unaff_EBP + 0xc), *(unaff_EBP + 0x10));\n        if (iVar3 != 0) {\ncode_r0x0040ea37:\n            *(unaff_EBP + -0x10) = 1;\n            goto code_r0x0040eef0;\n        }\n        goto code_r0x0040ec09;\n    }\n    if (uVar7 == 0x4e) {\n        if (**(unaff_EBP + 0x10) != 0) {\n            iVar3 = (**(*arg_8h_00 + 0xec))(*(unaff_EBP + 0xc), *(unaff_EBP + 0x10), unaff_EBP + -0x10);\n            goto joined_r0x0040eecd;\n        }\n        goto code_r0x0040ec09;\n    }\n    var_24h = *(unaff_EBP + 0x10);\n    if (uVar7 == 6) {\n        uVar4 = fcn.0040cd23(var_24h);\n        fcn.0040e3c8(arg_8h_00, *(unaff_EBP + 0xc), uVar4);\n    }\n    iVar10 = var_24h;\n    if ((uVar7 == 0x20) && (iVar3 = fcn.0040e43e(arg_8h_00, iVar10, var_24h >> 0x10),  iVar3 != 0))\n    goto code_r0x0040ea37;\n    if ((((arg_8h_00[0x13] != 0) && (0 < *(arg_8h_00[0x13] + 0x74))) &&\n        ((((0x1ff < uVar7 && (uVar7 < 0x20a)) || ((0xff < uVar7 && (uVar7 < 0x110)))) || (uVar7 - 0x281 < 0x11)))) &&\n       (iVar3 = (**(*arg_8h_00[0x13] + 0x94))(uVar7, *(unaff_EBP + 0xc), var_24h, unaff_EBP + -0x10),  iVar3 != 0))\n    goto code_r0x0040eef0;\n    uVar5 = (**(*arg_8h_00 + 0x28))();\n    uVar7 = *(unaff_EBP + 8);\n    *(unaff_EBP + 0x10) = uVar5;\n    fcn.0040b9e1(7);\n    iVar8 = ((uVar5 ^ uVar7) & 0x1ff) * 0xc;\n    iVar3 = *(iVar8 + 0x461d70);\n    *(unaff_EBP + -0x18) = iVar8 + 0x461d70;\n    if ((*(unaff_EBP + 8) != iVar3) || (*(unaff_EBP + 0x10) != *(iVar8 + 0x461d78))) {\n        puVar1 = *(unaff_EBP + -0x18);\n        ppcVar6 = *(unaff_EBP + 0x10);\n        *puVar1 = *(unaff_EBP + 8);\n        puVar1[2] = ppcVar6;\n        while (*ppcVar6 != NULL) {\n            if (*(unaff_EBP + 8) < 0xc000) {\n                iVar3 = fcn.0040b233(ppcVar6[1], *(unaff_EBP + 8), 0, 0);\n                *(unaff_EBP + 0x10) = iVar3;\n                if (iVar3 != 0) {\n                    *(*(unaff_EBP + -0x18) + 4) = iVar3;\n                    fcn.0040ba10();\n                    goto code_r0x0040eb97;\n                }\n            }\n            else {\n                iVar3 = *(*(unaff_EBP + 0x10) + 4);\n                uVar4 = 0xc000;\n                while (iVar3 = fcn.0040b233(iVar3, uVar4, 0, 0),  iVar3 != 0) {\n                    if (**(iVar3 + 0x10) == *(unaff_EBP + 8)) {\n                        *(*(unaff_EBP + -0x18) + 4) = iVar3;\n                        fcn.0040ba10();\n                        goto code_r0x0040eee2;\n                    }\n                    iVar3 = iVar3 + 0x18;\n                }\n                ppcVar6 = *(unaff_EBP + 0x10);\n            }\n            ppcVar6 = (**ppcVar6)();\n            *(unaff_EBP + 0x10) = ppcVar6;\n        }\n        *(*(unaff_EBP + -0x18) + 4) = 0;\n        fcn.0040ba10();\n        goto code_r0x0040ec09;\n    }\n    iVar3 = *(iVar8 + 0x461d74);\n    *(unaff_EBP + 0x10) = iVar3;\n    fcn.0040ba10();\n    if (iVar3 == 0) goto code_r0x0040ec09;\n    if (0xbfff < *(unaff_EBP + 8)) {\ncode_r0x0040eee2:\n        pcVar9 = *(iVar3 + 0x14);\ncode_r0x0040eee5:\n        var_28h = *(unaff_EBP + 0xc);\n        goto code_r0x0040eee9;\n    }\ncode_r0x0040eb97:\n    pcVar9 = *(*(unaff_EBP + 0x10) + 0x14);\n    iVar3 = *(*(unaff_EBP + 0x10) + 0x10);\n    iVar11 = var_24h >> 0x10;\n    var_14h = var_24h;\n    // switch table (69 cases) at 0x40ef11\n    switch(iVar3) {\n    case 1:\n        var_14h = *(unaff_EBP + 0xc);\n        fcn.0040a30f(var_14h);\n        goto code_r0x0040ec38;\n    case 2:\n    case 3:\n    case 4:\n    case 0x1b:\n    case 0x1c:\n        var_14h = *(unaff_EBP + 0xc);\n        goto code_r0x0040ec38;\n    case 5:\n    case 0xc:\n        var_18h = var_24h & 0xffff;\n        uVar7 = *(unaff_EBP + 0xc);\n        uVar5 = fcn.0040cd23(uVar7, var_18h, var_24h >> 0x10);\n        goto code_r0x0040ec6d;\n    case 6:\n        var_24h = *(unaff_EBP + 0xc);\n        var_28h = fcn.0040cd23();\n        goto code_r0x0040eee9;\n    case 7:\n    case 0xd:\ncode_r0x0040ec38:\n        uVar4 = (*pcVar9)(var_14h);\ncode_r0x0040eeed:\n        *(unaff_EBP + -0x10) = uVar4;\n        break;\n    case 8:\n        fcn.00409de0();\n        uVar4 = var_24h[1];\n        *(unaff_EBP + -4) = 1;\n        *(unaff_EBP + -0x24) = uVar4;\n        fcn.0040ba2a();\n        uVar4 = *var_24h;\n        uVar2 = var_24h[2];\n        *(unaff_EBP + -4) = 2;\n        *(unaff_EBP + -0x5c) = uVar4;\n        iVar3 = fcn.0040cd4a(uVar4);\n        if (iVar3 == 0) {\n            if ((arg_8h_00[0x13] != 0) && (iVar3 = fcn.0041c9a0(*(unaff_EBP + -0x5c)),  iVar3 != 0)) {\n                *(unaff_EBP + -0x2c) = iVar3;\n            }\n            iVar3 = unaff_EBP + -0x7c;\n        }\n        uVar4 = (*pcVar9)(unaff_EBP + -0x28, iVar3, uVar2);\n        *(unaff_EBP + -0x24) = 0;\n        *(unaff_EBP + -0x5c) = 0;\n        *(unaff_EBP + -0x10) = uVar4;\n        *(unaff_EBP + -4) = 1;\n        fcn.0040d4ac();\n        goto code_r0x0040ed18;\n    case 9:\n        fcn.00409de0();\n        uVar4 = var_24h[2];\n        *(unaff_EBP + -0x24) = var_24h[1];\n        *(unaff_EBP + -4) = 3;\n        uVar4 = (*pcVar9)(unaff_EBP + -0x28, uVar4);\n        *(unaff_EBP + -0x24) = 0;\n        *(unaff_EBP + -0x10) = uVar4;\ncode_r0x0040ed18:\n        *(unaff_EBP + -4) = 0;\n        fcn.0040a381();\n        break;\n    case 10:\n        uVar7 = fcn.0040cd23(var_24h, *(unaff_EBP + 0xc) >> 0x10);\n        var_18h = var_24h;\n        goto code_r0x0040ed36;\n    case 0xb:\n        var_24h = *(unaff_EBP + 0xc) >> 0x10;\n        var_28h = *(unaff_EBP + 0xc);\n        goto code_r0x0040eee9;\n    case 0xe:\n    case 0x2f:\n        goto code_r0x0040eee5;\n    case 0xf:\n        var_18h = fcn.00410d6b(var_24h);\n        uVar7 = *(unaff_EBP + 0xc) >> 0x10;\ncode_r0x0040ed36:\n        uVar5 = *(unaff_EBP + 0xc);\ncode_r0x0040ec6d:\n        uVar4 = (*pcVar9)(uVar5, uVar7, var_18h);\n        goto code_r0x0040eeed;\n    case 0x10:\n    case 0x12:\n    case 0x15:\n    case 0x1e:\n    case 0x2d:\n    case 0x32:\n        goto code_r0x0040ee5e;\n    case 0x11:\n    case 0x14:\n        var_14h = *(unaff_EBP + 0xc);\n        goto code_r0x0040ee6b;\n    case 0x13:\n        (*pcVar9)();\n        break;\n    case 0x16:\n        var_14h = *(unaff_EBP + 0xc) >> 0x10;\n        var_18h = *(unaff_EBP + 0xc);\n        goto code_r0x0040ee61;\n    case 0x17:\n        var_14h = iVar11;\n        var_18h = iVar10;\n        goto code_r0x0040ee61;\n    case 0x18:\n    case 0x19:\n        var_14h = var_24h >> 0x10;\n        var_18h = var_24h & 0xffff;\n        goto code_r0x0040ee8a;\n    case 0x1a:\n        fcn.0040cd23(var_24h);\ncode_r0x0040ee5e:\n        var_18h = *(unaff_EBP + 0xc);\n        goto code_r0x0040ee61;\n    case 0x1d:\n    case 0x28:\n    case 0x31:\n        uVar4 = (*pcVar9)();\n        goto code_r0x0040eeed;\n    case 0x1f:\n        var_14h = *(unaff_EBP + 0xc);\n        var_18h = fcn.0040cd23(var_14h);\n        fcn.0040cd23(var_24h, var_18h);\n        uVar7 = arg_8h_00[8] == var_24h;\n        goto code_r0x0040ee8e;\n    case 0x20:\n        var_14h = *(unaff_EBP + 0xc);\n        fcn.0040a30f(var_14h);\n        goto code_r0x0040ee6b;\n    case 0x21:\n        var_14h = *(unaff_EBP + 0xc);\n        fcn.00410d6b(var_14h);\n        goto code_r0x0040ee6b;\n    case 0x22:\n        var_14h = iVar11;\n        var_18h = iVar10;\n        uVar7 = fcn.00410d6b(*(unaff_EBP + 0xc), var_18h, var_14h);\n        goto code_r0x0040ee8e;\n    case 0x23:\n        var_14h = *(unaff_EBP + 0xc);\n        goto code_r0x0040edf0;\n    case 0x24:\ncode_r0x0040edf0:\n        fcn.0040cd23(var_14h);\n        goto code_r0x0040ee6b;\n    case 0x25:\n        var_14h = var_24h >> 0x10;\n        var_18h = var_24h & 0xffff;\n        goto code_r0x0040ee0d;\n    case 0x26:\n        var_18h = iVar10;\n        var_14h = iVar11;\ncode_r0x0040ee0d:\n        uVar7 = fcn.0040cd23(*(unaff_EBP + 0xc), var_18h, var_14h);\n        goto code_r0x0040ee8e;\n    case 0x27:\n        var_18h = fcn.0040cd23(*(unaff_EBP + 0xc), var_24h);\n        goto code_r0x0040ee61;\n    case 0x29:\n        var_14h = *(unaff_EBP + 0xc) >> 0x10;\n        var_18h = fcn.0040cd23(var_24h, var_14h);\n        goto code_r0x0040ee78;\n    case 0x2a:\n    case 0x2b:\n        var_18h = *(unaff_EBP + 0xc);\n        var_14h = *(unaff_EBP + 0xc) >> 0x10;\n        *(unaff_EBP + 8) = var_18h;\n        *(unaff_EBP + 0xc) = var_14h;\n        if (iVar3 == 0x2a) {\n            var_18h = fcn.0040cd23(var_24h);\n            uVar7 = *(unaff_EBP + 0xc);\n            var_14h = var_24h;\n            goto code_r0x0040ee8e;\n        }\ncode_r0x0040ee61:\n        (*pcVar9)(var_18h, var_14h);\n        break;\n    case 0x2c:\n    case 0x33:\ncode_r0x0040ee6b:\n        (*pcVar9)(var_14h);\n        break;\n    case 0x2e:\n    case 0x36:\n        (*pcVar9)(*(unaff_EBP + 0xc), var_24h);\n        goto code_r0x0040ea37;\n    case 0x30:\n    case 0x45:\n        var_28h = iVar10;\n        var_24h = iVar11;\ncode_r0x0040eee9:\n        uVar4 = (*pcVar9)(var_28h, var_24h);\n        goto code_r0x0040eeed;\n    case 0x34:\n        var_18h = *(unaff_EBP + 0xc) >> 0x10;\ncode_r0x0040ee78:\n        uVar7 = *(unaff_EBP + 0xc);\n        goto code_r0x0040ee8e;\n    case 0x35:\n        var_18h = iVar10;\n        var_14h = iVar11;\ncode_r0x0040ee8a:\n        uVar7 = *(unaff_EBP + 0xc);\ncode_r0x0040ee8e:\n        (*pcVar9)(uVar7, var_18h, var_14h);\n        break;\n    case 0x37:\n        iVar3 = (*pcVar9)(*(unaff_EBP + 0xc), *(unaff_EBP + 0xc) >> 0x10, iVar10, iVar11);\n        *(unaff_EBP + -0x10) = iVar3;\n        goto joined_r0x0040eecd;\n    case 0x44:\n        iVar3 = (*pcVar9)();\n        *(unaff_EBP + -0x10) = iVar3;\njoined_r0x0040eecd:\n        if (iVar3 != 0) {\ncode_r0x0040ec09:\n            *(unaff_EBP + -4) = 0xffffffff;\n            fcn.0040ba10();\n            goto code_r0x0040ec17;\n        }\n    }\ncode_r0x0040eef0:\n    if (*(unaff_EBP + 0x14) != NULL) {\n        **(unaff_EBP + 0x14) = *(unaff_EBP + -0x10);\n    }\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.0040ba10();\ncode_r0x0040ec17:\n    fcn.00423cd6();\n    return;\n}\n",
        "token_count": 4518
    },
    "0040f025": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489",
            "check OS version/56128ea24265487c97cb4913628bf489",
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040f025(uint32_t arg_8h, uint32_t arg_ch, int32_t arg_10h, int32_t *arg_14h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint var_ch;\n    int32_t *var_8h;\n    int32_t var_4h;\n    \n    if (arg_8h < 0x112) {\n        if (arg_8h == 0x111) {\n            iVar2 = fcn.00407000(0, arg_ch >> 0x10 | 0xbd110000, 0, 0);\n            if (iVar2 == 0) {\n                return 0;\n            }\n            if (arg_14h != NULL) {\n                *arg_14h = 1;\n                return 1;\n            }\n            return 1;\n        }\n        if (0x2a < arg_8h) {\n            if ((arg_8h < 0x30) || (arg_8h == 0x39)) goto code_r0x0040f0b9;\n            if (arg_8h == 0x4e) {\n                var_8h = arg_14h;\n                var_4h = arg_10h;\n                uVar1 = fcn.00407000(0, *(arg_10h + 8) & 0xffff | 0xbc4e0000, &var_8h, 0);\n                return uVar1;\n            }\n        }\n    }\n    else if ((0x113 < arg_8h) && ((arg_8h < 0x116 || (arg_8h == 0x210)))) {\ncode_r0x0040f0b9:\n        uVar1 = fcn.0040e9f9(arg_8h + 0xbc00, arg_ch, arg_10h, arg_14h);\n        return uVar1;\n    }\n    if (arg_8h - 0x132 < 7) {\n        var_4h = arg_8h - 0x132;\n        var_8h = arg_ch;\n        uVar1 = fcn.0040e9f9(0xbc19, 0, &var_ch, arg_14h);\n        if (*arg_14h != 0) {\n            return uVar1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 533
    },
    "0041e944": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_18h\n\nvoid __cdecl\nfcn.0041e944(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h)\n\n{\n    int16_t *piVar1;\n    char cVar2;\n    uint8_t uVar3;\n    int16_t iVar4;\n    int16_t iVar5;\n    uint32_t uVar6;\n    uint uVar7;\n    uint uVar8;\n    uint *puVar9;\n    uint extraout_ECX;\n    int32_t iVar10;\n    int16_t *piVar11;\n    int32_t unaff_EBP;\n    ulong *puVar12;\n    uint var_24h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.00423bfe(0x18);\n    puVar9 = *(unaff_EBP + 8);\n    *puVar9 = extraout_ECX;\n    puVar12 = puVar9 + 1;\n    if ((*(unaff_EBP + 0x14) == 6) || (*(unaff_EBP + 0x14) == 0xc)) {\n        *puVar12 = *(unaff_EBP + 0x10);\n        puVar12 = puVar9 + 2;\n    }\n    puVar9 = *(unaff_EBP + 0x18);\n    uVar8 = *puVar9;\n    *(unaff_EBP + -0x14) = 0;\n    *(unaff_EBP + -0x18) = uVar8;\n    *(unaff_EBP + 8) = puVar9[2];\n    *(unaff_EBP + -0x10) = puVar9[3];\n    cVar2 = **(unaff_EBP + 0xc);\n    *(unaff_EBP + 0x10) = *(unaff_EBP + 0xc);\n    if (cVar2 != '\\0') {\n        do {\n            uVar3 = **(unaff_EBP + 0x10);\n            uVar6 = uVar3;\n            iVar10 = *(unaff_EBP + 8) + -1;\n            *(unaff_EBP + 8) = iVar10;\n            *(unaff_EBP + 0x14) = uVar6;\n            if ((uVar3 != 0xff) && ((uVar3 & 0x40) != 0)) {\n                uVar6 = uVar6 & 0xffffffbf | 0x4000;\n                *(unaff_EBP + 0x14) = uVar6;\n            }\n            iVar5 = uVar6;\n            if (iVar10 < *(unaff_EBP + -0x10)) {\n                if (iVar5 == 0xff) {\n                    uVar8 = *(*(unaff_EBP + 0x18) + 0xc);\n                    *(unaff_EBP + -0x10) = 0;\n                    *(unaff_EBP + 8) = uVar8;\n                    *(unaff_EBP + -0x14) = 1;\n                    goto code_r0x0041eb94;\n                }\n                if ((*(unaff_EBP + -0x14) == 0) && (iVar5 == 0xc)) {\n                    *0x4639c0 = 10;\n                    *0x4639c8 = 0x80020004;\n                    piVar11 = 0x4639c0;\n                    goto code_r0x0041eabe;\n                }\n                break;\n            }\n            if (iVar5 == 0xff) break;\n            piVar1 = iVar10 * 0x10 + *(unaff_EBP + -0x18);\n            piVar11 = piVar1;\n            if ((iVar5 != 0xc) && (iVar4 = *piVar1,  iVar5 != iVar4)) {\n                piVar11 = iVar10 * 0x10 + *(unaff_EBP + 0x20);\n                if (iVar5 == 0xe) {\n                    *(unaff_EBP + 0xc) = 8;\n                }\n                else {\n                    *(unaff_EBP + 0xc) = uVar6;\n                }\n                if (iVar4 != *(unaff_EBP + 0xc)) {\n                    iVar10 = (*_sym.imp.OLEAUT32.dll_VariantTimeToDosDateTime)(piVar11, piVar1, 0, *(unaff_EBP + 0xc));\n                    if (iVar10 < 0) goto code_r0x0041ebb1;\n                    uVar6 = *(unaff_EBP + 0x14);\n                }\n                if (uVar6 == 0xe) {\n                    if (*piVar1 == *(unaff_EBP + 0xc)) {\n                        uVar8 = fcn.00412191(*(piVar1 + 4));\n                        *(piVar11 + 4) = uVar8;\n                        *piVar11 = 8;\n                    }\n                    else {\n                        uVar8 = *(piVar11 + 4);\n                        uVar7 = fcn.00412191(uVar8);\n                        *(piVar11 + 4) = uVar7;\n                        (*_sym.imp.OLEAUT32.dll_SysStringLen)(uVar8);\n                    }\n                    *(unaff_EBP + 0x14) = 8;\n                    uVar6 = *(unaff_EBP + 0x14);\n                }\n            }\ncode_r0x0041eabe:\n            if ((uVar6 & 0x4000) != 0) {\n                if ((uVar6 == 0x400b) && (iVar10 = *(unaff_EBP + 0x24),  iVar10 != 0)) {\n                    *(unaff_EBP + 0x14) = **(piVar11 + 4) != 0;\n                    puVar9 = fcn.0040594d(4);\n                    if (puVar9 == NULL) {\n                        *(unaff_EBP + 0x14) = 0;\n                    }\n                    else {\n                        *puVar9 = *(unaff_EBP + 0x14);\n                        *(unaff_EBP + 0x14) = puVar9;\n                    }\n                    uVar7 = fcn.0041e4a4(*(unaff_EBP + 0x14), *(piVar11 + 4), 1);\n                    uVar8 = *(iVar10 + 8);\n                    *(unaff_EBP + -4) = 0;\n                    fcn.0041e8c6(uVar8, uVar7);\n                    *(unaff_EBP + -4) = 0xffffffff;\n                    if (*(unaff_EBP + -0x1c) != 0) {\n                        fcn.0040597d(*(unaff_EBP + -0x24));\n                    }\n                    piVar11 = *(unaff_EBP + 0x14);\n                }\n                else {\n                    piVar11 = *(piVar11 + 4);\n                }\ncode_r0x0041eb36:\n                *puVar12 = piVar11;\n                goto code_r0x0041eb92;\n            }\n    // switch table (20 cases) at 0x41ebdc\n            switch(uVar6 & 0xffff) {\n            case 2:\n                uVar6 = piVar11[4];\n                break;\n            case 3:\n            case 8:\n            case 9:\n            case 10:\n            case 0xd:\n            case 0x13:\n                uVar6 = *(piVar11 + 4);\n                break;\n            case 4:\n                *puVar12 = *(piVar11 + 4);\n                goto code_r0x0041eb92;\n            case 5:\n            case 7:\n                *puVar12 = *(piVar11 + 4);\n                goto code_r0x0041eb6f;\n            case 6:\n            case 0x14:\n            case 0x15:\n                *puVar12 = *(piVar11 + 4);\n                *(puVar12 + 4) = *(piVar11 + 6);\ncode_r0x0041eb6f:\n                puVar12 = puVar12 + 1;\n                goto code_r0x0041eb94;\n            case 0xb:\n                uVar6 = piVar11[4] != 0;\n                break;\n            case 0xc:\n                goto code_r0x0041eb36;\n            default:\n                goto code_r0x0041eb94;\n            case 0x10:\n                uVar6 = *(piVar11 + 4);\n                break;\n            case 0x11:\n                uVar6 = *(piVar11 + 4);\n                break;\n            case 0x12:\n                uVar6 = piVar11[4];\n            }\n            *puVar12 = uVar6;\ncode_r0x0041eb92:\n            puVar12 = puVar12 + 4;\ncode_r0x0041eb94:\n            *(unaff_EBP + 0x10) = *(unaff_EBP + 0x10) + 1;\n        } while (**(unaff_EBP + 0x10) != '\\0');\n        puVar9 = *(unaff_EBP + 0x18);\n    }\n    if (*(unaff_EBP + 8) < 1) {\n        if (**(unaff_EBP + 0x10) != '\\0') {\n            **(unaff_EBP + 0x1c) = puVar9[2];\n        }\n    }\n    else {\ncode_r0x0041ebb1:\n        **(unaff_EBP + 0x1c) = *(unaff_EBP + 8);\n    }\n    fcn.00423cd6();\n    return;\n}\n",
        "token_count": 2255
    },
    "00403fa0": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nvoid fcn.00403fa0(void)\n\n{\n    char *arg_8h;\n    uint arg_8h_00;\n    int32_t aiStack152 [37];\n    uint32_t uStack4;\n    \n    uStack4 = *0x460604 ^ aiStack152;\n    aiStack152[0] = 0x94;\n    (*_sym.imp.KERNEL32.dll_GetVersionExA)(aiStack152);\n    if (aiStack152[0] == 5) {\n        arg_8h = str.ShutDown__s__f__t_0__c______WINDOWS;\n        (*_sym.imp.KERNEL32.dll_WinExec)(str.ShutDown__s__f__t_0__c______WINDOWS, 5);\n        fcn.00421e2f(arg_8h);\n        return;\n    }\n    arg_8h_00 = 0xd;\n    (*_sym.imp.USER32.dll_ExitWindowsEx)(0xd, 0);\n    fcn.00421e2f(arg_8h_00);\n    return;\n}\n",
        "token_count": 236
    },
    "0040738c": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nvoid fcn.0040738c(void)\n\n{\n    uint8_t uVar1;\n    code *pcVar2;\n    uint uVar3;\n    uchar *puVar4;\n    uint8_t *puVar5;\n    int32_t iVar6;\n    uint16_t uVar7;\n    int32_t iVar8;\n    int32_t iVar9;\n    int32_t iStack148;\n    int32_t iStack140;\n    uchar auStack136 [12];\n    uchar auStack124 [116];\n    uint32_t uStack8;\n    \n    uStack8 = *0x460604 ^ auStack124;\n    uVar3 = (*_sym.imp.USER32.dll_GetMenuCheckMarkDimensions)();\n    iVar6 = uVar3;\n    iStack148 = uVar3 >> 0x10;\n    if ((4 < iVar6) && (5 < iStack148)) {\n        if (0x20 < iVar6) {\n            iVar6 = 0x20;\n        }\n        iVar8 = iVar6 + 0xf >> 4;\n        iVar9 = ((iVar6 + -4) / 2 + iVar8 * 0x10) - iVar6;\n        if (0xc < iVar9) {\n            iVar9 = 0xc;\n        }\n        if (0x20 < iStack148) {\n            iStack148 = 0x20;\n        }\n        fcn.004215c0(auStack136);\n        puVar4 = auStack136 + (iStack148 + -6 >> 1) * iVar8 * 2;\n        puVar5 = 0x4518e4;\n        iStack140 = 5;\n        do {\n            uVar1 = *puVar5;\n            puVar5 = puVar5 + 1;\n            uVar7 = ~(uVar1 << (iVar9 & 0x1f));\n            *puVar4 = uVar7 >> 8;\n            puVar4[1] = uVar7;\n            puVar4 = puVar4 + iVar8 * 2;\n            iStack140 = iStack140 + -1;\n        } while (iStack140 != 0);\n        uVar3 = 1;\n        *0x4637b0 = (*_sym.imp.GDI32.dll_CreateBitmap)(iVar6, iStack148, 1);\n        if (*0x4637b0 == 0) {\n            *0x4637b0 = (*_sym.imp.USER32.dll_LoadBitmapA)(0, 0x7fe3);\n        }\n        fcn.00421e2f(uVar3);\n        return;\n    }\n    fcn.00421cb9(&stack0xffffff54, 0x459604);\n    pcVar2 = swi(3);\n    (*pcVar2)();\n    return;\n}\n",
        "token_count": 608
    },
    "0040aa52": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_48h\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl\nfcn.0040aa52(int32_t *arg_8h, int32_t arg_ch, uint noname_2, uint noname_3, uint32_t arg_18h, uint32_t *arg_1ch, \n            uint *arg_20h, uint noname_7, uint *arg_28h)\n\n{\n    uint16_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    code *pcVar4;\n    int32_t *piVar5;\n    uint32_t *puVar6;\n    uint *puVar7;\n    int32_t iVar8;\n    int32_t iVar9;\n    int32_t *piVar10;\n    uint var_48h;\n    uint *var_44h;\n    uint *var_40h;\n    uint *var_34h;\n    uint var_30h;\n    uint uStack48;\n    uint uStack44;\n    uint uStack40;\n    uint var_20h;\n    int32_t pvargDest;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puVar6 = arg_1ch;\n    piVar5 = arg_8h;\n    iVar9 = 0;\n    var_20h._0_2_ = 0;\n    if (arg_8h == NULL) {\n        return -0x7ff8ffa9;\n    }\n    if (arg_1ch == NULL) {\n        return -0x7ffdfff8;\n    }\n    uVar2 = arg_1ch[2];\n    if (5 < uVar2) {\n        return -0x7ffdfff2;\n    }\n    arg_8h = NULL;\n    if (arg_1ch[3] != 0) {\n        arg_1ch = arg_1ch[1];\n        do {\n            uVar3 = *arg_1ch;\n            if (uVar2 <= uVar3) {\n                return -0x7ffdfff2;\n            }\n            arg_1ch = arg_1ch + 1;\n            arg_8h = arg_8h + 1;\n            (&var_44h)[uVar3] = *puVar6 + iVar9;\n            iVar9 = iVar9 + 0x10;\n        } while (arg_8h < puVar6[3]);\n    }\n    if (arg_8h < uVar2) {\n        iVar9 = arg_8h * 0x10 + *puVar6;\n        iVar8 = uVar2 - arg_8h;\n        piVar10 = &var_48h + (uVar2 - arg_8h);\n        do {\n            *piVar10 = iVar9;\n            iVar9 = iVar9 + 0x10;\n            piVar10 = piVar10 + -1;\n            iVar8 = iVar8 + -1;\n        } while (iVar8 != 0);\n    }\n    iVar9 = -0x7ffdfffd;\n    if (arg_28h == NULL) {\n        arg_28h = &arg_18h;\n    }\n    if (arg_20h == NULL) {\n        arg_20h = &var_20h;\n    }\n    (*_sym.imp.OLEAUT32.dll_VariantClear)(&pvargDest);\n    pcVar4 = _sym.imp.OLEAUT32.dll_VariantTimeToDosDateTime;\n    if (0x12 < arg_ch + 0x139aU) goto code_r0x0040afbc;\n    // switch table (19 cases) at 0x40afd2\n    switch(*((arg_ch + 0x139aU) * 4 + 0x40afd2)) {\n    case 0x40ab2f:\n        if (puVar6[2] == 1) {\n            iVar9 = (**(*piVar5 + 100))(piVar5, *var_44h, var_44h[1], var_44h[2], var_44h[3]);\n            goto code_r0x0040afbc;\n        }\n        break;\n    case 0x40ab50:\n        if (puVar6[2] == 2) {\n            if (*var_44h != 3) {\n                iVar9 = (*_sym.imp.OLEAUT32.dll_VariantTimeToDosDateTime)(&pvargDest, var_44h, 0, 3);\n                if (iVar9 < 0) goto code_r0x0040ad48;\n                var_44h = &pvargDest;\n            }\n            arg_18h = var_44h[2];\n            if (*var_40h != 3) {\n                iVar9 = (*pcVar4)(&pvargDest, var_40h, 0, 3);\n                if (iVar9 < 0) {\ncode_r0x0040af34:\n                    *arg_28h = 1;\n                    goto code_r0x0040afbc;\n                }\n                var_40h = &pvargDest;\n            }\n            iVar9 = (**(*piVar5 + 0x60))(piVar5, arg_18h, var_40h[2], arg_20h);\n            goto code_r0x0040afbc;\n        }\n        break;\n    case 0x40abbd:\n        if (puVar6[2] == 2) {\n            if (*var_44h != 3) {\n                iVar9 = (*_sym.imp.OLEAUT32.dll_VariantTimeToDosDateTime)(&pvargDest, var_44h, 0, 3);\n                if (iVar9 < 0) goto code_r0x0040ad48;\n                var_44h = &pvargDest;\n            }\n            iVar9 = (**(*piVar5 + 0x5c))(piVar5, var_44h[2], *var_40h, var_40h[1], var_40h[2], var_40h[3], arg_20h);\n            goto code_r0x0040afbc;\n        }\n        break;\n    case 0x40ac0a:\n        if (puVar6[2] == 5) {\n            while ((uVar1 = *var_44h,  (uVar1 & 0x4000) != 0 && ((uVar1 & 0xf) != 0))) {\n                if ((uVar1 & 0xc) == 0) {\n                    pvargDest = var_44h[2];\n                }\n                else {\n                    (*_sym.imp.OLEAUT32.dll_VariantCopy)(var_44h[2]);\n                    *var_44h[2] = 3;\n                    pvargDest = var_44h[2] + 8;\n                }\n            }\n            *arg_28h = 0;\n            iVar9 = (**(*piVar5 + 0x58))\n                              (piVar5, pvargDest, var_ch, var_8h, var_4h, *var_34h, var_34h[1], var_34h[2], var_34h[3]);\n            goto code_r0x0040afbc;\n        }\n        break;\n    case 0x40ac73:\n        if (puVar6[2] == 2) {\n            if (*var_44h != 3) {\n                iVar9 = (*_sym.imp.OLEAUT32.dll_VariantTimeToDosDateTime)(&pvargDest, var_44h, 0, 3);\n                if (iVar9 < 0) goto code_r0x0040ad48;\n                var_44h = &pvargDest;\n            }\n            iVar9 = (**(*piVar5 + 0x54))(piVar5, var_44h[2], *var_40h, var_40h[1], var_40h[2], var_40h[3]);\n            goto code_r0x0040afbc;\n        }\n        break;\n    case 0x40acbd:\n        if (puVar6[2] == 1) {\n            iVar9 = (**(*piVar5 + 0x50))(piVar5, *var_44h, var_44h[1], var_44h[2], var_44h[3], arg_20h + 2);\ncode_r0x0040aeeb:\n            if (-1 < iVar9) {\n                *arg_20h = 8;\n            }\n            goto code_r0x0040afbc;\n        }\n        break;\n    case 0x40ace5:\n        iVar9 = (**(*piVar5 + 0x4c))(piVar5, arg_20h);\n        goto code_r0x0040afbc;\n    case 0x40acf3:\n        iVar9 = (**(*piVar5 + 0x48))(piVar5, arg_20h);\n        goto code_r0x0040afbc;\n    case 0x40ad01:\n        if (puVar6[2] == 1) {\n            iVar9 = (**(*piVar5 + 0x44))(piVar5, *var_44h, var_44h[1], var_44h[2], var_44h[3], arg_20h + 2);\n            goto code_r0x0040aeeb;\n        }\n        break;\n    case 0x40ad29:\n        if (puVar6[2] == 2) {\n            uVar1 = *var_44h;\n            if (((uVar1 & 0x4000) != 0) && ((uVar1 & 0xc) == 0)) {\n                iVar9 = -0x7ffdfffb;\ncode_r0x0040ad48:\n                *arg_28h = 0;\n                goto code_r0x0040afbc;\n            }\n            if (uVar1 == 0x400c) {\n                (*_sym.imp.OLEAUT32.dll_VariantCopy)(var_44h[2]);\n                *var_44h[2] = 8;\n                puVar7 = var_44h[2] + 8;\n            }\n            else if (uVar1 == 0x4008) {\n                puVar7 = var_44h[2];\n            }\n            else {\n                (*_sym.imp.OLEAUT32.dll_VariantCopy)(var_44h);\n                puVar7 = var_44h + 2;\n                *var_44h = 8;\n            }\n            iVar9 = (**(*piVar5 + 0x40))(piVar5, puVar7, *var_40h, var_40h[1], var_40h[2], var_40h[3], arg_20h + 2);\n            goto code_r0x0040af91;\n        }\n        break;\n    case 0x40adab:\n        if (puVar6[2] == 1) {\n            iVar9 = (**(*piVar5 + 0x3c))(piVar5, *var_44h, var_44h[1], var_44h[2], var_44h[3], arg_20h + 2);\n            goto code_r0x0040aeeb;\n        }\n        break;\n    case 0x40add3:\n        if (puVar6[2] == 1) {\n            iVar9 = (**(*piVar5 + 0x38))(piVar5, *var_44h, var_44h[1], var_44h[2], var_44h[3], arg_20h);\n            goto code_r0x0040afbc;\n        }\n        break;\n    case 0x40adf7:\n        if (puVar6[2] == 1) {\n            iVar9 = (**(*piVar5 + 0x34))(piVar5, *var_44h, var_44h[1], var_44h[2], var_44h[3], arg_20h);\n            goto code_r0x0040afbc;\n        }\n        break;\n    case 0x40ae1b:\n        if (puVar6[2] == 1) {\n            iVar9 = (**(*piVar5 + 0x30))(piVar5, *var_44h, var_44h[1], var_44h[2], var_44h[3], arg_20h + 2);\n            goto code_r0x0040aeeb;\n        }\n        break;\n    case 0x40ae43:\n        if ((arg_18h & 2) == 0) {\n            if ((arg_18h & 4) == 0) goto code_r0x0040aec4;\n            if (puVar6[2] == 2) {\n                var_30h = *var_44h;\n                uStack48 = var_44h[1];\n                uStack44 = var_44h[2];\n                uStack40 = var_44h[3];\n                if (*var_40h != 8) {\n                    iVar9 = (*_sym.imp.OLEAUT32.dll_VariantTimeToDosDateTime)(&pvargDest, var_40h, 0, 3);\n                    if (iVar9 < 0) goto code_r0x0040af34;\n                    var_40h = &pvargDest;\n                }\n                iVar9 = (**(*piVar5 + 0x6c))(piVar5, var_30h, uStack48, uStack44, uStack40, var_40h[2]);\n                goto code_r0x0040afbc;\n            }\n        }\n        else if (puVar6[2] == 1) {\n            iVar9 = (**(*piVar5 + 0x2c))(piVar5, *var_44h, var_44h[1], var_44h[2], var_44h[3], arg_20h + 2);\n            goto code_r0x0040aeeb;\n        }\n        break;\n    case 0x40aec4:\ncode_r0x0040aec4:\n        if ((arg_18h & 2) == 0) {\n            if ((arg_18h & 4) == 0) goto code_r0x0040af5c;\n            if (puVar6[2] == 2) {\n                var_30h = *var_44h;\n                uStack48 = var_44h[1];\n                uStack44 = var_44h[2];\n                uStack40 = var_44h[3];\n                if (*var_40h != 8) {\n                    iVar9 = (*_sym.imp.OLEAUT32.dll_VariantTimeToDosDateTime)(&pvargDest, var_40h, 0, 3);\n                    if (iVar9 < 0) goto code_r0x0040af34;\n                    var_40h = &pvargDest;\n                }\n                iVar9 = (**(*piVar5 + 0x68))(piVar5, var_30h, uStack48, uStack44, uStack40, var_40h[2]);\n                goto code_r0x0040afbc;\n            }\n        }\n        else if (puVar6[2] == 1) {\n            iVar9 = (**(*piVar5 + 0x28))(piVar5, *var_44h, var_44h[1], var_44h[2], var_44h[3], arg_20h + 2);\n            goto code_r0x0040aeeb;\n        }\n        break;\n    case 0x40af5c:\ncode_r0x0040af5c:\n        if (puVar6[2] == 1) {\n            iVar9 = (**(*piVar5 + 0x24))(piVar5, *var_44h, var_44h[1], var_44h[2], var_44h[3], arg_20h + 2);\n            goto code_r0x0040afae;\n        }\n        break;\n    case 0x40af84:\n        iVar9 = (**(*piVar5 + 0x20))(piVar5, arg_20h + 2);\ncode_r0x0040af91:\n        if (-1 < iVar9) {\n            *arg_20h = 3;\n        }\n        goto code_r0x0040afbc;\n    case 0x40afa1:\n        iVar9 = (**(*piVar5 + 0x1c))(piVar5, arg_20h + 2);\ncode_r0x0040afae:\n        if (-1 < iVar9) {\n            *arg_20h = 9;\n        }\n        goto code_r0x0040afbc;\n    }\n    iVar9 = -0x7ffdfff2;\ncode_r0x0040afbc:\n    (*_sym.imp.OLEAUT32.dll_VariantCopy)(&pvargDest);\n    return iVar9;\n}\n",
        "token_count": 3776
    },
    "004367cf": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nvoid fcn.004367cf(void)\n\n{\n    code *pcVar1;\n    uint arg_8h;\n    uint var_98h;\n    uint32_t var_94h;\n    int32_t var_88h;\n    uint32_t var_4h;\n    \n    var_4h = *0x460604 ^ &stack0xfffffffc;\n    var_98h = 0x94;\n    (*_sym.imp.KERNEL32.dll_GetVersionExA)(&var_98h);\n    if ((var_88h != 2) || (pcVar1 = 0x4367cb,  var_94h < 5)) {\n        pcVar1 = fcn.00436766;\n    }\n    arg_8h = 0x461b28;\n    (*_sym.imp.KERNEL32.dll_InterlockedExchange)(0x461b28, pcVar1);\n    (**0x461b28)();\n    fcn.00421e2f(arg_8h);\n    return;\n}\n",
        "token_count": 219
    },
    "004369c9": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004369c9(uint *param_1)\n\n{\n    int32_t iVar1;\n    uint unaff_ESI;\n    uint uStack156;\n    uint32_t uStack152;\n    int32_t iStack148;\n    int32_t iStack140;\n    uchar auStack124 [116];\n    uint32_t uStack8;\n    \n    uStack8 = *0x460604 ^ auStack124;\n    fcn.00436973();\n    param_1[2] = 0x400000;\n    param_1[1] = 0x400000;\n    *param_1 = 0x3c;\n    *(param_1 + 3) = 0;\n    fcn.004215c0(&uStack156, 0, 0x94);\n    uStack156 = 0x94;\n    (*_sym.imp.KERNEL32.dll_GetVersionExA)(&uStack156);\n    if (iStack140 == 2) {\n        if (uStack152 < 5) goto code_r0x00436a45;\n    }\n    else if ((iStack140 != 1) || ((uStack152 < 5 && ((uStack152 != 4 || (iStack148 == 0)))))) goto code_r0x00436a45;\n    *(param_1 + 3) = 1;\ncode_r0x00436a45:\n    param_1[4] = 0x800;\n    param_1[5] = 0x456518;\n    iVar1 = fcn.00436847();\n    if (iVar1 < 0) {\n        *0x461b40 = 1;\n    }\n    fcn.00421e2f(unaff_ESI);\n    return;\n}\n",
        "token_count": 386
    },
    "00401ab0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00401ab0(uint *param_1)\n\n{\n    code *pcVar1;\n    uint *apuStack16 [4];\n    \n    if (param_1 == NULL) {\n        apuStack16[0] = NULL;\n    }\n    else {\n        apuStack16[0] = param_1;\n        if (0xffffffff / ZEXT48(param_1) == 0) {\n            apuStack16[0] = &param_1;\n            param_1 = NULL;\n            fcn.004213c9();\n            apuStack16[0] = vtable.std::bad_alloc.0;\n            fcn.00421cb9(apuStack16, 0x458ff0);\n            pcVar1 = swi(3);\n            (*pcVar1)();\n            return;\n        }\n    }\n    fcn.0040594d();\n    return;\n}\n",
        "token_count": 195
    },
    "00401c40": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00401c40(int32_t param_1, char param_2, int32_t param_3)\n\n{\n    uint arg_10h;\n    \n    if ((param_2 != '\\0') && (0xf < *(param_1 + 0x18))) {\n        arg_10h = *(param_1 + 4);\n        if (param_3 != 0) {\n            fcn.004214ae(param_1 + 4, 0x10, arg_10h, param_3);\n        }\n        fcn.0040597d(arg_10h);\n    }\n    *(param_1 + 0x14) = param_3;\n    *(param_1 + 0x18) = 0xf;\n    *(param_1 + 4 + param_3) = 0;\n    return;\n}\n",
        "token_count": 189
    },
    "00402b50": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall\nfcn.00402b50(int32_t param_1, int32_t param_2, int32_t param_3, uint param_4, uint param_5, int32_t *param_6)\n\n{\n    int32_t iVar1;\n    int32_t unaff_ESI;\n    int32_t unaff_EDI;\n    int32_t unaff_retaddr;\n    uchar auStack16 [4];\n    int32_t iStack12;\n    int32_t *piStack4;\n    \n    (*_sym.imp.USER32.dll_GetClientRect)(*(param_1 + 0x20), auStack16);\n    (*_sym.imp.USER32.dll_CopyRect)(param_6, unaff_retaddr);\n    // switch table (4 cases) at 0x402c84\n    switch(*(param_1 + 0x58) & 3) {\n    case 0:\n        if (iStack12 == 0) {\ncode_r0x00402ba7:\n            iVar1 = ((param_6[2] - *param_6) - param_2) / 2 + *param_6;\n            goto code_r0x00402bb9;\n        }\n        *param_6 = *param_6 + 3;\n        *piStack4 = *piStack4 + param_2 + 3;\n        break;\n    case 1:\n        if (iStack12 == 0) goto code_r0x00402ba7;\n        iVar1 = *piStack4;\n        *piStack4 = 3;\n        piStack4[2] = piStack4[2] + ((-3 - iVar1) - param_2);\n        iVar1 = (unaff_EDI - param_2) + -3;\ncode_r0x00402bb9:\n        *param_6 = iVar1;\n        break;\n    case 2:\n        if (iStack12 == 0) {\ncode_r0x00402c3f:\n            param_6[1] = ((param_6[3] - param_6[1]) - param_3) / 2 + param_6[1];\n        }\n        else {\n            param_6[1] = 3;\n            piStack4[1] = piStack4[1] + param_3;\n        }\n        goto code_r0x00402c55;\n    case 3:\n        if (iStack12 == 0) goto code_r0x00402c3f;\n        param_6[3] = unaff_ESI + -3;\n        param_6[1] = (unaff_ESI - param_3) + -3;\n        piStack4[1] = 3;\n        piStack4[3] = param_6[1];\ncode_r0x00402c55:\n        *param_6 = ((param_6[2] - *param_6) - param_2) / 2 + *param_6;\n    default:\n        goto code_r0x00402c69;\n    }\n    param_6[1] = ((param_6[3] - param_6[1]) - param_3) / 2 + param_6[1];\ncode_r0x00402c69:\n    if (unaff_retaddr != 0) {\n        (*_sym.imp.USER32.dll_OffsetRect)(param_6, 1, 1);\n    }\n    return;\n}\n",
        "token_count": 746
    },
    "00402ca0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00402ca0(int32_t param_1, int32_t param_2)\n\n{\n    code *pcVar1;\n    \n    pcVar1 = _sym.imp.USER32.dll_DestroyIcon;\n    if (param_2 != 0) {\n        if (*(param_1 + 0xe8) != 0) {\n            (*_sym.imp.USER32.dll_DestroyIcon)(*(param_1 + 0xe8));\n        }\n        if (*(param_1 + 0xf4) != 0) {\n            (*pcVar1)(*(param_1 + 0xf4));\n        }\n    }\n    *(param_1 + 0xe8) = 0;\n    *(param_1 + 0xec) = 0;\n    *(param_1 + 0xf0) = 0;\n    *(param_1 + 0xf4) = 0;\n    *(param_1 + 0xf8) = 0;\n    *(param_1 + 0xfc) = 0;\n    return;\n}\n",
        "token_count": 229
    },
    "00402d00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00402d00(int32_t param_1)\n\n{\n    code *pcVar1;\n    \n    if (*(param_1 + 0x98) == 0) {\n        (**(*(param_1 + 0x78) + 0x134))(param_1, 0);\n        pcVar1 = _sym.imp.USER32.dll_SendMessageA;\n        (*_sym.imp.USER32.dll_SendMessageA)(*(param_1 + 0x98), 0x401, 0, 0);\n        (*pcVar1)(*(param_1 + 0x98), 0x418, 0, 400);\n    }\n    return;\n}\n",
        "token_count": 150
    },
    "00412be3": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00412be3(uint arg_8h)\n\n{\n    int32_t arg_8h_00;\n    int32_t iVar1;\n    uint uVar2;\n    int32_t extraout_ECX;\n    int32_t *piVar3;\n    int32_t unaff_EBP;\n    uint var_4h;\n    \n    fcn.00423c31(8);\n    arg_8h_00 = *(unaff_EBP + 8);\n    if ((arg_8h_00 != 0) && (iVar1 = fcn.0041c9a0(arg_8h_00),  iVar1 == 0)) {\n        iVar1 = fcn.0041c9a0(arg_8h_00);\n        if (iVar1 == 0) {\n            uVar2 = fcn.0040593b(0x41278f);\n            *(unaff_EBP + -4) = 0;\n            *(unaff_EBP + 8) = uVar2;\n            iVar1 = fcn.0041e046();\n            if (iVar1 == 0) {\n                fcn.00405a42();\n            }\n            (**(extraout_ECX + 0x14))(iVar1);\n            piVar3 = fcn.0041cb52(arg_8h_00);\n            uVar2 = *(unaff_EBP + 8);\n            *(unaff_EBP + -4) = 0xffffffff;\n            *piVar3 = iVar1;\n            fcn.0040593b(uVar2);\n            piVar3 = *(extraout_ECX + 0x58) + iVar1;\n            *piVar3 = arg_8h_00;\n            if (*(extraout_ECX + 0x5c) == 2) {\n                piVar3[1] = arg_8h_00;\n            }\n        }\n        else {\n            piVar3 = *(extraout_ECX + 0x58) + iVar1;\n            *piVar3 = arg_8h_00;\n            if (*(extraout_ECX + 0x5c) == 2) {\n                piVar3[1] = arg_8h_00;\n            }\n        }\n    }\n    fcn.00423cd6();\n    return;\n}\n",
        "token_count": 519
    },
    "00404040": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00404040(int32_t *param_1)\n\n{\n    int32_t **ppiVar1;\n    int32_t *piVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    int32_t extraout_ECX;\n    \n    iVar4 = *param_1;\n    ppiVar1 = iVar4 + -0x10;\n    piVar3 = *ppiVar1;\n    if (*(iVar4 + -0xc) != 0) {\n        piVar2 = iVar4 + -4;\n        if (*(iVar4 + -4) < 0) {\n            if (*(iVar4 + -8) < 0) {\n                fcn.00401090(0x80070057);\n                iVar4 = extraout_ECX;\n            }\n            *(iVar4 + -0xc) = 0;\n            **param_1 = 0;\n            return;\n        }\n        LOCK();\n        iVar4 = *piVar2;\n        *piVar2 = *piVar2 + -1;\n        if (iVar4 == 1 || iVar4 + -1 < 0) {\n            (**(**ppiVar1 + 4))(ppiVar1);\n        }\n        iVar4 = (**(*piVar3 + 0xc))();\n        *param_1 = iVar4 + 0x10;\n    }\n    return;\n}\n",
        "token_count": 298
    },
    "004040a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004040a0(int32_t *param_1, int32_t param_2)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t *unaff_EBP;\n    int32_t **ppiVar6;\n    \n    iVar5 = *param_1;\n    if (param_2 < *(iVar5 + -0xc)) {\n        param_2 = *(iVar5 + -0xc);\n    }\n    if (1 < *(iVar5 + -4)) {\n        iVar5 = *param_1;\n        iVar2 = *(iVar5 + -0xc);\n        ppiVar6 = iVar5 + -0x10;\n        puVar3 = (**(**ppiVar6 + 0x10))();\n        iVar4 = (***puVar3)(param_2, 1);\n        if (iVar4 == 0) {\n            fcn.00403e80();\n        }\n        if (iVar2 < param_2) {\n            param_2 = iVar2;\n        }\n        fcn.004214ae(iVar4 + 0x10, param_2 + 1, iVar5, param_2 + 1);\n        *(iVar4 + 4) = iVar2;\n        piVar1 = iVar5 + -4;\n        LOCK();\n        iVar5 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n        if (iVar5 == 1 || iVar5 + -1 < 0) {\n            (**(**ppiVar6 + 4))(ppiVar6);\n        }\n        *unaff_EBP = iVar4 + 0x10;\n        return;\n    }\n    iVar5 = *(iVar5 + -8);\n    if (param_2 <= iVar5) {\n        return;\n    }\n    if (iVar5 < 0x401) {\n        iVar5 = iVar5 * 2;\n    }\n    else {\n        iVar5 = iVar5 + 0x400;\n    }\n    if (iVar5 < param_2) {\n        iVar5 = param_2;\n    }\n    iVar2 = *param_1;\n    if ((*(iVar2 + -8) < iVar5) && (0 < iVar5)) {\n        iVar5 = (**(**(iVar2 + -0x10) + 8))(iVar2 + -0x10, iVar5, 1);\n        if (iVar5 != 0) goto code_r0x00403f3e;\n    }\n    iVar5 = fcn.00403e80();\ncode_r0x00403f3e:\n    *param_1 = iVar5 + 0x10;\n    return;\n}\n",
        "token_count": 601
    },
    "004040f0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t ** fcn.004040f0(int32_t **param_1)\n\n{\n    code *pcVar1;\n    int32_t *piVar2;\n    int32_t **ppiVar3;\n    \n    piVar2 = (**(**param_1 + 0x10))();\n    if ((-1 < param_1[3]) && (piVar2 == *param_1)) {\n        LOCK();\n        param_1[3] = param_1[3] + 1;\n        return param_1;\n    }\n    ppiVar3 = (***piVar2)(param_1[1], 1);\n    if (ppiVar3 == NULL) {\n        fcn.00401090(0x8007000e);\n        pcVar1 = swi(3);\n        ppiVar3 = (*pcVar1)();\n        return ppiVar3;\n    }\n    ppiVar3[1] = param_1[1];\n    fcn.004214ae(ppiVar3 + 4, param_1[1] + 1, param_1 + 4, param_1[1] + 1);\n    return ppiVar3;\n}\n",
        "token_count": 257
    },
    "00404ba0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00404ba0(int32_t param_1)\n\n{\n    int32_t **ppiVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    int32_t **ppiVar4;\n    uint32_t uVar5;\n    uint uVar6;\n    uchar *extraout_ECX;\n    int32_t *in_FS_OFFSET;\n    int32_t iVar7;\n    int32_t **ppiStack88;\n    uint uStack84;\n    uint uStack80;\n    int32_t iStack76;\n    uchar *puStack72;\n    int32_t iStack68;\n    uchar *puStack64;\n    uint uStack60;\n    int32_t iVar8;\n    uint32_t uStack52;\n    uint uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x437150;\n    uStack12 = *in_FS_OFFSET;\n    uStack52 = *0x460604 ^ &stack0xffffffd0;\n    *in_FS_OFFSET = &stack0xfffffff4;\n    iVar8 = 1;\n    uStack60 = 0x404bce;\n    fcn.0040c66c(1);\n    uStack60 = 0x404bd3;\n    piVar3 = fcn.00410877();\n    if (piVar3 == NULL) {\n        uStack60 = -0x7fffbffb;\n        puStack64 = 0x404be8;\n        piVar3 = fcn.00401090();\n    }\n    puStack64 = 0x404bf1;\n    ppiVar4 = (**(*piVar3 + 0xc))();\n    uStack12 = 0;\n    puStack64 = 0x404c05;\n    piVar3 = fcn.00410877();\n    if (piVar3 == NULL) {\n        puStack64 = 0x80004005;\n        iStack68 = 0x404c1a;\n        piVar3 = fcn.00401090();\n    }\n    puStack64 = 0x404c23;\n    (**(*piVar3 + 0xc))();\n    uStack12 = CONCAT31(uStack12._1_3_, 1);\n    puStack64 = 0x404c34;\n    piVar3 = fcn.00410877();\n    if (piVar3 == NULL) {\n        puStack64 = 0x80004005;\n        iStack68 = 0x404c49;\n        piVar3 = fcn.00401090();\n    }\n    puStack64 = 0x404c52;\n    (**(*piVar3 + 0xc))();\n    uStack12 = CONCAT31(uStack12._1_3_, 2);\n    uVar5 = *(param_1 + 0x74) == 0;\n    *(param_1 + 0x74) = uVar5;\n    if (uVar5 == 0) {\n        puStack64 = 0x1;\n        iStack68 = 0x450ef8;\n        puStack72 = 0x404ddd;\n        fcn.00402d50();\n        iStack76 = 0x450ee8;\n        uStack80 = 0x404dee;\n        puStack72 = extraout_ECX;\n        fcn.004048c0();\n        uStack80 = 0x84;\n        uStack84 = 1;\n        ppiStack88 = 0x404dfc;\n        fcn.004041b0();\n        ppiStack88 = NULL;\n        iVar8 = 0x84;\n        fcn.00403190();\n        if (*(param_1 + 0x84) != 0) {\n            fcn.0040fe48(0x4636a8, 0, 0, 0, 0, 3);\n            (*_sym.imp.USER32.dll_KillTimer)(*(param_1 + 0x20), 1);\n            iVar8 = 0x450ed0;\n            *(param_1 + 0x84) = 0;\n            fcn.0040fb9f();\n        }\n        iVar7 = 1;\n        fcn.0040fac1(0x3e9);\n        fcn.0040fc75();\n        uVar6 = 1;\n    }\n    else {\n        puStack64 = &stack0xffffffd0;\n        iStack68 = 0x3e9;\n        puStack72 = 0x404c82;\n        fcn.0040fac1();\n        puStack72 = 0x404c89;\n        fcn.0040de19();\n        puStack72 = &stack0xffffffcc;\n        iStack76 = 0x3ea;\n        uStack80 = 0x404c9a;\n        fcn.0040fac1();\n        uStack80 = 0x404ca1;\n        fcn.0040de19();\n        uStack80 = 1;\n        uStack84 = 0x450f20;\n        ppiStack88 = 0x404cb9;\n        fcn.00402d50();\n        ppiStack88 = &stack0xffffffb8;\n        uVar6 = fcn.00404740(&stack0xffffffc8, 0x450f14);\n        uVar6 = fcn.00404660(&stack0xffffffc4, uVar6, 0x450f10);\n        uVar6 = fcn.004045a0(&stack0xffffffc0, uVar6, &stack0xffffffbc);\n        fcn.00404660(&stack0xffffffa8, uVar6, 0x450f08);\n        fcn.004041b0(1, 0x83);\n        piVar3 = iStack76 + -4;\n        LOCK();\n        iVar7 = *piVar3;\n        *piVar3 = *piVar3 + -1;\n        if (iVar7 == 1 || iVar7 + -1 < 0) {\n            (**(**(iStack76 + -0x10) + 4))(iStack76 + -0x10);\n        }\n        ppiStack88 = uStack60 + -0x10;\n        piVar3 = uStack60 + -4;\n        LOCK();\n        iVar7 = *piVar3;\n        *piVar3 = *piVar3 + -1;\n        if (iVar7 + -1 < 1) {\n            (**(**ppiStack88 + 4))();\n        }\n        ppiStack88 = iVar8 + -0x10;\n        piVar3 = iVar8 + -4;\n        LOCK();\n        iVar8 = *piVar3;\n        *piVar3 = *piVar3 + -1;\n        if (iVar8 == 1 || iVar8 + -1 < 0) {\n            (**(**ppiStack88 + 4))();\n        }\n        ppiStack88 = NULL;\n        iVar8 = 0x83;\n        fcn.00403190();\n        iVar7 = 0;\n        fcn.0040fac1(0x3e9);\n        fcn.0040fc75();\n        uVar6 = 0;\n    }\n    fcn.0040fac1(0x3ea, uVar6);\n    fcn.0040fc75();\n    uStack60._0_1_ = 1;\n    piVar3 = iVar7 + -4;\n    LOCK();\n    iVar2 = *piVar3;\n    *piVar3 = *piVar3 + -1;\n    if (iVar2 == 1 || iVar2 + -1 < 0) {\n        (**(**(iVar7 + -0x10) + 4))(iVar7 + -0x10);\n    }\n    uStack60 = uStack60._1_3_ << 8;\n    piVar3 = iVar8 + -4;\n    LOCK();\n    iVar7 = *piVar3;\n    *piVar3 = *piVar3 + -1;\n    if (iVar7 + -1 < 1) {\n        (**(**(iVar8 + -0x10) + 4))(iVar8 + -0x10);\n    }\n    uStack60 = 0xffffffff;\n    ppiVar1 = ppiVar4 + 3;\n    LOCK();\n    piVar3 = *ppiVar1;\n    *ppiVar1 = *ppiVar1 + -1;\n    if (piVar3 == 0x1 || piVar3 + -1 < 0) {\n        (**(**ppiVar4 + 4))(ppiVar4);\n    }\n    *in_FS_OFFSET = iStack68;\n    return;\n}\n",
        "token_count": 1917
    },
    "0040d805": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint fcn.0040d805(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint unaff_EBX;\n    \n    iVar1 = (*_sym.imp.USER32.dll_GetDlgItem)(*(param_2 + 0x20), param_1);\n    if (iVar1 == 0) {\n        if ((*(param_2 + 0x4c) == 0) || (iVar1 = (**(**(param_2 + 0x4c) + 0x54))(unaff_EBX),  iVar1 == 0)) {\n            uVar2 = 0;\n        }\n        else {\n            fcn.0040d7c3(*(iVar1 + 0x24));\n            iVar1 = (*_sym.imp.USER32.dll_GetParent)(*(iVar1 + 0x24));\n            if (*(param_2 + 0x20) != iVar1) {\n                fcn.0040fd00(param_2, 0);\n            }\n            uVar2 = 1;\n        }\n    }\n    else {\n        uVar2 = fcn.0040d7c3(iVar1);\n    }\n    return uVar2;\n}\n",
        "token_count": 267
    },
    "004212be": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.004212be(uint arg_8h)\n\n{\n    int32_t arg_8h_00;\n    int32_t iVar1;\n    uint *puVar2;\n    uint uVar3;\n    int32_t unaff_EBP;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.004259a4(0x45c6e0, 0xc);\n    iVar1 = *(unaff_EBP + 8);\n    if (iVar1 != 0) {\n        if (*0x4656a8 == 3) {\n            fcn.00426f6e(4);\n            *(unaff_EBP + -4) = 0;\n            arg_8h_00 = fcn.00426fe7(iVar1);\n            *(unaff_EBP + -0x1c) = arg_8h_00;\n            if (arg_8h_00 != 0) {\n                fcn.00427012(arg_8h_00, iVar1);\n            }\n            *(unaff_EBP + -4) = 0xfffffffe;\n            fcn.00421314();\n            if (*(unaff_EBP + -0x1c) != 0) goto code_r0x00421346;\n            iVar1 = *(unaff_EBP + 8);\n        }\n        iVar1 = (*_sym.imp.KERNEL32.dll_HeapFree)(*0x463bdc, 0, iVar1);\n        if (iVar1 == 0) {\n            puVar2 = fcn.00423e5e();\n            uVar3 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n            uVar3 = fcn.00423e23(uVar3);\n            *puVar2 = uVar3;\n        }\n    }\ncode_r0x00421346:\n    fcn.004259e9();\n    return;\n}\n",
        "token_count": 430
    },
    "00405982": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00405982(int32_t *param_1)\n\n{\n    if (0 < param_1[1]) {\n        (**(*param_1 + 4))(1);\n    }\n    return;\n}\n",
        "token_count": 49
    },
    "00405f12": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00405f12(int32_t *param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = *param_1;\n    if (param_2 < *(iVar1 + -0xc)) {\n        param_2 = *(iVar1 + -0xc);\n    }\n    if (*(iVar1 + -4) < 2) {\n        iVar1 = *(iVar1 + -8);\n        if (iVar1 < param_2) {\n            if (iVar1 < 0x401) {\n                iVar1 = iVar1 * 2;\n            }\n            else {\n                iVar1 = iVar1 + 0x400;\n            }\n            if (iVar1 < param_2) {\n                iVar1 = param_2;\n            }\n            fcn.00405ede(iVar1);\n        }\n    }\n    else {\n        fcn.00405e76(param_2);\n    }\n    return;\n}\n",
        "token_count": 210
    },
    "00406289": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint32_t __thiscall fcn.00406289(uint32_t *param_1, int32_t param_2)\n\n{\n    unkuint3 Var2;\n    uint32_t uVar1;\n    \n    Var2 = *0x461bfc >> 8;\n    if (*0x461bfc == NULL) {\n        uVar1 = CONCAT31(Var2, 1);\n    }\n    else if ((param_2 == 0) || (*param_1 != 0xffffffff)) {\n        uVar1 = Var2 << 8;\n    }\n    else {\n        uVar1 = (**0x461bfc)(param_2);\n        *param_1 = uVar1;\n        uVar1 = uVar1 & 0xffffff00 | uVar1 != 0xffffffff;\n    }\n    return uVar1;\n}\n",
        "token_count": 182
    },
    "004062bf": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nbool __fastcall fcn.004062bf(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    \n    if (*0x461c04 == NULL) {\n        return true;\n    }\n    if ((*param_1 != -1) && (param_1[1] == 0)) {\n        iVar1 = (**0x461c04)(*param_1, param_1 + 1);\n        return iVar1 == 1;\n    }\n    return false;\n}\n",
        "token_count": 105
    },
    "0040652e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040652e(int32_t param_1)\n\n{\n    if (*(param_1 + 0x88) != NULL) {\n        (**(**(param_1 + 0x88) + 0x14))();\n    }\n    if (*(param_1 + 0x94) != 0) {\n        fcn.0041261d(\"Settings\", \"PreviewPages\", *(param_1 + 0x94));\n    }\n    return;\n}\n",
        "token_count": 105
    },
    "004066c3": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004066c3(uint lpString2)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t in_ECX;\n    int32_t var_4h;\n    \n    pcVar1 = _sym.imp.KERNEL32.dll_GlobalLock;\n    if (*(in_ECX + 0x74) != 0) {\n        var_4h = in_ECX;\n        iVar2 = (*_sym.imp.KERNEL32.dll_GlobalLock)(*(in_ECX + 0x74));\n        iVar2 = (*_sym.imp.KERNEL32.dll_lstrcmpA)(*(iVar2 + 2) + iVar2, lpString2);\n        if ((iVar2 == 0) && (iVar2 = sub.WINSPOOL.DRV_OpenPrinterA(lpString2, &var_4h, 0),  iVar2 != 0)) {\n            if (*(in_ECX + 0x70) != 0) {\n                fcn.0041275c(*(in_ECX + 0x70));\n            }\n            uVar3 = sub.WINSPOOL.DRV_DocumentPropertiesA(0, var_4h, lpString2, 0, 0, 0);\n            uVar3 = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(0x42, uVar3);\n            *(in_ECX + 0x70) = uVar3;\n            uVar3 = (*pcVar1)(uVar3);\n            iVar2 = sub.WINSPOOL.DRV_DocumentPropertiesA(0, var_4h, lpString2, uVar3, 0, 2);\n            if (iVar2 != 1) {\n                fcn.0041275c(*(in_ECX + 0x70));\n                *(in_ECX + 0x70) = 0;\n            }\n            sub.WINSPOOL.DRV_ClosePrinter(var_4h);\n        }\n    }\n    return;\n}\n",
        "token_count": 427
    },
    "004067e3": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_11ch\n\nvoid __cdecl fcn.004067e3(int32_t Locale)\n\n{\n    uint uVar1;\n    uint *puVar2;\n    uint32_t uVar3;\n    int32_t *piVar4;\n    int32_t iVar5;\n    uint in_ECX;\n    uint var_11ch;\n    uint lpLibFileName;\n    uint32_t var_4h;\n    \n    var_4h = *0x460604 ^ &stack0xfffffffc;\n    if (Locale == 0x800) {\n        uVar1 = fcn.004241aa(&var_11ch, 4, 0x4517ac);\n        fcn.00401000(uVar1);\n    }\n    else {\n        iVar5 = (*_sym.imp.KERNEL32.dll_GetLocaleInfoA)(Locale, 3, &var_11ch, 4);\n        if (iVar5 == 0) goto code_r0x004068a3;\n    }\n    puVar2 = fcn.00423e5e();\n    uVar1 = *puVar2;\n    puVar2 = fcn.00423e5e();\n    *puVar2 = 0;\n    uVar3 = fcn.0042422b(&lpLibFileName, 0x112, 0x111, in_ECX, &var_11ch);\n    piVar4 = fcn.00423e5e();\n    if (*piVar4 == 0) {\n        puVar2 = fcn.00423e5e();\n        *puVar2 = uVar1;\n    }\n    else {\n        puVar2 = fcn.00423e5e();\n        fcn.00405d7f(*puVar2);\n    }\n    if ((uVar3 != 0xffffffff) && (uVar3 < 0x112)) {\n        (*_sym.imp.KERNEL32.dll_LoadLibraryA)(&lpLibFileName);\n    }\ncode_r0x004068a3:\n    fcn.00421e2f(var_11ch);\n    return;\n}\n",
        "token_count": 461
    },
    "004068b0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004068b0(int32_t *param_1)\n\n{\n    if ((*0x461c00 != NULL) && (*param_1 != -1)) {\n        fcn.004062ec();\n        (**0x461c00)(*param_1);\n    }\n    return;\n}\n",
        "token_count": 67
    },
    "00406a1a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00406c24)\n\nvoid fcn.00406a1a(void)\n\n{\n    code *pcVar1;\n    char cVar2;\n    code *pcVar3;\n    code *pcVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    char **in_FS_OFFSET;\n    char *arg_8h;\n    char *pcStack304;\n    char *pcStack300;\n    uint auStack288 [65];\n    uchar uStack28;\n    uchar uStack27;\n    uint32_t uStack8;\n    \n    uStack8 = *0x460604 ^ auStack288;\n    auStack288[0] = 0x58;\n    fcn.00423bfe();\n    pcVar1 = _sym.imp.KERNEL32.dll_GetModuleHandleA;\n    pcStack300 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)();\n    pcVar4 = _sym.imp.KERNEL32.dll_GetProcAddress;\n    arg_8h = pcStack300;\n    pcVar3 = (*_sym.imp.KERNEL32.dll_GetProcAddress)();\n    if (pcVar3 == NULL) {\n        iVar5 = (*_sym.imp.KERNEL32.dll_GetVersion)();\n        if (iVar5 < 0) {\n            pcStack304 = &stack0xfffffec8;\n            arg_8h = NULL;\n            iVar5 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExA)();\n            if (iVar5 == 0) {\n                iVar5 = (*_sym.imp.ADVAPI32.dll_RegQueryValueExA)();\n                if (((iVar5 == 0) && (*0x10 == 0x165)) &&\n                   (iVar5 = fcn.004242b2(),  pcVar4 = _sym.imp.KERNEL32.dll_ConvertDefaultLocale,  iVar5 == 1)) {\n                    (*_sym.imp.KERNEL32.dll_ConvertDefaultLocale)();\n                    (*pcVar4)();\n                    pcStack304 = 0x2;\n                }\n                (*_sym.imp.ADVAPI32.dll_RegCloseKey)();\n            }\n        }\n        else {\n            pcStack304 = \"ntdll.dll\";\n            iVar5 = (*pcVar1)();\n            if (iVar5 != 0) {\n                (*_sym.imp.KERNEL32.dll_EnumResourceLanguagesA)();\n            }\n        }\n    }\n    else {\n        (*pcVar3)();\n        pcVar1 = _sym.imp.KERNEL32.dll_ConvertDefaultLocale;\n        (*_sym.imp.KERNEL32.dll_ConvertDefaultLocale)();\n        (*pcVar1)();\n        arg_8h = \"GetSystemDefaultUILanguage\";\n        pcStack304 = 0x2;\n        pcVar4 = (*pcVar4)();\n        if (pcVar4 != NULL) {\n            (*pcVar4)();\n            (*pcVar1)();\n            (*pcVar1)();\n            pcStack304 = 0x4;\n        }\n    }\n    iVar5 = pcStack304 * 4;\n    pcStack304 = pcStack304 + 1;\n    *(&stack0xfffffeac + iVar5) = 0x800;\n    uStack27 = 0;\n    uStack28 = 0;\n    iVar5 = (*_sym.imp.KERNEL32.dll_GetModuleFileNameA)();\n    if (iVar5 != 0) {\n        fcn.004215c0();\n        fcn.004061d9();\n        cVar2 = fcn.00406289();\n        if (cVar2 != '\\0') {\n            fcn.004062bf();\n        }\n        iVar5 = 0;\n        if (0 < pcStack304) {\n            do {\n                iVar6 = fcn.004067e3(*(&stack0xfffffeac + iVar5 * 4));\n                if (iVar6 != 0) break;\n                iVar5 = iVar5 + 1;\n            } while (iVar5 < pcStack304);\n        }\n        fcn.004068b0();\n    }\n    *in_FS_OFFSET = pcStack300;\n    fcn.00421e2f(arg_8h);\n    return;\n}\n",
        "token_count": 880
    },
    "00407000": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00407000(int32_t arg_8h, uint32_t arg_ch, int32_t arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    code **ppcVar4;\n    int32_t *in_ECX;\n    uint32_t arg_ch_00;\n    int32_t *piVar5;\n    \n    if (arg_ch == 0xfffffffe) {\n        iVar1 = fcn.00409b0a();\n        if (*(iVar1 + 0x3c) != 0) goto code_r0x0040701e;\n    }\n    else {\n        if (arg_ch != 0xfffffffd) {\n            if (arg_ch != 0xffffffff) {\n                arg_ch_00 = arg_ch >> 0x10;\n                arg_ch = arg_ch & 0xffff;\n                if (arg_ch_00 != 0) goto code_r0x004070d4;\n            }\n            arg_ch_00 = 0x111;\ncode_r0x004070d4:\n            ppcVar4 = (**(*in_ECX + 0x28))();\n            while( true ) {\n                if (*ppcVar4 == NULL) {\n                    return 0;\n                }\n                iVar1 = fcn.0040b233(ppcVar4[1], arg_ch_00, arg_ch, arg_8h);\n                if (iVar1 != 0) break;\n                ppcVar4 = (**ppcVar4)();\n            }\n            iVar1 = fcn.00406ec8(in_ECX, arg_8h, arg_ch, *(iVar1 + 0x14), arg_10h, *(iVar1 + 0x10), arg_14h);\n            return iVar1;\n        }\n        arg_ch = 0;\n        if (arg_10h != 0) {\n            iVar1 = *(arg_10h + 0x30);\n            puVar2 = (**(*in_ECX + 0x2c))();\n            do {\n                if (puVar2 == NULL) {\n                    return arg_ch;\n                }\n                if (arg_ch != 0) {\n                    return arg_ch;\n                }\n                piVar5 = puVar2[1];\n                while (((piVar5[1] != 0 && (piVar5[2] != 0)) && (arg_ch == 0))) {\n                    if (arg_8h == piVar5[1]) {\n                        if (iVar1 == 0) {\n                            if (*piVar5 == 0) {\ncode_r0x0040709b:\n                                *(arg_10h + 4) = piVar5[2];\n                                arg_ch = 1;\n                            }\n                        }\n                        else if ((*piVar5 != 0) && (iVar3 = fcn.00406eb0(iVar1, *piVar5),  iVar3 != 0))\n                        goto code_r0x0040709b;\n                    }\n                    piVar5 = piVar5 + 3;\n                }\n                puVar2 = *puVar2;\n            } while( true );\n        }\n    }\n    fcn.00405a76();\ncode_r0x0040701e:\n    iVar1 = fcn.00409b0a();\n    iVar1 = (**(**(iVar1 + 0x3c) + 4))();\n    return iVar1;\n}\n",
        "token_count": 751
    },
    "00407715": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint fcn.00407715(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    uint uVar3;\n    int32_t *piVar4;\n    \n    iVar1 = fcn.00409b3d();\n    if (((*(iVar1 + 4) != 0) && (*param_1 == 0)) && (iVar1 = fcn.0040765d(param_1),  iVar1 != 0)) {\n        return 1;\n    }\n    piVar2 = fcn.004067ae();\n    piVar4 = piVar2;\n    if (piVar2 != NULL) {\n        piVar4 = piVar2[8];\n    }\n    iVar1 = fcn.0040d085(piVar4, param_1);\n    if (iVar1 == 0) {\n        if (piVar2 != NULL) {\n            fcn.0040cd23(*param_1);\n            piVar4 = fcn.0040e0c2();\n            if (piVar4 != piVar2) {\n                uVar3 = (**(*piVar2 + 0x100))(param_1);\n                return uVar3;\n            }\n        }\n        uVar3 = 0;\n    }\n    else {\n        uVar3 = 1;\n    }\n    return uVar3;\n}\n",
        "token_count": 299
    },
    "00407a98": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00407a98(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    iVar1 = fcn.00409b0a();\n    if (*(iVar1 + 0x14) == '\\0') {\n        iVar1 = fcn.004095e9();\n        uVar2 = (*_sym.imp.KERNEL32.dll_GetCurrentThreadId)();\n        uVar2 = (*_sym.imp.USER32.dll_SetWindowsHookExA)(0xffffffff, 0x407904, 0, uVar2);\n        *(iVar1 + 0x2c) = uVar2;\n    }\n    return;\n}\n",
        "token_count": 140
    },
    "0040807a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.0040807a(void)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    uint32_t unaff_EBX;\n    int32_t unaff_EBP;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x24) != 2) {\n        uVar1 = *(unaff_EBP + -0x1c) == unaff_EBX;\n        if (uVar1 == unaff_EBX) {\n            uVar2 = 0;\n        }\n        else {\n            uVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        }\n        fcn.0040932d();\n        if (uVar1 != unaff_EBX) {\n            (*_sym.imp.KERNEL32.dll_SetLastError)(uVar2);\n        }\n    }\n    return;\n}\n",
        "token_count": 197
    },
    "004080af": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.004080af(uint param_1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    \n    piVar1 = fcn.004067ae();\n    if (piVar1 != NULL) {\n        iVar2 = (**(*piVar1 + 0x120))();\n        if ((iVar2 != 0) && (piVar1[0x20] != NULL)) {\n            (**(*piVar1[0x20] + 100))(param_1);\n        }\n    }\n    return;\n}\n",
        "token_count": 119
    },
    "0040818e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.0040818e(int32_t param_1, uint param_2, uint32_t param_3, int32_t param_4)\n\n{\n    int32_t hWnd;\n    int32_t iVar1;\n    int32_t *piVar2;\n    uchar *lpCaption;\n    int32_t *arg_8h;\n    int32_t iStack280;\n    int32_t iStack276;\n    int32_t iStack272;\n    uchar auStack268 [108];\n    uchar auStack160 [151];\n    uchar uStack9;\n    uint32_t uStack8;\n    \n    uStack8 = *0x460604 ^ auStack160;\n    fcn.004080af(0);\n    arg_8h = &iStack272;\n    hWnd = fcn.004080e3(0);\n    if (hWnd != iStack272) {\n        (*_sym.imp.USER32.dll_EnableWindow)(hWnd, 1);\n    }\n    iStack280 = 0;\n    (*_sym.imp.USER32.dll_GetWindowThreadProcessId)(hWnd, &iStack280);\n    if ((((hWnd == 0) || (iVar1 = (*_sym.imp.KERNEL32.dll_GetCurrentProcessId)(),  iStack280 != iVar1)) ||\n        (piVar2 = (*_sym.imp.USER32.dll_SendMessageA)(hWnd, 0x376, 0, 0),  piVar2 == NULL)) &&\n       (piVar2 = NULL,  param_1 != 0)) {\n        piVar2 = param_1 + 0x78;\n    }\n    iStack276 = 0;\n    if ((piVar2 != NULL) && (iStack276 = *piVar2,  param_4 != 0)) {\n        *piVar2 = param_4 + 0x30000;\n    }\n    if ((param_3 & 0xf0) == 0) {\n        if ((param_3 & 0xf) < 2) {\n            param_3 = param_3 | 0x30;\n        }\n        else if ((param_3 & 0xf) - 3 < 2) {\n            param_3 = param_3 | 0x20;\n        }\n    }\n    auStack268[0] = 0;\n    if (param_1 == 0) {\n        lpCaption = auStack268;\n        iVar1 = (*_sym.imp.KERNEL32.dll_GetModuleFileNameA)(0, lpCaption, 0x104);\n        if (iVar1 == 0x104) {\n            uStack9 = 0;\n        }\n    }\n    else {\n        lpCaption = *(param_1 + 0x50);\n    }\n    fcn.00408018(hWnd, param_2, lpCaption, param_3);\n    if (piVar2 != NULL) {\n        *piVar2 = iStack276;\n    }\n    if (iStack272 != 0) {\n        (*_sym.imp.USER32.dll_EnableWindow)(iStack272, 1);\n    }\n    fcn.004080af(1);\n    fcn.00421e2f(arg_8h);\n    return;\n}\n",
        "token_count": 690
    },
    "0040841d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "contain loop"
        ],
        "decompiled_code": "\nuint32_t fcn.0040841d(int32_t param_1, int32_t param_2)\n\n{\n    uint16_t *puVar1;\n    uint16_t uVar2;\n    \n    if (param_2 == 0) {\n        puVar1 = param_1 + 0x12;\n    }\n    else {\n        puVar1 = param_1 + 0x18;\n    }\n    if (*puVar1 == 0xffff) {\n        puVar1 = puVar1 + 2;\n    }\n    else {\n        do {\n            uVar2 = *puVar1;\n            puVar1 = puVar1 + 1;\n        } while (uVar2 != 0);\n    }\n    if (*puVar1 == 0xffff) {\n        puVar1 = puVar1 + 2;\n    }\n    else {\n        do {\n            uVar2 = *puVar1;\n            puVar1 = puVar1 + 1;\n        } while (uVar2 != 0);\n    }\n    uVar2 = *puVar1;\n    if ((uVar2 != 0) && (param_2 == 0)) {\n        uVar2 = uVar2 - 2;\n    }\n    return puVar1 + uVar2 + 5 & 0xfffffffc;\n}\n",
        "token_count": 287
    },
    "00408a44": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00408a44(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint unaff_ESI;\n    uint uStack8;\n    \n    if (*(param_1 + 0x10) == 0) {\n        uStack8 = 0xc;\n        iVar2 = fcn.00413b8a(param_1 + 0x14, *(param_1 + 0x18));\n        iVar1 = *(param_1 + 0x18);\n        puVar3 = iVar2 + -8 + iVar1 * 0xc;\n        while (iVar1 = iVar1 + -1,  -1 < iVar1) {\n            *puVar3 = *(param_1 + 0x10);\n            *(param_1 + 0x10) = puVar3;\n            puVar3 = puVar3 + -3;\n        }\n    }\n    puVar3 = *(param_1 + 0x10);\n    if (puVar3 == NULL) {\n        puVar3 = fcn.00405a76();\n    }\n    *(param_1 + 0x10) = *puVar3;\n    puVar3[1] = uStack8;\n    *puVar3 = unaff_ESI;\n    *(param_1 + 0xc) = *(param_1 + 0xc) + 1;\n    return;\n}\n",
        "token_count": 319
    },
    "00408aa2": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00408aa2(int32_t arg_8h)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    int32_t iVar5;\n    \n    iVar3 = arg_8h;\n    if (*(arg_8h + 0x4c) != 0) {\n        arg_8h = *(*(arg_8h + 0x4c) + 0x44);\n        while (arg_8h != 0) {\n            piVar4 = fcn.00408771(&arg_8h);\n            iVar2 = *piVar4;\n            if (*(iVar2 + 4) != 0) {\n                iVar5 = *(*(iVar2 + 4) + 0x94);\n                while (iVar5 != 0) {\n                    fcn.004169a0(*(iVar2 + 4));\n                    if (*(iVar5 + 4) != 0) {\n                        iVar5 = fcn.0040fac1(*(iVar5 + 4));\n                        fcn.00418cfb(*(iVar5 + 0x50));\n                    }\n                    iVar5 = fcn.004169a9();\n                }\n                iVar1 = *(*(iVar2 + 4) + 0x98);\n                if (iVar1 != 0) {\n                    iVar5 = fcn.0040fac1(iVar1);\n                    (**(**(iVar5 + 0x50) + 0xb4))();\n                    *(*(iVar2 + 4) + 0x98) = *(iVar5 + 0x50);\n                    (**(**(*(iVar5 + 0x50) + 0x90) + 8))(*(iVar2 + 4), 1);\n                }\n            }\n        }\n        arg_8h = *(*(iVar3 + 0x4c) + 0x44);\n        while (arg_8h != 0) {\n            piVar4 = fcn.00408771(&arg_8h);\n            iVar3 = *(*piVar4 + 4);\n            if ((iVar3 != 0) && (*(iVar3 + 0x90) != 0)) {\n                (**(**(iVar3 + 0x90) + 0xc))();\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 512
    },
    "00408d93": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t * __thiscall fcn.00408d93(int32_t *param_1, int32_t *param_2)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    \n    iVar2 = *param_2;\n    piVar1 = iVar2 + -0x10;\n    piVar3 = *param_1 + -0x10;\n    if (piVar1 != piVar3) {\n        if ((*(*param_1 + -4) < 0) || (*piVar1 != *piVar3)) {\n            fcn.00404460(iVar2, *(iVar2 + -0xc));\n        }\n        else {\n            iVar2 = fcn.004040f0(piVar1);\n            fcn.004028b0();\n            *param_1 = iVar2 + 0x10;\n        }\n    }\n    return param_1;\n}\n",
        "token_count": 207
    },
    "00408e34": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00408e34(uint param_1, uint param_2, int32_t param_3, uint *param_4, int16_t param_5, int32_t *param_6, \n                 uint32_t param_7, uint *param_8)\n\n{\n    uint16_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    int32_t *in_FS_OFFSET;\n    uint uStack172;\n    uint uStack168;\n    uint uStack164;\n    uchar *in_stack_ffffff74;\n    int32_t iStack92;\n    int32_t iStack80;\n    int32_t iStack76;\n    uint uStack72;\n    uint32_t uStack68;\n    int32_t iStack64;\n    uint *puStack60;\n    uint uStack56;\n    uint uStack52;\n    int32_t iStack48;\n    int32_t iStack44;\n    int32_t iStack40;\n    uint *puStack36;\n    int32_t iStack32;\n    int32_t iStack28;\n    uchar auStack24 [16];\n    uint32_t uStack8;\n    \n    uStack8 = *0x460604 ^ &stack0xffffffb0;\n    iStack80 = 0x50;\n    fcn.00423bfe();\n    uStack52 = param_1;\n    uStack72 = param_2;\n    puStack60 = param_8;\n    puStack36 = param_4 + 0x12;\n    if (param_3 != 0) {\n        puStack36 = param_4 + 6;\n        param_4 = &stack0xffffff90;\n    }\n    (*_sym.imp.USER32.dll_MapDialogRect)();\n    iStack44 = 0;\n    if (3 < param_7) {\n        iVar3 = *param_6;\n        param_7 = param_7 - 4;\n        param_6 = param_6 + 1;\n        if (iVar3 != 0) {\n            iStack44 = (*_sym.imp.OLEAUT32.dll_SysReAllocStringLen)();\n            param_6 = param_6 + iVar3 * 2;\n            param_7 = param_7 + iVar3 * -2;\n        }\n    }\n    iStack48 = 0;\n    iStack92 = fcn.00410877();\n    fcn.00403130();\n    uStack68 = 0;\n    iStack64 = 0;\n    uStack56 = 0;\n    if ((param_5 == 0x37a) || (param_5 == 0x37b)) {\n        iStack80 = *param_6;\n        iStack32 = iStack80 + -0xc;\n        param_6 = param_6 + 3;\n        while (iStack32 != 0) {\n            iStack76 = *param_6;\n            iStack32 = iStack32 + -6;\n            uVar1 = *(param_6 + 1);\n            piVar4 = param_6 + 6;\n            if (iStack76 == -0x7ffeffff) {\n                iStack64 = *piVar4;\n                uStack56 = *(param_6 + 10);\n                iStack92 = param_6 + 0x16;\n                fcn.00404860();\n                iStack32 = iStack32 + (-0x11 - *(iStack40 + -0xc));\n                param_6 = param_6 + *(iStack40 + -0xc) + 0x17;\n                uStack68 = uVar1;\n            }\n            else {\n                iVar2 = fcn.0040594d();\n                iVar3 = iStack48;\n                param_6 = piVar4;\n                if (iVar2 == 0) {\n                    iStack48 = 0;\n                }\n                else {\n                    iStack48 = fcn.0041697a();\n                    iStack92 = iVar3;\n                }\n            }\n        }\n        param_7 = param_7 - iStack80;\n        param_5 = param_5 + -4;\n    }\n    if (*puStack36 == 0x7b) {\n        puStack36 = (*_sym.imp.ole32.dll_CLSIDFromString)();\n    }\n    else {\n        puStack36 = (*_sym.imp.ole32.dll_CLSIDFromProgID)();\n    }\n    fcn.0041c545(param_6, param_7, 0);\n    iStack28 = 0;\n    if ((-1 < puStack36) && (iVar3 = fcn.004148ad(1),  iVar3 != 0)) {\n        in_stack_ffffff74 = &stack0xffffff80;\n        iVar3 = fcn.00414e4a(0, &stack0xffffffe8, 0, *param_4, in_stack_ffffff74, *(param_4 + 4), \n                             -(param_5 != 0x378) & &stack0xffffff54, param_5 == 0x377, iStack44, &stack0xffffffe4);\n        if (iVar3 != 0) {\n            uStack164 = 0x409082;\n            fcn.00415f9c(1);\n            uStack164 = 0x13;\n            uStack168 = 0;\n            uStack172 = 0;\n            (*_sym.imp.USER32.dll_SetWindowPos)(*(iStack28 + 0x24), uStack72, 0, 0);\n            *(iStack28 + 0x94) = iStack48;\n            fcn.00408d93();\n            *(iStack28 + 0x98) = uStack68;\n            *(iStack28 + 0x9c) = iStack64;\n            *(iStack28 + 0xa0) = uStack56;\n        }\n    }\n    if (iStack44 != 0) {\n        uStack164 = 0x4090e9;\n        (*_sym.imp.OLEAUT32.dll_SysStringLen)();\n    }\n    if (iStack28 == 0) {\n        *puStack60 = 0;\n    }\n    else {\n        *puStack60 = *(iStack28 + 0x24);\n    }\n    fcn.0041c8a7();\n    fcn.004028b0();\n    *in_FS_OFFSET = iStack92;\n    fcn.00421e2f(in_stack_ffffff74);\n    return;\n}\n",
        "token_count": 1424
    },
    "00409290": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "link function at runtime on Windows"
        ],
        "decompiled_code": "\nvoid fcn.00409290(void)\n\n{\n    code *pcVar1;\n    char *pcStack12;\n    \n    if (*0x461c28 == 0) {\n        *0x461c28 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)();\n        pcVar1 = _sym.imp.KERNEL32.dll_GetProcAddress;\n        if (*0x461c28 == 0) {\n            pcStack12 = 0x45f468;\n            fcn.00421cb9(&pcStack12, 0x459604);\n            pcVar1 = swi(3);\n            (*pcVar1)();\n            return;\n        }\n        pcStack12 = \"CreateActCtxW\";\n        *0x461c18 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(*0x461c28);\n        *0x461c1c = (*pcVar1)(*0x461c28, \"ReleaseActCtx\");\n        *0x461c20 = (*pcVar1)(*0x461c28, \"ActivateActCtx\");\n        *0x461c24 = (*pcVar1)(*0x461c28, \"DeactivateActCtx\");\n    }\n    return;\n}\n",
        "token_count": 256
    },
    "0040933d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuchar fcn.0040933d(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    uchar uVar2;\n    \n    if (param_2 == 0) {\n        fcn.00405a76();\n    }\n    if (*0x461c20 == 0) {\n        uVar2 = 2;\n    }\n    else {\n        iVar1 = fcn.0040931d(param_1, param_2);\n        uVar2 = iVar1 != 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 123
    },
    "0040936d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040936d(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint *puVar3;\n    uint arg_8h;\n    uint uStack564;\n    uint uStack560;\n    uchar *puStack556;\n    uint uStack544;\n    uint uStack536;\n    uchar auStack532 [96];\n    uchar auStack436 [424];\n    int16_t iStack12;\n    ushort uStack10;\n    uint32_t uStack8;\n    \n    uStack8 = *0x460604 ^ auStack436;\n    fcn.00409290();\n    uVar2 = *(param_1 + 8);\n    uStack10 = 0;\n    iStack12 = 0;\n    arg_8h = 0x105;\n    iVar1 = (*_sym.imp.KERNEL32.dll_GetModuleFileNameW)(uVar2, auStack532);\n    if (iVar1 != 0) {\n        if (iStack12 == 0) {\n            puStack556 = auStack532;\n            puVar3 = &uStack564;\n            uStack564 = 0x20;\n            uStack560 = 0x88;\n            uStack544 = 2;\n            uStack536 = uVar2;\n            iVar1 = fcn.004092fe(puVar3);\n            *(param_1 + 0x80) = iVar1;\n            if (iVar1 == -1) {\n                uStack544 = 3;\n                uVar2 = fcn.004092fe(&uStack564);\n                *(param_1 + 0x80) = uVar2;\n            }\n            if (*(param_1 + 0x80) == -1) {\n                uStack544 = 1;\n                iVar1 = fcn.004092fe(puVar3, &uStack564);\n                *(param_1 + 0x80) = iVar1;\n                if (iVar1 == -1) {\n                    *(param_1 + 0x80) = 0;\n                }\n            }\n        }\n        else {\n            (*_sym.imp.KERNEL32.dll_SetLastError)(0x6f);\n        }\n    }\n    fcn.00421e2f(arg_8h);\n    return;\n}\n",
        "token_count": 496
    },
    "004094dd": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004094dd(code **param_1)\n\n{\n    uint uVar1;\n    code *pcVar2;\n    \n    *param_1 = vtable.AFX_MODULE_THREAD_STATE.0;\n    if (param_1[0xf] != NULL) {\n        (**(*param_1[0xf] + 0x13c))();\n    }\n    fcn.0040597d(param_1[0x12]);\n    if (param_1[5] != NULL) {\n        (***param_1[5])(1);\n    }\n    if (param_1[6] != NULL) {\n        (***param_1[6])(1);\n    }\n    if (param_1[7] != NULL) {\n        (***param_1[7])(1);\n    }\n    if (param_1[8] != NULL) {\n        (***param_1[8])(1);\n    }\n    if (param_1[9] != NULL) {\n        (***param_1[9])(1);\n    }\n    pcVar2 = param_1[0xe];\n    if (pcVar2 != NULL) {\n        while (*(pcVar2 + 0xc) != 0) {\n            uVar1 = fcn.0041cc0b();\n            fcn.0040597d(uVar1);\n            pcVar2 = param_1[0xe];\n        }\n    }\n    if (param_1[0xc] != NULL) {\n        (**(*param_1[0xc] + 4))(1);\n    }\n    if (param_1[0xd] != NULL) {\n        (**(*param_1[0xd] + 4))(1);\n    }\n    if (param_1[0xe] != NULL) {\n        (**(*param_1[0xe] + 4))(1);\n    }\n    return;\n}\n",
        "token_count": 407
    },
    "004096c8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004096c8(code **param_1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t **ppiVar3;\n    \n    *param_1 = vtable.CDllIsolationWrapperBase.0;\n    if (*(param_1 + 2) != '\\0') {\n        (*_sym.imp.KERNEL32.dll_FreeLibrary)(param_1[1]);\n    }\n    ppiVar3 = param_1[3] + -0x10;\n    piVar1 = param_1[3] + -4;\n    LOCK();\n    iVar2 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar2 == 1 || iVar2 + -1 < 0) {\n        (**(**ppiVar3 + 4))(ppiVar3);\n    }\n    return;\n}\n",
        "token_count": 194
    },
    "00409b56": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.00409b56(int32_t param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    iVar1 = fcn.00409b0a();\n    if ((*(iVar1 + 0x7c) == 0) || (*(param_2 + 0x80) == -1)) {\n        *(param_1 + 4) = 0;\n    }\n    else {\n        uVar2 = fcn.0040931d(*(param_2 + 0x80), param_1);\n        *(param_1 + 4) = uVar2;\n    }\n    return param_1;\n}\n",
        "token_count": 156
    },
    "0040a29b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0040a29b(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t unaff_EBP;\n    uint var_4h;\n    \n    fcn.00423bfe(0);\n    iVar1 = fcn.00409b3d();\n    if ((*(iVar1 + 0x1c) == 0) && (*(unaff_EBP + 8) != 0)) {\n        uVar2 = fcn.0040593b(0x41278f);\n        iVar3 = fcn.0040594d(0x60);\n        *(unaff_EBP + 8) = iVar3;\n        *(unaff_EBP + -4) = 0;\n        if (iVar3 == 0) {\n            uVar4 = 0;\n        }\n        else {\n            uVar4 = fcn.00412b5a(0x451b70, 0x40a230, 0x40b680, 4, 2);\n        }\n        *(unaff_EBP + -4) = 0xffffffff;\n        *(iVar1 + 0x1c) = uVar4;\n        fcn.0040593b(uVar2);\n    }\n    fcn.00423cd6();\n    return;\n}\n",
        "token_count": 320
    },
    "0040a381": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040a381(code **param_1)\n\n{\n    uint uVar1;\n    \n    *param_1 = vtable.CDC.0;\n    if (param_1[1] != NULL) {\n        uVar1 = fcn.0040a350();\n        (*_sym.imp.GDI32.dll_DeleteDC)(uVar1);\n    }\n    return;\n}\n",
        "token_count": 86
    },
    "0040a54c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0040a54c(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t unaff_EBP;\n    uint var_4h;\n    \n    fcn.00423bfe(0);\n    iVar1 = fcn.00409b3d();\n    if ((*(iVar1 + 0x20) == 0) && (*(unaff_EBP + 8) != 0)) {\n        uVar2 = fcn.0040593b(0x41278f);\n        iVar3 = fcn.0040594d(0x60);\n        *(unaff_EBP + 8) = iVar3;\n        *(unaff_EBP + -4) = 0;\n        if (iVar3 == 0) {\n            uVar4 = 0;\n        }\n        else {\n            uVar4 = fcn.00412b5a(0x451be0, 0x40a24c, 0x40b680, 4, 1);\n        }\n        *(unaff_EBP + -4) = 0xffffffff;\n        *(iVar1 + 0x20) = uVar4;\n        fcn.0040593b(uVar2);\n    }\n    fcn.00423cd6();\n    return;\n}\n",
        "token_count": 319
    },
    "0040a621": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040a621(int32_t param_1)\n\n{\n    uint uVar1;\n    \n    if (*(param_1 + 4) == 0) {\n        return 0;\n    }\n    uVar1 = fcn.0040a5f7();\n    uVar1 = (*_sym.imp.GDI32.dll_DeleteObject)(uVar1);\n    return uVar1;\n}\n",
        "token_count": 90
    },
    "0040a7b5": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.0040a7b5(void)\n\n{\n    uint *arg_8h;\n    uint lpVersionInformation;\n    uint var_94h;\n    uint var_88h;\n    uint32_t var_4h;\n    \n    var_4h = *0x460604 ^ &stack0xfffffffc;\n    fcn.004215c0(&var_94h, 0, 0x90);\n    arg_8h = &lpVersionInformation;\n    lpVersionInformation = 0x94;\n    (*_sym.imp.KERNEL32.dll_GetVersionExA)();\n    fcn.00421e2f(arg_8h);\n    return;\n}\n",
        "token_count": 145
    },
    "0040b01e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint __cdecl fcn.0040b01e(uint noname_0, int32_t arg_ch, uint32_t arg_10h, uint noname_3, int32_t arg_18h)\n\n{\n    bool bVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint var_1h;\n    \n    uVar3 = 0;\n    if (arg_10h != 0) {\n        do {\n            bVar1 = false;\n            uVar4 = 0;\n            do {\n                iVar2 = (*_sym.imp.KERNEL32.dll_lstrcmpW)(*(arg_ch + uVar3 * 4), *(uVar4 + 0x45f928));\n                if (iVar2 == 0) {\n                    bVar1 = true;\n                    *(arg_18h + uVar3 * 4) = *(uVar4 + 0x45f8d8);\n                }\n                uVar4 = uVar4 + 4;\n            } while (uVar4 < 0x4c);\n            if (!bVar1) {\n                return 0x80020006;\n            }\n            uVar3 = uVar3 + 1;\n        } while (uVar3 < arg_10h);\n    }\n    return 0;\n}\n",
        "token_count": 306
    },
    "0040b233": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.0040b233(int32_t *arg_8h, int32_t arg_ch, int32_t arg_10h, uint32_t arg_14h)\n\n{\n    while( true ) {\n        if (arg_8h[4] == 0) {\n            return NULL;\n        }\n        if ((((arg_ch == *arg_8h) && (arg_10h == arg_8h[1])) && (arg_8h[2] <= arg_14h)) &&\n           (arg_14h < arg_8h[3] || arg_14h == arg_8h[3])) break;\n        arg_8h = arg_8h + 6;\n    }\n    return arg_8h;\n}\n",
        "token_count": 168
    },
    "0040b735": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.0040b735(void)\n\n{\n    uint uVar1;\n    int32_t unaff_EBP;\n    bool bVar2;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x24) != 2) {\n        bVar2 = *(unaff_EBP + -0x1c) != 0;\n        if (bVar2) {\n            uVar1 = 0;\n        }\n        else {\n            uVar1 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        }\n        fcn.0040932d(0, *(unaff_EBP + -0x20));\n        if (!bVar2) {\n            (*_sym.imp.KERNEL32.dll_SetLastError)(uVar1);\n        }\n    }\n    return;\n}\n",
        "token_count": 187
    },
    "0040b7cb": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.0040b7cb(void)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    uint32_t unaff_EBX;\n    int32_t unaff_EBP;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x24) != 2) {\n        uVar1 = *(unaff_EBP + -0x1c) == unaff_EBX;\n        if (uVar1 == unaff_EBX) {\n            uVar2 = 0;\n        }\n        else {\n            uVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        }\n        fcn.0040932d();\n        if (uVar1 != unaff_EBX) {\n            (*_sym.imp.KERNEL32.dll_SetLastError)(uVar2);\n        }\n    }\n    return;\n}\n",
        "token_count": 198
    },
    "0040b85f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.0040b85f(void)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    uint32_t unaff_EBX;\n    int32_t unaff_EBP;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x24) != 2) {\n        uVar1 = *(unaff_EBP + -0x1c) == unaff_EBX;\n        if (uVar1 == unaff_EBX) {\n            uVar2 = 0;\n        }\n        else {\n            uVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        }\n        fcn.0040932d();\n        if (uVar1 != unaff_EBX) {\n            (*_sym.imp.KERNEL32.dll_SetLastError)(uVar2);\n        }\n    }\n    return;\n}\n",
        "token_count": 198
    },
    "0040b90e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.0040b90e(void)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    uint32_t unaff_EBX;\n    int32_t unaff_EBP;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x24) != 2) {\n        uVar1 = *(unaff_EBP + -0x1c) == unaff_EBX;\n        if (uVar1 == unaff_EBX) {\n            uVar2 = 0;\n        }\n        else {\n            uVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        }\n        fcn.0040932d();\n        if (uVar1 != unaff_EBX) {\n            (*_sym.imp.KERNEL32.dll_SetLastError)(uVar2);\n        }\n    }\n    return;\n}\n",
        "token_count": 198
    },
    "0040b99c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.0040b99c(void)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    uint32_t unaff_EBX;\n    int32_t unaff_EBP;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x24) != 2) {\n        uVar1 = *(unaff_EBP + -0x1c) == unaff_EBX;\n        if (uVar1 == unaff_EBX) {\n            uVar2 = 0;\n        }\n        else {\n            uVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        }\n        fcn.0040932d();\n        if (uVar1 != unaff_EBX) {\n            (*_sym.imp.KERNEL32.dll_SetLastError)(uVar2);\n        }\n    }\n    return;\n}\n",
        "token_count": 198
    },
    "0040ca81": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040ca81(int32_t param_1)\n\n{\n    int32_t iVar1;\n    \n    if (*(param_1 + 4) == 0) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(*(param_1 + 0xc));\n        *(param_1 + 4) = iVar1;\n        if (iVar1 == 0) {\n            iVar1 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(*(param_1 + 0xc));\n            *(param_1 + 4) = iVar1;\n            *(param_1 + 8) = iVar1 != 0;\n        }\n    }\n    return *(param_1 + 4);\n}\n",
        "token_count": 160
    },
    "0040cab3": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0040cab3(int32_t param_1, uint *param_2)\n\n{\n    uint uVar1;\n    \n    if (*(param_1 + 0x10) == 0) {\n        uVar1 = fcn.0040ca81(\"InitCommonControls\");\n        uVar1 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(uVar1);\n        *(param_1 + 0x10) = uVar1;\n    }\n    *param_2 = *(param_1 + 0x10);\n    return;\n}\n",
        "token_count": 125
    },
    "0040cb40": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.0040cb40(void)\n\n{\n    int32_t unaff_EBP;\n    uint var_20h;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x20) != 2) {\n        fcn.0040932d(0, *(unaff_EBP + -0x1c));\n    }\n    return;\n}\n",
        "token_count": 83
    },
    "0040cb51": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0040cb51(int32_t param_1, uint *param_2)\n\n{\n    uint uVar1;\n    \n    if (*(param_1 + 0x14) == 0) {\n        uVar1 = fcn.0040ca81(\"InitCommonControlsEx\");\n        uVar1 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(uVar1);\n        *(param_1 + 0x14) = uVar1;\n    }\n    *param_2 = *(param_1 + 0x14);\n    return;\n}\n",
        "token_count": 126
    },
    "0040cbf0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.0040cbf0(void)\n\n{\n    uint uVar1;\n    int32_t unaff_EBP;\n    bool bVar2;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x24) != 2) {\n        bVar2 = *(unaff_EBP + -0x1c) != 0;\n        if (bVar2) {\n            uVar1 = 0;\n        }\n        else {\n            uVar1 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        }\n        fcn.0040932d(0, *(unaff_EBP + -0x20));\n        if (!bVar2) {\n            (*_sym.imp.KERNEL32.dll_SetLastError)(uVar1);\n        }\n    }\n    return;\n}\n",
        "token_count": 188
    },
    "0040ccaf": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0040ccaf(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t unaff_EBP;\n    uint var_4h;\n    \n    fcn.00423bfe(0);\n    iVar1 = fcn.00409b3d();\n    if ((*(iVar1 + 0x14) == 0) && (*(unaff_EBP + 8) != 0)) {\n        uVar2 = fcn.0040593b(0x41278f);\n        iVar3 = fcn.0040594d(0x60);\n        *(unaff_EBP + 8) = iVar3;\n        *(unaff_EBP + -4) = 0;\n        if (iVar3 == 0) {\n            uVar4 = 0;\n        }\n        else {\n            uVar4 = fcn.00412b5a(0x451f48, 0x40ca5a, 0x40b680, 0x20, 1);\n        }\n        *(unaff_EBP + -4) = 0xffffffff;\n        *(iVar1 + 0x14) = uVar4;\n        fcn.0040593b(uVar2);\n    }\n    fcn.00423cd6();\n    return;\n}\n",
        "token_count": 320
    },
    "0040cdcb": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint fcn.0040cdcb(void)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint uStack16;\n    \n    iVar3 = fcn.00412058(0x405a90);\n    if (iVar3 == 0) {\n        uStack16 = 0x45f468;\n        fcn.00421cb9(&stack0xfffffff0, 0x459604);\n        pcVar1 = swi(3);\n        uVar2 = (*pcVar1)();\n        return uVar2;\n    }\n    iVar4 = fcn.00409b0a();\n    if ((*(iVar4 + 0x14) != '\\0') && (*(iVar3 + 0x28) != 0)) {\n        uStack16 = 0x40cdff;\n        (*_sym.imp.USER32.dll_UnhookWindowsHookEx)();\n        *(iVar3 + 0x28) = 0;\n    }\n    if (*(iVar3 + 0x14) != 0) {\n        *(iVar3 + 0x14) = 0;\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 263
    },
    "0040ce51": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040ce51(int32_t *param_1)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    uint var_30h;\n    uint var_2ch;\n    int32_t var_28h;\n    int32_t var_24h;\n    \n    iVar2 = fcn.004074ed();\n    if (iVar2 == 0) goto code_r0x0040ce9c;\n    if (*(iVar2 + 0x20) == param_1) {\n        iVar3 = fcn.00409b0a();\n        if (*(iVar3 + 0x14) == '\\0') {\n            iVar3 = fcn.00409b0a();\n            if (iVar2 == *(iVar3 + 4)) {\n                iVar3 = fcn.004128f0();\n                if (iVar3 == 0) goto code_r0x0040ce91;\n            }\n            fcn.004065c4(0);\n        }\ncode_r0x0040ce91:\n        *(iVar2 + 0x20) = 0;\n    }\n    if (*(iVar2 + 0x24) == param_1) {\n        *(iVar2 + 0x24) = 0;\n    }\ncode_r0x0040ce9c:\n    if (param_1[0x12] != NULL) {\n        (**(*param_1[0x12] + 0x50))();\n        param_1[0x12] = 0;\n    }\n    if (param_1[0x13] != NULL) {\n        (**(*param_1[0x13] + 4))(1);\n    }\n    param_1[0x13] = 0;\n    if ((*(param_1 + 0xf) & 1) != 0) {\n        iVar2 = fcn.00409b3d();\n        iVar2 = *(iVar2 + 0x3c);\n        if ((iVar2 != 0) && (*(iVar2 + 0x20) != 0)) {\n            fcn.004215c0(&var_30h, 0, 0x30);\n            var_28h = param_1[8];\n            var_30h = 0x28;\n            var_2ch = 1;\n            var_24h = var_28h;\n            (*_sym.imp.USER32.dll_SendMessageA)(*(iVar2 + 0x20), 0x405, 0, &var_30h);\n        }\n    }\n    pcVar1 = _sym.imp.USER32.dll_GetWindowLongA;\n    iVar2 = (*_sym.imp.USER32.dll_GetWindowLongA)(param_1[8], 0xfffffffc);\n    fcn.0040cc7f();\n    iVar3 = (*pcVar1)(param_1[8], 0xfffffffc);\n    if (iVar3 == iVar2) {\n        piVar4 = (**(*param_1 + 0xf0))();\n        if (*piVar4 != 0) {\n            (*_sym.imp.USER32.dll_SetWindowLongA)(param_1[8], 0xfffffffc, *piVar4);\n        }\n    }\n    fcn.0040cd9d();\n    (**(*param_1 + 0x114))();\n    return;\n}\n",
        "token_count": 743
    },
    "0040d18a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.0040d18a(uint arg_8h, uint arg_ch)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t *in_ECX;\n    int32_t *var_4h;\n    \n    var_4h = in_ECX;\n    if (*(in_ECX + 9) != '\\0') {\n        var_4h = NULL;\n        iVar2 = (**(*in_ECX + 0xe4))(arg_8h, arg_ch, &var_4h);\n        if (-1 < iVar2) {\n            return var_4h;\n        }\n    }\n    piVar1 = fcn.0040cc7f();\n    return piVar1;\n}\n",
        "token_count": 165
    },
    "0040d374": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_14h\n\nvoid __cdecl fcn.0040d374(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    int32_t *arg_8h_00;\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t extraout_EDX;\n    int32_t unaff_EBP;\n    uint *puVar5;\n    uint *puVar6;\n    uint var_44h;\n    uint var_28h;\n    uint var_14h;\n    uint var_4h;\n    \n    fcn.00423c31(0x38);\n    iVar1 = fcn.00412058(0x405a90);\n    iVar4 = 0;\n    *(unaff_EBP + -0x14) = iVar1;\n    if (iVar1 == 0) {\n        fcn.00405a76();\n        iVar4 = extraout_EDX;\n    }\n    puVar5 = iVar1 + 0x58;\n    puVar6 = unaff_EBP + -0x44;\n    for (iVar3 = 7; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar6 = *puVar5;\n        puVar5 = puVar5 + 1;\n        puVar6 = puVar6 + 1;\n    }\n    iVar3 = *(unaff_EBP + 0x10);\n    arg_8h_00 = *(unaff_EBP + 8);\n    *(iVar1 + 0x58) = *(unaff_EBP + 0xc);\n    *(iVar1 + 0x60) = *(unaff_EBP + 0x14);\n    uVar2 = *(unaff_EBP + 0x18);\n    *(iVar1 + 0x5c) = iVar3;\n    *(iVar1 + 100) = uVar2;\n    *(unaff_EBP + -4) = iVar4;\n    if ((iVar3 == 2) && (arg_8h_00[0x13] != iVar4)) {\n        (**(*arg_8h_00[0x13] + 0x60))(iVar4);\n    }\n    *(unaff_EBP + 8) = 0;\n    if (iVar3 == 0x110) {\n        fcn.0040ba6d(arg_8h_00, unaff_EBP + -0x28, unaff_EBP + 8);\n    }\n    uVar2 = (**(*arg_8h_00 + 0x108))(iVar3, *(unaff_EBP + 0x14), *(unaff_EBP + 0x18));\n    *(unaff_EBP + 0x18) = uVar2;\n    if (iVar3 == 0x110) {\n        fcn.0040d2f8(arg_8h_00, unaff_EBP + -0x28, *(unaff_EBP + 8));\n    }\n    puVar5 = unaff_EBP + -0x44;\n    puVar6 = iVar1 + 0x58;\n    for (iVar4 = 7; iVar4 != 0; iVar4 = iVar4 + -1) {\n        *puVar6 = *puVar5;\n        puVar5 = puVar5 + 1;\n        puVar6 = puVar6 + 1;\n    }\n    fcn.00423cd6();\n    return;\n}\n",
        "token_count": 806
    },
    "0040d4ac": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.0040d4ac(void)\n\n{\n    code *pcVar1;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.00423bfe(4);\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *extraout_ECX = vtable.CWnd.0;\n    *(unaff_EBP + -4) = 0;\n    if ((((extraout_ECX[8] != NULL) && (extraout_ECX != 0x4635a0)) && (extraout_ECX != 0x4635f8)) &&\n       ((extraout_ECX != 0x463650 && (extraout_ECX != 0x4636a8)))) {\n        fcn.0040cf62();\n    }\n    if (extraout_ECX[0x13] != NULL) {\n        (**(*extraout_ECX[0x13] + 4))(1);\n    }\n    pcVar1 = extraout_ECX[0x14];\n    if ((pcVar1 != NULL) && (*(pcVar1 + 0x28) == extraout_ECX)) {\n        *(pcVar1 + 0x28) = 0;\n    }\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.004071dc();\n    fcn.00423cd6();\n    return;\n}\n",
        "token_count": 338
    },
    "0040d610": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.0040d610(int32_t *param_1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    \n    if ((param_1 != NULL) && (param_1[8] != 0)) {\n        iVar2 = (**(*param_1 + 0x120))();\n        piVar3 = param_1;\n        if (iVar2 == 0) {\n            param_1 = fcn.0040d5d1();\n            piVar3 = param_1;\n        }\n        while (piVar1 = piVar3,  piVar1 != NULL) {\n            piVar3 = fcn.0040d5d1();\n            param_1 = piVar1;\n        }\n        return param_1;\n    }\n    return NULL;\n}\n",
        "token_count": 190
    },
    "0040d64f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040d64f(uint arg_8h, uint Msg, uint wParam, uint lParam, int32_t arg_18h, int32_t arg_1ch)\n\n{\n    code *pcVar1;\n    int32_t arg_8h_00;\n    int32_t iVar2;\n    \n    pcVar1 = _sym.imp.USER32.dll_GetTopWindow;\n    for (arg_8h_00 = (*_sym.imp.USER32.dll_GetTopWindow)(arg_8h); arg_8h_00 != 0;\n        arg_8h_00 = (*_sym.imp.USER32.dll_GetWindow)(arg_8h_00, 2)) {\n        if (arg_1ch == 0) {\n            (*_sym.imp.USER32.dll_SendMessageA)(arg_8h_00, Msg, wParam, lParam);\n        }\n        else {\n            iVar2 = fcn.0040cd4a(arg_8h_00);\n            if (iVar2 != 0) {\n                fcn.0040d374(iVar2, *(iVar2 + 0x20), Msg, wParam, lParam);\n            }\n        }\n        if (arg_18h != 0) {\n            iVar2 = (*pcVar1)(arg_8h_00);\n            if (iVar2 != 0) {\n                fcn.0040d64f(arg_8h_00, Msg, wParam, lParam, arg_18h, arg_1ch);\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 332
    },
    "0040d7c3": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.0040d7c3(int32_t *param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    uint unaff_retaddr;\n    \n    iVar1 = fcn.0040cd64(param_2);\n    if (iVar1 != 0) {\n        (**(*param_1 + 0x50))();\n        piVar2 = (**(*param_1 + 0xf0))();\n        iVar1 = (*_sym.imp.USER32.dll_SetWindowLongA)(unaff_retaddr, 0xfffffffc, fcn.0040d461);\n        if (*piVar2 == 0) {\n            *piVar2 = iVar1;\n        }\n        iVar1 = 1;\n    }\n    return iVar1;\n}\n",
        "token_count": 180
    },
    "0040de19": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040de19(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    if (*(param_1 + 0x50) == 0) {\n        iVar1 = (*_sym.imp.USER32.dll_GetWindowTextLengthA)(*(param_1 + 0x20));\n        uVar2 = fcn.0040dddc(iVar1, iVar1 + 1);\n        (*_sym.imp.USER32.dll_GetWindowTextA)(*(param_1 + 0x20), uVar2);\n        fcn.00407be9(0xffffffff);\n        return;\n    }\n    // WARNING: Could not recover jumptable at 0x0040de58. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**(**(param_1 + 0x50) + 0x8c))();\n    return;\n}\n",
        "token_count": 200
    },
    "0040e226": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040e226(int32_t param_1)\n\n{\n    uint uVar1;\n    \n    if (*(param_1 + 0xc) == 0) {\n        return 0;\n    }\n    uVar1 = (**(**(param_1 + 0xc) + 0xc))(*(param_1 + 0xc), 0);\n    return uVar1;\n}\n",
        "token_count": 89
    },
    "0040e23b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint fcn.0040e23b(int32_t *param_1)\n\n{\n    uint uVar1;\n    \n    if ((((*param_1 == 0) && (param_1[1] == 0)) && (param_1[2] == 0xc0)) && (param_1[3] == 0x46000000)) {\n        uVar1 = 1;\n    }\n    else {\n        uVar1 = 0;\n    }\n    return uVar1;\n}\n",
        "token_count": 110
    },
    "0040e266": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040e266(int32_t arg_8h, int32_t *arg_ch, uint arg_10h, int32_t **arg_14h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    \n    if ((arg_8h == 0) || (arg_ch == NULL)) {\n        iVar2 = -0x7ff8ffa9;\n    }\n    else if (arg_14h == NULL) {\n        iVar2 = -0x7fffbffd;\n    }\n    else {\n        *arg_14h = NULL;\n        iVar2 = fcn.0040e23b(arg_10h);\n        if (iVar2 == 0) {\n            for (; pcVar1 = arg_ch[2],  pcVar1 != NULL; arg_ch = arg_ch + 3) {\n                iVar2 = *arg_ch;\n                if ((iVar2 == 0) || (iVar3 = fcn.0040e1f1(iVar2, arg_10h),  iVar3 != 0)) {\n                    if (pcVar1 == 0x1) goto code_r0x0040e29a;\n                    iVar3 = (*pcVar1)(arg_8h, arg_10h, arg_14h, arg_ch[1]);\n                    if (iVar3 == 0) {\n                        return 0;\n                    }\n                    if ((iVar2 != 0) && (iVar3 < 0)) {\n                        return iVar3;\n                    }\n                }\n            }\n            iVar2 = -0x7fffbffe;\n        }\n        else {\ncode_r0x0040e29a:\n            piVar4 = arg_ch[1] + arg_8h;\n            (**(*piVar4 + 4))(piVar4);\n            *arg_14h = piVar4;\n            iVar2 = 0;\n        }\n    }\n    return iVar2;\n}\n",
        "token_count": 434
    },
    "0040e307": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040e307(code **param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    *param_1 = vtable.CMFCComObject_class_ATL::CAccessibleProxy_.2.0;\n    param_1[1] = vtable.CMFCComObject_class_ATL::CAccessibleProxy_.1.0;\n    param_1[4] = vtable.CMFCComObject_class_ATL::CAccessibleProxy_.0;\n    param_1[5] = 0xc0000001;\n    fcn.0040e226();\n    iVar2 = fcn.00409b0a();\n    iVar2 = (*_sym.imp.KERNEL32.dll_InterlockedDecrement)(iVar2 + 0x2c);\n    if (iVar2 != 0) {\n        return;\n    }\n    iVar2 = fcn.00409b0a();\n    if (*(iVar2 + 0x30) == 0) {\n        fcn.00412910(1);\n        iVar2 = fcn.00409b0a();\n        iVar2 = *(iVar2 + 4);\n        if ((iVar2 == 0) || (*(iVar2 + 0x20) == 0)) {\n            iVar2 = fcn.00409b0a();\n            if (*(iVar2 + 0x14) == '\\0') {\n                fcn.004065c4(0);\n            }\n        }\n        else {\n            iVar1 = fcn.0040fc5a();\n            if (iVar1 != 0) {\n    // WARNING: Could not recover jumptable at 0x0041295d. Too many branches\n    // WARNING: Treating indirect jump as call\n                (**(**(iVar2 + 0x20) + 0x60))();\n                return;\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 414
    },
    "0040e84b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.0040e84b(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t unaff_retaddr;\n    \n    iVar1 = fcn.00412058(0x405a90);\n    if (iVar1 == 0) {\n        fcn.00405a76();\n    }\n    if (*(iVar1 + 0x14) != unaff_retaddr) {\n        if (*(iVar1 + 0x28) == 0) {\n            uVar2 = (*_sym.imp.KERNEL32.dll_GetCurrentThreadId)();\n            iVar3 = (*_sym.imp.USER32.dll_SetWindowsHookExA)(5, 0x40e5f8, 0, uVar2);\n            *(iVar1 + 0x28) = iVar3;\n            if (iVar3 == 0) {\n                fcn.00405a42();\n            }\n        }\n        *(iVar1 + 0x14) = unaff_retaddr;\n    }\n    return;\n}\n",
        "token_count": 226
    },
    "0040f491": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0040f491(uint arg_8h)\n\n{\n    int32_t lpWndClass;\n    int16_t iVar1;\n    int32_t iVar2;\n    int32_t unaff_EBP;\n    uint var_38h;\n    uint var_4h;\n    \n    fcn.00423c31(0x30);\n    lpWndClass = *(unaff_EBP + 8);\n    iVar2 = fcn.0040b76c(*(lpWndClass + 0x10), *(lpWndClass + 0x24), unaff_EBP + -0x38);\n    if (((iVar2 == 0) && (iVar1 = fcn.0040b6d9(lpWndClass),  iVar1 != 0)) &&\n       (iVar2 = fcn.00409b0a(),  *(iVar2 + 0x14) != '\\0')) {\n        fcn.00412ac4(1);\n        *(unaff_EBP + -4) = 0;\n        fcn.00409b0a();\n        fcn.00406044(*(lpWndClass + 0x24));\n        fcn.00405f59(10);\n        *(unaff_EBP + -4) = 0xffffffff;\n        fcn.00412b31(1);\n    }\n    fcn.00423cd6();\n    return;\n}\n",
        "token_count": 317
    },
    "0040f51f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040f51f(uint16_t *arg_8h)\n\n{\n    code *pcVar1;\n    uint16_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t in_ECX;\n    uint16_t *puVar5;\n    uint *puVar6;\n    uint var_34h;\n    uint var_30h;\n    uint16_t *var_2ch;\n    int32_t var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    pcVar1 = _sym.imp.USER32.dll_SendDlgItemMessageA;\n    var_4h = 1;\n    puVar5 = arg_8h;\n    var_8h = in_ECX;\n    if (arg_8h != NULL) {\n        do {\n            uVar3 = *puVar5;\n            if (*puVar5 == 0) break;\n            uVar2 = puVar5[1];\n            var_10h = *(puVar5 + 2);\n            puVar5 = puVar5 + 4;\n            var_ch = uVar3;\n            if (uVar2 == 0x1234) {\ncode_r0x0040f58a:\n                puVar6 = &var_30h;\n                for (iVar4 = 8; iVar4 != 0; iVar4 = iVar4 + -1) {\n                    *puVar6 = 0;\n                    puVar6 = puVar6 + 1;\n                }\n                var_30h = 0xffffffff;\n                var_34h = 1;\n                fcn.004048c0(puVar5);\n                var_2ch = arg_8h;\n                iVar4 = (*pcVar1)(*(var_8h + 0x20), var_ch & 0xffff, 0x401, 0, &var_34h);\n                if (iVar4 == -1) {\n                    var_4h = 0;\n                }\n                fcn.004028b0();\n                in_ECX = var_8h;\n            }\n            else if (uVar2 == 0x401) {\n                uVar2 = 0x180;\ncode_r0x0040f5eb:\n                iVar4 = (*pcVar1)(*(in_ECX + 0x20), uVar3, uVar2, 0, puVar5);\n                if (iVar4 == -1) {\n                    var_4h = 0;\n                }\n            }\n            else {\n                if (uVar2 == 0x403) {\n                    uVar2 = 0x143;\n                }\n                if (uVar2 == 0x401) goto code_r0x0040f58a;\n                if ((uVar2 == 0x180) || (uVar2 == 0x143)) goto code_r0x0040f5eb;\n            }\n            puVar5 = puVar5 + var_10h;\n        } while (var_4h != 0);\n        if (var_4h == 0) {\n            return 0;\n        }\n    }\n    fcn.0040d64f(*(in_ECX + 0x20), 0x364, 0, 0, 0, 0);\n    return var_4h;\n}\n",
        "token_count": 741
    },
    "0040faab": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040faab(int32_t param_1)\n\n{\n    uint uVar1;\n    \n    if (*(param_1 + 0x4c) != 0) {\n    // WARNING: Could not recover jumptable at 0x0040fab6. Too many branches\n    // WARNING: Treating indirect jump as call\n        uVar1 = (**(**(param_1 + 0x4c) + 0x98))();\n        return uVar1;\n    }\n    return 0;\n}\n",
        "token_count": 117
    },
    "0040fac1": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0040fac1(int32_t param_1, uint param_2)\n\n{\n    uint uVar1;\n    \n    if (*(param_1 + 0x4c) == 0) {\n        uVar1 = (*_sym.imp.USER32.dll_GetDlgItem)(*(param_1 + 0x20), param_2);\n        fcn.0040cd23(uVar1);\n        return;\n    }\n    // WARNING: Could not recover jumptable at 0x0040fae2. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**(**(param_1 + 0x4c) + 0x74))();\n    return;\n}\n",
        "token_count": 156
    },
    "0040fb17": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040fb17(int32_t param_1)\n\n{\n    if (*(param_1 + 0x50) == 0) {\n        (*_sym.imp.USER32.dll_GetWindowLongA)(*(param_1 + 0x20), 0xfffffff0);\n        return;\n    }\n    // WARNING: Could not recover jumptable at 0x0040fb2e. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**(**(param_1 + 0x50) + 0x78))();\n    return;\n}\n",
        "token_count": 129
    },
    "0040fb31": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040fb31(int32_t param_1)\n\n{\n    if (*(param_1 + 0x50) == 0) {\n        (*_sym.imp.USER32.dll_GetWindowLongA)(*(param_1 + 0x20), 0xffffffec);\n        return;\n    }\n    // WARNING: Could not recover jumptable at 0x0040fb48. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**(**(param_1 + 0x50) + 0x7c))();\n    return;\n}\n",
        "token_count": 128
    },
    "0040fb4b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040fb4b(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x50) == 0) {\n        fcn.0040b114(*(in_ECX + 0x20), arg_8h, arg_ch, arg_10h);\n        return;\n    }\n    // WARNING: Could not recover jumptable at 0x0040fb6f. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**(**(in_ECX + 0x50) + 0x80))();\n    return;\n}\n",
        "token_count": 150
    },
    "0040fb75": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040fb75(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x50) == 0) {\n        fcn.0040b12e(*(in_ECX + 0x20), arg_8h, arg_ch, arg_10h);\n        return;\n    }\n    // WARNING: Could not recover jumptable at 0x0040fb99. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**(**(in_ECX + 0x50) + 0x84))();\n    return;\n}\n",
        "token_count": 149
    },
    "0040fb9f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0040fb9f(int32_t param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    \n    if (param_1 != 0) goto code_r0x0040fbab;\n    while( true ) {\n        fcn.00405a76();\ncode_r0x0040fbab:\n        iVar1 = (*_sym.imp.USER32.dll_IsWindow)(*(param_1 + 0x20));\n        if (iVar1 != 0) break;\n        if (*(param_1 + 0x50) != 0) {\ncode_r0x0040fbbd:\n    // WARNING: Could not recover jumptable at 0x0040fbc3. Too many branches\n    // WARNING: Treating indirect jump as call\n            (**(**(param_1 + 0x50) + 0x88))();\n            return;\n        }\n    }\n    if (*(param_1 + 0x50) == 0) {\n        (*_sym.imp.USER32.dll_SetWindowTextA)(*(param_1 + 0x20), param_2);\n        return;\n    }\n    goto code_r0x0040fbbd;\n}\n",
        "token_count": 263
    },
    "0040fbe0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040fbe0(int32_t param_1)\n\n{\n    if (*(param_1 + 0x50) == 0) {\n        (*_sym.imp.USER32.dll_GetDlgCtrlID)(*(param_1 + 0x20));\n        return;\n    }\n    // WARNING: Could not recover jumptable at 0x0040fbf5. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**(**(param_1 + 0x50) + 0x90))();\n    return;\n}\n",
        "token_count": 123
    },
    "0040fbfb": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040fbfb(uint X, uint Y, uint nWidth, uint nHeight, uint bRepaint)\n\n{\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x50) == 0) {\n        (*_sym.imp.USER32.dll_MoveWindow)(*(in_ECX + 0x20), X, Y, nWidth, nHeight, bRepaint);\n    }\n    else {\n        (**(**(in_ECX + 0x50) + 0x98))(X, Y, nWidth, nHeight);\n    }\n    return;\n}\n",
        "token_count": 132
    },
    "0040fc39": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0040fc39(int32_t param_1, uint param_2)\n\n{\n    if (*(param_1 + 0x50) == 0) {\n        (*_sym.imp.USER32.dll_ShowWindow)(*(param_1 + 0x20), param_2);\n        return;\n    }\n    // WARNING: Could not recover jumptable at 0x0040fc54. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**(**(param_1 + 0x50) + 0xa0))();\n    return;\n}\n",
        "token_count": 130
    },
    "0040fc5a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040fc5a(int32_t param_1)\n\n{\n    if (*(param_1 + 0x50) == 0) {\n        (*_sym.imp.USER32.dll_IsWindowEnabled)(*(param_1 + 0x20));\n        return;\n    }\n    // WARNING: Could not recover jumptable at 0x0040fc6f. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**(**(param_1 + 0x50) + 0xa4))();\n    return;\n}\n",
        "token_count": 123
    },
    "0040fc75": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0040fc75(int32_t param_1, uint param_2)\n\n{\n    if (*(param_1 + 0x50) == 0) {\n        (*_sym.imp.USER32.dll_EnableWindow)(*(param_1 + 0x20), param_2);\n        return;\n    }\n    // WARNING: Could not recover jumptable at 0x0040fc90. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**(**(param_1 + 0x50) + 0xa8))();\n    return;\n}\n",
        "token_count": 130
    },
    "0040fc96": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040fc96(int32_t param_1)\n\n{\n    uint uVar1;\n    \n    if (*(param_1 + 0x50) == 0) {\n        uVar1 = (*_sym.imp.USER32.dll_SetFocus)(*(param_1 + 0x20));\n        fcn.0040cd23(uVar1);\n        return;\n    }\n    // WARNING: Could not recover jumptable at 0x0040fcb1. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**(**(param_1 + 0x50) + 0xb0))();\n    return;\n}\n",
        "token_count": 144
    },
    "0040fd00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0040fd00(int32_t param_1, int32_t param_2, uint param_3)\n\n{\n    if ((*(param_1 + 0x50) == 0) && (*(param_2 + 0x4c) != 0)) {\n        (**(**(param_2 + 0x4c) + 0x9c))(param_1, param_3);\n    }\n    return;\n}\n",
        "token_count": 101
    },
    "0040fd25": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040fd25(uint *param_1)\n\n{\n    if (param_1[1] != 0) {\n    // WARNING: Could not recover jumptable at 0x0040fd30. Too many branches\n    // WARNING: Treating indirect jump as call\n        (**(*param_1[1] + 0x78))();\n        return;\n    }\n    (*_sym.imp.USER32.dll_GetWindowLongA)(*param_1, 0xfffffff0);\n    return;\n}\n",
        "token_count": 114
    },
    "0040fe48": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040fe48(int32_t arg_8h, uint X, uint Y, uint cx, uint cy, uint uFlags)\n\n{\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x50) == 0) {\n        if (arg_8h != 0) {\n            arg_8h = *(arg_8h + 0x20);\n        }\n        (*_sym.imp.USER32.dll_SetWindowPos)(*(in_ECX + 0x20), arg_8h, X, Y, cx, cy, uFlags);\n        return;\n    }\n    // WARNING: Could not recover jumptable at 0x0040fe7e. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**(**(in_ECX + 0x50) + 0x9c))();\n    return;\n}\n",
        "token_count": 196
    },
    "0040fe84": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040fe84(int32_t param_1)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    \n    if ((param_1 != 0) && (*(param_1 + 0x50) == 0)) {\n        uVar1 = (*_sym.imp.USER32.dll_GetParent)(*(param_1 + 0x20));\n        iVar2 = fcn.0041c9a0(uVar1);\n        if ((iVar2 != 0) && (*(iVar2 + 0x4c) != 0)) {\n            (**(**(iVar2 + 0x4c) + 0x9c))(param_1, 0);\n        }\n    }\n    return;\n}\n",
        "token_count": 161
    },
    "0040feca": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.0040feca(int32_t *arg_8h, code *arg_ch)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    int32_t *piVar3;\n    uint uVar4;\n    int32_t iVar5;\n    int32_t **ppiVar6;\n    int32_t iVar7;\n    uint32_t uVar8;\n    int32_t in_ECX;\n    bool bVar9;\n    uint uVar10;\n    code *var_8h;\n    int32_t var_4h;\n    \n    pcVar2 = _sym.imp.USER32.dll_GetWindow;\n    if (*(in_ECX + 0x4c) == 0) {\n        piVar3 = NULL;\n    }\n    else {\n        if ((*(in_ECX + 0x3c) & 0x800) == 0) {\n            uVar10 = 5;\n            uVar4 = *(in_ECX + 0x20);\n            while( true ) {\n                uVar4 = (*pcVar2)(uVar4, uVar10);\n                iVar5 = fcn.0040cd23(uVar4);\n                if (iVar5 == 0) break;\n                uVar8 = fcn.0040fb31();\n                if ((((uVar8 & 0x10000) != 0) && (uVar8 = fcn.0040fb17(),  (uVar8 & 0x10000000) != 0)) &&\n                   (uVar8 = fcn.0040fb17(),  (uVar8 & 0x8000000) == 0)) goto code_r0x0040ffbf;\n                uVar4 = *(iVar5 + 0x20);\n                uVar10 = 2;\n            }\n        }\n        if (arg_ch == NULL) {\n            var_8h = 0x408962;\n            arg_ch = method.ATL::CFixedStringMgr.virtual_16;\n        }\n        else {\n            var_8h = 0x40fec5;\n            arg_ch = method.ATL::CFixedStringMgr.virtual_12;\n        }\n        var_4h = (*arg_ch)();\njoined_r0x0040ff6a:\n        do {\n            if (var_4h == 0) goto code_r0x0040ffbf;\n            ppiVar6 = (*var_8h)(&var_4h);\n            piVar1 = *ppiVar6;\n            if (arg_8h == NULL) {\n                if (piVar1[1] == 0) {\n                    iVar5 = *piVar1;\n                }\n                else {\n                    iVar5 = *(piVar1[1] + 0x24);\n                }\n                if ((iVar5 != 0) && (iVar7 = (*_sym.imp.USER32.dll_GetFocus)(),  iVar5 == iVar7)) break;\n                if (piVar1[1] == 0) goto joined_r0x0040ff6a;\n                bVar9 = piVar1[1] == *(*(in_ECX + 0x4c) + 0x70);\n            }\n            else {\n                bVar9 = arg_8h == piVar1;\n            }\n        } while (!bVar9);\n        if (piVar1 == NULL) {\ncode_r0x0040ffbf:\n            piVar3 = NULL;\n        }\n        else {\n            do {\n                if (var_4h == 0) {\n                    var_4h = (*arg_ch)();\n                }\n                ppiVar6 = (*var_8h)(&var_4h);\n                piVar3 = *ppiVar6;\n                uVar8 = fcn.0040fd25();\n            } while ((piVar3 != piVar1) &&\n                    ((((uVar8 & 0x10000) == 0 || ((uVar8 & 0x8000000) != 0)) || ((uVar8 & 0x10000000) == 0))));\n        }\n    }\n    return piVar3;\n}\n",
        "token_count": 894
    },
    "0041000d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041000d(uint *arg_8h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint *puVar4;\n    uint32_t uVar5;\n    int32_t in_ECX;\n    uint *puVar6;\n    uint var_8h;\n    uint var_4h;\n    \n    pcVar1 = _sym.imp.USER32.dll_SendMessageA;\n    if (*(in_ECX + 0x4c) == 0) {\n        return;\n    }\n    if (arg_8h == NULL) {\n        return;\n    }\n    if ((arg_8h[2] == 0) ||\n       (iVar2 = (*_sym.imp.USER32.dll_SendMessageA)(*arg_8h, 0xf0, 0, 0),  puVar4 = arg_8h,  iVar2 != 1)) {\n        puVar3 = fcn.0041cc7c(arg_8h, 0);\n        puVar6 = &arg_8h;\n        arg_8h = puVar3;\n        fcn.00408771(puVar6);\n        do {\n            if (arg_8h == NULL) {\ncode_r0x004100b2:\n                arg_8h = puVar3;\n                fcn.0040fe14(&arg_8h, puVar6);\n                while( true ) {\n                    if (arg_8h == NULL) {\n                        return;\n                    }\n                    puVar4 = fcn.0040fe14(&arg_8h);\n                    puVar4 = *puVar4;\n                    if ((puVar4[2] != 0) && (iVar2 = (*pcVar1)(*puVar4, 0xf0, 0, 0),  iVar2 == 1)) break;\n                    uVar5 = fcn.0040fd25();\n                    if ((uVar5 & 0x20000) != 0) {\n                        return;\n                    }\n                }\n                break;\n            }\n            puVar6 = &arg_8h;\n            puVar4 = fcn.00408771();\n            puVar4 = *puVar4;\n            uVar5 = fcn.0040fd25();\n            if ((uVar5 & 0x20000) != 0) goto code_r0x004100b2;\n        } while ((puVar4[2] == 0) || (iVar2 = (*pcVar1)(*puVar4, 0xf0, 0, 0),  iVar2 != 1));\n    }\n    (*pcVar1)(*puVar4, 0xf1, 0, 0);\n    return;\n}\n",
        "token_count": 595
    },
    "0041011d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.0041011d(int32_t param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    \n    fcn.0040fdc1(param_1);\n    iVar1 = param_2;\n    while ((0 < iVar1 && (*(param_1 + 4) != 0))) {\n        if (*(param_2 + 4) != 0) {\n            fcn.0040fdfb(param_2 + 4);\n        }\n        iVar1 = iVar1 + -1;\n    }\n    return param_2;\n}\n",
        "token_count": 129
    },
    "00410463": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00410463(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    uint var_8h;\n    uint var_4h;\n    \n    if (*(in_ECX + 0x4c) != 0) {\n        if (arg_8h == 0) {\n            iVar1 = fcn.004102fb();\n        }\n        else {\n            iVar1 = fcn.004102b2(arg_8h);\n        }\n        if ((iVar1 != 0) && (fcn.004103e8(),  iVar1 != 0)) {\n            return *(iVar1 + 8);\n        }\n    }\n    return 0;\n}\n",
        "token_count": 158
    },
    "004104b1": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004104b1(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    uint var_8h;\n    uint var_4h;\n    \n    if (*(in_ECX + 0x4c) != 0) {\n        if (arg_8h == 0) {\n            iVar1 = fcn.004102fb();\n        }\n        else {\n            iVar1 = fcn.004102b2(arg_8h);\n        }\n        if ((iVar1 != 0) && (fcn.0041036d(),  iVar1 != 0)) {\n            return *(iVar1 + 8);\n        }\n    }\n    return 0;\n}\n",
        "token_count": 159
    },
    "004107ba": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004107ba(uint arg_8h, uint arg_ch, int32_t arg_10h, uint arg_14h)\n\n{\n    uint uVar1;\n    int32_t in_ECX;\n    uint var_30h;\n    uint var_20h;\n    uint var_ch;\n    \n    fcn.00410767(&var_30h, arg_8h, arg_14h);\n    if (arg_10h != 0) {\n        uVar1 = fcn.004214ae(&var_20h, 0x10, arg_10h, 0x10);\n        fcn.00401000(uVar1);\n    }\n    var_ch = arg_ch;\n    (*_sym.imp.USER32.dll_SendMessageA)(*(in_ECX + 0x20), 0x404, 0, &var_30h);\n    return;\n}\n",
        "token_count": 196
    },
    "00410810": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00410810(uint arg_8h, int32_t arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t in_ECX;\n    uint var_30h;\n    uint var_ch;\n    \n    iVar1 = (*_sym.imp.USER32.dll_IsWindow)(*(in_ECX + 0x20));\n    if (iVar1 != 0) goto code_r0x0041082c;\n    do {\n        do {\n            fcn.00405a76();\ncode_r0x0041082c:\n        } while (arg_ch == 0);\n        uVar2 = fcn.00423d40(arg_8h);\n    } while (0x400 < uVar2);\n    fcn.00410767(&var_30h, arg_ch, arg_10h);\n    var_ch = arg_8h;\n    (*_sym.imp.USER32.dll_SendMessageA)(*(in_ECX + 0x20), 0x40c, 0, &var_30h);\n    return;\n}\n",
        "token_count": 242
    },
    "0041091b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t * __thiscall fcn.0041091b(int32_t *param_1, int32_t param_2, uint param_3, uint *param_4)\n\n{\n    int32_t iVar1;\n    uint *extraout_ECX;\n    uint *extraout_ECX_00;\n    int32_t unaff_retaddr;\n    uint uStack16;\n    \n    if (param_4 == NULL) {\n        fcn.00401090(0x80004005);\n        param_4 = extraout_ECX;\n    }\n    if ((unaff_retaddr == 0) && (param_2 != 0)) {\n        uStack16 = 0x80070057;\n        fcn.00401090();\n        param_4 = extraout_ECX_00;\n    }\n    iVar1 = (***param_4)(param_2, 1);\n    if (iVar1 == 0) {\n        iVar1 = fcn.00403e80();\n    }\n    *param_1 = iVar1 + 0x10;\n    fcn.00403e20(param_2);\n    fcn.004214ae(*param_1, param_2, uStack16, param_2);\n    return param_1;\n}\n",
        "token_count": 272
    },
    "00410989": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00410989(uint *arg_8h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint uVar4;\n    int32_t *in_ECX;\n    uint var_4h;\n    \n    uVar4 = *0x46377c;\n    uVar3 = *0x463778;\n    if (in_ECX != NULL) {\n        iVar2 = (*_sym.imp.GDI32.dll_GetMapMode)(in_ECX[2]);\n        pcVar1 = _sym.imp.GDI32.dll_GetDeviceCaps;\n        if ((iVar2 < 7) && (iVar2 != 1)) {\n            (**(*in_ECX + 0x34))(3);\n            fcn.0040a18c(arg_8h);\n            (**(*in_ECX + 0x34))(iVar2);\n            return;\n        }\n        uVar3 = (*_sym.imp.GDI32.dll_GetDeviceCaps)(in_ECX[2], 0x58);\n        uVar4 = (*pcVar1)(in_ECX[2], 0x5a);\n    }\n    pcVar1 = _sym.imp.KERNEL32.dll_MulDiv;\n    uVar3 = (*_sym.imp.KERNEL32.dll_MulDiv)(*arg_8h, 0x9ec, uVar3);\n    *arg_8h = uVar3;\n    uVar4 = (*pcVar1)(arg_8h[1], 0x9ec, uVar4);\n    arg_8h[1] = uVar4;\n    return;\n}\n",
        "token_count": 353
    },
    "00410a17": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00410a17(uint *arg_8h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint uVar4;\n    int32_t *in_ECX;\n    uint var_4h;\n    \n    uVar4 = *0x46377c;\n    uVar3 = *0x463778;\n    if (in_ECX != NULL) {\n        iVar2 = (*_sym.imp.GDI32.dll_GetMapMode)(in_ECX[2]);\n        pcVar1 = _sym.imp.GDI32.dll_GetDeviceCaps;\n        if ((iVar2 < 7) && (iVar2 != 1)) {\n            (**(*in_ECX + 0x34))(3);\n            fcn.0040a123(arg_8h);\n            (**(*in_ECX + 0x34))(iVar2);\n            return;\n        }\n        uVar3 = (*_sym.imp.GDI32.dll_GetDeviceCaps)(in_ECX[2], 0x58);\n        uVar4 = (*pcVar1)(in_ECX[2], 0x5a);\n    }\n    pcVar1 = _sym.imp.KERNEL32.dll_MulDiv;\n    uVar3 = (*_sym.imp.KERNEL32.dll_MulDiv)(*arg_8h, uVar3, 0x9ec);\n    *arg_8h = uVar3;\n    uVar4 = (*pcVar1)(arg_8h[1], uVar4, 0x9ec);\n    arg_8h[1] = uVar4;\n    return;\n}\n",
        "token_count": 353
    },
    "00410cf7": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00410cf7(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t unaff_EBP;\n    uint var_4h;\n    \n    fcn.00423bfe(0);\n    iVar1 = fcn.00409b3d();\n    if ((*(iVar1 + 0x18) == 0) && (*(unaff_EBP + 8) != 0)) {\n        uVar2 = fcn.0040593b(0x41278f);\n        iVar3 = fcn.0040594d(0x60);\n        *(unaff_EBP + 8) = iVar3;\n        *(unaff_EBP + -4) = 0;\n        if (iVar3 == 0) {\n            uVar4 = 0;\n        }\n        else {\n            uVar4 = fcn.00412b5a(0x452b18, 0x410ce2, 0x40b680, 4, 1);\n        }\n        *(unaff_EBP + -4) = 0xffffffff;\n        *(iVar1 + 0x18) = uVar4;\n        fcn.0040593b(uVar2);\n    }\n    fcn.00423cd6();\n    return;\n}\n",
        "token_count": 317
    },
    "00410dbd": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00410dbd(int32_t param_1)\n\n{\n    uint uVar1;\n    \n    if (*(param_1 + 4) == 0) {\n        return 0;\n    }\n    uVar1 = fcn.00410d93();\n    uVar1 = (*_sym.imp.USER32.dll_DestroyMenu)(uVar1);\n    return uVar1;\n}\n",
        "token_count": 87
    },
    "00410e0d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00410e0d(void)\n\n{\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.00423bfe(4);\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *extraout_ECX = vtable.CDialog.0;\n    *(unaff_EBP + -4) = 0;\n    if (extraout_ECX[8] != NULL) {\n        fcn.0040cf62();\n    }\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.0040d4ac();\n    fcn.00423cd6();\n    return;\n}\n",
        "token_count": 165
    },
    "0041134f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0041134f(uint *param_1, int32_t param_2)\n\n{\n    uint *extraout_ECX;\n    \n    if (param_2 == 0) {\n        fcn.00401090(0x80004005);\n        param_1 = extraout_ECX;\n    }\n    fcn.00425b4e(*param_1, param_2);\n    return;\n}\n",
        "token_count": 94
    },
    "00411a4d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __thiscall fcn.00411a4d(int32_t param_1, int32_t param_2)\n\n{\n    if (param_1 != 0) goto code_r0x00411a58;\n    do {\n        param_1 = fcn.00405a76();\ncode_r0x00411a58:\n    } while (param_2 == 0);\n    do {\n        if (param_1 == param_2) {\n            return 1;\n        }\n        param_1 = *(param_1 + 0x10);\n    } while (param_1 != 0);\n    return 0;\n}\n",
        "token_count": 138
    },
    "00411a8c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint fcn.00411a8c(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    \n    if (param_2 != 0) {\n        iVar1 = fcn.00411a74(param_1);\n        if (iVar1 != 0) {\n            return param_1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 83
    },
    "00411aea": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00411aea(int32_t param_1)\n\n{\n    if (param_1 != 0) {\n    // WARNING: Could not recover jumptable at 0x00411af1. Too many branches\n    // WARNING: Treating indirect jump as call\n        (*_sym.imp.KERNEL32.dll_LocalFree)();\n        return;\n    }\n    return;\n}\n",
        "token_count": 82
    },
    "00411bd8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.00411bd8(int32_t param_1, int32_t param_2)\n\n{\n    int32_t extraout_ECX;\n    \n    if (param_2 == 0) {\n        fcn.00405a76();\n        param_1 = extraout_ECX;\n    }\n    return *(param_1 + 4) + param_2;\n}\n",
        "token_count": 87
    },
    "00411f6a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00411f6a(uint *arg_8h, int32_t arg_ch)\n\n{\n    uint *puVar1;\n    bool bVar2;\n    uint *in_ECX;\n    int32_t iVar3;\n    uint var_4h;\n    \n    iVar3 = 1;\n    bVar2 = true;\n    if (1 < arg_8h[2]) {\n        do {\n            if ((arg_ch == 0) || (*(in_ECX[4] + 4 + iVar3 * 8) == arg_ch)) {\n                puVar1 = *(arg_8h[3] + iVar3 * 4);\n                if (puVar1 != NULL) {\n                    (***puVar1)(1);\n                }\n                *(arg_8h[3] + iVar3 * 4) = 0;\n            }\n            else if (*(arg_8h[3] + iVar3 * 4) != 0) {\n                bVar2 = false;\n            }\n            iVar3 = iVar3 + 1;\n        } while (iVar3 < arg_8h[2]);\n        if (!bVar2) {\n            return;\n        }\n    }\n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(in_ECX + 7);\n    fcn.00411c07(arg_8h);\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(in_ECX + 7);\n    (*_sym.imp.KERNEL32.dll_LocalFree)(arg_8h[3]);\n    (***arg_8h)(1);\n    (*_sym.imp.KERNEL32.dll_TlsSetValue)(*in_ECX, 0);\n    return;\n}\n",
        "token_count": 362
    },
    "00412100": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00412100(int32_t param_1, uint param_2)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    int32_t iVar4;\n    uint unaff_retaddr;\n    \n    puVar3 = *0x463720;\n    if (*0x463720 != NULL) {\n        puVar1 = *0x463720 + 7;\n        (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(puVar1);\n        if (param_1 == 0) {\n            iVar4 = (*_sym.imp.KERNEL32.dll_TlsGetValue)(*puVar3);\n            if (iVar4 != 0) {\n                fcn.00411f6a(iVar4, unaff_retaddr);\n            }\n        }\n        else {\n            iVar4 = puVar3[5];\n            while (iVar4 != 0) {\n                iVar2 = *(iVar4 + 4);\n                fcn.00411f6a(iVar4, param_2);\n                iVar4 = iVar2;\n            }\n        }\n        (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(puVar1);\n        return;\n    }\n    return;\n}\n",
        "token_count": 260
    },
    "00412058": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00412058(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint arg_ch;\n    int32_t *extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.00423bfe(4);\n    if (*(unaff_EBP + 8) != 0) goto code_r0x00412077;\ncode_r0x00412072:\n    do {\n        fcn.00405a76();\ncode_r0x00412077:\n        if (*extraout_ECX != 0) goto code_r0x004120b2;\n        if (*0x463720 == 0) {\n            *(unaff_EBP + -0x10) = 0x463724;\n            *(unaff_EBP + -4) = 0;\n            *0x463720 = fcn.00411d7d();\n            *(unaff_EBP + -4) = 0xffffffff;\n            if (*0x463720 == 0) goto code_r0x00412072;\n        }\n        iVar1 = fcn.00411c6d();\n        *extraout_ECX = iVar1;\n        if (iVar1 != 0) {\ncode_r0x004120b2:\n            iVar1 = fcn.00411afa(*extraout_ECX);\n            if (iVar1 == 0) {\n                arg_ch = (**(unaff_EBP + 8))();\n                fcn.00411e1f(*extraout_ECX, arg_ch);\n            }\n            fcn.00423cd6();\n            return;\n        }\n    } while( true );\n}\n",
        "token_count": 385
    },
    "00412261": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t * __thiscall fcn.00412261(int32_t *param_1, int32_t *param_2)\n\n{\n    int32_t *piVar1;\n    int32_t **ppiVar2;\n    int32_t **ppiVar3;\n    \n    piVar1 = (**(*param_1 + 0x44))(param_2);\n    if (piVar1 == NULL) {\n        ppiVar2 = (**(*param_1 + 0x38))();\n        if ((((*0x455d88 == *param_2) && (param_2[1] == *0x455d8c)) && (param_2[2] == *0x455d90)) &&\n           (param_2[3] == *0x455d94)) {\n            do {\n                for (piVar1 = ppiVar2[1]; *piVar1 != 0; piVar1 = piVar1 + 2) {\n                    if (*(piVar1[1] + param_1) != 0) {\n                        return piVar1[1] + param_1;\n                    }\n                }\n                ppiVar2 = *ppiVar2;\n            } while (ppiVar2 != NULL);\n        }\n        else {\n            do {\n                for (ppiVar3 = ppiVar2[1]; piVar1 = *ppiVar3,  piVar1 != NULL; ppiVar3 = ppiVar3 + 2) {\n                    if (((*piVar1 == *param_2) && (piVar1[1] == param_2[1])) &&\n                       ((piVar1[2] == param_2[2] && ((piVar1[3] == param_2[3] && (*(ppiVar3[1] + param_1) != 0)))))) {\n                        return ppiVar3[1] + param_1;\n                    }\n                }\n                ppiVar2 = *ppiVar2;\n            } while (ppiVar2 != NULL);\n        }\n        piVar1 = NULL;\n    }\n    return piVar1;\n}\n",
        "token_count": 454
    },
    "0041230f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0041230f(uint arg_8h)\n\n{\n    uint *puVar1;\n    int32_t *piVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    int32_t *in_ECX;\n    uint var_8h;\n    int32_t var_4h;\n    \n    piVar2 = (**(*in_ECX + 0x38))();\n    do {\n        for (piVar3 = piVar2[1]; *piVar3 != 0; piVar3 = piVar3 + 2) {\n        }\n        for (piVar3 = piVar3 + 1; *piVar3 != -1; piVar3 = piVar3 + 2) {\n            puVar1 = *(in_ECX + *piVar3);\n            if (puVar1 != NULL) {\n                var_4h = 0;\n                iVar4 = (***puVar1)(puVar1, arg_8h, &var_4h);\n                if ((iVar4 == 0) && (var_4h != 0)) {\n                    return var_4h;\n                }\n            }\n        }\n        piVar2 = *piVar2;\n        if (piVar2 == NULL) {\n            return 0;\n        }\n    } while( true );\n}\n",
        "token_count": 293
    },
    "0041236f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041236f(int32_t param_1)\n\n{\n    if (*(param_1 + 8) != 0) {\n        (**(**(param_1 + 8) + 4))(*(param_1 + 8));\n        return;\n    }\n    (*_sym.imp.KERNEL32.dll_InterlockedIncrement)(param_1 + 4);\n    return;\n}\n",
        "token_count": 86
    },
    "0041238a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.0041238a(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    int32_t iVar3;\n    \n    iVar3 = 8;\n    fcn.00423bfe(8);\n    if ((extraout_ECX[1] != 0) && (iVar2 = (*_sym.imp.KERNEL32.dll_InterlockedDecrement)(extraout_ECX + 1),  iVar2 == 0)\n       ) {\n        fcn.00409b56(extraout_ECX[7]);\n        iVar1 = *extraout_ECX;\n        *(unaff_EBP + -4) = 0;\n        (**(iVar1 + 0x10))();\n        *(unaff_EBP + -4) = 0xffffffff;\n        if (*(unaff_EBP + -0x10) != 0) {\n            fcn.0040932d();\n            iVar3 = iVar2;\n        }\n    }\n    fcn.00423cd6(iVar3);\n    return;\n}\n",
        "token_count": 278
    },
    "0041261d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041261d(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    uint unaff_EBX;\n    uint lpString;\n    uint32_t var_4h;\n    \n    var_4h = *0x460604 ^ &stack0xfffffffc;\n    if (*(in_ECX + 0x54) == 0) {\n        fcn.0042420f(&lpString, 0x10, 0x452e2c, arg_10h);\n        (*_sym.imp.KERNEL32.dll_WritePrivateProfileStringA)(arg_8h, arg_ch, &lpString, *(in_ECX + 0x68));\n    }\n    else {\n        iVar1 = fcn.004125d7(arg_8h);\n        if (iVar1 != 0) {\n            (*_sym.imp.ADVAPI32.dll_RegSetValueExA)(iVar1, arg_ch, 0, 4, &arg_10h, 4);\n            (*_sym.imp.ADVAPI32.dll_RegCloseKey)(iVar1);\n        }\n    }\n    fcn.00421e2f(unaff_EBX);\n    return;\n}\n",
        "token_count": 273
    },
    "00412a5b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t fcn.00412a5b(void)\n\n{\n    if (*0x4637b8 == 0) {\n        *0x4637b8 = 1;\n        (*_sym.imp.KERNEL32.dll_InitializeCriticalSection)(0x463958);\n    }\n    return *0x4637b8;\n}\n",
        "token_count": 72
    },
    "00412ac4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00412ac4(uint32_t param_1)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    \n    if (0x10 < param_1) {\n        fcn.00405a76();\n    }\n    if (*0x4637b8 == 0) {\n        fcn.00412a5b();\n    }\n    pcVar2 = _sym.imp.KERNEL32.dll_EnterCriticalSection;\n    piVar1 = param_1 * 4 + 0x463970;\n    if (*piVar1 == 0) {\n        (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(0x463958);\n        if (*piVar1 == 0) {\n            (*_sym.imp.KERNEL32.dll_InitializeCriticalSection)(param_1 * 0x18 + 0x4637c0);\n            *piVar1 = *piVar1 + 1;\n        }\n        (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(0x463958);\n    }\n    (*pcVar2)(param_1 * 0x18 + 0x4637c0);\n    return;\n}\n",
        "token_count": 248
    },
    "00412c96": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00412c96(int32_t param_1)\n\n{\n    uint *puVar1;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    if (param_1 != 0) {\n        var_8h = -(*(param_1 + 0x44) != 0);\n        while (var_8h != 0) {\n            fcn.0041ca4a(&var_8h, &var_ch, &var_4h);\n            puVar1 = *(param_1 + 0x58) + var_4h;\n            *puVar1 = 0;\n            if (*(param_1 + 0x5c) == 2) {\n                puVar1[1] = 0;\n            }\n            (**(param_1 + 0x18))(var_4h);\n        }\n        fcn.0041c924();\n        fcn.0041e02c();\n    }\n    return;\n}\n",
        "token_count": 224
    },
    "00412d62": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00412d62(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint uVar5;\n    \n    iVar1 = fcn.00409b3d();\n    if ((*(iVar1 + 0x10) != 0) && (iVar2 = *(iVar1 + 0x10) + -1,  *(iVar1 + 0x10) = iVar2,  iVar2 == 0)) {\n        if (arg_8h != 0) {\n            if (((arg_8h != -1) && (iVar2 = fcn.004074ed(),  iVar2 != 0)) && (*(iVar2 + 0x3c) != NULL)) {\n                (**(iVar2 + 0x3c))(0, 0);\n            }\n            fcn.00412c96();\n            fcn.00412c96();\n            fcn.00412c96();\n            fcn.00412c96();\n            fcn.00412c96();\n        }\n        iVar2 = fcn.00409b0a();\n        iVar2 = *(iVar2 + 4);\n        iVar3 = fcn.00411b47();\n        if ((((iVar3 != 0) && (iVar2 != 0)) &&\n            ((*(iVar3 + 0xc) == 0 || (uVar4 = fcn.00426325(*(iVar3 + 0xc)),  uVar4 < *(iVar2 + 0x98))))) &&\n           (*(iVar2 + 0x98) != 0)) {\n            arg_8h = 0;\n            if (*(iVar3 + 0xc) != 0) {\n                arg_8h = fcn.00426325(*(iVar3 + 0xc));\n                fcn.004212be(*(iVar3 + 0xc));\n            }\n            iVar2 = fcn.004211fb(*(iVar2 + 0x98));\n            *(iVar3 + 0xc) = iVar2;\n            if ((iVar2 == 0) && (arg_8h != 0)) {\n                uVar5 = fcn.004211fb(arg_8h);\n                *(iVar3 + 0xc) = uVar5;\n            }\n        }\n    }\n    return *(iVar1 + 0x10) != 0;\n}\n",
        "token_count": 531
    },
    "00412ed3": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00412ed3(uint arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t *in_ECX;\n    uint var_4h;\n    \n    if (arg_ch < 0) {\n        arg_ch = 0;\n    }\n    if (arg_10h < 0) {\n        arg_10h = 0;\n    }\n    iVar1 = *(*in_ECX + -0xc);\n    iVar2 = fcn.00412e7f(arg_ch, arg_10h);\n    if (iVar1 < iVar2) {\n        arg_10h = *(*in_ECX + -0xc) - arg_ch;\n    }\n    iVar1 = *in_ECX;\n    iVar2 = *(iVar1 + -0xc);\n    if (iVar2 < arg_ch) {\n        arg_10h = 0;\n    }\n    if ((arg_ch == 0) && (arg_10h == iVar2)) {\n        fcn.00404160();\n    }\n    else {\n        uVar3 = fcn.00404010();\n        fcn.00412eb9(iVar1 + arg_ch, arg_10h, uVar3);\n    }\n    return arg_8h;\n}\n",
        "token_count": 296
    },
    "00412f8f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00412f8f(uint arg_8h, char *arg_ch, int32_t *arg_10h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t arg_10h_00;\n    uint uVar4;\n    int32_t *in_ECX;\n    uint32_t uVar5;\n    ulong uVar6;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar3 = *arg_10h;\n    if (iVar3 < 0) {\n        uVar6 = fcn.00401090(0x80070057);\n        iVar3 = uVar6 >> 0x20;\n        in_ECX = uVar6;\n    }\n    if ((arg_ch == NULL) || (*arg_ch == '\\0')) {\n        iVar2 = *in_ECX;\n        if (iVar3 < *(iVar2 + -0xc)) {\n            uVar4 = fcn.00404010();\n            fcn.00412f50(*arg_10h + iVar2, uVar4);\n            return arg_8h;\n        }\n    }\n    else {\n        iVar2 = *in_ECX;\n        uVar1 = iVar2 + iVar3;\n        uVar5 = *(iVar2 + -0xc) + iVar2;\n        if (uVar1 < uVar5) {\n            iVar3 = fcn.0042649e(uVar1, arg_ch);\n            if (uVar1 + iVar3 < uVar5) {\n                arg_10h_00 = fcn.00426576(uVar1 + iVar3, arg_ch);\n                iVar2 = *arg_10h;\n                *arg_10h = iVar2 + iVar3 + 1 + arg_10h_00;\n                fcn.00412ed3(arg_8h, iVar2 + iVar3, arg_10h_00);\n                return arg_8h;\n            }\n        }\n    }\n    *arg_10h = -1;\n    uVar4 = fcn.00404010();\n    fcn.00403130(uVar4);\n    return arg_8h;\n}\n",
        "token_count": 479
    },
    "0041359a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.0041359a(uchar *param_1, uchar *param_2, uchar *param_3)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uchar *puStack360;\n    uchar *puStack356;\n    uchar *puStack352;\n    uchar *puStack348;\n    uchar *puStack344;\n    uint uStack340;\n    uchar *puStack336;\n    uchar *puStack332;\n    uint arg_8h;\n    uchar auStack284 [276];\n    uint32_t uStack8;\n    \n    uStack8 = *0x460604 ^ &stack0xfffffeb8;\n    arg_8h = 0x14;\n    puStack332 = 0x4135be;\n    fcn.00423bfe();\n    puStack352 = param_3;\n    if (param_1 != NULL) goto code_r0x004135e3;\n    do {\n        puStack332 = 0x4135e3;\n        fcn.00405a76();\ncode_r0x004135e3:\n    } while (param_2 == NULL);\n    puStack332 = &stack0xfffffea4;\n    puStack336 = param_1;\n    uStack340 = 0x104;\n    puStack344 = param_2;\n    puStack348 = 0x413600;\n    uVar1 = (*_sym.imp.KERNEL32.dll_GetFullPathNameA)();\n    if (uVar1 == 0) {\n        puStack348 = 0xffffffff;\n        puStack352 = param_2;\n        puStack356 = 0x104;\n        puStack360 = param_1;\n        fcn.00405abf();\n        puStack348 = param_2;\n        puStack356 = 0x41361a;\n        fcn.0041356f();\n        goto code_r0x004136ec;\n    }\n    if (0x103 < uVar1) goto code_r0x004136ec;\n    puStack348 = 0x41362a;\n    puStack348 = fcn.00410877();\n    puStack352 = 0x413633;\n    fcn.00403130();\n    puStack332 = NULL;\n    puStack352 = &stack0xfffffea8;\n    puStack356 = param_1;\n    puStack360 = 0x413641;\n    fcn.004133d0();\n    puStack360 = puStack344;\n    puStack348 = (*_sym.imp.SHLWAPI.dll_PathIsUNCA)();\n    if (puStack348 == NULL) {\n        puStack356 = &stack0xfffffe9c;\n        puStack360 = &stack0xfffffe98;\n        puStack352 = puStack348;\n        iVar2 = (*_sym.imp.KERNEL32.dll_GetVolumeInformationA)(puStack344, 0, 0, 0);\n        if (iVar2 == 0) {\n            puStack348 = param_2;\n            puStack356 = 0x413675;\n            fcn.0041356f();\n            goto code_r0x00413675;\n        }\n        if ((puStack356 & 2) == 0) {\n            puStack348 = param_1;\n            puStack352 = 0x41368f;\n            (*_sym.imp.USER32.dll_CharUpperA)();\n        }\n        if ((puStack356 & 4) == 0) {\n            puStack352 = param_2;\n            puStack356 = 0x4136a0;\n            puStack348 = &stack0xfffffeb8;\n            puStack348 = (*_sym.imp.KERNEL32.dll_FindFirstFileA)();\n            if (puStack348 != 0xffffffff) {\n                puStack352 = 0x4136ac;\n                (*_sym.imp.KERNEL32.dll_FindClose)();\n                if ((puStack348 != NULL) && (param_1 < puStack348)) {\n                    puStack348 = &stack0xfffffee4;\n                    puStack352 = 0x4136c1;\n                    iVar2 = (*_sym.imp.KERNEL32.dll_lstrlenA)();\n                    if (iVar2 + (puStack348 - param_1) < 0x104) {\n                        puStack356 = &stack0xfffffee4;\n                        puStack352 = 0x104 - (puStack348 - param_1);\n                        puStack360 = 0x4136db;\n                        puStack348 = puStack356;\n                        fcn.00406793();\n                        goto code_r0x004136de;\n                    }\n                }\ncode_r0x00413675:\n                puStack348 = 0x413680;\n                fcn.004028b0();\n                goto code_r0x004136ec;\n            }\n        }\n    }\ncode_r0x004136de:\n    puStack348 = 0x4136e9;\n    fcn.004028b0();\ncode_r0x004136ec:\n    *in_FS_OFFSET = uStack340;\n    puStack332 = 0x413707;\n    fcn.00421e2f(arg_8h);\n    return;\n}\n",
        "token_count": 1115
    },
    "00413b8a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00413b8a(uint *param_1, int32_t param_2, int32_t param_3)\n\n{\n    code *pcVar1;\n    uint *puVar2;\n    \n    if ((param_2 != 0) && (param_3 != 0)) {\n        puVar2 = fcn.0040594d(param_2 * param_3 + 4);\n        *puVar2 = *param_1;\n        *param_1 = puVar2;\n        return;\n    }\n    fcn.00405a76();\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 144
    },
    "00414129": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "contain loop"
        ],
        "decompiled_code": "\nuint * fcn.00414129(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint unaff_retaddr;\n    \n    if (param_1 == 0) {\n        fcn.00405a76();\n    }\n    iVar1 = fcn.00409b0a();\n    fcn.00412ac4(0);\n    puVar2 = *(iVar1 + 0x1c);\n    while( true ) {\n        if (puVar2 == NULL) {\n            fcn.00412b31(0);\n            return NULL;\n        }\n        iVar1 = (*_sym.imp.KERNEL32.dll_lstrcmpA)(unaff_retaddr, *puVar2);\n        if (iVar1 == 0) break;\n        puVar2 = puVar2[5];\n    }\n    fcn.00412b31(0);\n    return puVar2;\n}\n",
        "token_count": 201
    },
    "0041497d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_14h\n\nvoid __cdecl\nfcn.0041497d(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h, uint arg_28h, uint arg_2ch, uint arg_30h, uint arg_34h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint *puVar3;\n    int32_t *piVar4;\n    int32_t extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_18h;\n    uint var_14h;\n    uint var_4h;\n    \n    fcn.00423c31(0x10);\n    *(unaff_EBP + -0x18) = extraout_ECX;\n    piVar4 = *(extraout_ECX + 0x20);\n    *(unaff_EBP + -0x14) = 0;\n    iVar1 = *piVar4;\n    *(unaff_EBP + -4) = 0;\n    iVar1 = (**(iVar1 + 0x128))(extraout_ECX, unaff_EBP + -0x14, *(unaff_EBP + 0x24), *(unaff_EBP + 0xc));\n    if ((iVar1 != 0) && (*(unaff_EBP + -0x14) == 0)) {\n        iVar1 = fcn.00409b0a();\n        if (*(iVar1 + 0x3c) == 0) {\n            fcn.00405a76();\n        }\n        iVar1 = fcn.00409b0a();\n        uVar2 = (**(**(iVar1 + 0x3c) + 0xc))(extraout_ECX, *(unaff_EBP + 0x10));\n        *(unaff_EBP + -0x14) = uVar2;\n    }\n    *(unaff_EBP + -4) = 0xffffffff;\n    if (*(unaff_EBP + -0x14) != NULL) {\n        if (**(unaff_EBP + 0x10) == 2) {\n            iVar1 = (**(**(unaff_EBP + -0x14) + 0x50))\n                              (*(unaff_EBP + 8), *(unaff_EBP + 0xc), *(unaff_EBP + 0x14), *(unaff_EBP + 0x18), \n                               *(unaff_EBP + 0x1c), *(unaff_EBP + 0x20), *(unaff_EBP + 0x24), *(unaff_EBP + 0x28), \n                               *(unaff_EBP + 0x2c), *(unaff_EBP + 0x30));\n        }\n        else {\n            iVar1 = fcn.00415aa0(*(unaff_EBP + 8), *(unaff_EBP + 0x10), *(unaff_EBP + 0x18), *(unaff_EBP + 0x1c), \n                                 *(unaff_EBP + 0x20), *(unaff_EBP + 0x24));\n        }\n        *(unaff_EBP + 0x24) = -1 < iVar1;\n        if (-1 < iVar1 == 0) {\n            if (*(unaff_EBP + -0x14) != NULL) {\n                (**(**(unaff_EBP + -0x14) + 4))(1);\n            }\n        }\n        else {\n            puVar3 = fcn.0040594d(0xc);\n            if (puVar3 == NULL) {\n                puVar3 = NULL;\n            }\n            else {\n                uVar2 = *(unaff_EBP + -0x14);\n                *puVar3 = 0;\n                puVar3[1] = uVar2;\n                puVar3[2] = 0;\n            }\n            fcn.0041cd52(puVar3);\n            iVar1 = *(unaff_EBP + -0x14);\n            if (*(iVar1 + 0x24) != 0) {\n                piVar4 = fcn.0041cb52(*(iVar1 + 0x24));\n                *piVar4 = iVar1;\n                iVar1 = *(unaff_EBP + -0x14);\n            }\n            if (*(unaff_EBP + 0x34) != NULL) {\n                **(unaff_EBP + 0x34) = iVar1;\n            }\n        }\n    }\n    fcn.00423cd6();\n    return;\n}\n",
        "token_count": 1054
    },
    "00414cbd": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.00414cbd(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint lpModuleName;\n    uint var_4h;\n    int32_t iVar4;\n    \n    iVar4 = 0x20;\n    fcn.00423c67(0x20);\n    *(unaff_EBP + -0x2c) = extraout_ECX;\n    *extraout_ECX = vtable.COleControlContainer.0;\n    pcVar3 = extraout_ECX[0x11];\n    *(unaff_EBP + -4) = 2;\n    *(unaff_EBP + -0x24) = pcVar3;\n    while (pcVar3 != NULL) {\n        *(unaff_EBP + -0x28) = pcVar3;\n        iVar4 = unaff_EBP + -0x24;\n        piVar1 = fcn.00408771();\n        iVar2 = *piVar1;\n        if (((iVar2 != 0) && (*(iVar2 + 4) != 0)) && (*(*(iVar2 + 4) + 0x90) == 0)) {\n            iVar4 = *(unaff_EBP + -0x28);\n            fcn.0041cc3c();\n            fcn.004144a3();\n            fcn.0040597d(iVar2);\n        }\n        pcVar3 = *(unaff_EBP + -0x24);\n    }\n    pcVar3 = extraout_ECX[0x13];\n    while (pcVar3 != NULL) {\n        iVar2 = fcn.0041cc0b(iVar4);\n        if (iVar2 != 0) {\n            fcn.004144a3();\n            fcn.0040597d(iVar2);\n        }\n        pcVar3 = extraout_ECX[0x13];\n    }\n    fcn.0041c924();\n    fcn.00412245(extraout_ECX + 0x19);\n    *(unaff_EBP + -0x20) = 0;\n    iVar4 = fcn.004123f5(0x455d88, unaff_EBP + -0x20);\n    if (-1 < iVar4) {\n        *(unaff_EBP + -0x1c) = str.mfcm80.dll._0_4_;\n        *(unaff_EBP + -0x18) = str.mfcm80.dll._4_4_;\n        *(unaff_EBP + -0x14) = str.mfcm80.dll._8_2_;\n        *(unaff_EBP + -0x12) = str.mfcm80.dll[10];\n        iVar4 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(unaff_EBP + -0x1c);\n        if ((iVar4 != 0) &&\n           (pcVar3 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar4, \"MFCM80ReleaseManagedReferences\"),  pcVar3 != NULL))\n        {\n            (*pcVar3)(*(unaff_EBP + -0x20));\n        }\n        (**(**(unaff_EBP + -0x20) + 8))(*(unaff_EBP + -0x20));\n    }\n    *(unaff_EBP + -4) = 1;\n    fcn.0041ccc4();\n    *(unaff_EBP + -4) = 0;\n    fcn.0041caf9();\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.004071dc();\n    fcn.00423cea();\n    return;\n}\n",
        "token_count": 856
    },
    "00414efd": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00414efd(uint arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t in_ECX;\n    int32_t var_4h;\n    \n    var_4h = *(in_ECX + 0x44);\n    while (var_4h != 0) {\n        piVar1 = fcn.00408771(&var_4h);\n        if (*(*piVar1 + 4) != 0) {\n            fcn.00415f9c(arg_8h);\n        }\n    }\n    return;\n}\n",
        "token_count": 127
    },
    "00415723": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00415723(uint arg_8h)\n\n{\n    int64_t iVar1;\n    int32_t iVar2;\n    int32_t *extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_14h;\n    uint var_4h;\n    \n    fcn.00423c31(0xc);\n    *(unaff_EBP + -0x14) = extraout_ECX;\n    *extraout_ECX = 0;\n    *(unaff_EBP + -4) = 0;\n    iVar1 = *(unaff_EBP + 8) * 8;\n    iVar2 = fcn.0040594d(-(iVar1 >> 0x20 != 0) | iVar1);\n    *extraout_ECX = iVar2;\n    if (*extraout_ECX != 0) {\n        extraout_ECX[1] = *(unaff_EBP + 8);\n    }\n    fcn.00423cd6();\n    return;\n}\n",
        "token_count": 234
    },
    "00415848": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "contain loop"
        ],
        "decompiled_code": "\nuint32_t __thiscall fcn.00415848(int32_t param_1, uint32_t *param_2)\n\n{\n    int32_t iVar1;\n    uint32_t in_EAX;\n    uint32_t *puVar2;\n    uint32_t uVar3;\n    \n    if (*(param_1 + 0x1c) == '\\0') {\n        iVar1 = *(*(param_1 + 0x14) + 8);\n        in_EAX = *param_2;\n        if (in_EAX <= *(param_1 + 0xc) + -1 + iVar1) {\n            in_EAX = in_EAX - iVar1;\n            *param_2 = in_EAX;\ncode_r0x00415894:\n            return CONCAT31(in_EAX >> 8, 1);\n        }\n    }\n    else {\n        uVar3 = 0;\n        if (*(param_1 + 0xc) != 0) {\n            in_EAX = *param_2;\n            puVar2 = *(param_1 + 0x14) + 8;\n            do {\n                if (*puVar2 == in_EAX) {\n                    *param_2 = uVar3;\n                    goto code_r0x00415894;\n                }\n                uVar3 = uVar3 + 1;\n                puVar2 = puVar2 + 0xc;\n            } while (uVar3 < *(param_1 + 0xc));\n        }\n    }\n    return in_EAX & 0xffffff00;\n}\n",
        "token_count": 332
    },
    "00415bfb": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00415bfb(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    uint var_ch;\n    int32_t *var_8h;\n    int32_t *var_4h;\n    \n    if ((*(in_ECX + 0x50) != 0) && (iVar1 = (****(in_ECX + 0x50))(*(in_ECX + 0x50), 0x455ec8, &var_8h),  -1 < iVar1)) {\n        var_4h = NULL;\n        var_ch = 0;\n        iVar1 = (**(*var_8h + 0x10))(var_8h, arg_8h, &var_4h);\n        if (-1 < iVar1) {\n            (**(*var_4h + 0x14))(var_4h, arg_ch, &var_ch);\n            (**(*var_4h + 8))(var_4h);\n        }\n        (**(*var_8h + 8))(var_8h);\n        return var_ch;\n    }\n    return 0;\n}\n",
        "token_count": 256
    },
    "00415c65": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00415c65(uint arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    int32_t *var_8h;\n    int32_t *var_4h;\n    \n    if ((arg_ch != 0) && (in_ECX[0x14] != 0)) {\n        var_8h = in_ECX;\n        iVar1 = (***in_ECX[0x14])(in_ECX[0x14], 0x455ec8, &var_8h);\n        if (-1 < iVar1) {\n            var_4h = NULL;\n            iVar1 = (**(*var_8h + 0x10))(var_8h, arg_8h, &var_4h);\n            if (-1 < iVar1) {\n                (**(*var_4h + 0x18))(var_4h, arg_ch);\n                (**(*var_4h + 8))(var_4h);\n            }\n            (**(*var_8h + 8))(var_8h);\n        }\n    }\n    return;\n}\n",
        "token_count": 251
    },
    "00415cc5": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00415cc5(uint *arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    uint32_t uVar2;\n    uint var_20h;\n    uint var_1ch;\n    uint *var_18h;\n    int32_t *var_14h;\n    int32_t var_10h;\n    int32_t *var_ch;\n    int32_t *var_8h;\n    int32_t *var_4h;\n    \n    *arg_8h = *0x455ce8;\n    arg_8h[1] = *0x455cec;\n    arg_8h[2] = *0x455cf0;\n    arg_8h[3] = *0x455cf4;\n    var_ch = NULL;\n    iVar1 = (****(in_ECX + 0x50))(*(in_ECX + 0x50), 0x455e98, &var_ch);\n    if (-1 < iVar1) {\n        (**(*var_ch + 0x10))(var_ch, 1, arg_8h);\n        (**(*var_ch + 8))(var_ch);\n    }\n    var_14h = NULL;\n    iVar1 = fcn.00406eb0(arg_8h, 0x455ce8);\n    if ((iVar1 != 0) && (iVar1 = (****(in_ECX + 0x50))(*(in_ECX + 0x50), 0x455ea8, &var_14h),  -1 < iVar1)) {\n        var_4h = NULL;\n        iVar1 = (**(*var_14h + 0xc))(var_14h, &var_4h);\n        if (-1 < iVar1) {\n            iVar1 = (**(*var_4h + 0xc))(var_4h, &var_10h);\n            if (-1 < iVar1) {\n                uVar2 = 0;\n                if (*(var_10h + 0x30) != 0) {\n                    do {\n                        iVar1 = (**(*var_4h + 0x24))(var_4h, uVar2, &var_1ch);\n                        if ((-1 < iVar1) && ((var_1ch & 7) == 3)) {\n                            var_8h = NULL;\n                            iVar1 = (**(*var_4h + 0x20))(var_4h, uVar2, &var_20h);\n                            if ((-1 < iVar1) && (iVar1 = (**(*var_4h + 0x38))(var_4h, var_20h, &var_8h),  -1 < iVar1)) {\n                                iVar1 = (**(*var_8h + 0xc))(var_8h, &var_18h);\n                                if (-1 < iVar1) {\n                                    *arg_8h = *var_18h;\n                                    arg_8h[1] = var_18h[1];\n                                    arg_8h[2] = var_18h[2];\n                                    arg_8h[3] = var_18h[3];\n                                    (**(*var_8h + 0x4c))(var_8h, var_18h);\n                                }\n                                (**(*var_8h + 8))(var_8h);\n                            }\n                            break;\n                        }\n                        uVar2 = uVar2 + 1;\n                    } while (uVar2 < *(var_10h + 0x30));\n                }\n                (**(*var_4h + 0x4c))(var_4h, var_10h);\n            }\n            (**(*var_4h + 8))(var_4h);\n        }\n        (**(*var_14h + 8))(var_14h);\n    }\n    iVar1 = fcn.00406eb0(arg_8h, 0x455ce8);\n    return iVar1 == 0;\n}\n",
        "token_count": 872
    },
    "00415e8f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00415e8f(int32_t arg_8h)\n\n{\n    uint8_t *puVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    uint8_t *puVar3;\n    uint8_t uVar4;\n    int32_t iVar5;\n    uint var_4h;\n    \n    if ((*(in_ECX + 0x80) == 0) || (*(in_ECX + 0x7c) == 0)) {\n        var_4h = 0;\n    }\n    else {\n        puVar1 = fcn.0040594d(*(in_ECX + 0x80) * 6);\n        iVar2 = (*_sym.imp.USER32.dll_CopyAcceleratorTableA)(*(in_ECX + 0x7c), puVar1, *(in_ECX + 0x80));\n        var_4h = 0;\n        iVar5 = 0;\n        puVar3 = puVar1;\n        if (0 < iVar2) {\n            do {\n                if (arg_8h == 0) {\n                    fcn.00405a76();\ncode_r0x00415f27:\n                    var_4h = 1;\n                    break;\n                }\n                if (*(arg_8h + 4) == 0x106) {\n                    uVar4 = 0x10;\n                }\n                else {\n                    uVar4 = 0;\n                }\n                if (((*puVar3 & 0xfd) == uVar4) && (*(puVar3 + 2) == *(arg_8h + 8))) goto code_r0x00415f27;\n                iVar5 = iVar5 + 1;\n                puVar3 = puVar3 + 6;\n            } while (iVar5 < iVar2);\n        }\n        fcn.0040597d(puVar1);\n    }\n    return var_4h;\n}\n",
        "token_count": 420
    },
    "00415f43": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00415f43(uint arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t *in_ECX;\n    int32_t *var_4h;\n    \n    if ((*(in_ECX + 0x1c) & 0x4000) == 0) {\n        (**(*in_ECX + 0xb0))();\n    }\n    var_4h = NULL;\n    if (in_ECX[0x14] != 0) goto code_r0x00415f69;\n    while( true ) {\n        fcn.00405a76();\ncode_r0x00415f69:\n        piVar1 = in_ECX + 0x14;\n        in_ECX = &var_4h;\n        iVar2 = (****piVar1)(*piVar1, 0x455e88);\n        if (iVar2 < 0) break;\n        if (var_4h != NULL) {\n            (**(*var_4h + 0x10))(var_4h, arg_8h);\n            (**(*var_4h + 8))(var_4h);\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 270
    },
    "00415f9c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00415f9c(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    int32_t *extraout_ECX;\n    int32_t *var_4h;\n    \n    var_4h = in_ECX;\n    if (in_ECX[0x14] != 0) goto code_r0x00415fab;\n    while( true ) {\n        fcn.00405a76();\n        in_ECX = extraout_ECX;\ncode_r0x00415fab:\n        var_4h = NULL;\n        iVar1 = (***in_ECX[0x14])(in_ECX[0x14], 0x455e88, &var_4h);\n        if (iVar1 < 0) break;\n        if (var_4h != NULL) {\n            (**(*var_4h + 0x18))(var_4h, arg_8h);\n            (**(*var_4h + 8))(var_4h);\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 238
    },
    "00416027": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00416027(int32_t param_1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    \n    piVar1 = *(param_1 + 0x28);\n    *(param_1 + 0x24) = 0;\n    if (piVar1 != NULL) {\n        if (piVar1[8] != 0) {\n            piVar1 = (**(*piVar1 + 0xf0))();\n            iVar2 = (*_sym.imp.USER32.dll_IsWindow)(*(*(param_1 + 0x28) + 0x20));\n            if ((iVar2 != 0) && (*piVar1 != 0)) {\n                fcn.0040d2a5();\n            }\n            fcn.0040cd9d();\n        }\n        *(*(param_1 + 0x28) + 0x50) = 0;\n    }\n    return;\n}\n",
        "token_count": 208
    },
    "00416075": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __thiscall fcn.00416075(int32_t param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    if ((*(param_1 + 0x28) != 0) &&\n       (iVar1 = (**(**(param_1 + 0x28) + 0xc))(*(param_1 + 0x2c), 0xfffffffe, param_2, 0),  iVar1 != 0)) {\n        return 1;\n    }\n    iVar1 = *(param_1 + 0x20);\n    if ((iVar1 == 0) || (*(iVar1 + 0x20) == 0)) {\n        iVar1 = fcn.00405a76();\n    }\n    uVar2 = (**(**(iVar1 + 0x20) + 0xc))(*(param_1 + 0x2c), 0xfffffffe, param_2, 0);\n    return uVar2;\n}\n",
        "token_count": 219
    },
    "004169ad": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004169ad(int32_t param_1)\n\n{\n    uint uVar1;\n    \n    if (*(param_1 + 0xc) == 0) {\n        return 0;\n    }\n    (**(**(param_1 + 0xc) + 0xb4))();\n    (**(**(*(param_1 + 0xc) + 0x90) + 4))(param_1, 1);\n    // WARNING: Could not recover jumptable at 0x004169e2. Too many branches\n    // WARNING: Treating indirect jump as call\n    uVar1 = (****(*(param_1 + 0xc) + 0x90))();\n    return uVar1;\n}\n",
        "token_count": 160
    },
    "00418c19": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00418c19(int32_t *arg_8h)\n\n{\n    code **ppcVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    int32_t *in_ECX;\n    \n    puVar2 = arg_8h;\n    if (arg_8h == NULL) {\n        return -0x7fffbffb;\n    }\n    ppcVar1 = *arg_8h;\n    arg_8h = NULL;\n    iVar3 = (**ppcVar1)(puVar2, 0x45327c, &arg_8h);\n    if (iVar3 < 0) {\ncode_r0x00418c5a:\n        if (arg_8h != NULL) {\n            (**(*arg_8h + 8))(arg_8h);\n        }\n    }\n    else {\n        if (*in_ECX == 0) {\n            iVar3 = fcn.00415723(1);\n            if (iVar3 < 0) goto code_r0x00418c5a;\n            *(*in_ECX + 4) = 1;\n        }\n        iVar3 = fcn.00415784(in_ECX[3], in_ECX[4], *in_ECX, in_ECX[6], arg_8h);\n        if (arg_8h != NULL) {\n            (**(*arg_8h + 8))(arg_8h);\n        }\n    }\n    return iVar3;\n}\n",
        "token_count": 323
    },
    "00419449": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "log keystrokes via raw input data/18af53aa16f24c3fa3538f182ae5df5a"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00419449(uint arg_8h)\n\n{\n    int32_t *piVar1;\n    int16_t iVar2;\n    int32_t iVar3;\n    int32_t in_ECX;\n    int32_t arg_ch;\n    int32_t iVar4;\n    uint32_t var_4h;\n    \n    iVar4 = 0;\n    var_4h = 0;\n    if (*(in_ECX + 0xc) != 0) {\n        do {\n            if ((*(in_ECX + 0x10) == 0) || (*(*(in_ECX + 0x10) + var_4h) != '\\x01')) {\n                iVar2 = *(iVar4 + 0x14 + *(in_ECX + 0x14));\n                if ((iVar2 == 0xd) || (iVar2 == 9)) {\n                    iVar3 = *(in_ECX + 0x14) + iVar4;\n                    if (*((*(iVar3 + 0x10) + 3 + *(iVar3 + 4) & 0xfffffffcU) + 4 + *(in_ECX + 8)) != 0)\n                    goto code_r0x00419516;\n                    iVar3 = *(in_ECX + 0x14) + iVar4;\n                    arg_ch = *(iVar3 + 4) + *(in_ECX + 8);\n                }\n                else {\n                    iVar3 = *(in_ECX + 0x14) + iVar4;\n                    arg_ch = *(iVar3 + 4) + *(in_ECX + 8);\n                }\n                fcn.0041939b(*(iVar3 + 0x14), arg_ch, arg_8h);\n            }\n            else {\n                iVar3 = *(in_ECX + 0x14) + iVar4;\n                if (((*((*(iVar3 + 0x10) + 3 + *(iVar3 + 4) & 0xfffffffcU) + 4 + *(in_ECX + 8)) != 3) &&\n                    (piVar1 = *(iVar4 + 4 + *(in_ECX + 0x14)) + *(in_ECX + 8),  piVar1 != NULL)) && (*piVar1 != 0)) {\n                    (*_sym.imp.ole32.dll_CoTaskMemFree)(*piVar1);\n                    *piVar1 = 0;\n                }\n            }\ncode_r0x00419516:\n            var_4h = var_4h + 1;\n            iVar4 = iVar4 + 0x30;\n        } while (var_4h < *(in_ECX + 0xc));\n    }\n    return;\n}\n",
        "token_count": 582
    },
    "0041986f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_35h\n\nvoid __cdecl fcn.0041986f(uint arg_8h)\n\n{\n    uint8_t uVar1;\n    uint8_t uVar2;\n    uint16_t uVar3;\n    code **ppcVar4;\n    uint *puVar5;\n    int32_t iVar6;\n    uint uVar7;\n    int32_t iVar8;\n    int32_t *piVar9;\n    int32_t *extraout_ECX;\n    int32_t unaff_EBP;\n    uint32_t arg_24h;\n    uint *puVar10;\n    uint32_t uVar11;\n    int32_t iVar12;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_35h;\n    uint var_30h;\n    uint var_2ch;\n    uint32_t var_28h;\n    uint var_24h;\n    uint var_4h;\n    \n    fcn.00423c9d(0x68);\n    *(unaff_EBP + -0x24) = *0x4533d4;\n    *(unaff_EBP + -0x20) = *0x4533d8;\n    *(unaff_EBP + -0x1c) = *0x4533dc;\n    *(unaff_EBP + -0x50) = *(unaff_EBP + 8);\n    *(unaff_EBP + -0x4c) = extraout_ECX;\n    *(unaff_EBP + -0x18) = *0x4533e0;\n    *(unaff_EBP + -0x35) = 0;\n    if (*(unaff_EBP + 8) == 0) goto code_r0x00419e9d;\n    *(unaff_EBP + -0x34) = 0;\n    puVar10 = *(unaff_EBP + -0x50);\n    ppcVar4 = *puVar10;\n    *(unaff_EBP + -4) = 0;\n    iVar6 = (**ppcVar4)(puVar10, 0x45327c, unaff_EBP + -0x34);\n    *(unaff_EBP + -0x28) = iVar6;\n    if (iVar6 < 0) {\n        piVar9 = *(unaff_EBP + -0x34);\n        *(unaff_EBP + -4) = 0xffffffff;\ncode_r0x004198d6:\n        if (piVar9 != NULL) {\n            (**(*piVar9 + 8))(piVar9);\n        }\n        goto code_r0x00419e9d;\n    }\n    *(unaff_EBP + -0x2c) = 0;\n    if (extraout_ECX[5] == 0) {\n        *(unaff_EBP + -0x28) = 0;\n        ppcVar4 = *puVar10;\n        *(unaff_EBP + -4) = 1;\n        iVar6 = (**ppcVar4)(puVar10, 0x45325c, unaff_EBP + -0x28);\n        piVar9 = *(unaff_EBP + -0x28);\n        if (iVar6 < 0) {\n            *(unaff_EBP + -4) = 0;\n            if (piVar9 != NULL) {\n                (**(*piVar9 + 8))(piVar9);\n            }\n            piVar9 = *(unaff_EBP + -0x34);\n            *(unaff_EBP + -4) = 0xffffffff;\n            if (piVar9 != NULL) {\n                (**(*piVar9 + 8))(piVar9);\n            }\n            goto code_r0x00419e9d;\n        }\n        iVar6 = (**(*piVar9 + 0xc))(piVar9, extraout_ECX + 3, extraout_ECX + 5, extraout_ECX + 6);\n        piVar9 = *(unaff_EBP + -0x28);\n        *(unaff_EBP + -4) = 0;\n        if (-1 < iVar6) {\n            *(extraout_ECX + 7) = 0;\n            if (piVar9 != NULL) {\n                (**(*piVar9 + 8))(piVar9);\n            }\n            goto code_r0x00419982;\n        }\n        if (piVar9 != NULL) {\n            (**(*piVar9 + 8))(piVar9);\n        }\n        piVar9 = *(unaff_EBP + -0x34);\n        *(unaff_EBP + -4) = 0xffffffff;\ncode_r0x00419e93:\n        if (piVar9 != NULL) {\n            (**(*piVar9 + 8))(piVar9);\n        }\n        goto code_r0x00419e9d;\n    }\n    *(extraout_ECX + 7) = 1;\ncode_r0x00419982:\n    uVar11 = extraout_ECX[3];\n    *(unaff_EBP + -0x40) = 0;\n    *(unaff_EBP + -4) = 2;\n    uVar7 = fcn.0040594d(-(uVar11 * 0x34 >> 0x20 != 0) | uVar11 * 0x34);\n    *(unaff_EBP + -4) = 0;\n    *(unaff_EBP + -0x40) = uVar7;\n    if (*(unaff_EBP + -0x40) == 0) {\ncode_r0x004199c3:\n        piVar9 = *(unaff_EBP + -0x34);\n        *(unaff_EBP + -4) = 0xffffffff;\n    }\n    else {\n        *(unaff_EBP + -0x48) = *(unaff_EBP + -0x40);\n        iVar6 = extraout_ECX[3];\n        *(unaff_EBP + -4) = 5;\n        iVar6 = fcn.0040594d(iVar6);\n        extraout_ECX[4] = iVar6;\n        *(unaff_EBP + -4) = 4;\n        uVar11 = 0;\n        if (extraout_ECX[4] != 0) {\n            *(unaff_EBP + -0x30) = *(unaff_EBP + -0x40);\n            *(unaff_EBP + -0x44) = 0;\n            while (uVar11 < extraout_ECX[3]) {\n                *(uVar11 + extraout_ECX[4]) = 0;\n                iVar12 = uVar11 * 0x30;\n                iVar6 = extraout_ECX[5] + iVar12;\n                if ((*(iVar6 + 0x10) < extraout_ECX[9] || *(iVar6 + 0x10) == extraout_ECX[9]) ||\n                   (*(iVar6 + 0x14) == 0xd)) {\n                    if (*(iVar6 + 0x14) == 0xd) {\n                        *(unaff_EBP + -0x3c) = 0;\n                        *(unaff_EBP + -4) = 9;\n                        uVar7 = fcn.0040594d(0x14);\n                        *(unaff_EBP + -0x3c) = uVar7;\n                        *(unaff_EBP + -4) = 4;\n                        if (*(unaff_EBP + -0x3c) == 0) {\n                            iVar6 = *(unaff_EBP + -0x44);\n                            if (iVar6 != 0) {\n                                puVar10 = *(unaff_EBP + -0x40) + 0x14;\n                                do {\n                                    fcn.0040597d(*puVar10);\n                                    puVar10 = puVar10 + 0xd;\n                                    iVar6 = iVar6 + -1;\n                                } while (iVar6 != 0);\n                            }\n                            goto code_r0x00419bea;\n                        }\n                        puVar10 = 0x4533b4;\ncode_r0x00419c0c:\n                        puVar5 = *(unaff_EBP + -0x3c);\n                        *puVar5 = 0;\n                        puVar5[1] = *puVar10;\n                        puVar5[2] = puVar10[1];\n                        puVar5[3] = puVar10[2];\n                        puVar5[4] = puVar10[3];\n                        iVar12 = *(unaff_EBP + -0x44) * 0x30;\n                        *(extraout_ECX[5] + 0x14 + iVar12) = 0xd;\n                        *(extraout_ECX[5] + 0x10 + iVar12) = 4;\n                        iVar6 = extraout_ECX[5];\n                        *(unaff_EBP + -0x28) = iVar6 + iVar12;\n                        iVar8 = fcn.0041589b(*(iVar6 + iVar12 + 0x14));\n                        uVar7 = *(unaff_EBP + -0x3c);\n                        iVar6 = *(unaff_EBP + -0x28);\n                        arg_24h = iVar8 + -1 + *(unaff_EBP + -0x2c) & ~(iVar8 - 1U);\n                        uVar11 = *(iVar6 + 0x10) + 3 + arg_24h & 0xfffffffc;\n                        iVar8 = uVar11 + 4;\n                        uVar1 = *(iVar6 + 0x17);\n                        uVar2 = *(iVar6 + 0x16);\n                        var_24h = *(iVar6 + 0x10);\n                        uVar3 = *(iVar6 + 0x14);\n                        var_2ch = *(iVar6 + 8);\n                        *(unaff_EBP + -0x28) = iVar8;\n                    }\n                    else {\n                        if (*(iVar6 + 0x14) == 0x81) {\n                            *(iVar6 + 0x10) = *(iVar6 + 0x10) + 1;\n                        }\n                        iVar6 = extraout_ECX[5] + iVar12;\n                        if (*(iVar6 + 0x14) == 0x82) {\n                            *(iVar6 + 0x10) = *(iVar6 + 0x10) * 2 + 2;\n                        }\n                        iVar6 = extraout_ECX[5];\n                        *(unaff_EBP + -0x28) = iVar6 + iVar12;\n                        iVar6 = fcn.0041589b(*(iVar6 + iVar12 + 0x14));\n                        arg_24h = iVar6 + -1 + *(unaff_EBP + -0x2c) & ~(iVar6 - 1U);\n                        iVar6 = *(unaff_EBP + -0x28);\n                        uVar11 = *(iVar6 + 0x10) + 3 + arg_24h & 0xfffffffc;\n                        uVar7 = 0;\n                        iVar8 = uVar11 + 4;\n                        uVar1 = *(iVar6 + 0x17);\n                        uVar2 = *(iVar6 + 0x16);\n                        var_24h = *(iVar6 + 0x10);\n                        uVar3 = *(iVar6 + 0x14);\n                        var_2ch = *(iVar6 + 8);\n                        *(unaff_EBP + -0x28) = iVar8;\n                    }\n                    var_28h = uVar3;\n                    *(unaff_EBP + -0x2c) = iVar8;\n                    *(unaff_EBP + -0x2c) = *(unaff_EBP + -0x2c) + 4;\n                    fcn.00416c14(*(unaff_EBP + -0x30), var_2ch, var_28h, var_24h, uVar2, uVar1, 0, arg_24h, uVar11, \n                                 iVar8, uVar7);\n                }\n                else if (extraout_ECX[8] == 2) {\n                    uVar11 = *(unaff_EBP + -0x2c) + 3U & 0xfffffffc;\n                    *(unaff_EBP + -0x28) = uVar11 + 4;\n                    *(unaff_EBP + -0x2c) = uVar11 + 8;\n                    uVar7 = *(unaff_EBP + -0x28);\n                    *(iVar6 + 0x10) = 0;\n                    iVar6 = extraout_ECX[5] + iVar12;\n                    arg_24h = 0;\n                    fcn.00416d2d(*(unaff_EBP + -0x30), *(iVar6 + 8), *(iVar6 + 0x14), *(iVar6 + 0x10), *(iVar6 + 0x16), \n                                 *(iVar6 + 0x17), 0, 0, uVar11, uVar7, 0, 0, 1);\n                }\n                else {\n                    if (extraout_ECX[8] != 1) {\n                        if (*(unaff_EBP + -0x35) == '\\0') {\n                            *(unaff_EBP + -0x60) = 0x89;\n                            *(unaff_EBP + -0x5c) = 0x8b;\n                            *(unaff_EBP + -0x58) = 0;\n                            *(unaff_EBP + -0x54) = 0;\n                            fcn.00419780(*(unaff_EBP + -0x50), unaff_EBP + -0x60, unaff_EBP + -0x58, 2);\n                            if (*(unaff_EBP + -0x58) == 0) {\n                                if (*(unaff_EBP + -0x54) != 0) {\n                                    puVar10 = 0x4533c4;\n                                    goto code_r0x00419b91;\n                                }\n                            }\n                            else {\n                                puVar10 = 0x4533d4;\ncode_r0x00419b91:\n                                *(unaff_EBP + -0x24) = *puVar10;\n                                *(unaff_EBP + -0x20) = puVar10[1];\n                                *(unaff_EBP + -0x1c) = puVar10[2];\n                                *(unaff_EBP + -0x18) = puVar10[3];\n                            }\n                            *(unaff_EBP + -0x35) = 1;\n                        }\n                        *(unaff_EBP + -0x3c) = 0;\n                        *(unaff_EBP + -4) = 7;\n                        uVar7 = fcn.0040594d(0x14);\n                        *(unaff_EBP + -0x3c) = uVar7;\n                        *(unaff_EBP + -4) = 4;\n                        if (*(unaff_EBP + -0x3c) != 0) {\n                            puVar10 = unaff_EBP + -0x24;\n                            goto code_r0x00419c0c;\n                        }\n                        iVar6 = *(unaff_EBP + -0x44);\n                        if (iVar6 != 0) {\n                            puVar10 = *(unaff_EBP + -0x40) + 0x14;\n                            do {\n                                fcn.0040597d(*puVar10);\n                                puVar10 = puVar10 + 0xd;\n                                iVar6 = iVar6 + -1;\n                            } while (iVar6 != 0);\n                        }\n                        goto code_r0x00419bea;\n                    }\n                    *(iVar6 + 0x14) = *(iVar6 + 0x14) | 0x4000;\n                    iVar6 = *(unaff_EBP + -0x44);\n                    *(extraout_ECX[5] + 0x10 + iVar12) = 4;\n                    *(iVar6 + extraout_ECX[4]) = 1;\n                    iVar6 = extraout_ECX[5];\n                    *(unaff_EBP + -0x28) = iVar6 + iVar12;\n                    iVar6 = fcn.0041589b(*(iVar6 + iVar12 + 0x14));\n                    arg_24h = iVar6 + -1 + *(unaff_EBP + -0x2c) & ~(iVar6 - 1U);\n                    iVar6 = *(unaff_EBP + -0x28);\n                    uVar11 = *(iVar6 + 0x10) + 3 + arg_24h & 0xfffffffc;\n                    *(unaff_EBP + -0x28) = uVar11 + 4;\n                    *(unaff_EBP + -0x2c) = uVar11 + 8;\n                    fcn.00416d2d(*(unaff_EBP + -0x30), *(iVar6 + 8), *(iVar6 + 0x14), *(iVar6 + 0x10), *(iVar6 + 0x16), \n                                 *(iVar6 + 0x17), 0, arg_24h, uVar11, *(unaff_EBP + -0x28), 0, 0, 0);\n                }\n                *(unaff_EBP + -0x30) = *(unaff_EBP + -0x30) + 0x34;\n                iVar6 = extraout_ECX[5];\n                *(unaff_EBP + -0x44) = *(unaff_EBP + -0x44) + 1;\n                *(iVar6 + 4 + iVar12) = arg_24h;\n                uVar11 = *(unaff_EBP + -0x44);\n            }\n            if (*extraout_ECX == 0) {\n                iVar6 = fcn.00415723(1);\n                *(unaff_EBP + -0x28) = iVar6;\n                if (iVar6 < 0) {\n                    uVar11 = 0;\n                    if (extraout_ECX[3] != 0) {\n                        puVar10 = *(unaff_EBP + -0x40) + 0x14;\n                        do {\n                            fcn.0040597d(*puVar10);\n                            uVar11 = uVar11 + 1;\n                            puVar10 = puVar10 + 0xd;\n                        } while (uVar11 < extraout_ECX[3]);\n                    }\n                    fcn.0040597d(extraout_ECX[4]);\n                    uVar7 = *(unaff_EBP + -0x48);\n                    extraout_ECX[4] = 0;\n                    *(unaff_EBP + -4) = 0;\n                    fcn.0040597d(uVar7);\n                    piVar9 = *(unaff_EBP + -0x34);\n                    *(unaff_EBP + -4) = 0xffffffff;\n                    goto code_r0x004198d6;\n                }\n                *(*extraout_ECX + 4) = 1;\n            }\n            uVar7 = *(unaff_EBP + -0x2c);\n            extraout_ECX[2] = 0;\n            *(unaff_EBP + -4) = 0xb;\n            iVar6 = fcn.0040594d(uVar7);\n            extraout_ECX[2] = iVar6;\n            *(unaff_EBP + -4) = 4;\n            uVar11 = 0;\n            if (extraout_ECX[2] != 0) {\n                fcn.004215c0(extraout_ECX[2], 0, *(unaff_EBP + -0x2c));\n                iVar6 = fcn.00415784(*(unaff_EBP + -0x40), extraout_ECX[3], *extraout_ECX, *(unaff_EBP + -0x2c), \n                                     *(unaff_EBP + -0x34));\n                if (iVar6 < 0) {\n                    fcn.0040597d(extraout_ECX[4]);\n                    extraout_ECX[4] = 0;\n                }\n                *(unaff_EBP + -4) = 0;\n                fcn.0040597d(*(unaff_EBP + -0x48));\n                piVar9 = *(unaff_EBP + -0x34);\n                *(unaff_EBP + -4) = 0xffffffff;\n                goto code_r0x00419e93;\n            }\n            if (extraout_ECX[3] != 0) {\n                puVar10 = *(unaff_EBP + -0x40) + 0x14;\n                do {\n                    fcn.0040597d(*puVar10);\n                    uVar11 = uVar11 + 1;\n                    puVar10 = puVar10 + 0xd;\n                } while (uVar11 < extraout_ECX[3]);\n            }\ncode_r0x00419bea:\n            fcn.0040597d(extraout_ECX[4]);\n            uVar7 = *(unaff_EBP + -0x48);\n            extraout_ECX[4] = 0;\n            *(unaff_EBP + -4) = 0;\n            fcn.0040597d(uVar7);\n            goto code_r0x004199c3;\n        }\n        *(unaff_EBP + -4) = 0;\n        fcn.0040597d(*(unaff_EBP + -0x40));\n        piVar9 = *(unaff_EBP + -0x34);\n        *(unaff_EBP + -4) = 0xffffffff;\n    }\n    if (piVar9 != NULL) {\n        (**(*piVar9 + 8))(piVar9);\n    }\ncode_r0x00419e9d:\n    fcn.00423cf9();\n    return;\n}\n",
        "token_count": 4926
    },
    "0041a91c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041a91c(int32_t **param_1)\n\n{\n    int32_t *piVar1;\n    \n    if (param_1[4] != NULL) {\n        if (*param_1 != NULL) {\n            fcn.00419765(*param_1);\n        }\n        piVar1 = param_1[4];\n        if (piVar1 != NULL) {\n            fcn.0041580c();\n            fcn.0040597d(piVar1);\n        }\n        param_1[4] = NULL;\n    }\n    if (*param_1 != NULL) {\n        fcn.00416aa7();\n        piVar1 = *param_1;\n        if (piVar1 != NULL) {\n            *param_1 = NULL;\n            (**(*piVar1 + 8))(piVar1);\n        }\n        piVar1 = param_1[1];\n        if (piVar1 != NULL) {\n            param_1[1] = NULL;\n            (**(*piVar1 + 8))(piVar1);\n        }\n    }\n    return;\n}\n",
        "token_count": 240
    },
    "0041bd62": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041bd62(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint32_t var_4h;\n    \n    var_4h = 0;\n    iVar1 = fcn.0041b9d2(arg_10h);\n    if (iVar1 == 0) {\n        return;\n    }\n    if (arg_10h != 0) {\n        uVar2 = (*_sym.imp.USER32.dll_GetWindowLongA)(*(arg_10h + 0x20), 0xffffffec);\n        if ((uVar2 & 0x10000) != 0) {\n            return;\n        }\n        var_4h = fcn.0041b98f(arg_10h);\n    }\n    if (arg_ch == arg_10h) {\n        if ((var_4h & 0x20) == 0) {\n            return;\n        }\n        if (arg_ch == 0) goto code_r0x0041be34;\n        iVar1 = arg_8h;\n        uVar3 = fcn.0041bd35(arg_8h);\n        iVar4 = fcn.0041bc2f(arg_8h, uVar3);\n        if (((iVar4 == 0) || (iVar4 == arg_10h)) || (uVar2 = fcn.0041b98f(iVar4),  (uVar2 & 0x10) == 0))\n        goto code_r0x0041be34;\ncode_r0x0041be00:\n        fcn.0041bcd3(arg_8h, iVar1);\n    }\n    else {\n        iVar1 = arg_10h;\n        if (((arg_ch != 0) && (iVar4 = fcn.0041b98f(arg_ch),  iVar4 != 0)) || ((arg_10h != 0 && (var_4h != 0))))\n        goto code_r0x0041be00;\n    }\n    if ((var_4h & 0x30) == 0) {\n        uVar3 = fcn.0041bd35(arg_8h);\n        arg_10h = fcn.0041bc2f(arg_8h, uVar3);\n        uVar2 = fcn.0041b98f(arg_10h);\n        if ((uVar2 & 0x20) == 0) {\n            return;\n        }\n        iVar1 = fcn.0040fc5a();\n        if (iVar1 == 0) {\n            return;\n        }\n    }\ncode_r0x0041be34:\n    fcn.0041bc86(arg_10h);\n    return;\n}\n",
        "token_count": 624
    },
    "0041be42": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.0041be42(uint arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t **ppiVar3;\n    \n    piVar2 = fcn.0040b676();\n    if (piVar2 != NULL) {\n        iVar1 = piVar2[0x11];\n        while (iVar1 != 0) {\n            ppiVar3 = fcn.00408771();\n            piVar2 = *ppiVar3;\n            if ((piVar2[1] != 0) && (*(piVar2[1] + 0x24) == *(arg_ch + 0x20))) {\n                return piVar2;\n            }\n            if (*piVar2 == *(arg_ch + 0x20)) {\n                return piVar2;\n            }\n        }\n        piVar2 = NULL;\n    }\n    return piVar2;\n}\n",
        "token_count": 210
    },
    "0041be94": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.0041be94(int32_t arg_8h, int32_t *arg_ch, uint arg_10h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    int32_t **ppiVar5;\n    uint32_t uVar6;\n    int32_t *piVar7;\n    \n    iVar4 = arg_8h;\n    if (arg_8h != 0) goto code_r0x0041bea6;\ncode_r0x0041bea1:\n    fcn.00405a76();\ncode_r0x0041bea6:\n    piVar7 = arg_ch;\n    arg_8h = 0;\n    piVar3 = piVar7;\n    if (arg_ch != NULL) {\n        if (arg_ch[1] == 0) {\n            iVar2 = *arg_ch;\n        }\n        else {\n            iVar2 = *(arg_ch[1] + 0x24);\n        }\n        if (iVar2 != 0) {\n            uVar1 = fcn.0040cd23(iVar2);\n            iVar2 = fcn.0041ba18(iVar4, uVar1);\n            if (iVar2 != 0) {\n                piVar3 = fcn.0041be42(iVar4, iVar2);\n            }\n        }\n    }\n    while (((piVar3 = fcn.004104b1(piVar3),  piVar3 != NULL && (arg_8h = arg_8h + 1,  piVar3 != piVar7)) &&\n           (arg_8h < 0x3d))) {\n        iVar4 = fcn.0041b920(piVar3, arg_10h);\n        if (iVar4 != 0) {\n            return piVar3;\n        }\n    }\n    iVar4 = fcn.0040b676();\n    if (iVar4 != 0) {\n        arg_8h = *(iVar4 + 0x44);\n        if (piVar7 == NULL) {\n            ppiVar5 = fcn.00408771(&arg_8h);\n            piVar3 = *ppiVar5;\n            piVar7 = piVar3;\n        }\n        else {\n            piVar3 = NULL;\n            if (arg_8h == 0) {\n                return NULL;\n            }\n            do {\n                if (piVar3 == piVar7) break;\n                ppiVar5 = fcn.00408771();\n                piVar3 = *ppiVar5;\n            } while (arg_8h != 0);\n        }\n        if (((arg_8h != 0) && (piVar3 != NULL)) && (piVar7 != NULL)) {\n            do {\n                if (arg_8h == 0) {\n                    arg_8h = *(iVar4 + 0x44);\n                }\n                ppiVar5 = fcn.00408771(&arg_8h);\n                piVar3 = *ppiVar5;\n                iVar2 = fcn.0041b920(piVar3, arg_10h);\n                if (iVar2 != 0) {\n                    if (piVar3 == NULL) {\ncode_r0x0041bfbb:\n                        if (piVar3[1] == 0) goto code_r0x0041bea1;\n                        uVar6 = (**(*piVar3[1] + 0x78))();\n                        uVar6 = uVar6 & 0x8000000;\n                    }\n                    else {\n                        if (piVar3[1] == 0) {\n                            iVar2 = *piVar3;\n                        }\n                        else {\n                            iVar2 = *(piVar3[1] + 0x24);\n                        }\n                        if (iVar2 == 0) goto code_r0x0041bfbb;\n                        uVar6 = (*_sym.imp.USER32.dll_IsWindowEnabled)(iVar2);\n                    }\n                    if (uVar6 != 0) {\n                        return piVar3;\n                    }\n                }\n                if (piVar3 == piVar7) {\n                    return NULL;\n                }\n            } while( true );\n        }\n    }\n    return NULL;\n}\n",
        "token_count": 924
    },
    "0041bfe5": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.0041bfe5(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    code *pcVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t **ppiVar4;\n    int32_t iVar5;\n    int32_t *piVar6;\n    int32_t iVar7;\n    uint32_t uVar8;\n    int32_t *var_4h;\n    \n    var_4h = NULL;\n    piVar2 = fcn.0041be42(arg_8h, arg_ch);\n    piVar6 = piVar2;\n    if ((piVar2 == NULL) && (iVar3 = fcn.0040b676(),  iVar3 != 0)) {\n        iVar7 = *(iVar3 + 0x44);\n        while (piVar6 = piVar2,  iVar7 != 0) {\n            ppiVar4 = fcn.00408771();\n            piVar6 = *ppiVar4;\n            if (((piVar6[1] != 0) && (piVar6[1] == *(iVar3 + 0x70))) ||\n               ((*piVar6 != 0 && (iVar5 = (*_sym.imp.USER32.dll_GetFocus)(),  *piVar6 == iVar5)))) break;\n        }\n    }\n    iVar3 = 0;\n    do {\n        piVar6 = fcn.0041be94(arg_8h, piVar6, arg_10h);\n        if (piVar6 == NULL) {\n            return NULL;\n        }\n        iVar7 = fcn.0041b93f(piVar6);\n        if ((iVar7 != 0) && (piVar6 = fcn.0040feca(piVar6, 0),  piVar6 == NULL)) {\n            return NULL;\n        }\n        if (piVar6 == NULL) {\ncode_r0x0041c0a2:\n            if (piVar6[1] == 0) {\n                fcn.00405a76();\n                pcVar1 = swi(3);\n                piVar6 = (*pcVar1)();\n                return piVar6;\n            }\n            uVar8 = (**(*piVar6[1] + 0x78))();\n            uVar8 = uVar8 & 0x8000000;\n        }\n        else {\n            if (piVar6[1] == 0) {\n                iVar7 = *piVar6;\n            }\n            else {\n                iVar7 = *(piVar6[1] + 0x24);\n            }\n            if (iVar7 == 0) goto code_r0x0041c0a2;\n            uVar8 = (*_sym.imp.USER32.dll_IsWindowEnabled)(iVar7);\n        }\n        if (uVar8 == 0) {\n            return piVar6;\n        }\n        if (piVar6 == var_4h) {\n            return NULL;\n        }\n        if (var_4h == NULL) {\n            var_4h = piVar6;\n        }\n        iVar3 = iVar3 + 1;\n        if (0x1ff < iVar3) {\n            return NULL;\n        }\n    } while( true );\n}\n",
        "token_count": 708
    },
    "0041cb04": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041cb04(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    \n    if (*(param_1 + 0x10) == 0) {\n        iVar3 = fcn.00413b8a(param_1 + 0x14, *(param_1 + 0x18), 0xc);\n        iVar1 = *(param_1 + 0x18);\n        puVar4 = iVar3 + -8 + iVar1 * 0xc;\n        while (iVar1 = iVar1 + -1,  -1 < iVar1) {\n            *puVar4 = *(param_1 + 0x10);\n            *(param_1 + 0x10) = puVar4;\n            puVar4 = puVar4 + -3;\n        }\n    }\n    puVar4 = *(param_1 + 0x10);\n    uVar2 = *puVar4;\n    *(param_1 + 0xc) = *(param_1 + 0xc) + 1;\n    *(param_1 + 0x10) = uVar2;\n    puVar4[1] = 0;\n    puVar4[2] = 0;\n    return;\n}\n",
        "token_count": 290
    },
    "0041cccf": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041cccf(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint unaff_ESI;\n    uint uStack8;\n    \n    if (*(param_1 + 0x10) == 0) {\n        uStack8 = 0xc;\n        iVar2 = fcn.00413b8a(param_1 + 0x14, *(param_1 + 0x18));\n        iVar1 = *(param_1 + 0x18);\n        puVar3 = iVar2 + -8 + iVar1 * 0xc;\n        while (iVar1 = iVar1 + -1,  -1 < iVar1) {\n            *puVar3 = *(param_1 + 0x10);\n            *(param_1 + 0x10) = puVar3;\n            puVar3 = puVar3 + -3;\n        }\n    }\n    puVar3 = *(param_1 + 0x10);\n    *(param_1 + 0x10) = *puVar3;\n    puVar3[1] = uStack8;\n    *puVar3 = unaff_ESI;\n    *(param_1 + 0xc) = *(param_1 + 0xc) + 1;\n    puVar3[2] = 0;\n    return;\n}\n",
        "token_count": 305
    },
    "0041cf51": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0041cf51(int32_t param_1, uint32_t param_2, int32_t param_3)\n\n{\n    uint uVar1;\n    \n    if (param_2 == 0) {\n        param_2 = 0x11;\n    }\n    if (*(param_1 + 4) != 0) {\n        fcn.0040597d(*(param_1 + 4));\n        *(param_1 + 4) = 0;\n    }\n    if (param_3 != 0) {\n        uVar1 = fcn.0040594d(-(param_2 * 4 >> 0x20 != 0) | param_2 * 4);\n        *(param_1 + 4) = uVar1;\n        fcn.004215c0(uVar1, 0, param_2 << 2);\n    }\n    *(param_1 + 8) = param_2;\n    return;\n}\n",
        "token_count": 213
    },
    "0041d000": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint * __fastcall fcn.0041d000(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    \n    if (*(param_1 + 0x10) == 0) {\n        iVar3 = fcn.00413b8a(param_1 + 0x14, *(param_1 + 0x18), 0x10);\n        iVar1 = *(param_1 + 0x18);\n        puVar4 = iVar3 + -0xc + iVar1 * 0x10;\n        while (iVar1 = iVar1 + -1,  -1 < iVar1) {\n            *puVar4 = *(param_1 + 0x10);\n            *(param_1 + 0x10) = puVar4;\n            puVar4 = puVar4 + -4;\n        }\n    }\n    puVar4 = *(param_1 + 0x10);\n    uVar2 = *puVar4;\n    *(param_1 + 0xc) = *(param_1 + 0xc) + 1;\n    *(param_1 + 0x10) = uVar2;\n    if (puVar4 != 0xfffffff8) {\n        fcn.00403250();\n    }\n    puVar4[3] = 0;\n    return puVar4;\n}\n",
        "token_count": 310
    },
    "0041d658": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0041d658(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint16_t *puVar3;\n    uint16_t uVar4;\n    int16_t iVar5;\n    bool bVar6;\n    \n    bVar6 = *(arg_8h + 2) == -1;\n    iVar1 = fcn.0041d60d(arg_8h);\n    iVar2 = fcn.0041d5e2(arg_8h);\n    if (iVar2 != 0) {\n        iVar1 = iVar1 + (bVar6 * 2 + 1) * 2;\n        iVar2 = fcn.00423d23(iVar1);\n        iVar1 = iVar1 + 2 + iVar2 * 2;\n    }\n    if (bVar6) {\n        iVar5 = *(arg_8h + 0x10);\n    }\n    else {\n        iVar5 = *(arg_8h + 8);\n    }\n    if (iVar5 != 0) {\n        do {\n            puVar3 = (iVar1 + 3U & 0xfffffffc) + (-bVar6 & 6) + 0x12;\n            if (*puVar3 == 0xffff) {\n                puVar3 = puVar3 + 2;\n            }\n            else {\n                do {\n                    uVar4 = *puVar3;\n                    puVar3 = puVar3 + 1;\n                } while (uVar4 != 0);\n            }\n            if (*puVar3 == 0xffff) {\n                puVar3 = puVar3 + 2;\n            }\n            else {\n                do {\n                    uVar4 = *puVar3;\n                    puVar3 = puVar3 + 1;\n                } while (uVar4 != 0);\n            }\n            uVar4 = *puVar3;\n            if ((uVar4 != 0) && (!bVar6)) {\n                uVar4 = uVar4 - 2;\n            }\n            iVar5 = iVar5 + -1;\n            iVar1 = puVar3 + uVar4 + 2;\n        } while (iVar5 != 0);\n    }\n    return iVar1 - arg_8h;\n}\n",
        "token_count": 497
    },
    "0041d780": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_58h\n\nvoid __cdecl fcn.0041d780(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint32_t *puVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    ushort *puVar5;\n    uint32_t uVar6;\n    uint *in_ECX;\n    int32_t iVar7;\n    uint32_t uVar8;\n    int16_t iVar9;\n    int32_t iVar10;\n    uint32_t uVar11;\n    bool bVar12;\n    ulong uVar13;\n    int32_t var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint lpString;\n    uint var_44h;\n    uint32_t var_4h;\n    \n    var_4h = *0x460604 ^ &stack0xfffffffc;\n    if (in_ECX[1] != 0) {\n        puVar2 = (*_sym.imp.KERNEL32.dll_GlobalLock)(*in_ECX);\n        bVar12 = *(puVar2 + 2) == -1;\n        iVar3 = fcn.0041d5e2(puVar2);\n        iVar1 = bVar12 * 2 + 1;\n        var_58h = iVar1 * 2;\n        if (bVar12) {\n            puVar2[3] = puVar2[3] | 0x40;\n        }\n        else {\n            *puVar2 = *puVar2 | 0x40;\n        }\n        iVar4 = (*_sym.imp.KERNEL32.dll_lstrlenA)(arg_8h);\n        if (iVar4 < 0x20) {\n            iVar4 = (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)(0, 0, arg_8h, 0xffffffff, &var_44h, 0x20);\n            iVar4 = var_58h + iVar4 * 2;\n            if (var_58h <= iVar4) {\n                uVar13 = fcn.0041d60d(puVar2);\n                puVar5 = uVar13;\n                iVar7 = 0;\n                iVar10 = uVar13 >> 0x20;\n                if (iVar3 != 0) {\n                    iVar3 = fcn.00423d23(puVar5 + iVar1);\n                    iVar7 = var_58h + 2 + iVar3 * 2;\n                    iVar10 = iVar4;\n                }\n                uVar6 = iVar7 + 3 + puVar5 & 0xfffffffc;\n                uVar11 = puVar5 + iVar10 + 3 & 0xfffffffc;\n                if (bVar12) {\n                    iVar9 = *(puVar2 + 4);\n                }\n                else {\n                    iVar9 = *(puVar2 + 2);\n                }\n                if ((iVar4 != iVar7) && (iVar9 != 0)) {\n                    uVar8 = (in_ECX[1] - uVar6) + puVar2;\n                    if (in_ECX[1] < uVar8) goto code_r0x0041d8c0;\n                    fcn.00413d7f(uVar11, uVar8, uVar6, uVar8);\n                }\n                *puVar5 = arg_ch;\n                iVar4 = iVar4 + iVar1 * -2;\n                fcn.00413d7f(puVar5 + iVar1, iVar4, &var_44h, iVar4);\n                in_ECX[1] = in_ECX[1] + (uVar11 - uVar6);\n                (*_sym.imp.KERNEL32.dll_GlobalUnlock)(*in_ECX);\n                in_ECX[2] = 0;\n            }\n        }\n    }\ncode_r0x0041d8c0:\n    fcn.00421e2f(var_58h);\n    return;\n}\n",
        "token_count": 871
    },
    "0041d8cf": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041d8cf(uint32_t arg_8h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint uVar4;\n    char *arg_8h_00;\n    uint unaff_EDI;\n    uint32_t uVar5;\n    uint var_44h;\n    int32_t lpvObject;\n    uint var_24h;\n    uint32_t var_4h;\n    \n    pcVar1 = _sym.imp.GDI32.dll_GetStockObject;\n    var_4h = *0x460604 ^ &stack0xfffffffc;\n    uVar5 = 10;\n    arg_8h_00 = \"System\";\n    iVar2 = (*_sym.imp.GDI32.dll_GetStockObject)(0x11);\n    if (iVar2 == 0) {\n        iVar2 = (*pcVar1)(0xd);\n        if (iVar2 == 0) goto code_r0x0041d94b;\n    }\n    iVar2 = (*_sym.imp.GDI32.dll_GetObjectA)(iVar2, 0x3c, &lpvObject);\n    if (iVar2 != 0) {\n        arg_8h_00 = &var_24h;\n        uVar3 = (*_sym.imp.USER32.dll_GetDC)(0);\n        if (lpvObject < 0) {\n            lpvObject = -lpvObject;\n        }\n        uVar4 = (*_sym.imp.GDI32.dll_GetDeviceCaps)(uVar3, 0x5a);\n        uVar5 = (*_sym.imp.KERNEL32.dll_MulDiv)(lpvObject, 0x48, uVar4);\n        uVar5 = uVar5 & 0xffff;\n        (*_sym.imp.USER32.dll_ReleaseDC)(0, uVar3);\n    }\ncode_r0x0041d94b:\n    if (arg_8h == 0) {\n        arg_8h = uVar5;\n    }\n    fcn.0041d780(arg_8h_00, arg_8h);\n    fcn.00421e2f(unaff_EDI);\n    return;\n}\n",
        "token_count": 476
    },
    "0041da0c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0041da0c(int32_t pszPath, int32_t arg_ch, uint arg_10h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    \n    if (pszPath == 0) {\n        fcn.00405a76();\n    }\n    uVar1 = (*_sym.imp.SHLWAPI.dll_PathFindFileNameA)(pszPath);\n    if (arg_ch == 0) {\n        iVar2 = (*_sym.imp.KERNEL32.dll_lstrlenA)(uVar1);\n        iVar2 = iVar2 + 1;\n    }\n    else {\n        fcn.00405abf(arg_ch, arg_10h, uVar1, 0xffffffff);\n        iVar2 = 0;\n    }\n    return iVar2;\n}\n",
        "token_count": 174
    },
    "0041da4a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041da4a(int32_t param_1)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uchar *puVar4;\n    uint uVar5;\n    uchar *puStack848;\n    char *pcStack844;\n    uint uStack840;\n    uchar *puStack836;\n    uchar *puStack832;\n    uchar *pszPath;\n    char acStack784 [124];\n    uchar auStack660 [132];\n    uchar auStack528 [260];\n    char acStack268 [260];\n    uint32_t uStack8;\n    \n    uStack8 = *0x460604 ^ &stack0xfffffd6c;\n    iVar2 = fcn.00409b0a();\n    *(iVar2 + 8) = *(param_1 + 0x44);\n    *(iVar2 + 0xc) = *(param_1 + 0x44);\n    iVar3 = (*_sym.imp.KERNEL32.dll_GetModuleFileNameA)();\n    if ((iVar3 == 0) || (iVar3 == 0x104)) {\n        fcn.00409d71();\n    }\n    puVar4 = (*_sym.imp.SHLWAPI.dll_PathFindExtensionA)();\n    if (puVar4 == NULL) {\n        fcn.00409d71();\n    }\n    *puVar4 = 0;\n    pszPath = &stack0xfffffef4;\n    puStack832 = 0x41dad3;\n    iVar3 = fcn.0041da0c(pszPath, &stack0xfffffdf0, 0x104);\n    if (iVar3 != 0) {\n        puStack832 = 0x41dadc;\n        fcn.00409d71();\n    }\n    if (*(param_1 + 0x60) == 0) {\n        puStack832 = &stack0xfffffdf0;\n        puStack836 = 0x41daee;\n        iVar3 = fcn.004242d1();\n        *(param_1 + 0x60) = iVar3;\n        if (iVar3 == 0) goto code_r0x00405a42;\n    }\n    iVar3 = *(param_1 + 0x50);\n    if (iVar3 == 0) {\n        puStack832 = 0x100;\n        puStack836 = &stack0xfffffcf0;\n        uStack840 = 0xe000;\n        pcStack844 = 0x41db15;\n        iVar3 = fcn.004117fa();\n        if (iVar3 == 0) {\n            pcStack844 = *(param_1 + 0x60);\n        }\n        else {\n            pcStack844 = &stack0xfffffcf0;\n        }\n        puStack848 = 0x41db27;\n        iVar3 = fcn.004242d1();\n        *(param_1 + 0x50) = iVar3;\n        if (iVar3 == 0) goto code_r0x00405a42;\n    }\n    *(iVar2 + 0x10) = iVar3;\n    if (*(param_1 + 100) == 0) {\n        puStack848 = &stack0xfffffff8 + -puVar4;\n        if (*(param_1 + 0x6c) == 1) {\n            pcStack844 = \".CHM\";\n        }\n        else {\n            pcStack844 = \".HLP\";\n        }\n        fcn.00406793(puVar4);\n        pcStack844 = &stack0xfffffef4;\n        puStack848 = 0x41db6b;\n        iVar2 = fcn.004242d1();\n        *(param_1 + 100) = iVar2;\n        if (iVar2 == 0) goto code_r0x00405a42;\n        *puVar4 = 0;\n    }\n    if (*(param_1 + 0x68) == 0) {\n        pcStack844 = \".INI\";\n        puStack848 = 0x104;\n        uVar5 = fcn.0042613d(&stack0xfffffdf0);\n        fcn.00401000(uVar5);\n        iVar2 = fcn.004242d1(&stack0xfffffdf0);\n        *(param_1 + 0x68) = iVar2;\n        if (iVar2 == 0) {\ncode_r0x00405a42:\n            puStack848 = 0x45f338;\n            pcStack844 = &stack0xfffffd6c;\n            fcn.00421cb9(&stack0xfffffcb0, 0x45950c);\n            pcVar1 = swi(3);\n            (*pcVar1)();\n            return;\n        }\n    }\n    puStack832 = 0x41dbc1;\n    fcn.00421e2f(pszPath);\n    return;\n}\n",
        "token_count": 1059
    },
    "0041dbc9": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint fcn.0041dbc9(uint param_1, uint param_2)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint unaff_ESI;\n    \n    pcVar1 = _sym.imp.KERNEL32.dll_SetErrorMode;\n    uVar2 = (*_sym.imp.KERNEL32.dll_SetErrorMode)(0);\n    (*pcVar1)(uVar2 | 0x8001);\n    iVar3 = fcn.00409b0a();\n    *(iVar3 + 8) = unaff_ESI;\n    *(iVar3 + 0xc) = unaff_ESI;\n    fcn.0040936d();\n    iVar3 = fcn.00409b0a();\n    iVar3 = *(iVar3 + 4);\n    if (iVar3 != 0) {\n        *(iVar3 + 0x48) = param_1;\n        *(iVar3 + 0x4c) = param_2;\n        *(iVar3 + 0x44) = unaff_ESI;\n        fcn.0041da4a();\n    }\n    iVar3 = fcn.00409b0a();\n    if (*(iVar3 + 0x14) == '\\0') {\n        fcn.00407a98();\n    }\n    iVar3 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(\"user32.dll\");\n    if (iVar3 != 0) {\n        *0x463594 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar3, \"NotifyWinEvent\");\n    }\n    return 1;\n}\n",
        "token_count": 350
    },
    "0041dfe1": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.0041dfe1(int32_t param_1, uint param_2)\n\n{\n    uint arg_8h;\n    int32_t arg_10h;\n    \n    if (param_1 != 0) {\n        arg_10h = param_1;\n        arg_8h = fcn.0041dc4d(param_1, param_1, param_2);\n        fcn.0041df9b(arg_8h, param_1, arg_10h);\n    }\n    return;\n}\n",
        "token_count": 116
    },
    "0041e002": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0041e002(uint32_t *param_1, uint32_t param_2, uint32_t param_3)\n\n{\n    if (param_2 < 4) {\n        param_2 = 4;\n    }\n    if (param_3 < 2) {\n        param_3 = 0x40;\n    }\n    param_1[3] = 0;\n    param_1[2] = 0;\n    *param_1 = param_2;\n    param_1[1] = param_3;\n    return;\n}\n",
        "token_count": 127
    },
    "0041e046": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041e046(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    \n    if (param_1[3] == 0) {\n        iVar1 = fcn.00413b8a(param_1 + 2, param_1[1], *param_1);\n        iVar3 = param_1[1] + -1;\n        piVar2 = iVar1 + 4 + *param_1 * iVar3;\n        for (; -1 < iVar3; iVar3 = iVar3 + -1) {\n            *piVar2 = param_1[3];\n            param_1[3] = piVar2;\n            piVar2 = piVar2 - *param_1;\n        }\n    }\n    param_1[3] = *param_1[3];\n    return;\n}\n",
        "token_count": 201
    },
    "0041e7b0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0041e7b0(uint *param_1, uint *param_2)\n\n{\n    uint uVar1;\n    \n    if (param_1 != param_2) {\n        uVar1 = *param_2;\n        if (param_2[2] != 0) {\n            *param_2 = 0;\n        }\n        *param_1 = uVar1;\n        param_1[1] = param_2[1];\n        param_1[2] = param_2[2];\n    }\n    return;\n}\n",
        "token_count": 125
    },
    "0041e7d6": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041e7d6(int32_t param_1)\n\n{\n    code *pcVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t **ppiVar4;\n    int32_t iVar5;\n    uint uStack28;\n    \n    iVar5 = 0;\n    if (0 < *(param_1 + 8)) {\n        do {\n            piVar2 = fcn.0041e488();\n            if ((*piVar2 == 0) || (iVar3 = fcn.0041e488(),  *(iVar3 + 4) == 0)) {\n                uStack28 = 0x45f468;\n                fcn.00421cb9(&stack0xffffffe4, 0x459604);\n                pcVar1 = swi(3);\n                (*pcVar1)();\n                return;\n            }\n            uStack28 = 0x41e805;\n            ppiVar4 = fcn.0041e488();\n            iVar3 = fcn.0041e488();\n            iVar5 = iVar5 + 1;\n            **(iVar3 + 4) = -(**ppiVar4 != 0);\n        } while (iVar5 < *(param_1 + 8));\n    }\n    return;\n}\n",
        "token_count": 282
    },
    "0041e82c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041e82c(code **param_1)\n\n{\n    int32_t iVar1;\n    \n    *param_1 = vtable.CArray_class_CVariantBoolPair__class_CVariantBoolPair_const__.0;\n    if (param_1[1] != NULL) {\n        iVar1 = 0;\n        if (0 < param_1[2]) {\n            do {\n                fcn.0041e4db();\n                iVar1 = iVar1 + 1;\n            } while (iVar1 < param_1[2]);\n        }\n        fcn.0040597d(param_1[1]);\n    }\n    return;\n}\n",
        "token_count": 142
    },
    "0041ef8c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0041ef8c(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.00423bfe(4);\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    fcn.00405ade();\n    *extraout_ECX = vtable.COleDispatchException.0;\n    fcn.00403250();\n    *(unaff_EBP + -4) = 0;\n    fcn.00403250();\n    fcn.00403250();\n    iVar1 = *(unaff_EBP + 0x10);\n    iVar2 = *(unaff_EBP + 8);\n    *(unaff_EBP + -4) = 2;\n    extraout_ECX[4] = -(*(unaff_EBP + 0xc) != 0) & *(unaff_EBP + 0xc) + 0x60000U;\n    *(extraout_ECX + 2) = iVar1;\n    if (iVar2 != 0) {\n        fcn.00404860(*(unaff_EBP + 8));\n    }\n    extraout_ECX[7] = (-(iVar1 != 0) & 0x7fff0001) + 0x8000ffff;\n    fcn.00423cd6();\n    return;\n}\n",
        "token_count": 356
    },
    "0041f191": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041f191(int32_t *arg_8h, char *arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    int32_t *piVar1;\n    char cVar2;\n    int32_t iVar3;\n    char *pcVar4;\n    char *pcVar5;\n    uint var_4h;\n    \n    pcVar4 = arg_ch;\n    if (arg_ch != NULL) goto code_r0x0041f1a4;\n    do {\n        fcn.00405a76();\ncode_r0x0041f1a4:\n    } while (arg_10h == 0);\n    arg_ch = NULL;\n    cVar2 = *pcVar4;\n    pcVar5 = pcVar4;\n    while (cVar2 != '\\0') {\n        if (*pcVar5 == '%') {\n            cVar2 = pcVar5[1];\n            if ((cVar2 < '1') || ('9' < cVar2)) {\n                if ((cVar2 < 'A') || ('Z' < cVar2)) goto code_r0x0041f1fc;\n                if (cVar2 < ':') goto code_r0x0041f1dc;\n                iVar3 = cVar2 + -0x38;\n            }\n            else {\ncode_r0x0041f1dc:\n                iVar3 = cVar2 + -0x31;\n            }\n            pcVar5 = pcVar5 + 2;\n            if (arg_14h <= iVar3) goto code_r0x0041f20f;\n            iVar3 = *(arg_10h + iVar3 * 4);\n            if (iVar3 != 0) {\n                iVar3 = (*_sym.imp.KERNEL32.dll_lstrlenA)(iVar3);\n                arg_ch = arg_ch + iVar3;\n            }\n        }\n        else {\ncode_r0x0041f1fc:\n            iVar3 = fcn.00426214(*pcVar5);\n            if (iVar3 != 0) {\n                arg_ch = arg_ch + 1;\n                pcVar5 = pcVar5 + 1;\n            }\n            pcVar5 = pcVar5 + 1;\ncode_r0x0041f20f:\n            arg_ch = arg_ch + 1;\n        }\n        cVar2 = *pcVar5;\n    }\n    pcVar5 = fcn.00404180(arg_ch);\n    cVar2 = *pcVar4;\n    do {\n        if (cVar2 == '\\0') {\n            fcn.00407be9(pcVar5 - *arg_8h);\n            return;\n        }\n        if (*pcVar4 == '%') {\n            cVar2 = pcVar4[1];\n            if ((cVar2 < '1') || ('9' < cVar2)) {\n                if ((cVar2 < 'A') || ('Z' < cVar2)) goto code_r0x0041f298;\n                if (cVar2 < ':') goto code_r0x0041f255;\n                iVar3 = cVar2 + -0x38;\n            }\n            else {\ncode_r0x0041f255:\n                iVar3 = cVar2 + -0x31;\n            }\n            pcVar4 = pcVar4 + 2;\n            if (arg_14h <= iVar3) {\n                *pcVar5 = '?';\n                goto code_r0x0041f2b5;\n            }\n            piVar1 = arg_10h + iVar3 * 4;\n            iVar3 = *piVar1;\n            if (iVar3 != 0) {\n                iVar3 = (*_sym.imp.KERNEL32.dll_lstrlenA)(iVar3);\n                fcn.00406793(pcVar5, arg_ch + 1, *piVar1);\n                arg_ch = arg_ch - iVar3;\n                pcVar5 = pcVar5 + iVar3;\n            }\n        }\n        else {\ncode_r0x0041f298:\n            iVar3 = fcn.00426214(*pcVar4);\n            if (iVar3 != 0) {\n                *pcVar5 = *pcVar4;\n                pcVar5 = pcVar5 + 1;\n                pcVar4 = pcVar4 + 1;\n                arg_ch = arg_ch + -1;\n            }\n            *pcVar5 = *pcVar4;\n            pcVar4 = pcVar4 + 1;\ncode_r0x0041f2b5:\n            pcVar5 = pcVar5 + 1;\n            arg_ch = arg_ch + -1;\n        }\n        cVar2 = *pcVar4;\n    } while( true );\n}\n",
        "token_count": 1020
    },
    "0041f341": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.0041f341(void)\n\n{\n    code *pcVar1;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.00423bfe(4);\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *extraout_ECX = vtable.CEnumArray.0;\n    pcVar1 = extraout_ECX[9];\n    *(unaff_EBP + -4) = 0;\n    if (pcVar1 != NULL) {\n        fcn.0041238a();\n    }\n    if (extraout_ECX[0xd] != NULL) {\n        fcn.0040597d(extraout_ECX[10]);\n    }\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.004071dc();\n    fcn.00423cd6();\n    return;\n}\n",
        "token_count": 226
    },
    "0041f69d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041f69d(int32_t **param_1)\n\n{\n    int32_t *piVar1;\n    \n    piVar1 = *param_1;\n    if (piVar1 != NULL) {\n        if (param_1[1] != NULL) {\n            (**(*piVar1 + 8))(piVar1);\n        }\n        *param_1 = NULL;\n    }\n    return;\n}\n",
        "token_count": 94
    },
    "0041f6e5": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041f6e5(int32_t param_1)\n\n{\n    code *pcVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    uint32_t **ppuVar4;\n    int32_t iVar5;\n    uint uStack28;\n    \n    iVar5 = 0;\n    if (0 < *(param_1 + 8)) {\n        do {\n            piVar2 = fcn.0041e488();\n            if ((*piVar2 == 0) || (iVar3 = fcn.0041e488(),  *(iVar3 + 4) == 0)) {\n                uStack28 = 0x45f468;\n                fcn.00421cb9(&stack0xffffffe4, 0x459604);\n                pcVar1 = swi(3);\n                (*pcVar1)();\n                return;\n            }\n            uStack28 = 0x41f714;\n            iVar3 = fcn.0041e488();\n            ppuVar4 = fcn.0041e488();\n            iVar5 = iVar5 + 1;\n            **ppuVar4 = **(iVar3 + 4) != 0;\n        } while (iVar5 < *(param_1 + 8));\n    }\n    return;\n}\n",
        "token_count": 283
    },
    "0041f73c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: pbstr\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_14h\n\nvoid __cdecl fcn.0041f73c(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint lpString, uint arg_1ch)\n\n{\n    char cVar1;\n    uint8_t uVar2;\n    uint16_t uVar3;\n    uint16_t *puVar4;\n    uint32_t *puVar5;\n    int32_t *piVar6;\n    uint32_t uVar7;\n    uint *puVar8;\n    int64_t iVar9;\n    code *pcVar10;\n    code *pcVar11;\n    int16_t iVar12;\n    uint uVar13;\n    int32_t iVar14;\n    uint32_t *puVar15;\n    int32_t iVar16;\n    int32_t *extraout_ECX;\n    uint32_t **ppuVar17;\n    int32_t unaff_EBP;\n    ulong *puVar18;\n    char *pcVar19;\n    uint var_88h;\n    uint var_84h;\n    uint var_80h;\n    uint var_7ch;\n    uint var_78h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint pvargDest;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint pbstr;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_4h;\n    uint uVar20;\n    \n    uVar20 = 0x7c;\n    fcn.00423bfe(0x7c);\n    *(unaff_EBP + -0x24) = extraout_ECX;\n    if (*extraout_ECX != 0) {\n        *(unaff_EBP + -0x54) = 0;\n        *(unaff_EBP + -0x50) = 0;\n        *(unaff_EBP + -0x4c) = 0;\n        *(unaff_EBP + -0x48) = 0;\n        *(unaff_EBP + -4) = 0;\n        fcn.004215c0(unaff_EBP + -0x54, 0, 0x10);\n        if (*(unaff_EBP + 0x18) != 0) {\n            uVar13 = (*_sym.imp.KERNEL32.dll_lstrlenA)(*(unaff_EBP + 0x18));\n            *(unaff_EBP + -0x4c) = uVar13;\n        }\n        *(unaff_EBP + -0x20) = 0xfffffffd;\n        if ((*(unaff_EBP + 0xc) & 0xc) != 0) {\n            *(unaff_EBP + -0x48) = 1;\n            *(unaff_EBP + -0x50) = unaff_EBP + -0x20;\n        }\n        *(unaff_EBP + -0x68) = vtable.CArray_class_CVariantBoolPair__class_CVariantBoolPair_const__.0;\n        *(unaff_EBP + -100) = 0;\n        *(unaff_EBP + -0x58) = 0;\n        *(unaff_EBP + -0x5c) = 0;\n        *(unaff_EBP + -0x60) = 0;\n        *(unaff_EBP + -4) = 1;\n        if (*(unaff_EBP + -0x4c) != 0) {\n            iVar9 = *(unaff_EBP + -0x4c) * 0x10;\n            iVar14 = fcn.0040594d(-(iVar9 >> 0x20 != 0) | iVar9);\n            *(unaff_EBP + -0x54) = iVar14;\n            fcn.004215c0(iVar14, 0, *(unaff_EBP + -0x4c) << 4);\n            cVar1 = **(unaff_EBP + 0x18);\n            iVar14 = iVar14 + -0x10 + *(unaff_EBP + -0x4c) * 0x10;\n            *(unaff_EBP + -0x14) = *(unaff_EBP + 0x18);\n            *(unaff_EBP + -0x10) = iVar14;\n            if (cVar1 != '\\0') {\n                puVar18 = iVar14 + 8;\n                ppuVar17 = *(unaff_EBP + 0x1c) + -4;\n                *(unaff_EBP + -0x1c) = puVar18;\n                *(unaff_EBP + 0x1c) = *(unaff_EBP + 0x1c) + -8;\n                do {\n                    uVar2 = **(unaff_EBP + -0x14);\n                    puVar4 = *(unaff_EBP + -0x10);\n                    *puVar4 = uVar2;\n                    if ((uVar2 & 0x40) != 0) {\n                        *puVar4 = uVar2 & 0xffbf | 0x4000;\n                    }\n                    uVar3 = *puVar4;\n                    if (0x4002 < uVar3) {\n    // switch table (19 cases) at 0x41fc80\n                        switch(uVar3) {\n                        case 0x4003:\n                        case 0x4004:\n                        case 0x4005:\n                        case 0x4006:\n                        case 0x4007:\n                        case 0x4008:\n                        case 0x4009:\n                        case 0x400a:\n                        case 0x400c:\n                        case 0x400d:\n                        case 0x4010:\n                        case 0x4011:\n                        case 0x4012:\n                        case 0x4013:\n                        case 0x4014:\n                        case 0x4015:\n                            goto code_r0x0041f9b9;\n                        case 0x400b:\n                            *(unaff_EBP + 0x1c) = *(unaff_EBP + 0x1c) + 4;\n                            ppuVar17 = ppuVar17 + 1;\n                            puVar15 = *ppuVar17;\n                            *puVar15 = -(*puVar15 != 0) & 0xffff;\n                            *puVar18 = puVar15;\n                            fcn.0041e4a4(puVar15, puVar15, 0);\n                            uVar20 = *(unaff_EBP + -0x60);\n                            *(unaff_EBP + -4) = 3;\n                            fcn.0041e8c6();\n                            *(unaff_EBP + -4) = 1;\n                            if (*(unaff_EBP + -0x2c) != 0) {\n                                fcn.0040597d(*(unaff_EBP + -0x34));\n                            }\n                        }\n                        goto code_r0x0041f9c2;\n                    }\n                    if (uVar3 == 0x4002) {\ncode_r0x0041f9b9:\n                        *(unaff_EBP + 0x1c) = *(unaff_EBP + 0x1c) + 4;\n                        ppuVar17 = ppuVar17 + 1;\n                        *puVar18 = *ppuVar17;\n                        goto code_r0x0041f9c2;\n                    }\n    // switch table (20 cases) at 0x41fc30\n                    switch(uVar3) {\n                    case 2:\n                    case 0x12:\n                        *(unaff_EBP + 0x1c) = *(unaff_EBP + 0x1c) + 4;\n                        iVar12 = *(ppuVar17 + 1);\n                        goto code_r0x0041f943;\n                    case 3:\n                    case 9:\n                    case 10:\n                    case 0xd:\n                    case 0x13:\n                        goto code_r0x0041f9b9;\n                    case 4:\n                        *(unaff_EBP + 0x1c) = *(unaff_EBP + 0x1c) + 8;\n                        ppuVar17 = ppuVar17 + 2;\n                        *puVar18 = **(unaff_EBP + 0x1c);\n                        break;\n                    case 5:\n                    case 7:\n                        *(unaff_EBP + 0x1c) = *(unaff_EBP + 0x1c) + 8;\n                        ppuVar17 = ppuVar17 + 2;\n                        *puVar18 = **(unaff_EBP + 0x1c);\n                        break;\n                    case 6:\n                        *(unaff_EBP + 0x1c) = *(unaff_EBP + 0x1c) + 4;\n                        ppuVar17 = ppuVar17 + 1;\n                        puVar15 = *ppuVar17;\n                        goto code_r0x0041f888;\n                    case 8:\n                        *(unaff_EBP + 0x1c) = *(unaff_EBP + 0x1c) + 4;\n                        ppuVar17 = ppuVar17 + 1;\n                        puVar15 = *ppuVar17;\n                        *(unaff_EBP + -0x1c) = puVar15;\n                        iVar16 = (*_sym.imp.OLEAUT32.dll_SysReAllocString)(puVar15, uVar20);\n                        iVar14 = *(unaff_EBP + -0x1c);\n                        *puVar18 = iVar16;\n                        if ((iVar14 != 0) && (iVar16 == 0)) {\n                            do {\n                                fcn.00405a42();\ncode_r0x0041f8f0:\n                                *(unaff_EBP + 0x1c) = *(unaff_EBP + 0x1c) + 4;\n                                ppuVar17 = ppuVar17 + 1;\n                                puVar15 = *ppuVar17;\n                                *(unaff_EBP + -0x1c) = puVar15;\n                                fcn.0040617f(puVar15);\n                                *(unaff_EBP + -4) = 2;\n                                iVar16 = (*_sym.imp.OLEAUT32.dll_SysReAllocString)(*(unaff_EBP + -0x18));\n                                iVar14 = *(unaff_EBP + -0x1c);\n                                *puVar18 = iVar16;\n                            } while ((iVar14 != 0) && (iVar16 == 0));\n                            **(unaff_EBP + -0x10) = 8;\n                            *(unaff_EBP + -4) = 1;\n                            fcn.004028b0();\n                        }\n                        break;\n                    case 0xb:\n                        *(unaff_EBP + 0x1c) = *(unaff_EBP + 0x1c) + 4;\n                        iVar12 = -(ppuVar17[1] != NULL);\ncode_r0x0041f943:\n                        ppuVar17 = ppuVar17 + 1;\n                        *puVar18 = iVar12;\n                        break;\n                    case 0xc:\n                        *(unaff_EBP + 0x1c) = *(unaff_EBP + 0x1c) + 4;\n                        puVar15 = *(unaff_EBP + -0x10);\n                        ppuVar17 = ppuVar17 + 1;\n                        puVar5 = *ppuVar17;\n                        *puVar15 = *puVar5;\n                        puVar15[1] = puVar5[1];\n                        puVar15[2] = puVar5[2];\n                        puVar15[3] = puVar5[3];\n                        puVar18 = *(unaff_EBP + -0x1c);\n                        break;\n                    case 0xe:\n                        goto code_r0x0041f8f0;\n                    case 0x10:\n                    case 0x11:\n                        *(unaff_EBP + 0x1c) = *(unaff_EBP + 0x1c) + 4;\n                        ppuVar17 = ppuVar17 + 1;\n                        *puVar18 = *ppuVar17;\n                        break;\n                    case 0x14:\n                    case 0x15:\n                        puVar15 = *(unaff_EBP + 0x1c) + 8;\n                        *(unaff_EBP + 0x1c) = puVar15;\n                        ppuVar17 = ppuVar17 + 2;\ncode_r0x0041f888:\n                        *puVar18 = *puVar15;\n                        *(puVar18 + 4) = puVar15[1];\n                    }\ncode_r0x0041f9c2:\n                    *(unaff_EBP + -0x10) = *(unaff_EBP + -0x10) + -0x10;\n                    puVar18 = puVar18 + -2;\n                    *(unaff_EBP + -0x14) = *(unaff_EBP + -0x14) + 1;\n                    cVar1 = **(unaff_EBP + -0x14);\n                    *(unaff_EBP + -0x1c) = puVar18;\n                } while (cVar1 != '\\0');\n            }\n        }\n        iVar16 = 0;\n        iVar14 = 0;\n        fcn.0041d2de(unaff_EBP + -0x44);\n        if (*(unaff_EBP + 0x10) != 0) {\n            iVar14 = unaff_EBP + -0x44;\n        }\n        fcn.004215c0(unaff_EBP + -0x88, 0, 0x20);\n        piVar6 = **(unaff_EBP + -0x24);\n        *(unaff_EBP + -0x28) = 0xffffffff;\n        uVar20 = (**(*piVar6 + 0x18))\n                           (piVar6, *(unaff_EBP + 8), 0x455ce8, 0, *(unaff_EBP + 0xc), unaff_EBP + -0x54, iVar14, \n                            unaff_EBP + -0x88, unaff_EBP + -0x28);\n        *(unaff_EBP + 0xc) = uVar20;\n        fcn.0041f6e5();\n        if (*(unaff_EBP + -0x4c) != 0) {\n            iVar14 = *(unaff_EBP + -0x4c) * 0x10 + -0x10 + *(unaff_EBP + -0x54);\n            for (pcVar19 = *(unaff_EBP + 0x18); *pcVar19 != '\\0'; pcVar19 = pcVar19 + 1) {\n                if ((*pcVar19 == '\\b') || (*pcVar19 == '\\x0e')) {\n                    (*_sym.imp.OLEAUT32.dll_VariantCopy)(iVar14);\n                }\n                iVar14 = iVar14 + -0x10;\n            }\n        }\n        fcn.0040597d(*(unaff_EBP + -0x54));\n        *(unaff_EBP + -0x54) = 0;\n        if (-1 < *(unaff_EBP + 0xc)) goto code_r0x0041fb4d;\n        var_4h = unaff_EBP + -0x44;\n        (*_sym.imp.OLEAUT32.dll_VariantCopy)();\n        if (*(unaff_EBP + 0xc) == -0x7ffdfff7) goto code_r0x0041fa99;\n        while( true ) {\n            fcn.00405ce2(var_4h);\ncode_r0x0041fa99:\n            if (*(unaff_EBP + -0x70) != iVar16) {\n                (**(unaff_EBP + -0x70))(unaff_EBP + -0x88);\n            }\n            iVar14 = fcn.0040594d(0x20);\n            *(unaff_EBP + 0x14) = iVar14;\n            *(unaff_EBP + -4) = 4;\n            if (iVar14 != iVar16) {\n                iVar16 = fcn.0041ef8c(iVar16, iVar16, *(unaff_EBP + -0x88));\n            }\n            pcVar10 = _sym.imp.OLEAUT32.dll_VariantInit;\n            *(unaff_EBP + -4) = 1;\n            iVar14 = (*pcVar10)(*(unaff_EBP + -0x84));\n            if (iVar14 != 0) {\n                fcn.00405fab(*(unaff_EBP + -0x84));\n            }\n            pcVar11 = _sym.imp.OLEAUT32.dll_SysStringLen;\n            (*_sym.imp.OLEAUT32.dll_SysStringLen)(*(unaff_EBP + -0x84));\n            iVar14 = (*pcVar10)(*(unaff_EBP + -0x80));\n            if (iVar14 != 0) {\n                fcn.00405fab(*(unaff_EBP + -0x80));\n            }\n            (*pcVar11)(*(unaff_EBP + -0x80));\n            iVar14 = (*pcVar10)(*(unaff_EBP + -0x7c));\n            if (iVar14 != 0) {\n                fcn.00405fab(*(unaff_EBP + -0x7c));\n            }\n            (*pcVar11)(*(unaff_EBP + -0x7c));\n            *(iVar16 + 0x10) = *(unaff_EBP + -0x78);\n            *(iVar16 + 0x1c) = *(unaff_EBP + -0x6c);\n            *(unaff_EBP + 0x14) = iVar16;\n            fcn.00421cb9(unaff_EBP + 0x14, 0x45c134);\ncode_r0x0041fb4d:\n            uVar7 = *(unaff_EBP + 0x10);\n            if (uVar7 == iVar16) goto code_r0x0041fc0a;\n            if ((uVar7 == 0xc) ||\n               (var_4h = (*_sym.imp.OLEAUT32.dll_VariantTimeToDosDateTime)\n                                   (unaff_EBP + -0x44, unaff_EBP + -0x44, iVar16, uVar7),  iVar16 <= var_4h)) break;\n            (*_sym.imp.OLEAUT32.dll_VariantCopy)(unaff_EBP + -0x44);\n        }\n    // switch table (20 cases) at 0x41fccc\n        switch(uVar7 & 0xffff) {\n        case 2:\n        case 0x12:\n            **(unaff_EBP + 0x14) = *(unaff_EBP + -0x3c);\n            break;\n        case 3:\n        case 9:\n        case 10:\n        case 0xd:\n        case 0x13:\n            **(unaff_EBP + 0x14) = *(unaff_EBP + -0x3c);\n            break;\n        case 4:\n            **(unaff_EBP + 0x14) = *(unaff_EBP + -0x3c);\n            break;\n        case 5:\n        case 7:\n            **(unaff_EBP + 0x14) = *(unaff_EBP + -0x3c);\n            break;\n        case 6:\n        case 0x14:\n        case 0x15:\n            puVar8 = *(unaff_EBP + 0x14);\n            *puVar8 = *(unaff_EBP + -0x3c);\n            puVar8[1] = *(unaff_EBP + -0x38);\n            break;\n        case 8:\n            fcn.004121f0(*(unaff_EBP + 0x14), *(unaff_EBP + -0x3c));\n            (*_sym.imp.OLEAUT32.dll_SysStringLen)(*(unaff_EBP + -0x3c));\n            break;\n        case 0xb:\n            **(unaff_EBP + 0x14) = *(unaff_EBP + -0x3c) != iVar16;\n            break;\n        case 0xc:\n            puVar8 = *(unaff_EBP + 0x14);\n            *puVar8 = *(unaff_EBP + -0x44);\n            puVar8[1] = *(unaff_EBP + -0x40);\n            puVar8[2] = *(unaff_EBP + -0x3c);\n            puVar8[3] = *(unaff_EBP + -0x38);\n            iVar16 = 0;\n            break;\n        case 0x10:\n        case 0x11:\n            **(unaff_EBP + 0x14) = *(unaff_EBP + -0x3c);\n        }\ncode_r0x0041fc0a:\n        *(unaff_EBP + -4) = 0;\n        fcn.0041e82c();\n        *(unaff_EBP + -4) = 0xffffffff;\n        if (*(unaff_EBP + -0x54) != iVar16) {\n            fcn.0040597d(*(unaff_EBP + -0x54));\n        }\n    }\n    fcn.00423cd6();\n    return;\n}\n",
        "token_count": 4952
    },
    "0041fda2": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.0041fda2(int32_t param_1)\n\n{\n    int32_t iVar1;\n    \n    fcn.00420580();\n    fcn.004204e4();\n    fcn.0042048a();\n    if (param_1 == 0) {\n        iVar1 = fcn.004074ed();\n        if (iVar1 != 0) {\n            if (*(iVar1 + 0x40) != NULL) {\n                (**(**(iVar1 + 0x40) + 4))(1);\n            }\n            *(iVar1 + 0x40) = 0;\n        }\n        iVar1 = fcn.004095e9();\n        if (*(iVar1 + 0x100) == 1) {\n            (*_sym.imp.ole32.dll_CoFreeUnusedLibraries)();\n            (*_sym.imp.ole32.dll_OleUninitialize)();\n            *(iVar1 + 0x100) = 0;\n        }\n    }\n    return;\n}\n",
        "token_count": 215
    },
    "004204c3": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004204c3(int32_t param_1)\n\n{\n    if (*(param_1 + 0x4a) != '\\0') {\n        if (*(param_1 + 0x24) != 0) {\n            (*_sym.imp.ole32.dll_CoRevokeClassObject)(*(param_1 + 0x24));\n            *(param_1 + 0x24) = 0;\n        }\n        *(param_1 + 0x4a) = 0;\n    }\n    return;\n}\n",
        "token_count": 119
    },
    "004205bd": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004205bd(int32_t param_1)\n\n{\n    if (*(param_1 + 0x20) != 0) {\n        (*_sym.imp.ole32.dll_CoRegisterMessageFilter)(0, 0);\n        *(param_1 + 0x20) = 0;\n    }\n    return;\n}\n",
        "token_count": 76
    },
    "00421013": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.00421013(int32_t param_1, int32_t param_2)\n\n{\n    *(param_1 + 0x74) = param_2;\n    if (param_2 != 1) {\n        param_2 = ((param_2 != 2) - 1 & 3) - 1;\n    }\n    return param_2;\n}\n",
        "token_count": 88
    },
    "004210b2": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004210b2(int32_t param_1)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t hWnd;\n    \n    iVar2 = *(param_1 + 0x68);\n    if (iVar2 != 0) {\n        iVar2 = *(iVar2 + 0x20);\n    }\n    hWnd = param_1;\n    uVar1 = fcn.004080e3(iVar2, &hWnd);\n    *(param_1 + 0x80) = uVar1;\n    fcn.0040e84b(param_1);\n    iVar2 = sub.oledlg.dll_OleUIBusyA(param_1 + 0x78);\n    fcn.0040cdcb();\n    fcn.0040cd9d();\n    if (hWnd != 0) {\n        (*_sym.imp.USER32.dll_EnableWindow)(hWnd, 1);\n    }\n    uVar1 = 2;\n    if (iVar2 != 2) {\n        if (iVar2 == 0x75) {\n            *(param_1 + 0xa4) = 1;\n        }\n        else {\n            if (iVar2 != 0x76) {\n                if (iVar2 == 0x77) {\n                    *(param_1 + 0xa4) = 3;\n                    return 1;\n                }\n                uVar1 = fcn.00421013(iVar2);\n            }\n            *(param_1 + 0xa4) = uVar1;\n        }\n        return 1;\n    }\n    return 2;\n}\n",
        "token_count": 349
    },
    "0042146f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042146f(code **param_1)\n\n{\n    *param_1 = vtable.std::exception.0;\n    if (param_1[2] != NULL) {\n        fcn.004212be(param_1[1]);\n    }\n    return;\n}\n",
        "token_count": 64
    },
    "00421e2f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00421e2f(uint arg_8h)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    int32_t in_ECX;\n    uint in_EDX;\n    uint unaff_EBX;\n    uint unaff_EBP;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    ushort in_ES;\n    ushort in_CS;\n    ushort in_SS;\n    ushort in_DS;\n    ushort in_FS;\n    ushort in_GS;\n    uint8_t in_AF;\n    uint8_t in_TF;\n    uint8_t in_IF;\n    uint8_t in_NT;\n    uint8_t in_AC;\n    uint8_t in_VIF;\n    uint8_t in_VIP;\n    uint8_t in_ID;\n    uint unaff_retaddr;\n    int32_t var_328h;\n    uint var_324h;\n    uint var_320h;\n    \n    if (in_ECX == *0x460604) {\n        return;\n    }\n    *0x464078 = (in_NT & 1) * 0x4000 | SBORROW4(&stack0xfffffffc, 0x328) * 0x800 | (in_IF & 1) * 0x200 |\n                (in_TF & 1) * 0x100 | (&var_328h < 0) * 0x80 | (*0x10 == 0x32c) * 0x40 | (in_AF & 1) * 0x10 |\n                ((POPCOUNT(&var_328h & 0xff) & 1U) == 0) * 4 | &stack0xfffffffc < 0x328 | (in_ID & 1) * 0x200000 |\n                (in_VIP & 1) * 0x100000 | (in_VIF & 1) * 0x80000 | (in_AC & 1) * 0x40000;\n    *0x46407c = &arg_8h;\n    *0x463fb8 = 0x10001;\n    *0x463f60 = 0xc0000409;\n    *0x463f64 = 1;\n    var_328h = *0x460604;\n    var_324h = *0x460608;\n    *0x463f6c = unaff_retaddr;\n    *0x464044 = in_GS;\n    *0x464048 = in_FS;\n    *0x46404c = in_ES;\n    *0x464050 = in_DS;\n    *0x464054 = unaff_EDI;\n    *0x464058 = unaff_ESI;\n    *0x46405c = unaff_EBX;\n    *0x464060 = in_EDX;\n    *0x464064 = in_ECX;\n    *0x464068 = in_EAX;\n    *0x46406c = unaff_EBP;\n    *0x464070 = unaff_retaddr;\n    *0x464074 = in_CS;\n    *0x464080 = in_SS;\n    *0x463fb0 = (*_sym.imp.KERNEL32.dll_IsDebuggerPresent)();\n    fcn.00430337(1);\n    (*_sym.imp.KERNEL32.dll_SetUnhandledExceptionFilter)(0);\n    (*_sym.imp.KERNEL32.dll_UnhandledExceptionFilter)(0x4549ec);\n    if (*0x463fb0 == 0) {\n        fcn.00430337(1);\n    }\n    uVar1 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)(0xc0000409);\n    (*_sym.imp.KERNEL32.dll_TerminateProcess)(uVar1);\n    return;\n}\n",
        "token_count": 811
    },
    "004220fb": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.004220fb(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, uint noname_13\n            , uint noname_14, uint arg_8h, uint arg_ch, uint noname_17, uint noname_18, uint arg_18h, uint arg_1ch, \n            uint arg_20h)\n\n{\n    int32_t iVar1;\n    int32_t *in_FS_OFFSET;\n    uint *var_8h_3;\n    uint *var_ch_2;\n    uint var_10h_2;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    uint var_38h;\n    uint *var_34h;\n    uint var_30h;\n    code *var_2ch;\n    uint *var_28h_2;\n    code *pcStack40;\n    uint32_t uStack36;\n    uint uStack32;\n    uint *puStack28;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uchar *var_8h_2;\n    int32_t var_4h_2;\n    \n    var_8h_2 = &stack0xfffffffc;\n    puStack16 = &stack0xffffffc0;\n    if (var_8h_3 == 0x123) {\n        *var_ch_2 = 0x4221a4;\n        var_38h = 1;\n    }\n    else {\n        pcStack40 = fcn.004221d0;\n        uStack36 = *0x460604 ^ &fcn.004220fb::var_28h_2;\n        uStack32 = var_24h;\n        puStack28 = var_ch_2;\n        uStack24 = var_20h;\n        uStack20 = var_1ch;\n        var_4h_2 = 0;\n        var_28h_2 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &fcn.004220fb::var_28h_2;\n        var_34h = var_8h_3;\n        var_30h = var_10h_2;\n        iVar1 = fcn.0042926a();\n        var_2ch = *(iVar1 + 0x80);\n        (*var_2ch)(*var_8h_3, &fcn.004220fb::var_34h);\n        var_38h = 0;\n        if (var_4h_2 == 0) {\n            *in_FS_OFFSET = var_28h_2;\n        }\n        else {\n            *var_28h_2 = **in_FS_OFFSET;\n            *in_FS_OFFSET = var_28h_2;\n        }\n    }\n    return var_38h;\n}\n",
        "token_count": 719
    },
    "0042288f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042288f(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t unaff_EBP;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x1c) == 0) {\n        fcn.004227e6(*(unaff_EBP + 8), *(unaff_EBP + 0xc), *(unaff_EBP + 0x10), *(unaff_EBP + 0x14));\n    }\n    return;\n}\n",
        "token_count": 125
    },
    "00423997": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00423997(uint arg_8h, uint arg_ch, uint noname_2, uint noname_3, uint arg_18h)\n\n{\n    int32_t unaff_EBP;\n    uint var_20h;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x20) == 0) {\n        fcn.004227e6(*(unaff_EBP + 8), *(unaff_EBP + 0xc), *(unaff_EBP + -0x1c), *(unaff_EBP + 0x18));\n    }\n    return;\n}\n",
        "token_count": 137
    },
    "00424050": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Possible PIC construction at 0x004240e5: Changing call to branch\n// WARNING: Removing unreachable block (ram,0x004240ea)\n// WARNING: Removing unreachable block (ram,0x00424118)\n// WARNING: Removing unreachable block (ram,0x004240f0)\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00424050(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    int32_t unaff_EBP;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.004259a4(0x45c7e8, 0xc);\n    fcn.00426f6e(8);\n    *(unaff_EBP + -4) = 0;\n    if (*0x463a74 != 1) {\n        *0x463a70 = 1;\n        *0x463a6c = *(unaff_EBP + 0x10);\n        if (*(unaff_EBP + 0xc) == 0) {\n            uVar1 = fcn.00429060(*0x4656cc);\n            uVar2 = fcn.00429060(*0x4656c8);\n            *(unaff_EBP + -0x1c) = uVar2;\n            if (uVar1 != 0) {\n                while (*(unaff_EBP + -0x1c) = *(unaff_EBP + -0x1c) + -4,  uVar1 <= *(unaff_EBP + -0x1c)) {\n                    if (**(unaff_EBP + -0x1c) != NULL) {\n                        (***(unaff_EBP + -0x1c))();\n                    }\n                }\n            }\n            fcn.00423f13(0x43a65c);\n        }\n        fcn.00423f13(0x43a668);\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    if (*(unaff_EBP + 0x10) != 0) {\n        fcn.00426e96(8);\n    }\n    return;\n}\n",
        "token_count": 496
    },
    "00429d61": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00429d61(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0042926a();\n    if (0 < *(iVar1 + 0x90)) {\n        iVar1 = fcn.0042926a();\n        *(iVar1 + 0x90) = *(iVar1 + 0x90) + -1;\n    }\n    return;\n}\n",
        "token_count": 89
    },
    "0042a022": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042a022(uint noname_0, uint noname_1, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t unaff_EBP;\n    int32_t *unaff_ESI;\n    int32_t unaff_EDI;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_1ch;\n    \n    *(unaff_EDI + -4) = *(unaff_EBP + -0x24);\n    fcn.00422329(*(unaff_EBP + -0x28));\n    iVar1 = fcn.0042926a();\n    *(iVar1 + 0x88) = *(unaff_EBP + -0x2c);\n    iVar1 = fcn.0042926a();\n    *(iVar1 + 0x8c) = *(unaff_EBP + -0x30);\n    if ((((*unaff_ESI == -0x1f928c9d) && (unaff_ESI[4] == 3)) &&\n        ((iVar1 = unaff_ESI[5],  iVar1 == 0x19930520 || ((iVar1 == 0x19930521 || (iVar1 == 0x19930522)))))) &&\n       ((*(unaff_EBP + -0x34) == 0 && (*(unaff_EBP + -0x1c) != 0)))) {\n        iVar1 = fcn.00422308(unaff_ESI[6]);\n        if (iVar1 != 0) {\n            fcn.00429dc1(unaff_ESI);\n        }\n    }\n    return;\n}\n",
        "token_count": 380
    },
    "0042ddaf": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.0042ddaf(void)\n\n{\n    int32_t unaff_EBP;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x1c) != 0) {\n        fcn.00426e96(0);\n    }\n    return;\n}\n",
        "token_count": 65
    },
    "00433991": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00433991(uint16_t *arg_8h, uint32_t *arg_ch)\n\n{\n    uint32_t *puVar1;\n    uint16_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint8_t uVar6;\n    uint32_t *puVar7;\n    uint *puVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    uint32_t uVar11;\n    int32_t iVar12;\n    int32_t iVar13;\n    bool bVar14;\n    uint var_2ch;\n    uint32_t var_20h;\n    uint32_t var_1ch;\n    int32_t var_18h;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_14h = arg_8h[5] & 0x8000;\n    uVar10 = *(arg_8h + 3);\n    var_20h = uVar10;\n    uVar3 = *(arg_8h + 1);\n    uVar2 = *arg_8h;\n    uVar11 = arg_8h[5] & 0x7fff;\n    iVar12 = uVar11 - 0x3fff;\n    var_1ch = uVar3;\n    var_18h = uVar2 << 0x10;\n    if (iVar12 == -0x3fff) {\n        iVar12 = 0;\n        iVar4 = 0;\n        do {\n            if ((&var_20h)[iVar4] != 0) {\n                var_20h = 0;\n                var_1ch = 0;\n                uVar5 = 2;\n                goto code_r0x00433e90;\n            }\n            iVar4 = iVar4 + 1;\n        } while (iVar4 < 3);\n        uVar5 = 0;\n    }\n    else {\n        arg_8h = NULL;\n        iVar13 = str.5_v_[0] + L'\\xffffffff';\n        iVar4 = str.5_v_[0] + (str.5_v_[0] >> 0x1f & 0x1fU) >> 5;\n        uVar9 = str.5_v_[0] & 0x8000001f;\n        var_10h = iVar12;\n        var_ch = iVar4;\n        if (uVar9 < 0) {\n            uVar9 = (uVar9 - 1 | 0xffffffe0) + 1;\n        }\n        puVar1 = &var_20h + iVar4;\n        uVar6 = 0x1f - uVar9;\n        var_8h = 0x1f - uVar9;\n        if ((*puVar1 & 1 << (uVar6 & 0x1f)) != 0) {\n            uVar9 = (&var_20h)[iVar4] & ~(-1 << (uVar6 & 0x1f));\n            while( true ) {\n                if (uVar9 != 0) {\n                    iVar4 = iVar13 + (iVar13 >> 0x1f & 0x1fU) >> 5;\n                    var_4h = 0;\n                    uVar9 = 1 << (0x1f - (iVar13 & 0x1f) & 0x1f);\n                    puVar7 = &var_20h + iVar4;\n                    arg_8h = *puVar7 + uVar9;\n                    if (arg_8h < *puVar7) goto code_r0x00433ac4;\n                    bVar14 = arg_8h < uVar9;\n                    do {\n                        var_4h = 0;\n                        if (!bVar14) goto code_r0x00433acb;\ncode_r0x00433ac4:\n                        do {\n                            var_4h = 1;\ncode_r0x00433acb:\n                            iVar4 = iVar4 + -1;\n                            *puVar7 = arg_8h;\n                            if ((iVar4 < 0) || (var_4h == 0)) {\n                                arg_8h = var_4h;\n                                goto code_r0x00433ad9;\n                            }\n                            var_4h = 0;\n                            puVar7 = &var_20h + iVar4;\n                            arg_8h = *puVar7 + 1;\n                        } while (arg_8h < *puVar7);\n                        bVar14 = arg_8h == NULL;\n                    } while( true );\n                }\n                iVar4 = iVar4 + 1;\n                if (2 < iVar4) break;\n                uVar9 = (&var_20h)[iVar4];\n            }\n        }\ncode_r0x00433ad9:\n        *puVar1 = *puVar1 & -1 << (var_8h & 0x1f);\n        iVar4 = var_ch + 1;\n        if (iVar4 < 3) {\n            puVar8 = &var_20h + iVar4;\n            for (iVar13 = 3 - iVar4; iVar13 != 0; iVar13 = iVar13 + -1) {\n                *puVar8 = 0;\n                puVar8 = puVar8 + 1;\n            }\n        }\n        if (arg_8h != NULL) {\n            iVar12 = uVar11 - 0x3ffe;\n        }\n        if (iVar12 < *0x4617cc - str.5_v_[0]) {\n            var_20h = 0;\n            var_1ch = 0;\n        }\n        else {\n            if (*0x4617cc < iVar12) {\n                if (iVar12 < *0x4617c8) {\n                    var_20h = var_20h & 0x7fffffff;\n                    iVar12 = iVar12 + str.5_v_[3];\n                    iVar4 = str.5_v_[1] + (str.5_v_[1] >> 0x1f & 0x1fU) >> 5;\n                    uVar10 = str.5_v_[1] & 0x8000001f;\n                    if (uVar10 < 0) {\n                        uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n                    }\n                    var_ch = 0;\n                    arg_8h = NULL;\n                    var_4h = 0x20 - uVar10;\n                    do {\n                        var_10h = (&var_20h)[arg_8h] & ~(-1 << (uVar10 & 0x1f));\n                        (&var_20h)[arg_8h] = (&var_20h)[arg_8h] >> (uVar10 & 0x1f) | var_ch;\n                        arg_8h = arg_8h + 1;\n                        var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n                    } while (arg_8h < 3);\n                    iVar13 = 2;\n                    puVar8 = &var_18h + -iVar4;\n                    do {\n                        if (iVar13 < iVar4) {\n                            (&var_20h)[iVar13] = 0;\n                        }\n                        else {\n                            (&var_20h)[iVar13] = *puVar8;\n                        }\n                        iVar13 = iVar13 + -1;\n                        puVar8 = puVar8 + -1;\n                    } while (-1 < iVar13);\n                    uVar5 = 0;\n                }\n                else {\n                    var_1ch = 0;\n                    var_18h = 0;\n                    var_20h = 0x80000000;\n                    iVar12 = str.5_v_[1] + (str.5_v_[1] >> 0x1f & 0x1fU) >> 5;\n                    uVar10 = str.5_v_[1] & 0x8000001f;\n                    if (uVar10 < 0) {\n                        uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n                    }\n                    var_ch = 0;\n                    arg_8h = NULL;\n                    var_4h = 0x20 - uVar10;\n                    do {\n                        uVar3 = (&var_20h)[arg_8h];\n                        var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                        (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                        arg_8h = arg_8h + 1;\n                        var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n                    } while (arg_8h < 3);\n                    iVar4 = 2;\n                    puVar8 = &var_18h + -iVar12;\n                    do {\n                        if (iVar4 < iVar12) {\n                            (&var_20h)[iVar4] = 0;\n                        }\n                        else {\n                            (&var_20h)[iVar4] = *puVar8;\n                        }\n                        iVar4 = iVar4 + -1;\n                        puVar8 = puVar8 + -1;\n                    } while (-1 < iVar4);\n                    iVar12 = str.5_v_[3] + *0x4617c8;\n                    uVar5 = 1;\n                }\n                goto code_r0x00433e90;\n            }\n            var_10h = *0x4617cc - var_10h;\n            var_20h = uVar10;\n            var_1ch = uVar3;\n            iVar12 = var_10h + (var_10h >> 0x1f & 0x1fU) >> 5;\n            uVar10 = var_10h & 0x8000001f;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            var_ch = 0;\n            arg_8h = NULL;\n            var_4h = 0x20 - uVar10;\n            do {\n                uVar3 = (&var_20h)[arg_8h];\n                var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                arg_8h = arg_8h + 1;\n                var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n            } while (arg_8h < 3);\n            iVar4 = 2;\n            puVar8 = &var_18h + -iVar12;\n            do {\n                if (iVar4 < iVar12) {\n                    (&var_20h)[iVar4] = 0;\n                }\n                else {\n                    (&var_20h)[iVar4] = *puVar8;\n                }\n                iVar4 = iVar4 + -1;\n                puVar8 = puVar8 + -1;\n            } while (-1 < iVar4);\n            iVar4 = str.5_v_[0] + L'\\xffffffff';\n            iVar12 = str.5_v_[0] + (str.5_v_[0] >> 0x1f & 0x1fU) >> 5;\n            uVar10 = str.5_v_[0] & 0x8000001f;\n            var_ch = iVar12;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            uVar6 = 0x1f - uVar10;\n            puVar1 = &var_20h + iVar12;\n            var_10h = 0x1f - uVar10;\n            if ((*puVar1 & 1 << (uVar6 & 0x1f)) != 0) {\n                uVar10 = (&var_20h)[iVar12] & ~(-1 << (uVar6 & 0x1f));\n                while (uVar10 == 0) {\n                    iVar12 = iVar12 + 1;\n                    if (2 < iVar12) goto code_r0x00433c7c;\n                    uVar10 = (&var_20h)[iVar12];\n                }\n                iVar12 = iVar4 + (iVar4 >> 0x1f & 0x1fU) >> 5;\n                bVar14 = false;\n                uVar11 = 1 << (0x1f - (iVar4 & 0x1f) & 0x1f);\n                uVar3 = (&var_20h)[iVar12];\n                uVar10 = uVar3 + uVar11;\n                if ((uVar10 < uVar3) || (uVar10 < uVar11)) {\n                    bVar14 = true;\n                }\n                (&var_20h)[iVar12] = uVar10;\n                while ((iVar12 = iVar12 + -1,  -1 < iVar12 && (bVar14))) {\n                    uVar3 = (&var_20h)[iVar12];\n                    uVar10 = uVar3 + 1;\n                    bVar14 = false;\n                    if ((uVar10 < uVar3) || (uVar10 == 0)) {\n                        bVar14 = true;\n                    }\n                    (&var_20h)[iVar12] = uVar10;\n                }\n            }\ncode_r0x00433c7c:\n            *puVar1 = *puVar1 & -1 << (var_10h & 0x1f);\n            iVar12 = var_ch + 1;\n            if (iVar12 < 3) {\n                puVar8 = &var_20h + iVar12;\n                for (iVar4 = 3 - iVar12; iVar4 != 0; iVar4 = iVar4 + -1) {\n                    *puVar8 = 0;\n                    puVar8 = puVar8 + 1;\n                }\n            }\n            uVar10 = str.5_v_[1] + L'\\x01';\n            iVar12 = uVar10 + (uVar10 >> 0x1f & 0x1fU) >> 5;\n            uVar10 = uVar10 & 0x8000001f;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            var_ch = 0;\n            arg_8h = NULL;\n            var_4h = 0x20 - uVar10;\n            do {\n                uVar3 = (&var_20h)[arg_8h];\n                var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                arg_8h = arg_8h + 1;\n                var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n            } while (arg_8h < 3);\n            iVar4 = 2;\n            puVar8 = &var_18h + -iVar12;\n            do {\n                if (iVar4 < iVar12) {\n                    (&var_20h)[iVar4] = 0;\n                }\n                else {\n                    (&var_20h)[iVar4] = *puVar8;\n                }\n                iVar4 = iVar4 + -1;\n                puVar8 = puVar8 + -1;\n            } while (-1 < iVar4);\n        }\n        iVar12 = 0;\n        uVar5 = 2;\n    }\ncode_r0x00433e90:\n    var_20h = iVar12 << (0x1fU - str.5_v_[1] & 0x1f) | -(var_14h != 0) & 0x80000000 | var_20h;\n    if (str.5_v_[2] == L'@') {\n        arg_ch[1] = var_20h;\n        *arg_ch = var_1ch;\n    }\n    else if (str.5_v_[2] == L' ') {\n        *arg_ch = var_20h;\n    }\n    return uVar5;\n}\n",
        "token_count": 3665
    },
    "00433ed3": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00433ed3(uint16_t *arg_8h, uint32_t *arg_ch)\n\n{\n    uint32_t *puVar1;\n    uint16_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint8_t uVar6;\n    uint32_t *puVar7;\n    uint *puVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    uint32_t uVar11;\n    int32_t iVar12;\n    int32_t iVar13;\n    bool bVar14;\n    uint var_2ch;\n    uint32_t var_20h;\n    uint32_t var_1ch;\n    int32_t var_18h;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_14h = arg_8h[5] & 0x8000;\n    uVar10 = *(arg_8h + 3);\n    var_20h = uVar10;\n    uVar3 = *(arg_8h + 1);\n    uVar2 = *arg_8h;\n    uVar11 = arg_8h[5] & 0x7fff;\n    iVar12 = uVar11 - 0x3fff;\n    var_1ch = uVar3;\n    var_18h = uVar2 << 0x10;\n    if (iVar12 == -0x3fff) {\n        iVar12 = 0;\n        iVar4 = 0;\n        do {\n            if ((&var_20h)[iVar4] != 0) {\n                var_20h = 0;\n                var_1ch = 0;\n                uVar5 = 2;\n                goto code_r0x004343d2;\n            }\n            iVar4 = iVar4 + 1;\n        } while (iVar4 < 3);\n        uVar5 = 0;\n    }\n    else {\n        arg_8h = NULL;\n        iVar13 = *0x4617e8 - 1;\n        iVar4 = *0x4617e8 + (*0x4617e8 >> 0x1f & 0x1fU) >> 5;\n        uVar9 = *0x4617e8 & 0x8000001f;\n        var_10h = iVar12;\n        var_ch = iVar4;\n        if (uVar9 < 0) {\n            uVar9 = (uVar9 - 1 | 0xffffffe0) + 1;\n        }\n        puVar1 = &var_20h + iVar4;\n        uVar6 = 0x1f - uVar9;\n        var_8h = 0x1f - uVar9;\n        if ((*puVar1 & 1 << (uVar6 & 0x1f)) != 0) {\n            uVar9 = (&var_20h)[iVar4] & ~(-1 << (uVar6 & 0x1f));\n            while( true ) {\n                if (uVar9 != 0) {\n                    iVar4 = iVar13 + (iVar13 >> 0x1f & 0x1fU) >> 5;\n                    var_4h = 0;\n                    uVar9 = 1 << (0x1f - (iVar13 & 0x1f) & 0x1f);\n                    puVar7 = &var_20h + iVar4;\n                    arg_8h = *puVar7 + uVar9;\n                    if (arg_8h < *puVar7) goto code_r0x00434006;\n                    bVar14 = arg_8h < uVar9;\n                    do {\n                        var_4h = 0;\n                        if (!bVar14) goto code_r0x0043400d;\ncode_r0x00434006:\n                        do {\n                            var_4h = 1;\ncode_r0x0043400d:\n                            iVar4 = iVar4 + -1;\n                            *puVar7 = arg_8h;\n                            if ((iVar4 < 0) || (var_4h == 0)) {\n                                arg_8h = var_4h;\n                                goto code_r0x0043401b;\n                            }\n                            var_4h = 0;\n                            puVar7 = &var_20h + iVar4;\n                            arg_8h = *puVar7 + 1;\n                        } while (arg_8h < *puVar7);\n                        bVar14 = arg_8h == NULL;\n                    } while( true );\n                }\n                iVar4 = iVar4 + 1;\n                if (2 < iVar4) break;\n                uVar9 = (&var_20h)[iVar4];\n            }\n        }\ncode_r0x0043401b:\n        *puVar1 = *puVar1 & -1 << (var_8h & 0x1f);\n        iVar4 = var_ch + 1;\n        if (iVar4 < 3) {\n            puVar8 = &var_20h + iVar4;\n            for (iVar13 = 3 - iVar4; iVar13 != 0; iVar13 = iVar13 + -1) {\n                *puVar8 = 0;\n                puVar8 = puVar8 + 1;\n            }\n        }\n        if (arg_8h != NULL) {\n            iVar12 = uVar11 - 0x3ffe;\n        }\n        if (iVar12 < *0x4617e4 - *0x4617e8) {\n            var_20h = 0;\n            var_1ch = 0;\n        }\n        else {\n            if (*0x4617e4 < iVar12) {\n                if (iVar12 < *0x4617e0) {\n                    var_20h = var_20h & 0x7fffffff;\n                    iVar12 = iVar12 + *0x4617f4;\n                    iVar4 = *0x4617ec + (*0x4617ec >> 0x1f & 0x1fU) >> 5;\n                    uVar10 = *0x4617ec & 0x8000001f;\n                    if (uVar10 < 0) {\n                        uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n                    }\n                    var_ch = 0;\n                    arg_8h = NULL;\n                    var_4h = 0x20 - uVar10;\n                    do {\n                        var_10h = (&var_20h)[arg_8h] & ~(-1 << (uVar10 & 0x1f));\n                        (&var_20h)[arg_8h] = (&var_20h)[arg_8h] >> (uVar10 & 0x1f) | var_ch;\n                        arg_8h = arg_8h + 1;\n                        var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n                    } while (arg_8h < 3);\n                    iVar13 = 2;\n                    puVar8 = &var_18h + -iVar4;\n                    do {\n                        if (iVar13 < iVar4) {\n                            (&var_20h)[iVar13] = 0;\n                        }\n                        else {\n                            (&var_20h)[iVar13] = *puVar8;\n                        }\n                        iVar13 = iVar13 + -1;\n                        puVar8 = puVar8 + -1;\n                    } while (-1 < iVar13);\n                    uVar5 = 0;\n                }\n                else {\n                    var_1ch = 0;\n                    var_18h = 0;\n                    var_20h = 0x80000000;\n                    iVar12 = *0x4617ec + (*0x4617ec >> 0x1f & 0x1fU) >> 5;\n                    uVar10 = *0x4617ec & 0x8000001f;\n                    if (uVar10 < 0) {\n                        uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n                    }\n                    var_ch = 0;\n                    arg_8h = NULL;\n                    var_4h = 0x20 - uVar10;\n                    do {\n                        uVar3 = (&var_20h)[arg_8h];\n                        var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                        (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                        arg_8h = arg_8h + 1;\n                        var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n                    } while (arg_8h < 3);\n                    iVar4 = 2;\n                    puVar8 = &var_18h + -iVar12;\n                    do {\n                        if (iVar4 < iVar12) {\n                            (&var_20h)[iVar4] = 0;\n                        }\n                        else {\n                            (&var_20h)[iVar4] = *puVar8;\n                        }\n                        iVar4 = iVar4 + -1;\n                        puVar8 = puVar8 + -1;\n                    } while (-1 < iVar4);\n                    iVar12 = *0x4617f4 + *0x4617e0;\n                    uVar5 = 1;\n                }\n                goto code_r0x004343d2;\n            }\n            var_10h = *0x4617e4 - var_10h;\n            var_20h = uVar10;\n            var_1ch = uVar3;\n            iVar12 = var_10h + (var_10h >> 0x1f & 0x1fU) >> 5;\n            uVar10 = var_10h & 0x8000001f;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            var_ch = 0;\n            arg_8h = NULL;\n            var_4h = 0x20 - uVar10;\n            do {\n                uVar3 = (&var_20h)[arg_8h];\n                var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                arg_8h = arg_8h + 1;\n                var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n            } while (arg_8h < 3);\n            iVar4 = 2;\n            puVar8 = &var_18h + -iVar12;\n            do {\n                if (iVar4 < iVar12) {\n                    (&var_20h)[iVar4] = 0;\n                }\n                else {\n                    (&var_20h)[iVar4] = *puVar8;\n                }\n                iVar4 = iVar4 + -1;\n                puVar8 = puVar8 + -1;\n            } while (-1 < iVar4);\n            iVar4 = *0x4617e8 - 1;\n            iVar12 = *0x4617e8 + (*0x4617e8 >> 0x1f & 0x1fU) >> 5;\n            uVar10 = *0x4617e8 & 0x8000001f;\n            var_ch = iVar12;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            uVar6 = 0x1f - uVar10;\n            puVar1 = &var_20h + iVar12;\n            var_10h = 0x1f - uVar10;\n            if ((*puVar1 & 1 << (uVar6 & 0x1f)) != 0) {\n                uVar10 = (&var_20h)[iVar12] & ~(-1 << (uVar6 & 0x1f));\n                while (uVar10 == 0) {\n                    iVar12 = iVar12 + 1;\n                    if (2 < iVar12) goto code_r0x004341be;\n                    uVar10 = (&var_20h)[iVar12];\n                }\n                iVar12 = iVar4 + (iVar4 >> 0x1f & 0x1fU) >> 5;\n                bVar14 = false;\n                uVar11 = 1 << (0x1f - (iVar4 & 0x1f) & 0x1f);\n                uVar3 = (&var_20h)[iVar12];\n                uVar10 = uVar3 + uVar11;\n                if ((uVar10 < uVar3) || (uVar10 < uVar11)) {\n                    bVar14 = true;\n                }\n                (&var_20h)[iVar12] = uVar10;\n                while ((iVar12 = iVar12 + -1,  -1 < iVar12 && (bVar14))) {\n                    uVar3 = (&var_20h)[iVar12];\n                    uVar10 = uVar3 + 1;\n                    bVar14 = false;\n                    if ((uVar10 < uVar3) || (uVar10 == 0)) {\n                        bVar14 = true;\n                    }\n                    (&var_20h)[iVar12] = uVar10;\n                }\n            }\ncode_r0x004341be:\n            *puVar1 = *puVar1 & -1 << (var_10h & 0x1f);\n            iVar12 = var_ch + 1;\n            if (iVar12 < 3) {\n                puVar8 = &var_20h + iVar12;\n                for (iVar4 = 3 - iVar12; iVar4 != 0; iVar4 = iVar4 + -1) {\n                    *puVar8 = 0;\n                    puVar8 = puVar8 + 1;\n                }\n            }\n            uVar10 = *0x4617ec + 1;\n            iVar12 = uVar10 + (uVar10 >> 0x1f & 0x1fU) >> 5;\n            uVar10 = uVar10 & 0x8000001f;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            var_ch = 0;\n            arg_8h = NULL;\n            var_4h = 0x20 - uVar10;\n            do {\n                uVar3 = (&var_20h)[arg_8h];\n                var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                arg_8h = arg_8h + 1;\n                var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n            } while (arg_8h < 3);\n            iVar4 = 2;\n            puVar8 = &var_18h + -iVar12;\n            do {\n                if (iVar4 < iVar12) {\n                    (&var_20h)[iVar4] = 0;\n                }\n                else {\n                    (&var_20h)[iVar4] = *puVar8;\n                }\n                iVar4 = iVar4 + -1;\n                puVar8 = puVar8 + -1;\n            } while (-1 < iVar4);\n        }\n        iVar12 = 0;\n        uVar5 = 2;\n    }\ncode_r0x004343d2:\n    var_20h = iVar12 << (0x1fU - *0x4617ec & 0x1f) | -(var_14h != 0) & 0x80000000 | var_20h;\n    if (*0x4617f0 == 0x40) {\n        arg_ch[1] = var_20h;\n        *arg_ch = var_1ch;\n    }\n    else if (*0x4617f0 == 0x20) {\n        *arg_ch = var_20h;\n    }\n    return uVar5;\n}\n",
        "token_count": 3652
    },
    "00401a90": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.00401a90(uint32_t param_1, uint32_t param_2)\n\n{\n    if (param_1 * param_2 >> 0x20 != 0) {\n        fcn.00401090(0x80070057);\n    }\n    return;\n}\n",
        "token_count": 64
    },
    "00405bc2": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint fcn.00405bc2(uint *param_1, uint32_t param_2, uint32_t param_3)\n\n{\n    if (param_2 * param_3 >> 0x20 != 0) {\n        return 0x80070057;\n    }\n    *param_1 = param_2 * param_3;\n    return 0;\n}\n",
        "token_count": 81
    },
    "00405c87": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405c87(uint arg_8h, uint arg_ch, uint arg_10h, int32_t arg_14h)\n\n{\n    if (arg_14h == -1) {\n        arg_14h = fcn.00423d23(arg_10h);\n        arg_14h = arg_14h + 1;\n    }\n    fcn.00405c2e(arg_8h, arg_ch, arg_10h, arg_14h);\n    return;\n}\n",
        "token_count": 113
    },
    "00407be9": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00407be9(int32_t *param_1, int32_t param_2)\n\n{\n    if ((param_2 == -1) && (param_2 = *param_1,  param_2 != 0)) {\n        param_2 = fcn.00423d40(param_2);\n    }\n    fcn.00403e20(param_2);\n    return;\n}\n",
        "token_count": 92
    },
    "00408332": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __cdecl fcn.00408332(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint uVar1;\n    int32_t arg_10h_00;\n    int32_t unaff_EBP;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.00423bfe(4);\n    uVar1 = fcn.00410877();\n    fcn.00403130(uVar1);\n    *(unaff_EBP + -4) = 0;\n    fcn.00404570(*(unaff_EBP + 8));\n    arg_10h_00 = *(unaff_EBP + 0x10);\n    if (arg_10h_00 == -1) {\n        arg_10h_00 = *(unaff_EBP + 8);\n    }\n    fcn.004082e9(*(unaff_EBP + -0x10), *(unaff_EBP + 0xc), arg_10h_00);\n    fcn.004028b0();\n    fcn.00423cd6();\n    return;\n}\n",
        "token_count": 274
    },
    "00409602": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.00409602(void)\n\n{\n    uint *puVar1;\n    code *pcVar2;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.00423bfe(4);\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *extraout_ECX = vtable.AFX_MODULE_STATE.0;\n    puVar1 = extraout_ECX[0x12];\n    *(unaff_EBP + -4) = 1;\n    if (puVar1 != NULL) {\n        (***puVar1)(1);\n    }\n    if (extraout_ECX[0x1c] != NULL) {\n        (**(*extraout_ECX[0x1c] + 0xc))(extraout_ECX + 0x13);\n        if (extraout_ECX[0x1c] != NULL) {\n            (**(*extraout_ECX[0x1c] + 4))(1);\n        }\n    }\n    if (*extraout_ECX[0x1e] != NULL) {\n        (****extraout_ECX[0x1e])(1);\n    }\n    if (*(extraout_ECX[0x1e] + 4) != NULL) {\n        (****(extraout_ECX[0x1e] + 4))(1);\n    }\n    fcn.0040597d(extraout_ECX[0x1e]);\n    pcVar2 = extraout_ECX[0x20];\n    if ((pcVar2 != NULL) && (pcVar2 != 0xffffffff)) {\n        fcn.0040930f(pcVar2);\n        extraout_ECX[0x20] = 0xffffffff;\n    }\n    *(unaff_EBP + -4) = 0;\n    fcn.004120e2();\n    fcn.004028b0();\n    fcn.00423cd6();\n    return;\n}\n",
        "token_count": 455
    },
    "00410649": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00410649(uint arg_8h, uint *arg_ch)\n\n{\n    uint *puVar1;\n    int32_t *in_ECX;\n    int32_t iVar2;\n    uint *puVar3;\n    uint var_34h;\n    int32_t var_14h;\n    uint *var_10h;\n    uint var_4h;\n    \n    puVar1 = arg_ch;\n    puVar3 = &var_34h;\n    for (iVar2 = 0xc; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar3 = *puVar1;\n        puVar1 = puVar1 + 1;\n        puVar3 = puVar3 + 1;\n    }\n    if (((var_14h == 0) && (var_10h != 0xffffffff)) && (var_10h != NULL)) {\n        iVar2 = fcn.0041d0ac(var_10h, &var_4h);\n        if (iVar2 == 0) {\n            puVar1 = fcn.0041d183(var_10h);\n            *puVar1 = 0;\n        }\n        arg_ch = NULL;\n        fcn.0041d0d3(var_10h, &arg_ch);\n        var_10h = arg_ch;\n    }\n    (**(*in_ECX + 0x110))(0x404, arg_8h, &var_34h);\n    return;\n}\n",
        "token_count": 326
    },
    "00411912": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.00411912(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, uint32_t arg_14h, uint32_t arg_18h, uint32_t arg_1ch, \n            uint arg_20h)\n\n{\n    uint *in_ECX;\n    int32_t unaff_EBX;\n    int32_t iVar1;\n    uint32_t unaff_EDI;\n    uint32_t uVar2;\n    int64_t iVar3;\n    uint32_t var_24h;\n    uint32_t var_20h;\n    uint32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint var_4h;\n    \n    iVar1 = unaff_EBX;\n    uVar2 = unaff_EDI;\n    if (0x76b < arg_8h) goto code_r0x0041192e;\n    do {\n        do {\n            fcn.00401090();\n            iVar1 = unaff_EBX;\n            uVar2 = unaff_EDI;\ncode_r0x0041192e:\n            unaff_EBX = arg_ch;\n            unaff_EDI = uVar2;\n        } while ((((0xb < arg_ch - 1U) || (0x1e < arg_10h - 1U)) || (unaff_EDI = arg_14h,  0x17 < arg_14h)) ||\n                ((0x3b < arg_18h || (0x3b < arg_1ch))));\n        var_24h = arg_1ch;\n        var_10h = arg_8h + -0x76c;\n        var_4h = arg_20h;\n        var_14h = arg_ch + -1;\n        var_20h = arg_18h;\n        var_1ch = arg_14h;\n        var_18h = arg_10h;\n        unaff_EDI = uVar2;\n        unaff_EBX = iVar1;\n        iVar3 = fcn.00426012(&var_24h, uVar2, iVar1);\n        *in_ECX = iVar3;\n        in_ECX[1] = iVar3 >> 0x20;\n    } while (iVar3 == -1);\n    return;\n}\n",
        "token_count": 519
    },
    "00411d7d": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.00411d7d(int32_t *param_1)\n\n{\n    code *pcVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    uint uStack12;\n    \n    param_1[5] = 0;\n    param_1[6] = 4;\n    param_1[1] = 0;\n    param_1[2] = 1;\n    param_1[3] = 0;\n    param_1[4] = 0;\n    iVar3 = (*_sym.imp.KERNEL32.dll_TlsAlloc)();\n    *param_1 = iVar3;\n    if (iVar3 == -1) {\n        uStack12 = 0x45f338;\n        fcn.00421cb9(&stack0xfffffff4, 0x45950c);\n        pcVar1 = swi(3);\n        piVar2 = (*pcVar1)();\n        return piVar2;\n    }\n    uStack12 = 0x411db8;\n    (*_sym.imp.KERNEL32.dll_InitializeCriticalSection)();\n    return param_1;\n}\n",
        "token_count": 249
    },
    "00412112": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00412112(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    int32_t arg_8h;\n    uint uVar2;\n    \n    arg_8h = param_1[5];\n    while (arg_8h != 0) {\n        iVar1 = *(arg_8h + 4);\n        fcn.00411f6a(arg_8h, 0);\n        arg_8h = iVar1;\n    }\n    if (*param_1 != -1) {\n        (*_sym.imp.KERNEL32.dll_TlsFree)(*param_1);\n    }\n    if (param_1[4] != 0) {\n        uVar2 = (*_sym.imp.KERNEL32.dll_GlobalHandle)(param_1[4]);\n        (*_sym.imp.KERNEL32.dll_GlobalUnlock)(uVar2);\n        (*_sym.imp.KERNEL32.dll_GlobalFree)(uVar2);\n    }\n    (*_sym.imp.KERNEL32.dll_DeleteCriticalSection)(param_1 + 7);\n    return;\n}\n",
        "token_count": 230
    },
    "004132dd": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004132dd(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    bool bVar3;\n    \n    bVar3 = false;\n    if (*(param_1 + 4) != -1) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_CloseHandle)(*(param_1 + 4));\n        bVar3 = iVar1 == 0;\n    }\n    *(param_1 + 4) = 0xffffffff;\n    *(param_1 + 8) = 0;\n    fcn.00404040();\n    if (bVar3) {\n        uVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)(*(param_1 + 0xc));\n        fcn.0041dfe1(uVar2);\n    }\n    return;\n}\n",
        "token_count": 183
    },
    "0041343b": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.0041343b(void)\n\n{\n    code **extraout_ECX;\n    uint *in_FS_OFFSET;\n    uint uStackY532;\n    uint in_stack_fffffe08;\n    \n    fcn.00423c31();\n    *extraout_ECX = vtable.CFile.0;\n    if ((extraout_ECX[1] != 0xffffffff) && (extraout_ECX[2] != NULL)) {\n        fcn.004132dd();\n    }\n    fcn.004028b0();\n    *in_FS_OFFSET = uStackY532;\n    fcn.00421e2f(in_stack_fffffe08);\n    return;\n}\n",
        "token_count": 145
    },
    "00413911": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00413911(int32_t *arg_8h, uint32_t arg_ch, int32_t *arg_10h)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    \n    if (arg_10h == NULL) {\n        fcn.00405a76();\n    }\n    puVar1 = (**(*arg_8h + 0x3c))();\n    do {\n        if (puVar1 == NULL) {\n            return 0;\n        }\n        for (iVar2 = puVar1[1]; *(iVar2 + 0x18) != 0xffffffff; iVar2 = iVar2 + 0x28) {\n            if ((*(iVar2 + 4) == arg_10h[1]) && (*(iVar2 + 0x18) == (*arg_10h != 0))) {\n                if (*(iVar2 + 0x24) == 0xffffffff) {\n                    if (*(iVar2 + 0x20) == 0xffffffff) {\n                        return iVar2;\n                    }\n                    if (*(iVar2 + 0x20) == arg_ch) {\n                        return iVar2;\n                    }\n                }\n                else if ((*(iVar2 + 0x20) < arg_ch || *(iVar2 + 0x20) == arg_ch) && (arg_ch <= *(iVar2 + 0x24))) {\n                    return iVar2;\n                }\n            }\n        }\n        puVar1 = *puVar1;\n    } while( true );\n}\n",
        "token_count": 329
    },
    "004168bb": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint fcn.004168bb(uint *param_1, uint *param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    param_1[4] = param_2[4];\n    iVar1 = param_2[4];\n    if (iVar1 == 0) {\n        *param_1 = *param_2;\n        param_1[1] = param_2[1];\n        param_1[2] = param_2[2];\n        param_1[3] = param_2[3];\n    }\n    else {\n        if (iVar1 == 1) {\n            *param_1 = *param_2;\n            param_1[1] = param_2[1];\n            param_1[2] = param_2[2];\n            param_1[3] = param_2[3];\n            param_1[5] = param_2[5];\n            return 1;\n        }\n        if (iVar1 != 2) {\n            return 1;\n        }\n    }\n    iVar1 = fcn.00423d23(param_2[5]);\n    iVar2 = fcn.00405be2(2, iVar1 + 1);\n    param_1[5] = iVar2;\n    if (iVar2 != 0) {\n        fcn.0042134c(iVar2, iVar1 + 1, param_2[5]);\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 326
    },
    "0041ca4a": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0041ca4a(int32_t param_1, int32_t **param_2, int32_t *param_3, int32_t *param_4)\n\n{\n    int32_t **ppiVar1;\n    int32_t extraout_ECX;\n    uint32_t uVar2;\n    int32_t *piVar3;\n    uint32_t uVar4;\n    int32_t *piVar5;\n    \n    piVar3 = *param_2;\n    if (piVar3 != NULL) {\n        if (piVar3 == 0xffffffff) {\n            uVar4 = 0;\n            if (*(param_1 + 8) != 0) {\n                ppiVar1 = *(param_1 + 4);\n                do {\n                    piVar3 = *ppiVar1;\n                    if (piVar3 != NULL) goto code_r0x0041ca7a;\n                    uVar4 = uVar4 + 1;\n                    ppiVar1 = ppiVar1 + 1;\n                } while (uVar4 < *(param_1 + 8));\n                fcn.00405a76();\n                param_1 = extraout_ECX;\n            }\n        }\ncode_r0x0041ca7a:\n        piVar5 = *piVar3;\n        if (piVar5 == NULL) {\n            uVar4 = *(param_1 + 8);\n            uVar2 = (piVar3[1] >> 4) % uVar4 + 1;\n            if (uVar2 < uVar4) {\n                ppiVar1 = *(param_1 + 4) + uVar2 * 4;\n                do {\n                    piVar5 = *ppiVar1;\n                    if (piVar5 != NULL) break;\n                    uVar2 = uVar2 + 1;\n                    ppiVar1 = ppiVar1 + 1;\n                } while (uVar2 < uVar4);\n            }\n        }\n        *param_2 = piVar5;\n        *param_3 = piVar3[1];\n        *param_4 = piVar3[2];\n    }\n    return;\n}\n",
        "token_count": 472
    },
    "0041e113": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041e113(uint32_t *arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint32_t uVar3;\n    uint32_t *puVar4;\n    int32_t in_ECX;\n    uint var_20h;\n    uint lpLastWriteTime;\n    uint lpLastAccessTime;\n    uint lpCreationTime;\n    \n    fcn.004215c0(arg_8h, 0, 0x128);\n    fcn.00405abf(arg_8h + 0x22, 0x104, *(in_ECX + 0xc), 0xffffffff);\n    if (*(in_ECX + 4) == *0x452e4c) {\ncode_r0x0041e262:\n        uVar2 = 1;\n    }\n    else {\n        iVar1 = (*_sym.imp.KERNEL32.dll_GetFileTime)\n                          (*(in_ECX + 4), &lpCreationTime, &lpLastAccessTime, &lpLastWriteTime);\n        if (iVar1 != 0) {\n            uVar3 = (*_sym.imp.KERNEL32.dll_GetFileSize)(*(in_ECX + 4), 0);\n            arg_8h[6] = uVar3;\n            arg_8h[7] = 0;\n            if (uVar3 != 0xffffffff) {\n                if (*(*(in_ECX + 0xc) + -0xc) == 0) {\n                    *(arg_8h + 8) = 0;\n                }\n                else {\n                    iVar1 = (*_sym.imp.KERNEL32.dll_GetFileAttributesA)(*(in_ECX + 0xc));\n                    *(arg_8h + 8) = (iVar1 == -1) - 1U & iVar1;\n                }\n                iVar1 = fcn.0041e086(&lpCreationTime);\n                if (iVar1 == 0) {\n                    *arg_8h = 0;\n                    arg_8h[1] = 0;\n                }\n                else {\n                    puVar4 = fcn.0041e0b5(&lpCreationTime, 0xffffffff);\n                    *arg_8h = *puVar4;\n                    arg_8h[1] = puVar4[1];\n                }\n                iVar1 = fcn.0041e086(&lpLastAccessTime);\n                if (iVar1 == 0) {\n                    arg_8h[4] = 0;\n                    arg_8h[5] = 0;\n                }\n                else {\n                    puVar4 = fcn.0041e0b5(&lpLastAccessTime, 0xffffffff);\n                    arg_8h[4] = *puVar4;\n                    arg_8h[5] = puVar4[1];\n                }\n                iVar1 = fcn.0041e086(&lpLastWriteTime);\n                if (iVar1 == 0) {\n                    arg_8h[2] = 0;\n                    arg_8h[3] = 0;\n                }\n                else {\n                    puVar4 = fcn.0041e0b5(&lpLastWriteTime, 0xffffffff);\n                    arg_8h[2] = *puVar4;\n                    arg_8h[3] = puVar4[1];\n                }\n                if ((*arg_8h | arg_8h[1]) == 0) {\n                    *arg_8h = arg_8h[2];\n                    arg_8h[1] = arg_8h[3];\n                }\n                if ((arg_8h[4] | arg_8h[5]) == 0) {\n                    arg_8h[4] = arg_8h[2];\n                    arg_8h[5] = arg_8h[3];\n                }\n                goto code_r0x0041e262;\n            }\n        }\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 865
    },
    "0042006b": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042006b(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t in_ECX;\n    int32_t iVar4;\n    \n    iVar1 = arg_8h;\n    iVar4 = 0;\n    if (-1 < arg_8h) goto code_r0x00420081;\n    do {\n        fcn.00405a76();\ncode_r0x00420081:\n        if (iVar4 <= arg_ch) {\n            *(in_ECX + 0x10) = arg_ch;\n        }\n        if (iVar1 == iVar4) {\n            fcn.0040597d(*(in_ECX + 4));\n            *(in_ECX + 0xc) = iVar4;\n            *(in_ECX + 8) = iVar4;\n            goto code_r0x00420171;\n        }\n        if (*(in_ECX + 4) == iVar4) {\n            uVar2 = fcn.0040594d(iVar1);\n            *(in_ECX + 4) = uVar2;\n            fcn.004215c0(uVar2, iVar4, iVar1);\n            *(in_ECX + 0xc) = iVar1;\ncode_r0x004200e8:\n            *(in_ECX + 8) = iVar1;\n            return;\n        }\n        iVar4 = *(in_ECX + 0xc);\n        if (iVar1 <= iVar4) {\n            iVar4 = *(in_ECX + 8);\n            if (iVar4 < iVar1) {\n                fcn.004215c0(iVar4 + *(in_ECX + 4), 0, iVar1 - iVar4);\n            }\n            goto code_r0x004200e8;\n        }\n        iVar3 = *(in_ECX + 0x10);\n        if (iVar3 == 0) {\n            iVar3 = *(in_ECX + 8) + (*(in_ECX + 8) >> 0x1f & 7U) >> 3;\n            if (iVar3 < 4) {\ncode_r0x0042011a:\n                iVar3 = 4;\n            }\n            else if (iVar3 < 0x401) {\n                if (iVar3 < 4) goto code_r0x0042011a;\n            }\n            else {\n                iVar3 = 0x400;\n            }\n        }\n        arg_8h = iVar3 + iVar4;\n        if (iVar3 + iVar4 <= iVar1) {\n            arg_8h = iVar1;\n        }\n    } while (arg_8h < iVar4);\n    iVar4 = fcn.0040594d(arg_8h);\n    fcn.00405c0f(iVar4, arg_8h, *(in_ECX + 4), *(in_ECX + 8));\n    fcn.004215c0(*(in_ECX + 8) + iVar4, 0, iVar1 - *(in_ECX + 8));\n    fcn.0040597d(*(in_ECX + 4));\n    *(in_ECX + 8) = iVar1;\n    *(in_ECX + 0xc) = arg_8h;\ncode_r0x00420171:\n    *(in_ECX + 4) = iVar4;\n    return;\n}\n",
        "token_count": 742
    },
    "00401d20": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00401d20(int32_t param_1, uint32_t param_2, int32_t param_3)\n\n{\n    uint32_t uVar1;\n    uint *arg_8h;\n    int32_t arg_10h;\n    uint *puVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    int32_t *in_FS_OFFSET;\n    uint32_t var_8h;\n    int32_t var_ch_2;\n    uint var_10h;\n    uint var_ch;\n    uint var_14h;\n    int32_t var_ch_3;\n    uint uStack12;\n    uint var_4h;\n    \n    uStack12 = 0x436db0;\n    var_ch_3 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_ch_3;\n    uVar4 = var_8h | 0xf;\n    if (uVar4 != 0xffffffff) {\n        uVar1 = *(param_1 + 0x18);\n        uVar3 = uVar1 >> 1;\n        var_8h = uVar4;\n        if ((uVar4 / 3 < uVar3) && (uVar1 <= -uVar3 - 2)) {\n            var_8h = uVar3 + uVar1;\n        }\n    }\n    var_4h = 0;\n    arg_8h = fcn.00401ab0(var_8h + 1, 0);\n    if (var_ch_2 != 0) {\n        if (*(param_1 + 0x18) < 0x10) {\n            arg_10h = param_1 + 4;\n        }\n        else {\n            arg_10h = *(param_1 + 4);\n        }\n        fcn.004214ae(arg_8h, var_8h + 1, arg_10h, var_ch_2);\n    }\n    if (0xf < *(param_1 + 0x18)) {\n        fcn.0040597d(*(param_1 + 4));\n    }\n    puVar2 = param_1 + 4;\n    *puVar2 = 0;\n    *puVar2 = arg_8h;\n    *(param_1 + 0x18) = var_8h;\n    *(param_1 + 0x14) = var_ch_2;\n    if (0xf < var_8h) {\n        puVar2 = arg_8h;\n    }\n    *(puVar2 + var_ch_2) = 0;\n    *in_FS_OFFSET = var_ch_3;\n    return;\n}\n",
        "token_count": 581
    },
    "004074f6": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nint32_t fcn.004074f6(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.004095e9();\n    return iVar1 + 0x30;\n}\n",
        "token_count": 45
    },
    "0040cc41": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nint32_t fcn.0040cc41(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint uStack16;\n    \n    iVar2 = fcn.00412058(0x405a90);\n    if (iVar2 == 0) {\n        uStack16 = 0x45f468;\n        fcn.00421cb9(&uStack16, 0x459604);\n        pcVar1 = swi(3);\n        iVar2 = (*pcVar1)();\n        return iVar2;\n    }\n    uVar3 = (*_sym.imp.USER32.dll_GetMessageTime)();\n    *(iVar2 + 0x68) = uVar3;\n    uVar3 = (*_sym.imp.USER32.dll_GetMessagePos)();\n    *(iVar2 + 0x70) = uVar3 >> 0x10;\n    *(iVar2 + 0x6c) = uVar3;\n    return iVar2 + 0x58;\n}\n",
        "token_count": 219
    },
    "0041bd35": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nuint32_t fcn.0041bd35(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = (*_sym.imp.USER32.dll_SendMessageA)(*(param_1 + 0x20), 0x400, 0, 0);\n    if (uVar1 >> 0x10 == 0x534b) {\n        uVar1 = uVar1 & 0xffff;\n    }\n    else {\n        uVar1 = 1;\n    }\n    return uVar1;\n}\n",
        "token_count": 119
    },
    "0042edc0": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nuint32_t * fcn.0042edc0(uint32_t *param_1, char param_2)\n\n{\n    uint32_t uVar1;\n    char cVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t *puVar5;\n    \n    uVar1 = param_1 & 3;\n    while (uVar1 != 0) {\n        if (*param_1 == param_2) {\n            return param_1;\n        }\n        if (*param_1 == '\\0') {\n            return NULL;\n        }\n        uVar1 = param_1 + 1 & 3;\n        param_1 = param_1 + 1;\n    }\n    while( true ) {\n        while( true ) {\n            uVar1 = *param_1;\n            uVar4 = uVar1 ^ CONCAT22(CONCAT11(param_2, param_2), CONCAT11(param_2, param_2));\n            uVar3 = uVar1 ^ 0xffffffff ^ uVar1 + 0x7efefeff;\n            puVar5 = param_1 + 1;\n            if (((uVar4 ^ 0xffffffff ^ uVar4 + 0x7efefeff) & 0x81010100) != 0) break;\n            param_1 = puVar5;\n            if ((uVar3 & 0x81010100) != 0) {\n                if ((uVar3 & 0x1010100) != 0) {\n                    return NULL;\n                }\n                if ((uVar1 + 0x7efefeff & 0x80000000) == 0) {\n                    return NULL;\n                }\n            }\n        }\n        uVar1 = *param_1;\n        if (uVar1 == param_2) {\n            return param_1;\n        }\n        if (uVar1 == '\\0') {\n            return NULL;\n        }\n        cVar2 = uVar1 >> 8;\n        if (cVar2 == param_2) {\n            return param_1 + 1;\n        }\n        if (cVar2 == '\\0') break;\n        cVar2 = uVar1 >> 0x10;\n        if (cVar2 == param_2) {\n            return param_1 + 2;\n        }\n        if (cVar2 == '\\0') {\n            return NULL;\n        }\n        cVar2 = uVar1 >> 0x18;\n        if (cVar2 == param_2) {\n            return param_1 + 3;\n        }\n        param_1 = puVar5;\n        if (cVar2 == '\\0') {\n            return NULL;\n        }\n    }\n    return NULL;\n}\n",
        "token_count": 592
    },
    "0040839e": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nuint32_t fcn.0040839e(uint32_t *param_1)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    int16_t *piVar3;\n    uint32_t uVar4;\n    \n    uVar4 = *param_1;\n    iVar2 = fcn.00408387();\n    if (iVar2 == 0) {\n        piVar3 = param_1 + 0x12;\n    }\n    else {\n        uVar4 = param_1[3];\n        piVar3 = param_1 + 0x1a;\n    }\n    if (*piVar3 == -1) {\n        piVar3 = piVar3 + 2;\n    }\n    else {\n        do {\n            iVar1 = *piVar3;\n            piVar3 = piVar3 + 1;\n        } while (iVar1 != 0);\n    }\n    if (*piVar3 == -1) {\n        piVar3 = piVar3 + 2;\n    }\n    else {\n        do {\n            iVar1 = *piVar3;\n            piVar3 = piVar3 + 1;\n        } while (iVar1 != 0);\n    }\n    do {\n        iVar1 = *piVar3;\n        piVar3 = piVar3 + 1;\n    } while (iVar1 != 0);\n    if ((uVar4 & 0x40) != 0) {\n        piVar3 = piVar3 + (iVar2 != 0) * 2 + 1;\n        do {\n            iVar1 = *piVar3;\n            piVar3 = piVar3 + 1;\n        } while (iVar1 != 0);\n    }\n    return piVar3 + 3U & 0xfffffffc;\n}\n",
        "token_count": 384
    },
    "00418bc3": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nuint32_t __thiscall fcn.00418bc3(int32_t param_1, uint param_2, uint *param_3)\n\n{\n    uint uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t unaff_ESI;\n    \n    if (param_3 == NULL) {\n        fcn.00401090(0x80004005);\n    }\n    uVar2 = fcn.00415848(*0x10);\n    if (uVar2 == '\\0') {\n        uVar2 = uVar2 & 0xffffff00;\n    }\n    else {\n        iVar3 = unaff_ESI * 0x30 + *(param_1 + 0x14);\n        uVar1 = *((*(iVar3 + 0x10) + 3 + *(iVar3 + 4) & 0xfffffffcU) + 4 + *(param_1 + 8));\n        *param_3 = uVar1;\n        uVar2 = CONCAT31(uVar1 >> 8, 1);\n    }\n    return uVar2;\n}\n",
        "token_count": 241
    },
    "0040e8a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nbool __cdecl\nfcn.0040e8a0(uint arg_8h, uint arg_ch, int32_t arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h, uint arg_28h, uint arg_2ch, uint arg_30h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *in_ECX;\n    bool bVar3;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (arg_10h != 0) {\n        iVar1 = fcn.0041cf24(arg_10h, 0xffffffff);\n        if (iVar1 == 0) {\n            fcn.00405a76();\n        }\n    }\n    var_4h = arg_8h;\n    var_8h = arg_ch;\n    var_10h = arg_14h;\n    var_14h = arg_18h;\n    var_18h = arg_1ch;\n    var_1ch = arg_20h;\n    var_20h = arg_24h;\n    var_24h = arg_28h;\n    var_ch = arg_10h;\n    var_28h = arg_2ch;\n    iVar1 = fcn.00409b0a();\n    var_2ch = *(iVar1 + 8);\n    var_30h = arg_30h;\n    iVar1 = (**(*in_ECX + 100))(&var_30h);\n    if (iVar1 == 0) {\n        (**(*in_ECX + 0x114))();\n        bVar3 = false;\n    }\n    else {\n        fcn.0040e84b();\n        iVar1 = fcn.0040b894(var_4h, var_8h, var_ch, var_10h, var_14h, var_18h, var_1ch, var_20h, var_24h, var_28h, \n                             var_2ch, var_30h);\n        iVar2 = fcn.0040cdcb();\n        if (iVar2 == 0) {\n            (**(*in_ECX + 0x114))();\n        }\n        bVar3 = iVar1 != 0;\n    }\n    return bVar3;\n}\n",
        "token_count": 586
    },
    "00414aba": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.00414aba(uint arg_8h, uint *arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h, uint arg_28h, uint arg_2ch, uint arg_30h)\n\n{\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint uStack20;\n    uint uStack16;\n    uint uStack12;\n    uint32_t var_4h;\n    \n    var_4h = *0x460604 ^ &stack0xfffffffc;\n    var_18h = 0;\n    var_1ch = 2;\n    var_14h = *arg_ch;\n    uStack20 = arg_ch[1];\n    uStack16 = arg_ch[2];\n    uStack12 = arg_ch[3];\n    fcn.0041497d(arg_8h, arg_ch, &var_1ch, arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h, arg_24h, arg_28h, arg_2ch, \n                 arg_30h);\n    fcn.00421e2f(arg_10h);\n    return;\n}\n",
        "token_count": 325
    },
    "00419780": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_30h\n\nvoid __cdecl fcn.00419780(uint *arg_8h, uint arg_ch, uint *arg_10h, uint32_t arg_14h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint var_30h;\n    uint *var_2ch;\n    int32_t *var_28h;\n    int32_t var_24h;\n    int32_t *var_20h;\n    uint var_1ch;\n    uint32_t var_18h;\n    uint var_14h;\n    uint uStack20;\n    uint uStack16;\n    uint uStack12;\n    uint32_t var_4h;\n    \n    var_4h = *0x460604 ^ &stack0xfffffffc;\n    var_2ch = arg_10h;\n    if ((arg_8h != NULL) && (arg_10h != NULL)) {\n        var_28h = NULL;\n        var_24h = (***arg_8h)(arg_8h, 0x45326c, &var_28h);\n        uVar1 = arg_14h;\n        if (arg_14h != 0) {\n            for (; uVar1 != 0; uVar1 = uVar1 - 1) {\n                *arg_10h = 0;\n                arg_10h = arg_10h + 1;\n            }\n        }\n        if (-1 < var_24h) {\n            var_1ch = arg_ch;\n            var_18h = arg_14h;\n            var_14h = *0x4564ac;\n            uStack20 = *0x4564b0;\n            uStack16 = *0x4564b4;\n            var_30h = 0;\n            var_20h = NULL;\n            uStack12 = *0x4564b8;\n            var_24h = (**(*var_28h + 0xc))(var_28h, 1, &var_1ch, &var_30h, &var_20h);\n            if (-1 < var_24h) {\n                uVar1 = 0;\n                iVar3 = 0;\n                while( true ) {\n                    uVar2 = var_20h[1];\n                    if (arg_14h <= var_20h[1]) {\n                        uVar2 = arg_14h;\n                    }\n                    if (uVar2 <= uVar1) break;\n                    var_2ch[uVar1] = *(*var_20h + 0x2c + iVar3);\n                    uVar1 = uVar1 + 1;\n                    iVar3 = iVar3 + 0x34;\n                }\n                if (*var_20h != 0) {\n                    (*_sym.imp.ole32.dll_CoTaskMemFree)(*var_20h);\n                }\n            }\n            (*_sym.imp.ole32.dll_CoTaskMemFree)(var_20h);\n        }\n        if (var_28h != NULL) {\n            (**(*var_28h + 8))(var_28h);\n        }\n    }\n    fcn.00421e2f(var_30h);\n    return;\n}\n",
        "token_count": 717
    },
    "004102b2": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n\nint32_t __cdecl fcn.004102b2(int32_t arg_8h)\n\n{\n    uint *puVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    int32_t in_ECX;\n    uint var_8h;\n    int32_t var_4h;\n    \n    iVar3 = *(in_ECX + 0x4c);\n    if (iVar3 != 0) {\n        puVar1 = iVar3 + 0x40;\n        var_4h = *(iVar3 + 0x44);\n        while (var_4h != 0) {\n            if (var_4h == 0) {\n                fcn.00405a76(puVar1);\n                pcVar2 = swi(3);\n                iVar3 = (*pcVar2)();\n                return iVar3;\n            }\n            if (*(var_4h + 8) == arg_8h) {\n                return var_4h;\n            }\n            puVar1 = &var_4h;\n            fcn.0040fdfb();\n        }\n    }\n    return 0;\n}\n",
        "token_count": 257
    },
    "0041b731": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_14h\n\nvoid fcn.0041b731(void)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    int32_t **ppiVar4;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    code *pcVar5;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.00423bfe(0xc);\n    *(unaff_EBP + -0x18) = extraout_ECX;\n    *extraout_ECX = vtable.COleControlSite.0;\n    pcVar5 = extraout_ECX[8];\n    *(unaff_EBP + -4) = 2;\n    if ((pcVar5 != NULL) && (*(pcVar5 + 0x6c) == extraout_ECX)) {\n        *(pcVar5 + 0x6c) = 0;\n    }\n    pcVar5 = extraout_ECX[0x24];\n    if (pcVar5 != NULL) {\n        fcn.0041ad51();\n        fcn.0040597d(pcVar5);\n    }\n    fcn.00416027();\n    fcn.00415c65(extraout_ECX + 0x10, extraout_ECX[0x18]);\n    fcn.00415c65(0x455e68, extraout_ECX[0x19]);\n    fcn.00415c65(0x455ca8, extraout_ECX[0x23]);\n    piVar1 = extraout_ECX[0x17];\n    if (piVar1 != NULL) {\n        (**(*piVar1 + 8))(piVar1);\n        extraout_ECX[0x17] = NULL;\n    }\n    piVar1 = extraout_ECX[0x15];\n    if (piVar1 != NULL) {\n        (**(*piVar1 + 0x14))(piVar1);\n        (**(*extraout_ECX[0x15] + 8))(extraout_ECX[0x15]);\n        extraout_ECX[0x15] = NULL;\n    }\n    piVar1 = extraout_ECX[0x16];\n    if (piVar1 != NULL) {\n        (**(*piVar1 + 8))(piVar1);\n        extraout_ECX[0x16] = NULL;\n    }\n    piVar1 = extraout_ECX[0x14];\n    if (piVar1 != NULL) {\n        (**(*piVar1 + 0xc))(piVar1, 0);\n        (**(*extraout_ECX[0x14] + 0x18))(extraout_ECX[0x14], 1);\n        (**(*extraout_ECX[0x14] + 8))(extraout_ECX[0x14]);\n        extraout_ECX[0x14] = NULL;\n    }\n    (*_sym.imp.OLEAUT32.dll_VariantCopy)(extraout_ECX + 0x2b);\n    pcVar5 = extraout_ECX[0x25];\n    *(unaff_EBP + -0x10) = 0;\n    while (pcVar5 != NULL) {\n        pcVar2 = *(pcVar5 + 0x18);\n        *(unaff_EBP + -0x14) = pcVar2;\n        if (*(unaff_EBP + -0x10) == 0) {\n            extraout_ECX[0x25] = pcVar2;\n        }\n        else {\n            *(*(unaff_EBP + -0x10) + 0x18) = pcVar2;\n        }\n        iVar3 = *(pcVar5 + 0xc);\n        if ((iVar3 != 0) && (*(iVar3 + 0x90) != 0)) {\n            (**(**(iVar3 + 0x90) + 4))(pcVar5, 0);\n        }\n        fcn.0040597d(pcVar5);\n        if (*(unaff_EBP + -0x10) != 0) {\n            *(unaff_EBP + -0x10) = *(*(unaff_EBP + -0x10) + 0x18);\n        }\n        pcVar5 = *(unaff_EBP + -0x14);\n    }\n    if (((extraout_ECX[0x27] != NULL) && (extraout_ECX[0x26] != NULL)) &&\n       (ppiVar4 = extraout_ECX[0x26] + 0x90,  *ppiVar4 != NULL)) {\n        (**(**ppiVar4 + 8))(extraout_ECX, 0);\n    }\n    if ((extraout_ECX[8] != NULL) && (extraout_ECX[0x1d] != NULL)) {\n        piVar1 = extraout_ECX[8] + 0x74;\n        *piVar1 = *piVar1 + -1;\n    }\n    *(unaff_EBP + -4) = 1;\n    fcn.0041f69d();\n    fcn.004028b0();\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.004071dc();\n    fcn.00423cd6();\n    return;\n}\n",
        "token_count": 1223
    },
    "0041d722": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nuint __thiscall fcn.0041d722(int32_t *param_1, uint param_2, uint32_t param_3)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint32_t uVar3;\n    \n    uVar3 = param_3 + 0x40;\n    param_1[1] = param_3;\n    if (param_3 <= uVar3) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(0x40, uVar3);\n        *param_1 = iVar1;\n        if (iVar1 != 0) {\n            uVar2 = (*_sym.imp.KERNEL32.dll_GlobalLock)(iVar1);\n            fcn.00405c0f(uVar2, param_1[1], uVar3, param_1[1]);\n            iVar1 = fcn.0041d5e2(uVar2);\n            param_1[2] = iVar1 == 0;\n            (*_sym.imp.KERNEL32.dll_GlobalUnlock)(*param_1);\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 245
    },
    "0042048a": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.0042048a(void)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    \n    iVar2 = fcn.00409b0a();\n    puVar3 = 0xb;\n    fcn.00412ac4(0xb);\n    while (puVar1 = *(iVar2 + 0x40),  puVar1 != NULL) {\n        puVar3 = puVar1;\n        fcn.00411c07();\n        if (puVar1 != NULL) {\n            (***puVar1)(1);\n        }\n    }\n    fcn.00412b31(0xb, puVar3);\n    return;\n}\n",
        "token_count": 153
    },
    "004205a0": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004205a0(int32_t param_1)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.ole32.dll_CoRegisterMessageFilter)(param_1 + 0x40, 0);\n    if (iVar1 == 0) {\n        *(param_1 + 0x20) = 1;\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 95
    },
    "0041275c": {
        "rules": [
            "calculate modulo 256 via x86 assembly"
        ],
        "decompiled_code": "\nvoid fcn.0041275c(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    \n    if (param_1 != 0) {\n        uVar1 = (*_sym.imp.KERNEL32.dll_GlobalFlags)(param_1);\n        for (uVar1 = uVar1 & 0xff; uVar1 != 0; uVar1 = uVar1 - 1) {\n            (*_sym.imp.KERNEL32.dll_GlobalUnlock)(param_1);\n        }\n        (*_sym.imp.KERNEL32.dll_GlobalFree)(param_1);\n    }\n    return;\n}\n",
        "token_count": 131
    },
    "0041cf30": {
        "rules": [
            "hash data using djb2/6ad21e310d674441ba35d7276afbe57d",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.0041cf30(uint8_t *param_1)\n\n{\n    int32_t iVar1;\n    uint32_t extraout_ECX;\n    uint32_t uVar2;\n    ulong uVar3;\n    \n    iVar1 = 0;\n    if (param_1 != NULL) goto code_r0x0041cf48;\n    uVar3 = fcn.00405a76();\n    uVar2 = extraout_ECX;\n    do {\n        iVar1 = uVar3 * 0x21 + uVar2;\n        param_1 = (uVar3 >> 0x20) + 1;\ncode_r0x0041cf48:\n        uVar3 = CONCAT44(param_1, iVar1);\n        uVar2 = *param_1;\n    } while (*param_1 != 0);\n    return iVar1;\n}\n",
        "token_count": 189
    },
    "0041d22e": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041d22e(int32_t arg_8h, uint arg_ch)\n\n{\n    ushort *in_ECX;\n    \n    if (arg_ch == 10) {\n        *in_ECX = 10;\n    }\n    else {\n        if (arg_ch == 0xb) {\n            *in_ECX = 0xb;\n            in_ECX[4] = -(arg_8h != 0);\n            return;\n        }\n        if (arg_ch == 0x16) {\n            *in_ECX = 0x16;\n        }\n        else if (arg_ch == 0x17) {\n            *in_ECX = 0x17;\n        }\n        else if (arg_ch == 0x19) {\n            *in_ECX = 0x19;\n        }\n        else if (arg_ch == 0x13) {\n            *in_ECX = 0x13;\n        }\n        else {\n            *in_ECX = 3;\n        }\n    }\n    *(in_ECX + 4) = arg_8h;\n    return;\n}\n",
        "token_count": 238
    },
    "00436766": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/77a25ea9f6f245cfb8807f7953974472",
            "validate payment card number using luhn algorithm with no lookup table/101d11b5106849ad963488c88a9294b9"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00436766(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    int32_t iVar4;\n    uint arg_8h;\n    uint var_ch;\n    uint32_t var_4h;\n    \n    var_4h = *0x460604 ^ &stack0xfffffffc;\n    iVar4 = 0;\n    uVar1 = (*_sym.imp.KERNEL32.dll_GetThreadLocale)();\n    arg_8h = 0x1004;\n    iVar2 = (*_sym.imp.KERNEL32.dll_GetLocaleInfoA)(uVar1, 0x1004, &var_ch, 7);\n    if (iVar2 != 0) {\n        puVar3 = &var_ch;\n        if (var_ch != '\\0') {\n            do {\n                puVar3 = puVar3 + 1;\n                iVar4 = iVar4 * 10 + -0x30 + var_ch;\n                var_ch._0_1_ = *puVar3;\n            } while (var_ch != '\\0');\n            if (iVar4 != 0) goto code_r0x004367bc;\n        }\n    }\n    (*_sym.imp.KERNEL32.dll_GetACP)();\ncode_r0x004367bc:\n    fcn.00421e2f(arg_8h);\n    return;\n}\n",
        "token_count": 304
    },
    "00401a60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00401a60(int32_t *param_1, int32_t param_2, uint32_t param_3)\n\n{\n    if (-param_2 - 1U < param_3) {\n        return 0x80070057;\n    }\n    *param_1 = param_2 + param_3;\n    return 0;\n}\n",
        "token_count": 79
    },
    "00401b30": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_24h\n\nvoid fcn.00401b30(uint param_1)\n\n{\n    int32_t iVar1;\n    int32_t *in_FS_OFFSET;\n    uint var_8h_2;\n    uint var_1ch;\n    uint var_18h;\n    uint var_10h;\n    uint var_8h;\n    uint32_t var_34h;\n    uint var_24h;\n    uchar var_1dh;\n    uint32_t var_1ch_2;\n    uint *var_18h_2;\n    int32_t var_10h_2;\n    uint uStack16;\n    uint32_t uStack12;\n    uint var_4h;\n    \n    uStack16 = 0x421e40;\n    var_10h_2 = *in_FS_OFFSET;\n    uStack12 = *0x460604 ^ 0x459048;\n    var_34h = *0x460604 ^ &stack0xfffffffc;\n    var_18h_2 = &var_34h;\n    *in_FS_OFFSET = &var_10h_2;\n    var_4h = 0;\n    var_24h = 0;\n    var_1ch_2 = var_34h;\n    iVar1 = fcn.00401a60(&var_24h, var_8h_2, 0x2000);\n    if (iVar1 < 0) {\n        var_1dh = 0;\n    }\n    else {\n        fcn.00421fe0();\n        var_18h_2 = &var_34h;\n    }\n    var_4h = 0xfffffffe;\n    *in_FS_OFFSET = var_10h_2;\n    fcn.00421e2f(var_24h);\n    return;\n}\n",
        "token_count": 401
    },
    "00401c90": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.00401c90(int32_t param_1, uint *param_2, uint32_t param_3)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    uint *puVar5;\n    \n    uVar1 = param_2;\n    if (*(param_1 + 0x14) < param_2) {\n        fcn.004366ed();\n    }\n    uVar2 = *(param_1 + 0x14) - param_2;\n    if (uVar2 < param_3) {\n        param_3 = uVar2;\n    }\n    if (param_3 != 0) {\n        puVar5 = param_1 + 4;\n        puVar4 = puVar5;\n        param_2 = puVar5;\n        if (0xf < *(param_1 + 0x18)) {\n            puVar4 = *puVar5;\n            param_2 = *puVar5;\n        }\n        fcn.00421529(puVar4 + uVar1, *(param_1 + 0x18) - uVar1, param_2 + param_3 + uVar1, uVar2 - param_3);\n        iVar3 = *(param_1 + 0x14) - param_3;\n        *(param_1 + 0x14) = iVar3;\n        if (0xf < *(param_1 + 0x18)) {\n            puVar5 = *puVar5;\n        }\n        *(iVar3 + puVar5) = 0;\n    }\n    return param_1;\n}\n",
        "token_count": 369
    },
    "00401ea0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.00401ea0(int32_t param_1, int32_t param_2, uint32_t param_3, uint32_t param_4)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t unaff_retaddr;\n    \n    if (*(param_2 + 0x14) < param_3) {\n        fcn.004366ed();\n    }\n    param_3 = *(param_2 + 0x14) - param_3;\n    if (param_3 < param_4) {\n        param_4 = param_3;\n    }\n    uVar2 = *(param_1 + 0x14);\n    if ((-uVar2 - 1 <= param_4) || (uVar2 + param_4 < uVar2)) {\n        fcn.0043665c();\n    }\n    if (param_4 != 0) {\n        uVar2 = *(param_1 + 0x14) + param_4;\n        if (uVar2 == 0xffffffff) {\n            fcn.0043665c();\n        }\n        if (*(param_1 + 0x18) < uVar2) {\n            fcn.00401d20(uVar2, *(param_1 + 0x14));\n        }\n        else if (uVar2 == 0) {\n            *(param_1 + 0x14) = 0;\n            if (0xf < *(param_1 + 0x18)) {\n                **(param_1 + 4) = 0;\n                return param_1;\n            }\n            *(param_1 + 4) = 0;\n            return param_1;\n        }\n        if (uVar2 != 0) {\n            if (*(param_2 + 0x18) < 0x10) {\n                param_2 = param_2 + 4;\n            }\n            else {\n                param_2 = *(param_2 + 4);\n            }\n            if (*(param_1 + 0x18) < 0x10) {\n                iVar1 = param_1 + 4;\n            }\n            else {\n                iVar1 = *(param_1 + 4);\n            }\n            fcn.004214ae(*(param_1 + 0x14) + iVar1, *(param_1 + 0x18) - *(param_1 + 0x14), param_2 + unaff_retaddr, \n                         param_4);\n            *(param_1 + 0x14) = uVar2;\n            if (0xf < *(param_1 + 0x18)) {\n                *(*(param_1 + 4) + uVar2) = 0;\n                return param_1;\n            }\n            *(param_1 + 4 + uVar2) = 0;\n        }\n    }\n    return param_1;\n}\n",
        "token_count": 634
    },
    "00401fa0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.00401fa0(int32_t param_1, int32_t param_2, uint32_t param_3, uint32_t param_4)\n\n{\n    int32_t *arg_8h;\n    int32_t *piVar1;\n    uint32_t arg_14h;\n    \n    if (*(param_2 + 0x14) < param_3) {\n        fcn.004366ed();\n    }\n    arg_14h = *(param_2 + 0x14) - param_3;\n    if (param_4 < arg_14h) {\n        arg_14h = param_4;\n    }\n    if (param_1 != param_2) {\n        if (arg_14h == 0xffffffff) {\n            fcn.0043665c();\n        }\n        if (*(param_1 + 0x18) < arg_14h) {\n            fcn.00401d20(arg_14h, *(param_1 + 0x14));\n        }\n        else if (arg_14h == 0) {\n            *(param_1 + 0x14) = 0;\n            if (*(param_1 + 0x18) < 0x10) {\n                *(param_1 + 4) = 0;\n                return param_1;\n            }\n            **(param_1 + 4) = 0;\n            return param_1;\n        }\n        if (arg_14h != 0) {\n            if (*(param_2 + 0x18) < 0x10) {\n                param_2 = param_2 + 4;\n            }\n            else {\n                param_2 = *(param_2 + 4);\n            }\n            piVar1 = param_1 + 4;\n            arg_8h = piVar1;\n            if (0xf < *(param_1 + 0x18)) {\n                arg_8h = *piVar1;\n            }\n            fcn.004214ae(arg_8h, *(param_1 + 0x18), param_2 + param_3, arg_14h);\n            *(param_1 + 0x14) = arg_14h;\n            if (0xf < *(param_1 + 0x18)) {\n                piVar1 = *piVar1;\n            }\n            *(piVar1 + arg_14h) = 0;\n        }\n        return param_1;\n    }\n    fcn.00401c90(arg_14h + param_3, 0xffffffff);\n    fcn.00401c90(0, param_3);\n    return param_1;\n}\n",
        "token_count": 580
    },
    "00402080": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.00402080(int32_t param_1, uint *param_2, uint32_t param_3)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint *puVar4;\n    \n    uVar1 = *(param_1 + 0x18);\n    puVar4 = param_1 + 4;\n    puVar3 = puVar4;\n    if (0xf < uVar1) {\n        puVar3 = *puVar4;\n    }\n    if (puVar3 <= param_2) {\n        puVar3 = puVar4;\n        if (0xf < uVar1) {\n            puVar3 = *puVar4;\n        }\n        if (param_2 < *(param_1 + 0x14) + puVar3) {\n            if (0xf < uVar1) {\n                puVar4 = *puVar4;\n            }\n            iVar2 = fcn.00401fa0(param_1, param_2 - puVar4, param_3);\n            return iVar2;\n        }\n    }\n    if (param_3 == 0xffffffff) {\n        fcn.0043665c();\n    }\n    if (*(param_1 + 0x18) < param_3) {\n        fcn.00401d20(param_3, *(param_1 + 0x14));\n    }\n    else if (param_3 == 0) {\n        *(param_1 + 0x14) = 0;\n        if (0xf < *(param_1 + 0x18)) {\n            puVar4 = *puVar4;\n        }\n        *puVar4 = 0;\n        return param_1;\n    }\n    if (param_3 != 0) {\n        puVar3 = puVar4;\n        if (0xf < *(param_1 + 0x18)) {\n            puVar3 = *puVar4;\n        }\n        fcn.004214ae(puVar3, *(param_1 + 0x18), param_2, param_3);\n        *(param_1 + 0x14) = param_3;\n        if (0xf < *(param_1 + 0x18)) {\n            puVar4 = *puVar4;\n        }\n        *(puVar4 + param_3) = 0;\n    }\n    return param_1;\n}\n",
        "token_count": 534
    },
    "00402150": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.00402150(int32_t param_1, uint *param_2, uint32_t param_3)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint unaff_EBX;\n    uint *puVar3;\n    uint32_t uVar4;\n    \n    uVar4 = *(param_1 + 0x18);\n    puVar3 = param_1 + 4;\n    puVar2 = puVar3;\n    if (0xf < uVar4) {\n        puVar2 = *puVar3;\n    }\n    if (puVar2 <= param_2) {\n        puVar2 = puVar3;\n        if (0xf < uVar4) {\n            puVar2 = *puVar3;\n        }\n        if (param_2 < *(param_1 + 0x14) + puVar2) {\n            if (0xf < uVar4) {\n                puVar3 = *puVar3;\n            }\n            iVar1 = fcn.00401ea0(param_1, param_2 - puVar3, param_3);\n            return iVar1;\n        }\n    }\n    uVar4 = *(param_1 + 0x14);\n    if ((-uVar4 - 1 <= param_3) || (uVar4 + param_3 < uVar4)) {\n        fcn.0043665c();\n    }\n    if (param_3 != 0) {\n        uVar4 = *(param_1 + 0x14) + param_3;\n        if (uVar4 == 0xffffffff) {\n            fcn.0043665c();\n        }\n        if (*(param_1 + 0x18) < uVar4) {\n            fcn.00401d20(uVar4, *(param_1 + 0x14));\n        }\n        else if (uVar4 == 0) {\n            *(param_1 + 0x14) = 0;\n            if (0xf < *(param_1 + 0x18)) {\n                puVar3 = *puVar3;\n            }\n            *puVar3 = 0;\n            return param_1;\n        }\n        if (uVar4 != 0) {\n            puVar2 = puVar3;\n            if (0xf < *(param_1 + 0x18)) {\n                puVar2 = *puVar3;\n            }\n            fcn.004214ae(*(param_1 + 0x14) + puVar2, *(param_1 + 0x18) - *(param_1 + 0x14), unaff_EBX, param_3);\n            *(param_1 + 0x14) = uVar4;\n            if (0xf < *(param_1 + 0x18)) {\n                puVar3 = *puVar3;\n            }\n            *(puVar3 + uVar4) = 0;\n        }\n    }\n    return param_1;\n}\n",
        "token_count": 652
    },
    "00402270": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00402270(char *param_1)\n\n{\n    char cVar1;\n    char *pcVar2;\n    \n    pcVar2 = param_1;\n    do {\n        cVar1 = *pcVar2;\n        pcVar2 = pcVar2 + 1;\n    } while (cVar1 != '\\0');\n    fcn.00402080(param_1, pcVar2 - (param_1 + 1));\n    return;\n}\n",
        "token_count": 101
    },
    "00402d50": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00402d50(int32_t param_1, int32_t param_2)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint unaff_ESI;\n    uchar auStack16 [16];\n    \n    if (param_2 != 0) {\n        fcn.00402d00();\n        pcVar1 = _sym.imp.USER32.dll_SendMessageA;\n        iVar2 = (*_sym.imp.USER32.dll_SendMessageA)(*(param_1 + 0x98), 0x40d, 0);\n        if (iVar2 == 0) {\n            (*_sym.imp.USER32.dll_GetClientRect)(*(param_1 + 0x20), &stack0xffffffe0);\n            fcn.004107ba(param_1, param_2, auStack16, 1);\n        }\n        fcn.00410810(param_2, param_1, 1);\n        (*pcVar1)(*(param_1 + 0x98), 0x401, unaff_ESI, 0);\n    }\n    return;\n}\n",
        "token_count": 241
    },
    "00402e50": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00402e50(code **param_1)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    int32_t **in_FS_OFFSET;\n    int32_t *piStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack8 = 0x436ef8;\n    piStack12 = *in_FS_OFFSET;\n    uVar2 = *0x460604 ^ &stack0xffffffe8;\n    *in_FS_OFFSET = &piStack12;\n    *param_1 = vtable.CButtonST.0;\n    pcVar1 = _sym.imp.USER32.dll_DestroyIcon;\n    uStack4 = 0;\n    if (param_1[0x3a] != NULL) {\n        (*_sym.imp.USER32.dll_DestroyIcon)(param_1[0x3a], uVar2);\n    }\n    if (param_1[0x3d] != NULL) {\n        (*pcVar1)(param_1[0x3d], uVar2);\n    }\n    param_1[0x3a] = NULL;\n    param_1[0x3b] = NULL;\n    param_1[0x3c] = NULL;\n    param_1[0x3d] = NULL;\n    param_1[0x3e] = NULL;\n    param_1[0x3f] = NULL;\n    fcn.00410566();\n    uStack4 = 0xffffffff;\n    fcn.0040fa42();\n    *in_FS_OFFSET = piStack12;\n    return;\n}\n",
        "token_count": 348
    },
    "00402f00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "parse PE header/27dc37a2d08e4034aa7bcaa8b888b251"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00402f00(int32_t param_1, uint param_2, uint param_3, uint param_4, uint param_5, int32_t param_6)\n\n{\n    uint32_t uVar1;\n    int32_t unaff_ESI;\n    bool bVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uchar *puVar5;\n    uchar auStack16 [12];\n    int32_t iStack4;\n    \n    if ((param_6 == 0) && (*(param_1 + 0x5c) == 0)) {\n        bVar2 = *(param_1 + 0xf4) != 0;\n    }\n    else {\n        bVar2 = false;\n    }\n    uVar1 = bVar2;\n    iVar4 = *(param_1 + (uVar1 * 3 + 0x3c) * 4);\n    puVar5 = auStack16;\n    iVar3 = *(param_1 + 0xec + uVar1 * 0xc);\n    fcn.00402b50(param_3, param_4, param_5, param_6, iVar3, iVar4, puVar5);\n    (*_sym.imp.USER32.dll_DrawStateA)\n              (*(unaff_ESI + 4), 0, 0, *(param_1 + uVar1 * 0xc + 0xe8), 0, param_6, iVar3, iVar4 - param_6, \n               puVar5 - iVar3, -(iStack4 != 0) & 0x20U | 3);\n    return;\n}\n",
        "token_count": 362
    },
    "00402fa0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __thiscall fcn.00402fa0(int32_t param_1, int32_t param_2, int32_t param_3)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    code *pcVar3;\n    int32_t iVar4;\n    int32_t unaff_EBX;\n    int32_t iStack20;\n    uint uStack16;\n    uint uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    pcVar2 = _sym.imp.USER32.dll_DestroyIcon;\n    if (*(param_1 + 0xe8) != 0) {\n        (*_sym.imp.USER32.dll_DestroyIcon)(*(param_1 + 0xe8));\n    }\n    if (*(param_1 + 0xf4) != 0) {\n        (*pcVar2)(*(param_1 + 0xf4));\n    }\n    *(param_1 + 0xe8) = 0;\n    *(param_1 + 0xec) = 0;\n    *(param_1 + 0xf0) = 0;\n    *(param_1 + 0xf4) = 0;\n    *(param_1 + 0xf8) = 0;\n    *(param_1 + 0xfc) = 0;\n    pcVar3 = _sym.imp.USER32.dll_GetIconInfo;\n    if (param_2 != 0) {\n        iStack20 = 0;\n        uStack16 = 0;\n        uStack12 = 0;\n        uStack8 = 0;\n        uStack4 = 0;\n        *(param_1 + 0xe8) = param_2;\n        iVar4 = (*pcVar3)(param_2, &iStack20);\n        pcVar1 = _sym.imp.GDI32.dll_DeleteObject;\n        if (iVar4 == 0) {\n            if (*(param_1 + 0xe8) != 0) {\n                (*pcVar2)(*(param_1 + 0xe8));\n            }\n            if (*(param_1 + 0xf4) != 0) {\n                (*pcVar2)(*(param_1 + 0xf4));\n            }\n            *(param_1 + 0xe8) = 0;\n            *(param_1 + 0xec) = 0;\n            *(param_1 + 0xf0) = 0;\n            *(param_1 + 0xf4) = 0;\n            *(param_1 + 0xf8) = 0;\n            *(param_1 + 0xfc) = 0;\n            return 0;\n        }\n        *(param_1 + 0xec) = unaff_EBX * 2;\n        *(param_1 + 0xf0) = iStack20 * 2;\n        (*pcVar1)(uStack16);\n        (*pcVar1)(uStack16);\n        if (param_3 != 0) {\n            *(param_1 + 0xf4) = param_3;\n            iStack20 = 0;\n            uStack16 = 0;\n            uStack12 = 0;\n            uStack8 = 0;\n            uStack4 = 0;\n            iVar4 = (*pcVar3)(param_3, &iStack20);\n            if (iVar4 == 0) {\n                fcn.00402ca0(1);\n                return 0;\n            }\n            *(param_1 + 0xf8) = unaff_EBX * 2;\n            *(param_1 + 0xfc) = iStack20 * 2;\n            (*pcVar1)(uStack16);\n            (*pcVar1)(uStack16);\n        }\n    }\n    (*_sym.imp.USER32.dll_InvalidateRect)(*(param_1 + 0x20), 0, 1);\n    return 1;\n}\n",
        "token_count": 838
    },
    "00403130": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * __thiscall fcn.00403130(int32_t *param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    int32_t *extraout_ECX;\n    \n    if (param_2 == NULL) {\n        fcn.00401090(0x80004005);\n        param_2 = extraout_ECX;\n    }\n    iVar1 = (**(*param_2 + 0xc))();\n    *param_1 = iVar1 + 0x10;\n    return param_1;\n}\n",
        "token_count": 121
    },
    "00403250": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.00403250(int32_t *param_1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    \n    piVar1 = fcn.00410877();\n    if (piVar1 == NULL) {\n        piVar1 = fcn.00401090(0x80004005);\n    }\n    iVar2 = (**(*piVar1 + 0xc))();\n    *param_1 = iVar2 + 0x10;\n    return param_1;\n}\n",
        "token_count": 117
    },
    "00403a90": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t fcn.00403a90(uint param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    uint16_t *puVar2;\n    uint16_t *puVar3;\n    uint32_t unaff_EDI;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_LoadResource)(param_1, param_2);\n    if (iVar1 == 0) {\n        return 0;\n    }\n    puVar2 = (*_sym.imp.KERNEL32.dll_LockResource)(iVar1);\n    if (puVar2 != NULL) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_SizeofResource)(param_1, param_2);\n        puVar3 = iVar1 + puVar2;\n        for (unaff_EDI = unaff_EDI & 0xf; unaff_EDI != 0; unaff_EDI = unaff_EDI - 1) {\n            if (puVar3 <= puVar2) {\n                return 0;\n            }\n            puVar2 = puVar2 + *puVar2 + 1;\n        }\n        if (puVar2 < puVar3) {\n            return -(*puVar2 != 0) & puVar2;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 278
    },
    "00403b00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00403b00(uint param_1, uint32_t param_2)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_FindResourceA)(param_1, (param_2 >> 4) + 1 & 0xffff, 6);\n    if (iVar1 == 0) {\n        return;\n    }\n    fcn.00403a90(param_1, iVar1, param_2);\n    return;\n}\n",
        "token_count": 107
    },
    "00404160": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * __thiscall fcn.00404160(int32_t *param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.004040f0(*param_2 + -0x10);\n    *param_1 = iVar1 + 0x10;\n    return param_1;\n}\n",
        "token_count": 81
    },
    "004041b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004041b0(int32_t param_1, uint param_2, uint32_t param_3)\n\n{\n    int32_t **ppiVar1;\n    int32_t *piVar2;\n    char cVar3;\n    char *pcVar4;\n    int32_t iVar5;\n    char *pcVar6;\n    char **in_FS_OFFSET;\n    uint arg_8h;\n    uint uStack528;\n    uint uStack524;\n    uint32_t uStack520;\n    uint32_t uStack504;\n    char *pcStack44;\n    uint uStack36;\n    int32_t iStack20;\n    uint32_t uStack16;\n    char *pcStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack8 = 0x436fb8;\n    pcStack12 = *in_FS_OFFSET;\n    uStack16 = *0x460604 ^ &stack0xfffffe08;\n    uStack520 = *0x460604 ^ &stack0xfffffdfc;\n    *in_FS_OFFSET = &stack0xfffffff4;\n    uStack4 = 0;\n    if (param_3 == 0) {\n        param_3 = 0x81;\n    }\n    uStack504 = 0x1e8;\n    uStack524 = 0x404212;\n    iVar5 = fcn.00409b0a();\n    uStack524 = 0;\n    uStack528 = 0x20;\n    arg_8h = 1;\n    (*_sym.imp.USER32.dll_LoadImageA)(*(*(iVar5 + 4) + 0x44), param_3 & 0xffff, 1, 0x20);\n    pcVar4 = pcStack12;\n    if (param_1 == 0) {\n        uStack524 = 0;\n    }\n    else {\n        uStack524 = *(param_1 + 0x20);\n    }\n    uStack520 = 0x80;\n    if (iStack20 == 0) {\n        iVar5 = -pcStack12;\n        pcVar6 = pcStack12;\n        do {\n            cVar3 = *pcVar6;\n            pcVar6[&stack0xfffffe08 + iVar5] = cVar3;\n            pcVar6 = pcVar6 + 1;\n        } while (cVar3 != '\\0');\n    }\n    else if (iStack20 == 1) {\n        iVar5 = -pcStack12;\n        pcVar6 = pcStack12;\n        do {\n            cVar3 = *pcVar6;\n            pcVar6[&stack0xfffffe08 + iVar5] = cVar3;\n            pcVar6 = pcVar6 + 1;\n        } while (cVar3 != '\\0');\n    }\n    else if (iStack20 == 2) {\n        uStack504 = uStack504 & 0xffffff00;\n    }\n    (*_sym.imp.SHELL32.dll_Shell_NotifyIconA)(iStack20, &stack0xfffffdf0);\n    ppiVar1 = pcVar4 + -0x10;\n    uStack36 = 0xffffffff;\n    piVar2 = pcVar4 + -4;\n    LOCK();\n    iVar5 = *piVar2;\n    *piVar2 = *piVar2 + -1;\n    if (iVar5 == 1 || iVar5 + -1 < 0) {\n        (**(**ppiVar1 + 4))(ppiVar1);\n    }\n    *in_FS_OFFSET = pcStack44;\n    fcn.00421e2f(arg_8h);\n    return;\n}\n",
        "token_count": 789
    },
    "00404310": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __thiscall fcn.00404310(int32_t *param_1, uint param_2, uint32_t param_3)\n\n{\n    ushort uVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    ushort *puVar4;\n    uint uVar5;\n    \n    iVar3 = (*_sym.imp.KERNEL32.dll_FindResourceA)(param_2, (param_3 >> 4) + 1 & 0xffff, 6);\n    if (iVar3 != 0) {\n        puVar4 = fcn.00403a90(param_2, iVar3, param_3);\n        if (puVar4 != NULL) {\n            uVar1 = *puVar4;\n            uVar5 = (**0x461b28)();\n            iVar3 = (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)(uVar5, 0, puVar4 + 1, uVar1, 0, 0, 0, 0);\n            if ((1U - *(*param_1 + -4) | *(*param_1 + -8) - iVar3) < 0) {\n                fcn.004040a0(iVar3);\n            }\n            uVar5 = (**0x461b28)(0, puVar4 + 1, *puVar4, *param_1, iVar3, 0, 0);\n            (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)(uVar5);\n            if ((-1 < iVar3) && (iVar3 <= *(*param_1 + -8))) {\n                *(*param_1 + -0xc) = iVar3;\n                *(iVar3 + *param_1) = 0;\n                return 1;\n            }\n            fcn.00401090(0x80070057);\n            pcVar2 = swi(3);\n            uVar5 = (*pcVar2)();\n            return uVar5;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 433
    },
    "004043e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004043e0(int32_t *param_1, uint param_2, int32_t param_3, uint param_4, int32_t param_5)\n\n{\n    int32_t arg_8h;\n    code *pcVar1;\n    \n    param_5 = param_3 + param_5;\n    if ((1U - *(*param_1 + -4) | *(*param_1 + -8) - param_5) < 0) {\n        fcn.004040a0(param_5);\n    }\n    arg_8h = *param_1;\n    fcn.004214ae(arg_8h, param_3, param_1, param_3);\n    fcn.004214ae(arg_8h + param_3, param_4, param_3, param_4);\n    if ((-1 < param_5) && (param_5 <= *(*param_1 + -8))) {\n        *(*param_1 + -0xc) = param_5;\n        *(param_5 + *param_1) = 0;\n        return;\n    }\n    fcn.00401090(0x80070057);\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 276
    },
    "00404460": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00404460(int32_t *param_1, int32_t param_2, int32_t param_3)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t extraout_ECX;\n    int32_t unaff_EBP;\n    int32_t unaff_EDI;\n    uint32_t uVar3;\n    int32_t unaff_retaddr;\n    int32_t in_stack_ffffffec;\n    \n    if (param_3 == 0) {\n        fcn.00404040();\n        return;\n    }\n    if (param_2 != 0) goto code_r0x00404488;\n    do {\n        fcn.00401090();\n        param_2 = extraout_ECX;\ncode_r0x00404488:\n        iVar1 = *param_1;\n        uVar2 = *(iVar1 + -0xc);\n        uVar3 = param_2 - iVar1;\n        if ((1U - *(iVar1 + -4) | *(iVar1 + -8) - param_3) < 0) {\n            param_2 = unaff_retaddr;\n            in_stack_ffffffec = param_3;\n            fcn.004040a0(param_3, unaff_EDI, unaff_EBP);\n            unaff_retaddr = param_2;\n        }\n        unaff_EBP = unaff_EDI;\n        unaff_EDI = in_stack_ffffffec;\n        iVar1 = *param_1;\n        if (uVar2 < uVar3) {\n            fcn.004214ae(iVar1, param_3, param_2, param_3);\n        }\n        else {\n            fcn.00421529(iVar1, param_3, iVar1 + uVar3, param_3);\n        }\n        in_stack_ffffffec = unaff_EDI;\n    } while ((param_3 < 0) || (*(*param_1 + -8) < param_3));\n    *(*param_1 + -0xc) = param_3;\n    *(param_3 + *param_1) = 0;\n    return;\n}\n",
        "token_count": 468
    },
    "004044f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004044f0(int32_t *param_1, int32_t param_2)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    \n    if (param_2 == 0) {\n        fcn.00401090(0x80070057);\n    }\n    iVar2 = fcn.00422b29(param_2, param_2);\n    if ((1U - *(*param_1 + -4) | *(*param_1 + -8) - iVar2) < 0) {\n        fcn.004040a0(iVar2);\n    }\n    fcn.00422c91(*param_1, iVar2 + 1, param_2, param_2);\n    if ((-1 < iVar2) && (iVar2 <= *(*param_1 + -8))) {\n        *(*param_1 + -0xc) = iVar2;\n        *(iVar2 + *param_1) = 0;\n        return;\n    }\n    fcn.00401090(0x80070057);\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 252
    },
    "004045a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "inject DLL reflectively/5c249d14806d4a4ea88afb4f94553771"
        ],
        "decompiled_code": "\nint32_t * fcn.004045a0(int32_t *param_1, int32_t *param_2, int32_t *param_3)\n\n{\n    uint32_t uVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t **in_FS_OFFSET;\n    int32_t *piStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack8 = 0x437009;\n    piStack12 = *in_FS_OFFSET;\n    uVar1 = *0x460604 ^ &stack0xffffffe8;\n    *in_FS_OFFSET = &piStack12;\n    uStack4 = 0;\n    if (*(*param_2 + -0x10) != NULL) {\n        piVar2 = (**(**(*param_2 + -0x10) + 0x10))(uVar1);\n        if (piVar2 != NULL) goto code_r0x004045f9;\n    }\n    piVar2 = fcn.00410877();\n    piVar2 = (**(*piVar2 + 0x10))();\ncode_r0x004045f9:\n    if (piVar2 == NULL) {\n        piVar2 = fcn.00401090(0x80004005);\n    }\n    iVar3 = (**(*piVar2 + 0xc))();\n    *param_1 = iVar3 + 0x10;\n    uStack4 = 0;\n    fcn.004043e0(param_1, *param_2, *(*param_2 + -0xc), *param_3, *(*param_3 + -0xc));\n    *in_FS_OFFSET = piStack12;\n    return param_1;\n}\n",
        "token_count": 377
    },
    "00404660": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * fcn.00404660(int32_t *param_1, int32_t *param_2, char *param_3)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    char *pcVar5;\n    int32_t **in_FS_OFFSET;\n    int32_t *piStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack8 = 0x437049;\n    piStack12 = *in_FS_OFFSET;\n    uVar2 = *0x460604 ^ &stack0xffffffe4;\n    *in_FS_OFFSET = &piStack12;\n    uStack4 = 0;\n    if (*(*param_2 + -0x10) != NULL) {\n        piVar3 = (**(**(*param_2 + -0x10) + 0x10))(uVar2);\n        if (piVar3 != NULL) goto code_r0x004046bb;\n    }\n    piVar3 = fcn.00410877();\n    piVar3 = (**(*piVar3 + 0x10))();\ncode_r0x004046bb:\n    if (piVar3 == NULL) {\n        piVar3 = fcn.00401090(0x80004005);\n    }\n    iVar4 = (**(*piVar3 + 0xc))();\n    *param_1 = iVar4 + 0x10;\n    uStack4 = 0;\n    if (param_3 == NULL) {\n        iVar4 = 0;\n    }\n    else {\n        pcVar5 = param_3;\n        do {\n            cVar1 = *pcVar5;\n            pcVar5 = pcVar5 + 1;\n        } while (cVar1 != '\\0');\n        iVar4 = pcVar5 - (param_3 + 1);\n    }\n    fcn.004043e0(param_1, *param_2, *(*param_2 + -0xc), param_3, iVar4);\n    *in_FS_OFFSET = piStack12;\n    return param_1;\n}\n",
        "token_count": 463
    },
    "00404740": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "inject DLL reflectively/5c249d14806d4a4ea88afb4f94553771"
        ],
        "decompiled_code": "\nint32_t * fcn.00404740(int32_t *param_1, char *param_2, int32_t *param_3)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    char *pcVar5;\n    int32_t **in_FS_OFFSET;\n    int32_t *piStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack8 = 0x437089;\n    piStack12 = *in_FS_OFFSET;\n    uVar2 = *0x460604 ^ &stack0xffffffe4;\n    *in_FS_OFFSET = &piStack12;\n    uStack4 = 0;\n    if (*(*param_3 + -0x10) != NULL) {\n        piVar3 = (**(**(*param_3 + -0x10) + 0x10))(uVar2);\n        if (piVar3 != NULL) goto code_r0x0040479a;\n    }\n    piVar3 = fcn.00410877();\n    piVar3 = (**(*piVar3 + 0x10))();\ncode_r0x0040479a:\n    if (piVar3 == NULL) {\n        piVar3 = fcn.00401090(0x80004005);\n    }\n    iVar4 = (**(*piVar3 + 0xc))();\n    *param_1 = iVar4 + 0x10;\n    uStack4 = 0;\n    if (param_2 == NULL) {\n        iVar4 = 0;\n    }\n    else {\n        pcVar5 = param_2;\n        do {\n            cVar1 = *pcVar5;\n            pcVar5 = pcVar5 + 1;\n        } while (cVar1 != '\\0');\n        iVar4 = pcVar5 - (param_2 + 1);\n    }\n    fcn.004043e0(param_1, param_2, iVar4, *param_3, *(*param_3 + -0xc));\n    *in_FS_OFFSET = piStack12;\n    return param_1;\n}\n",
        "token_count": 465
    },
    "00404860": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00404860(char *param_1)\n\n{\n    char cVar1;\n    char *pcVar2;\n    \n    if (param_1 == NULL) {\n        fcn.00404460(0, 0);\n        return;\n    }\n    pcVar2 = param_1;\n    do {\n        cVar1 = *pcVar2;\n        pcVar2 = pcVar2 + 1;\n    } while (cVar1 != '\\0');\n    fcn.00404460(param_1, pcVar2 - (param_1 + 1));\n    return;\n}\n",
        "token_count": 129
    },
    "004048c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.004048c0(int32_t *param_1)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    char *pcVar5;\n    int32_t *unaff_EDI;\n    int32_t **in_FS_OFFSET;\n    char *unaff_retaddr;\n    int32_t *piStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x4370b8;\n    piStack12 = *in_FS_OFFSET;\n    uVar2 = *0x460604 ^ &stack0xffffffe8;\n    *in_FS_OFFSET = &piStack12;\n    piVar3 = fcn.00410877(uVar2);\n    if (piVar3 == NULL) {\n        piVar3 = fcn.00401090(0x80004005);\n    }\n    iVar4 = (**(*piVar3 + 0xc))();\n    *param_1 = iVar4 + 0x10;\n    uStack8 = 0;\n    if (unaff_retaddr == NULL) {\n        iVar4 = 0;\n    }\n    else {\n        if ((unaff_retaddr & 0xffff0000) == 0) {\n            iVar4 = fcn.00411851(unaff_retaddr & 0xffff);\n            if (iVar4 != 0) {\n                fcn.00404310(iVar4, unaff_retaddr & 0xffff);\n            }\n            goto code_r0x00404964;\n        }\n        pcVar5 = unaff_retaddr;\n        do {\n            cVar1 = *pcVar5;\n            pcVar5 = pcVar5 + 1;\n        } while (cVar1 != '\\0');\n        iVar4 = pcVar5 - (unaff_retaddr + 1);\n    }\n    fcn.00404460(unaff_retaddr, iVar4);\ncode_r0x00404964:\n    *in_FS_OFFSET = unaff_EDI;\n    return param_1;\n}\n",
        "token_count": 463
    },
    "00404980": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00404980(uint param_1, uint param_2, uchar *param_3)\n\n{\n    int32_t iVar1;\n    uint unaff_ESI;\n    uint uStack172;\n    uchar auStack168 [36];\n    uchar auStack132 [128];\n    uint32_t uStack4;\n    \n    uStack4 = *0x460604 ^ &uStack172;\n    uStack172 = 0;\n    if (param_3 != NULL) {\n        iVar1 = fcn.0042253e(auStack168, param_1);\n        if ((iVar1 != 0) || (iVar1 = fcn.0042392d(auStack132, 0x80, param_3, auStack168),  iVar1 == 0)) {\n            auStack132[0] = 0;\n        }\n        param_3 = auStack132;\n    }\n    fcn.004048c0(param_3);\n    fcn.00421e2f(unaff_ESI);\n    return;\n}\n",
        "token_count": 228
    },
    "004058a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004058a0(int32_t param_1, int32_t param_2)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t **in_FS_OFFSET;\n    int32_t *piStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack8 = 0x437278;\n    piStack12 = *in_FS_OFFSET;\n    uVar3 = *0x460604 ^ &stack0xffffffec;\n    *in_FS_OFFSET = &piStack12;\n    uStack4 = 0;\n    fcn.0040fb9f(param_2, uVar3);\n    (*_sym.imp.USER32.dll_RedrawWindow)(*(param_1 + 0x20), 0, 0);\n    piVar1 = param_2 + -4;\n    LOCK();\n    iVar2 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar2 == 1 || iVar2 + -1 < 0) {\n        (**(**(param_2 + -0x10) + 4))(param_2 + -0x10);\n    }\n    *in_FS_OFFSET = 0x105;\n    return;\n}\n",
        "token_count": 284
    },
    "00405abf": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00405abf(uint param_1, uint param_2, uint param_3, uint param_4)\n\n{\n    uint uVar1;\n    \n    uVar1 = fcn.00423d08(param_1, param_2, param_3, param_4);\n    fcn.00401000(uVar1);\n    return;\n}\n",
        "token_count": 80
    },
    "00405be2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00405be2(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint cb;\n    \n    cb = 0;\n    iVar1 = fcn.00405bc2(&cb, arg_8h, arg_ch);\n    if (iVar1 < 0) {\n        return 0;\n    }\n    uVar2 = (*_sym.imp.ole32.dll_CoTaskMemAlloc)(cb);\n    return uVar2;\n}\n",
        "token_count": 113
    },
    "00405c0f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00405c0f(uint param_1, uint param_2, uint param_3, uint param_4)\n\n{\n    uint uVar1;\n    \n    uVar1 = fcn.004214ae(param_1, param_2, param_3, param_4);\n    fcn.00401000(uVar1);\n    return;\n}\n",
        "token_count": 80
    },
    "00405c2e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00405c2e(uint param_1, uint param_2, uint param_3, uint param_4)\n\n{\n    uint uVar1;\n    \n    uVar1 = fcn.00405ba3(param_1, param_2, param_3, param_4);\n    fcn.00401000(uVar1);\n    return;\n}\n",
        "token_count": 81
    },
    "00405ddb": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * __thiscall fcn.00405ddb(int32_t *param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    int32_t *extraout_ECX;\n    \n    if (param_2 == NULL) {\n        fcn.00401090(0x80004005);\n        param_2 = extraout_ECX;\n    }\n    iVar1 = (**(*param_2 + 0xc))();\n    *param_1 = iVar1 + 0x10;\n    return param_1;\n}\n",
        "token_count": 121
    },
    "00405e32": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00405e32(uint32_t *param_1)\n\n{\n    uint32_t uVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    uint64_t uVar4;\n    \n    uVar1 = *param_1;\n    uVar4 = uVar1;\n    piVar2 = *(uVar1 - 0x10);\n    if (*(uVar1 - 0xc) != 0) {\n        if (*(uVar1 - 4) < 0) {\n            if (*(uVar1 - 8) < 0) {\n                uVar4 = fcn.00401090(0x80070057);\n            }\n            *(uVar4 + -0xc) = uVar4 >> 0x20;\n            **param_1 = uVar4 >> 0x20;\n        }\n        else {\n            fcn.004028b0();\n            iVar3 = (**(*piVar2 + 0xc))();\n            *param_1 = iVar3 + 0x10;\n        }\n    }\n    return;\n}\n",
        "token_count": 239
    },
    "00405e76": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405e76(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    int32_t iVar4;\n    int32_t *in_ECX;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = *in_ECX;\n    iVar2 = *(iVar1 + -0xc);\n    puVar3 = (**(**(iVar1 + -0x10) + 0x10))();\n    iVar4 = (***puVar3)(arg_8h, 2);\n    if (iVar4 == 0) {\n        fcn.00405e27();\n    }\n    if (iVar2 < arg_8h) {\n        arg_8h = iVar2;\n    }\n    fcn.00405ba3(iVar4 + 0x10, arg_8h + 1, iVar1, arg_8h + 1);\n    *(iVar4 + 4) = iVar2;\n    fcn.004028b0();\n    *in_ECX = iVar4 + 0x10;\n    return;\n}\n",
        "token_count": 253
    },
    "00405ede": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00405ede(int32_t *param_1, int32_t param_2)\n\n{\n    int32_t **ppiVar1;\n    int32_t iVar2;\n    \n    ppiVar1 = *param_1 + -0x10;\n    if ((*(*param_1 + -8) < param_2) && (0 < param_2)) {\n        iVar2 = (**(**ppiVar1 + 8))(ppiVar1, param_2, 2);\n        if (iVar2 != 0) goto code_r0x00405f09;\n    }\n    iVar2 = fcn.00405e27();\ncode_r0x00405f09:\n    *param_1 = iVar2 + 0x10;\n    return;\n}\n",
        "token_count": 169
    },
    "00405fab": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __thiscall fcn.00405fab(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    if (param_2 == 0) {\n        iVar1 = 0;\n    }\n    else {\n        iVar1 = fcn.00405cc6(param_2);\n    }\n    if (iVar1 < 1) {\n        fcn.00404040();\n    }\n    else {\n        uVar2 = fcn.00404180(iVar1);\n        fcn.00403e50(uVar2, iVar1, param_2, 0xffffffff);\n        fcn.00403e20(iVar1);\n    }\n    return param_1;\n}\n",
        "token_count": 160
    },
    "00405ff5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405ff5(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t *in_ECX;\n    uint32_t uVar3;\n    uint var_4h;\n    \n    uVar1 = *(*in_ECX + -0xc);\n    uVar3 = arg_8h - *in_ECX;\n    iVar2 = fcn.00404180(arg_ch + uVar1);\n    if (uVar3 <= uVar1) {\n        arg_8h = uVar3 + iVar2;\n    }\n    fcn.004214ae(iVar2 + uVar1, arg_ch, arg_8h, arg_ch);\n    fcn.00403e20(arg_ch + uVar1);\n    return;\n}\n",
        "token_count": 184
    },
    "004060ad": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __thiscall fcn.004060ad(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    if (param_2 == 0) {\n        iVar1 = 0;\n    }\n    else {\n        iVar1 = fcn.00405c4d(param_2);\n    }\n    if (iVar1 < 1) {\n        fcn.00405e32();\n    }\n    else {\n        uVar2 = fcn.00405f81(iVar1);\n        fcn.00405c67(uVar2, iVar1, param_2, 0xffffffff);\n        fcn.00405e00(iVar1);\n    }\n    return param_1;\n}\n",
        "token_count": 163
    },
    "004060f7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nuint16_t * fcn.004060f7(uint param_1, uint param_2)\n\n{\n    uint16_t *puVar1;\n    uint arg_8h;\n    uint32_t arg_ch;\n    \n    puVar1 = fcn.00403b00(param_1, param_2);\n    if (puVar1 != NULL) {\n        arg_ch = *puVar1;\n        arg_8h = fcn.00405f81(arg_ch);\n        fcn.00405c87(arg_8h, arg_ch, puVar1 + 1, *puVar1);\n        fcn.00405e00(arg_ch);\n        puVar1 = 0x1;\n    }\n    return puVar1;\n}\n",
        "token_count": 160
    },
    "00406312": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00406312(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t *piVar3;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    *(param_1 + 0xa0) = 0;\n    var_4h = 0;\n    var_8h = 0;\n    var_14h = 4;\n    var_ch = 0;\n    piVar2 = 0x45f53c;\n    var_10h = param_1;\n    iVar1 = *0x45f53c;\n    while (iVar1 != 0) {\n        iVar1 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExA)(0x80000001, *piVar2, 0, 1, &var_4h);\n        if (iVar1 == 0) {\n            for (piVar3 = piVar2[1]; *piVar3 != 0; piVar3 = piVar3 + 2) {\n                iVar1 = (*_sym.imp.ADVAPI32.dll_RegQueryValueExA)(var_4h, *piVar3, 0, &var_ch, &var_8h, &var_14h);\n                if ((iVar1 == 0) && (var_ch == 4)) {\n                    if (var_8h == 0) {\n                        *(var_10h + 0xa0) = *(var_10h + 0xa0) & ~piVar3[1];\n                    }\n                    else {\n                        *(var_10h + 0xa0) = *(var_10h + 0xa0) | piVar3[1];\n                    }\n                }\n                var_8h = 0;\n                var_14h = 4;\n                var_ch = 0;\n            }\n            (*_sym.imp.ADVAPI32.dll_RegCloseKey)(var_4h);\n            var_4h = 0;\n        }\n        piVar2 = piVar2 + 2;\n        iVar1 = *piVar2;\n    }\n    return 1;\n}\n",
        "token_count": 498
    },
    "00406415": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid fcn.00406415(void)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.00423bfe(4);\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *extraout_ECX = vtable.CWinApp.0;\n    piVar1 = extraout_ECX[0x16];\n    *(unaff_EBP + -4) = 0;\n    if (piVar1 != NULL) {\n        (**(*piVar1 + 4))(1);\n    }\n    if (extraout_ECX[0x22] != NULL) {\n        (**(*extraout_ECX[0x22] + 0x18))(1);\n    }\n    iVar3 = fcn.00409b0a();\n    if (*(iVar3 + 0x14) == '\\0') {\n        if (*0x461bf8 != NULL) {\n            (**(**0x461bf8 + 4))(1);\n            *0x461bf8 = NULL;\n        }\n        if (*0x461bf4 != NULL) {\n            (**(**0x461bf4 + 4))(1);\n            *0x461bf4 = NULL;\n        }\n    }\n    if (extraout_ECX[0x1c] != NULL) {\n        fcn.0041275c(extraout_ECX[0x1c]);\n    }\n    if (extraout_ECX[0x1d] != NULL) {\n        fcn.0041275c(extraout_ECX[0x1d]);\n    }\n    pcVar2 = _sym.imp.KERNEL32.dll_GlobalDeleteAtom;\n    if (*(extraout_ECX + 0x24) != 0) {\n        (*_sym.imp.KERNEL32.dll_GlobalDeleteAtom)(*(extraout_ECX + 0x24));\n    }\n    if (*(extraout_ECX + 0x92) != 0) {\n        (*pcVar2)(*(extraout_ECX + 0x92));\n    }\n    if (extraout_ECX[0x23] != NULL) {\n        (**(*extraout_ECX[0x23] + 4))(1);\n    }\n    iVar3 = fcn.00409b0a();\n    if (*(iVar3 + 0x10) == extraout_ECX[0x14]) {\n        *(iVar3 + 0x10) = 0;\n    }\n    if (*(iVar3 + 4) == extraout_ECX) {\n        *(iVar3 + 4) = 0;\n    }\n    fcn.004212be(extraout_ECX[0x14]);\n    fcn.004212be(extraout_ECX[0x15]);\n    fcn.004212be(extraout_ECX[0x18]);\n    fcn.004212be(extraout_ECX[0x19]);\n    fcn.004212be(extraout_ECX[0x1a]);\n    *(unaff_EBP + -4) = 0xffffffff;\n    extraout_ECX[0xb] = NULL;\n    fcn.00407571();\n    fcn.00423cd6();\n    return;\n}\n",
        "token_count": 756
    },
    "00406793": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00406793(uint param_1, uint param_2, uint param_3)\n\n{\n    uint uVar1;\n    \n    uVar1 = fcn.004241aa(param_1, param_2, param_3);\n    fcn.00401000(uVar1);\n    return;\n}\n",
        "token_count": 69
    },
    "00406eb0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool fcn.00406eb0(uint param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00424321(param_1, param_2, 0x10);\n    return iVar1 == 0;\n}\n",
        "token_count": 60
    },
    "00406ec8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __cdecl\nfcn.00406ec8(int32_t arg_8h, uint *arg_ch, uint noname_2, code *arg_14h, uint *arg_18h, int32_t arg_1ch, \n            int32_t *arg_20h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t extraout_ECX;\n    uint unaff_EBX;\n    uint uVar3;\n    uint *unaff_ESI;\n    uint *puVar4;\n    \n    uVar3 = unaff_EBX;\n    puVar4 = unaff_ESI;\n    if (arg_8h != 0) goto code_r0x00406ed7;\ncode_r0x00406ed2:\n    fcn.00405a76();\n    arg_8h = extraout_ECX;\n    uVar3 = unaff_EBX;\n    puVar4 = unaff_ESI;\ncode_r0x00406ed7:\n    unaff_EBX = 1;\n    if (arg_20h != NULL) {\n        *arg_20h = arg_8h;\n        arg_20h[1] = arg_14h;\n        return 1;\n    }\n    if (0xb < arg_1ch - 0x38U) {\n        return 0;\n    }\n    // switch table (12 cases) at 0x406fd0\n    unaff_ESI = puVar4;\n    switch(*((arg_1ch - 0x38U) * 4 + 0x406fd0)) {\n    case 0x406f08:\n        (*arg_14h)();\n        return 1;\n    case 0x406f10:\n        uVar2 = (*arg_14h)();\n        return uVar2;\n    case 0x406f18:\n        arg_18h = arg_ch;\n        break;\n    case 0x406f23:\n        arg_18h = arg_ch;\n        goto code_r0x00406fbc;\n    case 0x406f2b:\n        if (arg_18h != NULL) {\n            (*arg_14h)(arg_18h[1], *arg_18h);\n            return 1;\n        }\n        goto code_r0x00406ed2;\n    case 0x406f3f:\n        if (arg_18h != NULL) {\n            uVar2 = (*arg_14h)(arg_18h[1], *arg_18h);\n            return uVar2;\n        }\n        goto code_r0x00406ed2;\n    case 0x406f50:\n        if (arg_18h != NULL) {\n            (*arg_14h)(arg_ch, arg_18h[1], *arg_18h);\n            return 1;\n        }\n        goto code_r0x00406ed2;\n    case 0x406f68:\n        if (arg_18h != NULL) {\n            uVar2 = (*arg_14h)(arg_ch, arg_18h[1], *arg_18h);\n            return uVar2;\n        }\n        goto code_r0x00406ed2;\n    case 0x406f80:\n        unaff_ESI = arg_18h;\n        if (arg_18h != NULL) {\n            (*arg_14h)(arg_18h);\n            goto code_r0x00406f8f;\n        }\n        goto code_r0x00406ed2;\n    case 0x406f9d:\n        goto code_r0x00406f9d;\n    case 0x406fb1:\n        break;\n    case 0x406fb9:\ncode_r0x00406fbc:\n        uVar2 = (*arg_14h)(arg_18h);\n        return uVar2;\n    }\n    (*arg_14h)(arg_18h);\n    return 1;\ncode_r0x00406f9d:\n    unaff_ESI = arg_18h;\n    if (arg_18h != NULL) {\n        (*arg_14h)(arg_18h, arg_ch, puVar4, uVar3);\ncode_r0x00406f8f:\n        iVar1 = arg_18h[7];\n        arg_18h[7] = 0;\n        return iVar1 == 0;\n    }\n    goto code_r0x00406ed2;\n}\n",
        "token_count": 967
    },
    "0040753a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040753a(int32_t param_1)\n\n{\n    int32_t iVar1;\n    \n    *(param_1 + 0x20) = 0;\n    *(param_1 + 0x24) = 0;\n    *(param_1 + 0x2c) = 0;\n    *(param_1 + 0x30) = 0;\n    iVar1 = fcn.004095e9();\n    *(iVar1 + 0x34) = 0;\n    *(iVar1 + 0x54) = 0;\n    (*_sym.imp.USER32.dll_GetCursorPos)(iVar1 + 0x4c);\n    *(param_1 + 0x40) = 0;\n    *(param_1 + 0x3c) = 0;\n    *(param_1 + 0x28) = 1;\n    return;\n}\n",
        "token_count": 199
    },
    "0040765d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __thiscall fcn.0040765d(int32_t *param_1, int32_t param_2)\n\n{\n    code **ppcVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    uint arg_14h;\n    \n    ppcVar1 = (**(*param_1 + 0x28))();\n    pcVar3 = *ppcVar1;\n    do {\n        if (pcVar3 == NULL) {\n            return 0;\n        }\n        arg_14h = 0;\n        if (*(param_2 + 4) < 0xc000) {\n            iVar2 = fcn.0040b233(ppcVar1[1], *(param_2 + 4), 0, 0);\n            if (iVar2 != 0) {\ncode_r0x00407692:\n                (**(iVar2 + 0x14))(*(param_2 + 8), *(param_2 + 0xc));\n                return 1;\n            }\n        }\n        else {\n            pcVar3 = ppcVar1[1];\n            while (iVar2 = fcn.0040b233(pcVar3, 0xc000, 0, arg_14h),  iVar2 != 0) {\n                if (**(iVar2 + 0x10) == *(param_2 + 4)) goto code_r0x00407692;\n                pcVar3 = iVar2 + 0x18;\n            }\n        }\n        ppcVar1 = (**ppcVar1)();\n        pcVar3 = *ppcVar1;\n    } while( true );\n}\n",
        "token_count": 350
    },
    "00407ac6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool __thiscall fcn.00407ac6(int32_t param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t unaff_retaddr;\n    \n    if (param_2 < 1) {\n        iVar3 = *(param_1 + 0x20);\n        if (((iVar3 != 0) && (*(iVar3 + 0x20) != 0)) &&\n           (iVar1 = (*_sym.imp.USER32.dll_IsWindowVisible)(*(iVar3 + 0x20)),  iVar1 != 0)) {\n            fcn.0040d374(iVar3, *(iVar3 + 0x20), 0x363, 1, 0);\n            fcn.0040d64f(*(iVar3 + 0x20), 0x363, 1, 0, 1, 1);\n        }\n        fcn.00409b0a();\n        iVar1 = fcn.00406a01();\n        for (iVar1 = *(iVar1 + 8); iVar1 != 0; iVar1 = *(iVar1 + 0x6c)) {\n            if ((*(iVar1 + 0x20) != 0) && (iVar1 != iVar3)) {\n                if (*(iVar1 + 0xa0) == 0) {\n                    fcn.0040fc39(0);\n                }\n                iVar2 = (*_sym.imp.USER32.dll_IsWindowVisible)(*(iVar1 + 0x20));\n                if ((iVar2 != 0) || (-1 < *(iVar1 + 0xa0))) {\n                    fcn.0040d374(iVar1, *(iVar1 + 0x20), 0x363, 1, 0);\n                    fcn.0040d64f(*(iVar1 + 0x20), 0x363, 1, 0, 1, 1);\n                }\n                if (0 < *(iVar1 + 0xa0)) {\n                    fcn.0040fc39();\n                }\n                *(iVar1 + 0xa0) = 0xffffffff;\n            }\n        }\n    }\n    else {\n        fcn.00409b0a();\n        iVar3 = fcn.00406a01();\n        if (*(iVar3 + 0x10) == 0) {\n            fcn.00412b51();\n            fcn.00412d62(1);\n        }\n    }\n    return unaff_retaddr < 0;\n}\n",
        "token_count": 557
    },
    "004082e9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004082e9(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00409b0a();\n    if (*(iVar1 + 4) != NULL) {\n    // WARNING: Could not recover jumptable at 0x004082fd. Too many branches\n    // WARNING: Treating indirect jump as call\n        (**(**(iVar1 + 4) + 0x98))();\n        return;\n    }\n    fcn.0040818e(0, arg_8h, arg_ch, arg_10h);\n    return;\n}\n",
        "token_count": 145
    },
    "00408771": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * fcn.00408771(int32_t *param_1)\n\n{\n    int32_t *piVar1;\n    int32_t *extraout_ECX;\n    \n    piVar1 = *param_1;\n    if (piVar1 == NULL) {\n        piVar1 = fcn.00405a76();\n        param_1 = extraout_ECX;\n    }\n    *param_1 = *piVar1;\n    return piVar1 + 2;\n}\n",
        "token_count": 106
    },
    "004088ed": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.004088ed(void)\n\n{\n    uint *puVar1;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.00423bfe(4);\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *extraout_ECX = vtable.CControlSiteFactoryMgr.0;\n    puVar1 = extraout_ECX[8];\n    *(unaff_EBP + -4) = 0;\n    if (puVar1 != NULL) {\n        (***puVar1)(1);\n    }\n    fcn.00408721();\n    *(unaff_EBP + -4) = 0xffffffff;\n    extraout_ECX[1] = vtable.CList_class_IControlSiteFactory___class_IControlSiteFactory__.0;\n    fcn.00408721();\n    fcn.00423cd6();\n    return;\n}\n",
        "token_count": 230
    },
    "00409707": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "parse PE header/27dc37a2d08e4034aa7bcaa8b888b251"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.00409707(void)\n\n{\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.00423bfe(4);\n    fcn.004048c0(\"comctl32.dll\");\n    *(unaff_EBP + -4) = 0;\n    fcn.004096a5(unaff_EBP + -0x10);\n    fcn.004028b0();\n    *extraout_ECX = vtable.CComCtlWrapper.0;\n    extraout_ECX[4] = NULL;\n    extraout_ECX[5] = NULL;\n    extraout_ECX[6] = NULL;\n    extraout_ECX[7] = NULL;\n    extraout_ECX[8] = NULL;\n    extraout_ECX[9] = NULL;\n    extraout_ECX[10] = NULL;\n    extraout_ECX[0xb] = NULL;\n    extraout_ECX[0xc] = NULL;\n    extraout_ECX[0xd] = NULL;\n    extraout_ECX[0xe] = NULL;\n    extraout_ECX[0xf] = NULL;\n    extraout_ECX[0x10] = NULL;\n    extraout_ECX[0x11] = NULL;\n    extraout_ECX[0x12] = NULL;\n    extraout_ECX[0x13] = NULL;\n    extraout_ECX[0x14] = NULL;\n    extraout_ECX[0x15] = NULL;\n    extraout_ECX[0x16] = NULL;\n    extraout_ECX[0x17] = NULL;\n    extraout_ECX[0x18] = NULL;\n    extraout_ECX[0x19] = NULL;\n    extraout_ECX[0x1a] = NULL;\n    extraout_ECX[0x1b] = NULL;\n    extraout_ECX[0x1c] = NULL;\n    extraout_ECX[0x1d] = NULL;\n    extraout_ECX[0x1e] = NULL;\n    extraout_ECX[0x1f] = NULL;\n    extraout_ECX[0x20] = NULL;\n    extraout_ECX[0x21] = NULL;\n    extraout_ECX[0x22] = NULL;\n    extraout_ECX[0x23] = NULL;\n    extraout_ECX[0x24] = NULL;\n    extraout_ECX[0x25] = NULL;\n    extraout_ECX[0x26] = NULL;\n    extraout_ECX[0x27] = NULL;\n    extraout_ECX[0x28] = NULL;\n    extraout_ECX[0x29] = NULL;\n    extraout_ECX[0x2a] = NULL;\n    extraout_ECX[0x2b] = NULL;\n    extraout_ECX[0x2c] = NULL;\n    extraout_ECX[0x2d] = NULL;\n    extraout_ECX[0x2e] = NULL;\n    extraout_ECX[0x2f] = NULL;\n    extraout_ECX[0x30] = NULL;\n    extraout_ECX[0x31] = NULL;\n    extraout_ECX[0x32] = NULL;\n    extraout_ECX[0x33] = NULL;\n    extraout_ECX[0x34] = NULL;\n    extraout_ECX[0x35] = NULL;\n    extraout_ECX[0x36] = NULL;\n    extraout_ECX[0x37] = NULL;\n    extraout_ECX[0x38] = NULL;\n    extraout_ECX[0x39] = NULL;\n    extraout_ECX[0x3a] = NULL;\n    extraout_ECX[0x3b] = NULL;\n    extraout_ECX[0x3c] = NULL;\n    extraout_ECX[0x3d] = NULL;\n    extraout_ECX[0x3e] = NULL;\n    extraout_ECX[0x3f] = NULL;\n    extraout_ECX[0x40] = NULL;\n    extraout_ECX[0x41] = NULL;\n    extraout_ECX[0x42] = NULL;\n    extraout_ECX[0x43] = NULL;\n    extraout_ECX[0x44] = NULL;\n    extraout_ECX[0x45] = NULL;\n    extraout_ECX[0x46] = NULL;\n    extraout_ECX[0x47] = NULL;\n    extraout_ECX[0x48] = NULL;\n    extraout_ECX[0x49] = NULL;\n    extraout_ECX[0x4a] = NULL;\n    extraout_ECX[0x4b] = NULL;\n    extraout_ECX[0x4c] = NULL;\n    extraout_ECX[0x4d] = NULL;\n    extraout_ECX[0x4e] = NULL;\n    extraout_ECX[0x4f] = NULL;\n    extraout_ECX[0x50] = NULL;\n    extraout_ECX[0x51] = NULL;\n    extraout_ECX[0x52] = NULL;\n    extraout_ECX[0x53] = NULL;\n    extraout_ECX[0x54] = NULL;\n    extraout_ECX[0x55] = NULL;\n    extraout_ECX[0x56] = NULL;\n    extraout_ECX[0x57] = NULL;\n    extraout_ECX[0x58] = NULL;\n    extraout_ECX[0x59] = NULL;\n    extraout_ECX[0x5a] = NULL;\n    extraout_ECX[0x5b] = NULL;\n    extraout_ECX[0x5c] = NULL;\n    extraout_ECX[0x5d] = NULL;\n    extraout_ECX[0x5e] = NULL;\n    extraout_ECX[0x5f] = NULL;\n    extraout_ECX[0x60] = NULL;\n    extraout_ECX[0x61] = NULL;\n    fcn.00423cd6();\n    return;\n}\n",
        "token_count": 1387
    },
    "0040992b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "parse PE header/27dc37a2d08e4034aa7bcaa8b888b251"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.0040992b(void)\n\n{\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.00423bfe(4);\n    fcn.004048c0(0x451aa8);\n    *(unaff_EBP + -4) = 0;\n    fcn.004096a5(unaff_EBP + -0x10);\n    fcn.004028b0();\n    *extraout_ECX = vtable.CCommDlgWrapper.0;\n    extraout_ECX[4] = NULL;\n    extraout_ECX[5] = NULL;\n    extraout_ECX[6] = NULL;\n    extraout_ECX[7] = NULL;\n    extraout_ECX[8] = NULL;\n    extraout_ECX[9] = NULL;\n    extraout_ECX[10] = NULL;\n    extraout_ECX[0xb] = NULL;\n    extraout_ECX[0xc] = NULL;\n    extraout_ECX[0xd] = NULL;\n    extraout_ECX[0xe] = NULL;\n    extraout_ECX[0xf] = NULL;\n    extraout_ECX[0x10] = NULL;\n    extraout_ECX[0x11] = NULL;\n    extraout_ECX[0x12] = NULL;\n    extraout_ECX[0x13] = NULL;\n    extraout_ECX[0x14] = NULL;\n    extraout_ECX[0x15] = NULL;\n    extraout_ECX[0x16] = NULL;\n    extraout_ECX[0x17] = NULL;\n    extraout_ECX[0x18] = NULL;\n    fcn.00423cd6();\n    return;\n}\n",
        "token_count": 410
    },
    "00409b3d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00409b3d(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uStack8;\n    \n    fcn.00409b0a();\n    iVar2 = fcn.00406a01();\n    if (iVar2 == 0) {\n        uStack8 = 0x45f468;\n        fcn.00421cb9(&uStack8, 0x459604);\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    return;\n}\n",
        "token_count": 122
    },
    "0040a9b9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040a9b9(int32_t arg_8h, uint32_t *arg_ch)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint32_t uVar4;\n    uint32_t pvParam;\n    uint32_t uStack16;\n    uint32_t uStack12;\n    uint32_t uStack8;\n    \n    iVar2 = fcn.0040a80d();\n    if (iVar2 == 0) {\n        if ((((arg_8h == 0x12340042) && (arg_ch != NULL)) && (0x27 < *arg_ch)) &&\n           (iVar2 = (*_sym.imp.USER32.dll_SystemParametersInfoA)(0x30, 0, &pvParam, 0),  iVar2 != 0)) {\n            arg_ch[1] = 0;\n            arg_ch[2] = 0;\n            pcVar1 = _sym.imp.USER32.dll_GetSystemMetrics;\n            uVar4 = (*_sym.imp.USER32.dll_GetSystemMetrics)(0);\n            arg_ch[3] = uVar4;\n            uVar4 = (*pcVar1)(1);\n            arg_ch[5] = pvParam;\n            arg_ch[6] = uStack16;\n            arg_ch[7] = uStack12;\n            arg_ch[8] = uStack8;\n            uVar3 = 1;\n            arg_ch[4] = uVar4;\n            arg_ch[9] = 1;\n            if (0x47 < *arg_ch) {\n                fcn.00425b61(arg_ch + 10, 0x20, \"DISPLAY\", 0x1f);\n            }\n        }\n        else {\n            uVar3 = 0;\n        }\n    }\n    else {\n        uVar3 = (**0x463580)(arg_8h, arg_ch);\n    }\n    return uVar3;\n}\n",
        "token_count": 422
    },
    "0040c66c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0040c66c(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t *extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_18h;\n    uint var_14h;\n    uint var_4h;\n    \n    fcn.00423c31(0x24);\n    *(unaff_EBP + -0x2c) = *(unaff_EBP + 8);\n    *(unaff_EBP + -0x28) = extraout_ECX;\n    *(unaff_EBP + -0x24) = 0;\n    iVar1 = fcn.004095e9();\n    *(unaff_EBP + -0x18) = iVar1;\n    *(unaff_EBP + -0x14) = *(iVar1 + 0xdc);\n    *(iVar1 + 0xdc) = extraout_ECX[8];\n    iVar1 = *extraout_ECX;\n    *(unaff_EBP + 8) = 0;\n    *(unaff_EBP + -4) = 0;\n    (**(iVar1 + 0xf4))(unaff_EBP + -0x2c);\n    *(unaff_EBP + 8) = 1;\n    *(*(unaff_EBP + -0x18) + 0xdc) = *(unaff_EBP + -0x14);\n    fcn.00423cd6();\n    return;\n}\n",
        "token_count": 357
    },
    "0040c6f7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040c6f7(int32_t arg_8h)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    int32_t in_ECX;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint var_60h;\n    uint lprcSrc;\n    int32_t var_38h;\n    int32_t var_34h;\n    int32_t var_30h;\n    int32_t var_2ch;\n    int32_t lpPoints;\n    int32_t var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t lprcDst;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = fcn.0040fb17();\n    if (arg_8h == 0) {\n        if ((var_4h & 0x40000000) == 0) {\n            iVar5 = (*_sym.imp.USER32.dll_GetWindow)(*(in_ECX + 0x20), 4);\n        }\n        else {\n            iVar5 = (*_sym.imp.USER32.dll_GetParent)(*(in_ECX + 0x20));\n        }\n        if ((iVar5 != 0) && (iVar4 = (*_sym.imp.USER32.dll_SendMessageA)(iVar5, 0x36b, 0, 0),  iVar4 != 0)) {\n            iVar5 = iVar4;\n        }\n    }\n    else {\n        iVar5 = *(arg_8h + 0x20);\n    }\n    pcVar1 = _sym.imp.USER32.dll_GetWindowRect;\n    (*_sym.imp.USER32.dll_GetWindowRect)(*(in_ECX + 0x20), &var_38h);\n    if ((var_4h & 0x40000000) == 0) {\n        if ((iVar5 != 0) &&\n           ((uVar2 = (*_sym.imp.USER32.dll_GetWindowLongA)(iVar5, 0xfffffff0),  (uVar2 & 0x10000000) == 0 ||\n            ((uVar2 & 0x20000000) != 0)))) {\n            iVar5 = 0;\n        }\n        if (iVar5 == 0) {\n            iVar5 = fcn.004067ae();\n            if (iVar5 != 0) {\n                iVar5 = *(iVar5 + 0x20);\n            }\n            uVar3 = fcn.0040a94e(iVar5, 1);\n            fcn.0040a9b9(uVar3, iVar5);\n            pcVar1 = _sym.imp.USER32.dll_CopyRect;\n            (*_sym.imp.USER32.dll_CopyRect)(&lpPoints, &lprcSrc);\n            (*pcVar1)(&lprcDst, &lprcSrc);\n        }\n        else {\n            (*pcVar1)(iVar5, &lpPoints);\n            uVar3 = fcn.0040a94e(iVar5, 2);\n            fcn.0040a9b9(uVar3, iVar5);\n            (*_sym.imp.USER32.dll_CopyRect)(&lprcDst, &lprcSrc);\n        }\n    }\n    else {\n        uVar3 = (*_sym.imp.USER32.dll_GetParent)(*(in_ECX + 0x20));\n        pcVar1 = _sym.imp.USER32.dll_GetClientRect;\n        (*_sym.imp.USER32.dll_GetClientRect)(uVar3, &lprcDst);\n        (*pcVar1)(iVar5, &lpPoints);\n        (*_sym.imp.USER32.dll_MapWindowPoints)(iVar5, uVar3, &lpPoints, 2);\n    }\n    iVar5 = (lpPoints + var_20h) / 2 - (var_30h - var_38h) / 2;\n    iVar4 = (var_24h + var_1ch) / 2 - (var_2ch - var_34h) / 2;\n    if ((lprcDst <= iVar5) && (lprcDst = iVar5,  var_10h < (var_30h - var_38h) + iVar5)) {\n        lprcDst = (var_38h - var_30h) + var_10h;\n    }\n    if ((var_14h <= iVar4) && (var_14h = iVar4,  var_ch < (var_2ch - var_34h) + iVar4)) {\n        var_14h = (var_34h - var_2ch) + var_ch;\n    }\n    fcn.0040fe48(0, lprcDst, var_14h, 0xffffffff, 0xffffffff, 0x15);\n    return;\n}\n",
        "token_count": 1085
    },
    "0040cd4a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0040cd4a(void)\n\n{\n    int32_t iVar1;\n    int32_t extraout_ECX;\n    uint *puVar2;\n    uint32_t unaff_retaddr;\n    \n    iVar1 = fcn.0040ccaf(0);\n    if (iVar1 == 0) {\n        return 0;\n    }\n    iVar1 = iVar1 + 0x1c;\n    if (iVar1 == 0) {\n        fcn.00405a76();\n        iVar1 = extraout_ECX;\n    }\n    if (*(iVar1 + 4) != 0) {\n        for (puVar2 = *(*(iVar1 + 4) + ((unaff_retaddr >> 4) % *(iVar1 + 8)) * 4); puVar2 != NULL; puVar2 = *puVar2) {\n            if (puVar2[1] == unaff_retaddr) {\n                return puVar2[2];\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 223
    },
    "0040f1a8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040f1a8(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStackY532;\n    uint in_stack_fffffe08;\n    \n    fcn.00423c31();\n    fcn.00409b0a();\n    fcn.00407206();\n    *in_FS_OFFSET = uStackY532;\n    fcn.00421e2f(in_stack_fffffe08);\n    return;\n}\n",
        "token_count": 96
    },
    "0040fe14": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.0040fe14(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    int32_t *extraout_ECX;\n    \n    iVar1 = *param_1;\n    if (iVar1 == 0) {\n        iVar1 = fcn.00405a76();\n        param_1 = extraout_ECX;\n    }\n    *param_1 = *(iVar1 + 4);\n    return iVar1 + 8;\n}\n",
        "token_count": 103
    },
    "004102fb": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.004102fb(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = *(param_1 + 0x4c);\n    if (iVar1 == 0) {\n        return iVar1;\n    }\n    iVar1 = *(iVar1 + 0x44);\n    while( true ) {\n        if (iVar1 == 0) {\n            return 0;\n        }\n        piVar2 = *(iVar1 + 8);\n        if (piVar2[1] == 0) {\n            iVar4 = *piVar2;\n        }\n        else {\n            iVar4 = *(piVar2[1] + 0x24);\n        }\n        if ((iVar4 != 0) && (iVar3 = (*_sym.imp.USER32.dll_GetFocus)(),  iVar4 == iVar3)) break;\n        if ((piVar2[1] != 0) && (piVar2[1] == *(*(param_1 + 0x4c) + 0x70))) {\n            return iVar1;\n        }\n        fcn.0040fdfb();\n    }\n    return iVar1;\n}\n",
        "token_count": 296
    },
    "00410767": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00410767(uint *param_1, int32_t param_2, int32_t param_3)\n\n{\n    uint uVar1;\n    uint uVar2;\n    \n    fcn.004215c0(param_1, 0, 0x28);\n    *param_1 = 0x28;\n    if (param_2 == 0) {\n        uVar2 = 0;\n    }\n    else {\n        uVar2 = *(param_2 + 0x20);\n    }\n    if (param_3 == 0) {\n        uVar1 = (*_sym.imp.USER32.dll_GetParent)(uVar2);\n        param_1[2] = uVar1;\n        param_1[1] = 1;\n        param_1[3] = uVar2;\n    }\n    else {\n        param_1[1] = 0;\n        param_1[2] = uVar2;\n        param_1[3] = param_3;\n    }\n    return;\n}\n",
        "token_count": 225
    },
    "00410aa5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00410aa5(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t Y, uint crColor)\n\n{\n    int32_t in_ECX;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    (*_sym.imp.GDI32.dll_SetBkColor)(*(in_ECX + 4), crColor);\n    var_10h = arg_8h;\n    var_8h = arg_8h + arg_10h;\n    var_ch = arg_ch;\n    var_4h = arg_ch + Y;\n    (*_sym.imp.GDI32.dll_ExtTextOutA)(*(in_ECX + 4), 0, 0, 2, &var_10h, 0, 0, 0);\n    return;\n}\n",
        "token_count": 207
    },
    "00410af1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00410af1(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    uint var_4h;\n    \n    fcn.00410aa5(arg_8h, arg_ch, arg_10h + -1, 1, arg_18h);\n    fcn.00410aa5(arg_8h, arg_ch, 1, arg_14h + -1, arg_18h);\n    fcn.00410aa5(arg_8h + arg_10h, arg_ch, 0xffffffff, arg_14h, arg_1ch);\n    fcn.00410aa5(arg_8h, arg_ch + arg_14h, arg_10h, 0xffffffff, arg_1ch);\n    return;\n}\n",
        "token_count": 200
    },
    "00410c5c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00410c5c(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint uVar1;\n    uint unaff_ESI;\n    uint var_40h;\n    uint var_29h;\n    uint var_24h;\n    uint32_t var_4h;\n    \n    var_4h = *0x460604 ^ &stack0xfffffffc;\n    fcn.004215c0(&var_40h, 0, 0x3c);\n    var_40h = arg_8h;\n    var_29h._0_1_ = 1;\n    uVar1 = fcn.00423d08(&var_24h, 0x20, arg_ch, 0xffffffff);\n    fcn.00401000(uVar1);\n    fcn.00410b5b(&var_40h, arg_10h);\n    fcn.00421e2f(unaff_ESI);\n    return;\n}\n",
        "token_count": 228
    },
    "00410d79": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00410d79(void)\n\n{\n    int32_t iVar1;\n    int32_t extraout_ECX;\n    uint *puVar2;\n    uint32_t unaff_retaddr;\n    \n    iVar1 = fcn.00410cf7(0);\n    if (iVar1 == 0) {\n        return 0;\n    }\n    iVar1 = iVar1 + 0x1c;\n    if (iVar1 == 0) {\n        fcn.00405a76();\n        iVar1 = extraout_ECX;\n    }\n    if (*(iVar1 + 4) != 0) {\n        for (puVar2 = *(*(iVar1 + 4) + ((unaff_retaddr >> 4) % *(iVar1 + 8)) * 4); puVar2 != NULL; puVar2 = *puVar2) {\n            if (puVar2[1] == unaff_retaddr) {\n                return puVar2[2];\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 222
    },
    "00411377": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: hMem\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00411377(uint arg_8h, uint arg_ch, uint hInstance)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iVar4;\n    int32_t *extraout_ECX;\n    int32_t unaff_EBP;\n    bool bVar5;\n    uint var_48h;\n    uint var_38h;\n    uint var_28h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint hMem;\n    uint var_4h;\n    \n    fcn.00423c31(0x3c);\n    *(unaff_EBP + -0x20) = extraout_ECX;\n    if (*(unaff_EBP + 0x10) == 0) {\n        iVar2 = fcn.00409b0a();\n        *(unaff_EBP + 0x10) = *(iVar2 + 0xc);\n    }\n    iVar2 = fcn.00409b0a();\n    piVar1 = *(iVar2 + 0x3c);\n    *(unaff_EBP + -0x28) = piVar1;\n    *(unaff_EBP + -0x14) = 0;\n    *(unaff_EBP + -4) = 0;\n    fcn.0040f675(0x10);\n    fcn.0040f675(0x7c000);\n    if (piVar1 == NULL) {\n        iVar2 = *(unaff_EBP + 8);\n    }\n    else {\n        iVar2 = (**(*extraout_ECX + 300))(unaff_EBP + -0x48);\n        if (iVar2 == 0) goto code_r0x0041155f;\n        iVar2 = (**(*piVar1 + 0x14))(unaff_EBP + -0x48, *(unaff_EBP + 8));\n    }\n    if (iVar2 == 0) goto code_r0x0041155f;\n    uVar3 = fcn.00410877();\n    fcn.00403130(uVar3);\n    *(unaff_EBP + -4) = 1;\n    *(unaff_EBP + -0x18) = 0;\n    iVar4 = fcn.0041d9a8(iVar2, unaff_EBP + -0x1c, unaff_EBP + -0x18);\n    bVar5 = iVar4 == 0;\n    if (*0x4637b4 == 0) {\ncode_r0x0041145d:\n        if (bVar5) {\ncode_r0x00411461:\n            fcn.0041d971(iVar2);\n            *(unaff_EBP + -4) = 2;\n            fcn.0041d8cf(*(unaff_EBP + -0x18));\n            uVar3 = fcn.0041d607();\n            *(unaff_EBP + -0x14) = uVar3;\n            *(unaff_EBP + -4) = 1;\n            fcn.0041d5f9();\n            if (*(unaff_EBP + -0x14) != 0) {\n                iVar2 = (*_sym.imp.KERNEL32.dll_GlobalLock)(*(unaff_EBP + -0x14));\n            }\n        }\n    }\n    else {\n        if (bVar5) goto code_r0x00411461;\n        iVar4 = (*_sym.imp.USER32.dll_GetSystemMetrics)(0x2a);\n        if (iVar4 != 0) {\n            iVar4 = fcn.0041134f(iVar2, \"MS Shell Dlg\");\n            bVar5 = iVar4 == 0;\n            if (bVar5) {\n                if (*(unaff_EBP + -0x18) == 8) {\n                    *(unaff_EBP + -0x18) = 0;\n                }\n                goto code_r0x0041145d;\n            }\n        }\n    }\n    extraout_ECX[0x11] = -1;\n    extraout_ECX[0xf] = extraout_ECX[0xf] | 0x10;\n    fcn.0040e84b(extraout_ECX);\n    if (*(unaff_EBP + 0xc) == 0) {\n        uVar3 = 0;\n    }\n    else {\n        uVar3 = *(*(unaff_EBP + 0xc) + 0x20);\n    }\n    iVar2 = (*_sym.imp.USER32.dll_CreateDialogIndirectParamA)(*(unaff_EBP + 0x10), iVar2, uVar3, fcn.00410dd3, 0);\n    fcn.004028b0();\n    *(unaff_EBP + -4) = 0xffffffff;\n    if ((*(unaff_EBP + -0x28) != NULL) && ((**(**(unaff_EBP + -0x28) + 0x18))(unaff_EBP + -0x48),  iVar2 != 0)) {\n        (**(*extraout_ECX + 300))(0);\n    }\n    iVar4 = fcn.0040cdcb();\n    if (iVar4 == 0) {\n        (**(*extraout_ECX + 0x114))();\n    }\n    if ((iVar2 != 0) && ((*(extraout_ECX + 0xf) & 0x10) == 0)) {\n        (*_sym.imp.USER32.dll_DestroyWindow)(iVar2);\n    }\n    if (*(unaff_EBP + -0x14) != 0) {\n        (*_sym.imp.KERNEL32.dll_GlobalUnlock)(*(unaff_EBP + -0x14));\n        (*_sym.imp.KERNEL32.dll_GlobalFree)(*(unaff_EBP + -0x14));\n    }\ncode_r0x0041155f:\n    fcn.00423cd6();\n    return;\n}\n",
        "token_count": 1399
    },
    "004117fa": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.004117fa(uint param_1, uchar *param_2, int32_t param_3)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    ushort *puVar3;\n    \n    if ((param_2 != NULL) && (param_3 != 0)) {\n        iVar2 = fcn.00409b0a();\n        puVar3 = fcn.00403b00(*(iVar2 + 0xc), param_1);\n        if (puVar3 == NULL) {\n            *param_2 = 0;\n            iVar2 = 0;\n        }\n        else {\n            iVar2 = (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)(0, 0, puVar3 + 1, *puVar3, param_2, param_3 + -1, 0, 0)\n            ;\n            param_2[iVar2] = 0;\n        }\n        return iVar2;\n    }\n    fcn.00405a76();\n    pcVar1 = swi(3);\n    iVar2 = (*pcVar1)();\n    return iVar2;\n}\n",
        "token_count": 247
    },
    "0041187b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0041187b(int16_t *vtime, ulong *arg_ch)\n\n{\n    int32_t iVar1;\n    uint wVerMinor;\n    uint var_ah;\n    int16_t var_6h;\n    int16_t var_4h;\n    \n    if (arg_ch == NULL) {\n        fcn.00401090(0x80004005);\n    }\n    iVar1 = (*_sym.imp.OLEAUT32.dll_VariantTimeToSystemTime)(vtime, arg_ch);\n    fcn.004215c0(&wVerMinor, 0, 0x10);\n    if (((((iVar1 != 0) && (iVar1 = (*_sym.imp.OLEAUT32.dll_UnRegisterTypeLib)(*arg_ch, &wVerMinor),  iVar1 != 0)) &&\n         (*vtime == wVerMinor)) && ((vtime[1] == wVerMinor._2_2_ && (vtime[3] == var_ah)))) &&\n       ((vtime[4] == var_ah._2_2_ && ((vtime[5] == var_6h && (vtime[6] == var_4h)))))) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 283
    },
    "00411e1f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: lpCriticalSection\n\nvoid __cdecl fcn.00411e1f(uint arg_8h, uint arg_ch)\n\n{\n    code **ppcVar1;\n    uint uVar2;\n    code *pcVar3;\n    uint *extraout_ECX;\n    int32_t iVar4;\n    int32_t unaff_EBP;\n    uint var_18h;\n    uint lpCriticalSection;\n    uint *puVar5;\n    uint var_4h;\n    \n    fcn.00423c31(0x10);\n    *(unaff_EBP + -0x18) = extraout_ECX;\n    puVar5 = extraout_ECX + 7;\n    *(unaff_EBP + -0x14) = puVar5;\n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(puVar5);\n    if ((*(unaff_EBP + 8) < 1) || (extraout_ECX[3] <= *(unaff_EBP + 8))) goto code_r0x00411f46;\n    ppcVar1 = (*_sym.imp.KERNEL32.dll_TlsGetValue)(*extraout_ECX);\n    if (ppcVar1 == NULL) {\n        *(unaff_EBP + -4) = 0;\n        ppcVar1 = fcn.00411ad2(0x10);\n        if (ppcVar1 == NULL) {\n            ppcVar1 = NULL;\n        }\n        else {\n            *ppcVar1 = vtable.CThreadData.0;\n        }\n        *(unaff_EBP + -4) = 0xffffffff;\n        ppcVar1[2] = NULL;\n        ppcVar1[3] = NULL;\n        fcn.00411bee(ppcVar1);\ncode_r0x00411e76:\n        if (ppcVar1[3] == NULL) {\n            uVar2 = fcn.00401a90(extraout_ECX[3], 4);\n            pcVar3 = (*_sym.imp.KERNEL32.dll_LocalAlloc)(0, uVar2);\n        }\n        else {\n            uVar2 = fcn.00401a90(extraout_ECX[3], 4, 2);\n            pcVar3 = (*_sym.imp.KERNEL32.dll_LocalReAlloc)(ppcVar1[3], uVar2);\n        }\n        if (pcVar3 == NULL) {\n            (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(*(unaff_EBP + -0x14));\n            pcVar3 = fcn.00405a42();\n        }\n        ppcVar1[3] = pcVar3;\n        fcn.004215c0(pcVar3 + ppcVar1[2] * 4, 0, (extraout_ECX[3] - ppcVar1[2]) * 4);\n        ppcVar1[2] = extraout_ECX[3];\n        (*_sym.imp.KERNEL32.dll_TlsSetValue)(*extraout_ECX, ppcVar1);\n        iVar4 = *(unaff_EBP + 8);\n    }\n    else {\n        iVar4 = *(unaff_EBP + 8);\n        if ((ppcVar1[2] <= iVar4) && (*(unaff_EBP + 0xc) != 0)) goto code_r0x00411e76;\n    }\n    if ((ppcVar1[3] != NULL) && (iVar4 < ppcVar1[2])) {\n        *(ppcVar1[3] + iVar4 * 4) = *(unaff_EBP + 0xc);\n    }\n    puVar5 = *(unaff_EBP + -0x14);\ncode_r0x00411f46:\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(puVar5);\n    fcn.00423cd6();\n    return;\n}\n",
        "token_count": 875
    },
    "004123f5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.004123f5(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    uint unaff_retaddr;\n    \n    iVar1 = fcn.00412261(param_1);\n    *param_1 = iVar1;\n    if (iVar1 == 0) {\n        iVar1 = fcn.0041230f(unaff_retaddr);\n        *param_1 = iVar1;\n        iVar1 = (-(iVar1 != 0) & 0x7fffbffe) + 0x80004002;\n    }\n    else {\n        fcn.0041236f();\n        iVar1 = 0;\n    }\n    return iVar1;\n}\n",
        "token_count": 151
    },
    "004126a4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004126a4(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint unaff_EBX;\n    uchar lpString1;\n    uint var_103h;\n    uint32_t var_4h;\n    \n    var_4h = *0x460604 ^ &stack0xfffffffc;\n    if (arg_8h != 0) goto code_r0x004126c9;\n    do {\n        fcn.00405a76();\ncode_r0x004126c9:\n    } while (arg_ch == 0);\n    uVar1 = (*_sym.imp.KERNEL32.dll_lstrlenA)(arg_ch);\n    lpString1 = 0;\n    fcn.004215c0(&var_103h, 0, 0xff);\n    if (uVar1 < 0x101) {\n        uVar2 = (*_sym.imp.USER32.dll_GetWindowTextA)(arg_8h, &lpString1, 0x100);\n        if (uVar2 == uVar1) {\n            iVar3 = (*_sym.imp.KERNEL32.dll_lstrcmpA)(&lpString1, arg_ch);\n            if (iVar3 == 0) goto code_r0x00412729;\n        }\n    }\n    (*_sym.imp.USER32.dll_SetWindowTextA)(arg_8h, arg_ch);\ncode_r0x00412729:\n    fcn.00421e2f(unaff_EBX);\n    return;\n}\n",
        "token_count": 346
    },
    "00412900": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00412900(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00409b0a();\n    (*_sym.imp.KERNEL32.dll_InterlockedIncrement)(iVar1 + 0x2c);\n    return;\n}\n",
        "token_count": 58
    },
    "00412b31": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00412b31(uint32_t param_1)\n\n{\n    if (0x10 < param_1) {\n        param_1 = fcn.00405a76();\n    }\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(param_1 * 0x18 + 0x4637c0);\n    return;\n}\n",
        "token_count": 78
    },
    "00412e5b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00412e5b(int32_t *param_1, int32_t param_2, int32_t param_3)\n\n{\n    if (0x7fffffff - param_2 < param_3) {\n        return 0x80070057;\n    }\n    *param_1 = param_2 + param_3;\n    return 0;\n}\n",
        "token_count": 81
    },
    "00412e7f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00412e7f(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    iVar1 = fcn.00412e5b(&var_4h, arg_8h, arg_ch);\n    if (iVar1 < 0) {\n        fcn.00401090(iVar1);\n    }\n    return var_4h;\n}\n",
        "token_count": 95
    },
    "004133d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004133d0(void)\n\n{\n    uint uVar1;\n    uint unaff_retaddr;\n    \n    uVar1 = fcn.00404180(0x104);\n    fcn.004215c0(uVar1, 0, 0x104);\n    fcn.00405abf(uVar1, 0x104, unaff_retaddr, 0xffffffff);\n    (*_sym.imp.SHLWAPI.dll_PathStripToRootA)(uVar1);\n    fcn.00407be9(0xffffffff);\n    return;\n}\n",
        "token_count": 124
    },
    "00413d7f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00413d7f(uint param_1, uint param_2, uint param_3, uint param_4)\n\n{\n    uint uVar1;\n    \n    uVar1 = fcn.00421529(param_1, param_2, param_3, param_4);\n    fcn.00401000(uVar1);\n    return;\n}\n",
        "token_count": 80
    },
    "004148ad": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.004148ad(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t *piVar3;\n    int32_t *piVar4;\n    uint32_t uVar5;\n    int32_t *extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_14h;\n    uint var_4h;\n    \n    fcn.00423c31(0xc);\n    *(unaff_EBP + -0x14) = extraout_ECX;\n    piVar3 = extraout_ECX + 0x13;\n    if (*piVar3 == 0) {\n        iVar1 = (**(*extraout_ECX + 0x124))(piVar3);\n        if ((iVar1 != 0) && (*piVar3 == 0)) {\n            *(unaff_EBP + -4) = 0;\n            iVar1 = fcn.00409b0a();\n            iVar1 = (**(**(iVar1 + 0x3c) + 8))(extraout_ECX);\n            *(unaff_EBP + -4) = 0xffffffff;\n            *piVar3 = iVar1;\n        }\n        if (*(unaff_EBP + 8) == 0) {\n            iVar1 = *extraout_ECX[0x13];\n            uVar2 = (**(*extraout_ECX + 0x130))();\n            (**(iVar1 + 0xa0))(uVar2);\n        }\n    }\n    piVar3 = extraout_ECX;\n    if (extraout_ECX[0x13] != 0) {\n        while ((piVar3[0xf] & 0x100U) == 0) {\n            piVar3[0xf] = piVar3[0xf] | 0x100;\n            uVar2 = (*_sym.imp.USER32.dll_GetParent)(piVar3[8]);\n            piVar3 = fcn.0040cd23(uVar2);\n            piVar4 = piVar3;\n            if (piVar3 != NULL) {\n                piVar4 = piVar3[8];\n            }\n            uVar5 = (*_sym.imp.USER32.dll_GetWindowLongA)(piVar4, 0xfffffff0);\n            if (((uVar5 & 0x40000000) == 0) || (piVar3 == NULL)) break;\n        }\n    }\n    fcn.00423cd6();\n    return;\n}\n",
        "token_count": 558
    },
    "00415784": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00415784(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, uint arg_14h, int32_t *arg_18h)\n\n{\n    uint uVar1;\n    uint *puVar2;\n    \n    if (((arg_8h == 0) || (arg_10h == 0)) || (arg_18h == NULL)) {\n        uVar1 = 0x80004005;\n    }\n    else {\n        uVar1 = (**(*arg_18h + 0x10))\n                          (arg_18h, (*(arg_8h + 0x24) != 0) * '\\x02' + '\\x02', arg_ch, arg_8h, arg_14h, arg_10h, 0);\n        if (arg_ch != 0) {\n            puVar2 = arg_8h + 0x14;\n            do {\n                fcn.0040597d(*puVar2);\n                puVar2 = puVar2 + 0xd;\n                arg_ch = arg_ch + -1;\n            } while (arg_ch != 0);\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 265
    },
    "00415997": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_14h\n\nvoid __cdecl fcn.00415997(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint uVar1;\n    int64_t iVar2;\n    uint uVar3;\n    int32_t extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_14h;\n    uint var_4h;\n    \n    fcn.00423c31(0xc);\n    *(unaff_EBP + -0x14) = extraout_ECX;\n    uVar3 = *(unaff_EBP + 0x10);\n    uVar1 = *(unaff_EBP + 0xc);\n    *(extraout_ECX + 8) = uVar1;\n    *(extraout_ECX + 0x18) = uVar3;\n    *(extraout_ECX + 0x10) = 0;\n    *(extraout_ECX + 0x14) = 0;\n    fcn.004215c0(uVar1, 0, uVar3);\n    fcn.0040597d(*(extraout_ECX + 0xc));\n    iVar2 = *(unaff_EBP + 8) * 0x34;\n    *(extraout_ECX + 0xc) = 0;\n    *(unaff_EBP + -4) = 0;\n    uVar3 = fcn.0040594d(-(iVar2 >> 0x20 != 0) | iVar2);\n    *(extraout_ECX + 0xc) = uVar3;\n    if (*(extraout_ECX + 0xc) != 0) {\n        *(extraout_ECX + 0x10) = *(unaff_EBP + 8);\n    }\n    fcn.00423cd6();\n    return;\n}\n",
        "token_count": 419
    },
    "00415aa0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00415aa0(uint arg_8h, int32_t arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    int32_t *in_ECX;\n    \n    (**(*in_ECX + 0xc4))(arg_8h, arg_ch + 8, arg_ch, 0, arg_10h, arg_14h, arg_18h, arg_1ch, 0, 0, 0);\n    return;\n}\n",
        "token_count": 120
    },
    "00415e38": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00415e38(int32_t param_1)\n\n{\n    uint *puVar1;\n    uint *puVar2;\n    code *pcVar3;\n    int32_t iVar4;\n    uint uStack24;\n    uint *puStack20;\n    int32_t *var_4h;\n    \n    puStack20 = 0x10;\n    puVar1 = param_1 + 0x78;\n    uStack24 = 0;\n    var_4h = param_1;\n    fcn.004215c0(puVar1);\n    puVar2 = *(param_1 + 0x50);\n    var_4h = NULL;\n    *puVar1 = 0x10;\n    if (puVar2 == NULL) {\n        uStack24 = 0x45f468;\n        puStack20 = &stack0xfffffffc;\n        fcn.00421cb9(&uStack24, 0x459604);\n        pcVar3 = swi(3);\n        (*pcVar3)();\n        return;\n    }\n    puStack20 = &var_4h;\n    uStack24 = 0x455e88;\n    iVar4 = (***puVar2)(puVar2);\n    if (-1 < iVar4) {\n        (**(*var_4h + 0xc))(var_4h, puVar1);\n        (**(*var_4h + 8))(var_4h);\n    }\n    return;\n}\n",
        "token_count": 322
    },
    "00416aff": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00416aff(int32_t param_1, int32_t param_2, uint *param_3)\n\n{\n    uint *puVar1;\n    \n    puVar1 = *(param_2 * 0x30 + 4 + *(param_1 + 0x14)) + *(param_1 + 8);\n    *param_3 = *puVar1;\n    param_3[1] = puVar1[1];\n    param_3[2] = puVar1[2];\n    param_3[3] = puVar1[3];\n    *(param_3 + 4) = *(puVar1 + 4);\n    *(param_3 + 0x12) = *(puVar1 + 0x12);\n    return;\n}\n",
        "token_count": 174
    },
    "00416b3e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00416b3e(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    uint var_10h;\n    uint var_ah;\n    ushort var_6h;\n    ushort var_4h;\n    \n    fcn.004215c0(&var_10h, 0, 0x10);\n    var_10h._0_2_ = arg_8h;\n    var_10h._2_2_ = arg_ch;\n    var_ah._0_2_ = arg_10h;\n    var_ah._2_2_ = arg_14h;\n    var_6h = arg_18h;\n    var_4h = arg_1ch;\n    iVar1 = fcn.0041187b(&var_10h, in_ECX);\n    *(in_ECX + 8) = iVar1 == 0;\n    return;\n}\n",
        "token_count": 245
    },
    "00416cdd": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00416cdd(int32_t param_1)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t unaff_retaddr;\n    \n    cVar1 = fcn.00415848(&stack0x00000004);\n    if (cVar1 == '\\0') {\n        iVar2 = 0;\n    }\n    else {\n        iVar2 = *(unaff_retaddr * 0x30 + 4 + *(param_1 + 0x14)) + *(param_1 + 8);\n    }\n    return iVar2;\n}\n",
        "token_count": 131
    },
    "00416db9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00416db9(uint arg_8h, uint arg_ch, uint arg_10h, int32_t arg_14h, int32_t arg_18h, int32_t arg_1ch)\n\n{\n    int32_t in_ECX;\n    \n    if (arg_1ch == 0) {\n        arg_1ch = 0;\n    }\n    else {\n        arg_1ch = arg_1ch - *(in_ECX + 8);\n    }\n    if (arg_18h == 0) {\n        arg_18h = 0;\n    }\n    else {\n        arg_18h = arg_18h - *(in_ECX + 8);\n    }\n    fcn.00416c14(*(in_ECX + 0x14) * 0x34 + *(in_ECX + 0xc), arg_8h, arg_ch, arg_10h, 0, 0, 0, arg_14h - *(in_ECX + 8), \n                 arg_18h, arg_1ch, 0);\n    *(in_ECX + 0x14) = *(in_ECX + 0x14) + 1;\n    return;\n}\n",
        "token_count": 268
    },
    "00416e0d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.00416e0d(void)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    code *pcVar3;\n    int32_t iVar4;\n    int32_t extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_28h;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.00423bfe();\n    iVar4 = *(extraout_ECX + 0x3c);\n    iVar1 = *(extraout_ECX + 0x34);\n    *(unaff_EBP + -0x14) = *(extraout_ECX + 0x38) - *(extraout_ECX + 0x30);\n    *(unaff_EBP + -0x10) = iVar4 - iVar1;\n    fcn.0040a39a(0);\n    *(unaff_EBP + -4) = 0;\n    fcn.00410989(unaff_EBP + -0x14);\n    piVar2 = *(extraout_ECX + 0x50);\n    if (piVar2 == NULL) {\n        var_10h = 0x45f468;\n        fcn.00421cb9(&var_10h, 0x459604);\n        pcVar3 = swi(3);\n        (*pcVar3)();\n        return;\n    }\n    var_10h = 1;\n    iVar4 = (**(*piVar2 + 0x44))(piVar2);\n    if (-1 < iVar4) {\n        iVar4 = (**(**(extraout_ECX + 0x50) + 0x48))(*(extraout_ECX + 0x50), 1, unaff_EBP + -0x14);\n        if (-1 < iVar4) {\n            fcn.00410a17(unaff_EBP + -0x14);\n            *(extraout_ECX + 0x38) = *(extraout_ECX + 0x30) + *(unaff_EBP + -0x14);\n            *(extraout_ECX + 0x3c) = *(extraout_ECX + 0x34) + *(unaff_EBP + -0x10);\n        }\n    }\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.0040a3ee();\n    fcn.00423cd6();\n    return;\n}\n",
        "token_count": 566
    },
    "004185b7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004185b7(int32_t **param_1)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint uStack24;\n    uint *puStack20;\n    int32_t **var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    if ((param_1[2] != 0x80010001) && (piVar1 = *param_1,  piVar1 != NULL)) {\n        var_4h = param_1;\n        if (piVar1[0x14] == 0) {\n            uStack24 = 0x45f468;\n            fcn.00421cb9(&uStack24, 0x459604);\n            pcVar2 = swi(3);\n            (*pcVar2)();\n            return;\n        }\n        puStack20 = &var_4h;\n        uStack24 = 0x455c98;\n        iVar3 = (***piVar1[0x14])(piVar1[0x14]);\n        if (iVar3 < 0) {\n            iVar3 = fcn.004169ad();\n            if (iVar3 != 0) {\n                uVar4 = 0xd;\n                if (param_1[3][0x24] != 0) {\n                    uVar4 = 0x800d;\n                }\n                (**(**param_1 + 0x70))(*param_1, param_1[2], uVar4, iVar3);\n            }\n        }\n        else {\n            (*(*var_4h)[3])(var_4h, param_1[2], param_1[3] != NULL, param_1 + 4);\n            (*(*var_4h)[2])(var_4h);\n        }\n    }\n    return;\n}\n",
        "token_count": 411
    },
    "0041878c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041878c(uint32_t arg_8h, uint32_t arg_ch, uint *arg_10h, uint arg_14h)\n\n{\n    uint32_t uVar1;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (((arg_8h & 3) == 0) || (uVar1 = 0,  arg_ch == 0)) {\n        return 0;\n    }\ncode_r0x004187b0:\n    // switch table (31 cases) at 0x418824\n    switch(*arg_10h) {\n    case 1:\n        var_4h = 3;\n        break;\n    case 2:\n    case 0x14:\n        var_4h = 5;\n        break;\n    case 3:\n    case 9:\n    case 10:\n    case 0x17:\n        var_4h = 6;\n        break;\n    default:\n        goto code_r0x004187c6;\n    case 6:\n    case 7:\n    case 8:\n    case 0xb:\n    case 0xc:\n    case 0xf:\n    case 0x10:\n    case 0x13:\n    case 0x15:\n        var_4h = 7;\n        break;\n    case 0x18:\n        var_4h = 2;\n        break;\n    case 0x19:\n        var_4h = 1;\n        break;\n    case 0x1f:\n        var_4h = 4;\n    }\n    var_20h = 0xffffffff;\n    var_24h = 3;\n    var_1ch = 0;\n    var_18h = 0;\n    var_14h = 0;\n    var_ch = 0;\n    var_8h = arg_14h;\n    fcn.00416075(&var_24h);\n    return var_ch;\ncode_r0x004187c6:\n    uVar1 = uVar1 + 1;\n    arg_10h = arg_10h + 9;\n    if (arg_ch <= uVar1) {\n        return 0;\n    }\n    goto code_r0x004187b0;\n}\n",
        "token_count": 533
    },
    "00418932": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __thiscall fcn.00418932(int32_t param_1, uint *param_2)\n\n{\n    uint32_t uVar1;\n    uint *puVar2;\n    int32_t unaff_retaddr;\n    \n    uVar1 = fcn.00415848(&param_2);\n    if (uVar1 == '\\0') {\n        uVar1 = uVar1 & 0xffffff00;\n    }\n    else {\n        puVar2 = *(unaff_retaddr * 0x30 + 4 + *(param_1 + 0x14)) + *(param_1 + 8);\n        *param_2 = *puVar2;\n        *(param_2 + 1) = *(puVar2 + 1);\n        uVar1 = CONCAT31(unaff_retaddr * 0x30 >> 8, 1);\n    }\n    return uVar1;\n}\n",
        "token_count": 197
    },
    "00418967": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __thiscall fcn.00418967(int32_t param_1, uint *param_2)\n\n{\n    uint32_t uVar1;\n    uint *puVar2;\n    int32_t unaff_retaddr;\n    \n    uVar1 = fcn.00415848(&param_2);\n    if (uVar1 == '\\0') {\n        uVar1 = uVar1 & 0xffffff00;\n    }\n    else {\n        puVar2 = *(unaff_retaddr * 0x30 + 4 + *(param_1 + 0x14)) + *(param_1 + 8);\n        *param_2 = *puVar2;\n        param_2[1] = puVar2[1];\n        param_2[2] = puVar2[2];\n        param_2[3] = puVar2[3];\n        uVar1 = CONCAT31(unaff_retaddr * 0x30 >> 8, 1);\n    }\n    return uVar1;\n}\n",
        "token_count": 221
    },
    "00418a71": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __thiscall fcn.00418a71(int32_t param_1, uint *param_2)\n\n{\n    uint32_t uVar1;\n    uint *puVar2;\n    int32_t unaff_retaddr;\n    \n    uVar1 = fcn.00415848(&param_2);\n    if (uVar1 == '\\0') {\n        uVar1 = uVar1 & 0xffffff00;\n    }\n    else {\n        puVar2 = *(unaff_retaddr * 0x30 + 4 + *(param_1 + 0x14)) + *(param_1 + 8);\n        *puVar2 = *param_2;\n        puVar2[1] = param_2[1];\n        puVar2[2] = param_2[2];\n        puVar2[3] = param_2[3];\n        uVar1 = CONCAT31(unaff_retaddr * 0x30 >> 8, 1);\n    }\n    return uVar1;\n}\n",
        "token_count": 222
    },
    "00419ea5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00419ea5(void)\n\n{\n    uint32_t uVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t **ppiVar5;\n    int32_t *extraout_ECX;\n    int32_t **ppiVar6;\n    int32_t **in_FS_OFFSET;\n    uchar *puVar7;\n    int32_t *in_stack_ffffff78;\n    uchar *puStack132;\n    uchar *puStack128;\n    int32_t *piStack120;\n    int32_t *piStack116;\n    int32_t *piStack112;\n    int32_t *in_stack_ffffff94;\n    int32_t *piVar8;\n    uchar auStack104 [24];\n    uint uStack80;\n    uint uStack76;\n    uint uStack72;\n    uint uStack68;\n    uint uStack64;\n    uint uStack60;\n    uchar auStack56 [24];\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    uint uStack20;\n    uint uStack16;\n    uint uStack12;\n    uint32_t uStack8;\n    \n    uStack8 = *0x460604 ^ &stack0xffffff84;\n    puStack128 = 0x419ec3;\n    fcn.00423bfe();\n    piStack120 = extraout_ECX[4];\n    if (extraout_ECX[0x12] == 0) {\n        if (extraout_ECX[2] == NULL) goto code_r0x0041a1e3;\n        puStack128 = &stack0xffffff8c;\n        puStack132 = &stack0xffffff90;\n        in_stack_ffffff78 = 0x455cd8;\n        iVar3 = (**(*extraout_ECX[2] + 0xc))();\n        if (iVar3 < 0) goto code_r0x0041a1e3;\n        puStack128 = 0x456404;\n        puStack132 = &stack0xffffff98;\n        fcn.004168bb();\n        uStack72 = 0xffffffff;\n        in_stack_ffffff78 = 0x4563ec;\n        puVar7 = &stack0xffffffc8;\n        uStack80 = 0;\n        uStack76 = 0;\n        uStack68 = 0x18;\n        uStack64 = 0;\n        uStack60 = 0x1fb;\n        fcn.004168bb();\n        uStack24 = 0xffffffff;\n        uStack32 = 0x1c;\n        uStack28 = 0;\n        uStack20 = 0x20;\n        uStack16 = 0;\n        uStack12 = 0x1e;\n        iVar3 = (**(*piStack112 + 0x10))();\n        if (iVar3 < 0) {\n            (**(*piStack112 + 8))();\n            goto code_r0x0041a1e3;\n        }\n        iVar3 = (**(*piStack112 + 0x18))(piStack112, 0, 0);\n        if (iVar3 < 0) {\n            (**(*piStack112 + 8))(piStack112);\n            goto code_r0x0041a1e3;\n        }\n        extraout_ECX[5] = 0;\n        piStack116 = NULL;\n        extraout_ECX[4] = 0;\n        extraout_ECX[0xd] = 0;\n        (**(*piStack112 + 8))(piStack112);\n    }\n    else {\n        in_stack_ffffff78 = extraout_ECX[0x13];\n        puStack128 = &stack0xffffff94;\n        puStack132 = 0x455ee8;\n        iVar3 = (**(*in_stack_ffffff78 + 0x14))();\n        if (iVar3 < 0) goto code_r0x0041a1e3;\n        puStack128 = &stack0xffffff8c;\n        puStack132 = 0x455ec8;\n        piVar8 = in_stack_ffffff94;\n        iVar3 = (***in_stack_ffffff94)();\n        in_stack_ffffff78 = in_stack_ffffff94;\n        if (-1 < iVar3) {\n            piStack112 = NULL;\n            iVar3 = (**(*piStack116 + 0x10))();\n            in_stack_ffffff78 = in_stack_ffffff94;\n            if (-1 < iVar3) {\n                (**(*piStack112 + 0x14))();\n                (**(*piStack112 + 8))();\n                in_stack_ffffff78 = in_stack_ffffff94;\n            }\n            (**(*piStack116 + 8))();\n        }\n        in_stack_ffffff94 = piVar8;\n        iVar3 = fcn.0040594d();\n        if (iVar3 == 0) {\n            iVar3 = 0;\n        }\n        else {\n            iVar3 = fcn.004196f8();\n        }\n        extraout_ECX[0x14] = iVar3;\n        (**(*in_stack_ffffff94 + 8))();\n        if (*extraout_ECX[0x14] != NULL) {\n            puStack132 = 0x419f89;\n            piStack120 = *extraout_ECX[0x14];\n            fcn.00416aea();\n        }\n        puStack128 = 0x419f90;\n        iVar3 = fcn.0040594d();\n        if (iVar3 == 0) {\n            iVar3 = 0;\n        }\n        else {\n            piStack120 = NULL;\n            puStack132 = 0x419fa2;\n            iVar3 = fcn.004157e3();\n        }\n        extraout_ECX[0x15] = iVar3;\n        puStack128 = 0x419fb5;\n        fcn.0041986f(*extraout_ECX[0x14]);\n        *(extraout_ECX[0x14] + 8) = extraout_ECX[0x15];\n        uVar1 = *(extraout_ECX[0x15] + 0xc);\n        extraout_ECX[4] = uVar1;\n        if (0x3333333 < uVar1) goto code_r0x0041a1e3;\n        puStack128 = uVar1 * 0x28;\n        puStack132 = 0x419fe2;\n        in_stack_ffffff78 = (*_sym.imp.ole32.dll_CoTaskMemAlloc)();\n        extraout_ECX[5] = in_stack_ffffff78;\n        if (in_stack_ffffff78 == NULL) {\n            puStack132 = 0x45f338;\n            puStack128 = &stack0xffffff84;\n            fcn.00421cb9(&stack0xffffff7c, 0x45950c);\n            pcVar2 = swi(3);\n            (*pcVar2)();\n            return;\n        }\n        puStack128 = extraout_ECX[4] * 0x28;\n        puStack132 = NULL;\n        puVar7 = 0x41a003;\n        fcn.004215c0();\n        puStack128 = 0x41a00e;\n        fcn.0041971a();\n        puStack128 = 0x41a016;\n        fcn.00416aa7();\n    }\n    in_stack_ffffff94 = NULL;\n    if (0 < extraout_ECX[4]) {\n        iVar3 = 0;\n        do {\n            puStack128 = 0x1c;\n            puStack132 = 0x41a133;\n            piStack116 = fcn.0040594d();\n            puStack128 = NULL;\n            if (piStack116 == NULL) {\n                uVar4 = 0;\n            }\n            else {\n                puStack132 = 0x41a147;\n                uVar4 = fcn.0041cca1();\n            }\n            puStack128 = 0xffffffff;\n            in_stack_ffffff94 = in_stack_ffffff94 + 1;\n            *(iVar3 + 0x24 + extraout_ECX[5]) = uVar4;\n            iVar3 = iVar3 + 0x28;\n        } while (in_stack_ffffff94 < extraout_ECX[4]);\n    }\n    if (puVar7 != NULL) {\n        if (0 < piStack120) {\n            ppiVar6 = puVar7 + 0x24;\n            piStack116 = -0x24 - puVar7;\n            in_stack_ffffff94 = piStack120;\n            do {\n                piStack120 = (*ppiVar6)[1];\n                while (piStack120 != NULL) {\n                    puStack128 = &stack0xffffff88;\n                    puStack132 = 0x41a1aa;\n                    ppiVar5 = fcn.00408771();\n                    in_stack_ffffff78 = *ppiVar5;\n                    puStack132 = 0x1;\n                    puVar7 = 0x41a1b6;\n                    (**(*extraout_ECX + 8))();\n                }\n                puStack128 = 0x41a1c2;\n                fcn.0041cbc9();\n                if (*ppiVar6 != NULL) {\n                    puStack128 = 0x1;\n                    puStack132 = 0x41a1cf;\n                    (**(**ppiVar6 + 4))();\n                }\n                ppiVar6 = ppiVar6 + 10;\n                in_stack_ffffff94 = in_stack_ffffff94 + -1;\n            } while (in_stack_ffffff94 != NULL);\n        }\n        puStack132 = 0x41a1e0;\n        puStack128 = puVar7;\n        (*_sym.imp.ole32.dll_CoTaskMemFree)();\n    }\ncode_r0x0041a1e3:\n    *in_FS_OFFSET = in_stack_ffffff78;\n    piStack112 = 0x41a1fb;\n    fcn.00421e2f(in_stack_ffffff94);\n    return;\n}\n",
        "token_count": 2179
    },
    "0041ad51": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: pvargDest\n// WARNING: Variable defined which should be unmapped: var_18h\n\nvoid fcn.0041ad51(void)\n\n{\n    code *pcVar1;\n    uint *puVar2;\n    int32_t **ppiVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t *piVar6;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint pvargDest;\n    uint var_4h;\n    \n    fcn.00423bfe(0x10);\n    *(unaff_EBP + -0x1c) = extraout_ECX;\n    *extraout_ECX = vtable.CDataSourceControl.0;\n    pcVar1 = extraout_ECX[0x16];\n    *(unaff_EBP + -4) = 0;\n    if ((((pcVar1 != NULL) && (extraout_ECX[0x14] != NULL)) &&\n        (puVar2 = *extraout_ECX[0x14],  iVar5 = (***puVar2)(puVar2, 0x455ec8, unaff_EBP + -0x14),  -1 < iVar5)) &&\n       (piVar6 = *(unaff_EBP + -0x14),  piVar6 != NULL)) {\n        *(unaff_EBP + -0x10) = 0;\n        iVar5 = (**(*piVar6 + 0x10))(piVar6, 0x456008, unaff_EBP + -0x10);\n        if ((-1 < iVar5) && (piVar6 = *(unaff_EBP + -0x10),  piVar6 != NULL)) {\n            (**(*piVar6 + 0x18))(piVar6, extraout_ECX[0x16]);\n            (**(**(unaff_EBP + -0x10) + 8))(*(unaff_EBP + -0x10));\n        }\n        (**(**(unaff_EBP + -0x14) + 8))(*(unaff_EBP + -0x14));\n    }\n    while (((extraout_ECX[9] != NULL && (ppiVar3 = *(extraout_ECX[7] + 8),  ppiVar3 != NULL)) && (*ppiVar3 != NULL))) {\n        (**(**ppiVar3 + 0xbc))(ppiVar3[2], 0);\n        (*ppiVar3)[0x26] = 0;\n    }\n    *(unaff_EBP + -0x18) = extraout_ECX + 6;\n    fcn.0041cbc9();\n    if (extraout_ECX[0x10] != NULL) {\n        iVar5 = 0;\n        pcVar1 = extraout_ECX[0xe];\n        if (0 < pcVar1) {\n            *(unaff_EBP + -0x10) = 0;\n            do {\n                (*_sym.imp.OLEAUT32.dll_VariantCopy)(extraout_ECX[0x10] + *(unaff_EBP + -0x10));\n                *(unaff_EBP + -0x10) = *(unaff_EBP + -0x10) + 0x10;\n                iVar5 = iVar5 + 1;\n            } while (iVar5 < extraout_ECX[0xe]);\n            pcVar1 = extraout_ECX[0xe];\n        }\n        if (pcVar1 != NULL) {\n            fcn.0040597d(extraout_ECX[0xf]);\n            fcn.0040597d(extraout_ECX[0x10]);\n        }\n    }\n    piVar6 = extraout_ECX[2];\n    if (piVar6 != NULL) {\n        (**(*piVar6 + 8))(piVar6);\n    }\n    piVar6 = extraout_ECX[3];\n    if (piVar6 != NULL) {\n        (**(*piVar6 + 8))(piVar6);\n    }\n    if (extraout_ECX[5] != NULL) {\n        pcVar1 = extraout_ECX[4];\n        *(unaff_EBP + -0x10) = 0;\n        if (0 < pcVar1) {\n            iVar5 = 0;\n            do {\n                iVar4 = *(*(extraout_ECX[5] + iVar5 + 0x24) + 4);\n                *(unaff_EBP + -0x14) = iVar4;\n                while (iVar4 != 0) {\n                    piVar6 = fcn.00408771(unaff_EBP + -0x14);\n                    iVar4 = *(unaff_EBP + -0x14);\n                    *(*piVar6 + 0x98) = 0;\n                }\n                fcn.0041cbc9();\n                if (*(extraout_ECX[5] + iVar5 + 0x24) != NULL) {\n                    (**(**(extraout_ECX[5] + iVar5 + 0x24) + 4))(1);\n                }\n                *(unaff_EBP + -0x10) = *(unaff_EBP + -0x10) + 1;\n                iVar5 = iVar5 + 0x28;\n            } while (*(unaff_EBP + -0x10) < extraout_ECX[4]);\n        }\n        (*_sym.imp.ole32.dll_CoTaskMemFree)(extraout_ECX[5]);\n    }\n    if (extraout_ECX[0xd] != NULL) {\n        (*_sym.imp.ole32.dll_CoTaskMemFree)(extraout_ECX[0xd]);\n    }\n    if (extraout_ECX[0x15] != NULL) {\n        fcn.00419765(*extraout_ECX[0x14]);\n        fcn.0041580c();\n    }\n    pcVar1 = extraout_ECX[0x15];\n    if (pcVar1 != NULL) {\n        fcn.0041580c();\n        fcn.0040597d(pcVar1);\n    }\n    pcVar1 = extraout_ECX[0x14];\n    if (pcVar1 != NULL) {\n        fcn.0041ab30();\n        fcn.0040597d(pcVar1);\n    }\n    piVar6 = extraout_ECX[0x13];\n    if (piVar6 != NULL) {\n        (**(*piVar6 + 8))(piVar6);\n    }\n    piVar6 = extraout_ECX[0x12];\n    if (piVar6 != NULL) {\n        (**(*piVar6 + 8))(piVar6);\n    }\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.0041ccc4();\n    fcn.00423cd6();\n    return;\n}\n",
        "token_count": 1540
    },
    "0041b088": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0041b088(uint param_1, uint param_2)\n\n{\n    code *pcVar1;\n    char cVar2;\n    uint32_t uVar3;\n    uint *puVar4;\n    uint32_t *puVar5;\n    uint arg_8h;\n    int32_t extraout_ECX;\n    uint *in_FS_OFFSET;\n    uint uStackY172;\n    uchar *puStackY168;\n    uint uStack112;\n    ulong uStack104;\n    ushort uStack96;\n    uint32_t uStack88;\n    ushort uStack80;\n    uint uStack72;\n    uint uStack68;\n    uint uStack64;\n    int16_t iStack60;\n    uint16_t uStack58;\n    uint16_t uStack56;\n    uint uStack36;\n    uint32_t uStack32;\n    ushort uStack28;\n    uchar uStack26;\n    uchar uStack25;\n    uint16_t uStack24;\n    uint16_t uStack22;\n    uint16_t uStack20;\n    uchar uStack18;\n    uchar uStack17;\n    uint uStack16;\n    uint32_t uStack8;\n    \n    uStack8 = *0x460604 ^ &stack0xffffff90;\n    uStack112 = 0xcc;\n    fcn.00423bfe();\n    uStack36 = param_1;\n    uStack64 = 0;\n    if (*(extraout_ECX + 0x48) != 0) goto code_r0x0041b0c7;\n    do {\n        fcn.00405a76();\ncode_r0x0041b0c7:\n    } while (*(extraout_ECX + 0x54) == 0);\n    fcn.0041d2de();\n    uStack32 = 3;\n    fcn.00418bc3();\n    if ((uStack32 == 3) || (cVar2 = fcn.00416cac(),  pcVar1 = _sym.imp.OLEAUT32.dll_VariantCopy,  cVar2 == '\\0')) {\n        fcn.0041d474();\n        (*_sym.imp.OLEAUT32.dll_VariantCopy)();\n        goto code_r0x0041b57d;\n    }\n    uVar3 = uStack32 & 0xffff;\n    if (uVar3 < 0x82) {\n        if (uVar3 != 0x81) {\n            if (uVar3 < 9) {\n                if (uVar3 == 8) goto code_r0x0041b520;\n                if (uVar3 == 2) {\ncode_r0x0041b291:\n                    fcn.00416cdd();\n                    fcn.0041d207();\n                    fcn.0041d2be();\n                }\n                else if (uVar3 == 3) {\ncode_r0x0041b266:\n                    puVar4 = fcn.00416cdd();\n                    fcn.0041d22e(*puVar4, 3);\n                    fcn.0041d2be();\n                }\n                else if (uVar3 == 4) {\n                    puVar5 = fcn.00416cdd();\n                    uStack88 = *puVar5;\n                    uStack96 = 4;\n                    uStack32 = uStack88;\n                    fcn.0041d2be();\n                }\n                else if (uVar3 == 5) {\n                    fcn.00416cdd();\n                    fcn.0041d2be();\n                }\n                else if (uVar3 == 6) {\n                    puVar4 = fcn.00416cdd();\n                    uStack72 = *puVar4;\n                    uStack68 = puVar4[1];\n                    uStack80 = 6;\n                    fcn.0041d2be();\n                }\n                else {\n                    if (uVar3 != 7) goto code_r0x0041b56b;\n                    fcn.00416cdd();\n                    fcn.0041d2be();\n                }\n            }\n            else if (uVar3 == 0xb) {\n                fcn.00416cdd();\n                fcn.0041d207();\n                fcn.0041d2be();\n            }\n            else {\n                if (uVar3 != 0xc) {\n                    if (0xf < uVar3) {\n                        if (uVar3 < 0x12) {\n                            fcn.00416cdd();\n                            fcn.0041d2be();\n                            goto code_r0x0041b314;\n                        }\n                        if (uVar3 == 0x12) goto code_r0x0041b291;\n                        if (uVar3 == 0x13) goto code_r0x0041b266;\n                    }\n                    goto code_r0x0041b56b;\n                }\n                fcn.00416cdd();\n                fcn.0041d474();\n                fcn.0041d2be();\n            }\n            goto code_r0x0041b314;\n        }\n        fcn.00416cdd();\n        puVar4 = fcn.004048c0();\n        fcn.0041d570(*puVar4, 8);\n        fcn.0041d2be();\n        (*pcVar1)();\ncode_r0x0041b560:\n        fcn.004028b0();\n    }\n    else {\n        if (uVar3 == 0x82) {\ncode_r0x0041b520:\n            arg_8h = fcn.00416cdd();\n            puVar4 = fcn.00406069(arg_8h);\n            fcn.0041d570(*puVar4, 8);\n            fcn.0041d2be();\n            (*pcVar1)();\n            goto code_r0x0041b560;\n        }\n        if (uVar3 == 0x83) {\n            cVar2 = fcn.00418908();\n            if (cVar2 != '\\0') {\n                while (uStack28._1_1_ != 0) {\n                    uStack28._1_1_ = uStack28 >> 8;\n                    uStack28._1_1_ = uStack28._1_1_ - 1;\n                    uStack28 = uStack28 & 0xff | uStack28._1_1_ << 8;\n                }\n                fcn.0041d2be();\n                goto code_r0x0041b314;\n            }\n        }\n        else if (uVar3 == 0x85) {\n            cVar2 = fcn.00418932();\n            if (cVar2 != '\\0') {\n                uStack24 = 0;\n                uStack22 = 0;\n                uStack20 = 0;\n                uStack18 = 0;\n                uStack17 = 0;\n                uStack16 = 0;\n                puStackY168 = 0x41b4ab;\n                fcn.00416b3e(iStack60, uStack58, uStack56, 0, 0, 0);\n                uStack112 = CONCAT22(uStack112._2_2_, 7);\n                uStack104 = CONCAT17(uStack17, CONCAT16(uStack18, CONCAT24(uStack20, CONCAT22(uStack22, uStack24))));\n                uStackY172 = 0x41b4c7;\n                puStackY168 = &stack0xffffff90;\n                fcn.0041d2be();\n                goto code_r0x0041b314;\n            }\n        }\n        else if (uVar3 == 0x86) {\n            cVar2 = fcn.00418932();\n            if (cVar2 != '\\0') {\n                uStack24 = 0;\n                uStack22 = 0;\n                uStack20 = 0;\n                uStack18 = 0;\n                uStack17 = 0;\n                uStack16 = 0;\n                fcn.00416b9e();\n                fcn.0041d2be();\n                goto code_r0x0041b314;\n            }\n        }\n        else if ((uVar3 == 0x87) && (cVar2 = fcn.00418967(),  cVar2 != '\\0')) {\n            puStackY168 = 0x41b3f7;\n            fcn.00418b13(uStack28, CONCAT11(uStack25, uStack26), uStack24, uStack22, uStack20, \n                         CONCAT11(uStack17, uStack18));\n            puStackY168 = &stack0xffffff54;\n            uStackY172 = 0x41b412;\n            fcn.0041d2be();\ncode_r0x0041b314:\n            (*pcVar1)();\n        }\n    }\ncode_r0x0041b56b:\n    fcn.0041d474();\n    (*pcVar1)();\ncode_r0x0041b57d:\n    *in_FS_OFFSET = param_2;\n    fcn.00421e2f(param_2);\n    return;\n}\n",
        "token_count": 1988
    },
    "0041bc86": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041bc86(int32_t param_1, uint param_2)\n\n{\n    uint8_t uVar1;\n    int32_t unaff_retaddr;\n    \n    if (*(param_1 + 0x50) != 0) {\n        fcn.00415b97(param_2);\n        return;\n    }\n    uVar1 = fcn.0041b8f2(param_1, 0);\n    if (((-(unaff_retaddr != 0) & 0x10U) + 0x10 & uVar1) != 0) {\n        (*_sym.imp.USER32.dll_SendMessageA)(*(param_1 + 0x20), 0xf4, unaff_retaddr != 0, 1);\n    }\n    return;\n}\n",
        "token_count": 173
    },
    "0041cb52": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.0041cb52(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    int32_t in_ECX;\n    uint var_4h;\n    \n    iVar1 = arg_8h;\n    puVar2 = fcn.0041c968(arg_8h, &arg_8h, &var_4h);\n    if (puVar2 == NULL) {\n        if (*(in_ECX + 4) == 0) {\n            fcn.0041cf51(*(in_ECX + 8), 1);\n        }\n        puVar2 = fcn.0041cb04();\n        puVar2[1] = iVar1;\n        *puVar2 = *(arg_8h * 4 + *(in_ECX + 4));\n        *(arg_8h * 4 + *(in_ECX + 4)) = puVar2;\n    }\n    return puVar2 + 2;\n}\n",
        "token_count": 217
    },
    "0041cdda": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: lpClassName\n\nvoid fcn.0041cdda(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t unaff_EBP;\n    uint var_18h;\n    uint var_14h;\n    uint lpClassName;\n    uint var_4h;\n    \n    fcn.00423bfe(0xc);\n    fcn.00409b0a();\n    fcn.00412ac4(1);\n    *(unaff_EBP + -0x14) = 0;\n    fcn.00412f8f(unaff_EBP + -0x10, 0x453650, unaff_EBP + -0x14);\n    *(unaff_EBP + -4) = 0;\n    while (*(*(unaff_EBP + -0x10) + -0xc) != 0) {\n        iVar1 = fcn.00409b0a();\n        (*_sym.imp.USER32.dll_UnregisterClassA)(*(unaff_EBP + -0x10), *(iVar1 + 8));\n        uVar2 = fcn.00412f8f(unaff_EBP + -0x18, 0x453650, unaff_EBP + -0x14);\n        *(unaff_EBP + -4) = 1;\n        fcn.00408d93(uVar2);\n        *(unaff_EBP + -4) = 0;\n        fcn.004028b0();\n    }\n    fcn.00404040();\n    fcn.00412b31(1);\n    fcn.004028b0();\n    fcn.00423cd6();\n    return;\n}\n",
        "token_count": 420
    },
    "0041d2de": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041d2de(uint param_1)\n\n{\n    fcn.004215c0(param_1, 0, 0x10);\n    return;\n}\n",
        "token_count": 40
    },
    "0041d60d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041d60d(int32_t param_1)\n\n{\n    int16_t iVar1;\n    int16_t *piVar2;\n    \n    if (*(param_1 + 2) == -1) {\n        piVar2 = param_1 + 0x1a;\n    }\n    else {\n        piVar2 = param_1 + 0x12;\n    }\n    if (*piVar2 == -1) {\n        piVar2 = piVar2 + 2;\n    }\n    else {\n        do {\n            iVar1 = *piVar2;\n            piVar2 = piVar2 + 1;\n        } while (iVar1 != 0);\n    }\n    if (*piVar2 == -1) {\n        piVar2 = piVar2 + 2;\n    }\n    else {\n        do {\n            iVar1 = *piVar2;\n            piVar2 = piVar2 + 1;\n        } while (iVar1 != 0);\n    }\n    do {\n        iVar1 = *piVar2;\n        piVar2 = piVar2 + 1;\n    } while (iVar1 != 0);\n    return;\n}\n",
        "token_count": 252
    },
    "0041dc4d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0041dc4d(uint32_t param_1)\n\n{\n    int32_t iVar1;\n    \n    if (0x10b < param_1) {\n        if (param_1 == 0x3e3) {\n            return 10;\n        }\n        if (param_1 == 0x3e4) {\n            return 10;\n        }\n        if (param_1 == 0x3e5) {\n            return 10;\n        }\n        if (param_1 == 999) {\n            return 5;\n        }\n        return 1;\n    }\n    if (param_1 == 0x10b) {\n        return 3;\n    }\n    if (param_1 < 0x3f) {\n        if (param_1 == 0x3e) {\n            return 8;\n        }\n        if (param_1 < 0x1a) {\n    // switch table (25 cases) at 0x41de59\n            switch(param_1) {\n            case 0:\n                return 0;\n            case 1:\n            case 7:\n            case 8:\n            case 9:\n            case 10:\n            case 0xd:\n            case 0xe:\n                goto code_r0x0041dd81;\n            case 2:\n            case 6:\n            case 0x12:\n                goto code_r0x0041dd81;\n            case 3:\n            case 0xf:\n            case 0x11:\n                goto code_r0x0041dd81;\n            case 4:\n                return 4;\n            case 5:\n            case 0xc:\n            case 0x13:\ncode_r0x0041dd81:\n                return 5;\n            case 0xb:\ncode_r0x0041dd81:\n                return 6;\n            case 0x10:\n                return 7;\n            case 0x14:\n            case 0x15:\n            case 0x16:\n            case 0x17:\ncode_r0x0041dd81:\n                return 10;\n            default:\n                goto code_r0x0041dd81;\n            }\n        }\n        if (0x27 < param_1) {\n    // switch table (9 cases) at 0x41debd\n            switch(param_1) {\n            case 0x34:\n            case 0x35:\n            case 0x37:\n                goto code_r0x0041dd81;\n            case 0x36:\n            case 0x3a:\n                goto code_r0x0041dd81;\n            default:\n                return 1;\n            case 0x39:\n            case 0x3b:\n                goto code_r0x0041dd81;\n            case 0x3c:\n                goto code_r0x0041dd81;\n            }\n        }\n        if (param_1 == 0x27) {\n            return 0xd;\n        }\n        if (0x20 < param_1) {\n            if (param_1 == 0x21) {\n                return 0xc;\n            }\n            if (param_1 == 0x22) {\n                return 3;\n            }\n            if (param_1 == 0x24) {\n                return 4;\n            }\n            if (param_1 == 0x26) {\n                return 0xe;\n            }\n            return 1;\n        }\n        if (param_1 == 0x20) {\n            return 0xb;\n        }\n        if (param_1 == 0x1a) {\n            return 6;\n        }\n        if (param_1 == 0x1b) {\n            return 9;\n        }\n        iVar1 = param_1 - 0x1d;\n        if (iVar1 == 0) {\n            return 5;\n        }\ncode_r0x0041dcc8:\n        if (iVar1 == 1) {\ncode_r0x0041dd81:\n            return 9;\n        }\n    }\n    else {\n        if (param_1 < 0x6c) {\n            if (param_1 == 0x6b) {\ncode_r0x0041dd81:\n                return 2;\n            }\n            if (0x47 < param_1) {\n                if (param_1 == 0x50) {\n                    return 5;\n                }\n                if (param_1 == 0x52) {\n                    return 5;\n                }\n                if (param_1 == 0x55) {\n                    return 3;\n                }\n                if (param_1 != 0x56) {\n                    if (param_1 == 0x58) {\n                        return 10;\n                    }\n                    return 1;\n                }\n                return 5;\n            }\n            if (param_1 == 0x47) {\n                return 5;\n            }\n            if (param_1 == 0x40) {\n                return 5;\n            }\n            if (param_1 == 0x41) {\n                return 5;\n            }\n            if (param_1 == 0x42) {\n                return 6;\n            }\n            if (param_1 == 0x43) {\n                return 3;\n            }\n            iVar1 = param_1 - 0x44;\n            if (iVar1 == 0) {\n                return 4;\n            }\n        }\n        else {\n            if (param_1 < 0x91) {\n                if (param_1 == 0x90) {\n                    return 3;\n                }\n                if (param_1 < 0x76) {\n                    if (param_1 == 0x75) {\n                        return 10;\n                    }\n                    if (param_1 == 0x6c) {\n                        return 0xc;\n                    }\n                    if (param_1 == 0x6f) {\n                        return 3;\n                    }\n                    if (param_1 == 0x70) {\n                        return 0xd;\n                    }\n                    if (param_1 == 0x71) {\n                        return 4;\n                    }\n                    if (param_1 != 0x72) {\n                        return 1;\n                    }\n                    return 6;\n                }\n                if (param_1 == 0x7b) {\n                    return 3;\n                }\n                if (param_1 == 0x7c) {\n                    return 3;\n                }\n                if (param_1 == 0x7d) {\n                    return 3;\n                }\n                iVar1 = param_1 - 0x83;\n                if (iVar1 == 0) {\n                    return 9;\n                }\n                goto code_r0x0041dcc8;\n            }\n            if (param_1 < 0xb7) {\n                if (param_1 == 0xb6) {\n                    return 6;\n                }\n                if (param_1 == 0x91) {\n                    return 7;\n                }\n                if (param_1 == 0x9a) {\n                    return 3;\n                }\n                if (param_1 != 0xa1) {\n                    if (param_1 == 0xa7) {\n                        return 0xc;\n                    }\n                    if (param_1 == 0xaa) {\n                        return 5;\n                    }\n                    return 1;\n                }\n                return 3;\n            }\n            if (param_1 == 0xb7) {\n                return 5;\n            }\n            if (param_1 == 0xbf) {\n                return 6;\n            }\n            if (param_1 == 0xc1) {\n                return 6;\n            }\n            iVar1 = param_1 - 0xce;\n            if (iVar1 == 0) {\n                return 3;\n            }\n        }\n        if (iVar1 == 2) {\ncode_r0x0041dd81:\n            return 3;\n        }\n    }\ncode_r0x0041dd81:\n    return 1;\n}\n",
        "token_count": 1733
    },
    "0041e425": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.0041e425(uint8_t *param_1, uint16_t param_2)\n\n{\n    uint8_t uVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    \n    if (0x15 < param_2) {\n        fcn.00405a76();\n    }\n    iVar3 = *(param_2 * 4 + 0x453808) + 4;\n    do {\n        uVar1 = *param_1;\n        if (uVar1 == 0) {\n            return iVar3;\n        }\n        if (uVar1 != 0xff) {\n            iVar4 = 0x4537b0;\n            if ((uVar1 & 0x40) == 0) {\n                iVar4 = 0x453758;\n            }\n            if (0x15 < (uVar1 & 0xbf)) {\n                fcn.00405a76();\n                pcVar2 = swi(3);\n                iVar3 = (*pcVar2)();\n                return iVar3;\n            }\n            iVar3 = iVar3 + *(iVar4 + (uVar1 & 0xbf) * 4);\n        }\n        param_1 = param_1 + 1;\n    } while( true );\n}\n",
        "token_count": 283
    },
    "0041e488": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.0041e488(int32_t param_1, int32_t param_2)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    \n    if ((-1 < param_2) && (param_2 < *(param_1 + 8))) {\n        return param_2 * 0xc + *(param_1 + 4);\n    }\n    fcn.00405a76();\n    pcVar1 = swi(3);\n    iVar2 = (*pcVar1)();\n    return iVar2;\n}\n",
        "token_count": 123
    },
    "0041e526": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041e526(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint uVar1;\n    uint *puVar2;\n    int32_t *piVar3;\n    int32_t in_ECX;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    bool bVar7;\n    \n    iVar6 = arg_8h;\n    bVar7 = -1 < arg_8h;\n    arg_8h = 0;\n    if (bVar7) goto code_r0x0041e53c;\n    do {\n        fcn.00405a76();\ncode_r0x0041e53c:\n        if (arg_8h <= arg_ch) {\n            *(in_ECX + 0x10) = arg_ch;\n        }\n        if (iVar6 == arg_8h) {\n            if (*(in_ECX + 4) != arg_8h) {\n                iVar6 = 0;\n                if (*(in_ECX + 8) != arg_8h && arg_8h <= *(in_ECX + 8)) {\n                    do {\n                        fcn.0041e4db();\n                        iVar6 = iVar6 + 1;\n                    } while (iVar6 < *(in_ECX + 8));\n                }\n                fcn.0040597d(*(in_ECX + 4));\n                *(in_ECX + 4) = arg_8h;\n            }\n            *(in_ECX + 0xc) = arg_8h;\n            *(in_ECX + 8) = arg_8h;\n            return;\n        }\n        if (*(in_ECX + 4) == arg_8h) {\n            arg_8h = iVar6;\n            if (iVar6 <= *(in_ECX + 0x10)) {\n                arg_8h = *(in_ECX + 0x10);\n            }\n            uVar1 = fcn.0040594d(arg_8h * 0xc);\n            *(in_ECX + 4) = uVar1;\n            fcn.004215c0(uVar1, 0, arg_8h * 0xc);\n            if (0 < iVar6) {\n                iVar4 = 0;\n                iVar5 = iVar6;\n                do {\n                    puVar2 = *(in_ECX + 4) + iVar4;\n                    if (puVar2 != NULL) {\n                        *puVar2 = 0;\n                        puVar2[1] = 0;\n                    }\n                    iVar4 = iVar4 + 0xc;\n                    iVar5 = iVar5 + -1;\n                } while (iVar5 != 0);\n            }\n            goto code_r0x0041e71a;\n        }\n        if (iVar6 <= *(in_ECX + 0xc)) {\n            iVar5 = *(in_ECX + 8);\n            if (iVar5 < iVar6) {\n                fcn.004215c0(iVar5 * 0xc + *(in_ECX + 4), arg_8h, (iVar6 - iVar5) * 0xc);\n                iVar5 = 0;\n                if (iVar6 != *(in_ECX + 8) && -1 < iVar6 - *(in_ECX + 8)) {\n                    do {\n                        piVar3 = (*(in_ECX + 8) + iVar5) * 0xc + *(in_ECX + 4);\n                        if (piVar3 != NULL) {\n                            *piVar3 = arg_8h;\n                            piVar3[1] = arg_8h;\n                        }\n                        iVar5 = iVar5 + 1;\n                    } while (iVar5 < iVar6 - *(in_ECX + 8));\n                }\n            }\n            else if ((iVar6 < iVar5) && (iVar5 != iVar6 && -1 < iVar5 - iVar6)) {\n                do {\n                    fcn.0041e4db();\n                    arg_8h = arg_8h + 1;\n                } while (arg_8h < *(in_ECX + 8) - iVar6);\n            }\n            goto code_r0x0041e720;\n        }\n        iVar5 = *(in_ECX + 0x10);\n        if (iVar5 == arg_8h) {\n            iVar5 = *(in_ECX + 8) + (*(in_ECX + 8) >> 0x1f & 7U) >> 3;\n            if (iVar5 < 4) {\n                iVar5 = 4;\n            }\n            else if (0x400 < iVar5) {\n                iVar5 = 0x400;\n            }\n        }\n        arg_8h = iVar5 + *(in_ECX + 0xc);\n        if (arg_8h <= iVar6) {\n            arg_8h = iVar6;\n        }\n    } while (arg_8h < *(in_ECX + 0xc));\n    iVar5 = fcn.0040594d(arg_8h * 0xc);\n    fcn.00405c0f(iVar5, arg_8h * 0xc, *(in_ECX + 4), *(in_ECX + 8) * 0xc);\n    fcn.004215c0(*(in_ECX + 8) * 0xc + iVar5, 0, (iVar6 - *(in_ECX + 8)) * 0xc);\n    iVar4 = 0;\n    if (iVar6 != *(in_ECX + 8) && -1 < iVar6 - *(in_ECX + 8)) {\n        do {\n            puVar2 = (*(in_ECX + 8) + iVar4) * 0xc + iVar5;\n            if (puVar2 != NULL) {\n                *puVar2 = 0;\n                puVar2[1] = 0;\n            }\n            iVar4 = iVar4 + 1;\n        } while (iVar4 < iVar6 - *(in_ECX + 8));\n    }\n    fcn.0040597d(*(in_ECX + 4));\n    *(in_ECX + 4) = iVar5;\ncode_r0x0041e71a:\n    *(in_ECX + 0xc) = arg_8h;\ncode_r0x0041e720:\n    *(in_ECX + 8) = iVar6;\n    return;\n}\n",
        "token_count": 1389
    },
    "0041e8c6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0041e8c6(int32_t param_1, int32_t param_2)\n\n{\n    uint unaff_retaddr;\n    \n    if (param_2 < 0) {\n        fcn.00405a76();\n    }\n    if (*(param_1 + 8) <= param_2) {\n        fcn.0041e526(param_2 + 1, 0xffffffff);\n    }\n    fcn.0041e7b0(unaff_retaddr);\n    return;\n}\n",
        "token_count": 115
    },
    "0041f3f6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool __thiscall fcn.0041f3f6(int32_t param_1, uint param_2)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    bool bVar3;\n    \n    uVar1 = *(param_1 + 0x2c);\n    bVar3 = uVar1 < *(param_1 + 0x30);\n    if (bVar3) {\n        iVar2 = *(param_1 + 0x20);\n        fcn.00405c0f(param_2, iVar2, iVar2 * uVar1 + *(param_1 + 0x28), iVar2);\n        *(param_1 + 0x2c) = *(param_1 + 0x2c) + 1;\n    }\n    return bVar3;\n}\n",
        "token_count": 179
    },
    "0042026f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042026f(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t in_ECX;\n    int32_t iVar4;\n    \n    iVar1 = arg_8h;\n    iVar4 = 0;\n    if (-1 < arg_8h) goto code_r0x00420285;\n    do {\n        fcn.00405a76();\ncode_r0x00420285:\n        if (iVar4 <= arg_ch) {\n            *(in_ECX + 0x10) = arg_ch;\n        }\n        if (iVar1 == iVar4) {\n            fcn.0040597d(*(in_ECX + 4));\n            *(in_ECX + 0xc) = iVar4;\n            *(in_ECX + 8) = iVar4;\n            goto code_r0x00420389;\n        }\n        if (*(in_ECX + 4) == iVar4) {\n            uVar2 = fcn.0040594d(iVar1 << 2);\n            *(in_ECX + 4) = uVar2;\n            fcn.004215c0(uVar2, 0, iVar1 << 2);\n            *(in_ECX + 0xc) = iVar1;\ncode_r0x004202f1:\n            *(in_ECX + 8) = iVar1;\n            return;\n        }\n        iVar4 = *(in_ECX + 0xc);\n        if (iVar1 <= iVar4) {\n            iVar4 = *(in_ECX + 8);\n            if (iVar4 < iVar1) {\n                fcn.004215c0(*(in_ECX + 4) + iVar4 * 4, 0, (iVar1 - iVar4) * 4);\n            }\n            goto code_r0x004202f1;\n        }\n        iVar3 = *(in_ECX + 0x10);\n        if (iVar3 == 0) {\n            iVar3 = *(in_ECX + 8) + (*(in_ECX + 8) >> 0x1f & 7U) >> 3;\n            if (iVar3 < 4) {\ncode_r0x00420323:\n                iVar3 = 4;\n            }\n            else if (iVar3 < 0x401) {\n                if (iVar3 < 4) goto code_r0x00420323;\n            }\n            else {\n                iVar3 = 0x400;\n            }\n        }\n        arg_8h = iVar3 + iVar4;\n        if (iVar3 + iVar4 <= iVar1) {\n            arg_8h = iVar1;\n        }\n    } while (arg_8h < iVar4);\n    iVar4 = fcn.0040594d(arg_8h << 2);\n    fcn.00405c0f(iVar4, arg_8h << 2, *(in_ECX + 4), *(in_ECX + 8) << 2);\n    fcn.004215c0(iVar4 + *(in_ECX + 8) * 4, 0, (iVar1 - *(in_ECX + 8)) * 4);\n    fcn.0040597d(*(in_ECX + 4));\n    *(in_ECX + 8) = iVar1;\n    *(in_ECX + 0xc) = arg_8h;\ncode_r0x00420389:\n    *(in_ECX + 4) = iVar4;\n    return;\n}\n",
        "token_count": 773
    },
    "00420479": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00420479(code *param_1, int32_t param_2, int32_t param_3)\n\n{\n    uint unaff_retaddr;\n    \n    *(param_2 + param_3) = unaff_retaddr;\n    *((param_2 + param_3) - param_3) = 0x420489;\n    (*param_1)();\n    return;\n}\n",
        "token_count": 85
    },
    "00420ee3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00420ee3(int32_t arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    int32_t in_ECX;\n    \n    if ((-1 < arg_8h) && (0 < arg_10h)) {\n        if (arg_8h < *(in_ECX + 8)) {\n            iVar1 = *(in_ECX + 8);\n            fcn.0042026f(iVar1 + arg_10h, 0xffffffff);\n            fcn.00413d7f(*(in_ECX + 4) + (arg_8h + arg_10h) * 4, ((*(in_ECX + 8) - arg_8h) - arg_10h) * 4, \n                         *(in_ECX + 4) + arg_8h * 4, (iVar1 - arg_8h) * 4);\n            fcn.004215c0(*(in_ECX + 4) + arg_8h * 4, 0, arg_10h << 2);\n        }\n        else {\n            fcn.0042026f(arg_8h + arg_10h, 0xffffffff);\n        }\n        arg_8h = arg_8h << 2;\n        do {\n            arg_10h = arg_10h + -1;\n            *(arg_8h + *(in_ECX + 4)) = arg_ch;\n            arg_8h = arg_8h + 4;\n        } while (arg_10h != 0);\n        return;\n    }\n    fcn.00405a76();\n    pcVar2 = swi(3);\n    (*pcVar2)();\n    return;\n}\n",
        "token_count": 391
    },
    "00421417": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\ncode ** __thiscall fcn.00421417(code **param_1, int32_t param_2)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    \n    *param_1 = vtable.std::exception.0;\n    pcVar3 = *(param_2 + 8);\n    param_1[2] = pcVar3;\n    pcVar1 = *(param_2 + 4);\n    if (pcVar3 == NULL) {\n        param_1[1] = pcVar1;\n    }\n    else if (pcVar1 == NULL) {\n        param_1[1] = NULL;\n    }\n    else {\n        iVar2 = fcn.00423d40(pcVar1);\n        pcVar3 = fcn.004211fb(iVar2 + 1);\n        param_1[1] = pcVar3;\n        if (pcVar3 != NULL) {\n            fcn.004241aa(pcVar3, iVar2 + 1, *(param_2 + 4));\n        }\n    }\n    return param_1;\n}\n",
        "token_count": 241
    },
    "00422b29": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00422b29(uint param_1, uint param_2)\n\n{\n    fcn.00422ad4(0x42bc26, param_1, 0, param_2);\n    return;\n}\n",
        "token_count": 50
    },
    "00423f4b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00423f4b(int32_t *param_1)\n\n{\n    uint *puVar1;\n    \n    if ((param_1 != NULL) && (*0x463a34 != 0)) {\n        *param_1 = *0x463a34;\n        return 0;\n    }\n    puVar1 = fcn.00423e5e();\n    *puVar1 = 0x16;\n    fcn.00427e5e(0, 0, 0, 0, 0);\n    return 0x16;\n}\n",
        "token_count": 125
    },
    "00423f82": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00423f82(uint *param_1)\n\n{\n    uint *puVar1;\n    \n    if ((param_1 != NULL) && (*0x463a34 != 0)) {\n        *param_1 = *0x463a40;\n        return 0;\n    }\n    puVar1 = fcn.00423e5e();\n    *puVar1 = 0x16;\n    fcn.00427e5e(0, 0, 0, 0, 0);\n    return 0x16;\n}\n",
        "token_count": 122
    },
    "004242b2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004242b2(uint param_1, uint param_2)\n\n{\n    fcn.0042424a(0x42df6d, param_2, 0, &stack0x0000000c);\n    return;\n}\n",
        "token_count": 56
    },
    "0042b40d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0042b40d(uint *param_1)\n\n{\n    uint *puVar1;\n    \n    if (param_1 == NULL) {\n        puVar1 = fcn.00423e5e();\n        *puVar1 = 0x16;\n        fcn.00427e5e(0, 0, 0, 0, 0);\n        return 0x16;\n    }\n    *param_1 = *0x4610ac;\n    return 0;\n}\n",
        "token_count": 112
    },
    "0042b441": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0042b441(uint *param_1)\n\n{\n    uint *puVar1;\n    \n    if (param_1 == NULL) {\n        puVar1 = fcn.00423e5e();\n        *puVar1 = 0x16;\n        fcn.00427e5e(0, 0, 0, 0, 0);\n        return 0x16;\n    }\n    *param_1 = *0x4610b0;\n    return 0;\n}\n",
        "token_count": 112
    },
    "0042b475": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0042b475(uint *param_1)\n\n{\n    uint *puVar1;\n    \n    if (param_1 == NULL) {\n        puVar1 = fcn.00423e5e();\n        *puVar1 = 0x16;\n        fcn.00427e5e(0, 0, 0, 0, 0);\n        return 0x16;\n    }\n    *param_1 = *0x4610a8;\n    return 0;\n}\n",
        "token_count": 112
    },
    "0042d8d9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0042d8eb)\n// WARNING: Removing unreachable block (ram,0x0042d8f1)\n// WARNING: Removing unreachable block (ram,0x0042d8f3)\n\nvoid fcn.0042d8d9(void)\n\n{\n    return;\n}\n",
        "token_count": 71
    },
    "00436833": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00436833(uint param_1)\n\n{\n    fcn.004215c0(param_1, 0, 0x18);\n    return param_1;\n}\n",
        "token_count": 43
    },
    "00422095": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00422095(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = fcn.0042a774(arg_8h, arg_ch, arg_10h, arg_14h, in_EAX, 0, 0, 0);\n    return uVar1;\n}\n",
        "token_count": 110
    },
    "00410b5b": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00410b5b(uint *arg_8h, int32_t arg_ch)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint *puVar5;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    int32_t var_4ch;\n    uint var_48h;\n    int32_t var_44h;\n    int32_t var_40h;\n    uint32_t var_4h;\n    \n    var_4h = *0x460604 ^ &stack0xfffffffc;\n    if (arg_ch == 0) {\n        uVar2 = (*_sym.imp.USER32.dll_GetDC)(0);\n    }\n    else {\n        uVar2 = *(arg_ch + 8);\n    }\n    puVar5 = &var_40h;\n    for (iVar4 = 0xf; iVar4 != 0; iVar4 = iVar4 + -1) {\n        *puVar5 = *arg_8h;\n        arg_8h = arg_8h + 1;\n        puVar5 = puVar5 + 1;\n    }\n    uVar3 = (*_sym.imp.GDI32.dll_GetDeviceCaps)(uVar2, 0x5a, var_40h, 0x2d0);\n    var_44h = (*_sym.imp.KERNEL32.dll_MulDiv)(uVar3);\n    pcVar1 = _sym.imp.GDI32.dll_DPtoLP;\n    var_48h = 0;\n    (*_sym.imp.GDI32.dll_DPtoLP)(uVar2, &var_48h, 1);\n    uVar3 = 1;\n    var_50h = 0;\n    var_4ch = 0;\n    (*pcVar1)(uVar2, &var_50h);\n    iVar4 = fcn.00425a27(var_44h - var_4ch);\n    var_40h = -iVar4;\n    if (arg_ch == 0) {\n        (*_sym.imp.USER32.dll_ReleaseDC)(0, uVar2);\n    }\n    fcn.00403b40(&var_40h);\n    fcn.00421e2f(uVar3);\n    return;\n}\n",
        "token_count": 510
    },
    "0041589b": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint fcn.0041589b(uint16_t param_1)\n\n{\n    if ((param_1 & 0x4000) != 0) {\n        return 4;\n    }\n    if ((param_1 & 0x2000) != 0) {\n        return 4;\n    }\n    if ((param_1 & 0x1000) != 0) {\n        return 2;\n    }\n    if (0x48 < param_1) {\n        if ((param_1 != 0x80) && (param_1 != 0x81)) {\n            if (param_1 == 0x82) {\n                return 2;\n            }\n            if (param_1 != 0x83) {\n                if (param_1 == 0x85) {\n                    return 2;\n                }\n                if (param_1 == 0x86) {\n                    return 2;\n                }\n                if (param_1 == 0x87) {\n                    return 2;\n                }\n                return 8;\n            }\n        }\ncode_r0x004158fb:\n        return 1;\n    }\n    if (param_1 == 0x48) {\ncode_r0x004158a5:\n        return 4;\n    }\n    // switch table (20 cases) at 0x4158ff\n    switch(param_1) {\n    case 2:\n    case 0xb:\n    case 0x12:\n        return 2;\n    case 3:\n    case 4:\n    case 8:\n    case 9:\n    case 10:\n    case 0xd:\n    case 0x13:\n        goto code_r0x004158a5;\n    default:\n        return 8;\n    case 0x10:\n    case 0x11:\n    case 0x14:\n    case 0x15:\n        goto code_r0x004158fb;\n    }\n}\n",
        "token_count": 418
    },
    "00418c9e": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00418c9e(int32_t param_1)\n\n{\n    uint uVar1;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    \n    if (*(param_1 + 0x48) == 0) {\n        if (*(param_1 + 0x38) != 0) {\n            var_10h = *(param_1 + 0x40);\n            var_ch = 0;\n            var_8h = 0;\n            var_18h = 1;\n            var_14h = 0;\n            uVar1 = (**(**(param_1 + 8) + 0x20))(*(param_1 + 8), 1, 0x4563e8, 0, 0, &var_18h);\n            return uVar1;\n        }\n    }\n    else if ((*(param_1 + 0x50) != 0) && (*(*(param_1 + 0x50) + 0xc) != 0)) {\n        uVar1 = fcn.00418873();\n        return uVar1;\n    }\n    return 0;\n}\n",
        "token_count": 272
    },
    "0041a97b": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_34h\n// WARNING: Variable defined which should be unmapped: var_30h\n\nint32_t __fastcall fcn.0041a97b(int32_t param_1)\n\n{\n    uint *puVar1;\n    int32_t *piVar2;\n    code *pcVar3;\n    int32_t iVar4;\n    int32_t **ppiStack76;\n    uchar *puStack72;\n    uint var_34h;\n    int32_t var_30h;\n    int32_t var_2ch;\n    int32_t var_28h;\n    int32_t var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    uint32_t var_14h;\n    int32_t *var_10h;\n    int32_t *var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    if ((*(param_1 + 4) != 0) && (*(*(param_1 + 4) + 0x28) != 0)) {\n        puStack72 = 0x41a9a2;\n        var_4h = fcn.0040e0c2();\n        if (var_4h != 0) {\n            puStack72 = *(var_4h + 0x20);\n            ppiStack76 = 0x41a9b2;\n            iVar4 = (*_sym.imp.USER32.dll_IsWindowVisible)();\n            var_14h = iVar4 == 0;\n            if (var_14h != 0) {\n                ppiStack76 = 0x41a9c2;\n                ppiStack76 = (*_sym.imp.USER32.dll_GetDesktopWindow)();\n                iVar4 = fcn.0040cd23();\n                pcVar3 = _sym.imp.USER32.dll_GetWindowRect;\n                (*_sym.imp.USER32.dll_GetWindowRect)(*(iVar4 + 0x20), &fcn.0041a97b::var_34h);\n                (*pcVar3)(*(var_4h + 0x20), &fcn.0041a97b::var_24h);\n                var_28h = var_28h - var_30h;\n                var_30h = 0;\n                var_34h = 0;\n                puStack72 = 0x41aa06;\n                fcn.0040fbfb(var_2ch / 2, var_28h / 2, 0, 0, 0);\n                puStack72 = 0x1;\n                ppiStack76 = 0x41aa10;\n                fcn.0040fc39();\n            }\n            puVar1 = *(*(param_1 + 4) + 0x50);\n            ppiStack76 = param_1 + 0x48;\n            iVar4 = (***puVar1)(puVar1, 0x4531d8);\n            if (iVar4 < 0) {\n                puVar1 = *(*(param_1 + 4) + 0x50);\n                iVar4 = (***puVar1)(puVar1, 0x453230, &fcn.0041a97b::var_ch);\n                if (iVar4 < 0) {\n                    return iVar4;\n                }\n                (**(*var_ch + 0x14))(var_ch, &fcn.0041a97b::var_10h);\n                (**(*var_ch + 8))(var_ch);\n                if (var_10h == NULL) {\n                    return -0x7fffbffb;\n                }\n                var_8h = (***var_10h)(var_10h, 0x455cc8, param_1 + 8);\n                (**(*var_10h + 8))(var_10h);\n                if (var_8h < 0) {\n                    return var_8h;\n                }\n                puVar1 = *(param_1 + 8);\n                (***puVar1)(puVar1, 0x455cb8, param_1 + 0xc);\n            }\n            else {\n                piVar2 = *(param_1 + 0x48);\n                var_8h = (**(*piVar2 + 0xc))(piVar2, 0, 0x455f58, param_1 + 0x4c);\n                if (*(param_1 + 0x4c) == 0) {\n                    var_8h = -0x7fffbffd;\n                }\n                if (var_8h < 0) {\n                    if (var_14h == 0) {\n                        return var_8h;\n                    }\n                    fcn.0040fbfb(var_24h, var_20h, var_1ch - var_24h, var_18h - var_20h, 0);\n                    fcn.0040fc39(0);\n                    return var_8h;\n                }\n            }\n            iVar4 = fcn.00419ea5();\n            if (var_14h != 0) {\n                fcn.0040fbfb(var_24h, var_20h, var_1ch - var_24h, var_18h - var_20h, 0);\n                fcn.0040fc39(0);\n            }\n            return iVar4;\n        }\n    }\n    ppiStack76 = 0x45f468;\n    puStack72 = &stack0xfffffffc;\n    fcn.00421cb9(&stack0xffffffb4, 0x459604);\n    pcVar3 = swi(3);\n    iVar4 = (*pcVar3)();\n    return iVar4;\n}\n",
        "token_count": 1257
    },
    "0041ceed": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.0041ceed(void)\n\n{\n    uint arg_8h;\n    uint var_18h;\n    uint32_t var_4h;\n    \n    var_4h = *0x460604 ^ &stack0xfffffffc;\n    arg_8h = (*_sym.imp.KERNEL32.dll_GetOEMCP)(&var_18h);\n    (*_sym.imp.KERNEL32.dll_GetCPInfo)();\n    fcn.00421e2f(arg_8h);\n    return;\n}\n",
        "token_count": 109
    },
    "00401c20": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00401c20(int32_t param_1, int32_t param_2)\n\n{\n    *(param_1 + 0x14) = param_2;\n    if (0xf < *(param_1 + 0x18)) {\n        *(*(param_1 + 4) + param_2) = 0;\n        return;\n    }\n    *(param_1 + 4 + param_2) = 0;\n    return;\n}\n",
        "token_count": 105
    },
    "00402240": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.00402240(int32_t param_1, uint param_2)\n\n{\n    *(param_1 + 0x14) = 0;\n    *(param_1 + 0x18) = 0xf;\n    *(param_1 + 4) = 0;\n    fcn.00401fa0(param_2, 0, 0xffffffff);\n    return param_1;\n}\n",
        "token_count": 96
    },
    "00403190": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid fcn.00403190(ushort param_1)\n\n{\n    uint uVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint32_t unaff_EDI;\n    uint uVar5;\n    \n    uVar5 = 0;\n    iVar3 = fcn.00409b0a();\n    pcVar2 = _sym.imp.USER32.dll_LoadImageA;\n    uVar1 = *(iVar3 + 0xc);\n    uVar4 = (*_sym.imp.USER32.dll_LoadImageA)(uVar1, param_1, 1, 0, 0, 0);\n    if (unaff_EDI != 0) {\n        uVar5 = (*pcVar2)(uVar1, unaff_EDI & 0xffff, 1, 0, 0, 0);\n    }\n    fcn.00402fa0(uVar4, uVar5);\n    return;\n}\n",
        "token_count": 211
    },
    "0040716e": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040716e(code **param_1)\n\n{\n    *param_1 = vtable.CCmdUI.0;\n    param_1[8] = NULL;\n    param_1[2] = NULL;\n    param_1[1] = NULL;\n    param_1[9] = NULL;\n    param_1[4] = NULL;\n    param_1[3] = NULL;\n    param_1[5] = NULL;\n    param_1[7] = NULL;\n    param_1[6] = NULL;\n    return;\n}\n",
        "token_count": 126
    },
    "004071b6": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.004071b6(int32_t param_1)\n\n{\n    uint uVar1;\n    \n    uVar1 = fcn.00409b0a();\n    *(param_1 + 0x1c) = uVar1;\n    *(param_1 + 4) = 1;\n    *(param_1 + 0x14) = 1;\n    *(param_1 + 8) = 0;\n    *(param_1 + 0xc) = 0;\n    *(param_1 + 0x10) = 0;\n    *(param_1 + 0x18) = 0;\n    return param_1;\n}\n",
        "token_count": 151
    },
    "0040779c": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nuint fcn.0040779c(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    \n    iVar1 = *(param_1 + 4);\n    if ((iVar1 == 0x200) || (iVar1 == 0xa0)) {\n        iVar1 = fcn.004095e9();\n        iVar2 = fcn.004076fa(*(param_1 + 0x14), *(param_1 + 0x18));\n        if ((iVar2 == 0) || (*(param_1 + 4) != *(iVar1 + 0x54))) {\n            *(iVar1 + 0x4c) = *(param_1 + 0x14);\n            *(iVar1 + 0x50) = *(param_1 + 0x18);\n            *(iVar1 + 0x54) = *(param_1 + 4);\n            uVar3 = 1;\n        }\n        else {\n            uVar3 = 0;\n        }\n        return uVar3;\n    }\n    if ((iVar1 != 0xf) && (iVar1 != 0x118)) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 270
    },
    "004099ae": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.004099ae(uint arg_8h)\n\n{\n    uchar uVar1;\n    uint *puVar2;\n    code *pcVar3;\n    int32_t iVar4;\n    uint uVar5;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_14h;\n    uint var_4h;\n    \n    fcn.00423c31(0xc);\n    *(unaff_EBP + -0x14) = extraout_ECX;\n    *extraout_ECX = vtable.AFX_MODULE_STATE.0;\n    extraout_ECX[7] = NULL;\n    extraout_ECX[8] = NULL;\n    extraout_ECX[9] = NULL;\n    extraout_ECX[10] = NULL;\n    fcn.00403250();\n    extraout_ECX[0x10] = NULL;\n    extraout_ECX[0x11] = NULL;\n    extraout_ECX[0x14] = 0xffffffff;\n    *(unaff_EBP + -4) = 0;\n    extraout_ECX[0x15] = NULL;\n    extraout_ECX[0x1a] = NULL;\n    extraout_ECX[0x1b] = NULL;\n    uVar1 = *(unaff_EBP + 8);\n    extraout_ECX[10] = 0x20;\n    extraout_ECX[8] = 0x14;\n    extraout_ECX[6] = NULL;\n    *(extraout_ECX + 5) = uVar1;\n    *(unaff_EBP + -4) = 2;\n    fcn.00404180(0x1000);\n    *(unaff_EBP + -4) = 1;\n    extraout_ECX[0xc] = 0x1;\n    extraout_ECX[0x11] = 0x18;\n    pcVar3 = fcn.0040594d(8);\n    extraout_ECX[0x1e] = pcVar3;\n    iVar4 = fcn.00411ad2(0x188);\n    *(unaff_EBP + 8) = iVar4;\n    *(unaff_EBP + -4) = 4;\n    if (iVar4 == 0) {\n        uVar5 = 0;\n    }\n    else {\n        uVar5 = fcn.00409707();\n    }\n    puVar2 = extraout_ECX[0x1e];\n    *(unaff_EBP + -4) = 1;\n    *puVar2 = uVar5;\n    iVar4 = fcn.00411ad2(100);\n    *(unaff_EBP + 8) = iVar4;\n    *(unaff_EBP + -4) = 5;\n    if (iVar4 == 0) {\n        uVar5 = 0;\n    }\n    else {\n        uVar5 = fcn.0040992b();\n    }\n    *(extraout_ECX[0x1e] + 4) = uVar5;\n    extraout_ECX[0x1f] = 0x1;\n    extraout_ECX[0x20] = NULL;\n    fcn.00423cd6();\n    return;\n}\n",
        "token_count": 727
    },
    "00412b5a": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __cdecl fcn.00412b5a(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.00423bfe(4);\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    pcVar1 = *(unaff_EBP + 8);\n    *extraout_ECX = vtable.CHandleMap.0;\n    fcn.0041e002(*(pcVar1 + 4), 0x40);\n    *(unaff_EBP + -4) = 0;\n    fcn.0041cacb(10);\n    *(unaff_EBP + -4) = 1;\n    fcn.0041cacb(4);\n    iVar2 = 0;\n    *(unaff_EBP + -4) = 2;\n    if (*(unaff_EBP + 0xc) != 0) goto code_r0x00412baf;\n    do {\n        iVar2 = fcn.00405a76();\ncode_r0x00412baf:\n    } while (*(unaff_EBP + 0x10) == iVar2);\n    fcn.0041cf51(7, iVar2);\n    extraout_ECX[5] = *(unaff_EBP + 0xc);\n    extraout_ECX[6] = *(unaff_EBP + 0x10);\n    extraout_ECX[0x16] = *(unaff_EBP + 0x14);\n    extraout_ECX[0x17] = *(unaff_EBP + 0x18);\n    extraout_ECX[0x15] = pcVar1;\n    fcn.00423cd6();\n    return;\n}\n",
        "token_count": 462
    },
    "004157e3": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004157e3(uint *param_1, uint param_2, uint param_3)\n\n{\n    param_1[8] = param_2;\n    *param_1 = 0;\n    param_1[1] = 0;\n    param_1[2] = 0;\n    param_1[3] = 0;\n    param_1[5] = 0;\n    param_1[6] = 0;\n    param_1[9] = param_3;\n    param_1[4] = 0;\n    return;\n}\n",
        "token_count": 132
    },
    "0041580c": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041580c(int32_t param_1)\n\n{\n    code *pcVar1;\n    \n    pcVar1 = _sym.imp.ole32.dll_CoTaskMemFree;\n    (*_sym.imp.ole32.dll_CoTaskMemFree)(*(param_1 + 0x14));\n    *(param_1 + 0x14) = 0;\n    (*pcVar1)(*(param_1 + 0x18));\n    *(param_1 + 0x18) = 0;\n    fcn.0040597d(*(param_1 + 8));\n    *(param_1 + 8) = 0;\n    fcn.0040597d(*(param_1 + 0x10));\n    *(param_1 + 0x10) = 0;\n    *(param_1 + 0xc) = 0;\n    return;\n}\n",
        "token_count": 196
    },
    "004167e0": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "parse PE header/27dc37a2d08e4034aa7bcaa8b888b251"
        ],
        "decompiled_code": "\ncode ** __thiscall fcn.004167e0(code **param_1, code *param_2)\n\n{\n    *param_1 = vtable.CDataSourceControl.0;\n    param_1[1] = param_2;\n    param_1[2] = NULL;\n    param_1[3] = NULL;\n    param_1[4] = NULL;\n    param_1[5] = NULL;\n    fcn.0041cca1(10);\n    param_1[0xd] = NULL;\n    param_1[0xe] = NULL;\n    param_1[0xf] = NULL;\n    param_1[0x10] = NULL;\n    param_1[0x11] = NULL;\n    param_1[0x12] = NULL;\n    param_1[0x13] = NULL;\n    param_1[0x14] = NULL;\n    param_1[0x15] = NULL;\n    param_1[0x16] = NULL;\n    return param_1;\n}\n",
        "token_count": 227
    },
    "0041697a": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0041697a(uint *param_1, uint param_2, uint param_3, ushort param_4)\n\n{\n    *param_1 = 0;\n    *(param_1 + 1) = param_4;\n    param_1[3] = 0;\n    param_1[5] = 0;\n    param_1[2] = param_3;\n    param_1[6] = param_2;\n    return;\n}\n",
        "token_count": 107
    },
    "00416d2d": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.00416d2d(uint *arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h, int32_t arg_28h, int32_t arg_2ch, uint arg_30h, uint arg_34h, uint arg_38h)\n\n{\n    int32_t iVar1;\n    int32_t extraout_ECX;\n    \n    iVar1 = 0;\n    if (arg_8h == NULL) {\n        arg_8h = fcn.00401090(0x80004005);\n        iVar1 = extraout_ECX;\n    }\n    arg_8h[8] = arg_34h;\n    arg_8h[5] = arg_30h;\n    arg_8h[9] = arg_20h;\n    *arg_8h = arg_ch;\n    *(arg_8h + 0xc) = arg_10h;\n    *(arg_8h + 0x32) = arg_18h;\n    *(arg_8h + 0x33) = arg_1ch;\n    arg_8h[0xb] = iVar1;\n    arg_8h[1] = iVar1;\n    arg_8h[2] = iVar1;\n    arg_8h[3] = iVar1;\n    arg_8h[4] = iVar1;\n    arg_8h[6] = iVar1;\n    arg_8h[10] = arg_14h;\n    arg_8h[7] = iVar1;\n    if (arg_38h == iVar1) {\n        arg_8h[7] = 1;\n        arg_8h[1] = arg_24h;\n    }\n    if (arg_28h != iVar1) {\n        arg_8h[7] = arg_8h[7] | 2;\n        arg_8h[2] = arg_28h;\n    }\n    if (arg_2ch != iVar1) {\n        arg_8h[7] = arg_8h[7] | 4;\n        arg_8h[3] = arg_2ch;\n    }\n    return;\n}\n",
        "token_count": 505
    },
    "0041c545": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041c545(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    code *pcVar1;\n    code **extraout_ECX;\n    code *extraout_ECX_00;\n    code *pcVar2;\n    code *extraout_EDX;\n    code *pcVar3;\n    int32_t unaff_EBP;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.00423bfe(4);\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    fcn.0041333f();\n    pcVar3 = *(unaff_EBP + 8);\n    *(unaff_EBP + -4) = 0;\n    pcVar2 = *(unaff_EBP + 0xc);\n    *extraout_ECX = vtable.CMemFile.0;\n    if ((pcVar3 == NULL) && (pcVar2 != NULL)) {\n        fcn.00405a76();\n        pcVar2 = extraout_ECX_00;\n        pcVar3 = extraout_EDX;\n    }\n    pcVar1 = *(unaff_EBP + 0x10);\n    extraout_ECX[5] = NULL;\n    extraout_ECX[4] = pcVar1;\n    extraout_ECX[9] = NULL;\n    extraout_ECX[7] = ~-(pcVar1 != NULL) & pcVar2;\n    extraout_ECX[6] = pcVar2;\n    extraout_ECX[8] = pcVar3;\n    fcn.00423cd6();\n    return;\n}\n",
        "token_count": 358
    },
    "0041c796": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041c796(int32_t *param_1)\n\n{\n    param_1[4] = 0;\n    param_1[5] = 0;\n    param_1[6] = 0;\n    param_1[7] = 0;\n    if ((param_1[8] != 0) && (param_1[9] != 0)) {\n        (**(*param_1 + 0x60))(param_1[8]);\n    }\n    param_1[8] = 0;\n    return;\n}\n",
        "token_count": 125
    },
    "0041c8a7": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid fcn.0041c8a7(void)\n\n{\n    code *pcVar1;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.00423bfe(4);\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *extraout_ECX = vtable.CMemFile.0;\n    pcVar1 = extraout_ECX[8];\n    *(unaff_EBP + -4) = 0;\n    if (pcVar1 != NULL) {\n        fcn.0041c796();\n    }\n    *(unaff_EBP + -4) = 0xffffffff;\n    extraout_ECX[4] = NULL;\n    extraout_ECX[5] = NULL;\n    extraout_ECX[6] = NULL;\n    extraout_ECX[7] = NULL;\n    fcn.0041343b();\n    fcn.00423cd6();\n    return;\n}\n",
        "token_count": 225
    },
    "0041cacb": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0041cacb(code **param_1, code *param_2)\n\n{\n    *param_1 = vtable.CMapPtrToPtr.0;\n    if (param_2 < 1) {\n        param_2 = 0xa;\n    }\n    param_1[1] = NULL;\n    param_1[2] = 0x11;\n    param_1[3] = NULL;\n    param_1[4] = NULL;\n    param_1[5] = NULL;\n    param_1[6] = param_2;\n    return;\n}\n",
        "token_count": 132
    },
    "0041cca1": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0041cca1(code **param_1, code *param_2)\n\n{\n    param_1[3] = NULL;\n    param_1[4] = NULL;\n    param_1[2] = NULL;\n    param_1[1] = NULL;\n    param_1[5] = NULL;\n    *param_1 = vtable.CPtrList.0;\n    param_1[6] = param_2;\n    return;\n}\n",
        "token_count": 105
    },
    "0041e8fd": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041e8fd(code **param_1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t **ppiVar3;\n    \n    *param_1 = vtable.COleDispatchException.0;\n    fcn.004028b0();\n    fcn.004028b0();\n    ppiVar3 = param_1[3] + -0x10;\n    piVar1 = param_1[3] + -4;\n    LOCK();\n    iVar2 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar2 == 1 || iVar2 + -1 < 0) {\n        (**(**ppiVar3 + 4))(ppiVar3);\n    }\n    return;\n}\n",
        "token_count": 176
    },
    "00405a19": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00405a19(int32_t param_1)\n\n{\n    int32_t iVar1;\n    \n    *(param_1 + 0xc) = 1;\n    iVar1 = fcn.004117fa(*(param_1 + 0x94), param_1 + 0x14, 0x80);\n    *(param_1 + 0x10) = iVar1 != 0;\n    return;\n}\n",
        "token_count": 97
    },
    "00408721": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00408721(int32_t param_1)\n\n{\n    uint *puVar1;\n    \n    for (puVar1 = *(param_1 + 4); puVar1 != NULL; puVar1 = *puVar1) {\n    }\n    *(param_1 + 0xc) = 0;\n    *(param_1 + 0x10) = 0;\n    *(param_1 + 8) = 0;\n    *(param_1 + 4) = 0;\n    fcn.00413bbb();\n    *(param_1 + 0x14) = 0;\n    return;\n}\n",
        "token_count": 141
    },
    "0040a4b8": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0040a4b8(uint arg_8h)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int32_t iVar3;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.00423bfe(4);\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    extraout_ECX[1] = NULL;\n    extraout_ECX[2] = NULL;\n    extraout_ECX[3] = NULL;\n    *(unaff_EBP + -4) = 0;\n    iVar3 = *(unaff_EBP + 8);\n    *extraout_ECX = vtable.CPaintDC.0;\n    pcVar1 = *(iVar3 + 0x20);\n    extraout_ECX[4] = pcVar1;\n    uVar2 = (*_sym.imp.USER32.dll_BeginPaint)(pcVar1, extraout_ECX + 5);\n    iVar3 = fcn.0040a31d(uVar2);\n    if (iVar3 == 0) {\n        fcn.00409d57();\n    }\n    fcn.00423cd6();\n    return;\n}\n",
        "token_count": 296
    },
    "0040e1c4": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\ncode ** __fastcall fcn.0040e1c4(code **param_1)\n\n{\n    param_1[5] = NULL;\n    param_1[2] = NULL;\n    param_1[3] = NULL;\n    *param_1 = vtable.CMFCComObject_class_ATL::CAccessibleProxy_.2.0;\n    param_1[1] = vtable.CMFCComObject_class_ATL::CAccessibleProxy_.1.0;\n    param_1[4] = vtable.CMFCComObject_class_ATL::CAccessibleProxy_.0;\n    fcn.00412900();\n    return param_1;\n}\n",
        "token_count": 146
    },
    "0041c924": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041c924(int32_t param_1)\n\n{\n    if (*(param_1 + 4) != 0) {\n        fcn.0040597d(*(param_1 + 4));\n        *(param_1 + 4) = 0;\n    }\n    *(param_1 + 0xc) = 0;\n    *(param_1 + 0x10) = 0;\n    fcn.00413bbb();\n    *(param_1 + 0x14) = 0;\n    return;\n}\n",
        "token_count": 121
    },
    "0041cbc9": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041cbc9(int32_t param_1)\n\n{\n    *(param_1 + 0xc) = 0;\n    *(param_1 + 0x10) = 0;\n    *(param_1 + 8) = 0;\n    *(param_1 + 4) = 0;\n    fcn.00413bbb();\n    *(param_1 + 0x14) = 0;\n    return;\n}\n",
        "token_count": 101
    },
    "0041d05a": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "contain loop"
        ],
        "decompiled_code": "\nuint * __thiscall fcn.0041d05a(int32_t param_1, uint32_t *param_2, uint32_t *param_3)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint unaff_retaddr;\n    \n    uVar1 = fcn.0041cf30(param_2);\n    *param_3 = uVar1;\n    uVar1 = uVar1 % *(param_1 + 8);\n    *param_2 = uVar1;\n    if (*(param_1 + 4) != 0) {\n        for (puVar3 = *(*(param_1 + 4) + uVar1 * 4); puVar3 != NULL; puVar3 = *puVar3) {\n            if ((puVar3[1] == *param_3) && (iVar2 = fcn.0041134f(unaff_retaddr),  iVar2 == 0)) {\n                return puVar3;\n            }\n        }\n    }\n    return NULL;\n}\n",
        "token_count": 233
    },
    "0041d0fa": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041d0fa(int32_t param_1)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    uint *puVar3;\n    uint uStack24;\n    uint uStack20;\n    \n    if (*(param_1 + 4) != 0) {\n        uVar2 = 0;\n        if (*(param_1 + 8) != 0) {\n            do {\n                for (puVar3 = *(*(param_1 + 4) + uVar2 * 4); puVar3 != NULL; puVar3 = *puVar3) {\n                    if (puVar3 == 0xfffffff8) {\n                        uStack20 = 0;\n                        uStack24 = 0x45f468;\n                        fcn.00421cb9(&stack0xffffffe8, 0x459604);\n                        pcVar1 = swi(3);\n                        (*pcVar1)();\n                        return;\n                    }\n                    uStack24 = 0x41d123;\n                    fcn.0041cfdf();\n                }\n                uVar2 = uVar2 + 1;\n            } while (uVar2 < *(param_1 + 8));\n        }\n        uStack20 = *(param_1 + 4);\n        uStack24 = 0x41d137;\n        fcn.0040597d();\n        *(param_1 + 4) = 0;\n    }\n    *(param_1 + 0xc) = 0;\n    *(param_1 + 0x10) = 0;\n    uStack20 = 0x41d149;\n    fcn.00413bbb();\n    *(param_1 + 0x14) = 0;\n    return;\n}\n",
        "token_count": 382
    },
    "0041f612": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\ncode ** __thiscall fcn.0041f612(code **param_1, code *param_2, code *param_3, code *param_4, code *param_5)\n\n{\n    fcn.004071b6();\n    *param_1 = vtable.CEnumArray.0;\n    param_1[0xe] = vtable.CEnumArray::XEnumVOID.0;\n    param_1[9] = NULL;\n    param_1[0xb] = NULL;\n    param_1[8] = param_2;\n    param_1[0xc] = param_4;\n    param_1[10] = param_3;\n    param_1[0xd] = param_5;\n    return param_1;\n}\n",
        "token_count": 166
    },
    "004119a5": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004119a5(uint16_t *arg_8h, uint arg_ch)\n\n{\n    uint *in_ECX;\n    uint var_8h;\n    uint var_4h;\n    \n    if (*arg_8h < 0x76c) {\n        *in_ECX = 0;\n        in_ECX[1] = 0;\n    }\n    else {\n        fcn.00411912(*arg_8h, arg_8h[1], arg_8h[3], arg_8h[4], arg_8h[5], arg_8h[6], arg_ch);\n        *in_ECX = in_ECX;\n        in_ECX[1] = in_ECX;\n    }\n    return;\n}\n",
        "token_count": 166
    },
    "0041431a": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041431a(uint *param_1)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = (*_sym.imp.KERNEL32.dll_lstrlenA)(*param_1);\n    fcn.00414031(*(param_1 + 2), uVar1 & 0xffff);\n    fcn.00414031();\n    fcn.004141fa(*param_1, uVar1 & 0xffff);\n    return;\n}\n",
        "token_count": 103
    },
    "00407c0e": {
        "rules": [
            "create or open registry key",
            "contain loop",
            "query or enumerate registry key"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00407c0e(uint param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack296;\n    uchar *puStack292;\n    int32_t iStack288;\n    uint uStack284;\n    uchar *puStack280;\n    uint uStack276;\n    uint uStack272;\n    uint in_stack_fffffef4;\n    \n    uStack272 = 0x18;\n    uStack276 = 0x407c32;\n    fcn.00423c31();\n    puStack280 = *param_2;\n    uStack276 = &stack0xfffffed8;\n    uStack284 = param_1;\n    iStack288 = 0x407c52;\n    iVar1 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyA)();\n    if (iVar1 == 0) {\n        while( true ) {\n            iStack288 = 0x104;\n            uStack296 = 0;\n            puStack292 = &stack0xfffffef0;\n            iVar1 = (*_sym.imp.ADVAPI32.dll_RegEnumKeyA)(0);\n            if (iVar1 != 0) break;\n            puStack280 = 0x407c85;\n            uStack276 = &stack0xfffffef0;\n            fcn.004048c0();\n            puStack280 = &stack0xfffffedc;\n            uStack284 = uStack296;\n            uStack276._0_1_ = 1;\n            iStack288 = 0x407c95;\n            iVar1 = fcn.00407c0e();\n            uStack276 = uStack276._1_3_ << 8;\n            iStack288 = 0x407cab;\n            fcn.004028b0();\n            if (iVar1 != 0) break;\n            uStack276 = 0xffffffff;\n        }\n        if ((iVar1 == 0x103) || (iVar1 == 0x3f2)) {\n            iStack288 = *param_2;\n            puStack292 = 0x407c70;\n            uStack296 = 0x407ceb;\n            (*_sym.imp.ADVAPI32.dll_RegDeleteKeyA)();\n        }\n        iStack288 = uStack296;\n        puStack292 = 0x407cf6;\n        (*_sym.imp.ADVAPI32.dll_RegCloseKey)();\n    }\n    *in_FS_OFFSET = uStack284;\n    uStack272 = 0x407d13;\n    fcn.00421e2f(in_stack_fffffef4);\n    return;\n}\n",
        "token_count": 577
    },
    "00412546": {
        "rules": [
            "create or open registry key"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00412546(int32_t param_1)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_ch = 0;\n    var_4h = 0;\n    var_8h = 0;\n    iVar2 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExA)(0x80000001, \"software\", 0, 0x2001f, &var_4h);\n    pcVar1 = _sym.imp.ADVAPI32.dll_RegCreateKeyExA;\n    if (iVar2 == 0) {\n        iVar2 = (*_sym.imp.ADVAPI32.dll_RegCreateKeyExA)\n                          (var_4h, *(param_1 + 0x54), 0, 0, 0, 0x2001f, 0, &var_8h, &var_10h);\n        if (iVar2 == 0) {\n            (*pcVar1)(var_8h, *(param_1 + 0x68), 0, 0, 0, 0x2001f, 0, &var_ch, &var_10h);\n        }\n    }\n    pcVar1 = _sym.imp.ADVAPI32.dll_RegCloseKey;\n    if (var_4h != 0) {\n        (*_sym.imp.ADVAPI32.dll_RegCloseKey)(var_4h);\n    }\n    if (var_8h != 0) {\n        (*pcVar1)(var_8h);\n    }\n    return var_ch;\n}\n",
        "token_count": 380
    },
    "004125d7": {
        "rules": [
            "create or open registry key"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004125d7(uint lpSubKey)\n\n{\n    int32_t iVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    var_4h = 0;\n    iVar1 = fcn.00412546();\n    if (iVar1 == 0) {\n        var_4h = 0;\n    }\n    else {\n        (*_sym.imp.ADVAPI32.dll_RegCreateKeyExA)(iVar1, lpSubKey, 0, 0, 0, 0x2001f, 0, &var_4h, &var_8h);\n        (*_sym.imp.ADVAPI32.dll_RegCloseKey)(iVar1);\n    }\n    return var_4h;\n}\n",
        "token_count": 164
    },
    "00435ff3": {
        "rules": [
            "create or open file"
        ],
        "decompiled_code": "\nvoid fcn.00435ff3(void)\n\n{\n    *0x461804 = (*_sym.imp.KERNEL32.dll_CreateFileA)(\"CONOUT$\", 0x40000000, 3, 0, 3, 0, 0);\n    return;\n}\n",
        "token_count": 60
    },
    "0040594d": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.0040594d(uint param_1)\n\n{\n    int32_t iVar1;\n    \n    while( true ) {\n        iVar1 = fcn.004211fb(param_1);\n        if (iVar1 != 0) {\n            return iVar1;\n        }\n        if (*0x45f1bc == NULL) break;\n        iVar1 = (**0x45f1bc)(param_1);\n        if (iVar1 == 0) {\n            return 0;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 117
    },
    "00405978": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.00405978(uint param_1)\n\n{\n    int32_t iVar1;\n    \n    while( true ) {\n        iVar1 = fcn.004211fb(param_1);\n        if (iVar1 != 0) {\n            return iVar1;\n        }\n        if (*0x45f1bc == NULL) break;\n        iVar1 = (**0x45f1bc)(param_1);\n        if (iVar1 == 0) {\n            return 0;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 116
    },
    "00405d7f": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00405d7f(int32_t param_1)\n\n{\n    uint uVar1;\n    \n    if (param_1 == 0) {\n        return;\n    }\n    if (param_1 == 0xc) {\n        uVar1 = 0x8007000e;\n    }\n    else {\n        if (param_1 == 0x16) goto code_r0x00405da5;\n        if (param_1 == 0x22) goto code_r0x00405da5;\n        if (param_1 == 0x50) {\n            return;\n        }\n        uVar1 = 0x80004005;\n    }\n    do {\n        fcn.00401090(uVar1);\ncode_r0x00405da5:\n        uVar1 = 0x80070057;\n    } while( true );\n}\n",
        "token_count": 189
    },
    "004061d9": {
        "rules": [
            "contain loop",
            "link function at runtime on Windows"
        ],
        "decompiled_code": "\nuint * __thiscall fcn.004061d9(uint *param_1, uint param_2)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint unaff_ESI;\n    \n    *param_1 = param_2;\n    param_1[1] = 0;\n    if (*0x461c0c == '\\0') {\n        iVar2 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(\"KERNEL32\");\n        if (iVar2 != 0) goto code_r0x0040620c;\ncode_r0x00406207:\n        do {\n            fcn.00405a76();\ncode_r0x0040620c:\n            pcVar1 = _sym.imp.KERNEL32.dll_GetProcAddress;\n            *0x461bfc = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, \"CreateActCtxA\", unaff_ESI);\n            *0x461c00 = (*pcVar1)(iVar2, \"ReleaseActCtx\");\n            *0x461c04 = (*pcVar1)(iVar2, \"ActivateActCtx\");\n            *0x461c08 = (*pcVar1)(iVar2, \"DeactivateActCtx\");\n            if (*0x461bfc == 0) {\n                if ((*0x461c00 != 0) || (*0x461c04 != 0)) goto code_r0x00406207;\n            }\n            else if ((*0x461c00 == 0) || (*0x461c04 == 0)) goto code_r0x00406207;\n        } while (*0x461c08 != 0);\n        *0x461c0c = '\\x01';\n    }\n    return param_1;\n}\n",
        "token_count": 377
    },
    "004080e3": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.004080e3(int32_t param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    \n    pcVar2 = _sym.imp.USER32.dll_GetParent;\n    iVar3 = param_1;\n    if (param_1 != 0) goto code_r0x00408112;\n    iVar3 = fcn.0040800c();\n    if ((iVar3 == 0) && (iVar3 = fcn.004067ae(),  iVar3 == 0)) {\n        iVar3 = 0;\n        iVar5 = iVar3;\n        iVar6 = iVar3;\n    }\n    else {\n        for (iVar3 = *(iVar3 + 0x20); iVar5 = iVar3,  iVar6 = iVar3,  iVar3 != 0; iVar3 = (*pcVar2)(iVar3)) {\ncode_r0x00408112:\n            uVar4 = (*_sym.imp.USER32.dll_GetWindowLongA)(iVar3, 0xfffffff0);\n            iVar5 = iVar3;\n            iVar6 = iVar3;\n            if ((uVar4 & 0x40000000) == 0) break;\n        }\n    }\n    while (iVar1 = iVar5,  iVar1 != 0) {\n        iVar5 = (*pcVar2)(iVar1);\n        iVar3 = iVar1;\n    }\n    if ((param_1 == 0) && (iVar6 != 0)) {\n        iVar6 = (*_sym.imp.USER32.dll_GetLastActivePopup)(iVar6);\n    }\n    if (param_2 != NULL) {\n        if (((iVar3 == 0) || (iVar5 = (*_sym.imp.USER32.dll_IsWindowEnabled)(iVar3),  iVar5 == 0)) || (iVar3 == iVar6))\n        {\n            *param_2 = 0;\n        }\n        else {\n            *param_2 = iVar3;\n            (*_sym.imp.USER32.dll_EnableWindow)(iVar3, 0);\n        }\n    }\n    return iVar6;\n}\n",
        "token_count": 481
    },
    "0040b9e1": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0040b9e1(int32_t *param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t *extraout_ECX;\n    \n    iVar1 = 0x7fffffff;\n    if (param_2 == 0x7fffffff) goto code_r0x0040ba00;\n    if (*param_1 == 0x7fffffff) goto code_r0x0040b9fe;\n    if (*param_1 == param_2) goto code_r0x0040b9fe;\n    do {\n        iVar1 = fcn.00405a76();\n        param_1 = extraout_ECX;\ncode_r0x0040b9fe:\n        *param_1 = param_2;\ncode_r0x0040ba00:\n    } while (*param_1 == iVar1);\n    fcn.00412ac4(*param_1);\n    return;\n}\n",
        "token_count": 209
    },
    "0040bb78": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040bb78(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    if (arg_8h == 0) {\n        fcn.00405a76();\n    }\n    iVar1 = (*_sym.imp.USER32.dll_GetMenuItemCount)(*(arg_8h + 4));\n    iVar3 = 0;\n    if (0 < iVar1) {\n        do {\n            iVar2 = fcn.00403b60(iVar3);\n            if (iVar2 == 0) {\n                iVar2 = (*_sym.imp.USER32.dll_GetMenuItemID)(*(arg_8h + 4), iVar3);\n                if (iVar2 == arg_ch) goto code_r0x0040bbda;\n            }\n            else {\n                if (*(iVar2 + 4) == arg_ch) {\ncode_r0x0040bbda:\n                    iVar1 = fcn.00410d79(*(arg_8h + 4));\n                    return iVar1;\n                }\n                iVar2 = fcn.0040bb78(iVar2, arg_ch);\n                if (iVar2 != 0) {\n                    return iVar2;\n                }\n            }\n            iVar3 = iVar3 + 1;\n        } while (iVar3 < iVar1);\n    }\n    return 0;\n}\n",
        "token_count": 307
    },
    "0040d00e": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040d00e(uint hDlg, uint nIDDlgItem, int32_t arg_10h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar2 = (*_sym.imp.USER32.dll_GetDlgItem)(hDlg, nIDDlgItem);\n    pcVar1 = _sym.imp.USER32.dll_GetTopWindow;\n    if (iVar2 != 0) {\n        iVar3 = (*_sym.imp.USER32.dll_GetTopWindow)(iVar2);\n        if ((iVar3 != 0) && (iVar3 = fcn.0040d00e(iVar2, nIDDlgItem, arg_10h),  iVar3 != 0)) {\n            return;\n        }\n        if (arg_10h == 0) {\n            fcn.0040cd23();\n            return;\n        }\n        iVar2 = fcn.0040cd4a(iVar2);\n        if (iVar2 != 0) {\n            return;\n        }\n    }\n    iVar2 = (*pcVar1)(hDlg);\n    while( true ) {\n        if (iVar2 == 0) {\n            return;\n        }\n        iVar3 = fcn.0040d00e(iVar2, nIDDlgItem, arg_10h);\n        if (iVar3 != 0) break;\n        iVar2 = (*_sym.imp.USER32.dll_GetWindow)(iVar2, 2);\n    }\n    return;\n}\n",
        "token_count": 322
    },
    "0040d085": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint fcn.0040d085(uint param_1, int32_t *param_2)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t unaff_retaddr;\n    \n    iVar3 = *param_2;\n    while( true ) {\n        if (iVar3 == 0) {\n            return 0;\n        }\n        piVar1 = fcn.0040cd4a(iVar3);\n        if ((piVar1 != NULL) && (iVar2 = (**(*piVar1 + 0x100))(param_2),  iVar2 != 0)) break;\n        if (iVar3 == unaff_retaddr) {\n            return 0;\n        }\n        iVar3 = (*_sym.imp.USER32.dll_GetParent)(iVar3);\n    }\n    return 1;\n}\n",
        "token_count": 187
    },
    "0040d1e7": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0040d1e7(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint var_1ch;\n    \n    pcVar1 = _sym.imp.USER32.dll_PeekMessageA;\n    while( true ) {\n        iVar2 = (*pcVar1)(&var_1ch, 0, 0x121, 0x121, 1);\n        if (iVar2 == 0) break;\n        (*_sym.imp.USER32.dll_DispatchMessageA)(&var_1ch);\n    }\n    fcn.0040cc7f();\n    return;\n}\n",
        "token_count": 136
    },
    "0040d5d1": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.0040d5d1(int32_t param_1)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t *piVar4;\n    \n    pcVar1 = _sym.imp.USER32.dll_GetParent;\n    if ((param_1 != 0) && (iVar2 = *(param_1 + 0x20),  iVar2 != 0)) {\n        while( true ) {\n            uVar3 = (*pcVar1)(iVar2);\n            piVar4 = fcn.0040cd23(uVar3);\n            if ((piVar4 == NULL) || (iVar2 = (**(*piVar4 + 0x120))(),  iVar2 != 0)) break;\n            iVar2 = piVar4[8];\n        }\n        return piVar4;\n    }\n    return NULL;\n}\n",
        "token_count": 196
    },
    "0040e0c2": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040e0c2(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    \n    if ((param_1 != 0) && (iVar1 = *(param_1 + 0x20),  *(param_1 + 0x20) != 0)) {\n        do {\n            iVar3 = iVar1;\n            iVar1 = fcn.0040e07d(iVar3);\n        } while (iVar1 != 0);\n        uVar2 = fcn.0040cd23(iVar3);\n        return uVar2;\n    }\n    return 0;\n}\n",
        "token_count": 149
    },
    "00411a74": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __thiscall fcn.00411a74(uint *param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    uint *extraout_ECX;\n    \n    if (param_1 != NULL) goto code_r0x00411a7d;\n    do {\n        fcn.00405a76();\n        param_1 = extraout_ECX;\ncode_r0x00411a7d:\n        iVar1 = (***param_1)();\n    } while (iVar1 == 0);\n    if (iVar1 != 0) goto code_r0x00411a58;\n    do {\n        iVar1 = fcn.00405a76();\ncode_r0x00411a58:\n    } while (param_2 == 0);\n    do {\n        if (iVar1 == param_2) {\n            return 1;\n        }\n        iVar1 = *(iVar1 + 0x10);\n    } while (iVar1 != 0);\n    return 0;\n}\n",
        "token_count": 218
    },
    "00411c07": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __thiscall fcn.00411c07(int32_t *param_1, int32_t param_2)\n\n{\n    uint uVar1;\n    int32_t *piVar2;\n    uint *puVar3;\n    uint *puVar4;\n    int32_t iVar5;\n    \n    iVar5 = *param_1;\n    if (iVar5 == 0) {\n        uVar1 = 0;\n    }\n    else {\n        if (iVar5 == param_2) {\n            piVar2 = fcn.00411bd8(param_2);\n            *param_1 = *piVar2;\n        }\n        else {\n            do {\n                piVar2 = fcn.00411bd8(iVar5);\n                if (*piVar2 == param_2) break;\n                piVar2 = fcn.00411bd8();\n                iVar5 = *piVar2;\n            } while (iVar5 != 0);\n            if (iVar5 == 0) {\n                return 0;\n            }\n            puVar3 = fcn.00411bd8(param_2);\n            puVar4 = fcn.00411bd8(iVar5);\n            *puVar4 = *puVar3;\n        }\n        uVar1 = 1;\n    }\n    return uVar1;\n}\n",
        "token_count": 283
    },
    "00411dbc": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00411dbc(int32_t arg_8h)\n\n{\n    uint32_t *puVar1;\n    uint *puVar2;\n    int32_t in_ECX;\n    int32_t iVar3;\n    uint lpCriticalSection;\n    \n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(in_ECX + 0x1c);\n    if ((0 < arg_8h) && (arg_8h < *(in_ECX + 0xc))) {\n        for (iVar3 = *(in_ECX + 0x14); iVar3 != 0; iVar3 = *(iVar3 + 4)) {\n            if (arg_8h < *(iVar3 + 8)) {\n                puVar2 = *(*(iVar3 + 0xc) + arg_8h * 4);\n                if (puVar2 != NULL) {\n                    (***puVar2)(1);\n                }\n                *(*(iVar3 + 0xc) + arg_8h * 4) = 0;\n            }\n        }\n        puVar1 = *(in_ECX + 0x10) + arg_8h * 8;\n        *puVar1 = *puVar1 & 0xfffffffe;\n        (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(in_ECX + 0x1c);\n    }\n    return;\n}\n",
        "token_count": 294
    },
    "0041287e": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0041287e(int32_t hWnd, uint lpPoint, uint arg_10h)\n\n{\n    code *pcVar1;\n    int16_t iVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint lpRect;\n    \n    (*_sym.imp.USER32.dll_ClientToScreen)(hWnd, &lpPoint);\n    pcVar1 = _sym.imp.USER32.dll_GetWindow;\n    uVar5 = 5;\n    do {\n        hWnd = (*pcVar1)(hWnd, uVar5);\n        if (hWnd == 0) {\n            return 0;\n        }\n        iVar2 = (*_sym.imp.USER32.dll_GetDlgCtrlID)(hWnd);\n        if ((iVar2 != 0) &&\n           (uVar3 = (*_sym.imp.USER32.dll_GetWindowLongA)(hWnd, 0xfffffff0),  (uVar3 & 0x10000000) != 0)) {\n            (*_sym.imp.USER32.dll_GetWindowRect)(hWnd, &lpRect);\n            iVar4 = (*_sym.imp.USER32.dll_PtInRect)(&lpRect, lpPoint, arg_10h);\n            if (iVar4 != 0) {\n                return hWnd;\n            }\n        }\n        uVar5 = 2;\n    } while( true );\n}\n",
        "token_count": 300
    },
    "00413bbb": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00413bbb(int32_t *param_1)\n\n{\n    int32_t *piVar1;\n    \n    if (param_1 != NULL) {\n        do {\n            piVar1 = *param_1;\n            fcn.0040597d(param_1);\n            param_1 = piVar1;\n        } while (piVar1 != NULL);\n    }\n    return;\n}\n",
        "token_count": 89
    },
    "0041468b": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.0041468b(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t unaff_retaddr;\n    \n    while( true ) {\n        if (param_2 == 0) {\n            return 0;\n        }\n        iVar1 = (*_sym.imp.USER32.dll_GetDlgCtrlID)(param_2);\n        if (iVar1 == unaff_retaddr) break;\n        param_2 = (*_sym.imp.USER32.dll_GetWindow)(param_2, 2);\n    }\n    return param_2;\n}\n",
        "token_count": 129
    },
    "0041474a": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.0041474a(void)\n\n{\n    code *pcVar1;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    code *pcVar2;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.00423bfe(4);\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *extraout_ECX = vtable.CEnumUnknown.0;\n    pcVar2 = NULL;\n    pcVar1 = extraout_ECX[9];\n    *(unaff_EBP + -4) = 0;\n    if ((pcVar1 == NULL) && (pcVar1 = extraout_ECX[10],  extraout_ECX[0xc] != NULL)) {\n        do {\n            (**(**(pcVar1 + pcVar2 * 4) + 8))(*(pcVar1 + pcVar2 * 4));\n            pcVar2 = pcVar2 + 1;\n        } while (pcVar2 < extraout_ECX[0xc]);\n    }\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.0041f341();\n    fcn.00423cd6();\n    return;\n}\n",
        "token_count": 287
    },
    "00418873": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00418873(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    char cVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    \n    uVar1 = *(*(param_1 + 8) + 4);\n    iVar3 = 0;\n    uVar4 = 0;\n    if (uVar1 != 0) {\n        do {\n            cVar2 = fcn.00416bf9(uVar4);\n            if ((cVar2 != '\\0') && (iVar3 = fcn.00416ac7(uVar4),  iVar3 < 0)) {\n                return iVar3;\n            }\n            uVar4 = uVar4 + 1;\n        } while (uVar4 < uVar1);\n    }\n    return iVar3;\n}\n",
        "token_count": 186
    },
    "00418b37": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00418b37(int32_t *arg_8h)\n\n{\n    code **ppcVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    int32_t *in_ECX;\n    uint32_t uVar4;\n    uint var_4h;\n    \n    puVar2 = arg_8h;\n    if (arg_8h == NULL) {\ncode_r0x00418b48:\n        iVar3 = -0x7fffbffb;\n    }\n    else {\n        if (in_ECX[1] == 0) {\n            return 0;\n        }\n        ppcVar1 = *arg_8h;\n        arg_8h = NULL;\n        iVar3 = (**ppcVar1)(puVar2, 0x45327c, &arg_8h);\n        if (-1 < iVar3) {\n            if (*in_ECX == 0) {\n                if (arg_8h != NULL) {\n                    (**(*arg_8h + 8))(arg_8h);\n                }\n                goto code_r0x00418b48;\n            }\n            uVar4 = 0;\n            if (in_ECX[1] != 0) {\n                do {\n                    (**(*arg_8h + 0x18))(arg_8h, *(*in_ECX + uVar4 * 8), 0);\n                    uVar4 = uVar4 + 1;\n                } while (uVar4 < in_ECX[1]);\n            }\n        }\n        in_ECX[1] = 0;\n        fcn.0040597d(*in_ECX);\n        *in_ECX = 0;\n        if (arg_8h != NULL) {\n            (**(*arg_8h + 8))(arg_8h);\n        }\n    }\n    return iVar3;\n}\n",
        "token_count": 405
    },
    "0041973d": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0041973d(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    \n    uVar1 = *(*(param_1 + 8) + 4);\n    iVar2 = 0;\n    uVar3 = 0;\n    if (uVar1 != 0) {\n        do {\n            iVar2 = fcn.0041936c();\n            if (iVar2 < 0) {\n                return iVar2;\n            }\n            uVar3 = uVar3 + 1;\n        } while (uVar3 < uVar1);\n    }\n    return iVar2;\n}\n",
        "token_count": 153
    },
    "0041ba18": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.0041ba18(uint param_1, int32_t param_2)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    int32_t unaff_EBX;\n    int32_t iVar4;\n    int32_t iVar5;\n    \n    pcVar1 = _sym.imp.USER32.dll_GetWindowLongA;\n    iVar4 = 0;\n    iVar5 = iVar4;\n    if (param_2 != 0) {\n        do {\n            iVar5 = param_2;\n            uVar2 = (*pcVar1)(*(iVar5 + 0x20), 0xfffffff0);\n            if ((uVar2 & 0xc0000000) != 0x40000000) {\n                return iVar4;\n            }\n            if (iVar5 == unaff_EBX) {\n                return iVar4;\n            }\n            uVar3 = (*_sym.imp.USER32.dll_GetParent)(*(iVar5 + 0x20));\n            param_2 = fcn.0040cd23(uVar3);\n            uVar2 = (*pcVar1)(*(param_2 + 0x20), 0xffffffec);\n            iVar4 = iVar5;\n        } while ((uVar2 & 0x10000) == 0);\n    }\n    return iVar5;\n}\n",
        "token_count": 293
    },
    "0041bb47": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0041bb47(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    \n    if (param_1 != 0) {\n        piVar4 = NULL;\n        iVar3 = param_1;\n        do {\n            iVar1 = *(iVar3 + 0x4c);\n            if ((iVar1 != 0) || (piVar4 = *(iVar3 + 0x50),  piVar4 != NULL)) break;\n            uVar2 = (*_sym.imp.USER32.dll_GetParent)(*(iVar3 + 0x20));\n            iVar3 = fcn.0040cd23(uVar2);\n        } while (iVar3 != 0);\n        if ((iVar3 != 0) && (iVar1 == 0)) {\n            (**(*piVar4 + 0xb0))();\n            uVar2 = (*_sym.imp.USER32.dll_GetFocus)();\n            iVar3 = fcn.0040cd23(uVar2);\n            if ((iVar3 != param_1) && (iVar3 = (*_sym.imp.USER32.dll_IsWindow)(*(param_1 + 0x20)),  iVar3 != 0)) {\n                if (*(param_1 + 0x50) != 0) {\n    // WARNING: Could not recover jumptable at 0x0040fcb1. Too many branches\n    // WARNING: Treating indirect jump as call\n                    (**(**(param_1 + 0x50) + 0xb0))();\n                    return;\n                }\n                uVar2 = (*_sym.imp.USER32.dll_SetFocus)(*(param_1 + 0x20));\n                fcn.0040cd23(uVar2);\n                return;\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 403
    },
    "0041bbb4": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0041bbd3)\n// WARNING: Removing unreachable block (ram,0x0041bbd5)\n// WARNING: Removing unreachable block (ram,0x0041bbf1)\n// WARNING: Removing unreachable block (ram,0x0041bbfa)\n// WARNING: Removing unreachable block (ram,0x0041bbff)\n// WARNING: Removing unreachable block (ram,0x0041bc0b)\n// WARNING: Removing unreachable block (ram,0x0041bc0f)\n// WARNING: Removing unreachable block (ram,0x0041bc13)\n// WARNING: Removing unreachable block (ram,0x0041bc17)\n// WARNING: Removing unreachable block (ram,0x0041bc23)\n// WARNING: Removing unreachable block (ram,0x0041bbdc)\n// WARNING: Removing unreachable block (ram,0x0041bbef)\n\nvoid fcn.0041bbb4(int32_t param_1)\n\n{\n    if (param_1 != 0) {\n        (*_sym.imp.USER32.dll_IsWindow)(*(param_1 + 0x20));\n    }\n    return;\n}\n",
        "token_count": 252
    },
    "0041bc2f": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.0041bc2f(int32_t param_1, int32_t param_2, uint param_3)\n\n{\n    int32_t noname_5;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t noname_1;\n    uint unaff_EBX;\n    uint unaff_EDI;\n    uint unaff_retaddr;\n    int32_t noname_4;\n    uint noname_6;\n    int32_t noname_4_00;\n    \n    noname_4_00 = param_2;\n    noname_5 = fcn.0040fac1();\n    if (noname_5 == 0) {\n        noname_6 = 1;\n        noname_4 = param_1;\n        iVar1 = fcn.0041ba6d(param_1, 0, 1, unaff_EBX, noname_4_00, unaff_EDI, unaff_retaddr, param_1, param_2, param_3)\n        ;\n        noname_1 = iVar1;\n        if (iVar1 == param_1) {\n            noname_5 = 0;\n        }\n        else {\n            do {\n                iVar2 = fcn.0040fbe0();\n                if (iVar2 == noname_4_00) {\n                    return noname_1;\n                }\n                noname_1 = fcn.0041ba6d(param_1, noname_1, 1, param_1, noname_4, noname_5, noname_6, unaff_EBX, \n                                        noname_4_00, unaff_EDI);\n            } while ((noname_1 != 0) && (noname_1 != iVar1));\n            noname_5 = 0;\n        }\n    }\n    return noname_5;\n}\n",
        "token_count": 407
    },
    "0041bcd3": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0041bcd3(uint param_1, int32_t param_2, uint param_3, uint param_4)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t noname_1;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    uint unaff_retaddr;\n    uint noname_4;\n    int32_t noname_5;\n    \n    if (param_2 != 0) {\n        noname_4 = *(param_2 + 0x20);\n        uVar1 = (*_sym.imp.USER32.dll_GetWindowLongA)(noname_4, 0xffffffec);\n        if ((uVar1 & 0x10000) == 0) {\n            iVar2 = fcn.0041ba18();\n            noname_5 = param_2;\n            goto code_r0x0041bd08;\n        }\n    }\n    noname_5 = 3;\n    noname_4 = 0;\n    iVar2 = fcn.0041ba6d(param_1, 0, 3, unaff_EDI, unaff_ESI, unaff_retaddr, param_1, param_2, param_3, param_4);\ncode_r0x0041bd08:\n    noname_1 = iVar2;\n    if (iVar2 != 0) {\n        do {\n            fcn.0041bc86(noname_1, 0);\n            noname_1 = fcn.0041ba6d(unaff_EDI, noname_1, 0, unaff_EDI, noname_4, noname_5, unaff_EDI, unaff_ESI, \n                                    unaff_retaddr, param_1);\n            if (noname_1 == 0) {\n                return;\n            }\n        } while (noname_1 != iVar2);\n    }\n    return;\n}\n",
        "token_count": 419
    },
    "0041c968": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint * __thiscall fcn.0041c968(int32_t param_1, uint32_t param_2, uint32_t *param_3, uint32_t *param_4)\n\n{\n    uint *puVar1;\n    uint32_t uVar2;\n    \n    *param_4 = param_2 >> 4;\n    uVar2 = (param_2 >> 4) % *(param_1 + 8);\n    *param_3 = uVar2;\n    if (*(param_1 + 4) != 0) {\n        for (puVar1 = *(*(param_1 + 4) + uVar2 * 4); puVar1 != NULL; puVar1 = *puVar1) {\n            if (puVar1[1] == param_2) {\n                return puVar1;\n            }\n        }\n    }\n    return NULL;\n}\n",
        "token_count": 192
    },
    "0041c9a0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __thiscall fcn.0041c9a0(int32_t param_1, uint32_t param_2)\n\n{\n    int32_t extraout_ECX;\n    uint *puVar1;\n    \n    if (param_1 == 0) {\n        fcn.00405a76();\n        param_1 = extraout_ECX;\n    }\n    if (*(param_1 + 4) != 0) {\n        for (puVar1 = *(*(param_1 + 4) + ((param_2 >> 4) % *(param_1 + 8)) * 4); puVar1 != NULL; puVar1 = *puVar1) {\n            if (puVar1[1] == param_2) {\n                return puVar1[2];\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 182
    },
    "0041ca07": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint * __thiscall fcn.0041ca07(int32_t param_1, uint32_t param_2)\n\n{\n    uint *puVar1;\n    uint *puVar2;\n    uint *puVar3;\n    \n    if (*(param_1 + 4) == 0) {\n        puVar2 = NULL;\n    }\n    else {\n        puVar3 = *(param_1 + 4) + ((param_2 >> 4) % *(param_1 + 8)) * 4;\n        puVar1 = *puVar3;\n        while (puVar2 = puVar1,  puVar2 != NULL) {\n            if (puVar2[1] == param_2) {\n                *puVar3 = *puVar2;\n                fcn.0041c94f(puVar2);\n                return 0x1;\n            }\n            puVar3 = puVar2;\n            puVar1 = *puVar2;\n        }\n    }\n    return puVar2;\n}\n",
        "token_count": 220
    },
    "0041cc7c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0041cc7c(int32_t param_1, int32_t param_2, uint *param_3)\n\n{\n    if (param_3 != NULL) goto code_r0x0041cc92;\n    for (param_3 = *(param_1 + 4); (param_3 != NULL && (param_3[2] != param_2)); param_3 = *param_3) {\ncode_r0x0041cc92:\n    }\n    return;\n}\n",
        "token_count": 112
    },
    "0041d156": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041d156(code **param_1)\n\n{\n    code *pcVar1;\n    uint *puVar2;\n    uint uStack24;\n    code *pcStack20;\n    \n    *param_1 = vtable.CMapStringToPtr.0;\n    if (param_1[1] != NULL) {\n        pcVar1 = NULL;\n        if (param_1[2] != NULL) {\n            do {\n                for (puVar2 = *(param_1[1] + pcVar1 * 4); puVar2 != NULL; puVar2 = *puVar2) {\n                    if (puVar2 == 0xfffffff8) {\n                        pcStack20 = NULL;\n                        uStack24 = 0x45f468;\n                        fcn.00421cb9(&uStack24, 0x459604);\n                        pcVar1 = swi(3);\n                        (*pcVar1)();\n                        return;\n                    }\n                    uStack24 = 0x41d123;\n                    fcn.0041cfdf();\n                }\n                pcVar1 = pcVar1 + 1;\n            } while (pcVar1 < param_1[2]);\n        }\n        pcStack20 = param_1[1];\n        uStack24 = 0x41d137;\n        fcn.0040597d();\n        param_1[1] = NULL;\n    }\n    param_1[3] = NULL;\n    param_1[4] = NULL;\n    pcStack20 = 0x41d149;\n    fcn.00413bbb();\n    param_1[5] = NULL;\n    return;\n}\n",
        "token_count": 358
    },
    "0041e0b5": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041e0b5(uint lpFileTime, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint *in_ECX;\n    uint lpSystemTime;\n    uint lpLocalFileTime;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_FileTimeToLocalFileTime)(lpFileTime, &lpLocalFileTime);\n    if (iVar1 != 0) goto code_r0x0041e0e0;\n    do {\n        *in_ECX = 0;\n        in_ECX[1] = 0;\n        lpFileTime = 0x80070057;\n        fcn.00401090();\ncode_r0x0041e0e0:\n        iVar1 = (*_sym.imp.KERNEL32.dll_FileTimeToSystemTime)(&lpLocalFileTime, &lpSystemTime, lpFileTime);\n    } while (iVar1 == 0);\n    fcn.004119a5(&lpSystemTime, arg_ch);\n    *in_ECX = var_8h;\n    in_ECX[1] = var_4h;\n    return;\n}\n",
        "token_count": 255
    },
    "004204e4": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.004204e4(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00409b0a();\n    fcn.00412ac4(0);\n    for (iVar1 = *(iVar1 + 0x24); iVar1 != 0; iVar1 = *(iVar1 + 0x20)) {\n        fcn.004204c3();\n    }\n    fcn.00412b31(0);\n    return;\n}\n",
        "token_count": 104
    },
    "00426cfa": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00426cfa(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *arg_8h_00;\n    int32_t *piVar3;\n    int32_t *piVar4;\n    int32_t unaff_EBP;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.004259a4(0x45c848, 0xc);\n    fcn.00426f6e(0xe);\n    *(unaff_EBP + -4) = 0;\n    arg_8h_00 = *0x463a84;\n    iVar1 = *(unaff_EBP + 8);\n    iVar2 = *(iVar1 + 4);\n    if (iVar2 != 0) {\n        piVar3 = 0x463a80;\n        do {\n            piVar4 = piVar3;\n            *(unaff_EBP + -0x1c) = arg_8h_00;\n            if (arg_8h_00 == NULL) goto code_r0x00426d3e;\n            piVar3 = arg_8h_00;\n        } while (*arg_8h_00 != iVar2);\n        piVar4[1] = arg_8h_00[1];\n        fcn.004212be(arg_8h_00);\ncode_r0x00426d3e:\n        fcn.004212be(*(iVar1 + 4));\n        *(iVar1 + 4) = 0;\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    fcn.00426d61();\n    fcn.004259e9();\n    return;\n}\n",
        "token_count": 398
    },
    "0040f968": {
        "rules": [
            "extract resource via kernel32 functions"
        ],
        "decompiled_code": "\nuint fcn.0040f968(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t arg_8h;\n    int32_t iVar3;\n    \n    iVar3 = 0;\n    arg_8h = 0;\n    if (param_1 != 0) {\n        iVar1 = fcn.00409b0a();\n        uVar2 = *(iVar1 + 0xc);\n        iVar1 = (*_sym.imp.KERNEL32.dll_FindResourceA)(uVar2, param_1, 0xf0);\n        if (iVar1 != 0) {\n            iVar3 = (*_sym.imp.KERNEL32.dll_LoadResource)(uVar2, iVar1);\n            if (iVar3 == 0) {\n                return 0;\n            }\n            arg_8h = (*_sym.imp.KERNEL32.dll_LockResource)(iVar3);\n        }\n    }\n    uVar2 = fcn.0040f51f(arg_8h);\n    if ((arg_8h != 0) && (iVar3 != 0)) {\n        (*_sym.imp.KERNEL32.dll_FreeResource)(iVar3);\n    }\n    return uVar2;\n}\n",
        "token_count": 265
    },
    "00411755": {
        "rules": [
            "extract resource via kernel32 functions"
        ],
        "decompiled_code": "\nvoid fcn.00411755(uint param_1, uint param_2)\n\n{\n    uint uVar1;\n    \n    uVar1 = (*_sym.imp.KERNEL32.dll_LockResource)(param_1);\n    fcn.0041172a(uVar1, param_1, 0, param_2);\n    return;\n}\n",
        "token_count": 74
    },
    "0040a80d": {
        "rules": [
            "link function at runtime on Windows",
            "link many functions at runtime"
        ],
        "decompiled_code": "\nbool fcn.0040a80d(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    \n    if (*0x46358c != 0) {\n        return *0x463580 != 0;\n    }\n    *0x463590 = fcn.0040a7b5();\n    iVar2 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(\"USER32\");\n    pcVar1 = _sym.imp.KERNEL32.dll_GetProcAddress;\n    if (((((iVar2 != 0) && (*0x463570 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, 0x451fd4),  *0x463570 != 0)) &&\n         (*0x463574 = (*pcVar1)(iVar2, \"MonitorFromWindow\"),  *0x463574 != 0)) &&\n        ((*0x463578 = (*pcVar1)(iVar2, \"MonitorFromRect\"),  *0x463578 != 0 &&\n         (*0x46357c = (*pcVar1)(iVar2, \"MonitorFromPoint\"),  *0x46357c != 0)))) &&\n       ((*0x463584 = (*pcVar1)(iVar2, \"EnumDisplayMonitors\"),  *0x463584 != 0 &&\n        ((*0x463580 = (*pcVar1)(iVar2, \"GetMonitorInfoA\"),  *0x463580 != 0 &&\n         (*0x463588 = (*pcVar1)(iVar2, \"EnumDisplayDevicesA\"),  *0x463588 != 0)))))) {\n        *0x46358c = 1;\n        return true;\n    }\n    *0x463570 = 0;\n    *0x463574 = 0;\n    *0x463578 = 0;\n    *0x46357c = 0;\n    *0x463580 = 0;\n    *0x463584 = 0;\n    *0x463588 = 0;\n    *0x46358c = 1;\n    return false;\n}\n",
        "token_count": 448
    },
    "004094a8": {
        "rules": [
            "set application hook"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004094a8(code **param_1)\n\n{\n    code *pcVar1;\n    \n    pcVar1 = _sym.imp.USER32.dll_UnhookWindowsHookEx;\n    *param_1 = vtable._AFX_THREAD_STATE.0;\n    if (param_1[0xb] != NULL) {\n        (*pcVar1)(param_1[0xb]);\n    }\n    if (param_1[10] != NULL) {\n        (*pcVar1)(param_1[10]);\n    }\n    if (param_1[3] != NULL) {\n        fcn.004212be(param_1[3]);\n    }\n    return;\n}\n",
        "token_count": 146
    },
    "0041ce79": {
        "rules": [
            "set application hook"
        ],
        "decompiled_code": "\nvoid fcn.0041ce79(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    fcn.0041cdda();\n    iVar2 = fcn.00409b0a();\n    if ((*(iVar2 + 4) != 0) && (pcVar1 = *(*(iVar2 + 4) + 0x3c),  pcVar1 != NULL)) {\n        (*pcVar1)(1, 0);\n    }\n    iVar2 = fcn.00409b3d();\n    if ((*(iVar2 + 0x3c) != NULL) && (iVar3 = (**(**(iVar2 + 0x3c) + 0x13c))(),  iVar3 != 0)) {\n        *(iVar2 + 0x3c) = 0;\n    }\n    iVar2 = fcn.004095e9();\n    iVar3 = fcn.00409b0a();\n    pcVar1 = _sym.imp.USER32.dll_UnhookWindowsHookEx;\n    if (*(iVar3 + 0x14) == '\\0') {\n        if (*(iVar2 + 0x2c) != 0) {\n            (*_sym.imp.USER32.dll_UnhookWindowsHookEx)(*(iVar2 + 0x2c));\n            *(iVar2 + 0x2c) = 0;\n        }\n        if (*(iVar2 + 0x28) != 0) {\n            (*pcVar1)(*(iVar2 + 0x28));\n            *(iVar2 + 0x28) = 0;\n        }\n    }\n    return;\n}\n",
        "token_count": 360
    },
    "00411afa": {
        "rules": [
            "get thread local storage value"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00411afa(uint *param_1)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t unaff_retaddr;\n    \n    puVar1 = param_1 + 7;\n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(puVar1);\n    if ((((0 < unaff_retaddr) && (unaff_retaddr < param_1[3])) &&\n        (iVar3 = (*_sym.imp.KERNEL32.dll_TlsGetValue)(*param_1),  iVar3 != 0)) && (unaff_retaddr < *(iVar3 + 8))) {\n        uVar2 = *(*(iVar3 + 0xc) + unaff_retaddr * 4);\n        (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(puVar1);\n        return uVar2;\n    }\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(puVar1);\n    return 0;\n}\n",
        "token_count": 213
    }
}