{
    "00409999": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00409999(int32_t param_1)\n\n{\n    if (*(param_1 + 8) != '\\0') {\n        fcn.00409ef1(*(param_1 + 4));\n    }\n    *(param_1 + 4) = 0;\n    *(param_1 + 8) = 0;\n    return;\n}\n",
        "token_count": 81
    },
    "0040acc0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.0040acc0(uint *arg_8h, uint *arg_ch, uint32_t arg_10h)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint uVar3;\n    uint uVar4;\n    uint uVar5;\n    uint uVar6;\n    uint uVar7;\n    uint uVar8;\n    uint uVar9;\n    uint uVar10;\n    uint uVar11;\n    uint uVar12;\n    uint uVar13;\n    uint uVar14;\n    uint uVar15;\n    uint32_t uVar16;\n    uint32_t uVar17;\n    uint *puVar18;\n    \n    if ((arg_ch < arg_8h) && (arg_8h < arg_10h + arg_ch)) {\n        arg_ch = (arg_10h - 4) + arg_ch;\n        puVar18 = (arg_10h - 4) + arg_8h;\n        if ((puVar18 & 3) == 0) {\n            uVar16 = arg_10h >> 2;\n            if (uVar16 < 8) goto code_r0x0040aea8;\n            for (; uVar16 != 0; uVar16 = uVar16 - 1) {\n                *puVar18 = *arg_ch;\n                arg_ch = arg_ch + -1;\n                puVar18 = puVar18 + -1;\n            }\n    // switch table (4 cases) at 0x40afcc\n            switch(*((arg_10h & 3) * 4 + 0x40afcc)) {\n            case 0x40afe4:\ncode_r0x0040afe4:\n                *(puVar18 + 3) = *(arg_ch + 3);\n                return arg_8h;\n            case 0x40aff4:\ncode_r0x0040aff4:\n                *(puVar18 + 3) = *(arg_ch + 3);\n                *(puVar18 + 2) = *(arg_ch + 2);\n                return arg_8h;\n            case 0x40b008:\ncode_r0x0040b008:\n                *(puVar18 + 3) = *(arg_ch + 3);\n                *(puVar18 + 2) = *(arg_ch + 2);\n                *(puVar18 + 1) = *(arg_ch + 1);\n                return arg_8h;\n            }\n        }\n        else if (arg_10h < 4) {\n    // switch table (4 cases) at 0x40afcc\n            switch(*(arg_10h * 4 + 0x40afcc)) {\n            case 0x40afe4:\n                goto code_r0x0040afe4;\n            case 0x40aff4:\n                goto code_r0x0040aff4;\n            case 0x40b008:\n                goto code_r0x0040b008;\n            }\n        }\n        else {\n            arg_10h = arg_10h - (puVar18 & 3);\n            switch(*((puVar18 & 3) * 4 + 0x40aed0)) {\n            case 0x40aee0:\n                *(puVar18 + 3) = *(arg_ch + 3);\n                arg_ch = arg_ch + -1;\n                uVar16 = arg_10h >> 2;\n                puVar18 = puVar18 - 1;\n                if (uVar16 < 8) {\ncode_r0x0040aea8:\n    // WARNING: Could not recover jumptable at 0x0040aeaa. Too many branches\n    // WARNING: Treating indirect jump as call\n    // switch table (1 cases) at 0x40af7c\n                    puVar18 = (**(uVar16 * -4 + 0x40af7c))();\n                    return puVar18;\n                }\n                for (; uVar16 != 0; uVar16 = uVar16 - 1) {\n                    *puVar18 = *arg_ch;\n                    arg_ch = arg_ch + -1;\n                    puVar18 = puVar18 + -1;\n                }\n                switch(*((arg_10h & 3) * 4 + 0x40afcc)) {\n                case 0x40afe4:\n                    goto code_r0x0040afe4;\n                case 0x40aff4:\n                    goto code_r0x0040aff4;\n                case 0x40b008:\n                    goto code_r0x0040b008;\n                }\n                break;\n            case 0x40af04:\n                *(puVar18 + 3) = *(arg_ch + 3);\n                uVar16 = arg_10h >> 2;\n                *(puVar18 + 2) = *(arg_ch + 2);\n                arg_ch = arg_ch + -2;\n                puVar18 = puVar18 - 2;\n                if (uVar16 < 8) goto code_r0x0040aea8;\n                for (; uVar16 != 0; uVar16 = uVar16 - 1) {\n                    *puVar18 = *arg_ch;\n                    arg_ch = arg_ch + -1;\n                    puVar18 = puVar18 + -1;\n                }\n                switch(*((arg_10h & 3) * 4 + 0x40afcc)) {\n                case 0x40afe4:\n                    goto code_r0x0040afe4;\n                case 0x40aff4:\n                    goto code_r0x0040aff4;\n                case 0x40b008:\n                    goto code_r0x0040b008;\n                }\n                break;\n            case 0x40af2c:\n                *(puVar18 + 3) = *(arg_ch + 3);\n                *(puVar18 + 2) = *(arg_ch + 2);\n                uVar16 = arg_10h >> 2;\n                *(puVar18 + 1) = *(arg_ch + 1);\n                arg_ch = arg_ch + -3;\n                puVar18 = puVar18 - 3;\n                if (uVar16 < 8) goto code_r0x0040aea8;\n                for (; uVar16 != 0; uVar16 = uVar16 - 1) {\n                    *puVar18 = *arg_ch;\n                    arg_ch = arg_ch + -1;\n                    puVar18 = puVar18 + -1;\n                }\n                switch(*((arg_10h & 3) * 4 + 0x40afcc)) {\n                case 0x40afe4:\n                    goto code_r0x0040afe4;\n                case 0x40aff4:\n                    goto code_r0x0040aff4;\n                case 0x40b008:\n                    goto code_r0x0040b008;\n                }\n            }\n        }\n        return arg_8h;\n    }\n    if (((0x7f < arg_10h) && (*0xbb61f8 != 0)) && ((arg_8h & 0xf) == (arg_ch & 0xf))) {\n        puVar18 = arg_8h;\n        if ((arg_ch & 0xf) != 0) {\n            uVar17 = 0x10 - (arg_ch & 0xf);\n            arg_10h = arg_10h - uVar17;\n            for (uVar16 = uVar17 & 3; uVar16 != 0; uVar16 = uVar16 - 1) {\n                *puVar18 = *arg_ch;\n                arg_ch = arg_ch + 1;\n                puVar18 = puVar18 + 1;\n            }\n            for (uVar17 = uVar17 >> 2; uVar17 != 0; uVar17 = uVar17 - 1) {\n                *puVar18 = *arg_ch;\n                arg_ch = arg_ch + 1;\n                puVar18 = puVar18 + 1;\n            }\n        }\n        for (uVar16 = arg_10h >> 7; uVar16 != 0; uVar16 = uVar16 - 1) {\n            uVar1 = arg_ch[1];\n            uVar2 = arg_ch[2];\n            uVar3 = arg_ch[3];\n            uVar4 = arg_ch[4];\n            uVar5 = arg_ch[5];\n            uVar6 = arg_ch[6];\n            uVar7 = arg_ch[7];\n            uVar8 = arg_ch[8];\n            uVar9 = arg_ch[9];\n            uVar10 = arg_ch[10];\n            uVar11 = arg_ch[0xb];\n            uVar12 = arg_ch[0xc];\n            uVar13 = arg_ch[0xd];\n            uVar14 = arg_ch[0xe];\n            uVar15 = arg_ch[0xf];\n            *puVar18 = *arg_ch;\n            puVar18[1] = uVar1;\n            puVar18[2] = uVar2;\n            puVar18[3] = uVar3;\n            puVar18[4] = uVar4;\n            puVar18[5] = uVar5;\n            puVar18[6] = uVar6;\n            puVar18[7] = uVar7;\n            puVar18[8] = uVar8;\n            puVar18[9] = uVar9;\n            puVar18[10] = uVar10;\n            puVar18[0xb] = uVar11;\n            puVar18[0xc] = uVar12;\n            puVar18[0xd] = uVar13;\n            puVar18[0xe] = uVar14;\n            puVar18[0xf] = uVar15;\n            uVar1 = arg_ch[0x11];\n            uVar2 = arg_ch[0x12];\n            uVar3 = arg_ch[0x13];\n            uVar4 = arg_ch[0x14];\n            uVar5 = arg_ch[0x15];\n            uVar6 = arg_ch[0x16];\n            uVar7 = arg_ch[0x17];\n            uVar8 = arg_ch[0x18];\n            uVar9 = arg_ch[0x19];\n            uVar10 = arg_ch[0x1a];\n            uVar11 = arg_ch[0x1b];\n            uVar12 = arg_ch[0x1c];\n            uVar13 = arg_ch[0x1d];\n            uVar14 = arg_ch[0x1e];\n            uVar15 = arg_ch[0x1f];\n            puVar18[0x10] = arg_ch[0x10];\n            puVar18[0x11] = uVar1;\n            puVar18[0x12] = uVar2;\n            puVar18[0x13] = uVar3;\n            puVar18[0x14] = uVar4;\n            puVar18[0x15] = uVar5;\n            puVar18[0x16] = uVar6;\n            puVar18[0x17] = uVar7;\n            puVar18[0x18] = uVar8;\n            puVar18[0x19] = uVar9;\n            puVar18[0x1a] = uVar10;\n            puVar18[0x1b] = uVar11;\n            puVar18[0x1c] = uVar12;\n            puVar18[0x1d] = uVar13;\n            puVar18[0x1e] = uVar14;\n            puVar18[0x1f] = uVar15;\n            arg_ch = arg_ch + 0x20;\n            puVar18 = puVar18 + 0x20;\n        }\n        if ((arg_10h & 0x7f) != 0) {\n            for (uVar16 = (arg_10h & 0x7f) >> 4; uVar16 != 0; uVar16 = uVar16 - 1) {\n                uVar1 = arg_ch[1];\n                uVar2 = arg_ch[2];\n                uVar3 = arg_ch[3];\n                *puVar18 = *arg_ch;\n                puVar18[1] = uVar1;\n                puVar18[2] = uVar2;\n                puVar18[3] = uVar3;\n                arg_ch = arg_ch + 4;\n                puVar18 = puVar18 + 4;\n            }\n            if ((arg_10h & 0xf) != 0) {\n                for (uVar16 = (arg_10h & 0xf) >> 2; uVar16 != 0; uVar16 = uVar16 - 1) {\n                    *puVar18 = *arg_ch;\n                    arg_ch = arg_ch + 1;\n                    puVar18 = puVar18 + 1;\n                }\n                for (arg_10h = arg_10h & 3; arg_10h != 0; arg_10h = arg_10h - 1) {\n                    *puVar18 = *arg_ch;\n                    arg_ch = arg_ch + 1;\n                    puVar18 = puVar18 + 1;\n                }\n            }\n        }\n        return arg_8h;\n    }\n    puVar18 = arg_8h;\n    if ((arg_8h & 3) == 0) {\n        uVar17 = arg_10h >> 2;\n        if (uVar17 < 8) goto code_r0x0040ad40;\n        for (; uVar17 != 0; uVar17 = uVar17 - 1) {\n            *puVar18 = *arg_ch;\n            arg_ch = arg_ch + 1;\n            puVar18 = puVar18 + 1;\n        }\n    // switch table (4 cases) at 0x40ae30\n        switch(*((arg_10h & 3) * 4 + 0x40ae30)) {\n        case 0x40ae48:\ncode_r0x0040ae48:\n            *puVar18 = *arg_ch;\n            return arg_8h;\n        case 0x40ae54:\ncode_r0x0040ae54:\n            *puVar18 = *arg_ch;\n            *(puVar18 + 1) = *(arg_ch + 1);\n            return arg_8h;\n        case 0x40ae68:\ncode_r0x0040ae68:\n            *puVar18 = *arg_ch;\n            *(puVar18 + 1) = *(arg_ch + 1);\n            *(puVar18 + 2) = *(arg_ch + 2);\n            return arg_8h;\n        }\n    }\n    else if (arg_10h < 4) {\n        switch(*((arg_10h - 4) * 4 + 0x40ae40)) {\n        case 0x40ae48:\n            goto code_r0x0040ae48;\n        case 0x40ae54:\n            goto code_r0x0040ae54;\n        case 0x40ae68:\n            goto code_r0x0040ae68;\n        }\n    }\n    else {\n        uVar16 = (arg_10h - 4) + (arg_8h & 3);\n        switch(*((arg_8h & 3) * 4 + 0x40ad44)) {\n        case 0x40ad54:\n            *arg_8h = *arg_ch;\n            *(arg_8h + 1) = *(arg_ch + 1);\n            uVar17 = uVar16 >> 2;\n            *(arg_8h + 2) = *(arg_ch + 2);\n            arg_ch = arg_ch + 3;\n            puVar18 = arg_8h + 3;\n            if (uVar17 < 8) {\ncode_r0x0040ad40:\n    // WARNING: Could not recover jumptable at 0x0040ad40. Too many branches\n    // WARNING: Treating indirect jump as call\n    // switch table (8 cases) at 0x40adc4\n                puVar18 = (**(uVar17 * 4 + 0x40adc4))();\n                return puVar18;\n            }\n            for (; uVar17 != 0; uVar17 = uVar17 - 1) {\n                *puVar18 = *arg_ch;\n                arg_ch = arg_ch + 1;\n                puVar18 = puVar18 + 1;\n            }\n            switch(*((uVar16 & 3) * 4 + 0x40ae30)) {\n            case 0x40ae48:\n                goto code_r0x0040ae48;\n            case 0x40ae54:\n                goto code_r0x0040ae54;\n            case 0x40ae68:\n                goto code_r0x0040ae68;\n            }\n            break;\n        case 0x40ad80:\n            *arg_8h = *arg_ch;\n            uVar17 = uVar16 >> 2;\n            *(arg_8h + 1) = *(arg_ch + 1);\n            arg_ch = arg_ch + 2;\n            puVar18 = arg_8h + 2;\n            if (uVar17 < 8) goto code_r0x0040ad40;\n            for (; uVar17 != 0; uVar17 = uVar17 - 1) {\n                *puVar18 = *arg_ch;\n                arg_ch = arg_ch + 1;\n                puVar18 = puVar18 + 1;\n            }\n            switch(*((uVar16 & 3) * 4 + 0x40ae30)) {\n            case 0x40ae48:\n                goto code_r0x0040ae48;\n            case 0x40ae54:\n                goto code_r0x0040ae54;\n            case 0x40ae68:\n                goto code_r0x0040ae68;\n            }\n            break;\n        case 0x40ada4:\n            *arg_8h = *arg_ch;\n            uVar17 = uVar16 >> 2;\n            arg_ch = arg_ch + 1;\n            puVar18 = arg_8h + 1;\n            if (uVar17 < 8) goto code_r0x0040ad40;\n            for (; uVar17 != 0; uVar17 = uVar17 - 1) {\n                *puVar18 = *arg_ch;\n                arg_ch = arg_ch + 1;\n                puVar18 = puVar18 + 1;\n            }\n            switch(*((uVar16 & 3) * 4 + 0x40ae30)) {\n            case 0x40ae48:\n                goto code_r0x0040ae48;\n            case 0x40ae54:\n                goto code_r0x0040ae54;\n            case 0x40ae68:\n                goto code_r0x0040ae68;\n            }\n        }\n    }\n    return arg_8h;\n}\n",
        "token_count": 4190
    },
    "00409b90": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.00409b90(uint *arg_8h, uint *arg_ch, uint32_t arg_10h)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint uVar3;\n    uint uVar4;\n    uint uVar5;\n    uint uVar6;\n    uint uVar7;\n    uint uVar8;\n    uint uVar9;\n    uint uVar10;\n    uint uVar11;\n    uint uVar12;\n    uint uVar13;\n    uint uVar14;\n    uint uVar15;\n    uint32_t uVar16;\n    uint32_t uVar17;\n    uint *puVar18;\n    \n    if ((arg_ch < arg_8h) && (arg_8h < arg_10h + arg_ch)) {\n        arg_ch = (arg_10h - 4) + arg_ch;\n        puVar18 = (arg_10h - 4) + arg_8h;\n        if ((puVar18 & 3) == 0) {\n            uVar16 = arg_10h >> 2;\n            if (uVar16 < 8) goto code_r0x00409d78;\n            for (; uVar16 != 0; uVar16 = uVar16 - 1) {\n                *puVar18 = *arg_ch;\n                arg_ch = arg_ch + -1;\n                puVar18 = puVar18 + -1;\n            }\n    // switch table (4 cases) at 0x409e9c\n            switch(*((arg_10h & 3) * 4 + 0x409e9c)) {\n            case 0x409eb4:\ncode_r0x00409eb4:\n                *(puVar18 + 3) = *(arg_ch + 3);\n                return arg_8h;\n            case 0x409ec4:\ncode_r0x00409ec4:\n                *(puVar18 + 3) = *(arg_ch + 3);\n                *(puVar18 + 2) = *(arg_ch + 2);\n                return arg_8h;\n            case 0x409ed8:\ncode_r0x00409ed8:\n                *(puVar18 + 3) = *(arg_ch + 3);\n                *(puVar18 + 2) = *(arg_ch + 2);\n                *(puVar18 + 1) = *(arg_ch + 1);\n                return arg_8h;\n            }\n        }\n        else if (arg_10h < 4) {\n    // switch table (4 cases) at 0x409e9c\n            switch(*(arg_10h * 4 + 0x409e9c)) {\n            case 0x409eb4:\n                goto code_r0x00409eb4;\n            case 0x409ec4:\n                goto code_r0x00409ec4;\n            case 0x409ed8:\n                goto code_r0x00409ed8;\n            }\n        }\n        else {\n            arg_10h = arg_10h - (puVar18 & 3);\n            switch(*((puVar18 & 3) * 4 + 0x409da0)) {\n            case 0x409db0:\n                *(puVar18 + 3) = *(arg_ch + 3);\n                arg_ch = arg_ch + -1;\n                uVar16 = arg_10h >> 2;\n                puVar18 = puVar18 - 1;\n                if (uVar16 < 8) {\ncode_r0x00409d78:\n    // WARNING: Could not recover jumptable at 0x00409d7a. Too many branches\n    // WARNING: Treating indirect jump as call\n    // switch table (1 cases) at 0x409e4c\n                    puVar18 = (**(uVar16 * -4 + 0x409e4c))();\n                    return puVar18;\n                }\n                for (; uVar16 != 0; uVar16 = uVar16 - 1) {\n                    *puVar18 = *arg_ch;\n                    arg_ch = arg_ch + -1;\n                    puVar18 = puVar18 + -1;\n                }\n                switch(*((arg_10h & 3) * 4 + 0x409e9c)) {\n                case 0x409eb4:\n                    goto code_r0x00409eb4;\n                case 0x409ec4:\n                    goto code_r0x00409ec4;\n                case 0x409ed8:\n                    goto code_r0x00409ed8;\n                }\n                break;\n            case 0x409dd4:\n                *(puVar18 + 3) = *(arg_ch + 3);\n                uVar16 = arg_10h >> 2;\n                *(puVar18 + 2) = *(arg_ch + 2);\n                arg_ch = arg_ch + -2;\n                puVar18 = puVar18 - 2;\n                if (uVar16 < 8) goto code_r0x00409d78;\n                for (; uVar16 != 0; uVar16 = uVar16 - 1) {\n                    *puVar18 = *arg_ch;\n                    arg_ch = arg_ch + -1;\n                    puVar18 = puVar18 + -1;\n                }\n                switch(*((arg_10h & 3) * 4 + 0x409e9c)) {\n                case 0x409eb4:\n                    goto code_r0x00409eb4;\n                case 0x409ec4:\n                    goto code_r0x00409ec4;\n                case 0x409ed8:\n                    goto code_r0x00409ed8;\n                }\n                break;\n            case 0x409dfc:\n                *(puVar18 + 3) = *(arg_ch + 3);\n                *(puVar18 + 2) = *(arg_ch + 2);\n                uVar16 = arg_10h >> 2;\n                *(puVar18 + 1) = *(arg_ch + 1);\n                arg_ch = arg_ch + -3;\n                puVar18 = puVar18 - 3;\n                if (uVar16 < 8) goto code_r0x00409d78;\n                for (; uVar16 != 0; uVar16 = uVar16 - 1) {\n                    *puVar18 = *arg_ch;\n                    arg_ch = arg_ch + -1;\n                    puVar18 = puVar18 + -1;\n                }\n                switch(*((arg_10h & 3) * 4 + 0x409e9c)) {\n                case 0x409eb4:\n                    goto code_r0x00409eb4;\n                case 0x409ec4:\n                    goto code_r0x00409ec4;\n                case 0x409ed8:\n                    goto code_r0x00409ed8;\n                }\n            }\n        }\n        return arg_8h;\n    }\n    if (((0x7f < arg_10h) && (*0xbb61f8 != 0)) && ((arg_8h & 0xf) == (arg_ch & 0xf))) {\n        puVar18 = arg_8h;\n        if ((arg_ch & 0xf) != 0) {\n            uVar17 = 0x10 - (arg_ch & 0xf);\n            arg_10h = arg_10h - uVar17;\n            for (uVar16 = uVar17 & 3; uVar16 != 0; uVar16 = uVar16 - 1) {\n                *puVar18 = *arg_ch;\n                arg_ch = arg_ch + 1;\n                puVar18 = puVar18 + 1;\n            }\n            for (uVar17 = uVar17 >> 2; uVar17 != 0; uVar17 = uVar17 - 1) {\n                *puVar18 = *arg_ch;\n                arg_ch = arg_ch + 1;\n                puVar18 = puVar18 + 1;\n            }\n        }\n        for (uVar16 = arg_10h >> 7; uVar16 != 0; uVar16 = uVar16 - 1) {\n            uVar1 = arg_ch[1];\n            uVar2 = arg_ch[2];\n            uVar3 = arg_ch[3];\n            uVar4 = arg_ch[4];\n            uVar5 = arg_ch[5];\n            uVar6 = arg_ch[6];\n            uVar7 = arg_ch[7];\n            uVar8 = arg_ch[8];\n            uVar9 = arg_ch[9];\n            uVar10 = arg_ch[10];\n            uVar11 = arg_ch[0xb];\n            uVar12 = arg_ch[0xc];\n            uVar13 = arg_ch[0xd];\n            uVar14 = arg_ch[0xe];\n            uVar15 = arg_ch[0xf];\n            *puVar18 = *arg_ch;\n            puVar18[1] = uVar1;\n            puVar18[2] = uVar2;\n            puVar18[3] = uVar3;\n            puVar18[4] = uVar4;\n            puVar18[5] = uVar5;\n            puVar18[6] = uVar6;\n            puVar18[7] = uVar7;\n            puVar18[8] = uVar8;\n            puVar18[9] = uVar9;\n            puVar18[10] = uVar10;\n            puVar18[0xb] = uVar11;\n            puVar18[0xc] = uVar12;\n            puVar18[0xd] = uVar13;\n            puVar18[0xe] = uVar14;\n            puVar18[0xf] = uVar15;\n            uVar1 = arg_ch[0x11];\n            uVar2 = arg_ch[0x12];\n            uVar3 = arg_ch[0x13];\n            uVar4 = arg_ch[0x14];\n            uVar5 = arg_ch[0x15];\n            uVar6 = arg_ch[0x16];\n            uVar7 = arg_ch[0x17];\n            uVar8 = arg_ch[0x18];\n            uVar9 = arg_ch[0x19];\n            uVar10 = arg_ch[0x1a];\n            uVar11 = arg_ch[0x1b];\n            uVar12 = arg_ch[0x1c];\n            uVar13 = arg_ch[0x1d];\n            uVar14 = arg_ch[0x1e];\n            uVar15 = arg_ch[0x1f];\n            puVar18[0x10] = arg_ch[0x10];\n            puVar18[0x11] = uVar1;\n            puVar18[0x12] = uVar2;\n            puVar18[0x13] = uVar3;\n            puVar18[0x14] = uVar4;\n            puVar18[0x15] = uVar5;\n            puVar18[0x16] = uVar6;\n            puVar18[0x17] = uVar7;\n            puVar18[0x18] = uVar8;\n            puVar18[0x19] = uVar9;\n            puVar18[0x1a] = uVar10;\n            puVar18[0x1b] = uVar11;\n            puVar18[0x1c] = uVar12;\n            puVar18[0x1d] = uVar13;\n            puVar18[0x1e] = uVar14;\n            puVar18[0x1f] = uVar15;\n            arg_ch = arg_ch + 0x20;\n            puVar18 = puVar18 + 0x20;\n        }\n        if ((arg_10h & 0x7f) != 0) {\n            for (uVar16 = (arg_10h & 0x7f) >> 4; uVar16 != 0; uVar16 = uVar16 - 1) {\n                uVar1 = arg_ch[1];\n                uVar2 = arg_ch[2];\n                uVar3 = arg_ch[3];\n                *puVar18 = *arg_ch;\n                puVar18[1] = uVar1;\n                puVar18[2] = uVar2;\n                puVar18[3] = uVar3;\n                arg_ch = arg_ch + 4;\n                puVar18 = puVar18 + 4;\n            }\n            if ((arg_10h & 0xf) != 0) {\n                for (uVar16 = (arg_10h & 0xf) >> 2; uVar16 != 0; uVar16 = uVar16 - 1) {\n                    *puVar18 = *arg_ch;\n                    arg_ch = arg_ch + 1;\n                    puVar18 = puVar18 + 1;\n                }\n                for (arg_10h = arg_10h & 3; arg_10h != 0; arg_10h = arg_10h - 1) {\n                    *puVar18 = *arg_ch;\n                    arg_ch = arg_ch + 1;\n                    puVar18 = puVar18 + 1;\n                }\n            }\n        }\n        return arg_8h;\n    }\n    puVar18 = arg_8h;\n    if ((arg_8h & 3) == 0) {\n        uVar17 = arg_10h >> 2;\n        if (uVar17 < 8) goto code_r0x00409c10;\n        for (; uVar17 != 0; uVar17 = uVar17 - 1) {\n            *puVar18 = *arg_ch;\n            arg_ch = arg_ch + 1;\n            puVar18 = puVar18 + 1;\n        }\n    // switch table (4 cases) at 0x409d00\n        switch(*((arg_10h & 3) * 4 + 0x409d00)) {\n        case 0x409d18:\ncode_r0x00409d18:\n            *puVar18 = *arg_ch;\n            return arg_8h;\n        case 0x409d24:\ncode_r0x00409d24:\n            *puVar18 = *arg_ch;\n            *(puVar18 + 1) = *(arg_ch + 1);\n            return arg_8h;\n        case 0x409d38:\ncode_r0x00409d38:\n            *puVar18 = *arg_ch;\n            *(puVar18 + 1) = *(arg_ch + 1);\n            *(puVar18 + 2) = *(arg_ch + 2);\n            return arg_8h;\n        }\n    }\n    else if (arg_10h < 4) {\n        switch(*((arg_10h - 4) * 4 + 0x409d10)) {\n        case 0x409d18:\n            goto code_r0x00409d18;\n        case 0x409d24:\n            goto code_r0x00409d24;\n        case 0x409d38:\n            goto code_r0x00409d38;\n        }\n    }\n    else {\n        uVar16 = (arg_10h - 4) + (arg_8h & 3);\n        switch(*((arg_8h & 3) * 4 + 0x409c14)) {\n        case 0x409c24:\n            *arg_8h = *arg_ch;\n            *(arg_8h + 1) = *(arg_ch + 1);\n            uVar17 = uVar16 >> 2;\n            *(arg_8h + 2) = *(arg_ch + 2);\n            arg_ch = arg_ch + 3;\n            puVar18 = arg_8h + 3;\n            if (uVar17 < 8) {\ncode_r0x00409c10:\n    // WARNING: Could not recover jumptable at 0x00409c10. Too many branches\n    // WARNING: Treating indirect jump as call\n    // switch table (8 cases) at 0x409c94\n                puVar18 = (**(uVar17 * 4 + 0x409c94))();\n                return puVar18;\n            }\n            for (; uVar17 != 0; uVar17 = uVar17 - 1) {\n                *puVar18 = *arg_ch;\n                arg_ch = arg_ch + 1;\n                puVar18 = puVar18 + 1;\n            }\n            switch(*((uVar16 & 3) * 4 + 0x409d00)) {\n            case 0x409d18:\n                goto code_r0x00409d18;\n            case 0x409d24:\n                goto code_r0x00409d24;\n            case 0x409d38:\n                goto code_r0x00409d38;\n            }\n            break;\n        case 0x409c50:\n            *arg_8h = *arg_ch;\n            uVar17 = uVar16 >> 2;\n            *(arg_8h + 1) = *(arg_ch + 1);\n            arg_ch = arg_ch + 2;\n            puVar18 = arg_8h + 2;\n            if (uVar17 < 8) goto code_r0x00409c10;\n            for (; uVar17 != 0; uVar17 = uVar17 - 1) {\n                *puVar18 = *arg_ch;\n                arg_ch = arg_ch + 1;\n                puVar18 = puVar18 + 1;\n            }\n            switch(*((uVar16 & 3) * 4 + 0x409d00)) {\n            case 0x409d18:\n                goto code_r0x00409d18;\n            case 0x409d24:\n                goto code_r0x00409d24;\n            case 0x409d38:\n                goto code_r0x00409d38;\n            }\n            break;\n        case 0x409c74:\n            *arg_8h = *arg_ch;\n            uVar17 = uVar16 >> 2;\n            arg_ch = arg_ch + 1;\n            puVar18 = arg_8h + 1;\n            if (uVar17 < 8) goto code_r0x00409c10;\n            for (; uVar17 != 0; uVar17 = uVar17 - 1) {\n                *puVar18 = *arg_ch;\n                arg_ch = arg_ch + 1;\n                puVar18 = puVar18 + 1;\n            }\n            switch(*((uVar16 & 3) * 4 + 0x409d00)) {\n            case 0x409d18:\n                goto code_r0x00409d18;\n            case 0x409d24:\n                goto code_r0x00409d24;\n            case 0x409d38:\n                goto code_r0x00409d38;\n            }\n        }\n    }\n    return arg_8h;\n}\n",
        "token_count": 4196
    },
    "00405850": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t fcn.00405850(void)\n\n{\n    int32_t iVar1;\n    uint extraout_var;\n    \n    if (*0x8134d0 == 0) {\n        iVar1 = *0x8134d0;\n        fcn.00409193(0);\n        if (*0x8134d0 == 0) {\n            *0x8134c4 = *0x8134c4 + 1;\n            *0x8134d0 = *0x8134c4;\n        }\n        fcn.004091bb(iVar1, extraout_var);\n    }\n    return *0x8134d0;\n}\n",
        "token_count": 144
    },
    "004059a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t fcn.004059a0(void)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint32_t unaff_ESI;\n    \n    iVar1 = *in_EAX;\n    if (unaff_ESI < *(iVar1 + 0xc)) {\n        iVar2 = *(*(iVar1 + 8) + unaff_ESI * 4);\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n    }\n    else {\n        iVar2 = 0;\n    }\n    if (*(iVar1 + 0x14) != '\\0') {\n        iVar1 = fcn.00408b70();\n        if (unaff_ESI < *(iVar1 + 0xc)) {\n            return *(*(iVar1 + 8) + unaff_ESI * 4);\n        }\n        iVar2 = 0;\n    }\n    return iVar2;\n}\n",
        "token_count": 206
    },
    "00405b20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00405b20(uint *param_1)\n\n{\n    *param_1 = 0x404924;\n    if (param_1[5] != 0) {\n        fcn.00409ef1(param_1[4]);\n    }\n    *param_1 = 0x40491c;\n    *param_1 = 0x40136c;\n    return;\n}\n",
        "token_count": 90
    },
    "00406320": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00406364)\n// WARNING: Removing unreachable block (ram,0x00406371)\n\nint64_t __cdecl fcn.00406320(ushort *arg_8h, uint32_t arg_ch, int32_t arg_10h)\n\n{\n    int64_t iVar1;\n    char cVar2;\n    ushort uVar3;\n    int32_t *in_ECX;\n    uint32_t uVar4;\n    bool bVar5;\n    int64_t iVar6;\n    \n    if ((-1 < arg_10h) && ((iVar1 = 0,  0 < arg_10h || (iVar1 = 0,  arg_ch != 0)))) {\n        while( true ) {\n            do {\n                iVar6 = fcn.004072a0();\n                if (iVar6 < 1) {\n                    (**(*in_ECX + 0x1c))();\n                    fcn.00405630();\n                    cVar2 = fcn.004055f0();\n                    if (cVar2 != '\\0') {\n                        return iVar1;\n                    }\n                    uVar3 = fcn.00405600();\n                    *arg_8h = uVar3;\n                    arg_8h = arg_8h + 1;\n                    iVar1 = iVar1 + 1;\n                    bVar5 = arg_ch != 0;\n                    arg_ch = arg_ch - 1;\n                    arg_10h = arg_10h + -1 + bVar5;\n                }\n                else {\n                    if (CONCAT44(arg_10h, arg_ch) < iVar6) {\n                        iVar6 = CONCAT44(arg_10h, arg_ch);\n                    }\n                    uVar4 = iVar6;\n                    fcn.00407210(uVar4);\n                    fcn.004055e0();\n                    iVar1 = iVar6 + iVar1;\n                    arg_8h = arg_8h + uVar4;\n                    bVar5 = arg_ch < uVar4;\n                    arg_ch = arg_ch - uVar4;\n                    arg_10h = (arg_10h - (iVar6 >> 0x20)) - bVar5;\n                    fcn.00407250();\n                }\n            } while (0 < arg_10h);\n            if (arg_10h < 0) break;\n            if (arg_ch == 0) {\n                return iVar1;\n            }\n        }\n        return iVar1;\n    }\n    return 0;\n}\n",
        "token_count": 536
    },
    "00406430": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00406474)\n// WARNING: Removing unreachable block (ram,0x00406481)\n\nint64_t __cdecl fcn.00406430(uint arg_8h, uint32_t arg_ch, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int64_t iVar2;\n    char cVar3;\n    ushort uVar4;\n    int32_t *in_ECX;\n    uint32_t uVar5;\n    bool bVar6;\n    int64_t iVar7;\n    \n    if ((-1 < arg_10h) && ((iVar2 = 0,  0 < arg_10h || (iVar2 = 0,  arg_ch != 0)))) {\n        while( true ) {\n            do {\n                iVar7 = fcn.00407320();\n                if (iVar7 < 1) {\n                    iVar1 = *in_ECX;\n                    uVar4 = fcn.00405600();\n                    (**(iVar1 + 0xc))(uVar4);\n                    fcn.00405630();\n                    cVar3 = fcn.004055f0();\n                    if (cVar3 != '\\0') {\n                        return iVar2;\n                    }\n                    iVar2 = iVar2 + 1;\n                    bVar6 = arg_ch != 0;\n                    arg_ch = arg_ch - 1;\n                    arg_10h = arg_10h + -1 + bVar6;\n                }\n                else {\n                    if (CONCAT44(arg_10h, arg_ch) < iVar7) {\n                        iVar7 = CONCAT44(arg_10h, arg_ch);\n                    }\n                    uVar5 = iVar7;\n                    fcn.00407230(uVar5);\n                    fcn.004055e0();\n                    iVar2 = iVar7 + iVar2;\n                    bVar6 = arg_ch < uVar5;\n                    arg_ch = arg_ch - uVar5;\n                    arg_10h = (arg_10h - (iVar7 >> 0x20)) - bVar6;\n                    fcn.004072c0();\n                }\n            } while (0 < arg_10h);\n            if (arg_10h < 0) break;\n            if (arg_ch == 0) {\n                return iVar2;\n            }\n        }\n        return iVar2;\n    }\n    return 0;\n}\n",
        "token_count": 510
    },
    "null": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "",
        "token_count": 0
    },
    "00407140": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00407140(uint *param_1, char param_2, int32_t param_3)\n\n{\n    uint uVar1;\n    \n    if ((param_2 != '\\0') && (0xf < param_1[5])) {\n        uVar1 = *param_1;\n        if (param_3 != 0) {\n            fcn.00405660(param_1, uVar1, param_3);\n        }\n        fcn.00407970(uVar1, param_1[5] + 1);\n    }\n    param_1[5] = 0xf;\n    fcn.00407920(param_3);\n    return;\n}\n",
        "token_count": 151
    },
    "004071d0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004071d0(uint param_1)\n\n{\n    fcn.00405f20(param_1);\n    return;\n}\n",
        "token_count": 33
    },
    "004072a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.004072a0(void)\n\n{\n    int32_t in_EAX;\n    \n    if (**(in_EAX + 0x20) != 0) {\n        return;\n    }\n    return;\n}\n",
        "token_count": 48
    },
    "00407320": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00407320(void)\n\n{\n    int32_t in_EAX;\n    \n    if (**(in_EAX + 0x24) != 0) {\n        return;\n    }\n    return;\n}\n",
        "token_count": 47
    },
    "00407c00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nbool __thiscall fcn.00407c00(int32_t param_1, uint32_t param_2, uint param_3, uint param_4, uint param_5, uint param_6)\n\n{\n    uint32_t uVar1;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    uint unaff_retaddr;\n    char cVar2;\n    \n    uVar1 = fcn.00407de0();\n    if (uVar1 < param_2) {\n        fcn.00407cc0();\n    }\n    if (*(param_1 + 0x14) < param_2) {\n        fcn.00407e00(param_2, *(param_1 + 0x10), unaff_EDI, unaff_ESI, unaff_retaddr, param_2, param_3, param_4, param_5\n                     , param_6);\n        return param_2 != 0;\n    }\n    if ((cVar2 != '\\0') && (param_2 < 0x10)) {\n        uVar1 = *(param_1 + 0x10);\n        if (param_2 < *(param_1 + 0x10)) {\n            uVar1 = param_2;\n        }\n        fcn.00407140(1, uVar1);\n        return param_2 != 0;\n    }\n    if (param_2 == 0) {\n        fcn.00407920(0);\n    }\n    return param_2 != 0;\n}\n",
        "token_count": 331
    },
    "00407cd0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00407cd0(uint param_1)\n\n{\n    ushort uVar1;\n    int32_t in_EAX;\n    \n    fcn.00406000();\n    *(in_EAX + 0x38) = param_1;\n    *(in_EAX + 0x3c) = 0;\n    uVar1 = fcn.00407f10();\n    *(in_EAX + 0x40) = uVar1;\n    if (*(in_EAX + 0x38) == 0) {\n        fcn.00406220();\n    }\n    return;\n}\n",
        "token_count": 130
    },
    "00407de0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t fcn.00407de0(void)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = fcn.00407fa0();\n    if (uVar1 < 2) {\n        return 1;\n    }\n    return uVar1 - 1;\n}\n",
        "token_count": 64
    },
    "00409ef1": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00409ef1(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint uVar3;\n    \n    if (arg_8h != 0) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_HeapFree)(*0x8136bc, 0, arg_8h);\n        if (iVar1 == 0) {\n            puVar2 = fcn.0040a69f();\n            uVar3 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n            uVar3 = fcn.0040a65d(uVar3);\n            *puVar2 = uVar3;\n        }\n    }\n    return;\n}\n",
        "token_count": 158
    },
    "0040b182": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.0040b182(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, uint noname_13\n            , uint noname_14, uint arg_8h, uint arg_ch, uint noname_17, uint noname_18, uint arg_18h, uint arg_1ch, \n            uint arg_20h)\n\n{\n    int32_t iVar1;\n    int32_t *in_FS_OFFSET;\n    uint *var_8h_3;\n    uint *var_ch_2;\n    uint var_10h_2;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    uint var_38h;\n    uint *var_34h;\n    uint var_30h;\n    code *var_2ch;\n    uint *var_28h_2;\n    code *pcStack40;\n    uint32_t uStack36;\n    uint uStack32;\n    uint *puStack28;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uchar *var_8h_2;\n    int32_t var_4h_2;\n    \n    var_8h_2 = &stack0xfffffffc;\n    puStack16 = &stack0xffffffc0;\n    if (var_8h_3 == 0x123) {\n        *var_ch_2 = 0x40b22d;\n        var_38h = 1;\n    }\n    else {\n        pcStack40 = fcn.0040b259;\n        uStack36 = *0x4273d4 ^ &fcn.0040b182::var_28h_2;\n        uStack32 = var_24h;\n        puStack28 = var_ch_2;\n        uStack24 = var_20h;\n        uStack20 = var_1ch;\n        var_4h_2 = 0;\n        var_28h_2 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &fcn.0040b182::var_28h_2;\n        var_34h = var_8h_3;\n        var_30h = var_10h_2;\n        iVar1 = fcn.0040e61c();\n        var_2ch = *(iVar1 + 0x80);\n        (*var_2ch)(*var_8h_3, &fcn.0040b182::var_34h);\n        var_38h = 0;\n        if (var_4h_2 == 0) {\n            *in_FS_OFFSET = var_28h_2;\n        }\n        else {\n            *var_28h_2 = **in_FS_OFFSET;\n            *in_FS_OFFSET = var_28h_2;\n        }\n    }\n    return var_38h;\n}\n",
        "token_count": 726
    },
    "0040b470": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040b470(uint arg_8h)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    int32_t in_ECX;\n    uint in_EDX;\n    uint unaff_EBX;\n    uint unaff_EBP;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    ushort in_ES;\n    ushort in_CS;\n    ushort in_SS;\n    ushort in_DS;\n    ushort in_FS;\n    ushort in_GS;\n    uint8_t in_AF;\n    uint8_t in_TF;\n    uint8_t in_IF;\n    uint8_t in_NT;\n    uint8_t in_AC;\n    uint8_t in_VIF;\n    uint8_t in_VIP;\n    uint8_t in_ID;\n    uint unaff_retaddr;\n    int32_t var_328h;\n    uint var_324h;\n    uint var_320h;\n    \n    if (in_ECX == *0x4273d4) {\n        return;\n    }\n    *0x813f70 = (in_NT & 1) * 0x4000 | SBORROW4(&stack0xfffffffc, 0x328) * 0x800 | (in_IF & 1) * 0x200 |\n                (in_TF & 1) * 0x100 | (&var_328h < 0) * 0x80 | (*0x10 == 0x32c) * 0x40 | (in_AF & 1) * 0x10 |\n                ((POPCOUNT(&var_328h & 0xff) & 1U) == 0) * 4 | &stack0xfffffffc < 0x328 | (in_ID & 1) * 0x200000 |\n                (in_VIP & 1) * 0x100000 | (in_VIF & 1) * 0x80000 | (in_AC & 1) * 0x40000;\n    *0x813f74 = &arg_8h;\n    *0x813eb0 = 0x10001;\n    *0x813e58 = 0xc0000409;\n    *0x813e5c = 1;\n    var_328h = *0x4273d4;\n    var_324h = *0x4273d8;\n    *0x813e64 = unaff_retaddr;\n    *0x813f3c = in_GS;\n    *0x813f40 = in_FS;\n    *0x813f44 = in_ES;\n    *0x813f48 = in_DS;\n    *0x813f4c = unaff_EDI;\n    *0x813f50 = unaff_ESI;\n    *0x813f54 = unaff_EBX;\n    *0x813f58 = in_EDX;\n    *0x813f5c = in_ECX;\n    *0x813f60 = in_EAX;\n    *0x813f64 = unaff_EBP;\n    *0x813f68 = unaff_retaddr;\n    *0x813f6c = in_CS;\n    *0x813f78 = in_SS;\n    *0x813ea8 = (*_sym.imp.KERNEL32.dll_IsDebuggerPresent)();\n    fcn.0041defd(1);\n    (*_sym.imp.KERNEL32.dll_SetUnhandledExceptionFilter)(0);\n    (*_sym.imp.KERNEL32.dll_UnhandledExceptionFilter)(0x402c20);\n    if (*0x813ea8 == 0) {\n        fcn.0041defd(1);\n    }\n    uVar1 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)(0xc0000409);\n    (*_sym.imp.KERNEL32.dll_TerminateProcess)(uVar1);\n    return;\n}\n",
        "token_count": 834
    },
    "0040dd96": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Possible PIC construction at 0x0040de9c: Changing call to branch\n// WARNING: Removing unreachable block (ram,0x0040dea1)\n// WARNING: Removing unreachable block (ram,0x0040ded0)\n// WARNING: Removing unreachable block (ram,0x0040dea7)\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0040dd96(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    code *pcVar1;\n    int32_t *piVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    code *pcVar5;\n    int32_t unaff_EBP;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.0040e210(0x4257e0, 0x20);\n    fcn.00412cd5(8);\n    *(unaff_EBP + -4) = 0;\n    pcVar1 = _sym.imp.KERNEL32.dll_DecodePointer;\n    if (*0x8136f0 != 1) {\n        *0x8136ec = 1;\n        *0x8136e8 = *(unaff_EBP + 0x10);\n        if (*(unaff_EBP + 0xc) == 0) {\n            piVar2 = (*_sym.imp.KERNEL32.dll_DecodePointer)(*0xbb61ec);\n            *(unaff_EBP + -0x30) = piVar2;\n            if (piVar2 != NULL) {\n                piVar3 = (*pcVar1)(*0xbb61e8);\n                *(unaff_EBP + -0x2c) = piVar3;\n                *(unaff_EBP + -0x24) = piVar2;\n                *(unaff_EBP + -0x28) = piVar3;\n                while( true ) {\n                    piVar3 = piVar3 + -1;\n                    *(unaff_EBP + -0x2c) = piVar3;\n                    if (piVar3 < piVar2) break;\n                    iVar4 = fcn.0040e42f();\n                    if (*piVar3 != iVar4) {\n                        if (piVar3 < piVar2) break;\n                        pcVar5 = (*pcVar1)(*piVar3);\n                        iVar4 = fcn.0040e42f();\n                        *piVar3 = iVar4;\n                        (*pcVar5)();\n                        iVar4 = (*pcVar1)(*0xbb61ec);\n                        piVar2 = (*pcVar1)(*0xbb61e8);\n                        if ((*(unaff_EBP + -0x24) != iVar4) || (*(unaff_EBP + -0x28) != piVar2)) {\n                            *(unaff_EBP + -0x24) = iVar4;\n                            *(unaff_EBP + -0x30) = iVar4;\n                            *(unaff_EBP + -0x28) = piVar2;\n                            *(unaff_EBP + -0x2c) = piVar2;\n                            piVar3 = piVar2;\n                        }\n                        piVar2 = *(unaff_EBP + -0x30);\n                    }\n                }\n            }\n            *(unaff_EBP + -0x1c) = 0x401278;\n            while (*(unaff_EBP + -0x1c) < 0x401284) {\n                if (**(unaff_EBP + -0x1c) != NULL) {\n                    (***(unaff_EBP + -0x1c))();\n                }\n                *(unaff_EBP + -0x1c) = *(unaff_EBP + -0x1c) + 4;\n            }\n        }\n        *(unaff_EBP + -0x20) = 0x401288;\n        while (*(unaff_EBP + -0x20) < 0x40128c) {\n            if (**(unaff_EBP + -0x20) != NULL) {\n                (***(unaff_EBP + -0x20))();\n            }\n            *(unaff_EBP + -0x20) = *(unaff_EBP + -0x20) + 4;\n        }\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    if (*(unaff_EBP + 0x10) != 0) {\n        fcn.00412be4(8);\n    }\n    return;\n}\n",
        "token_count": 1016
    },
    "004105bb": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.004105bb(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0040e61c();\n    if (0 < *(iVar1 + 0x90)) {\n        iVar1 = fcn.0040e61c();\n        *(iVar1 + 0x90) = *(iVar1 + 0x90) + -1;\n    }\n    return;\n}\n",
        "token_count": 90
    },
    "00410c66": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00410c66(uint noname_0, uint noname_1, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t unaff_EBP;\n    int32_t *unaff_ESI;\n    int32_t unaff_EDI;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_1ch;\n    \n    *(unaff_EDI + -4) = *(unaff_EBP + -0x24);\n    fcn.0040b3be(*(unaff_EBP + -0x28));\n    iVar1 = fcn.0040e61c();\n    *(iVar1 + 0x88) = *(unaff_EBP + -0x2c);\n    iVar1 = fcn.0040e61c();\n    *(iVar1 + 0x8c) = *(unaff_EBP + -0x30);\n    if ((((*unaff_ESI == -0x1f928c9d) && (unaff_ESI[4] == 3)) &&\n        ((iVar1 = unaff_ESI[5],  iVar1 == 0x19930520 || ((iVar1 == 0x19930521 || (iVar1 == 0x19930522)))))) &&\n       ((*(unaff_EBP + -0x34) == 0 && (*(unaff_EBP + -0x1c) != 0)))) {\n        iVar1 = fcn.0040b397(unaff_ESI[6]);\n        if (iVar1 != 0) {\n            fcn.0041061a(unaff_ESI);\n        }\n    }\n    return;\n}\n",
        "token_count": 385
    },
    "0041703d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0041703d(void)\n\n{\n    int32_t unaff_EBP;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x1c) != 0) {\n        fcn.00412be4(0);\n    }\n    return;\n}\n",
        "token_count": 65
    },
    "0041732c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0041732c(uint arg_8h, uint arg_ch, uint32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    code *pcVar4;\n    code *pcVar5;\n    code *pcVar6;\n    uint unaff_EBX;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x4273d4 ^ &stack0xfffffffc;\n    var_20h = arg_8h;\n    var_1ch = arg_ch;\n    var_18h = fcn.0040e42f();\n    var_14h = 0;\n    if (*0x81430c == 0) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_LoadLibraryW)(0x4037ec);\n        pcVar6 = _sym.imp.KERNEL32.dll_GetProcAddress;\n        if ((iVar1 == 0) ||\n           (iVar2 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar1, 0x4037e0), \n           pcVar4 = _sym.imp.KERNEL32.dll_EncodePointer,  iVar2 == 0)) goto code_r0x00417489;\n        *0x81430c = (*_sym.imp.KERNEL32.dll_EncodePointer)(iVar2);\n        uVar3 = (*pcVar6)(iVar1, 0x4037d0);\n        *0x814310 = (*pcVar4)(uVar3);\n        uVar3 = (*pcVar6)(iVar1, 0x4037bc);\n        *0x814314 = (*pcVar4)(uVar3);\n        uVar3 = (*pcVar6)(iVar1, 0x4037a0);\n        *0x81431c = (*pcVar4)(uVar3);\n        if (*0x81431c != 0) {\n            uVar3 = (*pcVar6)(iVar1, 0x403788);\n            *0x814318 = (*pcVar4)(uVar3);\n        }\n    }\n    pcVar6 = _sym.imp.KERNEL32.dll_DecodePointer;\n    if ((*0x814318 == var_18h) || (*0x81431c == var_18h)) {\ncode_r0x00417438:\n        if ((((*0x814310 != var_18h) && (pcVar4 = (*pcVar6)(*0x814310),  pcVar4 != NULL)) &&\n            (var_14h = (*pcVar4)(),  var_14h != 0)) &&\n           ((*0x814314 != var_18h && (pcVar4 = (*pcVar6)(*0x814314),  pcVar4 != NULL)))) {\n            var_14h = (*pcVar4)(var_14h);\n        }\n    }\n    else {\n        pcVar4 = (*_sym.imp.KERNEL32.dll_DecodePointer)(*0x814318);\n        pcVar5 = (*pcVar6)(*0x81431c);\n        if (((pcVar4 == NULL) || (pcVar5 == NULL)) ||\n           (((iVar1 = (*pcVar4)(),  iVar1 != 0 && (iVar1 = (*pcVar5)(iVar1, 1, &var_10h, 0xc, &var_24h),  iVar1 != 0))\n            && ((var_8h & 1) != 0)))) goto code_r0x00417438;\n        arg_10h = arg_10h | 0x200000;\n    }\n    pcVar6 = (*pcVar6)(*0x81430c);\n    if (pcVar6 != NULL) {\n        (*pcVar6)(var_14h, var_20h, var_1ch, arg_10h);\n    }\ncode_r0x00417489:\n    fcn.0040b470(unaff_EBX);\n    return;\n}\n",
        "token_count": 925
    },
    "0041f950": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint fcn.0041f950(void)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    code *pcVar3;\n    code *pcVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    uint *in_FS_OFFSET;\n    int32_t in_stack_00000028;\n    uint in_stack_000024d8;\n    int32_t iStack64;\n    int32_t iStack56;\n    uint uStack20;\n    uint uStack16;\n    uint uStack12;\n    \n    uStack12 = 0xffffffff;\n    uStack16 = 0x425096;\n    uStack20 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffec;\n    fcn.0041e800();\n    if (*0xbb5090 == 0x12) {\n        fcn.004098eb(0, 0);\n        iStack56 = 0x41f992;\n        fcn.0041f158(0);\n        fcn.004065a0();\n        fcn.00406e60();\n        fcn.00406120();\n        fcn.00406e90();\n        fcn.0040a161(0);\n        fcn.0040a183();\n    }\n    *0xbb5090 = *0xbb5090 + 0x38d6;\n    uVar5 = 0;\n    do {\n        if (uVar5 < 0x1c41e) {\n            (*_sym.imp.KERNEL32.dll_GetLastError)();\n            (*_sym.imp.KERNEL32.dll_GetTickCount)();\n        }\n    } while ((((uVar5 < 0x1ea07e82) || (iStack56 == 0xad13aa)) || (in_stack_00000028 == 0x8cb0c58)) &&\n            (uVar5 = uVar5 + 1,  uVar5 < 0x8c6ffc0e));\n    *0xbb1500 = (*_sym.imp.KERNEL32.dll_LocalAlloc)();\n    pcVar4 = _sym.imp.KERNEL32.dll_EnumDateFormatsW;\n    pcVar2 = _sym.imp.KERNEL32.dll_EnumCalendarInfoW;\n    pcVar1 = _sym.imp.KERNEL32.dll_EnumCalendarInfoA;\n    iStack64 = 0x963510;\n    uVar5 = *0xbb5090;\n    do {\n        if (uVar5 == 3) {\n            (*_sym.imp.KERNEL32.dll_FreeEnvironmentStringsW)();\n            uVar5 = *0xbb5090;\n        }\n        if (uVar5 == 0xbc5) {\n            (*pcVar1)();\n            (*pcVar2)();\n            (*_sym.imp.KERNEL32.dll_GetPrivateProfileStructA)();\n            (*_sym.imp.KERNEL32.dll_GetOverlappedResult)();\n            (*_sym.imp.KERNEL32.dll_GetConsoleTitleA)();\n            (*_sym.imp.KERNEL32.dll_DeleteFileA)();\n            (*_sym.imp.KERNEL32.dll_QueryDepthSList)();\n            (*pcVar4)();\n            (*_sym.imp.KERNEL32.dll_GetProcessTimes)();\n            (*pcVar4)();\n            (*_sym.imp.KERNEL32.dll_RtlCaptureContext)();\n            (*_sym.imp.KERNEL32.dll_GetShortPathNameW)();\n            (*_sym.imp.KERNEL32.dll_QueryDosDeviceA)();\n            (*_sym.imp.KERNEL32.dll_WaitForSingleObject)();\n            (*_sym.imp.KERNEL32.dll_SetThreadAffinityMask)();\n            (*_sym.imp.KERNEL32.dll_GetCommState)();\n            (*_sym.imp.KERNEL32.dll_GlobalFix)();\n            (*_sym.imp.KERNEL32.dll_FoldStringA)();\n            (*_sym.imp.KERNEL32.dll_SetComputerNameA)();\n            (*_sym.imp.KERNEL32.dll_BuildCommDCBAndTimeoutsW)();\n            (*_sym.imp.KERNEL32.dll_GetFileAttributesA)();\n            (*_sym.imp.KERNEL32.dll_FindFirstVolumeMountPointW)();\n            (*_sym.imp.KERNEL32.dll_GetConsoleAliasesLengthW)();\n            (*_sym.imp.KERNEL32.dll_GetDriveTypeW)();\n            (*_sym.imp.KERNEL32.dll_CreateJobSet)();\n            (*_sym.imp.KERNEL32.dll_GetFileAttributesW)();\n            (*_sym.imp.KERNEL32.dll_CreateMutexW)();\n            (*_sym.imp.KERNEL32.dll_GetDriveTypeA)();\n            (*_sym.imp.KERNEL32.dll_InterlockedPushEntrySList)();\n            (*_sym.imp.KERNEL32.dll_EnumSystemLocalesA)();\n            uVar5 = *0xbb5090;\n        }\n        pcVar3 = _sym.imp.KERNEL32.dll_GetEnvironmentStringsW;\n        iStack64 = iStack64 + -1;\n    } while (iStack64 != 0);\n    uVar6 = 0;\n    if (uVar5 != 0) {\n        do {\n            fcn.0041f650();\n            if (*0xbb5090 == 0x29) {\n                (*pcVar3)();\n            }\n            uVar6 = uVar6 + 1;\n            uVar5 = *0xbb5090;\n        } while (uVar6 < *0xbb5090);\n    }\n    if (uVar5 == 0x19c) {\n        (*_sym.imp.KERNEL32.dll_FindAtomA)();\n        (*_sym.imp.KERNEL32.dll_GetStringTypeExW)();\n        (*_sym.imp.KERNEL32.dll_FreeEnvironmentStringsW)();\n        (*_sym.imp.KERNEL32.dll_SetCalendarInfoA)();\n        (*_sym.imp.KERNEL32.dll_BeginUpdateResourceA)();\n    }\n    pcVar1 = _sym.imp.USER32.dll_GetMenuBarInfo;\n    iVar7 = 0x8dc;\n    do {\n        (*pcVar1)();\n        pcVar2 = _sym.imp.KERNEL32.dll_SetFileShortNameW;\n        iVar7 = iVar7 + -1;\n    } while (iVar7 != 0);\n    iVar7 = 0x250a9;\n    do {\n        if (*0xbb5090 == 0x92) {\n            (*pcVar2)();\n        }\n        iVar7 = iVar7 + -1;\n    } while (iVar7 != 0);\n    *0x814398 = 0;\n    fcn.0041f190();\n    fcn.0041f920();\n    fcn.0041f630();\n    pcVar4 = _sym.imp.USER32.dll_DefDlgProcA;\n    pcVar2 = _sym.imp.KERNEL32.dll_GetModuleHandleA;\n    pcVar1 = _sym.imp.KERNEL32.dll_GetConsoleAliasW;\n    iStack64 = 0xf3743;\n    do {\n        if (*0xbb5090 == 0x21) {\n            (*pcVar4)();\n            (*pcVar1)();\n            (*pcVar2)();\n        }\n        iStack64 = iStack64 + -1;\n    } while (iStack64 != 0);\n    fcn.0041f8c0();\n    *0x814399 = 0x73;\n    if (*0xbb5090 == 0xd5c) {\n        (*_sym.imp.KERNEL32.dll_FindNextFileW)();\n        (*_sym.imp.KERNEL32.dll_InterlockedIncrement)();\n        (*_sym.imp.KERNEL32.dll_GetVolumePathNameW)();\n        (*_sym.imp.KERNEL32.dll_LoadLibraryW)();\n        (*_sym.imp.KERNEL32.dll_TerminateJobObject)();\n        (*_sym.imp.KERNEL32.dll_EnumResourceTypesA)();\n        (*_sym.imp.KERNEL32.dll_DebugBreak)();\n        (*_sym.imp.KERNEL32.dll_UnhandledExceptionFilter)();\n        (*_sym.imp.KERNEL32.dll_GetConsoleCP)();\n        (*_sym.imp.KERNEL32.dll_GetModuleHandleW)();\n        (*_sym.imp.KERNEL32.dll_EnumSystemLocalesW)();\n        (*_sym.imp.KERNEL32.dll_GetCPInfoExA)();\n        (*_sym.imp.KERNEL32.dll_ZombifyActCtx)();\n        (*_sym.imp.KERNEL32.dll_GetBinaryTypeW)();\n        (*_sym.imp.KERNEL32.dll_MoveFileWithProgressW)();\n    }\n    fcn.0041f640();\n    *in_FS_OFFSET = in_stack_000024d8;\n    return 0;\n}\n",
        "token_count": 1777
    },
    "00420a2d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00420a2d(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint unaff_EBX;\n    uint var_28h;\n    uint var_24h;\n    int32_t var_1ch;\n    uint var_18h;\n    uint32_t var_14h;\n    uint var_10h;\n    uint32_t var_4h;\n    \n    var_4h = *0x4273d4 ^ &stack0xfffffffc;\n    fcn.0040ca4c(arg_10h);\n    var_14h = fcn.00422958(&var_10h, &var_28h, arg_ch, 0, 0, 0, 0, &var_24h);\n    iVar1 = fcn.004217fa(&var_10h, arg_8h);\n    if ((var_14h & 3) == 0) {\n        if (iVar1 == 1) {\ncode_r0x00420a86:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x00420ac6;\n        }\n        if (iVar1 != 2) {\ncode_r0x00420ab8:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x00420ac6;\n        }\n    }\n    else if ((var_14h & 1) == 0) {\n        if ((var_14h & 2) == 0) goto code_r0x00420ab8;\n        goto code_r0x00420a86;\n    }\n    if (var_18h != '\\0') {\n        *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n    }\ncode_r0x00420ac6:\n    fcn.0040b470(unaff_EBX);\n    return;\n}\n",
        "token_count": 504
    },
    "00420bac": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00420bac(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint unaff_EBX;\n    uint var_28h;\n    uint var_24h;\n    int32_t var_1ch;\n    uint var_18h;\n    uint32_t var_14h;\n    uint var_10h;\n    uint32_t var_4h;\n    \n    var_4h = *0x4273d4 ^ &stack0xfffffffc;\n    fcn.0040ca4c(arg_10h);\n    var_14h = fcn.00422958(&var_10h, &var_28h, arg_ch, 0, 0, 0, 0, &var_24h);\n    iVar1 = fcn.00421d4b(&var_10h, arg_8h);\n    if ((var_14h & 3) == 0) {\n        if (iVar1 == 1) {\ncode_r0x00420c05:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x00420c45;\n        }\n        if (iVar1 != 2) {\ncode_r0x00420c37:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x00420c45;\n        }\n    }\n    else if ((var_14h & 1) == 0) {\n        if ((var_14h & 2) == 0) goto code_r0x00420c37;\n        goto code_r0x00420c05;\n    }\n    if (var_18h != '\\0') {\n        *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n    }\ncode_r0x00420c45:\n    fcn.0040b470(unaff_EBX);\n    return;\n}\n",
        "token_count": 504
    },
    "004217fa": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_38h\n\nvoid __cdecl fcn.004217fa(uint16_t *arg_8h, uint32_t *arg_ch)\n\n{\n    uint32_t *puVar1;\n    uint16_t uVar2;\n    uint16_t uVar3;\n    uint32_t uVar4;\n    uint8_t uVar5;\n    bool bVar6;\n    int32_t iVar7;\n    uint8_t uVar8;\n    uint32_t *puVar9;\n    uint *puVar10;\n    uint32_t uVar11;\n    uint32_t uVar12;\n    int32_t iVar13;\n    int32_t iVar14;\n    uint32_t uVar15;\n    int32_t iVar16;\n    bool bVar17;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint32_t var_28h;\n    uint var_24h;\n    uint32_t var_20h;\n    uint var_1ch;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x4273d4 ^ &stack0xfffffffc;\n    uVar2 = arg_8h[5];\n    uVar15 = *(arg_8h + 3);\n    var_10h = uVar15;\n    uVar4 = *(arg_8h + 1);\n    uVar3 = *arg_8h;\n    uVar12 = uVar2 & 0x7fff;\n    iVar13 = uVar12 - 0x3fff;\n    var_ch = uVar4;\n    var_8h = uVar3 << 0x10;\n    uVar5 = str.5_v_[1];\n    if (iVar13 == -0x3fff) {\n        iVar14 = 0;\n        iVar13 = 0;\n        do {\n            if ((&var_10h)[iVar13] != 0) {\n                var_10h = 0;\n                var_ch = 0;\n                var_8h = 0;\n                break;\n            }\n            iVar13 = iVar13 + 1;\n        } while (iVar13 < 3);\n    }\n    else {\n        bVar6 = false;\n        iVar16 = str.5_v_[0] + L'\\xffffffff';\n        iVar14 = str.5_v_[0] + (str.5_v_[0] >> 0x1f & 0x1fU) >> 5;\n        puVar1 = &var_10h + iVar14;\n        uVar8 = 0x1f - (str.5_v_[0] & 0x1f);\n        if ((*puVar1 & 1 << (uVar8 & 0x1f)) != 0) {\n            uVar11 = (&var_10h)[iVar14] & ~(-1 << (uVar8 & 0x1f));\n            iVar7 = iVar14;\n            while( true ) {\n                if (uVar11 != 0) {\n                    iVar7 = iVar16 + (iVar16 >> 0x1f & 0x1fU) >> 5;\n                    uVar11 = 1 << (0x1f - (iVar16 & 0x1f) & 0x1f);\n                    puVar9 = &var_10h + iVar7;\n                    var_20h = *puVar9 + uVar11;\n                    if (var_20h < *puVar9) goto code_r0x0042193e;\n                    bVar17 = var_20h < uVar11;\n                    do {\n                        bVar6 = false;\n                        if (!bVar17) goto code_r0x00421945;\ncode_r0x0042193e:\n                        do {\n                            bVar6 = true;\ncode_r0x00421945:\n                            iVar7 = iVar7 + -1;\n                            *puVar9 = var_20h;\n                            if ((iVar7 < 0) || (!bVar6)) goto code_r0x00421953;\n                            puVar9 = &var_10h + iVar7;\n                            var_20h = *puVar9 + 1;\n                        } while (var_20h < *puVar9);\n                        bVar17 = var_20h == 0;\n                    } while( true );\n                }\n                iVar7 = iVar7 + 1;\n                if (2 < iVar7) break;\n                uVar11 = (&var_10h)[iVar7];\n            }\n        }\ncode_r0x00421953:\n        *puVar1 = *puVar1 & -1 << (uVar8 & 0x1f);\n        iVar14 = iVar14 + 1;\n        if (iVar14 < 3) {\n            puVar10 = &var_10h + iVar14;\n            for (iVar16 = 3 - iVar14; iVar16 != 0; iVar16 = iVar16 + -1) {\n                *puVar10 = 0;\n                puVar10 = puVar10 + 1;\n            }\n        }\n        iVar14 = iVar13;\n        if (bVar6) {\n            iVar14 = uVar12 - 0x3ffe;\n        }\n        if (iVar14 < *0x813164 - str.5_v_[0]) {\n            var_10h = 0;\n            var_ch = 0;\n            var_8h = 0;\n        }\n        else {\n            if (*0x813164 < iVar14) {\n                if (iVar14 < *0x813160) {\n                    iVar14 = iVar14 + str.5_v_[3];\n                    var_10h = var_10h & 0x7fffffff;\n                    iVar13 = str.5_v_[1] + (str.5_v_[1] >> 0x1f & 0x1fU) >> 5;\n                    uVar8 = uVar5 & 0x1f;\n                    var_28h = 0;\n                    var_20h = 0;\n                    do {\n                        uVar15 = (&var_10h)[var_20h];\n                        (&var_10h)[var_20h] = uVar15 >> uVar8 | var_28h;\n                        var_28h = (uVar15 & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n                        var_20h = var_20h + 1;\n                    } while (var_20h < 3);\n                    iVar16 = 2;\n                    puVar10 = &var_8h + -iVar13;\n                    do {\n                        if (iVar16 < iVar13) {\n                            (&var_10h)[iVar16] = 0;\n                        }\n                        else {\n                            (&var_10h)[iVar16] = *puVar10;\n                        }\n                        puVar10 = puVar10 + -1;\n                        iVar16 = iVar16 + -1;\n                    } while (-1 < iVar16);\n                }\n                else {\n                    var_ch = 0;\n                    var_8h = 0;\n                    var_10h = 0x80000000;\n                    iVar13 = str.5_v_[1] + (str.5_v_[1] >> 0x1f & 0x1fU) >> 5;\n                    uVar8 = uVar5 & 0x1f;\n                    var_28h = 0;\n                    var_20h = 0;\n                    do {\n                        uVar15 = (&var_10h)[var_20h];\n                        (&var_10h)[var_20h] = uVar15 >> uVar8 | var_28h;\n                        var_28h = (uVar15 & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n                        var_20h = var_20h + 1;\n                    } while (var_20h < 3);\n                    iVar14 = 2;\n                    puVar10 = &var_8h + -iVar13;\n                    do {\n                        if (iVar14 < iVar13) {\n                            (&var_10h)[iVar14] = 0;\n                        }\n                        else {\n                            (&var_10h)[iVar14] = *puVar10;\n                        }\n                        puVar10 = puVar10 + -1;\n                        iVar14 = iVar14 + -1;\n                    } while (-1 < iVar14);\n                    iVar14 = str.5_v_[3] + *0x813160;\n                }\n                goto code_r0x00421cfe;\n            }\n            iVar13 = *0x813164 - iVar13;\n            var_10h = uVar15;\n            var_ch = uVar4;\n            iVar14 = iVar13 + (iVar13 >> 0x1f & 0x1fU) >> 5;\n            uVar8 = iVar13 & 0x1f;\n            var_8h = uVar3 << 0x10;\n            var_28h = 0;\n            var_20h = 0;\n            do {\n                uVar15 = (&var_10h)[var_20h];\n                (&var_10h)[var_20h] = uVar15 >> uVar8 | var_28h;\n                var_28h = (uVar15 & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n                var_20h = var_20h + 1;\n            } while (var_20h < 3);\n            iVar13 = 2;\n            puVar10 = &var_8h + -iVar14;\n            do {\n                if (iVar13 < iVar14) {\n                    (&var_10h)[iVar13] = 0;\n                }\n                else {\n                    (&var_10h)[iVar13] = *puVar10;\n                }\n                puVar10 = puVar10 + -1;\n                iVar13 = iVar13 + -1;\n            } while (-1 < iVar13);\n            iVar14 = str.5_v_[0] + L'\\xffffffff';\n            iVar13 = str.5_v_[0] + (str.5_v_[0] >> 0x1f & 0x1fU) >> 5;\n            uVar8 = 0x1f - (str.5_v_[0] & 0x1f);\n            puVar1 = &var_10h + iVar13;\n            if ((*puVar1 & 1 << (uVar8 & 0x1f)) != 0) {\n                uVar15 = (&var_10h)[iVar13] & ~(-1 << (uVar8 & 0x1f));\n                iVar16 = iVar13;\n                while (uVar15 == 0) {\n                    iVar16 = iVar16 + 1;\n                    if (2 < iVar16) goto code_r0x00421af2;\n                    uVar15 = (&var_10h)[iVar16];\n                }\n                iVar16 = iVar14 + (iVar14 >> 0x1f & 0x1fU) >> 5;\n                bVar6 = false;\n                uVar12 = 1 << (0x1f - (iVar14 & 0x1f) & 0x1f);\n                uVar4 = (&var_10h)[iVar16];\n                uVar15 = uVar4 + uVar12;\n                if ((uVar15 < uVar4) || (uVar15 < uVar12)) {\n                    bVar6 = true;\n                }\n                (&var_10h)[iVar16] = uVar15;\n                while ((iVar16 = iVar16 + -1,  -1 < iVar16 && (bVar6))) {\n                    uVar4 = (&var_10h)[iVar16];\n                    uVar15 = uVar4 + 1;\n                    bVar6 = false;\n                    if ((uVar15 < uVar4) || (uVar15 == 0)) {\n                        bVar6 = true;\n                    }\n                    (&var_10h)[iVar16] = uVar15;\n                }\n            }\ncode_r0x00421af2:\n            *puVar1 = *puVar1 & -1 << (uVar8 & 0x1f);\n            iVar13 = iVar13 + 1;\n            if (iVar13 < 3) {\n                puVar10 = &var_10h + iVar13;\n                for (iVar14 = 3 - iVar13; iVar14 != 0; iVar14 = iVar14 + -1) {\n                    *puVar10 = 0;\n                    puVar10 = puVar10 + 1;\n                }\n            }\n            iVar13 = str.5_v_[1] + L'\\x01' + (str.5_v_[1] + L'\\x01' >> 0x1f & 0x1fU) >> 5;\n            uVar8 = uVar5 + 1 & 0x1f;\n            var_28h = 0;\n            var_20h = 0;\n            do {\n                uVar15 = (&var_10h)[var_20h];\n                (&var_10h)[var_20h] = uVar15 >> uVar8 | var_28h;\n                var_28h = (uVar15 & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n                var_20h = var_20h + 1;\n            } while (var_20h < 3);\n            iVar14 = 2;\n            puVar10 = &var_8h + -iVar13;\n            do {\n                if (iVar14 < iVar13) {\n                    (&var_10h)[iVar14] = 0;\n                }\n                else {\n                    (&var_10h)[iVar14] = *puVar10;\n                }\n                puVar10 = puVar10 + -1;\n                iVar14 = iVar14 + -1;\n            } while (-1 < iVar14);\n        }\n        iVar14 = 0;\n    }\ncode_r0x00421cfe:\n    uVar15 = iVar14 << (0x1f - uVar5 & 0x1f) | -((uVar2 & 0x8000) != 0) & 0x80000000 | var_10h;\n    if (str.5_v_[2] == L'@') {\n        arg_ch[1] = uVar15;\n        *arg_ch = var_ch;\n    }\n    else if (str.5_v_[2] == L' ') {\n        *arg_ch = uVar15;\n    }\n    fcn.0040b470(uVar2 & 0x8000);\n    return;\n}\n",
        "token_count": 3252
    },
    "00421d4b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_38h\n\nvoid __cdecl fcn.00421d4b(uint16_t *arg_8h, uint32_t *arg_ch)\n\n{\n    uint32_t *puVar1;\n    uint16_t uVar2;\n    uint16_t uVar3;\n    uint32_t uVar4;\n    uint8_t uVar5;\n    bool bVar6;\n    int32_t iVar7;\n    uint8_t uVar8;\n    uint32_t *puVar9;\n    uint *puVar10;\n    uint32_t uVar11;\n    uint32_t uVar12;\n    int32_t iVar13;\n    int32_t iVar14;\n    uint32_t uVar15;\n    int32_t iVar16;\n    bool bVar17;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint32_t var_28h;\n    uint var_24h;\n    uint32_t var_20h;\n    uint var_1ch;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x4273d4 ^ &stack0xfffffffc;\n    uVar2 = arg_8h[5];\n    uVar15 = *(arg_8h + 3);\n    var_10h = uVar15;\n    uVar4 = *(arg_8h + 1);\n    uVar3 = *arg_8h;\n    uVar12 = uVar2 & 0x7fff;\n    iVar13 = uVar12 - 0x3fff;\n    var_ch = uVar4;\n    var_8h = uVar3 << 0x10;\n    uVar5 = *0x813184;\n    if (iVar13 == -0x3fff) {\n        iVar14 = 0;\n        iVar13 = 0;\n        do {\n            if ((&var_10h)[iVar13] != 0) {\n                var_10h = 0;\n                var_ch = 0;\n                var_8h = 0;\n                break;\n            }\n            iVar13 = iVar13 + 1;\n        } while (iVar13 < 3);\n    }\n    else {\n        bVar6 = false;\n        iVar16 = *0x813180 + -1;\n        iVar14 = *0x813180 + (*0x813180 >> 0x1f & 0x1fU) >> 5;\n        puVar1 = &var_10h + iVar14;\n        uVar8 = 0x1f - (*0x813180 & 0x1f);\n        if ((*puVar1 & 1 << (uVar8 & 0x1f)) != 0) {\n            uVar11 = (&var_10h)[iVar14] & ~(-1 << (uVar8 & 0x1f));\n            iVar7 = iVar14;\n            while( true ) {\n                if (uVar11 != 0) {\n                    iVar7 = iVar16 + (iVar16 >> 0x1f & 0x1fU) >> 5;\n                    uVar11 = 1 << (0x1f - (iVar16 & 0x1f) & 0x1f);\n                    puVar9 = &var_10h + iVar7;\n                    var_20h = *puVar9 + uVar11;\n                    if (var_20h < *puVar9) goto code_r0x00421e8f;\n                    bVar17 = var_20h < uVar11;\n                    do {\n                        bVar6 = false;\n                        if (!bVar17) goto code_r0x00421e96;\ncode_r0x00421e8f:\n                        do {\n                            bVar6 = true;\ncode_r0x00421e96:\n                            iVar7 = iVar7 + -1;\n                            *puVar9 = var_20h;\n                            if ((iVar7 < 0) || (!bVar6)) goto code_r0x00421ea4;\n                            puVar9 = &var_10h + iVar7;\n                            var_20h = *puVar9 + 1;\n                        } while (var_20h < *puVar9);\n                        bVar17 = var_20h == 0;\n                    } while( true );\n                }\n                iVar7 = iVar7 + 1;\n                if (2 < iVar7) break;\n                uVar11 = (&var_10h)[iVar7];\n            }\n        }\ncode_r0x00421ea4:\n        *puVar1 = *puVar1 & -1 << (uVar8 & 0x1f);\n        iVar14 = iVar14 + 1;\n        if (iVar14 < 3) {\n            puVar10 = &var_10h + iVar14;\n            for (iVar16 = 3 - iVar14; iVar16 != 0; iVar16 = iVar16 + -1) {\n                *puVar10 = 0;\n                puVar10 = puVar10 + 1;\n            }\n        }\n        iVar14 = iVar13;\n        if (bVar6) {\n            iVar14 = uVar12 - 0x3ffe;\n        }\n        if (iVar14 < *0x81317c - *0x813180) {\n            var_10h = 0;\n            var_ch = 0;\n            var_8h = 0;\n        }\n        else {\n            if (*0x81317c < iVar14) {\n                if (iVar14 < *0x813178) {\n                    iVar14 = iVar14 + *0x81318c;\n                    var_10h = var_10h & 0x7fffffff;\n                    iVar13 = *0x813184 + (*0x813184 >> 0x1f & 0x1fU) >> 5;\n                    uVar8 = uVar5 & 0x1f;\n                    var_28h = 0;\n                    var_20h = 0;\n                    do {\n                        uVar15 = (&var_10h)[var_20h];\n                        (&var_10h)[var_20h] = uVar15 >> uVar8 | var_28h;\n                        var_28h = (uVar15 & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n                        var_20h = var_20h + 1;\n                    } while (var_20h < 3);\n                    iVar16 = 2;\n                    puVar10 = &var_8h + -iVar13;\n                    do {\n                        if (iVar16 < iVar13) {\n                            (&var_10h)[iVar16] = 0;\n                        }\n                        else {\n                            (&var_10h)[iVar16] = *puVar10;\n                        }\n                        puVar10 = puVar10 + -1;\n                        iVar16 = iVar16 + -1;\n                    } while (-1 < iVar16);\n                }\n                else {\n                    var_ch = 0;\n                    var_8h = 0;\n                    var_10h = 0x80000000;\n                    iVar13 = *0x813184 + (*0x813184 >> 0x1f & 0x1fU) >> 5;\n                    uVar8 = uVar5 & 0x1f;\n                    var_28h = 0;\n                    var_20h = 0;\n                    do {\n                        uVar15 = (&var_10h)[var_20h];\n                        (&var_10h)[var_20h] = uVar15 >> uVar8 | var_28h;\n                        var_28h = (uVar15 & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n                        var_20h = var_20h + 1;\n                    } while (var_20h < 3);\n                    iVar14 = 2;\n                    puVar10 = &var_8h + -iVar13;\n                    do {\n                        if (iVar14 < iVar13) {\n                            (&var_10h)[iVar14] = 0;\n                        }\n                        else {\n                            (&var_10h)[iVar14] = *puVar10;\n                        }\n                        puVar10 = puVar10 + -1;\n                        iVar14 = iVar14 + -1;\n                    } while (-1 < iVar14);\n                    iVar14 = *0x81318c + *0x813178;\n                }\n                goto code_r0x0042224f;\n            }\n            iVar13 = *0x81317c - iVar13;\n            var_10h = uVar15;\n            var_ch = uVar4;\n            iVar14 = iVar13 + (iVar13 >> 0x1f & 0x1fU) >> 5;\n            uVar8 = iVar13 & 0x1f;\n            var_8h = uVar3 << 0x10;\n            var_28h = 0;\n            var_20h = 0;\n            do {\n                uVar15 = (&var_10h)[var_20h];\n                (&var_10h)[var_20h] = uVar15 >> uVar8 | var_28h;\n                var_28h = (uVar15 & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n                var_20h = var_20h + 1;\n            } while (var_20h < 3);\n            iVar13 = 2;\n            puVar10 = &var_8h + -iVar14;\n            do {\n                if (iVar13 < iVar14) {\n                    (&var_10h)[iVar13] = 0;\n                }\n                else {\n                    (&var_10h)[iVar13] = *puVar10;\n                }\n                puVar10 = puVar10 + -1;\n                iVar13 = iVar13 + -1;\n            } while (-1 < iVar13);\n            iVar14 = *0x813180 + -1;\n            iVar13 = *0x813180 + (*0x813180 >> 0x1f & 0x1fU) >> 5;\n            uVar8 = 0x1f - (*0x813180 & 0x1f);\n            puVar1 = &var_10h + iVar13;\n            if ((*puVar1 & 1 << (uVar8 & 0x1f)) != 0) {\n                uVar15 = (&var_10h)[iVar13] & ~(-1 << (uVar8 & 0x1f));\n                iVar16 = iVar13;\n                while (uVar15 == 0) {\n                    iVar16 = iVar16 + 1;\n                    if (2 < iVar16) goto code_r0x00422043;\n                    uVar15 = (&var_10h)[iVar16];\n                }\n                iVar16 = iVar14 + (iVar14 >> 0x1f & 0x1fU) >> 5;\n                bVar6 = false;\n                uVar12 = 1 << (0x1f - (iVar14 & 0x1f) & 0x1f);\n                uVar4 = (&var_10h)[iVar16];\n                uVar15 = uVar4 + uVar12;\n                if ((uVar15 < uVar4) || (uVar15 < uVar12)) {\n                    bVar6 = true;\n                }\n                (&var_10h)[iVar16] = uVar15;\n                while ((iVar16 = iVar16 + -1,  -1 < iVar16 && (bVar6))) {\n                    uVar4 = (&var_10h)[iVar16];\n                    uVar15 = uVar4 + 1;\n                    bVar6 = false;\n                    if ((uVar15 < uVar4) || (uVar15 == 0)) {\n                        bVar6 = true;\n                    }\n                    (&var_10h)[iVar16] = uVar15;\n                }\n            }\ncode_r0x00422043:\n            *puVar1 = *puVar1 & -1 << (uVar8 & 0x1f);\n            iVar13 = iVar13 + 1;\n            if (iVar13 < 3) {\n                puVar10 = &var_10h + iVar13;\n                for (iVar14 = 3 - iVar13; iVar14 != 0; iVar14 = iVar14 + -1) {\n                    *puVar10 = 0;\n                    puVar10 = puVar10 + 1;\n                }\n            }\n            iVar13 = *0x813184 + 1 + (*0x813184 + 1 >> 0x1f & 0x1fU) >> 5;\n            uVar8 = uVar5 + 1 & 0x1f;\n            var_28h = 0;\n            var_20h = 0;\n            do {\n                uVar15 = (&var_10h)[var_20h];\n                (&var_10h)[var_20h] = uVar15 >> uVar8 | var_28h;\n                var_28h = (uVar15 & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n                var_20h = var_20h + 1;\n            } while (var_20h < 3);\n            iVar14 = 2;\n            puVar10 = &var_8h + -iVar13;\n            do {\n                if (iVar14 < iVar13) {\n                    (&var_10h)[iVar14] = 0;\n                }\n                else {\n                    (&var_10h)[iVar14] = *puVar10;\n                }\n                puVar10 = puVar10 + -1;\n                iVar14 = iVar14 + -1;\n            } while (-1 < iVar14);\n        }\n        iVar14 = 0;\n    }\ncode_r0x0042224f:\n    uVar15 = iVar14 << (0x1f - uVar5 & 0x1f) | -((uVar2 & 0x8000) != 0) & 0x80000000 | var_10h;\n    if (*0x813188 == 0x40) {\n        arg_ch[1] = uVar15;\n        *arg_ch = var_ch;\n    }\n    else if (*0x813188 == 0x20) {\n        *arg_ch = uVar15;\n    }\n    fcn.0040b470(uVar2 & 0x8000);\n    return;\n}\n",
        "token_count": 3212
    },
    "00424a63": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00424a63(char *arg_8h, int32_t arg_ch, uint32_t *arg_10h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    bool bVar3;\n    uint32_t *puVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puVar4 = arg_10h;\n    uVar7 = 0;\n    var_4h._0_2_ = 0x404e;\n    *arg_10h = 0;\n    arg_10h[1] = 0;\n    arg_10h[2] = 0;\n    if (arg_ch != 0) {\n        arg_10h = NULL;\n        do {\n            uVar2 = *puVar4;\n            uVar9 = *puVar4;\n            uVar8 = puVar4[1];\n            uVar1 = puVar4[2];\n            bVar3 = false;\n            uVar5 = (uVar7 * 2 | uVar2 >> 0x1f) * 2 | uVar2 * 2 >> 0x1f;\n            uVar2 = uVar2 * 4;\n            uVar7 = (arg_10h * 2 | uVar7 >> 0x1f) * 2 | uVar7 * 2 >> 0x1f;\n            uVar6 = uVar9 + uVar2;\n            *puVar4 = uVar2;\n            puVar4[1] = uVar5;\n            puVar4[2] = uVar7;\n            if ((uVar6 < uVar2) || (uVar6 < uVar9)) {\n                bVar3 = true;\n            }\n            *puVar4 = uVar6;\n            uVar9 = uVar5;\n            if (bVar3) {\n                bVar3 = false;\n                uVar9 = uVar5 + 1;\n                if ((uVar9 < uVar5) || (uVar9 == 0)) {\n                    bVar3 = true;\n                }\n                puVar4[1] = uVar9;\n                if (bVar3) {\n                    uVar7 = uVar7 + 1;\n                    puVar4[2] = uVar7;\n                }\n            }\n            bVar3 = false;\n            uVar2 = uVar9 + uVar8;\n            if ((uVar2 < uVar9) || (uVar2 < uVar8)) {\n                bVar3 = true;\n            }\n            puVar4[1] = uVar2;\n            if (bVar3) {\n                uVar7 = uVar7 + 1;\n                puVar4[2] = uVar7;\n            }\n            bVar3 = false;\n            arg_10h = (uVar7 + uVar1) * 2 | uVar2 >> 0x1f;\n            uVar9 = uVar6 * 2;\n            uVar8 = uVar2 * 2 | uVar6 >> 0x1f;\n            puVar4[2] = arg_10h;\n            *puVar4 = uVar9;\n            puVar4[1] = uVar8;\n            uVar7 = uVar9 + *arg_8h;\n            if ((uVar7 < uVar9) || (uVar7 < *arg_8h)) {\n                bVar3 = true;\n            }\n            *puVar4 = uVar7;\n            uVar7 = uVar8;\n            if (bVar3) {\n                uVar7 = uVar8 + 1;\n                bVar3 = false;\n                if ((uVar7 < uVar8) || (uVar7 == 0)) {\n                    bVar3 = true;\n                }\n                puVar4[1] = uVar7;\n                if (bVar3) {\n                    arg_10h = arg_10h + 1;\n                    puVar4[2] = arg_10h;\n                }\n            }\n            arg_ch = arg_ch + -1;\n            arg_8h = arg_8h + 1;\n            puVar4[1] = uVar7;\n            puVar4[2] = arg_10h;\n        } while (arg_ch != 0);\n    }\n    if (puVar4[2] == 0) {\n        uVar7 = puVar4[1];\n        do {\n            var_4h._0_2_ = var_4h + -0x10;\n            uVar9 = uVar7 >> 0x10;\n            uVar7 = uVar7 << 0x10 | *puVar4 >> 0x10;\n            puVar4[1] = uVar7;\n            *puVar4 = *puVar4 << 0x10;\n        } while (uVar9 == 0);\n        puVar4[2] = uVar9;\n    }\n    uVar7 = puVar4[2];\n    if ((uVar7 & 0x8000) == 0) {\n        uVar9 = puVar4[1];\n        do {\n            var_4h._0_2_ = var_4h + -1;\n            uVar8 = uVar7 * 2;\n            uVar7 = uVar8 | uVar9 >> 0x1f;\n            uVar9 = uVar9 * 2 | *puVar4 >> 0x1f;\n            *puVar4 = *puVar4 * 2;\n            puVar4[1] = uVar9;\n            puVar4[2] = uVar7;\n        } while ((uVar8 & 0x8000) == 0);\n    }\n    *(puVar4 + 10) = var_4h;\n    return;\n}\n",
        "token_count": 1361
    },
    "00405a80": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint fcn.00405a80(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uchar auStack52 [4];\n    uchar auStack48 [32];\n    uint uStack16;\n    uint uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x424fcb;\n    uStack12 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack12;\n    if ((param_1 != NULL) && (*param_1 == 0)) {\n        iVar1 = fcn.0040a3f6(0x20);\n        uStack4 = 0;\n        if (iVar1 == 0) {\n            iVar2 = 0;\n        }\n        else {\n            fcn.00405990();\n            fcn.004056e0(auStack48);\n            iVar2 = fcn.00405a60();\n        }\n        uStack8 = 0xffffffff;\n        *param_1 = iVar2;\n        if (iVar1 != 0) {\n            fcn.00405780(auStack52);\n        }\n    }\n    *in_FS_OFFSET = uStack16;\n    return 2;\n}\n",
        "token_count": 284
    },
    "00406cd0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00406e1f)\n// WARNING: Removing unreachable block (ram,0x00406d6d)\n\nuint __cdecl\nfcn.00406cd0(uint arg_8h, uint arg_ch, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint32_t arg_24h)\n\n{\n    int64_t iVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint uVar4;\n    int32_t in_ECX;\n    int64_t iVar5;\n    \n    iVar5 = fcn.00407830();\n    iVar2 = fcn.00407230();\n    if ((iVar2 != 0) && (uVar3 = fcn.00407230(),  *(in_ECX + 0x3c) < uVar3)) {\n        uVar4 = fcn.00407230();\n        *(in_ECX + 0x3c) = uVar4;\n    }\n    iVar1 = iVar5;\n    if (iVar5 != CONCAT44(*0x401364, *0x401360)) {\n        if ((arg_24h & 1) != 0) {\n            iVar2 = fcn.00407210();\n            if (iVar2 != 0) {\n                iVar1 = CONCAT44(*0x401364, *0x401360);\n                if (-1 < iVar5) {\n                    iVar2 = fcn.00407200();\n                    iVar2 = *(in_ECX + 0x3c) - iVar2;\n                    iVar1 = CONCAT44(*0x401364, *0x401360);\n                    if (iVar5 <= CONCAT44(iVar2 >> 0x1f, iVar2 >> 1)) {\n                        fcn.00407200();\n                        fcn.00407210();\n                        fcn.00407250();\n                        iVar1 = iVar5;\n                        if (((arg_24h & 2) != 0) && (iVar2 = fcn.00407230(),  iVar2 != 0)) {\n                            fcn.00407280();\n                            fcn.00407210();\n                            fcn.00407220();\n                            fcn.004072f0();\n                        }\n                    }\n                }\n                goto code_r0x00406dd6;\n            }\n        }\n        iVar1 = CONCAT44(*0x401364, *0x401360);\n        if ((arg_24h & 2) != 0) {\n            iVar2 = fcn.00407230();\n            iVar1 = CONCAT44(*0x401364, *0x401360);\n            if ((iVar2 != 0) && (iVar1 = CONCAT44(*0x401364, *0x401360),  -1 < iVar5)) {\n                iVar2 = fcn.00407200();\n                iVar2 = *(in_ECX + 0x3c) - iVar2;\n                iVar1 = CONCAT44(*0x401364, *0x401360);\n                if (iVar5 <= CONCAT44(iVar2 >> 0x1f, iVar2 >> 1)) {\n                    fcn.00407200();\n                    fcn.00407230();\n                    fcn.004072c0();\n                    iVar1 = iVar5;\n                }\n            }\n        }\n    }\ncode_r0x00406dd6:\n    fcn.00407810(iVar1);\n    return arg_8h;\n}\n",
        "token_count": 758
    },
    "00406f60": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __thiscall fcn.00406f60(uint param_1, uint8_t param_2)\n\n{\n    fcn.00405970();\n    if ((param_2 & 1) != 0) {\n        fcn.0040a178(param_1);\n    }\n    return param_1;\n}\n",
        "token_count": 69
    },
    "00407410": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid fcn.00407410(void)\n\n{\n    int32_t unaff_ESI;\n    \n    if ((*(unaff_ESI + 0x40) & 1) != 0) {\n        fcn.00407200();\n        fcn.00407340();\n    }\n    fcn.00407260();\n    fcn.004072d0();\n    *(unaff_ESI + 0x40) = *(unaff_ESI + 0x40) & 0xfffffffe;\n    *(unaff_ESI + 0x3c) = 0;\n    return;\n}\n",
        "token_count": 130
    },
    "00408810": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00408810(uint32_t arg_8h)\n\n{\n    uint *in_ECX;\n    \n    *in_ECX = 0x4012b0;\n    if ((arg_8h & 1) != 0) {\n        fcn.0040a178();\n    }\n    return;\n}\n",
        "token_count": 72
    },
    "0040909e": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040909e(uint32_t arg_8h)\n\n{\n    fcn.00409a13();\n    if ((arg_8h & 1) != 0) {\n        fcn.0040a178();\n    }\n    return;\n}\n",
        "token_count": 60
    },
    "00409ab9": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00409ab9(uint32_t arg_8h)\n\n{\n    uint *in_ECX;\n    \n    *in_ECX = 0x4013cc;\n    fcn.00409999();\n    if ((arg_8h & 1) != 0) {\n        fcn.0040a178();\n    }\n    return;\n}\n",
        "token_count": 80
    },
    "0040a23c": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040a23c(uint32_t arg_8h)\n\n{\n    fcn.0040a22c();\n    if ((arg_8h & 1) != 0) {\n        fcn.0040a178();\n    }\n    return;\n}\n",
        "token_count": 62
    },
    "00410424": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00410424(uint32_t arg_8h)\n\n{\n    uint *in_ECX;\n    \n    *in_ECX = 0x402c08;\n    fcn.00409a13();\n    if ((arg_8h & 1) != 0) {\n        fcn.0040a178();\n    }\n    return;\n}\n",
        "token_count": 80
    },
    "0041dd50": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0041dd50(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    uint32_t arg_8h_00;\n    uint *puVar2;\n    uint uVar3;\n    int32_t unaff_EBP;\n    int32_t iVar4;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.0040e210(0x425ca0, 0x10);\n    arg_8h_00 = *(unaff_EBP + 8);\n    if (arg_8h_00 == 0xfffffffe) {\n        puVar2 = fcn.0040a6b2();\n        *puVar2 = 0;\n        puVar2 = fcn.0040a69f();\n        *puVar2 = 9;\n    }\n    else {\n        if ((-1 < arg_8h_00) && (arg_8h_00 < *0xbb50ac)) {\n            piVar1 = (arg_8h_00 >> 5) * 4 + 0xbb50c0;\n            iVar4 = (arg_8h_00 & 0x1f) * 0x40;\n            if ((*(*piVar1 + 4 + iVar4) & 1) != 0) {\n                fcn.0041d2de(arg_8h_00);\n                *(unaff_EBP + -4) = 0;\n                if ((*(*piVar1 + 4 + iVar4) & 1) == 0) {\n                    puVar2 = fcn.0040a69f();\n                    *puVar2 = 9;\n                    puVar2 = fcn.0040a6b2();\n                    *puVar2 = 0;\n                    *(unaff_EBP + -0x1c) = 0xffffffff;\n                }\n                else {\n                    uVar3 = fcn.0041d653(arg_8h_00, *(unaff_EBP + 0xc), *(unaff_EBP + 0x10));\n                    *(unaff_EBP + -0x1c) = uVar3;\n                }\n                *(unaff_EBP + -4) = 0xfffffffe;\n                fcn.0041de1c();\n                goto code_r0x0041de13;\n            }\n        }\n        puVar2 = fcn.0040a6b2();\n        *puVar2 = 0;\n        puVar2 = fcn.0040a69f();\n        *puVar2 = 9;\n        fcn.0040f24d();\n    }\ncode_r0x0041de13:\n    fcn.0040e255();\n    return;\n}\n",
        "token_count": 621
    },
    "0040da09": {
        "rules": [
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf"
        ],
        "decompiled_code": "\nuint * __fastcall fcn.0040da09(uint32_t param_1)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint uVar3;\n    uint uVar4;\n    uint uVar5;\n    uint uVar6;\n    uint uVar7;\n    uint uVar8;\n    uint uVar9;\n    uint uVar10;\n    uint uVar11;\n    uint uVar12;\n    uint uVar13;\n    uint uVar14;\n    uint uVar15;\n    uint32_t uVar16;\n    uint32_t uVar17;\n    uint *unaff_ESI;\n    uint *unaff_EDI;\n    uint *puVar18;\n    \n    puVar18 = unaff_EDI;\n    if ((unaff_ESI & 0xf) != 0) {\n        uVar17 = 0x10 - (unaff_ESI & 0xf);\n        param_1 = param_1 - uVar17;\n        for (uVar16 = uVar17 & 3; uVar16 != 0; uVar16 = uVar16 - 1) {\n            *puVar18 = *unaff_ESI;\n            unaff_ESI = unaff_ESI + 1;\n            puVar18 = puVar18 + 1;\n        }\n        for (uVar17 = uVar17 >> 2; uVar17 != 0; uVar17 = uVar17 - 1) {\n            *puVar18 = *unaff_ESI;\n            unaff_ESI = unaff_ESI + 1;\n            puVar18 = puVar18 + 1;\n        }\n    }\n    for (uVar16 = param_1 >> 7; uVar16 != 0; uVar16 = uVar16 - 1) {\n        uVar1 = unaff_ESI[1];\n        uVar2 = unaff_ESI[2];\n        uVar3 = unaff_ESI[3];\n        uVar4 = unaff_ESI[4];\n        uVar5 = unaff_ESI[5];\n        uVar6 = unaff_ESI[6];\n        uVar7 = unaff_ESI[7];\n        uVar8 = unaff_ESI[8];\n        uVar9 = unaff_ESI[9];\n        uVar10 = unaff_ESI[10];\n        uVar11 = unaff_ESI[0xb];\n        uVar12 = unaff_ESI[0xc];\n        uVar13 = unaff_ESI[0xd];\n        uVar14 = unaff_ESI[0xe];\n        uVar15 = unaff_ESI[0xf];\n        *puVar18 = *unaff_ESI;\n        puVar18[1] = uVar1;\n        puVar18[2] = uVar2;\n        puVar18[3] = uVar3;\n        puVar18[4] = uVar4;\n        puVar18[5] = uVar5;\n        puVar18[6] = uVar6;\n        puVar18[7] = uVar7;\n        puVar18[8] = uVar8;\n        puVar18[9] = uVar9;\n        puVar18[10] = uVar10;\n        puVar18[0xb] = uVar11;\n        puVar18[0xc] = uVar12;\n        puVar18[0xd] = uVar13;\n        puVar18[0xe] = uVar14;\n        puVar18[0xf] = uVar15;\n        uVar1 = unaff_ESI[0x11];\n        uVar2 = unaff_ESI[0x12];\n        uVar3 = unaff_ESI[0x13];\n        uVar4 = unaff_ESI[0x14];\n        uVar5 = unaff_ESI[0x15];\n        uVar6 = unaff_ESI[0x16];\n        uVar7 = unaff_ESI[0x17];\n        uVar8 = unaff_ESI[0x18];\n        uVar9 = unaff_ESI[0x19];\n        uVar10 = unaff_ESI[0x1a];\n        uVar11 = unaff_ESI[0x1b];\n        uVar12 = unaff_ESI[0x1c];\n        uVar13 = unaff_ESI[0x1d];\n        uVar14 = unaff_ESI[0x1e];\n        uVar15 = unaff_ESI[0x1f];\n        puVar18[0x10] = unaff_ESI[0x10];\n        puVar18[0x11] = uVar1;\n        puVar18[0x12] = uVar2;\n        puVar18[0x13] = uVar3;\n        puVar18[0x14] = uVar4;\n        puVar18[0x15] = uVar5;\n        puVar18[0x16] = uVar6;\n        puVar18[0x17] = uVar7;\n        puVar18[0x18] = uVar8;\n        puVar18[0x19] = uVar9;\n        puVar18[0x1a] = uVar10;\n        puVar18[0x1b] = uVar11;\n        puVar18[0x1c] = uVar12;\n        puVar18[0x1d] = uVar13;\n        puVar18[0x1e] = uVar14;\n        puVar18[0x1f] = uVar15;\n        unaff_ESI = unaff_ESI + 0x20;\n        puVar18 = puVar18 + 0x20;\n    }\n    if ((param_1 & 0x7f) != 0) {\n        for (uVar16 = (param_1 & 0x7f) >> 4; uVar16 != 0; uVar16 = uVar16 - 1) {\n            uVar1 = unaff_ESI[1];\n            uVar2 = unaff_ESI[2];\n            uVar3 = unaff_ESI[3];\n            *puVar18 = *unaff_ESI;\n            puVar18[1] = uVar1;\n            puVar18[2] = uVar2;\n            puVar18[3] = uVar3;\n            unaff_ESI = unaff_ESI + 4;\n            puVar18 = puVar18 + 4;\n        }\n        if ((param_1 & 0xf) != 0) {\n            for (uVar16 = (param_1 & 0xf) >> 2; uVar16 != 0; uVar16 = uVar16 - 1) {\n                *puVar18 = *unaff_ESI;\n                unaff_ESI = unaff_ESI + 1;\n                puVar18 = puVar18 + 1;\n            }\n            for (param_1 = param_1 & 3; param_1 != 0; param_1 = param_1 - 1) {\n                *puVar18 = *unaff_ESI;\n                unaff_ESI = unaff_ESI + 1;\n                puVar18 = puVar18 + 1;\n            }\n        }\n    }\n    return unaff_EDI;\n}\n",
        "token_count": 1607
    },
    "00405890": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00405890(int32_t param_1)\n\n{\n    fcn.00409193(0);\n    if (*(param_1 + 4) != -1) {\n        *(param_1 + 4) = *(param_1 + 4) + 1;\n    }\n    fcn.004091bb();\n    return;\n}\n",
        "token_count": 79
    },
    "004058c0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.004058c0(uint32_t param_1)\n\n{\n    int32_t iVar1;\n    \n    fcn.00409193(0);\n    iVar1 = *(param_1 + 4);\n    if ((iVar1 != 0) && (iVar1 != -1)) {\n        *(param_1 + 4) = iVar1 + -1;\n    }\n    iVar1 = *(param_1 + 4);\n    fcn.004091bb();\n    return ~-(iVar1 != 0) & param_1;\n}\n",
        "token_count": 123
    },
    "00407fd0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t fcn.00407fd0(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    int32_t iVar3;\n    int32_t iStack36;\n    uchar auStack32 [4];\n    uint uStack28;\n    uint uStack20;\n    uint uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x424fe8;\n    uStack12 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack12;\n    iVar3 = 0;\n    fcn.00409193(0);\n    iVar2 = *0xbb5098;\n    uStack8 = 0;\n    iStack36 = *0xbb5098;\n    fcn.00405850();\n    iVar1 = fcn.004059a0();\n    if ((iVar1 == 0) && (iVar1 = iVar2,  iVar2 == 0)) {\n        iVar2 = fcn.00405a80(&iStack36);\n        if (iVar2 == -1) {\n            fcn.00409a1e(0x404830);\n            fcn.0040b021(auStack32, 0x425e14);\n        }\n        *0xbb5098 = iVar3;\n        fcn.00405890();\n        fcn.00405900();\n        iVar1 = iVar3;\n    }\n    uStack20 = 0xffffffff;\n    fcn.004091bb();\n    *in_FS_OFFSET = uStack28;\n    return iVar1;\n}\n",
        "token_count": 353
    },
    "004081f0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.004081f0(int32_t param_1)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = 0;\n    if ((param_1 != 0) && (iVar1 = fcn.0040a3f6(param_1),  iVar1 == 0)) {\n        fcn.00405560();\n        iVar1 = fcn.0040b021(&stack0xfffffff0, 0x425e4c);\n    }\n    return iVar1;\n}\n",
        "token_count": 114
    },
    "00407ac0": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nvoid fcn.00407ac0(void)\n\n{\n    fcn.00407a60();\n    fcn.00407aa0();\n    return;\n}\n",
        "token_count": 34
    },
    "00407e00": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.00407e00(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint arg_8h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    uint uVar4;\n    uint *in_ECX;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint *in_FS_OFFSET;\n    uint32_t var_8h;\n    int32_t var_ch;\n    uint var_10h;\n    uint var_18h;\n    uint var_14h;\n    uint var_ch_2;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x424ed0;\n    var_ch_2 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_ch_2;\n    uVar6 = var_8h | 0xf;\n    uVar2 = fcn.00407de0();\n    if (uVar6 <= uVar2) {\n        uVar1 = in_ECX[5];\n        uVar5 = uVar1 >> 1;\n        var_8h = uVar6;\n        if ((uVar6 / 3 < uVar5) && (var_8h = uVar2,  uVar1 <= uVar2 - uVar5)) {\n            var_8h = uVar5 + uVar1;\n        }\n    }\n    var_4h = 0;\n    uVar3 = fcn.00407f90(var_8h + 1);\n    if (var_ch != 0) {\n        uVar4 = fcn.00407950(var_ch);\n        fcn.00405660(uVar3, uVar4);\n    }\n    fcn.00407140(1, 0);\n    *in_ECX = uVar3;\n    in_ECX[5] = var_8h;\n    fcn.00407920(var_ch);\n    *in_FS_OFFSET = var_ch_2;\n    return;\n}\n",
        "token_count": 495
    },
    "00407920": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00407920(uint32_t param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    uint uStack4;\n    \n    uStack4 = param_1 & 0xffffff;\n    *(param_1 + 0x10) = param_2;\n    iVar1 = fcn.00407950(&uStack4 + 3);\n    fcn.00405680(iVar1 + param_2);\n    return;\n}\n",
        "token_count": 106
    },
    "0041d62b": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nvoid fcn.0041d62b(void)\n\n{\n    uint8_t *puVar1;\n    int32_t unaff_EBP;\n    uint32_t unaff_ESI;\n    int32_t unaff_EDI;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x1c) == unaff_EDI) {\n        puVar1 = *((unaff_ESI >> 5) * 4 + 0xbb50c0) + 4 + (unaff_ESI & 0x1f) * 0x40;\n        *puVar1 = *puVar1 & 0xfe;\n    }\n    fcn.0041d37d(unaff_ESI);\n    return;\n}\n",
        "token_count": 160
    },
    "0041f700": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nvoid fcn.0041f700(uint32_t *param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    int32_t iStack20;\n    \n    iVar4 = *0x8110bc;\n    iVar3 = *0x8110b8;\n    iVar2 = *0x8110b4;\n    iVar1 = *0x8110b0;\n    uVar5 = *param_1;\n    uVar6 = param_1[1];\n    iStack20 = -0x3910c8e0;\n    iVar7 = 0x20;\n    do {\n        if (*0xbb5090 == 5) {\n            (*_sym.imp.KERNEL32.dll_GetConsoleAliasExesLengthW)();\n            (*_sym.imp.KERNEL32.dll_SetThreadIdealProcessor)(0, 0);\n        }\n        *0xbb1504 = 0;\n        if (*0xbb5090 == 0x5ba) {\n            (*_sym.imp.KERNEL32.dll_CreateMutexW)(0, 0, 0x4043e8);\n        }\n        uVar6 = uVar6 - ((uVar5 >> 5) + iVar4 ^ uVar5 * 0x10 + iVar3 ^ iStack20 + uVar5);\n        *0xbb1508 = 0xff6b3619;\n        *0xbb150c = 0xffffffff;\n        uVar5 = uVar5 - (uVar6 * 0x10 + iVar1 ^ iStack20 + uVar6 ^ (uVar6 >> 5) + iVar2);\n        iStack20 = iStack20 + 0x61c88647;\n        iVar7 = iVar7 + -1;\n    } while (iVar7 != 0);\n    param_1[1] = uVar6;\n    *param_1 = uVar5;\n    return;\n}\n",
        "token_count": 448
    },
    "0041f920": {
        "rules": [
            "hash data using aphash/10489b186fc44711a1078750698db7a9",
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0"
        ],
        "decompiled_code": "\nvoid fcn.0041f920(void)\n\n{\n    uint32_t uVar1;\n    \n    for (uVar1 = *0xbb5090 >> 3; uVar1 != 0; uVar1 = uVar1 - 1) {\n        fcn.0041f700();\n    }\n    return;\n}\n",
        "token_count": 71
    },
    "004055c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004055c0(uint param_1, uint param_2, uint param_3)\n\n{\n    int32_t in_EAX;\n    \n    fcn.0040acc0(param_3, param_2, in_EAX * 2);\n    return;\n}\n",
        "token_count": 63
    },
    "004055e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004055e0(void)\n\n{\n    fcn.004055c0();\n    return;\n}\n",
        "token_count": 25
    },
    "004056e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint fcn.004056e0(uint param_1)\n\n{\n    uint unaff_ESI;\n    int32_t unaff_EDI;\n    uint *in_FS_OFFSET;\n    uint uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x424ec4;\n    uStack12 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack12;\n    fcn.00409193(0);\n    uStack8 = 0;\n    fcn.004061d0();\n    fcn.004061d0();\n    fcn.004061d0();\n    fcn.004061d0();\n    uStack8 = CONCAT31(uStack8._1_3_, 4);\n    if (unaff_EDI == 0) {\n        fcn.00405690(0x40434c);\n        fcn.0040b021(&stack0xffffffe0, 0x425d80);\n    }\n    fcn.00408ccb(param_1, unaff_EDI);\n    *in_FS_OFFSET = unaff_ESI;\n    return param_1;\n}\n",
        "token_count": 265
    },
    "00405780": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid fcn.00405780(uint param_1)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack12 = *in_FS_OFFSET;\n    uStack8 = 0x424ec4;\n    *in_FS_OFFSET = &uStack12;\n    uStack4 = 4;\n    fcn.00408c58(param_1);\n    fcn.004061e0();\n    fcn.004061e0();\n    fcn.004061e0();\n    fcn.004061e0();\n    uStack4 = 0xffffffff;\n    fcn.004091bb();\n    *in_FS_OFFSET = uStack12;\n    return;\n}\n",
        "token_count": 160
    },
    "004057f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004057f0(void)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint *puVar3;\n    uint *unaff_ESI;\n    uchar auStack20 [20];\n    \n    puVar3 = fcn.0040976e(auStack20);\n    uVar1 = puVar3[1];\n    *unaff_ESI = *puVar3;\n    uVar2 = puVar3[2];\n    unaff_ESI[1] = uVar1;\n    uVar1 = puVar3[3];\n    unaff_ESI[2] = uVar2;\n    unaff_ESI[3] = uVar1;\n    return;\n}\n",
        "token_count": 153
    },
    "00405990": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.00405990(void)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    \n    iVar1 = *(*in_EAX + 0x18);\n    if (iVar1 == 0) {\n        iVar1 = *in_EAX + 0x1c;\n    }\n    return iVar1;\n}\n",
        "token_count": 77
    },
    "00405b50": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid fcn.00405b50(void)\n\n{\n    uint *puVar1;\n    int32_t unaff_EDI;\n    \n    puVar1 = fcn.004057f0();\n    *(unaff_EDI + 8) = *puVar1;\n    *(unaff_EDI + 0xc) = puVar1[1];\n    *(unaff_EDI + 0x10) = puVar1[2];\n    *(unaff_EDI + 0x14) = puVar1[3];\n    puVar1 = fcn.00405820();\n    *(unaff_EDI + 0x18) = *puVar1;\n    *(unaff_EDI + 0x1c) = puVar1[1];\n    return;\n}\n",
        "token_count": 168
    },
    "00405f20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00405f20(int32_t param_1)\n\n{\n    uint32_t in_EAX;\n    uint32_t uVar1;\n    uint32_t extraout_ECX;\n    uint uStack40;\n    uchar auStack28 [28];\n    \n    *(param_1 + 0xc) = in_EAX & 0x17;\n    uVar1 = *(param_1 + 0x10) & in_EAX & 0x17;\n    if (uVar1 != 0) {\n        if ((uVar1 & 4) != 0) {\n            uStack40 = 0x405f3f;\n            fcn.00405e80();\n            uStack40 = 0x40439c;\n            fcn.00405f00();\n            fcn.0040b021(&stack0xffffffe4, 0x425ddc);\n            uVar1 = extraout_ECX;\n        }\n        if ((uVar1 & 2) != 0) {\n            fcn.00405e80();\n            fcn.00405f00(0x4043b4);\n            fcn.0040b021(&stack0xffffffd8, 0x425ddc);\n        }\n        fcn.00405e80();\n        fcn.00405f00(0x4043cc);\n        fcn.0040b021(&stack0xffffffd8, 0x425ddc);\n    }\n    return;\n}\n",
        "token_count": 323
    },
    "00406000": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid fcn.00406000(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t unaff_EDI;\n    \n    *(unaff_EDI + 0x30) = 0;\n    *(unaff_EDI + 8) = 0;\n    *(unaff_EDI + 0x10) = 0;\n    *(unaff_EDI + 0x14) = 0x201;\n    *(unaff_EDI + 0x18) = 6;\n    *(unaff_EDI + 0x1c) = 0;\n    *(unaff_EDI + 0x20) = 0;\n    *(unaff_EDI + 0x24) = 0;\n    *(unaff_EDI + 0x28) = 0;\n    *(unaff_EDI + 0x2c) = 0;\n    fcn.00405fb0();\n    iVar1 = fcn.0040a3f6(4);\n    if (iVar1 != 0) {\n        uVar2 = fcn.00405950();\n        *(unaff_EDI + 0x30) = uVar2;\n        return;\n    }\n    *(unaff_EDI + 0x30) = 0;\n    return;\n}\n",
        "token_count": 285
    },
    "004061e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004061e0(int32_t *param_1)\n\n{\n    if (*param_1 != 0) {\n        fcn.00409ef1(*param_1);\n    }\n    *param_1 = 0;\n    return;\n}\n",
        "token_count": 59
    },
    "004065a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nint32_t * fcn.004065a0(int32_t *param_1)\n\n{\n    uint unaff_EDI;\n    uint *in_FS_OFFSET;\n    uint uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x425067;\n    uStack12 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack12;\n    *param_1 = 0x404908;\n    param_1[4] = 0x404910;\n    fcn.004071f0();\n    uStack4 = 0;\n    fcn.00407360(param_1, param_1 + 6);\n    uStack12 = 1;\n    *(param_1 + *(*param_1 + 4)) = 0x404904;\n    fcn.004073c0(param_1 + 6);\n    *in_FS_OFFSET = unaff_EDI;\n    return param_1;\n}\n",
        "token_count": 218
    },
    "00406e90": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00406e90(uint param_1)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack8 = 0x424f88;\n    uStack12 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack12;\n    uStack4 = 0;\n    iVar2 = fcn.00407470();\n    if (iVar2 != 0) {\n        puVar3 = fcn.00407460();\n        uVar1 = *puVar3;\n        fcn.00407450();\n        puVar3 = fcn.00407840();\n        fcn.00407490(param_1, *puVar3, uVar1);\n    }\n    fcn.004061b0();\n    *in_FS_OFFSET = uStack24;\n    return;\n}\n",
        "token_count": 218
    },
    "004070b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004070b0(void)\n\n{\n    char cVar1;\n    uint *unaff_ESI;\n    uint *unaff_EDI;\n    \n    if (unaff_EDI != unaff_ESI) {\n        cVar1 = fcn.00408090();\n        if ((cVar1 != '\\0') && (0xf < unaff_ESI[5])) {\n            fcn.004078a0();\n            return;\n        }\n        fcn.00407140(1, 0);\n        if (unaff_ESI[5] < 0x10) {\n            fcn.00405670();\n        }\n        else {\n            *unaff_EDI = *unaff_ESI;\n            *unaff_ESI = 0;\n        }\n        unaff_EDI[4] = unaff_ESI[4];\n        unaff_EDI[5] = unaff_ESI[5];\n        unaff_ESI[4] = 0;\n        unaff_ESI[5] = 0;\n    }\n    return;\n}\n",
        "token_count": 228
    },
    "00407120": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00407120(uint param_1)\n\n{\n    uint uVar1;\n    \n    uVar1 = fcn.00405640(param_1);\n    fcn.004078b0(param_1, uVar1);\n    return;\n}\n",
        "token_count": 56
    },
    "00407250": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00407250(int32_t param_1, int32_t param_2)\n\n{\n    **(param_2 + 0x30) = **(param_2 + 0x30) - param_1;\n    **(param_2 + 0x20) = **(param_2 + 0x20) + param_1 * 2;\n    return;\n}\n",
        "token_count": 90
    },
    "004072c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004072c0(int32_t param_1, int32_t param_2)\n\n{\n    **(param_2 + 0x34) = **(param_2 + 0x34) - param_1;\n    **(param_2 + 0x24) = **(param_2 + 0x24) + param_1 * 2;\n    return;\n}\n",
        "token_count": 91
    },
    "00407350": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00407350(uint32_t param_1)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = 0;\n    if (param_1 != 0) {\n        if ((param_1 < 0x80000000) && (iVar1 = fcn.0040a3f6(param_1 * 2),  iVar1 != 0)) {\n            return iVar1;\n        }\n        fcn.00405560();\n        iVar1 = fcn.0040b021(&stack0xfffffff0, 0x425e4c);\n    }\n    return iVar1;\n}\n",
        "token_count": 138
    },
    "00407360": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nint32_t * fcn.00407360(int32_t *param_1, uint param_2)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x42502b;\n    uStack12 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack12;\n    fcn.004079a0(param_1);\n    uStack12 = 1;\n    fcn.00407980(param_1 + 4);\n    *(param_1 + *(*param_1 + 4)) = 0x4048b4;\n    *in_FS_OFFSET = param_2;\n    return param_1;\n}\n",
        "token_count": 167
    },
    "004073c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * fcn.004073c0(uint *param_1)\n\n{\n    uint unaff_ESI;\n    uint *in_FS_OFFSET;\n    uint uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack12 = *in_FS_OFFSET;\n    uStack4 = 0xffffffff;\n    uStack8 = 0x424f68;\n    *in_FS_OFFSET = &uStack12;\n    fcn.004079e0(param_1);\n    uStack8 = 0;\n    *param_1 = 0x4048c4;\n    fcn.00408340();\n    fcn.00407a50();\n    *in_FS_OFFSET = unaff_ESI;\n    return param_1;\n}\n",
        "token_count": 161
    },
    "00407470": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.00407470(void)\n\n{\n    int32_t *in_EAX;\n    \n    return (in_EAX[1] - *in_EAX) / 0x1c;\n}\n",
        "token_count": 46
    },
    "00407520": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl\nfcn.00407520(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, uint noname_13\n            , uint noname_14, uint noname_15, uint noname_16, uint noname_17, uint noname_18, uint noname_19, \n            uint noname_20, uint noname_21, uint noname_22, uint noname_23, uint noname_24, uint noname_25, \n            uint noname_26, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint *in_FS_OFFSET;\n    int32_t *var_8h;\n    int32_t var_ch_2;\n    uint32_t var_10h_2;\n    uint var_14h;\n    uint var_10h;\n    uint var_58h;\n    uint var_3ch;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h_2;\n    uint var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x424f50;\n    var_ch = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_ch;\n    if (var_10h_2 != 0) {\n        iVar1 = fcn.00407470();\n        iVar2 = fcn.00407aa0();\n        if (iVar2 - iVar1 < var_10h_2) {\n            fcn.00407b10();\n        }\n        uVar3 = fcn.00407a60();\n        if (uVar3 < iVar1 + var_10h_2) {\n            iVar1 = fcn.00407ac0();\n            iVar2 = fcn.00407b20();\n            var_4h = 0;\n            fcn.00407f80();\n            fcn.00407af0();\n            fcn.00408100();\n            fcn.00408100();\n            iVar4 = fcn.00407470();\n            if (*var_8h != 0) {\n                fcn.00407ab0();\n                fcn.00407340();\n            }\n            var_8h[2] = iVar2 + iVar1 * 0x1c;\n            var_8h[1] = iVar2 + (var_10h_2 + iVar4) * 0x1c;\n            *var_8h = iVar2;\n            *in_FS_OFFSET = var_ch;\n            return;\n        }\n        if ((var_8h[1] - var_ch_2) / 0x1c < var_10h_2) {\n            fcn.00407860();\n            var_4h = 2;\n            fcn.00408100();\n            var_4h = CONCAT31(var_4h._1_3_, 3);\n            fcn.00407f80();\n            fcn.00407af0();\n            var_4h = 2;\n            var_8h[1] = var_8h[1] + var_10h_2 * 0x1c;\n            fcn.00408110(var_ch_2);\n        }\n        else {\n            fcn.00407860();\n            var_4h = 5;\n            iVar1 = var_8h[1];\n            iVar2 = fcn.00408100();\n            var_8h[1] = iVar2;\n            fcn.00408130(iVar1 + var_10h_2 * -0x1c, iVar1);\n            fcn.00408110(var_ch_2);\n        }\n        fcn.004061b0();\n    }\n    *in_FS_OFFSET = var_ch;\n    return;\n}\n",
        "token_count": 927
    },
    "004078b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __thiscall fcn.004078b0(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint uVar3;\n    \n    cVar1 = fcn.00407c80(param_2);\n    if (cVar1 != '\\0') {\n        iVar2 = fcn.00407950(param_2);\n        uVar3 = fcn.00407b70(param_1, param_2 - iVar2);\n        return uVar3;\n    }\n    cVar1 = fcn.00407c00(param_2, 0);\n    if (cVar1 != '\\0') {\n        uVar3 = fcn.00407950(param_2, param_2);\n        fcn.00405660(uVar3);\n        fcn.00407920(param_2);\n    }\n    return param_1;\n}\n",
        "token_count": 197
    },
    "004079a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nint32_t * fcn.004079a0(int32_t *param_1, uint param_2)\n\n{\n    *(param_1 + *(*param_1 + 4)) = 0x404894;\n    param_1[2] = 0;\n    param_1[3] = 0;\n    fcn.00407cd0(param_2);\n    return param_1;\n}\n",
        "token_count": 88
    },
    "004079e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nuint * fcn.004079e0(uint *param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack12 = *in_FS_OFFSET;\n    uStack4 = 0xffffffff;\n    uStack8 = 0x424eeb;\n    *in_FS_OFFSET = &uStack12;\n    *param_1 = 0x404854;\n    fcn.00409252();\n    uStack4 = 0;\n    iVar1 = fcn.0040a3f6(4);\n    if (iVar1 == 0) {\n        uVar2 = 0;\n    }\n    else {\n        uVar2 = fcn.00405950();\n    }\n    param_1[0xe] = uVar2;\n    fcn.00407d10();\n    *in_FS_OFFSET = uStack12;\n    return param_1;\n}\n",
        "token_count": 218
    },
    "00407a60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.00407a60(void)\n\n{\n    int32_t *in_EAX;\n    \n    return (in_EAX[2] - *in_EAX) / 0x1c;\n}\n",
        "token_count": 47
    },
    "00407b20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00407b20(uint32_t param_1)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = 0;\n    if (param_1 != 0) {\n        if ((param_1 < 0x924924a) && (iVar1 = fcn.0040a3f6(param_1 * 0x1c),  iVar1 != 0)) {\n            return iVar1;\n        }\n        fcn.00405560();\n        iVar1 = fcn.0040b021(&stack0xfffffff0, 0x425e4c);\n    }\n    return iVar1;\n}\n",
        "token_count": 142
    },
    "00407b70": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.00407b70(int32_t param_1, int32_t param_2, uint32_t param_3, uint32_t param_4)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    \n    uVar2 = fcn.004061c0();\n    if (uVar2 < param_3) {\n        fcn.00407960();\n    }\n    iVar3 = fcn.004061c0();\n    uVar2 = iVar3 - param_3;\n    if (param_4 < iVar3 - param_3) {\n        uVar2 = param_4;\n    }\n    if (param_1 == param_2) {\n        fcn.00407d80(uVar2 + param_3, 0xffffffff);\n        fcn.00407d80(0, param_3);\n        return param_1;\n    }\n    cVar1 = fcn.00407c00(uVar2, 0);\n    if (cVar1 != '\\0') {\n        iVar3 = fcn.00407950(uVar2);\n        uVar4 = fcn.00407950(iVar3 + param_3);\n        fcn.00405660(uVar4);\n        fcn.00407920(uVar2);\n    }\n    return param_1;\n}\n",
        "token_count": 305
    },
    "00407c80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __thiscall fcn.00407c80(int32_t param_1, uint32_t param_2)\n\n{\n    uint32_t in_EAX;\n    int32_t iVar1;\n    \n    if (param_2 != 0) {\n        in_EAX = fcn.00407950();\n        if (in_EAX <= param_2) {\n            iVar1 = fcn.00407950();\n            in_EAX = iVar1 + *(param_1 + 0x10);\n            if (param_2 < in_EAX) {\n                return CONCAT31(in_EAX >> 8, 1);\n            }\n        }\n    }\n    return in_EAX & 0xffffff00;\n}\n",
        "token_count": 153
    },
    "00407d80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.00407d80(int32_t param_1, uint32_t param_2, uint32_t param_3)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    \n    uVar1 = *(param_1 + 0x10);\n    if (uVar1 < param_2) {\n        uVar1 = fcn.00407960();\n    }\n    uVar1 = uVar1 - param_2;\n    if (uVar1 < param_3) {\n        param_3 = uVar1;\n    }\n    if (param_3 != 0) {\n        iVar2 = fcn.00407950(uVar1 - param_3);\n        iVar2 = fcn.00407950(iVar2 + param_2 + param_3);\n        fcn.00405670(iVar2 + param_2);\n        fcn.00407920(*(param_1 + 0x10) - param_3);\n    }\n    return param_1;\n}\n",
        "token_count": 226
    },
    "00407f10": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00407f10(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x425008;\n    uStack12 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack12;\n    fcn.00405fd0();\n    uStack4 = 0;\n    fcn.00407fd0();\n    uStack4 = 0xffffffff;\n    fcn.00405970();\n    fcn.00405a50();\n    *in_FS_OFFSET = uStack12;\n    return;\n}\n",
        "token_count": 145
    },
    "00408270": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00408270(int32_t param_1)\n\n{\n    int32_t unaff_EBX;\n    \n    if (param_1 != unaff_EBX) {\n        do {\n            fcn.00407f80();\n            fcn.004083d0();\n            param_1 = param_1 + 0x1c;\n        } while (param_1 != unaff_EBX);\n    }\n    return;\n}\n",
        "token_count": 96
    },
    "004082d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004082d0(void)\n\n{\n    int32_t in_EAX;\n    int32_t unaff_EDI;\n    \n    if (in_EAX != unaff_EDI) {\n        do {\n            fcn.004078a0();\n            in_EAX = in_EAX + 0x1c;\n        } while (in_EAX != unaff_EDI);\n    }\n    return;\n}\n",
        "token_count": 89
    },
    "00408320": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00408320(void)\n\n{\n    int32_t in_EAX;\n    int32_t unaff_EDI;\n    \n    if (in_EAX != unaff_EDI) {\n        do {\n            fcn.00408460();\n            in_EAX = in_EAX + 0x1c;\n        } while (in_EAX != unaff_EDI);\n    }\n    return;\n}\n",
        "token_count": 87
    },
    "00408350": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.00408350(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint arg_8h)\n\n{\n    int32_t in_EDX;\n    uint *in_FS_OFFSET;\n    uint var_8h;\n    uint var_10h;\n    uint var_14h;\n    uint var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    uStack12 = 0x424f30;\n    var_ch = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_ch;\n    var_4h = 0;\n    for (; in_EDX != 0; in_EDX = in_EDX + -1) {\n        fcn.00408470();\n    }\n    *in_FS_OFFSET = var_ch;\n    return;\n}\n",
        "token_count": 207
    },
    "004083e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl\nfcn.004083e0(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint arg_8h)\n\n{\n    int32_t in_ECX;\n    int32_t in_EDX;\n    uint *in_FS_OFFSET;\n    int32_t var_8h;\n    uint var_10h;\n    uint var_14h;\n    uint var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    uStack12 = 0x424f20;\n    var_ch = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_ch;\n    var_4h = 0;\n    for (; in_EDX != in_ECX; in_EDX = in_EDX + 0x1c) {\n        fcn.004084b0();\n        var_8h = var_8h + 0x1c;\n    }\n    *in_FS_OFFSET = var_ch;\n    return var_8h;\n}\n",
        "token_count": 246
    },
    "004084d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004084d0(uint param_1)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x424f11;\n    uStack12 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack12;\n    iVar1 = fcn.004055b0(0x1c, param_1);\n    uStack4 = 0;\n    if (iVar1 != 0) {\n        fcn.00407f80();\n        fcn.00407860();\n    }\n    *in_FS_OFFSET = uStack12;\n    return;\n}\n",
        "token_count": 162
    },
    "00408550": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00408550(uint param_1)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x424f11;\n    uStack12 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack12;\n    iVar1 = fcn.004055b0(0x1c, param_1);\n    uStack4 = 0;\n    if (iVar1 != 0) {\n        fcn.00407f80();\n        fcn.00406160();\n    }\n    *in_FS_OFFSET = uStack12;\n    return;\n}\n",
        "token_count": 161
    },
    "0040921a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040921a(uint32_t arg_8h)\n\n{\n    fcn.004098cb((arg_8h & 3) * 0x18 + 0x8134e8);\n    return;\n}\n",
        "token_count": 54
    },
    "00409236": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00409236(uint32_t arg_8h)\n\n{\n    fcn.004098db((arg_8h & 3) * 0x18 + 0x8134e8);\n    return;\n}\n",
        "token_count": 53
    },
    "0040ded6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040ded6(uint arg_8h)\n\n{\n    fcn.0040dd96(arg_8h, 0, 0);\n    return;\n}\n",
        "token_count": 41
    },
    "0040fcf9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0040fd0d)\n// WARNING: Removing unreachable block (ram,0x0040fd13)\n// WARNING: Removing unreachable block (ram,0x0040fd15)\n\nvoid fcn.0040fcf9(void)\n\n{\n    return;\n}\n",
        "token_count": 66
    },
    "0041c920": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041c920(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    fcn.0041c827(arg_8h, arg_ch, arg_10h, 0x401370);\n    return arg_8h;\n}\n",
        "token_count": 63
    },
    "0041c940": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041c940(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    fcn.0041c827(arg_8h, arg_ch, arg_10h, 0x4042dc);\n    return arg_8h;\n}\n",
        "token_count": 64
    },
    "0041f190": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "parse PE header/27dc37a2d08e4034aa7bcaa8b888b251",
            "execute .NET assembly via CLR host/2c9ef85a2fe94af39efaaae3fc9e6a8a",
            "link function at runtime on Windows"
        ],
        "decompiled_code": "\nvoid fcn.0041f190(void)\n\n{\n    uint uStack144;\n    uint uStack140;\n    uint uStack136;\n    uint uStack132;\n    uint uStack128;\n    uint uStack124;\n    uint uStack120;\n    uint uStack116;\n    uint uStack112;\n    uint uStack108;\n    uint uStack104;\n    uint uStack100;\n    uint uStack96;\n    uint uStack92;\n    uint uStack88;\n    uint uStack84;\n    uint uStack80;\n    uint uStack76;\n    uint uStack72;\n    uint uStack68;\n    uint uStack64;\n    uint uStack60;\n    uint uStack56;\n    uint uStack52;\n    uint uStack48;\n    uint uStack44;\n    uint uStack40;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    uint uStack20;\n    uint uStack16;\n    uint uStack12;\n    uint uStack8;\n    \n    *0xbb44b0 = 0x6b;\n    *0xbb44b4 = 0x72;\n    uStack136 = 0xbb44b0;\n    *0xbb44bc = 0x320033;\n    *0xbb44c4 = 0x6c006c;\n    *0xbb44b6 = 0x6e;\n    *0xbb44b8 = 0x6c0065;\n    *0xbb44c0 = 0x64002e;\n    *0xbb44b2 = 0x65;\n    *0xbb44c8 = 0;\n    uStack140 = 0x41f200;\n    *0xbb44ac = (*_sym.imp.KERNEL32.dll_GetModuleHandleW)();\n    uStack104 = 0x605fdad6;\n    uStack48 = 0x3e1d73b5;\n    uStack116 = 0x748a784f;\n    uStack32 = 0x406ee06d;\n    uStack40 = 0x792cf4fa;\n    uStack28 = 0x1681d686;\n    uStack132 = 0x7f744a26;\n    uStack92 = 0x108aa678;\n    uStack64 = 0x2e8d3777;\n    uStack52 = 0x14922f4a;\n    uStack88 = 0x7cab3473;\n    uStack72 = 0x6cac10f2;\n    uStack12 = 0x51eed42d;\n    uStack96 = 0x71cc1e05;\n    uStack16 = 0x17a9a17f;\n    uStack36 = 0xb5fde22;\n    uStack44 = 0x22efe4df;\n    uStack20 = 0xee8079d;\n    uStack60 = 0x2783b42c;\n    uStack120 = 0x77340acd;\n    uStack24 = 0x249a0894;\n    uStack100 = 0x7ded3f3b;\n    uStack124 = 0xd271138d;\n    uStack84 = 0x6df36692;\n    uStack8 = 0x6ce68e74;\n    uStack128 = 0x68f0afd9;\n    uStack112 = 0x1b7f9e8e;\n    uStack80 = 0xd4344e33;\n    uStack76 = 0x9be5cfa;\n    uStack68 = 0x12698b6f;\n    uStack56 = 0xc67ffdbb;\n    uStack108 = 0xfc4e5034;\n    uStack140 = 0x814398;\n    *0x8143a3 = 0x65;\n    *0x814399 = 0x75747269;\n    *0x81439d = 0x6c61;\n    *0x814398 = 0x56;\n    *0x8143a4 = 0x7463;\n    *0x8143a6 = 0;\n    *0x81439f = 0x746f7250;\n    uStack144 = *0xbb44ac;\n    *0x814394 = (*_sym.imp.KERNEL32.dll_GetProcAddress)();\n    (**0x814394)(*0xbb1500, *0xbb5090, 0x40, &stack0xffffff70);\n    return;\n}\n",
        "token_count": 997
    },
    "0041f630": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041f630(void)\n\n{\n    return;\n}\n",
        "token_count": 16
    },
    "0041f650": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041f650(void)\n\n{\n    int32_t unaff_ESI;\n    \n    fcn.0041e800();\n    if (*0xbb5090 == 0x37) {\n        (*_sym.imp.KERNEL32.dll_GetDriveTypeA)();\n        (*_sym.imp.KERNEL32.dll_GetNamedPipeHandleStateA)();\n        (*_sym.imp.KERNEL32.dll_DeleteFileA)();\n        (*_sym.imp.KERNEL32.dll_GetModuleFileNameA)();\n        (*_sym.imp.KERNEL32.dll_RemoveDirectoryA)();\n        (*_sym.imp.KERNEL32.dll_GetPrivateProfileIntW)();\n        (*_sym.imp.KERNEL32.dll_SetTapePosition)();\n        (*_sym.imp.KERNEL32.dll_GetConsoleWindow)();\n        (*_sym.imp.KERNEL32.dll_FindNextVolumeMountPointW)();\n    }\n    *(*0xbb1500 + unaff_ESI) = *(*0xbb5094 + 0x38d6 + unaff_ESI);\n    return;\n}\n",
        "token_count": 210
    },
    "00420a00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nchar * __cdecl fcn.00420a00(char *arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    char *pcVar3;\n    char *pcVar4;\n    \n    iVar2 = -1;\n    do {\n        pcVar4 = arg_8h;\n        if (iVar2 == 0) break;\n        iVar2 = iVar2 + -1;\n        pcVar4 = arg_8h + 1;\n        cVar1 = *arg_8h;\n        arg_8h = pcVar4;\n    } while (cVar1 != '\\0');\n    iVar2 = -(iVar2 + 1);\n    pcVar4 = pcVar4 + -1;\n    do {\n        pcVar3 = pcVar4;\n        if (iVar2 == 0) break;\n        iVar2 = iVar2 + -1;\n        pcVar3 = pcVar4 + -1;\n        cVar1 = *pcVar4;\n        pcVar4 = pcVar3;\n    } while (arg_ch != cVar1);\n    pcVar3 = pcVar3 + 1;\n    if (*pcVar3 != arg_ch) {\n        pcVar3 = NULL;\n    }\n    return pcVar3;\n}\n",
        "token_count": 275
    },
    "00420ad5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00420ad5(uint arg_8h, uint arg_ch)\n\n{\n    fcn.00420a2d(arg_8h, arg_ch, 0);\n    return;\n}\n",
        "token_count": 46
    },
    "00420c54": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00420c54(uint arg_8h, uint arg_ch)\n\n{\n    fcn.00420bac(arg_8h, arg_ch, 0);\n    return;\n}\n",
        "token_count": 44
    },
    "00407d10": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid fcn.00407d10(void)\n\n{\n    int32_t unaff_ESI;\n    \n    *(unaff_ESI + 0x10) = unaff_ESI + 8;\n    *(unaff_ESI + 0x14) = unaff_ESI + 0xc;\n    *(unaff_ESI + 0x20) = unaff_ESI + 0x18;\n    *(unaff_ESI + 0x24) = unaff_ESI + 0x1c;\n    *(unaff_ESI + 0x30) = unaff_ESI + 0x28;\n    *(unaff_ESI + 0x34) = unaff_ESI + 0x2c;\n    fcn.004072d0();\n    fcn.00407260();\n    return;\n}\n",
        "token_count": 180
    },
    "004082f0": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004082f0(int32_t param_1)\n\n{\n    int32_t unaff_EBX;\n    \n    if (unaff_EBX != param_1) {\n        do {\n            param_1 = param_1 + -0x1c;\n            fcn.004078a0();\n        } while (param_1 != unaff_EBX);\n    }\n    return;\n}\n",
        "token_count": 88
    },
    "0040ca2c": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040ca2c(int32_t arg_8h)\n\n{\n    if ((arg_8h != 0) && (*(arg_8h + -8) == 0xdddd)) {\n        fcn.00409ef1(arg_8h + -8);\n    }\n    return;\n}\n",
        "token_count": 71
    },
    "0041ef65": {
        "rules": [
            "create or open file"
        ],
        "decompiled_code": "\nvoid fcn.0041ef65(void)\n\n{\n    *0x4280e0 = (*_sym.imp.KERNEL32.dll_CreateFileW)(0x4042cc, 0x40000000, 3, 0, 3, 0, 0);\n    return;\n}\n",
        "token_count": 65
    },
    "00405640": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.00405640(char *param_1)\n\n{\n    char *pcVar1;\n    char cVar2;\n    \n    pcVar1 = param_1 + 1;\n    do {\n        cVar2 = *param_1;\n        param_1 = param_1 + 1;\n    } while (cVar2 != '\\0');\n    return param_1 - pcVar1;\n}\n",
        "token_count": 90
    },
    "00405660": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint * fcn.00405660(uint *param_1, uint *param_2, uint32_t param_3)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint uVar3;\n    uint uVar4;\n    uint uVar5;\n    uint uVar6;\n    uint uVar7;\n    uint uVar8;\n    uint uVar9;\n    uint uVar10;\n    uint uVar11;\n    uint uVar12;\n    uint uVar13;\n    uint uVar14;\n    uint uVar15;\n    uint32_t uVar16;\n    uint32_t uVar17;\n    uint *puVar18;\n    \n    if ((param_2 < param_1) && (param_1 < param_3 + param_2)) {\n        param_2 = (param_3 - 4) + param_2;\n        puVar18 = (param_3 - 4) + param_1;\n        if ((puVar18 & 3) == 0) {\n            uVar16 = param_3 >> 2;\n            if (uVar16 < 8) goto code_r0x0040aea8;\n            for (; uVar16 != 0; uVar16 = uVar16 - 1) {\n                *puVar18 = *param_2;\n                param_2 = param_2 + -1;\n                puVar18 = puVar18 + -1;\n            }\n            switch(param_3 & 3) {\n            case 1:\n                goto code_r0x0040afe4;\n            case 2:\n                goto code_r0x0040aff4;\n            case 3:\n                goto code_r0x0040b008;\n            }\n        }\n        else {\n            switch(param_3) {\n            case 0:\n                break;\n            case 1:\ncode_r0x0040afe4:\n                *(puVar18 + 3) = *(param_2 + 3);\n                return param_1;\n            case 2:\ncode_r0x0040aff4:\n                *(puVar18 + 3) = *(param_2 + 3);\n                *(puVar18 + 2) = *(param_2 + 2);\n                return param_1;\n            case 3:\ncode_r0x0040b008:\n                *(puVar18 + 3) = *(param_2 + 3);\n                *(puVar18 + 2) = *(param_2 + 2);\n                *(puVar18 + 1) = *(param_2 + 1);\n                return param_1;\n            default:\n                param_3 = param_3 - (puVar18 & 3);\n                switch(puVar18 & 3) {\n                case 1:\n                    *(puVar18 + 3) = *(param_2 + 3);\n                    param_2 = param_2 + -1;\n                    uVar16 = param_3 >> 2;\n                    puVar18 = puVar18 - 1;\n                    if (uVar16 < 8) {\ncode_r0x0040aea8:\n    // WARNING: Could not recover jumptable at 0x0040aeaa. Too many branches\n    // WARNING: Treating indirect jump as call\n                        puVar18 = (**(uVar16 * -4 + 0x40af7c))();\n                        return puVar18;\n                    }\n                    for (; uVar16 != 0; uVar16 = uVar16 - 1) {\n                        *puVar18 = *param_2;\n                        param_2 = param_2 + -1;\n                        puVar18 = puVar18 + -1;\n                    }\n                    switch(param_3 & 3) {\n                    case 1:\n                        goto code_r0x0040afe4;\n                    case 2:\n                        goto code_r0x0040aff4;\n                    case 3:\n                        goto code_r0x0040b008;\n                    }\n                    break;\n                case 2:\n                    *(puVar18 + 3) = *(param_2 + 3);\n                    uVar16 = param_3 >> 2;\n                    *(puVar18 + 2) = *(param_2 + 2);\n                    param_2 = param_2 + -2;\n                    puVar18 = puVar18 - 2;\n                    if (uVar16 < 8) goto code_r0x0040aea8;\n                    for (; uVar16 != 0; uVar16 = uVar16 - 1) {\n                        *puVar18 = *param_2;\n                        param_2 = param_2 + -1;\n                        puVar18 = puVar18 + -1;\n                    }\n                    switch(param_3 & 3) {\n                    case 1:\n                        goto code_r0x0040afe4;\n                    case 2:\n                        goto code_r0x0040aff4;\n                    case 3:\n                        goto code_r0x0040b008;\n                    }\n                    break;\n                case 3:\n                    *(puVar18 + 3) = *(param_2 + 3);\n                    *(puVar18 + 2) = *(param_2 + 2);\n                    uVar16 = param_3 >> 2;\n                    *(puVar18 + 1) = *(param_2 + 1);\n                    param_2 = param_2 + -3;\n                    puVar18 = puVar18 - 3;\n                    if (uVar16 < 8) goto code_r0x0040aea8;\n                    for (; uVar16 != 0; uVar16 = uVar16 - 1) {\n                        *puVar18 = *param_2;\n                        param_2 = param_2 + -1;\n                        puVar18 = puVar18 + -1;\n                    }\n                    switch(param_3 & 3) {\n                    case 1:\n                        goto code_r0x0040afe4;\n                    case 2:\n                        goto code_r0x0040aff4;\n                    case 3:\n                        goto code_r0x0040b008;\n                    }\n                }\n            }\n        }\n        return param_1;\n    }\n    if (((0x7f < param_3) && (*0xbb61f8 != 0)) && ((param_1 & 0xf) == (param_2 & 0xf))) {\n        puVar18 = param_1;\n        if ((param_2 & 0xf) != 0) {\n            uVar17 = 0x10 - (param_2 & 0xf);\n            param_3 = param_3 - uVar17;\n            for (uVar16 = uVar17 & 3; uVar16 != 0; uVar16 = uVar16 - 1) {\n                *puVar18 = *param_2;\n                param_2 = param_2 + 1;\n                puVar18 = puVar18 + 1;\n            }\n            for (uVar17 = uVar17 >> 2; uVar17 != 0; uVar17 = uVar17 - 1) {\n                *puVar18 = *param_2;\n                param_2 = param_2 + 1;\n                puVar18 = puVar18 + 1;\n            }\n        }\n        for (uVar16 = param_3 >> 7; uVar16 != 0; uVar16 = uVar16 - 1) {\n            uVar1 = param_2[1];\n            uVar2 = param_2[2];\n            uVar3 = param_2[3];\n            uVar4 = param_2[4];\n            uVar5 = param_2[5];\n            uVar6 = param_2[6];\n            uVar7 = param_2[7];\n            uVar8 = param_2[8];\n            uVar9 = param_2[9];\n            uVar10 = param_2[10];\n            uVar11 = param_2[0xb];\n            uVar12 = param_2[0xc];\n            uVar13 = param_2[0xd];\n            uVar14 = param_2[0xe];\n            uVar15 = param_2[0xf];\n            *puVar18 = *param_2;\n            puVar18[1] = uVar1;\n            puVar18[2] = uVar2;\n            puVar18[3] = uVar3;\n            puVar18[4] = uVar4;\n            puVar18[5] = uVar5;\n            puVar18[6] = uVar6;\n            puVar18[7] = uVar7;\n            puVar18[8] = uVar8;\n            puVar18[9] = uVar9;\n            puVar18[10] = uVar10;\n            puVar18[0xb] = uVar11;\n            puVar18[0xc] = uVar12;\n            puVar18[0xd] = uVar13;\n            puVar18[0xe] = uVar14;\n            puVar18[0xf] = uVar15;\n            uVar1 = param_2[0x11];\n            uVar2 = param_2[0x12];\n            uVar3 = param_2[0x13];\n            uVar4 = param_2[0x14];\n            uVar5 = param_2[0x15];\n            uVar6 = param_2[0x16];\n            uVar7 = param_2[0x17];\n            uVar8 = param_2[0x18];\n            uVar9 = param_2[0x19];\n            uVar10 = param_2[0x1a];\n            uVar11 = param_2[0x1b];\n            uVar12 = param_2[0x1c];\n            uVar13 = param_2[0x1d];\n            uVar14 = param_2[0x1e];\n            uVar15 = param_2[0x1f];\n            puVar18[0x10] = param_2[0x10];\n            puVar18[0x11] = uVar1;\n            puVar18[0x12] = uVar2;\n            puVar18[0x13] = uVar3;\n            puVar18[0x14] = uVar4;\n            puVar18[0x15] = uVar5;\n            puVar18[0x16] = uVar6;\n            puVar18[0x17] = uVar7;\n            puVar18[0x18] = uVar8;\n            puVar18[0x19] = uVar9;\n            puVar18[0x1a] = uVar10;\n            puVar18[0x1b] = uVar11;\n            puVar18[0x1c] = uVar12;\n            puVar18[0x1d] = uVar13;\n            puVar18[0x1e] = uVar14;\n            puVar18[0x1f] = uVar15;\n            param_2 = param_2 + 0x20;\n            puVar18 = puVar18 + 0x20;\n        }\n        if ((param_3 & 0x7f) != 0) {\n            for (uVar16 = (param_3 & 0x7f) >> 4; uVar16 != 0; uVar16 = uVar16 - 1) {\n                uVar1 = param_2[1];\n                uVar2 = param_2[2];\n                uVar3 = param_2[3];\n                *puVar18 = *param_2;\n                puVar18[1] = uVar1;\n                puVar18[2] = uVar2;\n                puVar18[3] = uVar3;\n                param_2 = param_2 + 4;\n                puVar18 = puVar18 + 4;\n            }\n            if ((param_3 & 0xf) != 0) {\n                for (uVar16 = (param_3 & 0xf) >> 2; uVar16 != 0; uVar16 = uVar16 - 1) {\n                    *puVar18 = *param_2;\n                    param_2 = param_2 + 1;\n                    puVar18 = puVar18 + 1;\n                }\n                for (param_3 = param_3 & 3; param_3 != 0; param_3 = param_3 - 1) {\n                    *puVar18 = *param_2;\n                    param_2 = param_2 + 1;\n                    puVar18 = puVar18 + 1;\n                }\n            }\n        }\n        return param_1;\n    }\n    puVar18 = param_1;\n    if ((param_1 & 3) == 0) {\n        uVar17 = param_3 >> 2;\n        if (uVar17 < 8) goto code_r0x0040ad40;\n        for (; uVar17 != 0; uVar17 = uVar17 - 1) {\n            *puVar18 = *param_2;\n            param_2 = param_2 + 1;\n            puVar18 = puVar18 + 1;\n        }\n        switch(param_3 & 3) {\n        case 1:\n            goto code_r0x0040ae48;\n        case 2:\n            goto code_r0x0040ae54;\n        case 3:\n            goto code_r0x0040ae68;\n        }\n    }\n    else {\n        switch(param_3) {\n        case 0:\n            break;\n        case 1:\ncode_r0x0040ae48:\n            *puVar18 = *param_2;\n            return param_1;\n        case 2:\ncode_r0x0040ae54:\n            *puVar18 = *param_2;\n            *(puVar18 + 1) = *(param_2 + 1);\n            return param_1;\n        case 3:\ncode_r0x0040ae68:\n            *puVar18 = *param_2;\n            *(puVar18 + 1) = *(param_2 + 1);\n            *(puVar18 + 2) = *(param_2 + 2);\n            return param_1;\n        default:\n            uVar16 = (param_3 - 4) + (param_1 & 3);\n            switch(param_1 & 3) {\n            case 1:\n                *param_1 = *param_2;\n                *(param_1 + 1) = *(param_2 + 1);\n                uVar17 = uVar16 >> 2;\n                *(param_1 + 2) = *(param_2 + 2);\n                param_2 = param_2 + 3;\n                puVar18 = param_1 + 3;\n                if (uVar17 < 8) {\ncode_r0x0040ad40:\n    // WARNING: Could not recover jumptable at 0x0040ad40. Too many branches\n    // WARNING: Treating indirect jump as call\n                    puVar18 = (**(uVar17 * 4 + 0x40adc4))();\n                    return puVar18;\n                }\n                for (; uVar17 != 0; uVar17 = uVar17 - 1) {\n                    *puVar18 = *param_2;\n                    param_2 = param_2 + 1;\n                    puVar18 = puVar18 + 1;\n                }\n                switch(uVar16 & 3) {\n                case 1:\n                    goto code_r0x0040ae48;\n                case 2:\n                    goto code_r0x0040ae54;\n                case 3:\n                    goto code_r0x0040ae68;\n                }\n                break;\n            case 2:\n                *param_1 = *param_2;\n                uVar17 = uVar16 >> 2;\n                *(param_1 + 1) = *(param_2 + 1);\n                param_2 = param_2 + 2;\n                puVar18 = param_1 + 2;\n                if (uVar17 < 8) goto code_r0x0040ad40;\n                for (; uVar17 != 0; uVar17 = uVar17 - 1) {\n                    *puVar18 = *param_2;\n                    param_2 = param_2 + 1;\n                    puVar18 = puVar18 + 1;\n                }\n                switch(uVar16 & 3) {\n                case 1:\n                    goto code_r0x0040ae48;\n                case 2:\n                    goto code_r0x0040ae54;\n                case 3:\n                    goto code_r0x0040ae68;\n                }\n                break;\n            case 3:\n                *param_1 = *param_2;\n                uVar17 = uVar16 >> 2;\n                param_2 = param_2 + 1;\n                puVar18 = param_1 + 1;\n                if (uVar17 < 8) goto code_r0x0040ad40;\n                for (; uVar17 != 0; uVar17 = uVar17 - 1) {\n                    *puVar18 = *param_2;\n                    param_2 = param_2 + 1;\n                    puVar18 = puVar18 + 1;\n                }\n                switch(uVar16 & 3) {\n                case 1:\n                    goto code_r0x0040ae48;\n                case 2:\n                    goto code_r0x0040ae54;\n                case 3:\n                    goto code_r0x0040ae68;\n                }\n            }\n        }\n    }\n    return param_1;\n}\n",
        "token_count": 3856
    },
    "00405670": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint * fcn.00405670(uint *param_1, uint *param_2, uint32_t param_3)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint uVar3;\n    uint uVar4;\n    uint uVar5;\n    uint uVar6;\n    uint uVar7;\n    uint uVar8;\n    uint uVar9;\n    uint uVar10;\n    uint uVar11;\n    uint uVar12;\n    uint uVar13;\n    uint uVar14;\n    uint uVar15;\n    uint32_t uVar16;\n    uint32_t uVar17;\n    uint *puVar18;\n    \n    if ((param_2 < param_1) && (param_1 < param_3 + param_2)) {\n        param_2 = (param_3 - 4) + param_2;\n        puVar18 = (param_3 - 4) + param_1;\n        if ((puVar18 & 3) == 0) {\n            uVar16 = param_3 >> 2;\n            if (uVar16 < 8) goto code_r0x00409d78;\n            for (; uVar16 != 0; uVar16 = uVar16 - 1) {\n                *puVar18 = *param_2;\n                param_2 = param_2 + -1;\n                puVar18 = puVar18 + -1;\n            }\n            switch(param_3 & 3) {\n            case 1:\n                goto code_r0x00409eb4;\n            case 2:\n                goto code_r0x00409ec4;\n            case 3:\n                goto code_r0x00409ed8;\n            }\n        }\n        else {\n            switch(param_3) {\n            case 0:\n                break;\n            case 1:\ncode_r0x00409eb4:\n                *(puVar18 + 3) = *(param_2 + 3);\n                return param_1;\n            case 2:\ncode_r0x00409ec4:\n                *(puVar18 + 3) = *(param_2 + 3);\n                *(puVar18 + 2) = *(param_2 + 2);\n                return param_1;\n            case 3:\ncode_r0x00409ed8:\n                *(puVar18 + 3) = *(param_2 + 3);\n                *(puVar18 + 2) = *(param_2 + 2);\n                *(puVar18 + 1) = *(param_2 + 1);\n                return param_1;\n            default:\n                param_3 = param_3 - (puVar18 & 3);\n                switch(puVar18 & 3) {\n                case 1:\n                    *(puVar18 + 3) = *(param_2 + 3);\n                    param_2 = param_2 + -1;\n                    uVar16 = param_3 >> 2;\n                    puVar18 = puVar18 - 1;\n                    if (uVar16 < 8) {\ncode_r0x00409d78:\n    // WARNING: Could not recover jumptable at 0x00409d7a. Too many branches\n    // WARNING: Treating indirect jump as call\n                        puVar18 = (**(uVar16 * -4 + 0x409e4c))();\n                        return puVar18;\n                    }\n                    for (; uVar16 != 0; uVar16 = uVar16 - 1) {\n                        *puVar18 = *param_2;\n                        param_2 = param_2 + -1;\n                        puVar18 = puVar18 + -1;\n                    }\n                    switch(param_3 & 3) {\n                    case 1:\n                        goto code_r0x00409eb4;\n                    case 2:\n                        goto code_r0x00409ec4;\n                    case 3:\n                        goto code_r0x00409ed8;\n                    }\n                    break;\n                case 2:\n                    *(puVar18 + 3) = *(param_2 + 3);\n                    uVar16 = param_3 >> 2;\n                    *(puVar18 + 2) = *(param_2 + 2);\n                    param_2 = param_2 + -2;\n                    puVar18 = puVar18 - 2;\n                    if (uVar16 < 8) goto code_r0x00409d78;\n                    for (; uVar16 != 0; uVar16 = uVar16 - 1) {\n                        *puVar18 = *param_2;\n                        param_2 = param_2 + -1;\n                        puVar18 = puVar18 + -1;\n                    }\n                    switch(param_3 & 3) {\n                    case 1:\n                        goto code_r0x00409eb4;\n                    case 2:\n                        goto code_r0x00409ec4;\n                    case 3:\n                        goto code_r0x00409ed8;\n                    }\n                    break;\n                case 3:\n                    *(puVar18 + 3) = *(param_2 + 3);\n                    *(puVar18 + 2) = *(param_2 + 2);\n                    uVar16 = param_3 >> 2;\n                    *(puVar18 + 1) = *(param_2 + 1);\n                    param_2 = param_2 + -3;\n                    puVar18 = puVar18 - 3;\n                    if (uVar16 < 8) goto code_r0x00409d78;\n                    for (; uVar16 != 0; uVar16 = uVar16 - 1) {\n                        *puVar18 = *param_2;\n                        param_2 = param_2 + -1;\n                        puVar18 = puVar18 + -1;\n                    }\n                    switch(param_3 & 3) {\n                    case 1:\n                        goto code_r0x00409eb4;\n                    case 2:\n                        goto code_r0x00409ec4;\n                    case 3:\n                        goto code_r0x00409ed8;\n                    }\n                }\n            }\n        }\n        return param_1;\n    }\n    if (((0x7f < param_3) && (*0xbb61f8 != 0)) && ((param_1 & 0xf) == (param_2 & 0xf))) {\n        puVar18 = param_1;\n        if ((param_2 & 0xf) != 0) {\n            uVar17 = 0x10 - (param_2 & 0xf);\n            param_3 = param_3 - uVar17;\n            for (uVar16 = uVar17 & 3; uVar16 != 0; uVar16 = uVar16 - 1) {\n                *puVar18 = *param_2;\n                param_2 = param_2 + 1;\n                puVar18 = puVar18 + 1;\n            }\n            for (uVar17 = uVar17 >> 2; uVar17 != 0; uVar17 = uVar17 - 1) {\n                *puVar18 = *param_2;\n                param_2 = param_2 + 1;\n                puVar18 = puVar18 + 1;\n            }\n        }\n        for (uVar16 = param_3 >> 7; uVar16 != 0; uVar16 = uVar16 - 1) {\n            uVar1 = param_2[1];\n            uVar2 = param_2[2];\n            uVar3 = param_2[3];\n            uVar4 = param_2[4];\n            uVar5 = param_2[5];\n            uVar6 = param_2[6];\n            uVar7 = param_2[7];\n            uVar8 = param_2[8];\n            uVar9 = param_2[9];\n            uVar10 = param_2[10];\n            uVar11 = param_2[0xb];\n            uVar12 = param_2[0xc];\n            uVar13 = param_2[0xd];\n            uVar14 = param_2[0xe];\n            uVar15 = param_2[0xf];\n            *puVar18 = *param_2;\n            puVar18[1] = uVar1;\n            puVar18[2] = uVar2;\n            puVar18[3] = uVar3;\n            puVar18[4] = uVar4;\n            puVar18[5] = uVar5;\n            puVar18[6] = uVar6;\n            puVar18[7] = uVar7;\n            puVar18[8] = uVar8;\n            puVar18[9] = uVar9;\n            puVar18[10] = uVar10;\n            puVar18[0xb] = uVar11;\n            puVar18[0xc] = uVar12;\n            puVar18[0xd] = uVar13;\n            puVar18[0xe] = uVar14;\n            puVar18[0xf] = uVar15;\n            uVar1 = param_2[0x11];\n            uVar2 = param_2[0x12];\n            uVar3 = param_2[0x13];\n            uVar4 = param_2[0x14];\n            uVar5 = param_2[0x15];\n            uVar6 = param_2[0x16];\n            uVar7 = param_2[0x17];\n            uVar8 = param_2[0x18];\n            uVar9 = param_2[0x19];\n            uVar10 = param_2[0x1a];\n            uVar11 = param_2[0x1b];\n            uVar12 = param_2[0x1c];\n            uVar13 = param_2[0x1d];\n            uVar14 = param_2[0x1e];\n            uVar15 = param_2[0x1f];\n            puVar18[0x10] = param_2[0x10];\n            puVar18[0x11] = uVar1;\n            puVar18[0x12] = uVar2;\n            puVar18[0x13] = uVar3;\n            puVar18[0x14] = uVar4;\n            puVar18[0x15] = uVar5;\n            puVar18[0x16] = uVar6;\n            puVar18[0x17] = uVar7;\n            puVar18[0x18] = uVar8;\n            puVar18[0x19] = uVar9;\n            puVar18[0x1a] = uVar10;\n            puVar18[0x1b] = uVar11;\n            puVar18[0x1c] = uVar12;\n            puVar18[0x1d] = uVar13;\n            puVar18[0x1e] = uVar14;\n            puVar18[0x1f] = uVar15;\n            param_2 = param_2 + 0x20;\n            puVar18 = puVar18 + 0x20;\n        }\n        if ((param_3 & 0x7f) != 0) {\n            for (uVar16 = (param_3 & 0x7f) >> 4; uVar16 != 0; uVar16 = uVar16 - 1) {\n                uVar1 = param_2[1];\n                uVar2 = param_2[2];\n                uVar3 = param_2[3];\n                *puVar18 = *param_2;\n                puVar18[1] = uVar1;\n                puVar18[2] = uVar2;\n                puVar18[3] = uVar3;\n                param_2 = param_2 + 4;\n                puVar18 = puVar18 + 4;\n            }\n            if ((param_3 & 0xf) != 0) {\n                for (uVar16 = (param_3 & 0xf) >> 2; uVar16 != 0; uVar16 = uVar16 - 1) {\n                    *puVar18 = *param_2;\n                    param_2 = param_2 + 1;\n                    puVar18 = puVar18 + 1;\n                }\n                for (param_3 = param_3 & 3; param_3 != 0; param_3 = param_3 - 1) {\n                    *puVar18 = *param_2;\n                    param_2 = param_2 + 1;\n                    puVar18 = puVar18 + 1;\n                }\n            }\n        }\n        return param_1;\n    }\n    puVar18 = param_1;\n    if ((param_1 & 3) == 0) {\n        uVar17 = param_3 >> 2;\n        if (uVar17 < 8) goto code_r0x00409c10;\n        for (; uVar17 != 0; uVar17 = uVar17 - 1) {\n            *puVar18 = *param_2;\n            param_2 = param_2 + 1;\n            puVar18 = puVar18 + 1;\n        }\n        switch(param_3 & 3) {\n        case 1:\n            goto code_r0x00409d18;\n        case 2:\n            goto code_r0x00409d24;\n        case 3:\n            goto code_r0x00409d38;\n        }\n    }\n    else {\n        switch(param_3) {\n        case 0:\n            break;\n        case 1:\ncode_r0x00409d18:\n            *puVar18 = *param_2;\n            return param_1;\n        case 2:\ncode_r0x00409d24:\n            *puVar18 = *param_2;\n            *(puVar18 + 1) = *(param_2 + 1);\n            return param_1;\n        case 3:\ncode_r0x00409d38:\n            *puVar18 = *param_2;\n            *(puVar18 + 1) = *(param_2 + 1);\n            *(puVar18 + 2) = *(param_2 + 2);\n            return param_1;\n        default:\n            uVar16 = (param_3 - 4) + (param_1 & 3);\n            switch(param_1 & 3) {\n            case 1:\n                *param_1 = *param_2;\n                *(param_1 + 1) = *(param_2 + 1);\n                uVar17 = uVar16 >> 2;\n                *(param_1 + 2) = *(param_2 + 2);\n                param_2 = param_2 + 3;\n                puVar18 = param_1 + 3;\n                if (uVar17 < 8) {\ncode_r0x00409c10:\n    // WARNING: Could not recover jumptable at 0x00409c10. Too many branches\n    // WARNING: Treating indirect jump as call\n                    puVar18 = (**(uVar17 * 4 + 0x409c94))();\n                    return puVar18;\n                }\n                for (; uVar17 != 0; uVar17 = uVar17 - 1) {\n                    *puVar18 = *param_2;\n                    param_2 = param_2 + 1;\n                    puVar18 = puVar18 + 1;\n                }\n                switch(uVar16 & 3) {\n                case 1:\n                    goto code_r0x00409d18;\n                case 2:\n                    goto code_r0x00409d24;\n                case 3:\n                    goto code_r0x00409d38;\n                }\n                break;\n            case 2:\n                *param_1 = *param_2;\n                uVar17 = uVar16 >> 2;\n                *(param_1 + 1) = *(param_2 + 1);\n                param_2 = param_2 + 2;\n                puVar18 = param_1 + 2;\n                if (uVar17 < 8) goto code_r0x00409c10;\n                for (; uVar17 != 0; uVar17 = uVar17 - 1) {\n                    *puVar18 = *param_2;\n                    param_2 = param_2 + 1;\n                    puVar18 = puVar18 + 1;\n                }\n                switch(uVar16 & 3) {\n                case 1:\n                    goto code_r0x00409d18;\n                case 2:\n                    goto code_r0x00409d24;\n                case 3:\n                    goto code_r0x00409d38;\n                }\n                break;\n            case 3:\n                *param_1 = *param_2;\n                uVar17 = uVar16 >> 2;\n                param_2 = param_2 + 1;\n                puVar18 = param_1 + 1;\n                if (uVar17 < 8) goto code_r0x00409c10;\n                for (; uVar17 != 0; uVar17 = uVar17 - 1) {\n                    *puVar18 = *param_2;\n                    param_2 = param_2 + 1;\n                    puVar18 = puVar18 + 1;\n                }\n                switch(uVar16 & 3) {\n                case 1:\n                    goto code_r0x00409d18;\n                case 2:\n                    goto code_r0x00409d24;\n                case 3:\n                    goto code_r0x00409d38;\n                }\n            }\n        }\n    }\n    return param_1;\n}\n",
        "token_count": 3857
    },
    "0040e95a": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0040e95a(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *arg_8h_00;\n    int32_t *piVar3;\n    int32_t *piVar4;\n    int32_t unaff_EBP;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.0040e210(0x425850, 0xc);\n    fcn.00412cd5(0xe);\n    *(unaff_EBP + -4) = 0;\n    arg_8h_00 = *0x813d3c;\n    iVar1 = *(unaff_EBP + 8);\n    iVar2 = *(iVar1 + 4);\n    if (iVar2 != 0) {\n        piVar3 = 0x813d38;\n        do {\n            piVar4 = piVar3;\n            *(unaff_EBP + -0x1c) = arg_8h_00;\n            if (arg_8h_00 == NULL) goto code_r0x0040e99e;\n            piVar3 = arg_8h_00;\n        } while (*arg_8h_00 != iVar2);\n        piVar4[1] = arg_8h_00[1];\n        fcn.00409ef1(arg_8h_00);\ncode_r0x0040e99e:\n        fcn.00409ef1(*(iVar1 + 4));\n        *(iVar1 + 4) = 0;\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    fcn.0040e9c1();\n    fcn.0040e255();\n    return;\n}\n",
        "token_count": 402
    },
    "004098eb": {
        "rules": [
            "move file"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004098eb(uint lpExistingFileName, uint lpNewFileName)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_MoveFileA)(lpExistingFileName, lpNewFileName);\n    if (iVar1 == 0) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    else {\n        iVar1 = 0;\n    }\n    if (iVar1 != 0) {\n        fcn.0040a6c5(iVar1);\n        return 0xffffffff;\n    }\n    return 0;\n}\n",
        "token_count": 130
    },
    "0041f158": {
        "rules": [
            "delete file"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041f158(uint lpFileName)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_DeleteFileA)(lpFileName);\n    if (iVar1 == 0) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    else {\n        iVar1 = 0;\n    }\n    if (iVar1 != 0) {\n        fcn.0040a6c5(iVar1);\n        return 0xffffffff;\n    }\n    return 0;\n}\n",
        "token_count": 120
    }
}